<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="1226"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0816%" y="597" width="0.0816%" height="15" fill="rgb(213,45,22)" fg:x="1" fg:w="1"/><text x="0.3316%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1631%" y="597" width="0.0816%" height="15" fill="rgb(252,154,5)" fg:x="2" fg:w="1"/><text x="0.4131%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1631%" y="581" width="0.0816%" height="15" fill="rgb(221,79,52)" fg:x="2" fg:w="1"/><text x="0.4131%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2447%" y="565" width="0.1631%" height="15" fill="rgb(229,220,36)" fg:x="3" fg:w="2"/><text x="0.4947%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4894%" y="517" width="0.0816%" height="15" fill="rgb(211,17,16)" fg:x="6" fg:w="1"/><text x="0.7394%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.6525%" y="485" width="0.1631%" height="15" fill="rgb(222,55,31)" fg:x="8" fg:w="2"/><text x="0.9025%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8157%" y="469" width="0.1631%" height="15" fill="rgb(221,221,31)" fg:x="10" fg:w="2"/><text x="1.0657%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="0.8972%" y="453" width="0.0816%" height="15" fill="rgb(227,168,26)" fg:x="11" fg:w="1"/><text x="1.1472%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8972%" y="437" width="0.0816%" height="15" fill="rgb(224,139,9)" fg:x="11" fg:w="1"/><text x="1.1472%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.9788%" y="469" width="0.2447%" height="15" fill="rgb(254,172,0)" fg:x="12" fg:w="3"/><text x="1.2288%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.2235%" y="469" width="0.1631%" height="15" fill="rgb(235,203,1)" fg:x="15" fg:w="2"/><text x="1.4735%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2235%" y="453" width="0.1631%" height="15" fill="rgb(216,205,24)" fg:x="15" fg:w="2"/><text x="1.4735%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.3866%" y="453" width="0.0816%" height="15" fill="rgb(233,24,6)" fg:x="17" fg:w="1"/><text x="1.6366%" y="463.50"></text></g><g><title>__libc_free (4 samples, 0.33%)</title><rect x="1.4682%" y="453" width="0.3263%" height="15" fill="rgb(244,110,9)" fg:x="18" fg:w="4"/><text x="1.7182%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7945%" y="453" width="0.0816%" height="15" fill="rgb(239,222,42)" fg:x="22" fg:w="1"/><text x="2.0445%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7945%" y="437" width="0.0816%" height="15" fill="rgb(218,145,13)" fg:x="22" fg:w="1"/><text x="2.0445%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8760%" y="437" width="0.0816%" height="15" fill="rgb(207,69,11)" fg:x="23" fg:w="1"/><text x="2.1260%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8760%" y="421" width="0.0816%" height="15" fill="rgb(220,223,22)" fg:x="23" fg:w="1"/><text x="2.1260%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.63%)</title><rect x="0.4894%" y="549" width="1.6313%" height="15" fill="rgb(245,102,5)" fg:x="6" fg:w="20"/><text x="0.7394%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.63%)</title><rect x="0.4894%" y="533" width="1.6313%" height="15" fill="rgb(211,148,2)" fg:x="6" fg:w="20"/><text x="0.7394%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (19 samples, 1.55%)</title><rect x="0.5710%" y="517" width="1.5498%" height="15" fill="rgb(241,13,44)" fg:x="7" fg:w="19"/><text x="0.8210%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.55%)</title><rect x="0.5710%" y="501" width="1.5498%" height="15" fill="rgb(219,137,21)" fg:x="7" fg:w="19"/><text x="0.8210%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.31%)</title><rect x="0.8157%" y="485" width="1.3051%" height="15" fill="rgb(242,206,5)" fg:x="10" fg:w="16"/><text x="1.0657%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="1.3866%" y="469" width="0.7341%" height="15" fill="rgb(217,114,22)" fg:x="17" fg:w="9"/><text x="1.6366%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.8760%" y="453" width="0.2447%" height="15" fill="rgb(253,206,42)" fg:x="23" fg:w="3"/><text x="2.1260%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.9576%" y="437" width="0.1631%" height="15" fill="rgb(236,102,18)" fg:x="24" fg:w="2"/><text x="2.2076%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.9576%" y="421" width="0.1631%" height="15" fill="rgb(208,59,49)" fg:x="24" fg:w="2"/><text x="2.2076%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.20%)</title><rect x="0.0816%" y="613" width="2.2023%" height="15" fill="rgb(215,194,28)" fg:x="1" fg:w="27"/><text x="0.3316%" y="623.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (25 samples, 2.04%)</title><rect x="0.2447%" y="597" width="2.0392%" height="15" fill="rgb(243,207,11)" fg:x="3" fg:w="25"/><text x="0.4947%" y="607.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.04%)</title><rect x="0.2447%" y="581" width="2.0392%" height="15" fill="rgb(254,179,35)" fg:x="3" fg:w="25"/><text x="0.4947%" y="591.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (23 samples, 1.88%)</title><rect x="0.4078%" y="565" width="1.8760%" height="15" fill="rgb(235,97,3)" fg:x="5" fg:w="23"/><text x="0.6578%" y="575.50">c..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.1207%" y="549" width="0.1631%" height="15" fill="rgb(215,155,33)" fg:x="26" fg:w="2"/><text x="2.3707%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6101%" y="485" width="0.0816%" height="15" fill="rgb(223,128,12)" fg:x="32" fg:w="1"/><text x="2.8601%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="2.6917%" y="453" width="0.0816%" height="15" fill="rgb(208,157,18)" fg:x="33" fg:w="1"/><text x="2.9417%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.6917%" y="437" width="0.0816%" height="15" fill="rgb(249,70,54)" fg:x="33" fg:w="1"/><text x="2.9417%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="2.6917%" y="421" width="0.0816%" height="15" fill="rgb(244,118,24)" fg:x="33" fg:w="1"/><text x="2.9417%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="2.6917%" y="405" width="0.0816%" height="15" fill="rgb(211,54,0)" fg:x="33" fg:w="1"/><text x="2.9417%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="2.6917%" y="389" width="0.0816%" height="15" fill="rgb(245,137,45)" fg:x="33" fg:w="1"/><text x="2.9417%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="2.6917%" y="373" width="0.0816%" height="15" fill="rgb(232,154,31)" fg:x="33" fg:w="1"/><text x="2.9417%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.6917%" y="357" width="0.0816%" height="15" fill="rgb(253,6,39)" fg:x="33" fg:w="1"/><text x="2.9417%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.6917%" y="341" width="0.0816%" height="15" fill="rgb(234,183,24)" fg:x="33" fg:w="1"/><text x="2.9417%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.6917%" y="325" width="0.0816%" height="15" fill="rgb(252,84,40)" fg:x="33" fg:w="1"/><text x="2.9417%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.6917%" y="309" width="0.0816%" height="15" fill="rgb(224,65,2)" fg:x="33" fg:w="1"/><text x="2.9417%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.6917%" y="293" width="0.0816%" height="15" fill="rgb(229,38,24)" fg:x="33" fg:w="1"/><text x="2.9417%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.6917%" y="277" width="0.0816%" height="15" fill="rgb(218,131,50)" fg:x="33" fg:w="1"/><text x="2.9417%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.6917%" y="261" width="0.0816%" height="15" fill="rgb(233,106,18)" fg:x="33" fg:w="1"/><text x="2.9417%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="2.6101%" y="501" width="0.2447%" height="15" fill="rgb(220,216,11)" fg:x="32" fg:w="3"/><text x="2.8601%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="2.6917%" y="485" width="0.1631%" height="15" fill="rgb(251,100,45)" fg:x="33" fg:w="2"/><text x="2.9417%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="2.6917%" y="469" width="0.1631%" height="15" fill="rgb(235,143,32)" fg:x="33" fg:w="2"/><text x="2.9417%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.7732%" y="453" width="0.0816%" height="15" fill="rgb(248,124,34)" fg:x="34" fg:w="1"/><text x="3.0232%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.7732%" y="437" width="0.0816%" height="15" fill="rgb(225,221,4)" fg:x="34" fg:w="1"/><text x="3.0232%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.7732%" y="421" width="0.0816%" height="15" fill="rgb(242,27,43)" fg:x="34" fg:w="1"/><text x="3.0232%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.7732%" y="405" width="0.0816%" height="15" fill="rgb(227,54,8)" fg:x="34" fg:w="1"/><text x="3.0232%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7732%" y="389" width="0.0816%" height="15" fill="rgb(253,139,49)" fg:x="34" fg:w="1"/><text x="3.0232%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="2.8548%" y="453" width="0.0816%" height="15" fill="rgb(231,26,43)" fg:x="35" fg:w="1"/><text x="3.1048%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="2.8548%" y="437" width="0.0816%" height="15" fill="rgb(207,121,39)" fg:x="35" fg:w="1"/><text x="3.1048%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.49%)</title><rect x="2.5285%" y="533" width="0.4894%" height="15" fill="rgb(223,101,35)" fg:x="31" fg:w="6"/><text x="2.7785%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.49%)</title><rect x="2.5285%" y="517" width="0.4894%" height="15" fill="rgb(232,87,23)" fg:x="31" fg:w="6"/><text x="2.7785%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="2.8548%" y="501" width="0.1631%" height="15" fill="rgb(225,180,29)" fg:x="35" fg:w="2"/><text x="3.1048%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="2.8548%" y="485" width="0.1631%" height="15" fill="rgb(225,25,17)" fg:x="35" fg:w="2"/><text x="3.1048%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="2.8548%" y="469" width="0.1631%" height="15" fill="rgb(223,8,52)" fg:x="35" fg:w="2"/><text x="3.1048%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.9364%" y="453" width="0.0816%" height="15" fill="rgb(246,42,21)" fg:x="36" fg:w="1"/><text x="3.1864%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.9364%" y="437" width="0.0816%" height="15" fill="rgb(205,64,43)" fg:x="36" fg:w="1"/><text x="3.1864%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.9364%" y="421" width="0.0816%" height="15" fill="rgb(221,160,13)" fg:x="36" fg:w="1"/><text x="3.1864%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.9364%" y="405" width="0.0816%" height="15" fill="rgb(239,58,35)" fg:x="36" fg:w="1"/><text x="3.1864%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="2.9364%" y="389" width="0.0816%" height="15" fill="rgb(251,26,40)" fg:x="36" fg:w="1"/><text x="3.1864%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.9364%" y="373" width="0.0816%" height="15" fill="rgb(247,0,4)" fg:x="36" fg:w="1"/><text x="3.1864%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.9364%" y="357" width="0.0816%" height="15" fill="rgb(218,130,10)" fg:x="36" fg:w="1"/><text x="3.1864%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.9364%" y="341" width="0.0816%" height="15" fill="rgb(239,32,7)" fg:x="36" fg:w="1"/><text x="3.1864%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="3.0179%" y="485" width="0.2447%" height="15" fill="rgb(210,192,24)" fg:x="37" fg:w="3"/><text x="3.2679%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="3.0179%" y="469" width="0.2447%" height="15" fill="rgb(226,212,17)" fg:x="37" fg:w="3"/><text x="3.2679%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="3.0179%" y="453" width="0.2447%" height="15" fill="rgb(219,201,28)" fg:x="37" fg:w="3"/><text x="3.2679%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="3.0179%" y="437" width="0.2447%" height="15" fill="rgb(235,207,41)" fg:x="37" fg:w="3"/><text x="3.2679%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.1811%" y="421" width="0.0816%" height="15" fill="rgb(241,95,54)" fg:x="39" fg:w="1"/><text x="3.4311%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.1811%" y="405" width="0.0816%" height="15" fill="rgb(248,12,23)" fg:x="39" fg:w="1"/><text x="3.4311%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.1811%" y="389" width="0.0816%" height="15" fill="rgb(228,173,4)" fg:x="39" fg:w="1"/><text x="3.4311%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.1811%" y="373" width="0.0816%" height="15" fill="rgb(254,99,5)" fg:x="39" fg:w="1"/><text x="3.4311%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.1811%" y="357" width="0.0816%" height="15" fill="rgb(212,184,17)" fg:x="39" fg:w="1"/><text x="3.4311%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.1811%" y="341" width="0.0816%" height="15" fill="rgb(252,174,1)" fg:x="39" fg:w="1"/><text x="3.4311%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.1811%" y="325" width="0.0816%" height="15" fill="rgb(241,118,51)" fg:x="39" fg:w="1"/><text x="3.4311%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.1811%" y="309" width="0.0816%" height="15" fill="rgb(227,94,47)" fg:x="39" fg:w="1"/><text x="3.4311%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.1811%" y="293" width="0.0816%" height="15" fill="rgb(229,104,2)" fg:x="39" fg:w="1"/><text x="3.4311%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.1811%" y="277" width="0.0816%" height="15" fill="rgb(219,28,31)" fg:x="39" fg:w="1"/><text x="3.4311%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.1811%" y="261" width="0.0816%" height="15" fill="rgb(233,109,36)" fg:x="39" fg:w="1"/><text x="3.4311%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.1811%" y="245" width="0.0816%" height="15" fill="rgb(246,88,11)" fg:x="39" fg:w="1"/><text x="3.4311%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.2626%" y="453" width="0.0816%" height="15" fill="rgb(209,212,17)" fg:x="40" fg:w="1"/><text x="3.5126%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.5073%" y="389" width="0.0816%" height="15" fill="rgb(243,59,29)" fg:x="43" fg:w="1"/><text x="3.7573%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="3.5073%" y="373" width="0.0816%" height="15" fill="rgb(244,205,48)" fg:x="43" fg:w="1"/><text x="3.7573%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.65%)</title><rect x="3.0179%" y="533" width="0.6525%" height="15" fill="rgb(227,30,6)" fg:x="37" fg:w="8"/><text x="3.2679%" y="543.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.65%)</title><rect x="3.0179%" y="517" width="0.6525%" height="15" fill="rgb(220,205,48)" fg:x="37" fg:w="8"/><text x="3.2679%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.65%)</title><rect x="3.0179%" y="501" width="0.6525%" height="15" fill="rgb(250,94,14)" fg:x="37" fg:w="8"/><text x="3.2679%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (5 samples, 0.41%)</title><rect x="3.2626%" y="485" width="0.4078%" height="15" fill="rgb(216,119,42)" fg:x="40" fg:w="5"/><text x="3.5126%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="3.2626%" y="469" width="0.4078%" height="15" fill="rgb(232,155,0)" fg:x="40" fg:w="5"/><text x="3.5126%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.33%)</title><rect x="3.3442%" y="453" width="0.3263%" height="15" fill="rgb(212,24,32)" fg:x="41" fg:w="4"/><text x="3.5942%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="3.3442%" y="437" width="0.3263%" height="15" fill="rgb(216,69,20)" fg:x="41" fg:w="4"/><text x="3.5942%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="3.4258%" y="421" width="0.2447%" height="15" fill="rgb(229,73,31)" fg:x="42" fg:w="3"/><text x="3.6758%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="3.4258%" y="405" width="0.2447%" height="15" fill="rgb(224,219,20)" fg:x="42" fg:w="3"/><text x="3.6758%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.5889%" y="389" width="0.0816%" height="15" fill="rgb(215,146,41)" fg:x="44" fg:w="1"/><text x="3.8389%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.5889%" y="373" width="0.0816%" height="15" fill="rgb(244,71,31)" fg:x="44" fg:w="1"/><text x="3.8389%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="3.5889%" y="357" width="0.0816%" height="15" fill="rgb(224,24,11)" fg:x="44" fg:w="1"/><text x="3.8389%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.5889%" y="341" width="0.0816%" height="15" fill="rgb(229,76,15)" fg:x="44" fg:w="1"/><text x="3.8389%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="3.5889%" y="325" width="0.0816%" height="15" fill="rgb(209,93,2)" fg:x="44" fg:w="1"/><text x="3.8389%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="3.5889%" y="309" width="0.0816%" height="15" fill="rgb(216,200,50)" fg:x="44" fg:w="1"/><text x="3.8389%" y="319.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="3.5889%" y="293" width="0.0816%" height="15" fill="rgb(211,67,34)" fg:x="44" fg:w="1"/><text x="3.8389%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.9152%" y="421" width="0.0816%" height="15" fill="rgb(225,87,47)" fg:x="48" fg:w="1"/><text x="4.1652%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="3.9967%" y="405" width="0.2447%" height="15" fill="rgb(217,185,16)" fg:x="49" fg:w="3"/><text x="4.2467%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="3.9967%" y="389" width="0.2447%" height="15" fill="rgb(205,0,0)" fg:x="49" fg:w="3"/><text x="4.2467%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="3.9967%" y="373" width="0.2447%" height="15" fill="rgb(207,116,45)" fg:x="49" fg:w="3"/><text x="4.2467%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="3.9967%" y="357" width="0.2447%" height="15" fill="rgb(221,156,26)" fg:x="49" fg:w="3"/><text x="4.2467%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="4.2414%" y="405" width="0.1631%" height="15" fill="rgb(213,140,4)" fg:x="52" fg:w="2"/><text x="4.4914%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="4.2414%" y="389" width="0.1631%" height="15" fill="rgb(231,224,15)" fg:x="52" fg:w="2"/><text x="4.4914%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="4.2414%" y="373" width="0.1631%" height="15" fill="rgb(244,76,20)" fg:x="52" fg:w="2"/><text x="4.4914%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.3230%" y="357" width="0.0816%" height="15" fill="rgb(238,117,7)" fg:x="53" fg:w="1"/><text x="4.5730%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.3230%" y="341" width="0.0816%" height="15" fill="rgb(235,1,10)" fg:x="53" fg:w="1"/><text x="4.5730%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.3230%" y="325" width="0.0816%" height="15" fill="rgb(216,165,6)" fg:x="53" fg:w="1"/><text x="4.5730%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3230%" y="309" width="0.0816%" height="15" fill="rgb(246,91,35)" fg:x="53" fg:w="1"/><text x="4.5730%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.65%)</title><rect x="3.9152%" y="453" width="0.6525%" height="15" fill="rgb(228,96,24)" fg:x="48" fg:w="8"/><text x="4.1652%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="3.9152%" y="437" width="0.6525%" height="15" fill="rgb(254,217,53)" fg:x="48" fg:w="8"/><text x="4.1652%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.57%)</title><rect x="3.9967%" y="421" width="0.5710%" height="15" fill="rgb(209,60,0)" fg:x="49" fg:w="7"/><text x="4.2467%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.4046%" y="405" width="0.1631%" height="15" fill="rgb(250,93,26)" fg:x="54" fg:w="2"/><text x="4.6546%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.4046%" y="389" width="0.1631%" height="15" fill="rgb(211,9,40)" fg:x="54" fg:w="2"/><text x="4.6546%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="4.4046%" y="373" width="0.1631%" height="15" fill="rgb(242,57,20)" fg:x="54" fg:w="2"/><text x="4.6546%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="4.4046%" y="357" width="0.1631%" height="15" fill="rgb(248,85,48)" fg:x="54" fg:w="2"/><text x="4.6546%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.4046%" y="341" width="0.1631%" height="15" fill="rgb(212,117,2)" fg:x="54" fg:w="2"/><text x="4.6546%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="4.4046%" y="325" width="0.1631%" height="15" fill="rgb(243,19,3)" fg:x="54" fg:w="2"/><text x="4.6546%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="4.4861%" y="309" width="0.0816%" height="15" fill="rgb(232,217,24)" fg:x="55" fg:w="1"/><text x="4.7361%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (11 samples, 0.90%)</title><rect x="3.7520%" y="517" width="0.8972%" height="15" fill="rgb(224,175,40)" fg:x="46" fg:w="11"/><text x="4.0020%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (11 samples, 0.90%)</title><rect x="3.7520%" y="501" width="0.8972%" height="15" fill="rgb(212,162,32)" fg:x="46" fg:w="11"/><text x="4.0020%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.82%)</title><rect x="3.8336%" y="485" width="0.8157%" height="15" fill="rgb(215,9,4)" fg:x="47" fg:w="10"/><text x="4.0836%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.82%)</title><rect x="3.8336%" y="469" width="0.8157%" height="15" fill="rgb(242,42,7)" fg:x="47" fg:w="10"/><text x="4.0836%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="4.5677%" y="453" width="0.0816%" height="15" fill="rgb(242,184,45)" fg:x="56" fg:w="1"/><text x="4.8177%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.5677%" y="437" width="0.0816%" height="15" fill="rgb(228,111,51)" fg:x="56" fg:w="1"/><text x="4.8177%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.5677%" y="421" width="0.0816%" height="15" fill="rgb(236,147,17)" fg:x="56" fg:w="1"/><text x="4.8177%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.5677%" y="405" width="0.0816%" height="15" fill="rgb(210,75,22)" fg:x="56" fg:w="1"/><text x="4.8177%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="4.6493%" y="469" width="0.0816%" height="15" fill="rgb(217,159,45)" fg:x="57" fg:w="1"/><text x="4.8993%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.6493%" y="453" width="0.0816%" height="15" fill="rgb(245,165,53)" fg:x="57" fg:w="1"/><text x="4.8993%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="4.7308%" y="437" width="0.2447%" height="15" fill="rgb(251,190,50)" fg:x="58" fg:w="3"/><text x="4.9808%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="4.8124%" y="421" width="0.1631%" height="15" fill="rgb(208,203,29)" fg:x="59" fg:w="2"/><text x="5.0624%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.9755%" y="405" width="0.0816%" height="15" fill="rgb(207,209,35)" fg:x="61" fg:w="1"/><text x="5.2255%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.9755%" y="389" width="0.0816%" height="15" fill="rgb(230,144,49)" fg:x="61" fg:w="1"/><text x="5.2255%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="4.9755%" y="373" width="0.0816%" height="15" fill="rgb(229,31,6)" fg:x="61" fg:w="1"/><text x="5.2255%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="4.9755%" y="357" width="0.0816%" height="15" fill="rgb(251,129,24)" fg:x="61" fg:w="1"/><text x="5.2255%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (33 samples, 2.69%)</title><rect x="2.4470%" y="581" width="2.6917%" height="15" fill="rgb(235,105,15)" fg:x="30" fg:w="33"/><text x="2.6970%" y="591.50">&lt;e..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (33 samples, 2.69%)</title><rect x="2.4470%" y="565" width="2.6917%" height="15" fill="rgb(216,52,43)" fg:x="30" fg:w="33"/><text x="2.6970%" y="575.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_persisted (33 samples, 2.69%)</title><rect x="2.4470%" y="549" width="2.6917%" height="15" fill="rgb(238,144,41)" fg:x="30" fg:w="33"/><text x="2.6970%" y="559.50">en..</text></g><g><title>kernel::model::deserialize_entity (18 samples, 1.47%)</title><rect x="3.6705%" y="533" width="1.4682%" height="15" fill="rgb(243,63,9)" fg:x="45" fg:w="18"/><text x="3.9205%" y="543.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.49%)</title><rect x="4.6493%" y="517" width="0.4894%" height="15" fill="rgb(246,208,1)" fg:x="57" fg:w="6"/><text x="4.8993%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="4.6493%" y="501" width="0.4894%" height="15" fill="rgb(233,182,18)" fg:x="57" fg:w="6"/><text x="4.8993%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="4.6493%" y="485" width="0.4894%" height="15" fill="rgb(242,224,8)" fg:x="57" fg:w="6"/><text x="4.8993%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="4.7308%" y="469" width="0.4078%" height="15" fill="rgb(243,54,37)" fg:x="58" fg:w="5"/><text x="4.9808%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="4.7308%" y="453" width="0.4078%" height="15" fill="rgb(233,192,12)" fg:x="58" fg:w="5"/><text x="4.9808%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="4.9755%" y="437" width="0.1631%" height="15" fill="rgb(251,192,53)" fg:x="61" fg:w="2"/><text x="5.2255%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.9755%" y="421" width="0.1631%" height="15" fill="rgb(246,141,26)" fg:x="61" fg:w="2"/><text x="5.2255%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="5.0571%" y="405" width="0.0816%" height="15" fill="rgb(239,195,19)" fg:x="62" fg:w="1"/><text x="5.3071%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="5.0571%" y="389" width="0.0816%" height="15" fill="rgb(241,16,39)" fg:x="62" fg:w="1"/><text x="5.3071%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="5.0571%" y="373" width="0.0816%" height="15" fill="rgb(223,13,53)" fg:x="62" fg:w="1"/><text x="5.3071%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="5.0571%" y="357" width="0.0816%" height="15" fill="rgb(214,227,0)" fg:x="62" fg:w="1"/><text x="5.3071%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="5.0571%" y="341" width="0.0816%" height="15" fill="rgb(228,103,26)" fg:x="62" fg:w="1"/><text x="5.3071%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="5.0571%" y="325" width="0.0816%" height="15" fill="rgb(254,177,53)" fg:x="62" fg:w="1"/><text x="5.3071%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="5.0571%" y="309" width="0.0816%" height="15" fill="rgb(208,201,34)" fg:x="62" fg:w="1"/><text x="5.3071%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="5.0571%" y="293" width="0.0816%" height="15" fill="rgb(212,39,5)" fg:x="62" fg:w="1"/><text x="5.3071%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.0571%" y="277" width="0.0816%" height="15" fill="rgb(246,117,3)" fg:x="62" fg:w="1"/><text x="5.3071%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.0571%" y="261" width="0.0816%" height="15" fill="rgb(244,118,39)" fg:x="62" fg:w="1"/><text x="5.3071%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0571%" y="245" width="0.0816%" height="15" fill="rgb(241,64,10)" fg:x="62" fg:w="1"/><text x="5.3071%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="5.1387%" y="581" width="0.0816%" height="15" fill="rgb(229,39,44)" fg:x="63" fg:w="1"/><text x="5.3887%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="5.2202%" y="581" width="0.0816%" height="15" fill="rgb(230,226,3)" fg:x="64" fg:w="1"/><text x="5.4702%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="5.2202%" y="565" width="0.0816%" height="15" fill="rgb(222,13,42)" fg:x="64" fg:w="1"/><text x="5.4702%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="5.2202%" y="549" width="0.0816%" height="15" fill="rgb(247,180,54)" fg:x="64" fg:w="1"/><text x="5.4702%" y="559.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.2202%" y="533" width="0.0816%" height="15" fill="rgb(205,96,16)" fg:x="64" fg:w="1"/><text x="5.4702%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="5.2202%" y="517" width="0.0816%" height="15" fill="rgb(205,100,21)" fg:x="64" fg:w="1"/><text x="5.4702%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="5.2202%" y="501" width="0.0816%" height="15" fill="rgb(248,51,4)" fg:x="64" fg:w="1"/><text x="5.4702%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.2202%" y="485" width="0.0816%" height="15" fill="rgb(217,197,30)" fg:x="64" fg:w="1"/><text x="5.4702%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::hooks (1 samples, 0.08%)</title><rect x="5.3018%" y="581" width="0.0816%" height="15" fill="rgb(240,179,40)" fg:x="65" fg:w="1"/><text x="5.5518%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="5.6281%" y="533" width="0.0816%" height="15" fill="rgb(212,185,35)" fg:x="69" fg:w="1"/><text x="5.8781%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="5.6281%" y="517" width="0.0816%" height="15" fill="rgb(251,222,31)" fg:x="69" fg:w="1"/><text x="5.8781%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.6281%" y="501" width="0.0816%" height="15" fill="rgb(208,140,36)" fg:x="69" fg:w="1"/><text x="5.8781%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.6281%" y="485" width="0.0816%" height="15" fill="rgb(220,148,1)" fg:x="69" fg:w="1"/><text x="5.8781%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.6281%" y="469" width="0.0816%" height="15" fill="rgb(254,4,28)" fg:x="69" fg:w="1"/><text x="5.8781%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.6281%" y="453" width="0.0816%" height="15" fill="rgb(222,185,44)" fg:x="69" fg:w="1"/><text x="5.8781%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.6281%" y="437" width="0.0816%" height="15" fill="rgb(215,74,39)" fg:x="69" fg:w="1"/><text x="5.8781%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.6281%" y="421" width="0.0816%" height="15" fill="rgb(247,86,4)" fg:x="69" fg:w="1"/><text x="5.8781%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.6281%" y="405" width="0.0816%" height="15" fill="rgb(231,105,32)" fg:x="69" fg:w="1"/><text x="5.8781%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="5.6281%" y="549" width="0.2447%" height="15" fill="rgb(222,65,35)" fg:x="69" fg:w="3"/><text x="5.8781%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="5.7096%" y="533" width="0.1631%" height="15" fill="rgb(218,145,35)" fg:x="70" fg:w="2"/><text x="5.9596%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="5.7096%" y="517" width="0.1631%" height="15" fill="rgb(208,7,15)" fg:x="70" fg:w="2"/><text x="5.9596%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="5.7096%" y="501" width="0.1631%" height="15" fill="rgb(209,83,13)" fg:x="70" fg:w="2"/><text x="5.9596%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.7096%" y="485" width="0.1631%" height="15" fill="rgb(218,3,10)" fg:x="70" fg:w="2"/><text x="5.9596%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.7096%" y="469" width="0.1631%" height="15" fill="rgb(211,219,4)" fg:x="70" fg:w="2"/><text x="5.9596%" y="479.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="5.7096%" y="453" width="0.1631%" height="15" fill="rgb(228,194,12)" fg:x="70" fg:w="2"/><text x="5.9596%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="5.7096%" y="437" width="0.1631%" height="15" fill="rgb(210,175,7)" fg:x="70" fg:w="2"/><text x="5.9596%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="5.7096%" y="421" width="0.1631%" height="15" fill="rgb(243,132,6)" fg:x="70" fg:w="2"/><text x="5.9596%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="5.7096%" y="405" width="0.1631%" height="15" fill="rgb(207,72,18)" fg:x="70" fg:w="2"/><text x="5.9596%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="5.7096%" y="389" width="0.1631%" height="15" fill="rgb(236,1,18)" fg:x="70" fg:w="2"/><text x="5.9596%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="5.7096%" y="373" width="0.1631%" height="15" fill="rgb(227,0,18)" fg:x="70" fg:w="2"/><text x="5.9596%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.7096%" y="357" width="0.1631%" height="15" fill="rgb(247,37,5)" fg:x="70" fg:w="2"/><text x="5.9596%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="5.7096%" y="341" width="0.1631%" height="15" fill="rgb(237,179,24)" fg:x="70" fg:w="2"/><text x="5.9596%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.7096%" y="325" width="0.1631%" height="15" fill="rgb(226,53,20)" fg:x="70" fg:w="2"/><text x="5.9596%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="5.7096%" y="309" width="0.1631%" height="15" fill="rgb(247,75,7)" fg:x="70" fg:w="2"/><text x="5.9596%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="5.7096%" y="293" width="0.1631%" height="15" fill="rgb(233,96,12)" fg:x="70" fg:w="2"/><text x="5.9596%" y="303.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="5.7096%" y="277" width="0.1631%" height="15" fill="rgb(224,125,0)" fg:x="70" fg:w="2"/><text x="5.9596%" y="287.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.7096%" y="261" width="0.1631%" height="15" fill="rgb(224,92,25)" fg:x="70" fg:w="2"/><text x="5.9596%" y="271.50"></text></g><g><title>dlerror (4 samples, 0.33%)</title><rect x="5.8728%" y="533" width="0.3263%" height="15" fill="rgb(224,42,24)" fg:x="72" fg:w="4"/><text x="6.1228%" y="543.50"></text></g><g><title>__asprintf (4 samples, 0.33%)</title><rect x="5.8728%" y="517" width="0.3263%" height="15" fill="rgb(234,132,49)" fg:x="72" fg:w="4"/><text x="6.1228%" y="527.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="6.3622%" y="485" width="0.0816%" height="15" fill="rgb(248,100,35)" fg:x="78" fg:w="1"/><text x="6.6122%" y="495.50"></text></g><g><title>dlopen (26 samples, 2.12%)</title><rect x="6.1990%" y="533" width="2.1207%" height="15" fill="rgb(239,94,40)" fg:x="76" fg:w="26"/><text x="6.4490%" y="543.50">d..</text></g><g><title>_dl_catch_error (25 samples, 2.04%)</title><rect x="6.2806%" y="517" width="2.0392%" height="15" fill="rgb(235,139,28)" fg:x="77" fg:w="25"/><text x="6.5306%" y="527.50">_..</text></g><g><title>_dl_catch_exception (25 samples, 2.04%)</title><rect x="6.2806%" y="501" width="2.0392%" height="15" fill="rgb(217,144,7)" fg:x="77" fg:w="25"/><text x="6.5306%" y="511.50">_..</text></g><g><title>_dl_catch_exception (23 samples, 1.88%)</title><rect x="6.4437%" y="485" width="1.8760%" height="15" fill="rgb(227,55,4)" fg:x="79" fg:w="23"/><text x="6.6937%" y="495.50">_..</text></g><g><title>_dl_catch_exception (23 samples, 1.88%)</title><rect x="6.4437%" y="469" width="1.8760%" height="15" fill="rgb(252,82,54)" fg:x="79" fg:w="23"/><text x="6.6937%" y="479.50">_..</text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="8.2382%" y="453" width="0.0816%" height="15" fill="rgb(245,172,4)" fg:x="101" fg:w="1"/><text x="8.4882%" y="463.50"></text></g><g><title>libloading::os::unix::Library::open (31 samples, 2.53%)</title><rect x="5.8728%" y="549" width="2.5285%" height="15" fill="rgb(207,26,27)" fg:x="72" fg:w="31"/><text x="6.1228%" y="559.50">li..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="8.3197%" y="533" width="0.0816%" height="15" fill="rgb(252,98,18)" fg:x="102" fg:w="1"/><text x="8.5697%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (37 samples, 3.02%)</title><rect x="5.5465%" y="565" width="3.0179%" height="15" fill="rgb(244,8,26)" fg:x="68" fg:w="37"/><text x="5.7965%" y="575.50">&lt;pl..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (2 samples, 0.16%)</title><rect x="8.4013%" y="549" width="0.1631%" height="15" fill="rgb(237,173,45)" fg:x="103" fg:w="2"/><text x="8.6513%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="8.4013%" y="533" width="0.1631%" height="15" fill="rgb(208,213,49)" fg:x="103" fg:w="2"/><text x="8.6513%" y="543.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.4829%" y="517" width="0.0816%" height="15" fill="rgb(212,122,37)" fg:x="104" fg:w="1"/><text x="8.7329%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (40 samples, 3.26%)</title><rect x="5.3834%" y="581" width="3.2626%" height="15" fill="rgb(213,80,17)" fg:x="66" fg:w="40"/><text x="5.6334%" y="591.50">ker..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="8.5644%" y="565" width="0.0816%" height="15" fill="rgb(206,210,43)" fg:x="105" fg:w="1"/><text x="8.8144%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="8.5644%" y="549" width="0.0816%" height="15" fill="rgb(229,214,3)" fg:x="105" fg:w="1"/><text x="8.8144%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.6460%" y="565" width="0.0816%" height="15" fill="rgb(235,213,29)" fg:x="106" fg:w="1"/><text x="8.8960%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.6460%" y="549" width="0.0816%" height="15" fill="rgb(248,135,26)" fg:x="106" fg:w="1"/><text x="8.8960%" y="559.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (80 samples, 6.53%)</title><rect x="2.2838%" y="613" width="6.5253%" height="15" fill="rgb(242,188,12)" fg:x="28" fg:w="80"/><text x="2.5338%" y="623.50">&lt;engine::..</text></g><g><title>engine::session::Session::new (79 samples, 6.44%)</title><rect x="2.3654%" y="597" width="6.4437%" height="15" fill="rgb(245,38,12)" fg:x="29" fg:w="79"/><text x="2.6154%" y="607.50">engine::..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="8.6460%" y="581" width="0.1631%" height="15" fill="rgb(218,42,13)" fg:x="106" fg:w="2"/><text x="8.8960%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="8.7276%" y="565" width="0.0816%" height="15" fill="rgb(238,132,49)" fg:x="107" fg:w="1"/><text x="8.9776%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.7276%" y="549" width="0.0816%" height="15" fill="rgb(209,196,19)" fg:x="107" fg:w="1"/><text x="8.9776%" y="559.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="8.7276%" y="533" width="0.0816%" height="15" fill="rgb(244,131,22)" fg:x="107" fg:w="1"/><text x="8.9776%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7276%" y="517" width="0.0816%" height="15" fill="rgb(223,18,34)" fg:x="107" fg:w="1"/><text x="8.9776%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="8.8091%" y="597" width="0.1631%" height="15" fill="rgb(252,124,54)" fg:x="108" fg:w="2"/><text x="9.0591%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="8.9723%" y="597" width="0.0816%" height="15" fill="rgb(229,106,42)" fg:x="110" fg:w="1"/><text x="9.2223%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="8.9723%" y="581" width="0.0816%" height="15" fill="rgb(221,129,1)" fg:x="110" fg:w="1"/><text x="9.2223%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.9723%" y="565" width="0.0816%" height="15" fill="rgb(229,74,15)" fg:x="110" fg:w="1"/><text x="9.2223%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="9.0538%" y="597" width="0.0816%" height="15" fill="rgb(210,206,50)" fg:x="111" fg:w="1"/><text x="9.3038%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="9.1354%" y="597" width="0.0816%" height="15" fill="rgb(251,114,31)" fg:x="112" fg:w="1"/><text x="9.3854%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="9.1354%" y="581" width="0.0816%" height="15" fill="rgb(215,225,28)" fg:x="112" fg:w="1"/><text x="9.3854%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.1354%" y="565" width="0.0816%" height="15" fill="rgb(237,109,14)" fg:x="112" fg:w="1"/><text x="9.3854%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="9.2170%" y="565" width="0.0816%" height="15" fill="rgb(230,13,37)" fg:x="113" fg:w="1"/><text x="9.4670%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="9.2985%" y="565" width="0.1631%" height="15" fill="rgb(231,40,28)" fg:x="114" fg:w="2"/><text x="9.5485%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="9.2985%" y="549" width="0.1631%" height="15" fill="rgb(231,202,18)" fg:x="114" fg:w="2"/><text x="9.5485%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="9.3801%" y="533" width="0.0816%" height="15" fill="rgb(225,33,18)" fg:x="115" fg:w="1"/><text x="9.6301%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.3801%" y="517" width="0.0816%" height="15" fill="rgb(223,64,47)" fg:x="115" fg:w="1"/><text x="9.6301%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.3801%" y="501" width="0.0816%" height="15" fill="rgb(234,114,13)" fg:x="115" fg:w="1"/><text x="9.6301%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.3801%" y="485" width="0.0816%" height="15" fill="rgb(248,56,40)" fg:x="115" fg:w="1"/><text x="9.6301%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.3801%" y="469" width="0.0816%" height="15" fill="rgb(221,194,21)" fg:x="115" fg:w="1"/><text x="9.6301%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.3801%" y="453" width="0.0816%" height="15" fill="rgb(242,108,46)" fg:x="115" fg:w="1"/><text x="9.6301%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.3801%" y="437" width="0.0816%" height="15" fill="rgb(220,106,10)" fg:x="115" fg:w="1"/><text x="9.6301%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.3801%" y="421" width="0.0816%" height="15" fill="rgb(211,88,4)" fg:x="115" fg:w="1"/><text x="9.6301%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.3801%" y="405" width="0.0816%" height="15" fill="rgb(214,95,34)" fg:x="115" fg:w="1"/><text x="9.6301%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.3801%" y="389" width="0.0816%" height="15" fill="rgb(250,160,33)" fg:x="115" fg:w="1"/><text x="9.6301%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.3801%" y="373" width="0.0816%" height="15" fill="rgb(225,29,10)" fg:x="115" fg:w="1"/><text x="9.6301%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.3801%" y="357" width="0.0816%" height="15" fill="rgb(224,28,30)" fg:x="115" fg:w="1"/><text x="9.6301%" y="367.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="9.4617%" y="565" width="0.0816%" height="15" fill="rgb(231,77,4)" fg:x="116" fg:w="1"/><text x="9.7117%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="9.4617%" y="549" width="0.0816%" height="15" fill="rgb(209,63,21)" fg:x="116" fg:w="1"/><text x="9.7117%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.4617%" y="533" width="0.0816%" height="15" fill="rgb(226,22,11)" fg:x="116" fg:w="1"/><text x="9.7117%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.4617%" y="517" width="0.0816%" height="15" fill="rgb(216,82,30)" fg:x="116" fg:w="1"/><text x="9.7117%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.4617%" y="501" width="0.0816%" height="15" fill="rgb(246,227,38)" fg:x="116" fg:w="1"/><text x="9.7117%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.5432%" y="517" width="0.0816%" height="15" fill="rgb(251,203,53)" fg:x="117" fg:w="1"/><text x="9.7932%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="9.7064%" y="501" width="0.4078%" height="15" fill="rgb(254,101,1)" fg:x="119" fg:w="5"/><text x="9.9564%" y="511.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="9.7064%" y="485" width="0.4078%" height="15" fill="rgb(241,180,5)" fg:x="119" fg:w="5"/><text x="9.9564%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="9.7879%" y="469" width="0.3263%" height="15" fill="rgb(218,168,4)" fg:x="120" fg:w="4"/><text x="10.0379%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.8695%" y="453" width="0.2447%" height="15" fill="rgb(224,223,32)" fg:x="121" fg:w="3"/><text x="10.1195%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="9.9511%" y="437" width="0.1631%" height="15" fill="rgb(236,106,22)" fg:x="122" fg:w="2"/><text x="10.2011%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.9511%" y="421" width="0.1631%" height="15" fill="rgb(206,121,5)" fg:x="122" fg:w="2"/><text x="10.2011%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.9511%" y="405" width="0.1631%" height="15" fill="rgb(233,87,28)" fg:x="122" fg:w="2"/><text x="10.2011%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.73%)</title><rect x="9.6248%" y="517" width="0.7341%" height="15" fill="rgb(236,137,17)" fg:x="118" fg:w="9"/><text x="9.8748%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.1142%" y="501" width="0.2447%" height="15" fill="rgb(209,183,38)" fg:x="124" fg:w="3"/><text x="10.3642%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.1958%" y="485" width="0.1631%" height="15" fill="rgb(206,162,44)" fg:x="125" fg:w="2"/><text x="10.4458%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.1958%" y="469" width="0.1631%" height="15" fill="rgb(237,70,39)" fg:x="125" fg:w="2"/><text x="10.4458%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="10.3589%" y="501" width="0.2447%" height="15" fill="rgb(212,176,5)" fg:x="127" fg:w="3"/><text x="10.6089%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.65%)</title><rect x="10.6036%" y="501" width="0.6525%" height="15" fill="rgb(232,95,16)" fg:x="130" fg:w="8"/><text x="10.8536%" y="511.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.65%)</title><rect x="10.6036%" y="485" width="0.6525%" height="15" fill="rgb(219,115,35)" fg:x="130" fg:w="8"/><text x="10.8536%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.49%)</title><rect x="10.7667%" y="469" width="0.4894%" height="15" fill="rgb(251,67,27)" fg:x="132" fg:w="6"/><text x="11.0167%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.49%)</title><rect x="10.7667%" y="453" width="0.4894%" height="15" fill="rgb(222,95,40)" fg:x="132" fg:w="6"/><text x="11.0167%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="11.0114%" y="437" width="0.2447%" height="15" fill="rgb(250,35,16)" fg:x="135" fg:w="3"/><text x="11.2614%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="11.0114%" y="421" width="0.2447%" height="15" fill="rgb(224,86,44)" fg:x="135" fg:w="3"/><text x="11.2614%" y="431.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="11.0114%" y="405" width="0.2447%" height="15" fill="rgb(237,53,53)" fg:x="135" fg:w="3"/><text x="11.2614%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="11.4192%" y="453" width="0.0816%" height="15" fill="rgb(208,171,33)" fg:x="140" fg:w="1"/><text x="11.6692%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="11.5008%" y="453" width="0.1631%" height="15" fill="rgb(222,64,27)" fg:x="141" fg:w="2"/><text x="11.7508%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="11.5008%" y="437" width="0.1631%" height="15" fill="rgb(221,121,35)" fg:x="141" fg:w="2"/><text x="11.7508%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.5008%" y="421" width="0.1631%" height="15" fill="rgb(228,137,42)" fg:x="141" fg:w="2"/><text x="11.7508%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="11.4192%" y="485" width="0.3263%" height="15" fill="rgb(227,54,21)" fg:x="140" fg:w="4"/><text x="11.6692%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="11.4192%" y="469" width="0.3263%" height="15" fill="rgb(240,168,33)" fg:x="140" fg:w="4"/><text x="11.6692%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.6639%" y="453" width="0.0816%" height="15" fill="rgb(243,159,6)" fg:x="143" fg:w="1"/><text x="11.9139%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="11.7455%" y="485" width="0.2447%" height="15" fill="rgb(205,211,41)" fg:x="144" fg:w="3"/><text x="11.9955%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.8271%" y="469" width="0.1631%" height="15" fill="rgb(253,30,1)" fg:x="145" fg:w="2"/><text x="12.0771%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.8271%" y="453" width="0.1631%" height="15" fill="rgb(226,80,18)" fg:x="145" fg:w="2"/><text x="12.0771%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="11.8271%" y="437" width="0.1631%" height="15" fill="rgb(253,156,46)" fg:x="145" fg:w="2"/><text x="12.0771%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="12.0718%" y="469" width="0.1631%" height="15" fill="rgb(248,87,27)" fg:x="148" fg:w="2"/><text x="12.3218%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.1533%" y="453" width="0.0816%" height="15" fill="rgb(227,122,2)" fg:x="149" fg:w="1"/><text x="12.4033%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.1533%" y="437" width="0.0816%" height="15" fill="rgb(229,94,39)" fg:x="149" fg:w="1"/><text x="12.4033%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.1533%" y="421" width="0.0816%" height="15" fill="rgb(225,173,31)" fg:x="149" fg:w="1"/><text x="12.4033%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="12.2349%" y="453" width="0.0816%" height="15" fill="rgb(239,176,30)" fg:x="150" fg:w="1"/><text x="12.4849%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="12.3165%" y="437" width="0.1631%" height="15" fill="rgb(212,104,21)" fg:x="151" fg:w="2"/><text x="12.5665%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.3165%" y="421" width="0.1631%" height="15" fill="rgb(240,209,40)" fg:x="151" fg:w="2"/><text x="12.5665%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="12.3165%" y="405" width="0.1631%" height="15" fill="rgb(234,195,5)" fg:x="151" fg:w="2"/><text x="12.5665%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.3980%" y="389" width="0.0816%" height="15" fill="rgb(238,213,1)" fg:x="152" fg:w="1"/><text x="12.6480%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="12.4796%" y="421" width="0.0816%" height="15" fill="rgb(235,182,54)" fg:x="153" fg:w="1"/><text x="12.7296%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="12.4796%" y="437" width="0.1631%" height="15" fill="rgb(229,50,46)" fg:x="153" fg:w="2"/><text x="12.7296%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.5612%" y="421" width="0.0816%" height="15" fill="rgb(219,145,13)" fg:x="154" fg:w="1"/><text x="12.8112%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.5612%" y="405" width="0.0816%" height="15" fill="rgb(220,226,10)" fg:x="154" fg:w="1"/><text x="12.8112%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="12.3165%" y="453" width="0.4894%" height="15" fill="rgb(248,47,30)" fg:x="151" fg:w="6"/><text x="12.5665%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.6427%" y="437" width="0.1631%" height="15" fill="rgb(231,209,44)" fg:x="155" fg:w="2"/><text x="12.8927%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.7243%" y="421" width="0.0816%" height="15" fill="rgb(209,80,30)" fg:x="156" fg:w="1"/><text x="12.9743%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.7243%" y="405" width="0.0816%" height="15" fill="rgb(232,9,14)" fg:x="156" fg:w="1"/><text x="12.9743%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.82%)</title><rect x="12.2349%" y="469" width="0.8157%" height="15" fill="rgb(243,91,43)" fg:x="150" fg:w="10"/><text x="12.4849%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="12.8059%" y="453" width="0.2447%" height="15" fill="rgb(231,90,52)" fg:x="157" fg:w="3"/><text x="13.0559%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="12.8059%" y="437" width="0.2447%" height="15" fill="rgb(253,192,44)" fg:x="157" fg:w="3"/><text x="13.0559%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="12.8059%" y="421" width="0.2447%" height="15" fill="rgb(241,66,31)" fg:x="157" fg:w="3"/><text x="13.0559%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.22%)</title><rect x="11.9902%" y="485" width="1.2235%" height="15" fill="rgb(235,81,37)" fg:x="147" fg:w="15"/><text x="12.2402%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.0506%" y="469" width="0.1631%" height="15" fill="rgb(223,221,9)" fg:x="160" fg:w="2"/><text x="13.3006%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.0506%" y="453" width="0.1631%" height="15" fill="rgb(242,180,7)" fg:x="160" fg:w="2"/><text x="13.3006%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.1321%" y="437" width="0.0816%" height="15" fill="rgb(243,78,19)" fg:x="161" fg:w="1"/><text x="13.3821%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.20%)</title><rect x="11.2561%" y="501" width="2.2023%" height="15" fill="rgb(233,23,17)" fg:x="138" fg:w="27"/><text x="11.5061%" y="511.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="13.2137%" y="485" width="0.2447%" height="15" fill="rgb(252,122,45)" fg:x="162" fg:w="3"/><text x="13.4637%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.3768%" y="469" width="0.0816%" height="15" fill="rgb(247,108,20)" fg:x="164" fg:w="1"/><text x="13.6268%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 3.34%)</title><rect x="10.3589%" y="517" width="3.3442%" height="15" fill="rgb(235,84,21)" fg:x="127" fg:w="41"/><text x="10.6089%" y="527.50">ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="13.4584%" y="501" width="0.2447%" height="15" fill="rgb(247,129,10)" fg:x="165" fg:w="3"/><text x="13.7084%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.5400%" y="485" width="0.1631%" height="15" fill="rgb(208,173,14)" fg:x="166" fg:w="2"/><text x="13.7900%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.6215%" y="469" width="0.0816%" height="15" fill="rgb(236,31,38)" fg:x="167" fg:w="1"/><text x="13.8715%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.6215%" y="453" width="0.0816%" height="15" fill="rgb(232,65,17)" fg:x="167" fg:w="1"/><text x="13.8715%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.6215%" y="437" width="0.0816%" height="15" fill="rgb(224,45,49)" fg:x="167" fg:w="1"/><text x="13.8715%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.6215%" y="421" width="0.0816%" height="15" fill="rgb(225,2,53)" fg:x="167" fg:w="1"/><text x="13.8715%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (52 samples, 4.24%)</title><rect x="9.5432%" y="533" width="4.2414%" height="15" fill="rgb(248,210,53)" fg:x="117" fg:w="52"/><text x="9.7932%" y="543.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.7031%" y="517" width="0.0816%" height="15" fill="rgb(211,1,30)" fg:x="168" fg:w="1"/><text x="13.9531%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.7031%" y="501" width="0.0816%" height="15" fill="rgb(224,96,15)" fg:x="168" fg:w="1"/><text x="13.9531%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.7031%" y="485" width="0.0816%" height="15" fill="rgb(252,45,11)" fg:x="168" fg:w="1"/><text x="13.9531%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.7031%" y="469" width="0.0816%" height="15" fill="rgb(220,125,38)" fg:x="168" fg:w="1"/><text x="13.9531%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.7031%" y="453" width="0.0816%" height="15" fill="rgb(243,161,33)" fg:x="168" fg:w="1"/><text x="13.9531%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="13.7031%" y="437" width="0.0816%" height="15" fill="rgb(248,197,34)" fg:x="168" fg:w="1"/><text x="13.9531%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="13.7031%" y="421" width="0.0816%" height="15" fill="rgb(228,165,23)" fg:x="168" fg:w="1"/><text x="13.9531%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="13.8662%" y="501" width="0.1631%" height="15" fill="rgb(236,94,38)" fg:x="170" fg:w="2"/><text x="14.1162%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1109%" y="485" width="0.0816%" height="15" fill="rgb(220,13,23)" fg:x="173" fg:w="1"/><text x="14.3609%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="14.1925%" y="485" width="0.2447%" height="15" fill="rgb(234,26,39)" fg:x="174" fg:w="3"/><text x="14.4425%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.82%)</title><rect x="13.7847%" y="533" width="0.8157%" height="15" fill="rgb(205,117,44)" fg:x="169" fg:w="10"/><text x="14.0347%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.82%)</title><rect x="13.7847%" y="517" width="0.8157%" height="15" fill="rgb(250,42,2)" fg:x="169" fg:w="10"/><text x="14.0347%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="14.0294%" y="501" width="0.5710%" height="15" fill="rgb(223,83,14)" fg:x="172" fg:w="7"/><text x="14.2794%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.4372%" y="485" width="0.1631%" height="15" fill="rgb(241,147,50)" fg:x="177" fg:w="2"/><text x="14.6872%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.4372%" y="469" width="0.1631%" height="15" fill="rgb(218,90,6)" fg:x="177" fg:w="2"/><text x="14.6872%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.4372%" y="453" width="0.1631%" height="15" fill="rgb(210,191,5)" fg:x="177" fg:w="2"/><text x="14.6872%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.4372%" y="437" width="0.1631%" height="15" fill="rgb(225,139,19)" fg:x="177" fg:w="2"/><text x="14.6872%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="14.4372%" y="421" width="0.1631%" height="15" fill="rgb(210,1,33)" fg:x="177" fg:w="2"/><text x="14.6872%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="14.6003%" y="517" width="0.0816%" height="15" fill="rgb(213,50,3)" fg:x="179" fg:w="1"/><text x="14.8503%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="14.6003%" y="501" width="0.0816%" height="15" fill="rgb(234,227,4)" fg:x="179" fg:w="1"/><text x="14.8503%" y="511.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="14.6003%" y="485" width="0.0816%" height="15" fill="rgb(246,63,5)" fg:x="179" fg:w="1"/><text x="14.8503%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6003%" y="469" width="0.0816%" height="15" fill="rgb(245,136,27)" fg:x="179" fg:w="1"/><text x="14.8503%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.8450%" y="485" width="0.1631%" height="15" fill="rgb(247,199,27)" fg:x="182" fg:w="2"/><text x="15.0950%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0082%" y="485" width="0.0816%" height="15" fill="rgb(252,158,49)" fg:x="184" fg:w="1"/><text x="15.2582%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="15.0897%" y="485" width="0.1631%" height="15" fill="rgb(254,73,1)" fg:x="185" fg:w="2"/><text x="15.3397%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.0897%" y="469" width="0.1631%" height="15" fill="rgb(248,93,19)" fg:x="185" fg:w="2"/><text x="15.3397%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1713%" y="453" width="0.0816%" height="15" fill="rgb(206,67,5)" fg:x="186" fg:w="1"/><text x="15.4213%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="15.3344%" y="437" width="0.2447%" height="15" fill="rgb(209,210,4)" fg:x="188" fg:w="3"/><text x="15.5844%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.4976%" y="421" width="0.0816%" height="15" fill="rgb(214,185,36)" fg:x="190" fg:w="1"/><text x="15.7476%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.4976%" y="405" width="0.0816%" height="15" fill="rgb(233,191,26)" fg:x="190" fg:w="1"/><text x="15.7476%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="15.5791%" y="421" width="0.0816%" height="15" fill="rgb(248,94,17)" fg:x="191" fg:w="1"/><text x="15.8291%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.6607%" y="405" width="0.0816%" height="15" fill="rgb(250,64,4)" fg:x="192" fg:w="1"/><text x="15.9107%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.7423%" y="405" width="0.0816%" height="15" fill="rgb(218,41,53)" fg:x="193" fg:w="1"/><text x="15.9923%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7423%" y="389" width="0.0816%" height="15" fill="rgb(251,176,28)" fg:x="193" fg:w="1"/><text x="15.9923%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="15.7423%" y="373" width="0.0816%" height="15" fill="rgb(247,22,9)" fg:x="193" fg:w="1"/><text x="15.9923%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="15.7423%" y="357" width="0.0816%" height="15" fill="rgb(218,201,14)" fg:x="193" fg:w="1"/><text x="15.9923%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="15.5791%" y="437" width="0.3263%" height="15" fill="rgb(218,94,10)" fg:x="191" fg:w="4"/><text x="15.8291%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="15.6607%" y="421" width="0.2447%" height="15" fill="rgb(222,183,52)" fg:x="192" fg:w="3"/><text x="15.9107%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8238%" y="405" width="0.0816%" height="15" fill="rgb(242,140,25)" fg:x="194" fg:w="1"/><text x="16.0738%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0685%" y="405" width="0.0816%" height="15" fill="rgb(235,197,38)" fg:x="197" fg:w="1"/><text x="16.3185%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0685%" y="389" width="0.0816%" height="15" fill="rgb(237,136,15)" fg:x="197" fg:w="1"/><text x="16.3185%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0685%" y="373" width="0.0816%" height="15" fill="rgb(223,44,49)" fg:x="197" fg:w="1"/><text x="16.3185%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="16.1501%" y="357" width="0.0816%" height="15" fill="rgb(227,71,15)" fg:x="198" fg:w="1"/><text x="16.4001%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3948%" y="341" width="0.0816%" height="15" fill="rgb(225,153,20)" fg:x="201" fg:w="1"/><text x="16.6448%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3948%" y="325" width="0.0816%" height="15" fill="rgb(210,190,26)" fg:x="201" fg:w="1"/><text x="16.6448%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3948%" y="309" width="0.0816%" height="15" fill="rgb(223,147,5)" fg:x="201" fg:w="1"/><text x="16.6448%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5579%" y="309" width="0.0816%" height="15" fill="rgb(207,14,23)" fg:x="203" fg:w="1"/><text x="16.8079%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5579%" y="293" width="0.0816%" height="15" fill="rgb(211,195,53)" fg:x="203" fg:w="1"/><text x="16.8079%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5579%" y="277" width="0.0816%" height="15" fill="rgb(237,75,46)" fg:x="203" fg:w="1"/><text x="16.8079%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="16.1501%" y="389" width="0.5710%" height="15" fill="rgb(254,55,14)" fg:x="198" fg:w="7"/><text x="16.4001%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="16.1501%" y="373" width="0.5710%" height="15" fill="rgb(230,185,30)" fg:x="198" fg:w="7"/><text x="16.4001%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="16.2316%" y="357" width="0.4894%" height="15" fill="rgb(220,14,11)" fg:x="199" fg:w="6"/><text x="16.4816%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="16.4763%" y="341" width="0.2447%" height="15" fill="rgb(215,169,44)" fg:x="202" fg:w="3"/><text x="16.7263%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="16.5579%" y="325" width="0.1631%" height="15" fill="rgb(253,203,20)" fg:x="203" fg:w="2"/><text x="16.8079%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.6395%" y="309" width="0.0816%" height="15" fill="rgb(229,225,17)" fg:x="204" fg:w="1"/><text x="16.8895%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.82%)</title><rect x="15.9869%" y="421" width="0.8157%" height="15" fill="rgb(236,76,26)" fg:x="196" fg:w="10"/><text x="16.2369%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="16.1501%" y="405" width="0.6525%" height="15" fill="rgb(234,15,30)" fg:x="198" fg:w="8"/><text x="16.4001%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7210%" y="389" width="0.0816%" height="15" fill="rgb(211,113,48)" fg:x="205" fg:w="1"/><text x="16.9710%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.55%)</title><rect x="15.3344%" y="453" width="1.5498%" height="15" fill="rgb(221,31,36)" fg:x="188" fg:w="19"/><text x="15.5844%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.98%)</title><rect x="15.9054%" y="437" width="0.9788%" height="15" fill="rgb(215,118,52)" fg:x="195" fg:w="12"/><text x="16.1554%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8026%" y="421" width="0.0816%" height="15" fill="rgb(241,151,27)" fg:x="206" fg:w="1"/><text x="17.0526%" y="431.50"></text></g><g><title>engine::session::Session::flush (95 samples, 7.75%)</title><rect x="9.2170%" y="597" width="7.7488%" height="15" fill="rgb(253,51,3)" fg:x="113" fg:w="95"/><text x="9.4670%" y="607.50">engine::ses..</text></g><g><title>engine::session::Session::save_entity_changes (95 samples, 7.75%)</title><rect x="9.2170%" y="581" width="7.7488%" height="15" fill="rgb(216,201,24)" fg:x="113" fg:w="95"/><text x="9.4670%" y="591.50">engine::ses..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (91 samples, 7.42%)</title><rect x="9.5432%" y="565" width="7.4225%" height="15" fill="rgb(231,107,4)" fg:x="117" fg:w="91"/><text x="9.7932%" y="575.50">engine::in..</text></g><g><title>engine::session::SavesEntities::check_for_changes (91 samples, 7.42%)</title><rect x="9.5432%" y="549" width="7.4225%" height="15" fill="rgb(243,97,54)" fg:x="117" fg:w="91"/><text x="9.7932%" y="559.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (29 samples, 2.37%)</title><rect x="14.6003%" y="533" width="2.3654%" height="15" fill="rgb(221,32,51)" fg:x="179" fg:w="29"/><text x="14.8503%" y="543.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.28%)</title><rect x="14.6819%" y="517" width="2.2838%" height="15" fill="rgb(218,171,35)" fg:x="180" fg:w="28"/><text x="14.9319%" y="527.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.28%)</title><rect x="14.6819%" y="501" width="2.2838%" height="15" fill="rgb(214,20,53)" fg:x="180" fg:w="28"/><text x="14.9319%" y="511.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 1.71%)</title><rect x="15.2529%" y="485" width="1.7129%" height="15" fill="rgb(239,9,52)" fg:x="187" fg:w="21"/><text x="15.5029%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.71%)</title><rect x="15.2529%" y="469" width="1.7129%" height="15" fill="rgb(215,114,45)" fg:x="187" fg:w="21"/><text x="15.5029%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="16.8842%" y="453" width="0.0816%" height="15" fill="rgb(208,118,9)" fg:x="207" fg:w="1"/><text x="17.1342%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="16.9657%" y="565" width="0.0816%" height="15" fill="rgb(235,7,39)" fg:x="208" fg:w="1"/><text x="17.2157%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.9657%" y="549" width="0.0816%" height="15" fill="rgb(243,225,15)" fg:x="208" fg:w="1"/><text x="17.2157%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.0473%" y="533" width="0.0816%" height="15" fill="rgb(225,216,18)" fg:x="209" fg:w="1"/><text x="17.2973%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="17.0473%" y="517" width="0.0816%" height="15" fill="rgb(233,36,38)" fg:x="209" fg:w="1"/><text x="17.2973%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.1289%" y="517" width="0.1631%" height="15" fill="rgb(239,88,23)" fg:x="210" fg:w="2"/><text x="17.3789%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.1289%" y="501" width="0.1631%" height="15" fill="rgb(219,181,35)" fg:x="210" fg:w="2"/><text x="17.3789%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.2104%" y="485" width="0.0816%" height="15" fill="rgb(215,18,46)" fg:x="211" fg:w="1"/><text x="17.4604%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2104%" y="469" width="0.0816%" height="15" fill="rgb(241,38,11)" fg:x="211" fg:w="1"/><text x="17.4604%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.2104%" y="453" width="0.0816%" height="15" fill="rgb(248,169,45)" fg:x="211" fg:w="1"/><text x="17.4604%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2104%" y="437" width="0.0816%" height="15" fill="rgb(239,50,49)" fg:x="211" fg:w="1"/><text x="17.4604%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.2104%" y="421" width="0.0816%" height="15" fill="rgb(231,96,31)" fg:x="211" fg:w="1"/><text x="17.4604%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2104%" y="405" width="0.0816%" height="15" fill="rgb(224,193,37)" fg:x="211" fg:w="1"/><text x="17.4604%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.2104%" y="389" width="0.0816%" height="15" fill="rgb(227,153,50)" fg:x="211" fg:w="1"/><text x="17.4604%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2104%" y="373" width="0.0816%" height="15" fill="rgb(249,228,3)" fg:x="211" fg:w="1"/><text x="17.4604%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.2104%" y="357" width="0.0816%" height="15" fill="rgb(219,164,43)" fg:x="211" fg:w="1"/><text x="17.4604%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2104%" y="341" width="0.0816%" height="15" fill="rgb(216,45,41)" fg:x="211" fg:w="1"/><text x="17.4604%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.2104%" y="325" width="0.0816%" height="15" fill="rgb(210,226,51)" fg:x="211" fg:w="1"/><text x="17.4604%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2104%" y="309" width="0.0816%" height="15" fill="rgb(209,117,49)" fg:x="211" fg:w="1"/><text x="17.4604%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2920%" y="485" width="0.0816%" height="15" fill="rgb(206,196,24)" fg:x="212" fg:w="1"/><text x="17.5420%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2920%" y="469" width="0.0816%" height="15" fill="rgb(253,218,3)" fg:x="212" fg:w="1"/><text x="17.5420%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2920%" y="453" width="0.0816%" height="15" fill="rgb(252,166,2)" fg:x="212" fg:w="1"/><text x="17.5420%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2920%" y="437" width="0.0816%" height="15" fill="rgb(236,218,26)" fg:x="212" fg:w="1"/><text x="17.5420%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2920%" y="421" width="0.0816%" height="15" fill="rgb(254,84,19)" fg:x="212" fg:w="1"/><text x="17.5420%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2920%" y="405" width="0.0816%" height="15" fill="rgb(219,137,29)" fg:x="212" fg:w="1"/><text x="17.5420%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.2920%" y="389" width="0.0816%" height="15" fill="rgb(227,47,52)" fg:x="212" fg:w="1"/><text x="17.5420%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.2920%" y="373" width="0.0816%" height="15" fill="rgb(229,167,24)" fg:x="212" fg:w="1"/><text x="17.5420%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.2920%" y="357" width="0.0816%" height="15" fill="rgb(233,164,1)" fg:x="212" fg:w="1"/><text x="17.5420%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.2920%" y="341" width="0.0816%" height="15" fill="rgb(218,88,48)" fg:x="212" fg:w="1"/><text x="17.5420%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.2920%" y="325" width="0.0816%" height="15" fill="rgb(226,214,24)" fg:x="212" fg:w="1"/><text x="17.5420%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="16.9657%" y="581" width="0.4894%" height="15" fill="rgb(233,29,12)" fg:x="208" fg:w="6"/><text x="17.2157%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="17.0473%" y="565" width="0.4078%" height="15" fill="rgb(219,120,34)" fg:x="209" fg:w="5"/><text x="17.2973%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="17.0473%" y="549" width="0.4078%" height="15" fill="rgb(226,78,44)" fg:x="209" fg:w="5"/><text x="17.2973%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="17.1289%" y="533" width="0.3263%" height="15" fill="rgb(240,15,48)" fg:x="210" fg:w="4"/><text x="17.3789%" y="543.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="17.2920%" y="517" width="0.1631%" height="15" fill="rgb(253,176,7)" fg:x="212" fg:w="2"/><text x="17.5420%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.2920%" y="501" width="0.1631%" height="15" fill="rgb(206,166,28)" fg:x="212" fg:w="2"/><text x="17.5420%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="17.3736%" y="485" width="0.0816%" height="15" fill="rgb(241,53,51)" fg:x="213" fg:w="1"/><text x="17.6236%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.3736%" y="469" width="0.0816%" height="15" fill="rgb(249,112,30)" fg:x="213" fg:w="1"/><text x="17.6236%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="17.3736%" y="453" width="0.0816%" height="15" fill="rgb(217,85,30)" fg:x="213" fg:w="1"/><text x="17.6236%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4551%" y="565" width="0.0816%" height="15" fill="rgb(233,49,7)" fg:x="214" fg:w="1"/><text x="17.7051%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="17.5367%" y="517" width="0.0816%" height="15" fill="rgb(234,109,9)" fg:x="215" fg:w="1"/><text x="17.7867%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="17.5367%" y="533" width="0.2447%" height="15" fill="rgb(253,95,22)" fg:x="215" fg:w="3"/><text x="17.7867%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.6183%" y="517" width="0.1631%" height="15" fill="rgb(233,176,25)" fg:x="216" fg:w="2"/><text x="17.8683%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.6998%" y="501" width="0.0816%" height="15" fill="rgb(236,33,39)" fg:x="217" fg:w="1"/><text x="17.9498%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6998%" y="485" width="0.0816%" height="15" fill="rgb(223,226,42)" fg:x="217" fg:w="1"/><text x="17.9498%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6998%" y="469" width="0.0816%" height="15" fill="rgb(216,99,33)" fg:x="217" fg:w="1"/><text x="17.9498%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7814%" y="485" width="0.0816%" height="15" fill="rgb(235,84,23)" fg:x="218" fg:w="1"/><text x="18.0314%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7814%" y="469" width="0.0816%" height="15" fill="rgb(232,2,27)" fg:x="218" fg:w="1"/><text x="18.0314%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7814%" y="453" width="0.0816%" height="15" fill="rgb(241,23,22)" fg:x="218" fg:w="1"/><text x="18.0314%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7814%" y="437" width="0.0816%" height="15" fill="rgb(211,73,27)" fg:x="218" fg:w="1"/><text x="18.0314%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7814%" y="421" width="0.0816%" height="15" fill="rgb(235,109,49)" fg:x="218" fg:w="1"/><text x="18.0314%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="17.5367%" y="565" width="0.4078%" height="15" fill="rgb(230,99,29)" fg:x="215" fg:w="5"/><text x="17.7867%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="17.5367%" y="549" width="0.4078%" height="15" fill="rgb(245,199,7)" fg:x="215" fg:w="5"/><text x="17.7867%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="17.7814%" y="533" width="0.1631%" height="15" fill="rgb(217,179,10)" fg:x="218" fg:w="2"/><text x="18.0314%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.7814%" y="517" width="0.1631%" height="15" fill="rgb(254,99,47)" fg:x="218" fg:w="2"/><text x="18.0314%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.7814%" y="501" width="0.1631%" height="15" fill="rgb(251,121,7)" fg:x="218" fg:w="2"/><text x="18.0314%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8630%" y="485" width="0.0816%" height="15" fill="rgb(250,177,26)" fg:x="219" fg:w="1"/><text x="18.1130%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.8630%" y="469" width="0.0816%" height="15" fill="rgb(232,88,15)" fg:x="219" fg:w="1"/><text x="18.1130%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8630%" y="453" width="0.0816%" height="15" fill="rgb(251,54,54)" fg:x="219" fg:w="1"/><text x="18.1130%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8630%" y="437" width="0.0816%" height="15" fill="rgb(208,177,15)" fg:x="219" fg:w="1"/><text x="18.1130%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8630%" y="421" width="0.0816%" height="15" fill="rgb(205,97,32)" fg:x="219" fg:w="1"/><text x="18.1130%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8630%" y="405" width="0.0816%" height="15" fill="rgb(217,192,13)" fg:x="219" fg:w="1"/><text x="18.1130%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="17.9445%" y="565" width="0.0816%" height="15" fill="rgb(215,163,41)" fg:x="220" fg:w="1"/><text x="18.1945%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0261%" y="549" width="0.0816%" height="15" fill="rgb(246,83,29)" fg:x="221" fg:w="1"/><text x="18.2761%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="18.0261%" y="565" width="0.1631%" height="15" fill="rgb(219,2,45)" fg:x="221" fg:w="2"/><text x="18.2761%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1077%" y="549" width="0.0816%" height="15" fill="rgb(242,215,33)" fg:x="222" fg:w="1"/><text x="18.3577%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.1077%" y="533" width="0.0816%" height="15" fill="rgb(217,1,6)" fg:x="222" fg:w="1"/><text x="18.3577%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1077%" y="517" width="0.0816%" height="15" fill="rgb(207,85,52)" fg:x="222" fg:w="1"/><text x="18.3577%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.1077%" y="501" width="0.0816%" height="15" fill="rgb(231,171,19)" fg:x="222" fg:w="1"/><text x="18.3577%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1077%" y="485" width="0.0816%" height="15" fill="rgb(207,128,4)" fg:x="222" fg:w="1"/><text x="18.3577%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.1892%" y="469" width="0.1631%" height="15" fill="rgb(219,208,4)" fg:x="223" fg:w="2"/><text x="18.4392%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2708%" y="453" width="0.0816%" height="15" fill="rgb(235,161,42)" fg:x="224" fg:w="1"/><text x="18.5208%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2708%" y="437" width="0.0816%" height="15" fill="rgb(247,218,18)" fg:x="224" fg:w="1"/><text x="18.5208%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.2708%" y="421" width="0.0816%" height="15" fill="rgb(232,114,51)" fg:x="224" fg:w="1"/><text x="18.5208%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.2708%" y="405" width="0.0816%" height="15" fill="rgb(222,95,3)" fg:x="224" fg:w="1"/><text x="18.5208%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.2708%" y="389" width="0.0816%" height="15" fill="rgb(240,65,29)" fg:x="224" fg:w="1"/><text x="18.5208%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.2708%" y="373" width="0.0816%" height="15" fill="rgb(249,209,20)" fg:x="224" fg:w="1"/><text x="18.5208%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.2708%" y="357" width="0.0816%" height="15" fill="rgb(241,48,37)" fg:x="224" fg:w="1"/><text x="18.5208%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.2708%" y="341" width="0.0816%" height="15" fill="rgb(230,140,42)" fg:x="224" fg:w="1"/><text x="18.5208%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="18.1892%" y="517" width="0.2447%" height="15" fill="rgb(230,176,45)" fg:x="223" fg:w="3"/><text x="18.4392%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="18.1892%" y="501" width="0.2447%" height="15" fill="rgb(245,112,21)" fg:x="223" fg:w="3"/><text x="18.4392%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.1892%" y="485" width="0.2447%" height="15" fill="rgb(207,183,35)" fg:x="223" fg:w="3"/><text x="18.4392%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.3524%" y="469" width="0.0816%" height="15" fill="rgb(227,44,33)" fg:x="225" fg:w="1"/><text x="18.6024%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3524%" y="453" width="0.0816%" height="15" fill="rgb(246,120,21)" fg:x="225" fg:w="1"/><text x="18.6024%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.3524%" y="437" width="0.0816%" height="15" fill="rgb(235,57,52)" fg:x="225" fg:w="1"/><text x="18.6024%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3524%" y="421" width="0.0816%" height="15" fill="rgb(238,84,10)" fg:x="225" fg:w="1"/><text x="18.6024%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4339%" y="469" width="0.0816%" height="15" fill="rgb(251,200,32)" fg:x="226" fg:w="1"/><text x="18.6839%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.4339%" y="453" width="0.0816%" height="15" fill="rgb(247,159,13)" fg:x="226" fg:w="1"/><text x="18.6839%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4339%" y="437" width="0.0816%" height="15" fill="rgb(238,64,4)" fg:x="226" fg:w="1"/><text x="18.6839%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4339%" y="421" width="0.0816%" height="15" fill="rgb(221,131,51)" fg:x="226" fg:w="1"/><text x="18.6839%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4339%" y="405" width="0.0816%" height="15" fill="rgb(242,5,29)" fg:x="226" fg:w="1"/><text x="18.6839%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4339%" y="389" width="0.0816%" height="15" fill="rgb(214,130,32)" fg:x="226" fg:w="1"/><text x="18.6839%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.4339%" y="373" width="0.0816%" height="15" fill="rgb(244,210,16)" fg:x="226" fg:w="1"/><text x="18.6839%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4339%" y="357" width="0.0816%" height="15" fill="rgb(234,48,26)" fg:x="226" fg:w="1"/><text x="18.6839%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.5155%" y="469" width="0.0816%" height="15" fill="rgb(231,82,38)" fg:x="227" fg:w="1"/><text x="18.7655%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5155%" y="453" width="0.0816%" height="15" fill="rgb(254,128,41)" fg:x="227" fg:w="1"/><text x="18.7655%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.5155%" y="437" width="0.0816%" height="15" fill="rgb(212,73,49)" fg:x="227" fg:w="1"/><text x="18.7655%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5155%" y="421" width="0.0816%" height="15" fill="rgb(205,62,54)" fg:x="227" fg:w="1"/><text x="18.7655%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.49%)</title><rect x="18.1892%" y="549" width="0.4894%" height="15" fill="rgb(228,0,8)" fg:x="223" fg:w="6"/><text x="18.4392%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.49%)</title><rect x="18.1892%" y="533" width="0.4894%" height="15" fill="rgb(251,28,17)" fg:x="223" fg:w="6"/><text x="18.4392%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="18.4339%" y="517" width="0.2447%" height="15" fill="rgb(238,105,27)" fg:x="226" fg:w="3"/><text x="18.6839%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="18.4339%" y="501" width="0.2447%" height="15" fill="rgb(237,216,33)" fg:x="226" fg:w="3"/><text x="18.6839%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.4339%" y="485" width="0.2447%" height="15" fill="rgb(229,228,25)" fg:x="226" fg:w="3"/><text x="18.6839%" y="495.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="18.5971%" y="469" width="0.0816%" height="15" fill="rgb(233,75,23)" fg:x="228" fg:w="1"/><text x="18.8471%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (22 samples, 1.79%)</title><rect x="16.9657%" y="597" width="1.7945%" height="15" fill="rgb(231,207,16)" fg:x="208" fg:w="22"/><text x="17.2157%" y="607.50">p..</text></g><g><title>plugins_core::tools::set_container (16 samples, 1.31%)</title><rect x="17.4551%" y="581" width="1.3051%" height="15" fill="rgb(231,191,45)" fg:x="214" fg:w="16"/><text x="17.7051%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.57%)</title><rect x="18.1892%" y="565" width="0.5710%" height="15" fill="rgb(224,133,17)" fg:x="223" fg:w="7"/><text x="18.4392%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="18.6786%" y="549" width="0.0816%" height="15" fill="rgb(209,178,27)" fg:x="229" fg:w="1"/><text x="18.9286%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.6786%" y="533" width="0.0816%" height="15" fill="rgb(218,37,11)" fg:x="229" fg:w="1"/><text x="18.9286%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="18.6786%" y="517" width="0.0816%" height="15" fill="rgb(251,226,25)" fg:x="229" fg:w="1"/><text x="18.9286%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="18.6786%" y="501" width="0.0816%" height="15" fill="rgb(209,222,27)" fg:x="229" fg:w="1"/><text x="18.9286%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="18.6786%" y="485" width="0.0816%" height="15" fill="rgb(238,22,21)" fg:x="229" fg:w="1"/><text x="18.9286%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.6786%" y="469" width="0.0816%" height="15" fill="rgb(233,161,25)" fg:x="229" fg:w="1"/><text x="18.9286%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.6786%" y="453" width="0.0816%" height="15" fill="rgb(226,122,53)" fg:x="229" fg:w="1"/><text x="18.9286%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.6786%" y="437" width="0.0816%" height="15" fill="rgb(220,123,17)" fg:x="229" fg:w="1"/><text x="18.9286%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6786%" y="421" width="0.0816%" height="15" fill="rgb(230,224,35)" fg:x="229" fg:w="1"/><text x="18.9286%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6786%" y="405" width="0.0816%" height="15" fill="rgb(246,83,8)" fg:x="229" fg:w="1"/><text x="18.9286%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.6786%" y="389" width="0.0816%" height="15" fill="rgb(230,214,17)" fg:x="229" fg:w="1"/><text x="18.9286%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.6786%" y="373" width="0.0816%" height="15" fill="rgb(222,97,18)" fg:x="229" fg:w="1"/><text x="18.9286%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.6786%" y="357" width="0.0816%" height="15" fill="rgb(206,79,1)" fg:x="229" fg:w="1"/><text x="18.9286%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.6786%" y="341" width="0.0816%" height="15" fill="rgb(214,121,34)" fg:x="229" fg:w="1"/><text x="18.9286%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.6786%" y="325" width="0.0816%" height="15" fill="rgb(249,199,46)" fg:x="229" fg:w="1"/><text x="18.9286%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="18.7602%" y="565" width="0.1631%" height="15" fill="rgb(214,222,46)" fg:x="230" fg:w="2"/><text x="19.0102%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="18.8418%" y="549" width="0.0816%" height="15" fill="rgb(248,168,30)" fg:x="231" fg:w="1"/><text x="19.0918%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.8418%" y="533" width="0.0816%" height="15" fill="rgb(226,14,28)" fg:x="231" fg:w="1"/><text x="19.0918%" y="543.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="18.8418%" y="517" width="0.0816%" height="15" fill="rgb(253,123,1)" fg:x="231" fg:w="1"/><text x="19.0918%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="18.8418%" y="501" width="0.0816%" height="15" fill="rgb(225,24,42)" fg:x="231" fg:w="1"/><text x="19.0918%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="18.8418%" y="485" width="0.0816%" height="15" fill="rgb(216,161,37)" fg:x="231" fg:w="1"/><text x="19.0918%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="18.8418%" y="469" width="0.0816%" height="15" fill="rgb(251,164,26)" fg:x="231" fg:w="1"/><text x="19.0918%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="18.8418%" y="453" width="0.0816%" height="15" fill="rgb(219,177,3)" fg:x="231" fg:w="1"/><text x="19.0918%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="18.8418%" y="437" width="0.0816%" height="15" fill="rgb(222,65,0)" fg:x="231" fg:w="1"/><text x="19.0918%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="18.8418%" y="421" width="0.0816%" height="15" fill="rgb(223,69,54)" fg:x="231" fg:w="1"/><text x="19.0918%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0865%" y="533" width="0.0816%" height="15" fill="rgb(235,30,27)" fg:x="234" fg:w="1"/><text x="19.3365%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0865%" y="517" width="0.0816%" height="15" fill="rgb(220,183,50)" fg:x="234" fg:w="1"/><text x="19.3365%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.0865%" y="501" width="0.0816%" height="15" fill="rgb(248,198,15)" fg:x="234" fg:w="1"/><text x="19.3365%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.0865%" y="485" width="0.0816%" height="15" fill="rgb(222,211,4)" fg:x="234" fg:w="1"/><text x="19.3365%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.0865%" y="469" width="0.0816%" height="15" fill="rgb(214,102,34)" fg:x="234" fg:w="1"/><text x="19.3365%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0865%" y="453" width="0.0816%" height="15" fill="rgb(245,92,5)" fg:x="234" fg:w="1"/><text x="19.3365%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0865%" y="437" width="0.0816%" height="15" fill="rgb(252,72,51)" fg:x="234" fg:w="1"/><text x="19.3365%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.0865%" y="421" width="0.0816%" height="15" fill="rgb(252,208,19)" fg:x="234" fg:w="1"/><text x="19.3365%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.0865%" y="405" width="0.0816%" height="15" fill="rgb(211,69,7)" fg:x="234" fg:w="1"/><text x="19.3365%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.0865%" y="389" width="0.0816%" height="15" fill="rgb(211,27,16)" fg:x="234" fg:w="1"/><text x="19.3365%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.0865%" y="373" width="0.0816%" height="15" fill="rgb(219,216,14)" fg:x="234" fg:w="1"/><text x="19.3365%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0865%" y="357" width="0.0816%" height="15" fill="rgb(219,71,8)" fg:x="234" fg:w="1"/><text x="19.3365%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1680%" y="485" width="0.2447%" height="15" fill="rgb(223,170,53)" fg:x="235" fg:w="3"/><text x="19.4180%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1680%" y="469" width="0.2447%" height="15" fill="rgb(246,21,26)" fg:x="235" fg:w="3"/><text x="19.4180%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1680%" y="453" width="0.2447%" height="15" fill="rgb(248,20,46)" fg:x="235" fg:w="3"/><text x="19.4180%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1680%" y="437" width="0.2447%" height="15" fill="rgb(252,94,11)" fg:x="235" fg:w="3"/><text x="19.4180%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="19.1680%" y="421" width="0.2447%" height="15" fill="rgb(236,163,8)" fg:x="235" fg:w="3"/><text x="19.4180%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="19.1680%" y="533" width="0.3263%" height="15" fill="rgb(217,221,45)" fg:x="235" fg:w="4"/><text x="19.4180%" y="543.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="19.1680%" y="517" width="0.3263%" height="15" fill="rgb(238,38,17)" fg:x="235" fg:w="4"/><text x="19.4180%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="19.1680%" y="501" width="0.3263%" height="15" fill="rgb(242,210,23)" fg:x="235" fg:w="4"/><text x="19.4180%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.4127%" y="485" width="0.0816%" height="15" fill="rgb(250,86,53)" fg:x="238" fg:w="1"/><text x="19.6627%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4127%" y="469" width="0.0816%" height="15" fill="rgb(223,168,25)" fg:x="238" fg:w="1"/><text x="19.6627%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.4127%" y="453" width="0.0816%" height="15" fill="rgb(251,189,4)" fg:x="238" fg:w="1"/><text x="19.6627%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4127%" y="437" width="0.0816%" height="15" fill="rgb(245,19,28)" fg:x="238" fg:w="1"/><text x="19.6627%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.4127%" y="421" width="0.0816%" height="15" fill="rgb(207,10,34)" fg:x="238" fg:w="1"/><text x="19.6627%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4127%" y="405" width="0.0816%" height="15" fill="rgb(235,153,31)" fg:x="238" fg:w="1"/><text x="19.6627%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.4127%" y="389" width="0.0816%" height="15" fill="rgb(228,72,37)" fg:x="238" fg:w="1"/><text x="19.6627%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.4127%" y="373" width="0.0816%" height="15" fill="rgb(215,15,16)" fg:x="238" fg:w="1"/><text x="19.6627%" y="383.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="19.4943%" y="517" width="0.0816%" height="15" fill="rgb(250,119,29)" fg:x="239" fg:w="1"/><text x="19.7443%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4943%" y="501" width="0.0816%" height="15" fill="rgb(214,59,1)" fg:x="239" fg:w="1"/><text x="19.7443%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="19.5759%" y="517" width="0.1631%" height="15" fill="rgb(223,109,25)" fg:x="240" fg:w="2"/><text x="19.8259%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.5759%" y="501" width="0.1631%" height="15" fill="rgb(230,198,22)" fg:x="240" fg:w="2"/><text x="19.8259%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.6574%" y="485" width="0.0816%" height="15" fill="rgb(245,184,46)" fg:x="241" fg:w="1"/><text x="19.9074%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6574%" y="469" width="0.0816%" height="15" fill="rgb(253,73,16)" fg:x="241" fg:w="1"/><text x="19.9074%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.6574%" y="453" width="0.0816%" height="15" fill="rgb(206,94,45)" fg:x="241" fg:w="1"/><text x="19.9074%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6574%" y="437" width="0.0816%" height="15" fill="rgb(236,83,27)" fg:x="241" fg:w="1"/><text x="19.9074%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.6574%" y="421" width="0.0816%" height="15" fill="rgb(220,196,8)" fg:x="241" fg:w="1"/><text x="19.9074%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6574%" y="405" width="0.0816%" height="15" fill="rgb(254,185,14)" fg:x="241" fg:w="1"/><text x="19.9074%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.6574%" y="389" width="0.0816%" height="15" fill="rgb(226,50,22)" fg:x="241" fg:w="1"/><text x="19.9074%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.6574%" y="373" width="0.0816%" height="15" fill="rgb(253,147,0)" fg:x="241" fg:w="1"/><text x="19.9074%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.6574%" y="357" width="0.0816%" height="15" fill="rgb(252,46,33)" fg:x="241" fg:w="1"/><text x="19.9074%" y="367.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (11 samples, 0.90%)</title><rect x="18.9233%" y="549" width="0.8972%" height="15" fill="rgb(242,22,54)" fg:x="232" fg:w="11"/><text x="19.1733%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="19.4943%" y="533" width="0.3263%" height="15" fill="rgb(223,178,32)" fg:x="239" fg:w="4"/><text x="19.7443%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="19.7390%" y="517" width="0.0816%" height="15" fill="rgb(214,106,53)" fg:x="242" fg:w="1"/><text x="19.9890%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.7390%" y="501" width="0.0816%" height="15" fill="rgb(232,65,50)" fg:x="242" fg:w="1"/><text x="19.9890%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="19.7390%" y="485" width="0.0816%" height="15" fill="rgb(231,110,28)" fg:x="242" fg:w="1"/><text x="19.9890%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.7390%" y="469" width="0.0816%" height="15" fill="rgb(216,71,40)" fg:x="242" fg:w="1"/><text x="19.9890%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="19.7390%" y="453" width="0.0816%" height="15" fill="rgb(229,89,53)" fg:x="242" fg:w="1"/><text x="19.9890%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.7390%" y="437" width="0.0816%" height="15" fill="rgb(210,124,14)" fg:x="242" fg:w="1"/><text x="19.9890%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.7390%" y="421" width="0.0816%" height="15" fill="rgb(236,213,6)" fg:x="242" fg:w="1"/><text x="19.9890%" y="431.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="19.7390%" y="405" width="0.0816%" height="15" fill="rgb(228,41,5)" fg:x="242" fg:w="1"/><text x="19.9890%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.7390%" y="389" width="0.0816%" height="15" fill="rgb(221,167,25)" fg:x="242" fg:w="1"/><text x="19.9890%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (15 samples, 1.22%)</title><rect x="18.7602%" y="597" width="1.2235%" height="15" fill="rgb(228,144,37)" fg:x="230" fg:w="15"/><text x="19.0102%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.22%)</title><rect x="18.7602%" y="581" width="1.2235%" height="15" fill="rgb(227,189,38)" fg:x="230" fg:w="15"/><text x="19.0102%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (13 samples, 1.06%)</title><rect x="18.9233%" y="565" width="1.0604%" height="15" fill="rgb(218,8,2)" fg:x="232" fg:w="13"/><text x="19.1733%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="19.8206%" y="549" width="0.1631%" height="15" fill="rgb(209,61,28)" fg:x="243" fg:w="2"/><text x="20.0706%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.8206%" y="533" width="0.1631%" height="15" fill="rgb(233,140,39)" fg:x="243" fg:w="2"/><text x="20.0706%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.9021%" y="517" width="0.0816%" height="15" fill="rgb(251,66,48)" fg:x="244" fg:w="1"/><text x="20.1521%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="19.9837%" y="597" width="0.0816%" height="15" fill="rgb(210,44,45)" fg:x="245" fg:w="1"/><text x="20.2337%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="19.9837%" y="581" width="0.0816%" height="15" fill="rgb(214,136,46)" fg:x="245" fg:w="1"/><text x="20.2337%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="19.9837%" y="565" width="0.0816%" height="15" fill="rgb(207,130,50)" fg:x="245" fg:w="1"/><text x="20.2337%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.9837%" y="549" width="0.0816%" height="15" fill="rgb(228,102,49)" fg:x="245" fg:w="1"/><text x="20.2337%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9837%" y="533" width="0.0816%" height="15" fill="rgb(253,55,1)" fg:x="245" fg:w="1"/><text x="20.2337%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9837%" y="517" width="0.0816%" height="15" fill="rgb(238,222,9)" fg:x="245" fg:w="1"/><text x="20.2337%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="19.9837%" y="501" width="0.0816%" height="15" fill="rgb(246,99,6)" fg:x="245" fg:w="1"/><text x="20.2337%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9837%" y="485" width="0.0816%" height="15" fill="rgb(219,110,26)" fg:x="245" fg:w="1"/><text x="20.2337%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="20.3100%" y="565" width="0.0816%" height="15" fill="rgb(239,160,33)" fg:x="249" fg:w="1"/><text x="20.5600%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="20.3100%" y="549" width="0.0816%" height="15" fill="rgb(220,202,23)" fg:x="249" fg:w="1"/><text x="20.5600%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="20.3100%" y="533" width="0.0816%" height="15" fill="rgb(208,80,26)" fg:x="249" fg:w="1"/><text x="20.5600%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="20.3100%" y="581" width="0.1631%" height="15" fill="rgb(243,85,7)" fg:x="249" fg:w="2"/><text x="20.5600%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="20.3915%" y="565" width="0.0816%" height="15" fill="rgb(228,77,47)" fg:x="250" fg:w="1"/><text x="20.6415%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="20.3915%" y="549" width="0.0816%" height="15" fill="rgb(212,226,8)" fg:x="250" fg:w="1"/><text x="20.6415%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.3915%" y="533" width="0.0816%" height="15" fill="rgb(241,120,54)" fg:x="250" fg:w="1"/><text x="20.6415%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="20.3915%" y="517" width="0.0816%" height="15" fill="rgb(226,80,16)" fg:x="250" fg:w="1"/><text x="20.6415%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.3915%" y="501" width="0.0816%" height="15" fill="rgb(240,76,13)" fg:x="250" fg:w="1"/><text x="20.6415%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3915%" y="485" width="0.0816%" height="15" fill="rgb(252,74,8)" fg:x="250" fg:w="1"/><text x="20.6415%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3915%" y="469" width="0.0816%" height="15" fill="rgb(244,155,2)" fg:x="250" fg:w="1"/><text x="20.6415%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.3915%" y="453" width="0.0816%" height="15" fill="rgb(215,81,35)" fg:x="250" fg:w="1"/><text x="20.6415%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="20.4731%" y="581" width="0.0816%" height="15" fill="rgb(206,55,2)" fg:x="251" fg:w="1"/><text x="20.7231%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="20.4731%" y="565" width="0.0816%" height="15" fill="rgb(231,2,34)" fg:x="251" fg:w="1"/><text x="20.7231%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6362%" y="533" width="0.0816%" height="15" fill="rgb(242,176,48)" fg:x="253" fg:w="1"/><text x="20.8862%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6362%" y="517" width="0.0816%" height="15" fill="rgb(249,31,36)" fg:x="253" fg:w="1"/><text x="20.8862%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6362%" y="501" width="0.0816%" height="15" fill="rgb(205,18,17)" fg:x="253" fg:w="1"/><text x="20.8862%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.6362%" y="485" width="0.0816%" height="15" fill="rgb(254,130,5)" fg:x="253" fg:w="1"/><text x="20.8862%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.6362%" y="469" width="0.0816%" height="15" fill="rgb(229,42,45)" fg:x="253" fg:w="1"/><text x="20.8862%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.6362%" y="453" width="0.0816%" height="15" fill="rgb(245,95,25)" fg:x="253" fg:w="1"/><text x="20.8862%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6362%" y="437" width="0.0816%" height="15" fill="rgb(249,193,38)" fg:x="253" fg:w="1"/><text x="20.8862%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6362%" y="421" width="0.0816%" height="15" fill="rgb(241,140,43)" fg:x="253" fg:w="1"/><text x="20.8862%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.6362%" y="405" width="0.0816%" height="15" fill="rgb(245,78,48)" fg:x="253" fg:w="1"/><text x="20.8862%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.6362%" y="389" width="0.0816%" height="15" fill="rgb(214,92,39)" fg:x="253" fg:w="1"/><text x="20.8862%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.6362%" y="373" width="0.0816%" height="15" fill="rgb(211,189,14)" fg:x="253" fg:w="1"/><text x="20.8862%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.6362%" y="357" width="0.0816%" height="15" fill="rgb(218,7,24)" fg:x="253" fg:w="1"/><text x="20.8862%" y="367.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="20.6362%" y="341" width="0.0816%" height="15" fill="rgb(224,200,49)" fg:x="253" fg:w="1"/><text x="20.8862%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.7993%" y="421" width="0.0816%" height="15" fill="rgb(218,210,14)" fg:x="255" fg:w="1"/><text x="21.0493%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7993%" y="405" width="0.0816%" height="15" fill="rgb(234,142,31)" fg:x="255" fg:w="1"/><text x="21.0493%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7993%" y="389" width="0.0816%" height="15" fill="rgb(227,165,2)" fg:x="255" fg:w="1"/><text x="21.0493%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.7993%" y="373" width="0.0816%" height="15" fill="rgb(232,44,46)" fg:x="255" fg:w="1"/><text x="21.0493%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.7993%" y="357" width="0.0816%" height="15" fill="rgb(236,149,47)" fg:x="255" fg:w="1"/><text x="21.0493%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.7993%" y="341" width="0.0816%" height="15" fill="rgb(227,45,31)" fg:x="255" fg:w="1"/><text x="21.0493%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7993%" y="325" width="0.0816%" height="15" fill="rgb(240,176,51)" fg:x="255" fg:w="1"/><text x="21.0493%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7993%" y="309" width="0.0816%" height="15" fill="rgb(249,146,41)" fg:x="255" fg:w="1"/><text x="21.0493%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.7993%" y="293" width="0.0816%" height="15" fill="rgb(213,208,4)" fg:x="255" fg:w="1"/><text x="21.0493%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.8809%" y="421" width="0.0816%" height="15" fill="rgb(245,84,36)" fg:x="256" fg:w="1"/><text x="21.1309%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.8809%" y="405" width="0.0816%" height="15" fill="rgb(254,84,18)" fg:x="256" fg:w="1"/><text x="21.1309%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.8809%" y="389" width="0.0816%" height="15" fill="rgb(225,38,54)" fg:x="256" fg:w="1"/><text x="21.1309%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.8809%" y="373" width="0.0816%" height="15" fill="rgb(246,50,30)" fg:x="256" fg:w="1"/><text x="21.1309%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.8809%" y="357" width="0.0816%" height="15" fill="rgb(246,148,9)" fg:x="256" fg:w="1"/><text x="21.1309%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.8809%" y="341" width="0.0816%" height="15" fill="rgb(223,75,4)" fg:x="256" fg:w="1"/><text x="21.1309%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8809%" y="325" width="0.0816%" height="15" fill="rgb(239,148,41)" fg:x="256" fg:w="1"/><text x="21.1309%" y="335.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.41%)</title><rect x="20.7178%" y="533" width="0.4078%" height="15" fill="rgb(205,195,3)" fg:x="254" fg:w="5"/><text x="20.9678%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="20.7178%" y="517" width="0.4078%" height="15" fill="rgb(254,161,1)" fg:x="254" fg:w="5"/><text x="20.9678%" y="527.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="20.7178%" y="501" width="0.4078%" height="15" fill="rgb(211,229,8)" fg:x="254" fg:w="5"/><text x="20.9678%" y="511.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="20.7178%" y="485" width="0.4078%" height="15" fill="rgb(220,97,9)" fg:x="254" fg:w="5"/><text x="20.9678%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="20.7178%" y="469" width="0.4078%" height="15" fill="rgb(240,218,8)" fg:x="254" fg:w="5"/><text x="20.9678%" y="479.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="20.7178%" y="453" width="0.4078%" height="15" fill="rgb(250,44,0)" fg:x="254" fg:w="5"/><text x="20.9678%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="20.7178%" y="437" width="0.4078%" height="15" fill="rgb(236,41,53)" fg:x="254" fg:w="5"/><text x="20.9678%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.9625%" y="421" width="0.1631%" height="15" fill="rgb(218,227,13)" fg:x="257" fg:w="2"/><text x="21.2125%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9625%" y="405" width="0.1631%" height="15" fill="rgb(217,94,32)" fg:x="257" fg:w="2"/><text x="21.2125%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.9625%" y="389" width="0.1631%" height="15" fill="rgb(213,217,12)" fg:x="257" fg:w="2"/><text x="21.2125%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9625%" y="373" width="0.1631%" height="15" fill="rgb(229,13,46)" fg:x="257" fg:w="2"/><text x="21.2125%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.9625%" y="357" width="0.1631%" height="15" fill="rgb(243,139,5)" fg:x="257" fg:w="2"/><text x="21.2125%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9625%" y="341" width="0.1631%" height="15" fill="rgb(249,38,45)" fg:x="257" fg:w="2"/><text x="21.2125%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.9625%" y="325" width="0.1631%" height="15" fill="rgb(216,70,11)" fg:x="257" fg:w="2"/><text x="21.2125%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9625%" y="309" width="0.1631%" height="15" fill="rgb(253,101,25)" fg:x="257" fg:w="2"/><text x="21.2125%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.0440%" y="293" width="0.0816%" height="15" fill="rgb(207,197,30)" fg:x="258" fg:w="1"/><text x="21.2940%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="21.1256%" y="501" width="0.0816%" height="15" fill="rgb(238,87,13)" fg:x="259" fg:w="1"/><text x="21.3756%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.1256%" y="485" width="0.0816%" height="15" fill="rgb(215,155,8)" fg:x="259" fg:w="1"/><text x="21.3756%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.2072%" y="389" width="0.1631%" height="15" fill="rgb(239,166,38)" fg:x="260" fg:w="2"/><text x="21.4572%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2887%" y="373" width="0.0816%" height="15" fill="rgb(240,194,35)" fg:x="261" fg:w="1"/><text x="21.5387%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2887%" y="357" width="0.0816%" height="15" fill="rgb(219,10,44)" fg:x="261" fg:w="1"/><text x="21.5387%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.2887%" y="341" width="0.0816%" height="15" fill="rgb(251,220,35)" fg:x="261" fg:w="1"/><text x="21.5387%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="21.2072%" y="469" width="0.2447%" height="15" fill="rgb(218,117,13)" fg:x="260" fg:w="3"/><text x="21.4572%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="21.2072%" y="453" width="0.2447%" height="15" fill="rgb(221,213,40)" fg:x="260" fg:w="3"/><text x="21.4572%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="21.2072%" y="437" width="0.2447%" height="15" fill="rgb(251,224,35)" fg:x="260" fg:w="3"/><text x="21.4572%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.2072%" y="421" width="0.2447%" height="15" fill="rgb(241,33,39)" fg:x="260" fg:w="3"/><text x="21.4572%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.2072%" y="405" width="0.2447%" height="15" fill="rgb(222,74,17)" fg:x="260" fg:w="3"/><text x="21.4572%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.3703%" y="389" width="0.0816%" height="15" fill="rgb(225,103,0)" fg:x="262" fg:w="1"/><text x="21.6203%" y="399.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="21.2072%" y="485" width="0.4078%" height="15" fill="rgb(240,0,12)" fg:x="260" fg:w="5"/><text x="21.4572%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="21.4519%" y="469" width="0.1631%" height="15" fill="rgb(233,213,37)" fg:x="263" fg:w="2"/><text x="21.7019%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="21.4519%" y="453" width="0.1631%" height="15" fill="rgb(225,84,52)" fg:x="263" fg:w="2"/><text x="21.7019%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.4519%" y="437" width="0.1631%" height="15" fill="rgb(247,160,51)" fg:x="263" fg:w="2"/><text x="21.7019%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4519%" y="421" width="0.1631%" height="15" fill="rgb(244,60,51)" fg:x="263" fg:w="2"/><text x="21.7019%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4519%" y="405" width="0.1631%" height="15" fill="rgb(233,114,7)" fg:x="263" fg:w="2"/><text x="21.7019%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4519%" y="389" width="0.1631%" height="15" fill="rgb(246,136,16)" fg:x="263" fg:w="2"/><text x="21.7019%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4519%" y="373" width="0.1631%" height="15" fill="rgb(243,114,45)" fg:x="263" fg:w="2"/><text x="21.7019%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.4519%" y="357" width="0.1631%" height="15" fill="rgb(247,183,43)" fg:x="263" fg:w="2"/><text x="21.7019%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="21.1256%" y="517" width="0.5710%" height="15" fill="rgb(251,210,42)" fg:x="259" fg:w="7"/><text x="21.3756%" y="527.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="21.2072%" y="501" width="0.4894%" height="15" fill="rgb(221,88,35)" fg:x="260" fg:w="6"/><text x="21.4572%" y="511.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="21.6150%" y="485" width="0.0816%" height="15" fill="rgb(242,21,20)" fg:x="265" fg:w="1"/><text x="21.8650%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6150%" y="469" width="0.0816%" height="15" fill="rgb(233,226,36)" fg:x="265" fg:w="1"/><text x="21.8650%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6150%" y="453" width="0.0816%" height="15" fill="rgb(243,189,34)" fg:x="265" fg:w="1"/><text x="21.8650%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.6150%" y="437" width="0.0816%" height="15" fill="rgb(207,145,50)" fg:x="265" fg:w="1"/><text x="21.8650%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.6150%" y="421" width="0.0816%" height="15" fill="rgb(242,1,50)" fg:x="265" fg:w="1"/><text x="21.8650%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.6150%" y="405" width="0.0816%" height="15" fill="rgb(231,65,32)" fg:x="265" fg:w="1"/><text x="21.8650%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6150%" y="389" width="0.0816%" height="15" fill="rgb(208,68,49)" fg:x="265" fg:w="1"/><text x="21.8650%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6150%" y="373" width="0.0816%" height="15" fill="rgb(253,54,49)" fg:x="265" fg:w="1"/><text x="21.8650%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.6150%" y="357" width="0.0816%" height="15" fill="rgb(245,186,24)" fg:x="265" fg:w="1"/><text x="21.8650%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.6150%" y="341" width="0.0816%" height="15" fill="rgb(209,2,41)" fg:x="265" fg:w="1"/><text x="21.8650%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.6150%" y="325" width="0.0816%" height="15" fill="rgb(242,208,54)" fg:x="265" fg:w="1"/><text x="21.8650%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.6150%" y="309" width="0.0816%" height="15" fill="rgb(225,9,51)" fg:x="265" fg:w="1"/><text x="21.8650%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6966%" y="421" width="0.0816%" height="15" fill="rgb(207,207,25)" fg:x="266" fg:w="1"/><text x="21.9466%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6966%" y="405" width="0.0816%" height="15" fill="rgb(253,96,18)" fg:x="266" fg:w="1"/><text x="21.9466%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6966%" y="389" width="0.0816%" height="15" fill="rgb(252,215,20)" fg:x="266" fg:w="1"/><text x="21.9466%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6966%" y="373" width="0.0816%" height="15" fill="rgb(245,227,26)" fg:x="266" fg:w="1"/><text x="21.9466%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6966%" y="357" width="0.0816%" height="15" fill="rgb(241,208,0)" fg:x="266" fg:w="1"/><text x="21.9466%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6966%" y="341" width="0.0816%" height="15" fill="rgb(224,130,10)" fg:x="266" fg:w="1"/><text x="21.9466%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6966%" y="325" width="0.0816%" height="15" fill="rgb(237,29,0)" fg:x="266" fg:w="1"/><text x="21.9466%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.6966%" y="309" width="0.0816%" height="15" fill="rgb(219,27,41)" fg:x="266" fg:w="1"/><text x="21.9466%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.6966%" y="293" width="0.0816%" height="15" fill="rgb(245,101,19)" fg:x="266" fg:w="1"/><text x="21.9466%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.6966%" y="277" width="0.0816%" height="15" fill="rgb(243,44,37)" fg:x="266" fg:w="1"/><text x="21.9466%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6966%" y="261" width="0.0816%" height="15" fill="rgb(228,213,43)" fg:x="266" fg:w="1"/><text x="21.9466%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6966%" y="245" width="0.0816%" height="15" fill="rgb(219,163,21)" fg:x="266" fg:w="1"/><text x="21.9466%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.6966%" y="229" width="0.0816%" height="15" fill="rgb(234,86,24)" fg:x="266" fg:w="1"/><text x="21.9466%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="21.6966%" y="213" width="0.0816%" height="15" fill="rgb(225,10,24)" fg:x="266" fg:w="1"/><text x="21.9466%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="21.6966%" y="197" width="0.0816%" height="15" fill="rgb(218,109,7)" fg:x="266" fg:w="1"/><text x="21.9466%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.6966%" y="469" width="0.1631%" height="15" fill="rgb(210,20,26)" fg:x="266" fg:w="2"/><text x="21.9466%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="21.6966%" y="453" width="0.1631%" height="15" fill="rgb(216,18,1)" fg:x="266" fg:w="2"/><text x="21.9466%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.6966%" y="437" width="0.1631%" height="15" fill="rgb(206,163,23)" fg:x="266" fg:w="2"/><text x="21.9466%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.7781%" y="421" width="0.0816%" height="15" fill="rgb(229,150,31)" fg:x="267" fg:w="1"/><text x="22.0281%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7781%" y="405" width="0.0816%" height="15" fill="rgb(231,10,5)" fg:x="267" fg:w="1"/><text x="22.0281%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.7781%" y="389" width="0.0816%" height="15" fill="rgb(250,40,50)" fg:x="267" fg:w="1"/><text x="22.0281%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7781%" y="373" width="0.0816%" height="15" fill="rgb(217,119,7)" fg:x="267" fg:w="1"/><text x="22.0281%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.7781%" y="357" width="0.0816%" height="15" fill="rgb(245,214,40)" fg:x="267" fg:w="1"/><text x="22.0281%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7781%" y="341" width="0.0816%" height="15" fill="rgb(216,187,1)" fg:x="267" fg:w="1"/><text x="22.0281%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.7781%" y="325" width="0.0816%" height="15" fill="rgb(237,146,21)" fg:x="267" fg:w="1"/><text x="22.0281%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.7781%" y="309" width="0.0816%" height="15" fill="rgb(210,174,47)" fg:x="267" fg:w="1"/><text x="22.0281%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.8597%" y="341" width="0.1631%" height="15" fill="rgb(218,111,39)" fg:x="268" fg:w="2"/><text x="22.1097%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.8597%" y="389" width="0.2447%" height="15" fill="rgb(224,95,19)" fg:x="268" fg:w="3"/><text x="22.1097%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.8597%" y="373" width="0.2447%" height="15" fill="rgb(234,15,38)" fg:x="268" fg:w="3"/><text x="22.1097%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.8597%" y="357" width="0.2447%" height="15" fill="rgb(246,56,12)" fg:x="268" fg:w="3"/><text x="22.1097%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="22.0228%" y="341" width="0.0816%" height="15" fill="rgb(247,16,17)" fg:x="270" fg:w="1"/><text x="22.2728%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="22.0228%" y="325" width="0.0816%" height="15" fill="rgb(215,151,11)" fg:x="270" fg:w="1"/><text x="22.2728%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="21.8597%" y="421" width="0.4078%" height="15" fill="rgb(225,16,24)" fg:x="268" fg:w="5"/><text x="22.1097%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="21.8597%" y="405" width="0.4078%" height="15" fill="rgb(217,117,5)" fg:x="268" fg:w="5"/><text x="22.1097%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.1044%" y="389" width="0.1631%" height="15" fill="rgb(246,187,53)" fg:x="271" fg:w="2"/><text x="22.3544%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.65%)</title><rect x="21.6966%" y="501" width="0.6525%" height="15" fill="rgb(241,71,40)" fg:x="266" fg:w="8"/><text x="21.9466%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.65%)</title><rect x="21.6966%" y="485" width="0.6525%" height="15" fill="rgb(231,67,39)" fg:x="266" fg:w="8"/><text x="21.9466%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.49%)</title><rect x="21.8597%" y="469" width="0.4894%" height="15" fill="rgb(222,120,24)" fg:x="268" fg:w="6"/><text x="22.1097%" y="479.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="21.8597%" y="453" width="0.4894%" height="15" fill="rgb(248,3,3)" fg:x="268" fg:w="6"/><text x="22.1097%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="21.8597%" y="437" width="0.4894%" height="15" fill="rgb(228,218,5)" fg:x="268" fg:w="6"/><text x="22.1097%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2675%" y="421" width="0.0816%" height="15" fill="rgb(212,202,43)" fg:x="273" fg:w="1"/><text x="22.5175%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2675%" y="405" width="0.0816%" height="15" fill="rgb(235,183,2)" fg:x="273" fg:w="1"/><text x="22.5175%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2675%" y="389" width="0.0816%" height="15" fill="rgb(230,165,10)" fg:x="273" fg:w="1"/><text x="22.5175%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2675%" y="373" width="0.0816%" height="15" fill="rgb(219,54,40)" fg:x="273" fg:w="1"/><text x="22.5175%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.2675%" y="357" width="0.0816%" height="15" fill="rgb(244,73,9)" fg:x="273" fg:w="1"/><text x="22.5175%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.2675%" y="341" width="0.0816%" height="15" fill="rgb(212,32,45)" fg:x="273" fg:w="1"/><text x="22.5175%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.2675%" y="325" width="0.0816%" height="15" fill="rgb(205,58,31)" fg:x="273" fg:w="1"/><text x="22.5175%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3491%" y="485" width="0.0816%" height="15" fill="rgb(250,120,43)" fg:x="274" fg:w="1"/><text x="22.5991%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 2.04%)</title><rect x="20.5546%" y="581" width="2.0392%" height="15" fill="rgb(235,13,10)" fg:x="252" fg:w="25"/><text x="20.8046%" y="591.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 2.04%)</title><rect x="20.5546%" y="565" width="2.0392%" height="15" fill="rgb(232,219,31)" fg:x="252" fg:w="25"/><text x="20.8046%" y="575.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (25 samples, 2.04%)</title><rect x="20.5546%" y="549" width="2.0392%" height="15" fill="rgb(218,157,51)" fg:x="252" fg:w="25"/><text x="20.8046%" y="559.50">p..</text></g><g><title>plugins_core::build::Build::leads_to (18 samples, 1.47%)</title><rect x="21.1256%" y="533" width="1.4682%" height="15" fill="rgb(211,91,52)" fg:x="259" fg:w="18"/><text x="21.3756%" y="543.50"></text></g><g><title>plugins_core::tools::leads_to (11 samples, 0.90%)</title><rect x="21.6966%" y="517" width="0.8972%" height="15" fill="rgb(240,173,1)" fg:x="266" fg:w="11"/><text x="21.9466%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.3491%" y="501" width="0.2447%" height="15" fill="rgb(248,20,47)" fg:x="274" fg:w="3"/><text x="22.5991%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="22.4307%" y="485" width="0.1631%" height="15" fill="rgb(217,221,40)" fg:x="275" fg:w="2"/><text x="22.6807%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.4307%" y="469" width="0.1631%" height="15" fill="rgb(226,149,51)" fg:x="275" fg:w="2"/><text x="22.6807%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="22.4307%" y="453" width="0.1631%" height="15" fill="rgb(252,193,7)" fg:x="275" fg:w="2"/><text x="22.6807%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.4307%" y="437" width="0.1631%" height="15" fill="rgb(205,123,0)" fg:x="275" fg:w="2"/><text x="22.6807%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.4307%" y="421" width="0.1631%" height="15" fill="rgb(233,173,25)" fg:x="275" fg:w="2"/><text x="22.6807%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5122%" y="405" width="0.0816%" height="15" fill="rgb(216,63,32)" fg:x="276" fg:w="1"/><text x="22.7622%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="22.5938%" y="549" width="0.0816%" height="15" fill="rgb(209,56,45)" fg:x="277" fg:w="1"/><text x="22.8438%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="22.6754%" y="549" width="0.0816%" height="15" fill="rgb(226,111,49)" fg:x="278" fg:w="1"/><text x="22.9254%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="22.7569%" y="549" width="0.0816%" height="15" fill="rgb(244,181,21)" fg:x="279" fg:w="1"/><text x="23.0069%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="22.7569%" y="533" width="0.0816%" height="15" fill="rgb(222,126,15)" fg:x="279" fg:w="1"/><text x="23.0069%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="22.7569%" y="517" width="0.0816%" height="15" fill="rgb(222,95,17)" fg:x="279" fg:w="1"/><text x="23.0069%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7569%" y="501" width="0.0816%" height="15" fill="rgb(254,46,5)" fg:x="279" fg:w="1"/><text x="23.0069%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.7569%" y="485" width="0.0816%" height="15" fill="rgb(236,216,35)" fg:x="279" fg:w="1"/><text x="23.0069%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.7569%" y="469" width="0.0816%" height="15" fill="rgb(217,187,26)" fg:x="279" fg:w="1"/><text x="23.0069%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.7569%" y="453" width="0.0816%" height="15" fill="rgb(207,192,25)" fg:x="279" fg:w="1"/><text x="23.0069%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.7569%" y="437" width="0.0816%" height="15" fill="rgb(253,135,27)" fg:x="279" fg:w="1"/><text x="23.0069%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.7569%" y="421" width="0.0816%" height="15" fill="rgb(211,122,29)" fg:x="279" fg:w="1"/><text x="23.0069%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.7569%" y="405" width="0.0816%" height="15" fill="rgb(233,162,40)" fg:x="279" fg:w="1"/><text x="23.0069%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.7569%" y="389" width="0.0816%" height="15" fill="rgb(222,184,47)" fg:x="279" fg:w="1"/><text x="23.0069%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.7569%" y="373" width="0.0816%" height="15" fill="rgb(249,99,23)" fg:x="279" fg:w="1"/><text x="23.0069%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.7569%" y="357" width="0.0816%" height="15" fill="rgb(214,60,12)" fg:x="279" fg:w="1"/><text x="23.0069%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.7569%" y="341" width="0.0816%" height="15" fill="rgb(250,229,36)" fg:x="279" fg:w="1"/><text x="23.0069%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.7569%" y="325" width="0.0816%" height="15" fill="rgb(232,195,10)" fg:x="279" fg:w="1"/><text x="23.0069%" y="335.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="22.8385%" y="549" width="0.0816%" height="15" fill="rgb(205,213,31)" fg:x="280" fg:w="1"/><text x="23.0885%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.8385%" y="533" width="0.0816%" height="15" fill="rgb(237,43,8)" fg:x="280" fg:w="1"/><text x="23.0885%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.8385%" y="517" width="0.0816%" height="15" fill="rgb(216,208,3)" fg:x="280" fg:w="1"/><text x="23.0885%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="22.9201%" y="533" width="0.0816%" height="15" fill="rgb(228,179,44)" fg:x="281" fg:w="1"/><text x="23.1701%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.9201%" y="517" width="0.0816%" height="15" fill="rgb(230,192,27)" fg:x="281" fg:w="1"/><text x="23.1701%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1648%" y="517" width="0.0816%" height="15" fill="rgb(251,30,38)" fg:x="284" fg:w="1"/><text x="23.4148%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1648%" y="501" width="0.0816%" height="15" fill="rgb(246,55,52)" fg:x="284" fg:w="1"/><text x="23.4148%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.1648%" y="485" width="0.0816%" height="15" fill="rgb(249,79,26)" fg:x="284" fg:w="1"/><text x="23.4148%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.1648%" y="469" width="0.0816%" height="15" fill="rgb(220,202,16)" fg:x="284" fg:w="1"/><text x="23.4148%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.1648%" y="453" width="0.0816%" height="15" fill="rgb(250,170,23)" fg:x="284" fg:w="1"/><text x="23.4148%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.1648%" y="437" width="0.0816%" height="15" fill="rgb(230,7,37)" fg:x="284" fg:w="1"/><text x="23.4148%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.1648%" y="421" width="0.0816%" height="15" fill="rgb(213,71,1)" fg:x="284" fg:w="1"/><text x="23.4148%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="23.2463%" y="517" width="0.0816%" height="15" fill="rgb(227,87,39)" fg:x="285" fg:w="1"/><text x="23.4963%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.2463%" y="501" width="0.0816%" height="15" fill="rgb(210,41,29)" fg:x="285" fg:w="1"/><text x="23.4963%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.2463%" y="485" width="0.0816%" height="15" fill="rgb(206,191,31)" fg:x="285" fg:w="1"/><text x="23.4963%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.2463%" y="469" width="0.0816%" height="15" fill="rgb(247,75,54)" fg:x="285" fg:w="1"/><text x="23.4963%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.2463%" y="453" width="0.0816%" height="15" fill="rgb(208,54,50)" fg:x="285" fg:w="1"/><text x="23.4963%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="23.4095%" y="485" width="0.4894%" height="15" fill="rgb(214,90,37)" fg:x="287" fg:w="6"/><text x="23.6595%" y="495.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="23.4910%" y="469" width="0.4078%" height="15" fill="rgb(220,132,6)" fg:x="288" fg:w="5"/><text x="23.7410%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="23.5726%" y="453" width="0.3263%" height="15" fill="rgb(213,167,7)" fg:x="289" fg:w="4"/><text x="23.8226%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="23.6542%" y="437" width="0.2447%" height="15" fill="rgb(243,36,27)" fg:x="290" fg:w="3"/><text x="23.9042%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="23.7357%" y="421" width="0.1631%" height="15" fill="rgb(235,147,12)" fg:x="291" fg:w="2"/><text x="23.9857%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="23.7357%" y="405" width="0.1631%" height="15" fill="rgb(212,198,44)" fg:x="291" fg:w="2"/><text x="23.9857%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.8173%" y="389" width="0.0816%" height="15" fill="rgb(218,68,50)" fg:x="292" fg:w="1"/><text x="24.0673%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="23.4095%" y="501" width="0.5710%" height="15" fill="rgb(224,79,48)" fg:x="287" fg:w="7"/><text x="23.6595%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.8989%" y="485" width="0.0816%" height="15" fill="rgb(213,191,50)" fg:x="293" fg:w="1"/><text x="24.1489%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.8989%" y="469" width="0.0816%" height="15" fill="rgb(254,146,10)" fg:x="293" fg:w="1"/><text x="24.1489%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.8989%" y="453" width="0.0816%" height="15" fill="rgb(215,175,11)" fg:x="293" fg:w="1"/><text x="24.1489%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="24.0620%" y="485" width="0.3263%" height="15" fill="rgb(207,49,7)" fg:x="295" fg:w="4"/><text x="24.3120%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="24.0620%" y="469" width="0.3263%" height="15" fill="rgb(234,144,29)" fg:x="295" fg:w="4"/><text x="24.3120%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="24.1436%" y="453" width="0.2447%" height="15" fill="rgb(213,222,48)" fg:x="296" fg:w="3"/><text x="24.3936%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="24.1436%" y="437" width="0.2447%" height="15" fill="rgb(222,8,6)" fg:x="296" fg:w="3"/><text x="24.3936%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="24.1436%" y="421" width="0.2447%" height="15" fill="rgb(221,114,49)" fg:x="296" fg:w="3"/><text x="24.3936%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="24.2251%" y="405" width="0.1631%" height="15" fill="rgb(250,140,42)" fg:x="297" fg:w="2"/><text x="24.4751%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="24.2251%" y="389" width="0.1631%" height="15" fill="rgb(250,150,27)" fg:x="297" fg:w="2"/><text x="24.4751%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.4698%" y="437" width="0.0816%" height="15" fill="rgb(252,159,3)" fg:x="300" fg:w="1"/><text x="24.7198%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.4698%" y="421" width="0.0816%" height="15" fill="rgb(241,182,3)" fg:x="300" fg:w="1"/><text x="24.7198%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="24.4698%" y="469" width="0.1631%" height="15" fill="rgb(236,3,9)" fg:x="300" fg:w="2"/><text x="24.7198%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="24.4698%" y="453" width="0.1631%" height="15" fill="rgb(223,227,51)" fg:x="300" fg:w="2"/><text x="24.7198%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="24.5514%" y="437" width="0.0816%" height="15" fill="rgb(232,133,30)" fg:x="301" fg:w="1"/><text x="24.8014%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="24.6330%" y="469" width="0.3263%" height="15" fill="rgb(209,93,27)" fg:x="302" fg:w="4"/><text x="24.8830%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.7961%" y="453" width="0.1631%" height="15" fill="rgb(208,108,34)" fg:x="304" fg:w="2"/><text x="25.0461%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.8777%" y="437" width="0.0816%" height="15" fill="rgb(215,189,13)" fg:x="305" fg:w="1"/><text x="25.1277%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.9592%" y="453" width="0.0816%" height="15" fill="rgb(206,88,23)" fg:x="306" fg:w="1"/><text x="25.2092%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.9592%" y="437" width="0.0816%" height="15" fill="rgb(240,173,0)" fg:x="306" fg:w="1"/><text x="25.2092%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.9592%" y="421" width="0.0816%" height="15" fill="rgb(223,106,52)" fg:x="306" fg:w="1"/><text x="25.2092%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.2855%" y="437" width="0.0816%" height="15" fill="rgb(206,130,16)" fg:x="310" fg:w="1"/><text x="25.5355%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="25.3670%" y="437" width="0.2447%" height="15" fill="rgb(220,54,25)" fg:x="311" fg:w="3"/><text x="25.6170%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.4486%" y="421" width="0.1631%" height="15" fill="rgb(210,4,38)" fg:x="312" fg:w="2"/><text x="25.6986%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="25.4486%" y="405" width="0.1631%" height="15" fill="rgb(238,94,39)" fg:x="312" fg:w="2"/><text x="25.6986%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.5302%" y="389" width="0.0816%" height="15" fill="rgb(234,124,34)" fg:x="313" fg:w="1"/><text x="25.7802%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.5302%" y="373" width="0.0816%" height="15" fill="rgb(221,91,40)" fg:x="313" fg:w="1"/><text x="25.7802%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.5302%" y="357" width="0.0816%" height="15" fill="rgb(246,53,28)" fg:x="313" fg:w="1"/><text x="25.7802%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.5302%" y="341" width="0.0816%" height="15" fill="rgb(229,109,7)" fg:x="313" fg:w="1"/><text x="25.7802%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.6117%" y="421" width="0.0816%" height="15" fill="rgb(249,117,8)" fg:x="314" fg:w="1"/><text x="25.8617%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.6117%" y="405" width="0.0816%" height="15" fill="rgb(210,181,1)" fg:x="314" fg:w="1"/><text x="25.8617%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.8564%" y="405" width="0.0816%" height="15" fill="rgb(211,66,1)" fg:x="317" fg:w="1"/><text x="26.1064%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.8564%" y="389" width="0.0816%" height="15" fill="rgb(221,90,14)" fg:x="317" fg:w="1"/><text x="26.1064%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.8564%" y="373" width="0.0816%" height="15" fill="rgb(219,222,44)" fg:x="317" fg:w="1"/><text x="26.1064%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="25.8564%" y="357" width="0.0816%" height="15" fill="rgb(246,34,33)" fg:x="317" fg:w="1"/><text x="26.1064%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="25.9380%" y="405" width="0.2447%" height="15" fill="rgb(227,135,41)" fg:x="318" fg:w="3"/><text x="26.1880%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.9380%" y="389" width="0.2447%" height="15" fill="rgb(226,15,14)" fg:x="318" fg:w="3"/><text x="26.1880%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.0196%" y="373" width="0.1631%" height="15" fill="rgb(236,148,47)" fg:x="319" fg:w="2"/><text x="26.2696%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="25.6933%" y="421" width="0.5710%" height="15" fill="rgb(233,162,52)" fg:x="315" fg:w="7"/><text x="25.9433%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.1827%" y="405" width="0.0816%" height="15" fill="rgb(244,35,28)" fg:x="321" fg:w="1"/><text x="26.4327%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.98%)</title><rect x="25.6117%" y="437" width="0.9788%" height="15" fill="rgb(205,121,10)" fg:x="314" fg:w="12"/><text x="25.8617%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="26.2643%" y="421" width="0.3263%" height="15" fill="rgb(250,58,18)" fg:x="322" fg:w="4"/><text x="26.5143%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.3458%" y="405" width="0.2447%" height="15" fill="rgb(216,37,13)" fg:x="323" fg:w="3"/><text x="26.5958%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="26.3458%" y="389" width="0.2447%" height="15" fill="rgb(221,215,42)" fg:x="323" fg:w="3"/><text x="26.5958%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="26.4274%" y="373" width="0.1631%" height="15" fill="rgb(217,214,19)" fg:x="324" fg:w="2"/><text x="26.6774%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="26.4274%" y="357" width="0.1631%" height="15" fill="rgb(233,139,13)" fg:x="324" fg:w="2"/><text x="26.6774%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="26.4274%" y="341" width="0.1631%" height="15" fill="rgb(247,168,23)" fg:x="324" fg:w="2"/><text x="26.6774%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.28%)</title><rect x="24.3883%" y="485" width="2.2838%" height="15" fill="rgb(207,202,1)" fg:x="299" fg:w="28"/><text x="24.6383%" y="495.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.71%)</title><rect x="24.9592%" y="469" width="1.7129%" height="15" fill="rgb(220,155,48)" fg:x="306" fg:w="21"/><text x="25.2092%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.63%)</title><rect x="25.0408%" y="453" width="1.6313%" height="15" fill="rgb(250,43,26)" fg:x="307" fg:w="20"/><text x="25.2908%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.5905%" y="437" width="0.0816%" height="15" fill="rgb(212,190,23)" fg:x="326" fg:w="1"/><text x="26.8405%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (48 samples, 3.92%)</title><rect x="23.3279%" y="517" width="3.9152%" height="15" fill="rgb(216,39,24)" fg:x="286" fg:w="48"/><text x="23.5779%" y="527.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (40 samples, 3.26%)</title><rect x="23.9804%" y="501" width="3.2626%" height="15" fill="rgb(252,113,16)" fg:x="294" fg:w="40"/><text x="24.2304%" y="511.50">ser..</text></g><g><title>std::io::Write::write_all (7 samples, 0.57%)</title><rect x="26.6721%" y="485" width="0.5710%" height="15" fill="rgb(208,113,19)" fg:x="327" fg:w="7"/><text x="26.9221%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.57%)</title><rect x="26.6721%" y="469" width="0.5710%" height="15" fill="rgb(234,107,25)" fg:x="327" fg:w="7"/><text x="26.9221%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.49%)</title><rect x="26.7537%" y="453" width="0.4894%" height="15" fill="rgb(234,217,51)" fg:x="328" fg:w="6"/><text x="27.0037%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.49%)</title><rect x="26.7537%" y="437" width="0.4894%" height="15" fill="rgb(251,29,42)" fg:x="328" fg:w="6"/><text x="27.0037%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.49%)</title><rect x="26.7537%" y="421" width="0.4894%" height="15" fill="rgb(221,62,51)" fg:x="328" fg:w="6"/><text x="27.0037%" y="431.50"></text></g><g><title>realloc (5 samples, 0.41%)</title><rect x="26.8352%" y="405" width="0.4078%" height="15" fill="rgb(240,192,43)" fg:x="329" fg:w="5"/><text x="27.0852%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="27.2431%" y="485" width="0.2447%" height="15" fill="rgb(224,157,47)" fg:x="334" fg:w="3"/><text x="27.4931%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.33%)</title><rect x="27.4878%" y="469" width="0.3263%" height="15" fill="rgb(226,84,45)" fg:x="337" fg:w="4"/><text x="27.7378%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.7325%" y="453" width="0.0816%" height="15" fill="rgb(208,207,23)" fg:x="340" fg:w="1"/><text x="27.9825%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="27.8140%" y="453" width="0.1631%" height="15" fill="rgb(253,34,51)" fg:x="341" fg:w="2"/><text x="28.0640%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.8956%" y="437" width="0.0816%" height="15" fill="rgb(227,26,34)" fg:x="342" fg:w="1"/><text x="28.1456%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="27.9772%" y="453" width="0.0816%" height="15" fill="rgb(245,75,19)" fg:x="343" fg:w="1"/><text x="28.2272%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.1403%" y="437" width="0.0816%" height="15" fill="rgb(250,191,31)" fg:x="345" fg:w="1"/><text x="28.3903%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.14%)</title><rect x="27.2431%" y="517" width="1.1419%" height="15" fill="rgb(224,11,50)" fg:x="334" fg:w="14"/><text x="27.4931%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.14%)</title><rect x="27.2431%" y="501" width="1.1419%" height="15" fill="rgb(231,171,7)" fg:x="334" fg:w="14"/><text x="27.4931%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="27.4878%" y="485" width="0.8972%" height="15" fill="rgb(252,214,10)" fg:x="337" fg:w="11"/><text x="27.7378%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="27.8140%" y="469" width="0.5710%" height="15" fill="rgb(249,45,46)" fg:x="341" fg:w="7"/><text x="28.0640%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="28.0587%" y="453" width="0.3263%" height="15" fill="rgb(240,173,7)" fg:x="344" fg:w="4"/><text x="28.3087%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.2219%" y="437" width="0.1631%" height="15" fill="rgb(235,214,13)" fg:x="346" fg:w="2"/><text x="28.4719%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.2219%" y="421" width="0.1631%" height="15" fill="rgb(245,156,8)" fg:x="346" fg:w="2"/><text x="28.4719%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.2219%" y="405" width="0.1631%" height="15" fill="rgb(235,46,12)" fg:x="346" fg:w="2"/><text x="28.4719%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.3034%" y="389" width="0.0816%" height="15" fill="rgb(221,81,14)" fg:x="347" fg:w="1"/><text x="28.5534%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3034%" y="373" width="0.0816%" height="15" fill="rgb(238,207,9)" fg:x="347" fg:w="1"/><text x="28.5534%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="28.3850%" y="501" width="0.1631%" height="15" fill="rgb(224,129,35)" fg:x="348" fg:w="2"/><text x="28.6350%" y="511.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="28.3850%" y="485" width="0.1631%" height="15" fill="rgb(243,218,34)" fg:x="348" fg:w="2"/><text x="28.6350%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="28.5481%" y="501" width="0.0816%" height="15" fill="rgb(220,166,13)" fg:x="350" fg:w="1"/><text x="28.7981%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.5481%" y="485" width="0.0816%" height="15" fill="rgb(227,167,49)" fg:x="350" fg:w="1"/><text x="28.7981%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="29.0375%" y="469" width="0.2447%" height="15" fill="rgb(234,142,12)" fg:x="356" fg:w="3"/><text x="29.2875%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.1191%" y="453" width="0.1631%" height="15" fill="rgb(207,100,48)" fg:x="357" fg:w="2"/><text x="29.3691%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="29.2007%" y="437" width="0.0816%" height="15" fill="rgb(210,25,14)" fg:x="358" fg:w="1"/><text x="29.4507%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2822%" y="469" width="0.0816%" height="15" fill="rgb(246,116,27)" fg:x="359" fg:w="1"/><text x="29.5322%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.2822%" y="453" width="0.0816%" height="15" fill="rgb(214,193,42)" fg:x="359" fg:w="1"/><text x="29.5322%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.2822%" y="437" width="0.0816%" height="15" fill="rgb(214,122,8)" fg:x="359" fg:w="1"/><text x="29.5322%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="29.6085%" y="421" width="0.2447%" height="15" fill="rgb(244,173,18)" fg:x="363" fg:w="3"/><text x="29.8585%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="29.6085%" y="405" width="0.2447%" height="15" fill="rgb(232,68,19)" fg:x="363" fg:w="3"/><text x="29.8585%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="29.6085%" y="389" width="0.2447%" height="15" fill="rgb(236,224,1)" fg:x="363" fg:w="3"/><text x="29.8585%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.8532%" y="389" width="0.0816%" height="15" fill="rgb(240,11,8)" fg:x="366" fg:w="1"/><text x="30.1032%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="29.8532%" y="421" width="0.1631%" height="15" fill="rgb(244,159,20)" fg:x="366" fg:w="2"/><text x="30.1032%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="29.8532%" y="405" width="0.1631%" height="15" fill="rgb(240,223,54)" fg:x="366" fg:w="2"/><text x="30.1032%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="29.9347%" y="389" width="0.0816%" height="15" fill="rgb(237,146,5)" fg:x="367" fg:w="1"/><text x="30.1847%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.9347%" y="373" width="0.0816%" height="15" fill="rgb(218,221,32)" fg:x="367" fg:w="1"/><text x="30.1847%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.9347%" y="357" width="0.0816%" height="15" fill="rgb(244,96,26)" fg:x="367" fg:w="1"/><text x="30.1847%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9347%" y="341" width="0.0816%" height="15" fill="rgb(245,184,37)" fg:x="367" fg:w="1"/><text x="30.1847%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0163%" y="389" width="0.0816%" height="15" fill="rgb(248,91,47)" fg:x="368" fg:w="1"/><text x="30.2663%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="30.2610%" y="373" width="0.0816%" height="15" fill="rgb(243,199,8)" fg:x="371" fg:w="1"/><text x="30.5110%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.5057%" y="325" width="0.1631%" height="15" fill="rgb(249,12,15)" fg:x="374" fg:w="2"/><text x="30.7557%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.5873%" y="309" width="0.0816%" height="15" fill="rgb(245,97,12)" fg:x="375" fg:w="1"/><text x="30.8373%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="30.7504%" y="309" width="0.0816%" height="15" fill="rgb(244,61,1)" fg:x="377" fg:w="1"/><text x="31.0004%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7504%" y="293" width="0.0816%" height="15" fill="rgb(222,194,10)" fg:x="377" fg:w="1"/><text x="31.0004%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.7504%" y="277" width="0.0816%" height="15" fill="rgb(226,178,8)" fg:x="377" fg:w="1"/><text x="31.0004%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7504%" y="261" width="0.0816%" height="15" fill="rgb(241,32,34)" fg:x="377" fg:w="1"/><text x="31.0004%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="30.3426%" y="373" width="0.5710%" height="15" fill="rgb(254,26,6)" fg:x="372" fg:w="7"/><text x="30.5926%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="30.3426%" y="357" width="0.5710%" height="15" fill="rgb(249,71,11)" fg:x="372" fg:w="7"/><text x="30.5926%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="30.4241%" y="341" width="0.4894%" height="15" fill="rgb(232,170,27)" fg:x="373" fg:w="6"/><text x="30.6741%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="30.6688%" y="325" width="0.2447%" height="15" fill="rgb(214,223,17)" fg:x="376" fg:w="3"/><text x="30.9188%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="30.8320%" y="309" width="0.0816%" height="15" fill="rgb(250,18,15)" fg:x="378" fg:w="1"/><text x="31.0820%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.98%)</title><rect x="30.0163%" y="405" width="0.9788%" height="15" fill="rgb(212,153,51)" fg:x="368" fg:w="12"/><text x="30.2663%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.90%)</title><rect x="30.0979%" y="389" width="0.8972%" height="15" fill="rgb(219,194,12)" fg:x="369" fg:w="11"/><text x="30.3479%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9135%" y="373" width="0.0816%" height="15" fill="rgb(212,58,17)" fg:x="379" fg:w="1"/><text x="31.1635%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.47%)</title><rect x="29.6085%" y="437" width="1.4682%" height="15" fill="rgb(254,5,10)" fg:x="363" fg:w="18"/><text x="29.8585%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.06%)</title><rect x="30.0163%" y="421" width="1.0604%" height="15" fill="rgb(246,91,7)" fg:x="368" fg:w="13"/><text x="30.2663%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9951%" y="405" width="0.0816%" height="15" fill="rgb(218,108,49)" fg:x="380" fg:w="1"/><text x="31.2451%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.71%)</title><rect x="29.5269%" y="453" width="1.7129%" height="15" fill="rgb(238,123,20)" fg:x="362" fg:w="21"/><text x="29.7769%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="31.0767%" y="437" width="0.1631%" height="15" fill="rgb(231,69,23)" fg:x="381" fg:w="2"/><text x="31.3267%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.0767%" y="421" width="0.1631%" height="15" fill="rgb(230,209,3)" fg:x="381" fg:w="2"/><text x="31.3267%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2398%" y="421" width="0.0816%" height="15" fill="rgb(231,19,0)" fg:x="383" fg:w="1"/><text x="31.4898%" y="431.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (104 samples, 8.48%)</title><rect x="22.9201%" y="549" width="8.4829%" height="15" fill="rgb(226,192,25)" fg:x="281" fg:w="104"/><text x="23.1701%" y="559.50">engine::inte..</text></g><g><title>engine::session::SavesEntities::check_for_changes (103 samples, 8.40%)</title><rect x="23.0016%" y="533" width="8.4013%" height="15" fill="rgb(223,175,53)" fg:x="282" fg:w="103"/><text x="23.2516%" y="543.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (37 samples, 3.02%)</title><rect x="28.3850%" y="517" width="3.0179%" height="15" fill="rgb(248,35,51)" fg:x="348" fg:w="37"/><text x="28.6350%" y="527.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (34 samples, 2.77%)</title><rect x="28.6297%" y="501" width="2.7732%" height="15" fill="rgb(230,37,26)" fg:x="351" fg:w="34"/><text x="28.8797%" y="511.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.61%)</title><rect x="28.7928%" y="485" width="2.6101%" height="15" fill="rgb(206,120,22)" fg:x="353" fg:w="32"/><text x="29.0428%" y="495.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (25 samples, 2.04%)</title><rect x="29.3638%" y="469" width="2.0392%" height="15" fill="rgb(207,165,28)" fg:x="360" fg:w="25"/><text x="29.6138%" y="479.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.2398%" y="453" width="0.1631%" height="15" fill="rgb(226,23,46)" fg:x="383" fg:w="2"/><text x="31.4898%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.2398%" y="437" width="0.1631%" height="15" fill="rgb(208,130,44)" fg:x="383" fg:w="2"/><text x="31.4898%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.3214%" y="421" width="0.0816%" height="15" fill="rgb(231,67,8)" fg:x="384" fg:w="1"/><text x="31.5714%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="31.4029%" y="533" width="0.0816%" height="15" fill="rgb(205,183,22)" fg:x="385" fg:w="1"/><text x="31.6529%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="31.4029%" y="517" width="0.0816%" height="15" fill="rgb(224,47,9)" fg:x="385" fg:w="1"/><text x="31.6529%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.4029%" y="501" width="0.0816%" height="15" fill="rgb(250,183,49)" fg:x="385" fg:w="1"/><text x="31.6529%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.4029%" y="485" width="0.0816%" height="15" fill="rgb(220,151,39)" fg:x="385" fg:w="1"/><text x="31.6529%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.4029%" y="469" width="0.0816%" height="15" fill="rgb(220,118,20)" fg:x="385" fg:w="1"/><text x="31.6529%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.4029%" y="453" width="0.0816%" height="15" fill="rgb(231,65,51)" fg:x="385" fg:w="1"/><text x="31.6529%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.4029%" y="437" width="0.0816%" height="15" fill="rgb(253,125,37)" fg:x="385" fg:w="1"/><text x="31.6529%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.4029%" y="421" width="0.0816%" height="15" fill="rgb(232,102,6)" fg:x="385" fg:w="1"/><text x="31.6529%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.4029%" y="405" width="0.0816%" height="15" fill="rgb(251,105,13)" fg:x="385" fg:w="1"/><text x="31.6529%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.4029%" y="389" width="0.0816%" height="15" fill="rgb(222,179,29)" fg:x="385" fg:w="1"/><text x="31.6529%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.4029%" y="373" width="0.0816%" height="15" fill="rgb(229,180,53)" fg:x="385" fg:w="1"/><text x="31.6529%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.4029%" y="357" width="0.0816%" height="15" fill="rgb(238,104,13)" fg:x="385" fg:w="1"/><text x="31.6529%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.4029%" y="341" width="0.0816%" height="15" fill="rgb(210,130,5)" fg:x="385" fg:w="1"/><text x="31.6529%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.4029%" y="325" width="0.0816%" height="15" fill="rgb(233,87,49)" fg:x="385" fg:w="1"/><text x="31.6529%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.4029%" y="309" width="0.0816%" height="15" fill="rgb(243,34,9)" fg:x="385" fg:w="1"/><text x="31.6529%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.4029%" y="293" width="0.0816%" height="15" fill="rgb(235,225,10)" fg:x="385" fg:w="1"/><text x="31.6529%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.4029%" y="277" width="0.0816%" height="15" fill="rgb(212,0,30)" fg:x="385" fg:w="1"/><text x="31.6529%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.4029%" y="261" width="0.0816%" height="15" fill="rgb(211,177,0)" fg:x="385" fg:w="1"/><text x="31.6529%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="31.4029%" y="245" width="0.0816%" height="15" fill="rgb(225,220,11)" fg:x="385" fg:w="1"/><text x="31.6529%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.4029%" y="229" width="0.0816%" height="15" fill="rgb(215,10,13)" fg:x="385" fg:w="1"/><text x="31.6529%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="31.4029%" y="213" width="0.0816%" height="15" fill="rgb(240,177,14)" fg:x="385" fg:w="1"/><text x="31.6529%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="31.4029%" y="197" width="0.0816%" height="15" fill="rgb(243,7,39)" fg:x="385" fg:w="1"/><text x="31.6529%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="31.4029%" y="181" width="0.0816%" height="15" fill="rgb(212,99,0)" fg:x="385" fg:w="1"/><text x="31.6529%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.4029%" y="165" width="0.0816%" height="15" fill="rgb(225,162,48)" fg:x="385" fg:w="1"/><text x="31.6529%" y="175.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="31.4029%" y="549" width="0.1631%" height="15" fill="rgb(246,16,25)" fg:x="385" fg:w="2"/><text x="31.6529%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="31.4845%" y="533" width="0.0816%" height="15" fill="rgb(220,150,2)" fg:x="386" fg:w="1"/><text x="31.7345%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4845%" y="517" width="0.0816%" height="15" fill="rgb(237,113,11)" fg:x="386" fg:w="1"/><text x="31.7345%" y="527.50"></text></g><g><title>engine::session::Session::flush (111 samples, 9.05%)</title><rect x="22.5938%" y="581" width="9.0538%" height="15" fill="rgb(236,70,20)" fg:x="277" fg:w="111"/><text x="22.8438%" y="591.50">engine::sessi..</text></g><g><title>engine::session::Session::save_entity_changes (111 samples, 9.05%)</title><rect x="22.5938%" y="565" width="9.0538%" height="15" fill="rgb(234,94,7)" fg:x="277" fg:w="111"/><text x="22.8438%" y="575.50">engine::sessi..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="31.5661%" y="549" width="0.0816%" height="15" fill="rgb(250,221,0)" fg:x="387" fg:w="1"/><text x="31.8161%" y="559.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="31.5661%" y="533" width="0.0816%" height="15" fill="rgb(245,149,46)" fg:x="387" fg:w="1"/><text x="31.8161%" y="543.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="31.5661%" y="517" width="0.0816%" height="15" fill="rgb(215,37,27)" fg:x="387" fg:w="1"/><text x="31.8161%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="31.5661%" y="501" width="0.0816%" height="15" fill="rgb(232,65,3)" fg:x="387" fg:w="1"/><text x="31.8161%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="31.5661%" y="485" width="0.0816%" height="15" fill="rgb(214,2,16)" fg:x="387" fg:w="1"/><text x="31.8161%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="31.5661%" y="469" width="0.0816%" height="15" fill="rgb(227,131,50)" fg:x="387" fg:w="1"/><text x="31.8161%" y="479.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="31.5661%" y="453" width="0.0816%" height="15" fill="rgb(247,131,45)" fg:x="387" fg:w="1"/><text x="31.8161%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="31.6476%" y="549" width="0.0816%" height="15" fill="rgb(215,97,47)" fg:x="388" fg:w="1"/><text x="31.8976%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="31.6476%" y="533" width="0.0816%" height="15" fill="rgb(233,143,12)" fg:x="388" fg:w="1"/><text x="31.8976%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8108%" y="469" width="0.0816%" height="15" fill="rgb(222,57,17)" fg:x="390" fg:w="1"/><text x="32.0608%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8108%" y="453" width="0.0816%" height="15" fill="rgb(214,119,38)" fg:x="390" fg:w="1"/><text x="32.0608%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8108%" y="437" width="0.0816%" height="15" fill="rgb(217,28,47)" fg:x="390" fg:w="1"/><text x="32.0608%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8108%" y="421" width="0.0816%" height="15" fill="rgb(231,14,52)" fg:x="390" fg:w="1"/><text x="32.0608%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9739%" y="373" width="0.0816%" height="15" fill="rgb(220,158,18)" fg:x="392" fg:w="1"/><text x="32.2239%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.9739%" y="357" width="0.0816%" height="15" fill="rgb(222,143,46)" fg:x="392" fg:w="1"/><text x="32.2239%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="31.8108%" y="517" width="0.3263%" height="15" fill="rgb(227,165,5)" fg:x="390" fg:w="4"/><text x="32.0608%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="31.8108%" y="501" width="0.3263%" height="15" fill="rgb(216,222,49)" fg:x="390" fg:w="4"/><text x="32.0608%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="31.8108%" y="485" width="0.3263%" height="15" fill="rgb(238,73,39)" fg:x="390" fg:w="4"/><text x="32.0608%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="31.8923%" y="469" width="0.2447%" height="15" fill="rgb(252,115,9)" fg:x="391" fg:w="3"/><text x="32.1423%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.9739%" y="453" width="0.1631%" height="15" fill="rgb(238,202,4)" fg:x="392" fg:w="2"/><text x="32.2239%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="31.9739%" y="437" width="0.1631%" height="15" fill="rgb(252,153,44)" fg:x="392" fg:w="2"/><text x="32.2239%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.9739%" y="421" width="0.1631%" height="15" fill="rgb(235,128,27)" fg:x="392" fg:w="2"/><text x="32.2239%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.9739%" y="405" width="0.1631%" height="15" fill="rgb(221,121,47)" fg:x="392" fg:w="2"/><text x="32.2239%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.9739%" y="389" width="0.1631%" height="15" fill="rgb(247,211,47)" fg:x="392" fg:w="2"/><text x="32.2239%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.0555%" y="373" width="0.0816%" height="15" fill="rgb(252,47,49)" fg:x="393" fg:w="1"/><text x="32.3055%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.1370%" y="469" width="0.0816%" height="15" fill="rgb(219,119,53)" fg:x="394" fg:w="1"/><text x="32.3870%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.1370%" y="453" width="0.0816%" height="15" fill="rgb(243,165,53)" fg:x="394" fg:w="1"/><text x="32.3870%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1370%" y="437" width="0.0816%" height="15" fill="rgb(230,12,35)" fg:x="394" fg:w="1"/><text x="32.3870%" y="447.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.57%)</title><rect x="31.7292%" y="533" width="0.5710%" height="15" fill="rgb(239,57,49)" fg:x="389" fg:w="7"/><text x="31.9792%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="32.1370%" y="517" width="0.1631%" height="15" fill="rgb(231,154,7)" fg:x="394" fg:w="2"/><text x="32.3870%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="32.1370%" y="501" width="0.1631%" height="15" fill="rgb(248,81,34)" fg:x="394" fg:w="2"/><text x="32.3870%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="32.1370%" y="485" width="0.1631%" height="15" fill="rgb(247,9,5)" fg:x="394" fg:w="2"/><text x="32.3870%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="32.2186%" y="469" width="0.0816%" height="15" fill="rgb(228,172,27)" fg:x="395" fg:w="1"/><text x="32.4686%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2186%" y="453" width="0.0816%" height="15" fill="rgb(230,57,44)" fg:x="395" fg:w="1"/><text x="32.4686%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="32.2186%" y="437" width="0.0816%" height="15" fill="rgb(249,35,22)" fg:x="395" fg:w="1"/><text x="32.4686%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2186%" y="421" width="0.0816%" height="15" fill="rgb(250,137,27)" fg:x="395" fg:w="1"/><text x="32.4686%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.2186%" y="405" width="0.0816%" height="15" fill="rgb(251,57,31)" fg:x="395" fg:w="1"/><text x="32.4686%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="32.2186%" y="389" width="0.0816%" height="15" fill="rgb(238,60,0)" fg:x="395" fg:w="1"/><text x="32.4686%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2186%" y="373" width="0.0816%" height="15" fill="rgb(242,185,39)" fg:x="395" fg:w="1"/><text x="32.4686%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.2186%" y="357" width="0.0816%" height="15" fill="rgb(240,63,43)" fg:x="395" fg:w="1"/><text x="32.4686%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2186%" y="341" width="0.0816%" height="15" fill="rgb(236,155,6)" fg:x="395" fg:w="1"/><text x="32.4686%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.2186%" y="325" width="0.0816%" height="15" fill="rgb(215,11,29)" fg:x="395" fg:w="1"/><text x="32.4686%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="32.2186%" y="309" width="0.0816%" height="15" fill="rgb(228,180,48)" fg:x="395" fg:w="1"/><text x="32.4686%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3002%" y="469" width="0.0816%" height="15" fill="rgb(241,102,12)" fg:x="396" fg:w="1"/><text x="32.5502%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (26 samples, 2.12%)</title><rect x="31.6476%" y="565" width="2.1207%" height="15" fill="rgb(246,213,4)" fg:x="388" fg:w="26"/><text x="31.8976%" y="575.50">&lt;..</text></g><g><title>engine::internal::Entities::add_entity (25 samples, 2.04%)</title><rect x="31.7292%" y="549" width="2.0392%" height="15" fill="rgb(218,134,35)" fg:x="389" fg:w="25"/><text x="31.9792%" y="559.50">e..</text></g><g><title>engine::internal::EntityMap::add_entity (18 samples, 1.47%)</title><rect x="32.3002%" y="533" width="1.4682%" height="15" fill="rgb(251,117,35)" fg:x="396" fg:w="18"/><text x="32.5502%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 1.47%)</title><rect x="32.3002%" y="517" width="1.4682%" height="15" fill="rgb(206,156,45)" fg:x="396" fg:w="18"/><text x="32.5502%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 1.47%)</title><rect x="32.3002%" y="501" width="1.4682%" height="15" fill="rgb(218,52,27)" fg:x="396" fg:w="18"/><text x="32.5502%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 1.47%)</title><rect x="32.3002%" y="485" width="1.4682%" height="15" fill="rgb(238,83,36)" fg:x="396" fg:w="18"/><text x="32.5502%" y="495.50"></text></g><g><title>__libc_malloc (17 samples, 1.39%)</title><rect x="32.3817%" y="469" width="1.3866%" height="15" fill="rgb(218,53,43)" fg:x="397" fg:w="17"/><text x="32.6317%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="33.8499%" y="549" width="0.0816%" height="15" fill="rgb(239,54,39)" fg:x="415" fg:w="1"/><text x="34.0999%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.8499%" y="533" width="0.0816%" height="15" fill="rgb(212,198,13)" fg:x="415" fg:w="1"/><text x="34.0999%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="33.9315%" y="549" width="0.0816%" height="15" fill="rgb(234,54,46)" fg:x="416" fg:w="1"/><text x="34.1815%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.9315%" y="533" width="0.0816%" height="15" fill="rgb(217,120,7)" fg:x="416" fg:w="1"/><text x="34.1815%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.9315%" y="517" width="0.0816%" height="15" fill="rgb(246,39,15)" fg:x="416" fg:w="1"/><text x="34.1815%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0131%" y="421" width="0.0816%" height="15" fill="rgb(242,143,31)" fg:x="417" fg:w="1"/><text x="34.2631%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0131%" y="405" width="0.0816%" height="15" fill="rgb(252,60,24)" fg:x="417" fg:w="1"/><text x="34.2631%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0131%" y="389" width="0.0816%" height="15" fill="rgb(249,220,7)" fg:x="417" fg:w="1"/><text x="34.2631%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.0131%" y="373" width="0.0816%" height="15" fill="rgb(236,67,13)" fg:x="417" fg:w="1"/><text x="34.2631%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.0131%" y="357" width="0.0816%" height="15" fill="rgb(210,62,39)" fg:x="417" fg:w="1"/><text x="34.2631%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.0131%" y="341" width="0.0816%" height="15" fill="rgb(219,122,53)" fg:x="417" fg:w="1"/><text x="34.2631%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0131%" y="325" width="0.0816%" height="15" fill="rgb(218,87,25)" fg:x="417" fg:w="1"/><text x="34.2631%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0131%" y="309" width="0.0816%" height="15" fill="rgb(234,179,48)" fg:x="417" fg:w="1"/><text x="34.2631%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.0131%" y="293" width="0.0816%" height="15" fill="rgb(248,90,0)" fg:x="417" fg:w="1"/><text x="34.2631%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.0131%" y="277" width="0.0816%" height="15" fill="rgb(207,228,37)" fg:x="417" fg:w="1"/><text x="34.2631%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.0131%" y="261" width="0.0816%" height="15" fill="rgb(235,214,15)" fg:x="417" fg:w="1"/><text x="34.2631%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.0131%" y="245" width="0.0816%" height="15" fill="rgb(210,144,39)" fg:x="417" fg:w="1"/><text x="34.2631%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0131%" y="229" width="0.0816%" height="15" fill="rgb(222,67,41)" fg:x="417" fg:w="1"/><text x="34.2631%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.0131%" y="469" width="0.1631%" height="15" fill="rgb(205,35,37)" fg:x="417" fg:w="2"/><text x="34.2631%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.0131%" y="453" width="0.1631%" height="15" fill="rgb(216,125,40)" fg:x="417" fg:w="2"/><text x="34.2631%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.0131%" y="437" width="0.1631%" height="15" fill="rgb(228,227,20)" fg:x="417" fg:w="2"/><text x="34.2631%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0946%" y="421" width="0.0816%" height="15" fill="rgb(242,173,45)" fg:x="418" fg:w="1"/><text x="34.3446%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0946%" y="405" width="0.0816%" height="15" fill="rgb(215,79,24)" fg:x="418" fg:w="1"/><text x="34.3446%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.0946%" y="389" width="0.0816%" height="15" fill="rgb(238,164,38)" fg:x="418" fg:w="1"/><text x="34.3446%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.0946%" y="373" width="0.0816%" height="15" fill="rgb(245,196,38)" fg:x="418" fg:w="1"/><text x="34.3446%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.0946%" y="357" width="0.0816%" height="15" fill="rgb(231,217,29)" fg:x="418" fg:w="1"/><text x="34.3446%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0946%" y="341" width="0.0816%" height="15" fill="rgb(245,6,4)" fg:x="418" fg:w="1"/><text x="34.3446%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0946%" y="325" width="0.0816%" height="15" fill="rgb(214,76,49)" fg:x="418" fg:w="1"/><text x="34.3446%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.0946%" y="309" width="0.0816%" height="15" fill="rgb(205,96,12)" fg:x="418" fg:w="1"/><text x="34.3446%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.0946%" y="293" width="0.0816%" height="15" fill="rgb(243,131,4)" fg:x="418" fg:w="1"/><text x="34.3446%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.0946%" y="277" width="0.0816%" height="15" fill="rgb(214,114,4)" fg:x="418" fg:w="1"/><text x="34.3446%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.0946%" y="261" width="0.0816%" height="15" fill="rgb(234,215,15)" fg:x="418" fg:w="1"/><text x="34.3446%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0946%" y="245" width="0.0816%" height="15" fill="rgb(250,216,45)" fg:x="418" fg:w="1"/><text x="34.3446%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.1762%" y="469" width="0.0816%" height="15" fill="rgb(236,128,4)" fg:x="419" fg:w="1"/><text x="34.4262%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.1762%" y="453" width="0.0816%" height="15" fill="rgb(234,50,33)" fg:x="419" fg:w="1"/><text x="34.4262%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.1762%" y="437" width="0.0816%" height="15" fill="rgb(253,131,37)" fg:x="419" fg:w="1"/><text x="34.4262%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.1762%" y="421" width="0.0816%" height="15" fill="rgb(218,55,27)" fg:x="419" fg:w="1"/><text x="34.4262%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.1762%" y="405" width="0.0816%" height="15" fill="rgb(241,220,28)" fg:x="419" fg:w="1"/><text x="34.4262%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.1762%" y="389" width="0.0816%" height="15" fill="rgb(241,90,48)" fg:x="419" fg:w="1"/><text x="34.4262%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4209%" y="373" width="0.0816%" height="15" fill="rgb(216,43,37)" fg:x="422" fg:w="1"/><text x="34.6709%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="34.0131%" y="517" width="0.5710%" height="15" fill="rgb(207,173,9)" fg:x="417" fg:w="7"/><text x="34.2631%" y="527.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="34.0131%" y="501" width="0.5710%" height="15" fill="rgb(240,126,30)" fg:x="417" fg:w="7"/><text x="34.2631%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="34.0131%" y="485" width="0.5710%" height="15" fill="rgb(228,178,53)" fg:x="417" fg:w="7"/><text x="34.2631%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.33%)</title><rect x="34.2577%" y="469" width="0.3263%" height="15" fill="rgb(217,33,4)" fg:x="420" fg:w="4"/><text x="34.5077%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="34.2577%" y="453" width="0.3263%" height="15" fill="rgb(206,124,34)" fg:x="420" fg:w="4"/><text x="34.5077%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="34.4209%" y="437" width="0.1631%" height="15" fill="rgb(208,122,53)" fg:x="422" fg:w="2"/><text x="34.6709%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.4209%" y="421" width="0.1631%" height="15" fill="rgb(215,202,26)" fg:x="422" fg:w="2"/><text x="34.6709%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="34.4209%" y="405" width="0.1631%" height="15" fill="rgb(232,198,31)" fg:x="422" fg:w="2"/><text x="34.6709%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.4209%" y="389" width="0.1631%" height="15" fill="rgb(222,23,35)" fg:x="422" fg:w="2"/><text x="34.6709%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="34.5024%" y="373" width="0.0816%" height="15" fill="rgb(242,27,53)" fg:x="423" fg:w="1"/><text x="34.7524%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.5024%" y="357" width="0.0816%" height="15" fill="rgb(210,216,42)" fg:x="423" fg:w="1"/><text x="34.7524%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.5024%" y="341" width="0.0816%" height="15" fill="rgb(234,39,38)" fg:x="423" fg:w="1"/><text x="34.7524%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.5024%" y="325" width="0.0816%" height="15" fill="rgb(235,126,54)" fg:x="423" fg:w="1"/><text x="34.7524%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5840%" y="469" width="0.0816%" height="15" fill="rgb(235,150,33)" fg:x="424" fg:w="1"/><text x="34.8340%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.5840%" y="453" width="0.0816%" height="15" fill="rgb(249,49,53)" fg:x="424" fg:w="1"/><text x="34.8340%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9103%" y="341" width="0.0816%" height="15" fill="rgb(238,60,50)" fg:x="428" fg:w="1"/><text x="35.1603%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9103%" y="325" width="0.0816%" height="15" fill="rgb(210,5,2)" fg:x="428" fg:w="1"/><text x="35.1603%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="34.9103%" y="309" width="0.0816%" height="15" fill="rgb(214,207,24)" fg:x="428" fg:w="1"/><text x="35.1603%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="34.9103%" y="293" width="0.0816%" height="15" fill="rgb(228,173,2)" fg:x="428" fg:w="1"/><text x="35.1603%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="34.9103%" y="277" width="0.0816%" height="15" fill="rgb(244,26,8)" fg:x="428" fg:w="1"/><text x="35.1603%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="34.9103%" y="261" width="0.0816%" height="15" fill="rgb(249,153,35)" fg:x="428" fg:w="1"/><text x="35.1603%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.06%)</title><rect x="34.0131%" y="549" width="1.0604%" height="15" fill="rgb(221,215,40)" fg:x="417" fg:w="13"/><text x="34.2631%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (13 samples, 1.06%)</title><rect x="34.0131%" y="533" width="1.0604%" height="15" fill="rgb(238,106,35)" fg:x="417" fg:w="13"/><text x="34.2631%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.49%)</title><rect x="34.5840%" y="517" width="0.4894%" height="15" fill="rgb(207,195,21)" fg:x="424" fg:w="6"/><text x="34.8340%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="34.5840%" y="501" width="0.4894%" height="15" fill="rgb(205,43,29)" fg:x="424" fg:w="6"/><text x="34.8340%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="34.5840%" y="485" width="0.4894%" height="15" fill="rgb(236,35,21)" fg:x="424" fg:w="6"/><text x="34.8340%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (5 samples, 0.41%)</title><rect x="34.6656%" y="469" width="0.4078%" height="15" fill="rgb(244,74,8)" fg:x="425" fg:w="5"/><text x="34.9156%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="34.6656%" y="453" width="0.4078%" height="15" fill="rgb(241,229,7)" fg:x="425" fg:w="5"/><text x="34.9156%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.33%)</title><rect x="34.7471%" y="437" width="0.3263%" height="15" fill="rgb(212,223,25)" fg:x="426" fg:w="4"/><text x="34.9971%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="34.7471%" y="421" width="0.3263%" height="15" fill="rgb(234,58,53)" fg:x="426" fg:w="4"/><text x="34.9971%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="34.7471%" y="405" width="0.3263%" height="15" fill="rgb(244,36,1)" fg:x="426" fg:w="4"/><text x="34.9971%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="34.7471%" y="389" width="0.3263%" height="15" fill="rgb(222,40,54)" fg:x="426" fg:w="4"/><text x="34.9971%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (4 samples, 0.33%)</title><rect x="34.7471%" y="373" width="0.3263%" height="15" fill="rgb(210,207,39)" fg:x="426" fg:w="4"/><text x="34.9971%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.8287%" y="357" width="0.2447%" height="15" fill="rgb(234,52,14)" fg:x="427" fg:w="3"/><text x="35.0787%" y="367.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="34.9918%" y="341" width="0.0816%" height="15" fill="rgb(239,108,46)" fg:x="429" fg:w="1"/><text x="35.2418%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="35.0734%" y="549" width="0.0816%" height="15" fill="rgb(252,223,5)" fg:x="430" fg:w="1"/><text x="35.3234%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0734%" y="533" width="0.0816%" height="15" fill="rgb(227,181,11)" fg:x="430" fg:w="1"/><text x="35.3234%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0734%" y="517" width="0.0816%" height="15" fill="rgb(248,126,40)" fg:x="430" fg:w="1"/><text x="35.3234%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0734%" y="501" width="0.0816%" height="15" fill="rgb(243,1,18)" fg:x="430" fg:w="1"/><text x="35.3234%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.0734%" y="485" width="0.0816%" height="15" fill="rgb(214,145,23)" fg:x="430" fg:w="1"/><text x="35.3234%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.0734%" y="469" width="0.0816%" height="15" fill="rgb(241,218,11)" fg:x="430" fg:w="1"/><text x="35.3234%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.0734%" y="453" width="0.0816%" height="15" fill="rgb(214,219,24)" fg:x="430" fg:w="1"/><text x="35.3234%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="35.0734%" y="437" width="0.0816%" height="15" fill="rgb(235,32,7)" fg:x="430" fg:w="1"/><text x="35.3234%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.0734%" y="421" width="0.0816%" height="15" fill="rgb(227,121,28)" fg:x="430" fg:w="1"/><text x="35.3234%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1550%" y="533" width="0.0816%" height="15" fill="rgb(216,129,49)" fg:x="431" fg:w="1"/><text x="35.4050%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2365%" y="533" width="0.0816%" height="15" fill="rgb(207,194,50)" fg:x="432" fg:w="1"/><text x="35.4865%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="35.3181%" y="533" width="0.0816%" height="15" fill="rgb(207,4,18)" fg:x="433" fg:w="1"/><text x="35.5681%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.3181%" y="517" width="0.0816%" height="15" fill="rgb(213,50,30)" fg:x="433" fg:w="1"/><text x="35.5681%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.3181%" y="501" width="0.0816%" height="15" fill="rgb(208,77,22)" fg:x="433" fg:w="1"/><text x="35.5681%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="35.3181%" y="485" width="0.0816%" height="15" fill="rgb(244,204,34)" fg:x="433" fg:w="1"/><text x="35.5681%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="35.1550%" y="549" width="0.3263%" height="15" fill="rgb(230,20,17)" fg:x="431" fg:w="4"/><text x="35.4050%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="35.3997%" y="533" width="0.0816%" height="15" fill="rgb(237,83,15)" fg:x="434" fg:w="1"/><text x="35.6497%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.3997%" y="517" width="0.0816%" height="15" fill="rgb(221,109,25)" fg:x="434" fg:w="1"/><text x="35.6497%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="35.3997%" y="501" width="0.0816%" height="15" fill="rgb(205,194,52)" fg:x="434" fg:w="1"/><text x="35.6497%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.3997%" y="485" width="0.0816%" height="15" fill="rgb(244,173,54)" fg:x="434" fg:w="1"/><text x="35.6497%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3997%" y="469" width="0.0816%" height="15" fill="rgb(227,181,18)" fg:x="434" fg:w="1"/><text x="35.6497%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.5628%" y="437" width="0.0816%" height="15" fill="rgb(238,36,30)" fg:x="436" fg:w="1"/><text x="35.8128%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.5628%" y="421" width="0.0816%" height="15" fill="rgb(254,85,0)" fg:x="436" fg:w="1"/><text x="35.8128%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.5628%" y="405" width="0.0816%" height="15" fill="rgb(247,63,33)" fg:x="436" fg:w="1"/><text x="35.8128%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.5628%" y="389" width="0.0816%" height="15" fill="rgb(220,7,54)" fg:x="436" fg:w="1"/><text x="35.8128%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.5628%" y="453" width="0.1631%" height="15" fill="rgb(238,227,21)" fg:x="436" fg:w="2"/><text x="35.8128%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6444%" y="437" width="0.0816%" height="15" fill="rgb(237,29,31)" fg:x="437" fg:w="1"/><text x="35.8944%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="35.4812%" y="501" width="0.3263%" height="15" fill="rgb(211,21,50)" fg:x="435" fg:w="4"/><text x="35.7312%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="35.4812%" y="485" width="0.3263%" height="15" fill="rgb(239,119,2)" fg:x="435" fg:w="4"/><text x="35.7312%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="35.4812%" y="469" width="0.3263%" height="15" fill="rgb(250,2,39)" fg:x="435" fg:w="4"/><text x="35.7312%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.7259%" y="453" width="0.0816%" height="15" fill="rgb(244,46,53)" fg:x="438" fg:w="1"/><text x="35.9759%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7259%" y="437" width="0.0816%" height="15" fill="rgb(209,21,19)" fg:x="438" fg:w="1"/><text x="35.9759%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.7259%" y="421" width="0.0816%" height="15" fill="rgb(236,145,4)" fg:x="438" fg:w="1"/><text x="35.9759%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7259%" y="405" width="0.0816%" height="15" fill="rgb(220,133,36)" fg:x="438" fg:w="1"/><text x="35.9759%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.7259%" y="389" width="0.0816%" height="15" fill="rgb(244,18,3)" fg:x="438" fg:w="1"/><text x="35.9759%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7259%" y="373" width="0.0816%" height="15" fill="rgb(232,171,48)" fg:x="438" fg:w="1"/><text x="35.9759%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.7259%" y="357" width="0.0816%" height="15" fill="rgb(223,223,53)" fg:x="438" fg:w="1"/><text x="35.9759%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7259%" y="341" width="0.0816%" height="15" fill="rgb(246,92,13)" fg:x="438" fg:w="1"/><text x="35.9759%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.7259%" y="325" width="0.0816%" height="15" fill="rgb(229,171,10)" fg:x="438" fg:w="1"/><text x="35.9759%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="35.8075%" y="485" width="0.0816%" height="15" fill="rgb(213,131,26)" fg:x="439" fg:w="1"/><text x="36.0575%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.8891%" y="453" width="0.0816%" height="15" fill="rgb(242,87,54)" fg:x="440" fg:w="1"/><text x="36.1391%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.73%)</title><rect x="35.4812%" y="533" width="0.7341%" height="15" fill="rgb(237,21,35)" fg:x="435" fg:w="9"/><text x="35.7312%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.73%)</title><rect x="35.4812%" y="517" width="0.7341%" height="15" fill="rgb(253,13,47)" fg:x="435" fg:w="9"/><text x="35.7312%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="35.8075%" y="501" width="0.4078%" height="15" fill="rgb(215,122,49)" fg:x="439" fg:w="5"/><text x="36.0575%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="35.8891%" y="485" width="0.3263%" height="15" fill="rgb(209,179,30)" fg:x="440" fg:w="4"/><text x="36.1391%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="35.8891%" y="469" width="0.3263%" height="15" fill="rgb(235,100,24)" fg:x="440" fg:w="4"/><text x="36.1391%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="35.9706%" y="453" width="0.2447%" height="15" fill="rgb(209,67,24)" fg:x="441" fg:w="3"/><text x="36.2206%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.9706%" y="437" width="0.2447%" height="15" fill="rgb(206,74,32)" fg:x="441" fg:w="3"/><text x="36.2206%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.0522%" y="421" width="0.1631%" height="15" fill="rgb(212,45,25)" fg:x="442" fg:w="2"/><text x="36.3022%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.0522%" y="405" width="0.1631%" height="15" fill="rgb(239,26,3)" fg:x="442" fg:w="2"/><text x="36.3022%" y="415.50"></text></g><g><title>plugins_core::build::Build::holding (57 samples, 4.65%)</title><rect x="31.6476%" y="581" width="4.6493%" height="15" fill="rgb(218,36,15)" fg:x="388" fg:w="57"/><text x="31.8976%" y="591.50">plugi..</text></g><g><title>plugins_core::tools::set_container (31 samples, 2.53%)</title><rect x="33.7684%" y="565" width="2.5285%" height="15" fill="rgb(206,108,24)" fg:x="414" fg:w="31"/><text x="34.0184%" y="575.50">pl..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.82%)</title><rect x="35.4812%" y="549" width="0.8157%" height="15" fill="rgb(234,204,42)" fg:x="435" fg:w="10"/><text x="35.7312%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="36.2153%" y="533" width="0.0816%" height="15" fill="rgb(229,2,11)" fg:x="444" fg:w="1"/><text x="36.4653%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.2153%" y="517" width="0.0816%" height="15" fill="rgb(221,20,48)" fg:x="444" fg:w="1"/><text x="36.4653%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="36.2153%" y="501" width="0.0816%" height="15" fill="rgb(244,164,10)" fg:x="444" fg:w="1"/><text x="36.4653%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="36.2153%" y="485" width="0.0816%" height="15" fill="rgb(243,229,2)" fg:x="444" fg:w="1"/><text x="36.4653%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="36.2153%" y="469" width="0.0816%" height="15" fill="rgb(232,131,37)" fg:x="444" fg:w="1"/><text x="36.4653%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="36.2153%" y="453" width="0.0816%" height="15" fill="rgb(217,156,11)" fg:x="444" fg:w="1"/><text x="36.4653%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="36.2153%" y="437" width="0.0816%" height="15" fill="rgb(239,99,48)" fg:x="444" fg:w="1"/><text x="36.4653%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="36.2153%" y="421" width="0.0816%" height="15" fill="rgb(231,209,9)" fg:x="444" fg:w="1"/><text x="36.4653%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.2153%" y="405" width="0.0816%" height="15" fill="rgb(254,97,27)" fg:x="444" fg:w="1"/><text x="36.4653%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.2153%" y="389" width="0.0816%" height="15" fill="rgb(223,151,38)" fg:x="444" fg:w="1"/><text x="36.4653%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.2153%" y="373" width="0.0816%" height="15" fill="rgb(219,206,35)" fg:x="444" fg:w="1"/><text x="36.4653%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.2153%" y="357" width="0.0816%" height="15" fill="rgb(216,130,31)" fg:x="444" fg:w="1"/><text x="36.4653%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.2153%" y="341" width="0.0816%" height="15" fill="rgb(251,97,34)" fg:x="444" fg:w="1"/><text x="36.4653%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.2153%" y="325" width="0.0816%" height="15" fill="rgb(246,159,47)" fg:x="444" fg:w="1"/><text x="36.4653%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="36.2969%" y="549" width="0.0816%" height="15" fill="rgb(232,87,10)" fg:x="445" fg:w="1"/><text x="36.5469%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.2969%" y="533" width="0.0816%" height="15" fill="rgb(249,1,37)" fg:x="445" fg:w="1"/><text x="36.5469%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="36.4600%" y="501" width="0.0816%" height="15" fill="rgb(239,135,14)" fg:x="447" fg:w="1"/><text x="36.7100%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5416%" y="389" width="0.0816%" height="15" fill="rgb(253,116,46)" fg:x="448" fg:w="1"/><text x="36.7916%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5416%" y="421" width="0.1631%" height="15" fill="rgb(222,217,37)" fg:x="448" fg:w="2"/><text x="36.7916%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5416%" y="405" width="0.1631%" height="15" fill="rgb(252,96,8)" fg:x="448" fg:w="2"/><text x="36.7916%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6232%" y="389" width="0.0816%" height="15" fill="rgb(254,103,41)" fg:x="449" fg:w="1"/><text x="36.8732%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="36.5416%" y="469" width="0.3263%" height="15" fill="rgb(218,213,19)" fg:x="448" fg:w="4"/><text x="36.7916%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="36.5416%" y="453" width="0.3263%" height="15" fill="rgb(253,95,21)" fg:x="448" fg:w="4"/><text x="36.7916%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="36.5416%" y="437" width="0.3263%" height="15" fill="rgb(229,26,28)" fg:x="448" fg:w="4"/><text x="36.7916%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.7047%" y="421" width="0.1631%" height="15" fill="rgb(230,129,16)" fg:x="450" fg:w="2"/><text x="36.9547%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7863%" y="405" width="0.0816%" height="15" fill="rgb(236,126,17)" fg:x="451" fg:w="1"/><text x="37.0363%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.7863%" y="389" width="0.0816%" height="15" fill="rgb(209,33,33)" fg:x="451" fg:w="1"/><text x="37.0363%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.7863%" y="373" width="0.0816%" height="15" fill="rgb(227,85,29)" fg:x="451" fg:w="1"/><text x="37.0363%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.7863%" y="357" width="0.0816%" height="15" fill="rgb(241,53,46)" fg:x="451" fg:w="1"/><text x="37.0363%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7863%" y="341" width="0.0816%" height="15" fill="rgb(228,167,53)" fg:x="451" fg:w="1"/><text x="37.0363%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7863%" y="325" width="0.0816%" height="15" fill="rgb(238,195,45)" fg:x="451" fg:w="1"/><text x="37.0363%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.7863%" y="309" width="0.0816%" height="15" fill="rgb(252,124,45)" fg:x="451" fg:w="1"/><text x="37.0363%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.7863%" y="293" width="0.0816%" height="15" fill="rgb(251,38,35)" fg:x="451" fg:w="1"/><text x="37.0363%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.7863%" y="277" width="0.0816%" height="15" fill="rgb(227,33,2)" fg:x="451" fg:w="1"/><text x="37.0363%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.7863%" y="261" width="0.0816%" height="15" fill="rgb(223,157,46)" fg:x="451" fg:w="1"/><text x="37.0363%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7863%" y="245" width="0.0816%" height="15" fill="rgb(222,78,41)" fg:x="451" fg:w="1"/><text x="37.0363%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.8679%" y="357" width="0.0816%" height="15" fill="rgb(248,176,11)" fg:x="452" fg:w="1"/><text x="37.1179%" y="367.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.57%)</title><rect x="36.4600%" y="533" width="0.5710%" height="15" fill="rgb(241,221,18)" fg:x="447" fg:w="7"/><text x="36.7100%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="36.4600%" y="517" width="0.5710%" height="15" fill="rgb(218,85,22)" fg:x="447" fg:w="7"/><text x="36.7100%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="36.5416%" y="501" width="0.4894%" height="15" fill="rgb(222,223,7)" fg:x="448" fg:w="6"/><text x="36.7916%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="36.5416%" y="485" width="0.4894%" height="15" fill="rgb(254,59,39)" fg:x="448" fg:w="6"/><text x="36.7916%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.8679%" y="469" width="0.1631%" height="15" fill="rgb(247,100,27)" fg:x="452" fg:w="2"/><text x="37.1179%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8679%" y="453" width="0.1631%" height="15" fill="rgb(237,207,10)" fg:x="452" fg:w="2"/><text x="37.1179%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.8679%" y="437" width="0.1631%" height="15" fill="rgb(220,121,28)" fg:x="452" fg:w="2"/><text x="37.1179%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8679%" y="421" width="0.1631%" height="15" fill="rgb(213,223,20)" fg:x="452" fg:w="2"/><text x="37.1179%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.8679%" y="405" width="0.1631%" height="15" fill="rgb(205,121,27)" fg:x="452" fg:w="2"/><text x="37.1179%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8679%" y="389" width="0.1631%" height="15" fill="rgb(253,24,53)" fg:x="452" fg:w="2"/><text x="37.1179%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.8679%" y="373" width="0.1631%" height="15" fill="rgb(224,224,47)" fg:x="452" fg:w="2"/><text x="37.1179%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9494%" y="357" width="0.0816%" height="15" fill="rgb(250,125,36)" fg:x="453" fg:w="1"/><text x="37.1994%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.82%)</title><rect x="36.2969%" y="581" width="0.8157%" height="15" fill="rgb(240,144,38)" fg:x="445" fg:w="10"/><text x="36.5469%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.82%)</title><rect x="36.2969%" y="565" width="0.8157%" height="15" fill="rgb(250,15,50)" fg:x="445" fg:w="10"/><text x="36.5469%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (9 samples, 0.73%)</title><rect x="36.3785%" y="549" width="0.7341%" height="15" fill="rgb(210,24,26)" fg:x="446" fg:w="9"/><text x="36.6285%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="37.0310%" y="533" width="0.0816%" height="15" fill="rgb(234,53,53)" fg:x="454" fg:w="1"/><text x="37.2810%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="37.0310%" y="517" width="0.0816%" height="15" fill="rgb(208,108,28)" fg:x="454" fg:w="1"/><text x="37.2810%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.0310%" y="501" width="0.0816%" height="15" fill="rgb(227,143,7)" fg:x="454" fg:w="1"/><text x="37.2810%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="37.1126%" y="581" width="0.0816%" height="15" fill="rgb(238,189,38)" fg:x="455" fg:w="1"/><text x="37.3626%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="37.1126%" y="565" width="0.0816%" height="15" fill="rgb(222,69,15)" fg:x="455" fg:w="1"/><text x="37.3626%" y="575.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="37.1126%" y="549" width="0.0816%" height="15" fill="rgb(213,169,7)" fg:x="455" fg:w="1"/><text x="37.3626%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1126%" y="533" width="0.0816%" height="15" fill="rgb(251,219,4)" fg:x="455" fg:w="1"/><text x="37.3626%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.1126%" y="517" width="0.0816%" height="15" fill="rgb(241,55,40)" fg:x="455" fg:w="1"/><text x="37.3626%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1941%" y="501" width="0.0816%" height="15" fill="rgb(243,57,30)" fg:x="456" fg:w="1"/><text x="37.4441%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.3573%" y="405" width="0.0816%" height="15" fill="rgb(234,50,30)" fg:x="458" fg:w="1"/><text x="37.6073%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3573%" y="389" width="0.0816%" height="15" fill="rgb(239,23,42)" fg:x="458" fg:w="1"/><text x="37.6073%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="37.1941%" y="517" width="0.3263%" height="15" fill="rgb(217,38,19)" fg:x="456" fg:w="4"/><text x="37.4441%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="37.2757%" y="501" width="0.2447%" height="15" fill="rgb(215,179,16)" fg:x="457" fg:w="3"/><text x="37.5257%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="37.2757%" y="485" width="0.2447%" height="15" fill="rgb(254,21,37)" fg:x="457" fg:w="3"/><text x="37.5257%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.2757%" y="469" width="0.2447%" height="15" fill="rgb(219,207,48)" fg:x="457" fg:w="3"/><text x="37.5257%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.2757%" y="453" width="0.2447%" height="15" fill="rgb(227,225,41)" fg:x="457" fg:w="3"/><text x="37.5257%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.2757%" y="437" width="0.2447%" height="15" fill="rgb(223,130,1)" fg:x="457" fg:w="3"/><text x="37.5257%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.2757%" y="421" width="0.2447%" height="15" fill="rgb(249,54,42)" fg:x="457" fg:w="3"/><text x="37.5257%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4388%" y="405" width="0.0816%" height="15" fill="rgb(248,69,25)" fg:x="459" fg:w="1"/><text x="37.6888%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4388%" y="389" width="0.0816%" height="15" fill="rgb(234,21,32)" fg:x="459" fg:w="1"/><text x="37.6888%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.4388%" y="373" width="0.0816%" height="15" fill="rgb(252,136,6)" fg:x="459" fg:w="1"/><text x="37.6888%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.4388%" y="357" width="0.0816%" height="15" fill="rgb(245,87,12)" fg:x="459" fg:w="1"/><text x="37.6888%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.4388%" y="341" width="0.0816%" height="15" fill="rgb(208,12,15)" fg:x="459" fg:w="1"/><text x="37.6888%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4388%" y="325" width="0.0816%" height="15" fill="rgb(250,98,2)" fg:x="459" fg:w="1"/><text x="37.6888%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4388%" y="309" width="0.0816%" height="15" fill="rgb(205,213,15)" fg:x="459" fg:w="1"/><text x="37.6888%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.4388%" y="293" width="0.0816%" height="15" fill="rgb(248,192,44)" fg:x="459" fg:w="1"/><text x="37.6888%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.4388%" y="277" width="0.0816%" height="15" fill="rgb(221,89,17)" fg:x="459" fg:w="1"/><text x="37.6888%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.4388%" y="261" width="0.0816%" height="15" fill="rgb(209,55,3)" fg:x="459" fg:w="1"/><text x="37.6888%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.4388%" y="245" width="0.0816%" height="15" fill="rgb(247,23,45)" fg:x="459" fg:w="1"/><text x="37.6888%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4388%" y="229" width="0.0816%" height="15" fill="rgb(235,152,23)" fg:x="459" fg:w="1"/><text x="37.6888%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.5204%" y="469" width="0.0816%" height="15" fill="rgb(244,63,13)" fg:x="460" fg:w="1"/><text x="37.7704%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.5204%" y="453" width="0.0816%" height="15" fill="rgb(227,30,37)" fg:x="460" fg:w="1"/><text x="37.7704%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5204%" y="437" width="0.0816%" height="15" fill="rgb(224,49,42)" fg:x="460" fg:w="1"/><text x="37.7704%" y="447.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="37.1941%" y="533" width="0.4894%" height="15" fill="rgb(218,129,5)" fg:x="456" fg:w="6"/><text x="37.4441%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="37.5204%" y="517" width="0.1631%" height="15" fill="rgb(240,199,54)" fg:x="460" fg:w="2"/><text x="37.7704%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="37.5204%" y="501" width="0.1631%" height="15" fill="rgb(234,31,13)" fg:x="460" fg:w="2"/><text x="37.7704%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="37.5204%" y="485" width="0.1631%" height="15" fill="rgb(219,73,54)" fg:x="460" fg:w="2"/><text x="37.7704%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.6020%" y="469" width="0.0816%" height="15" fill="rgb(251,162,10)" fg:x="461" fg:w="1"/><text x="37.8520%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.6020%" y="453" width="0.0816%" height="15" fill="rgb(240,138,47)" fg:x="461" fg:w="1"/><text x="37.8520%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6020%" y="437" width="0.0816%" height="15" fill="rgb(216,138,26)" fg:x="461" fg:w="1"/><text x="37.8520%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6835%" y="533" width="0.0816%" height="15" fill="rgb(243,17,35)" fg:x="462" fg:w="1"/><text x="37.9335%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6835%" y="517" width="0.0816%" height="15" fill="rgb(241,60,18)" fg:x="462" fg:w="1"/><text x="37.9335%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6835%" y="501" width="0.0816%" height="15" fill="rgb(234,2,44)" fg:x="462" fg:w="1"/><text x="37.9335%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6835%" y="485" width="0.0816%" height="15" fill="rgb(225,225,33)" fg:x="462" fg:w="1"/><text x="37.9335%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6835%" y="469" width="0.0816%" height="15" fill="rgb(234,50,31)" fg:x="462" fg:w="1"/><text x="37.9335%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6835%" y="453" width="0.0816%" height="15" fill="rgb(249,6,25)" fg:x="462" fg:w="1"/><text x="37.9335%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6835%" y="437" width="0.0816%" height="15" fill="rgb(241,5,17)" fg:x="462" fg:w="1"/><text x="37.9335%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6835%" y="421" width="0.0816%" height="15" fill="rgb(207,116,10)" fg:x="462" fg:w="1"/><text x="37.9335%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6835%" y="405" width="0.0816%" height="15" fill="rgb(222,128,18)" fg:x="462" fg:w="1"/><text x="37.9335%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6835%" y="389" width="0.0816%" height="15" fill="rgb(229,109,25)" fg:x="462" fg:w="1"/><text x="37.9335%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6835%" y="373" width="0.0816%" height="15" fill="rgb(222,102,25)" fg:x="462" fg:w="1"/><text x="37.9335%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6835%" y="357" width="0.0816%" height="15" fill="rgb(239,211,5)" fg:x="462" fg:w="1"/><text x="37.9335%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6835%" y="341" width="0.0816%" height="15" fill="rgb(223,136,26)" fg:x="462" fg:w="1"/><text x="37.9335%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.82%)</title><rect x="37.1941%" y="565" width="0.8157%" height="15" fill="rgb(227,30,15)" fg:x="456" fg:w="10"/><text x="37.4441%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.82%)</title><rect x="37.1941%" y="549" width="0.8157%" height="15" fill="rgb(247,76,4)" fg:x="456" fg:w="10"/><text x="37.4441%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="37.7651%" y="533" width="0.2447%" height="15" fill="rgb(245,38,48)" fg:x="463" fg:w="3"/><text x="38.0151%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9282%" y="517" width="0.0816%" height="15" fill="rgb(210,220,14)" fg:x="465" fg:w="1"/><text x="38.1782%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9282%" y="501" width="0.0816%" height="15" fill="rgb(224,60,51)" fg:x="465" fg:w="1"/><text x="38.1782%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.9282%" y="485" width="0.0816%" height="15" fill="rgb(212,133,49)" fg:x="465" fg:w="1"/><text x="38.1782%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.9282%" y="469" width="0.0816%" height="15" fill="rgb(231,39,22)" fg:x="465" fg:w="1"/><text x="38.1782%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.9282%" y="453" width="0.0816%" height="15" fill="rgb(236,173,22)" fg:x="465" fg:w="1"/><text x="38.1782%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.9282%" y="437" width="0.0816%" height="15" fill="rgb(210,70,0)" fg:x="465" fg:w="1"/><text x="38.1782%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.9282%" y="421" width="0.0816%" height="15" fill="rgb(215,170,11)" fg:x="465" fg:w="1"/><text x="38.1782%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="38.0914%" y="549" width="0.0816%" height="15" fill="rgb(220,154,28)" fg:x="467" fg:w="1"/><text x="38.3414%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.1729%" y="517" width="0.1631%" height="15" fill="rgb(240,160,41)" fg:x="468" fg:w="2"/><text x="38.4229%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="38.1729%" y="501" width="0.1631%" height="15" fill="rgb(243,215,41)" fg:x="468" fg:w="2"/><text x="38.4229%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.1729%" y="485" width="0.1631%" height="15" fill="rgb(214,208,31)" fg:x="468" fg:w="2"/><text x="38.4229%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2545%" y="469" width="0.0816%" height="15" fill="rgb(247,57,22)" fg:x="469" fg:w="1"/><text x="38.5045%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2545%" y="453" width="0.0816%" height="15" fill="rgb(228,73,52)" fg:x="469" fg:w="1"/><text x="38.5045%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2545%" y="437" width="0.0816%" height="15" fill="rgb(252,60,9)" fg:x="469" fg:w="1"/><text x="38.5045%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.2545%" y="421" width="0.0816%" height="15" fill="rgb(233,9,51)" fg:x="469" fg:w="1"/><text x="38.5045%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.3361%" y="469" width="0.1631%" height="15" fill="rgb(223,67,14)" fg:x="470" fg:w="2"/><text x="38.5861%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.3361%" y="453" width="0.1631%" height="15" fill="rgb(222,86,2)" fg:x="470" fg:w="2"/><text x="38.5861%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.3361%" y="437" width="0.1631%" height="15" fill="rgb(243,58,54)" fg:x="470" fg:w="2"/><text x="38.5861%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.3361%" y="421" width="0.1631%" height="15" fill="rgb(210,200,39)" fg:x="470" fg:w="2"/><text x="38.5861%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4176%" y="405" width="0.0816%" height="15" fill="rgb(238,135,9)" fg:x="471" fg:w="1"/><text x="38.6676%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.4992%" y="373" width="0.0816%" height="15" fill="rgb(232,179,7)" fg:x="472" fg:w="1"/><text x="38.7492%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.4992%" y="357" width="0.0816%" height="15" fill="rgb(245,65,41)" fg:x="472" fg:w="1"/><text x="38.7492%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="38.4992%" y="341" width="0.0816%" height="15" fill="rgb(227,43,8)" fg:x="472" fg:w="1"/><text x="38.7492%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.49%)</title><rect x="38.1729%" y="549" width="0.4894%" height="15" fill="rgb(235,91,14)" fg:x="468" fg:w="6"/><text x="38.4229%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.49%)</title><rect x="38.1729%" y="533" width="0.4894%" height="15" fill="rgb(235,219,31)" fg:x="468" fg:w="6"/><text x="38.4229%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="38.3361%" y="517" width="0.3263%" height="15" fill="rgb(227,121,25)" fg:x="470" fg:w="4"/><text x="38.5861%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="38.3361%" y="501" width="0.3263%" height="15" fill="rgb(254,129,24)" fg:x="470" fg:w="4"/><text x="38.5861%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="38.3361%" y="485" width="0.3263%" height="15" fill="rgb(226,144,49)" fg:x="470" fg:w="4"/><text x="38.5861%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.4992%" y="469" width="0.1631%" height="15" fill="rgb(214,187,32)" fg:x="472" fg:w="2"/><text x="38.7492%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.4992%" y="453" width="0.1631%" height="15" fill="rgb(243,129,46)" fg:x="472" fg:w="2"/><text x="38.7492%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.4992%" y="437" width="0.1631%" height="15" fill="rgb(221,185,35)" fg:x="472" fg:w="2"/><text x="38.7492%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.4992%" y="421" width="0.1631%" height="15" fill="rgb(205,0,32)" fg:x="472" fg:w="2"/><text x="38.7492%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="38.4992%" y="405" width="0.1631%" height="15" fill="rgb(229,179,12)" fg:x="472" fg:w="2"/><text x="38.7492%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.4992%" y="389" width="0.1631%" height="15" fill="rgb(252,107,19)" fg:x="472" fg:w="2"/><text x="38.7492%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.5808%" y="373" width="0.0816%" height="15" fill="rgb(220,95,27)" fg:x="473" fg:w="1"/><text x="38.8308%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.5808%" y="357" width="0.0816%" height="15" fill="rgb(240,113,40)" fg:x="473" fg:w="1"/><text x="38.8308%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.5808%" y="341" width="0.0816%" height="15" fill="rgb(208,4,43)" fg:x="473" fg:w="1"/><text x="38.8308%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="38.6623%" y="549" width="0.1631%" height="15" fill="rgb(247,189,30)" fg:x="474" fg:w="2"/><text x="38.9123%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.7439%" y="533" width="0.0816%" height="15" fill="rgb(231,157,17)" fg:x="475" fg:w="1"/><text x="38.9939%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.7439%" y="517" width="0.0816%" height="15" fill="rgb(224,139,6)" fg:x="475" fg:w="1"/><text x="38.9939%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="38.8254%" y="549" width="0.1631%" height="15" fill="rgb(223,83,16)" fg:x="476" fg:w="2"/><text x="39.0754%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.9886%" y="437" width="0.0816%" height="15" fill="rgb(232,211,20)" fg:x="478" fg:w="1"/><text x="39.2386%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.9886%" y="421" width="0.0816%" height="15" fill="rgb(225,203,35)" fg:x="478" fg:w="1"/><text x="39.2386%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.9886%" y="405" width="0.0816%" height="15" fill="rgb(215,211,44)" fg:x="478" fg:w="1"/><text x="39.2386%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.9886%" y="389" width="0.0816%" height="15" fill="rgb(248,213,26)" fg:x="478" fg:w="1"/><text x="39.2386%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.9886%" y="373" width="0.0816%" height="15" fill="rgb(214,23,52)" fg:x="478" fg:w="1"/><text x="39.2386%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.9886%" y="357" width="0.0816%" height="15" fill="rgb(225,173,50)" fg:x="478" fg:w="1"/><text x="39.2386%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.9886%" y="341" width="0.0816%" height="15" fill="rgb(206,150,22)" fg:x="478" fg:w="1"/><text x="39.2386%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.9886%" y="325" width="0.0816%" height="15" fill="rgb(239,64,23)" fg:x="478" fg:w="1"/><text x="39.2386%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.9886%" y="309" width="0.0816%" height="15" fill="rgb(242,50,38)" fg:x="478" fg:w="1"/><text x="39.2386%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.9886%" y="293" width="0.0816%" height="15" fill="rgb(217,91,15)" fg:x="478" fg:w="1"/><text x="39.2386%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.9886%" y="277" width="0.0816%" height="15" fill="rgb(230,172,6)" fg:x="478" fg:w="1"/><text x="39.2386%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.9886%" y="261" width="0.0816%" height="15" fill="rgb(221,98,26)" fg:x="478" fg:w="1"/><text x="39.2386%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.9886%" y="245" width="0.0816%" height="15" fill="rgb(227,210,45)" fg:x="478" fg:w="1"/><text x="39.2386%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.9886%" y="229" width="0.0816%" height="15" fill="rgb(206,8,30)" fg:x="478" fg:w="1"/><text x="39.2386%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.9886%" y="213" width="0.0816%" height="15" fill="rgb(241,219,17)" fg:x="478" fg:w="1"/><text x="39.2386%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9886%" y="453" width="0.1631%" height="15" fill="rgb(247,121,29)" fg:x="478" fg:w="2"/><text x="39.2386%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0701%" y="437" width="0.0816%" height="15" fill="rgb(219,169,49)" fg:x="479" fg:w="1"/><text x="39.3201%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="38.9886%" y="501" width="0.2447%" height="15" fill="rgb(253,49,49)" fg:x="478" fg:w="3"/><text x="39.2386%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="38.9886%" y="485" width="0.2447%" height="15" fill="rgb(217,178,3)" fg:x="478" fg:w="3"/><text x="39.2386%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="38.9886%" y="469" width="0.2447%" height="15" fill="rgb(234,73,37)" fg:x="478" fg:w="3"/><text x="39.2386%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1517%" y="453" width="0.0816%" height="15" fill="rgb(250,98,22)" fg:x="480" fg:w="1"/><text x="39.4017%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.1517%" y="437" width="0.0816%" height="15" fill="rgb(220,108,37)" fg:x="480" fg:w="1"/><text x="39.4017%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1517%" y="421" width="0.0816%" height="15" fill="rgb(225,168,10)" fg:x="480" fg:w="1"/><text x="39.4017%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1517%" y="405" width="0.0816%" height="15" fill="rgb(247,215,21)" fg:x="480" fg:w="1"/><text x="39.4017%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1517%" y="389" width="0.0816%" height="15" fill="rgb(253,189,31)" fg:x="480" fg:w="1"/><text x="39.4017%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1517%" y="373" width="0.0816%" height="15" fill="rgb(241,54,22)" fg:x="480" fg:w="1"/><text x="39.4017%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.1517%" y="357" width="0.0816%" height="15" fill="rgb(211,87,4)" fg:x="480" fg:w="1"/><text x="39.4017%" y="367.50"></text></g><g><title>plugins_core::build::Build::occupying (27 samples, 2.20%)</title><rect x="37.1941%" y="581" width="2.2023%" height="15" fill="rgb(245,112,24)" fg:x="456" fg:w="27"/><text x="37.4441%" y="591.50">p..</text></g><g><title>plugins_core::tools::set_occupying (17 samples, 1.39%)</title><rect x="38.0098%" y="565" width="1.3866%" height="15" fill="rgb(235,190,41)" fg:x="466" fg:w="17"/><text x="38.2598%" y="575.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (5 samples, 0.41%)</title><rect x="38.9886%" y="549" width="0.4078%" height="15" fill="rgb(214,89,8)" fg:x="478" fg:w="5"/><text x="39.2386%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="38.9886%" y="533" width="0.4078%" height="15" fill="rgb(249,155,35)" fg:x="478" fg:w="5"/><text x="39.2386%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="38.9886%" y="517" width="0.4078%" height="15" fill="rgb(249,88,26)" fg:x="478" fg:w="5"/><text x="39.2386%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="39.2333%" y="501" width="0.1631%" height="15" fill="rgb(232,56,8)" fg:x="481" fg:w="2"/><text x="39.4833%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="39.2333%" y="485" width="0.1631%" height="15" fill="rgb(240,95,3)" fg:x="481" fg:w="2"/><text x="39.4833%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.2333%" y="469" width="0.1631%" height="15" fill="rgb(222,44,28)" fg:x="481" fg:w="2"/><text x="39.4833%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.2333%" y="453" width="0.1631%" height="15" fill="rgb(234,16,30)" fg:x="481" fg:w="2"/><text x="39.4833%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3148%" y="437" width="0.0816%" height="15" fill="rgb(223,26,17)" fg:x="482" fg:w="1"/><text x="39.5648%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3148%" y="421" width="0.0816%" height="15" fill="rgb(239,187,47)" fg:x="482" fg:w="1"/><text x="39.5648%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3148%" y="405" width="0.0816%" height="15" fill="rgb(247,102,50)" fg:x="482" fg:w="1"/><text x="39.5648%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3148%" y="389" width="0.0816%" height="15" fill="rgb(231,216,22)" fg:x="482" fg:w="1"/><text x="39.5648%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="39.4780%" y="549" width="0.0816%" height="15" fill="rgb(216,201,26)" fg:x="484" fg:w="1"/><text x="39.7280%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.4780%" y="533" width="0.0816%" height="15" fill="rgb(214,186,23)" fg:x="484" fg:w="1"/><text x="39.7280%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.4780%" y="517" width="0.0816%" height="15" fill="rgb(235,184,4)" fg:x="484" fg:w="1"/><text x="39.7280%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.4780%" y="501" width="0.0816%" height="15" fill="rgb(244,46,17)" fg:x="484" fg:w="1"/><text x="39.7280%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4780%" y="485" width="0.0816%" height="15" fill="rgb(248,74,46)" fg:x="484" fg:w="1"/><text x="39.7280%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.4780%" y="469" width="0.0816%" height="15" fill="rgb(243,79,5)" fg:x="484" fg:w="1"/><text x="39.7280%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.4780%" y="453" width="0.0816%" height="15" fill="rgb(213,148,1)" fg:x="484" fg:w="1"/><text x="39.7280%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.4780%" y="437" width="0.0816%" height="15" fill="rgb(221,30,0)" fg:x="484" fg:w="1"/><text x="39.7280%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4780%" y="421" width="0.0816%" height="15" fill="rgb(207,85,29)" fg:x="484" fg:w="1"/><text x="39.7280%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.4780%" y="405" width="0.0816%" height="15" fill="rgb(239,31,46)" fg:x="484" fg:w="1"/><text x="39.7280%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.4780%" y="389" width="0.0816%" height="15" fill="rgb(219,6,1)" fg:x="484" fg:w="1"/><text x="39.7280%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.4780%" y="373" width="0.0816%" height="15" fill="rgb(229,90,29)" fg:x="484" fg:w="1"/><text x="39.7280%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.4780%" y="357" width="0.0816%" height="15" fill="rgb(242,201,42)" fg:x="484" fg:w="1"/><text x="39.7280%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.4780%" y="341" width="0.0816%" height="15" fill="rgb(243,80,54)" fg:x="484" fg:w="1"/><text x="39.7280%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.4780%" y="325" width="0.0816%" height="15" fill="rgb(223,166,15)" fg:x="484" fg:w="1"/><text x="39.7280%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.4780%" y="309" width="0.0816%" height="15" fill="rgb(238,78,27)" fg:x="484" fg:w="1"/><text x="39.7280%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.5595%" y="469" width="0.1631%" height="15" fill="rgb(235,28,43)" fg:x="485" fg:w="2"/><text x="39.8095%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6411%" y="453" width="0.0816%" height="15" fill="rgb(240,210,28)" fg:x="486" fg:w="1"/><text x="39.8911%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6411%" y="437" width="0.0816%" height="15" fill="rgb(253,6,46)" fg:x="486" fg:w="1"/><text x="39.8911%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6411%" y="421" width="0.0816%" height="15" fill="rgb(250,159,47)" fg:x="486" fg:w="1"/><text x="39.8911%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.7227%" y="469" width="0.0816%" height="15" fill="rgb(216,139,2)" fg:x="487" fg:w="1"/><text x="39.9727%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.7227%" y="453" width="0.0816%" height="15" fill="rgb(221,124,44)" fg:x="487" fg:w="1"/><text x="39.9727%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="39.5595%" y="517" width="0.3263%" height="15" fill="rgb(205,37,22)" fg:x="485" fg:w="4"/><text x="39.8095%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="39.5595%" y="501" width="0.3263%" height="15" fill="rgb(250,55,8)" fg:x="485" fg:w="4"/><text x="39.8095%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="39.5595%" y="485" width="0.3263%" height="15" fill="rgb(215,83,48)" fg:x="485" fg:w="4"/><text x="39.8095%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.8042%" y="469" width="0.0816%" height="15" fill="rgb(253,2,32)" fg:x="488" fg:w="1"/><text x="40.0542%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.8042%" y="453" width="0.0816%" height="15" fill="rgb(236,67,28)" fg:x="488" fg:w="1"/><text x="40.0542%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.8042%" y="437" width="0.0816%" height="15" fill="rgb(252,55,15)" fg:x="488" fg:w="1"/><text x="40.0542%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.8042%" y="421" width="0.0816%" height="15" fill="rgb(243,173,17)" fg:x="488" fg:w="1"/><text x="40.0542%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.8042%" y="405" width="0.0816%" height="15" fill="rgb(215,212,13)" fg:x="488" fg:w="1"/><text x="40.0542%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.8042%" y="389" width="0.0816%" height="15" fill="rgb(253,176,6)" fg:x="488" fg:w="1"/><text x="40.0542%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.8042%" y="373" width="0.0816%" height="15" fill="rgb(236,105,26)" fg:x="488" fg:w="1"/><text x="40.0542%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.8042%" y="357" width="0.0816%" height="15" fill="rgb(239,226,32)" fg:x="488" fg:w="1"/><text x="40.0542%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.8042%" y="341" width="0.0816%" height="15" fill="rgb(236,104,51)" fg:x="488" fg:w="1"/><text x="40.0542%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.8042%" y="325" width="0.0816%" height="15" fill="rgb(220,172,33)" fg:x="488" fg:w="1"/><text x="40.0542%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="39.8858%" y="501" width="0.0816%" height="15" fill="rgb(224,182,25)" fg:x="489" fg:w="1"/><text x="40.1358%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.8858%" y="485" width="0.0816%" height="15" fill="rgb(236,184,24)" fg:x="489" fg:w="1"/><text x="40.1358%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8858%" y="469" width="0.0816%" height="15" fill="rgb(241,221,14)" fg:x="489" fg:w="1"/><text x="40.1358%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8858%" y="453" width="0.0816%" height="15" fill="rgb(227,146,5)" fg:x="489" fg:w="1"/><text x="40.1358%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8858%" y="437" width="0.0816%" height="15" fill="rgb(214,15,23)" fg:x="489" fg:w="1"/><text x="40.1358%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8858%" y="421" width="0.0816%" height="15" fill="rgb(233,157,31)" fg:x="489" fg:w="1"/><text x="40.1358%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8858%" y="405" width="0.0816%" height="15" fill="rgb(211,27,52)" fg:x="489" fg:w="1"/><text x="40.1358%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.9674%" y="469" width="0.0816%" height="15" fill="rgb(212,223,15)" fg:x="490" fg:w="1"/><text x="40.2174%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.9674%" y="453" width="0.0816%" height="15" fill="rgb(254,211,0)" fg:x="490" fg:w="1"/><text x="40.2174%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.9674%" y="437" width="0.0816%" height="15" fill="rgb(205,43,38)" fg:x="490" fg:w="1"/><text x="40.2174%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9674%" y="421" width="0.0816%" height="15" fill="rgb(242,206,46)" fg:x="490" fg:w="1"/><text x="40.2174%" y="431.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="40.0489%" y="469" width="0.2447%" height="15" fill="rgb(220,221,12)" fg:x="491" fg:w="3"/><text x="40.2989%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="40.0489%" y="453" width="0.2447%" height="15" fill="rgb(217,156,35)" fg:x="491" fg:w="3"/><text x="40.2989%" y="463.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="40.0489%" y="437" width="0.2447%" height="15" fill="rgb(207,181,49)" fg:x="491" fg:w="3"/><text x="40.2989%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="40.0489%" y="421" width="0.2447%" height="15" fill="rgb(235,103,47)" fg:x="491" fg:w="3"/><text x="40.2989%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="40.0489%" y="405" width="0.2447%" height="15" fill="rgb(222,63,28)" fg:x="491" fg:w="3"/><text x="40.2989%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="40.2121%" y="389" width="0.0816%" height="15" fill="rgb(244,137,21)" fg:x="493" fg:w="1"/><text x="40.4621%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.2121%" y="373" width="0.0816%" height="15" fill="rgb(228,35,27)" fg:x="493" fg:w="1"/><text x="40.4621%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="40.2121%" y="357" width="0.0816%" height="15" fill="rgb(226,191,41)" fg:x="493" fg:w="1"/><text x="40.4621%" y="367.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (10 samples, 0.82%)</title><rect x="39.5595%" y="533" width="0.8157%" height="15" fill="rgb(210,154,3)" fg:x="485" fg:w="10"/><text x="39.8095%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.49%)</title><rect x="39.8858%" y="517" width="0.4894%" height="15" fill="rgb(216,60,49)" fg:x="489" fg:w="6"/><text x="40.1358%" y="527.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.41%)</title><rect x="39.9674%" y="501" width="0.4078%" height="15" fill="rgb(226,17,20)" fg:x="490" fg:w="5"/><text x="40.2174%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.41%)</title><rect x="39.9674%" y="485" width="0.4078%" height="15" fill="rgb(206,115,35)" fg:x="490" fg:w="5"/><text x="40.2174%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.2936%" y="469" width="0.0816%" height="15" fill="rgb(227,88,1)" fg:x="494" fg:w="1"/><text x="40.5436%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.2936%" y="453" width="0.0816%" height="15" fill="rgb(230,222,24)" fg:x="494" fg:w="1"/><text x="40.5436%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.2936%" y="437" width="0.0816%" height="15" fill="rgb(214,124,32)" fg:x="494" fg:w="1"/><text x="40.5436%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.2936%" y="421" width="0.0816%" height="15" fill="rgb(240,41,36)" fg:x="494" fg:w="1"/><text x="40.5436%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.2936%" y="405" width="0.0816%" height="15" fill="rgb(221,17,52)" fg:x="494" fg:w="1"/><text x="40.5436%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.98%)</title><rect x="39.4780%" y="565" width="0.9788%" height="15" fill="rgb(252,70,16)" fg:x="484" fg:w="12"/><text x="39.7280%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (11 samples, 0.90%)</title><rect x="39.5595%" y="549" width="0.8972%" height="15" fill="rgb(250,177,4)" fg:x="485" fg:w="11"/><text x="39.8095%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="40.3752%" y="533" width="0.0816%" height="15" fill="rgb(240,188,47)" fg:x="495" fg:w="1"/><text x="40.6252%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (251 samples, 20.47%)</title><rect x="20.0653%" y="597" width="20.4731%" height="15" fill="rgb(215,92,12)" fg:x="246" fg:w="251"/><text x="20.3153%" y="607.50">plugins_core::build::BuildSurrou..</text></g><g><title>plugins_core::build::Build::with_username (14 samples, 1.14%)</title><rect x="39.3964%" y="581" width="1.1419%" height="15" fill="rgb(242,110,29)" fg:x="483" fg:w="14"/><text x="39.6464%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="40.4568%" y="565" width="0.0816%" height="15" fill="rgb(208,211,26)" fg:x="496" fg:w="1"/><text x="40.7068%" y="575.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="40.4568%" y="549" width="0.0816%" height="15" fill="rgb(244,147,6)" fg:x="496" fg:w="1"/><text x="40.7068%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="40.4568%" y="533" width="0.0816%" height="15" fill="rgb(211,130,42)" fg:x="496" fg:w="1"/><text x="40.7068%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4568%" y="517" width="0.0816%" height="15" fill="rgb(220,63,1)" fg:x="496" fg:w="1"/><text x="40.7068%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="40.5383%" y="565" width="0.0816%" height="15" fill="rgb(241,212,30)" fg:x="497" fg:w="1"/><text x="40.7883%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="40.5383%" y="597" width="0.1631%" height="15" fill="rgb(233,153,17)" fg:x="497" fg:w="2"/><text x="40.7883%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="40.5383%" y="581" width="0.1631%" height="15" fill="rgb(236,3,10)" fg:x="497" fg:w="2"/><text x="40.7883%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="40.6199%" y="565" width="0.0816%" height="15" fill="rgb(232,41,21)" fg:x="498" fg:w="1"/><text x="40.8699%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="40.6199%" y="549" width="0.0816%" height="15" fill="rgb(206,63,51)" fg:x="498" fg:w="1"/><text x="40.8699%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="40.6199%" y="533" width="0.0816%" height="15" fill="rgb(250,214,3)" fg:x="498" fg:w="1"/><text x="40.8699%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="40.6199%" y="517" width="0.0816%" height="15" fill="rgb(254,89,27)" fg:x="498" fg:w="1"/><text x="40.8699%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.7830%" y="469" width="0.0816%" height="15" fill="rgb(249,41,14)" fg:x="500" fg:w="1"/><text x="41.0330%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.7830%" y="453" width="0.0816%" height="15" fill="rgb(221,196,51)" fg:x="500" fg:w="1"/><text x="41.0330%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7830%" y="437" width="0.0816%" height="15" fill="rgb(214,116,26)" fg:x="500" fg:w="1"/><text x="41.0330%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="40.7830%" y="517" width="0.3263%" height="15" fill="rgb(236,67,7)" fg:x="500" fg:w="4"/><text x="41.0330%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="40.7830%" y="501" width="0.3263%" height="15" fill="rgb(253,179,32)" fg:x="500" fg:w="4"/><text x="41.0330%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="40.7830%" y="485" width="0.3263%" height="15" fill="rgb(218,33,15)" fg:x="500" fg:w="4"/><text x="41.0330%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.8646%" y="469" width="0.2447%" height="15" fill="rgb(217,202,41)" fg:x="501" fg:w="3"/><text x="41.1146%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.8646%" y="453" width="0.2447%" height="15" fill="rgb(234,133,5)" fg:x="501" fg:w="3"/><text x="41.1146%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.8646%" y="437" width="0.2447%" height="15" fill="rgb(240,47,40)" fg:x="501" fg:w="3"/><text x="41.1146%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.8646%" y="421" width="0.2447%" height="15" fill="rgb(234,166,26)" fg:x="501" fg:w="3"/><text x="41.1146%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.8646%" y="405" width="0.2447%" height="15" fill="rgb(244,125,51)" fg:x="501" fg:w="3"/><text x="41.1146%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.8646%" y="389" width="0.2447%" height="15" fill="rgb(229,171,11)" fg:x="501" fg:w="3"/><text x="41.1146%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.8646%" y="373" width="0.2447%" height="15" fill="rgb(224,38,45)" fg:x="501" fg:w="3"/><text x="41.1146%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.9462%" y="357" width="0.1631%" height="15" fill="rgb(237,27,7)" fg:x="502" fg:w="2"/><text x="41.1962%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="41.1093%" y="501" width="0.0816%" height="15" fill="rgb(216,52,7)" fg:x="504" fg:w="1"/><text x="41.3593%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.1093%" y="485" width="0.0816%" height="15" fill="rgb(243,11,11)" fg:x="504" fg:w="1"/><text x="41.3593%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.1093%" y="469" width="0.0816%" height="15" fill="rgb(253,167,20)" fg:x="504" fg:w="1"/><text x="41.3593%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.1093%" y="453" width="0.0816%" height="15" fill="rgb(215,207,5)" fg:x="504" fg:w="1"/><text x="41.3593%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.1093%" y="437" width="0.0816%" height="15" fill="rgb(252,127,31)" fg:x="504" fg:w="1"/><text x="41.3593%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2724%" y="469" width="0.0816%" height="15" fill="rgb(209,106,27)" fg:x="506" fg:w="1"/><text x="41.5224%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2724%" y="453" width="0.0816%" height="15" fill="rgb(214,220,18)" fg:x="506" fg:w="1"/><text x="41.5224%" y="463.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="41.3540%" y="469" width="0.0816%" height="15" fill="rgb(237,89,12)" fg:x="507" fg:w="1"/><text x="41.6040%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.3540%" y="453" width="0.0816%" height="15" fill="rgb(209,167,36)" fg:x="507" fg:w="1"/><text x="41.6040%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="41.3540%" y="437" width="0.0816%" height="15" fill="rgb(243,45,22)" fg:x="507" fg:w="1"/><text x="41.6040%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.3540%" y="421" width="0.0816%" height="15" fill="rgb(239,2,46)" fg:x="507" fg:w="1"/><text x="41.6040%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="41.3540%" y="405" width="0.0816%" height="15" fill="rgb(241,101,0)" fg:x="507" fg:w="1"/><text x="41.6040%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.3540%" y="389" width="0.0816%" height="15" fill="rgb(244,34,31)" fg:x="507" fg:w="1"/><text x="41.6040%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.3540%" y="373" width="0.0816%" height="15" fill="rgb(248,23,22)" fg:x="507" fg:w="1"/><text x="41.6040%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.3540%" y="357" width="0.0816%" height="15" fill="rgb(218,27,48)" fg:x="507" fg:w="1"/><text x="41.6040%" y="367.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (9 samples, 0.73%)</title><rect x="40.7830%" y="533" width="0.7341%" height="15" fill="rgb(232,78,1)" fg:x="500" fg:w="9"/><text x="41.0330%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.41%)</title><rect x="41.1093%" y="517" width="0.4078%" height="15" fill="rgb(233,169,12)" fg:x="504" fg:w="5"/><text x="41.3593%" y="527.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.33%)</title><rect x="41.1909%" y="501" width="0.3263%" height="15" fill="rgb(225,222,54)" fg:x="505" fg:w="4"/><text x="41.4409%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="41.1909%" y="485" width="0.3263%" height="15" fill="rgb(245,126,29)" fg:x="505" fg:w="4"/><text x="41.4409%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4356%" y="469" width="0.0816%" height="15" fill="rgb(241,63,48)" fg:x="508" fg:w="1"/><text x="41.6856%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.06%)</title><rect x="40.7015%" y="565" width="1.0604%" height="15" fill="rgb(235,126,38)" fg:x="499" fg:w="13"/><text x="40.9515%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (13 samples, 1.06%)</title><rect x="40.7015%" y="549" width="1.0604%" height="15" fill="rgb(232,96,49)" fg:x="499" fg:w="13"/><text x="40.9515%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="41.5171%" y="533" width="0.2447%" height="15" fill="rgb(211,146,40)" fg:x="509" fg:w="3"/><text x="41.7671%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.5987%" y="517" width="0.1631%" height="15" fill="rgb(247,93,44)" fg:x="510" fg:w="2"/><text x="41.8487%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="41.7618%" y="565" width="0.0816%" height="15" fill="rgb(251,41,49)" fg:x="512" fg:w="1"/><text x="42.0118%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="41.8434%" y="565" width="0.1631%" height="15" fill="rgb(218,155,12)" fg:x="513" fg:w="2"/><text x="42.0934%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="41.9250%" y="549" width="0.0816%" height="15" fill="rgb(221,161,30)" fg:x="514" fg:w="1"/><text x="42.1750%" y="559.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="42.0065%" y="549" width="0.0816%" height="15" fill="rgb(221,179,11)" fg:x="515" fg:w="1"/><text x="42.2565%" y="559.50"></text></g><g><title>kernel::model::props::Props::set_property (4 samples, 0.33%)</title><rect x="42.0881%" y="533" width="0.3263%" height="15" fill="rgb(224,170,48)" fg:x="516" fg:w="4"/><text x="42.3381%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="42.1697%" y="517" width="0.2447%" height="15" fill="rgb(223,117,5)" fg:x="517" fg:w="3"/><text x="42.4197%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="42.1697%" y="501" width="0.2447%" height="15" fill="rgb(209,52,20)" fg:x="517" fg:w="3"/><text x="42.4197%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="42.3328%" y="485" width="0.0816%" height="15" fill="rgb(209,19,41)" fg:x="519" fg:w="1"/><text x="42.5828%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="42.4144%" y="501" width="0.0816%" height="15" fill="rgb(210,177,12)" fg:x="520" fg:w="1"/><text x="42.6644%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.4144%" y="485" width="0.0816%" height="15" fill="rgb(211,159,37)" fg:x="520" fg:w="1"/><text x="42.6644%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="42.4144%" y="469" width="0.0816%" height="15" fill="rgb(209,20,2)" fg:x="520" fg:w="1"/><text x="42.6644%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.4144%" y="453" width="0.0816%" height="15" fill="rgb(244,3,46)" fg:x="520" fg:w="1"/><text x="42.6644%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (414 samples, 33.77%)</title><rect x="8.8091%" y="613" width="33.7684%" height="15" fill="rgb(220,94,38)" fg:x="108" fg:w="414"/><text x="9.0591%" y="623.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::pre..</text></g><g><title>plugins_core::build::BuildSurroundings::make (23 samples, 1.88%)</title><rect x="40.7015%" y="597" width="1.8760%" height="15" fill="rgb(253,14,31)" fg:x="499" fg:w="23"/><text x="40.9515%" y="607.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (23 samples, 1.88%)</title><rect x="40.7015%" y="581" width="1.8760%" height="15" fill="rgb(234,176,13)" fg:x="499" fg:w="23"/><text x="40.9515%" y="591.50">p..</text></g><g><title>plugins_core::build::Build::named (7 samples, 0.57%)</title><rect x="42.0065%" y="565" width="0.5710%" height="15" fill="rgb(218,62,25)" fg:x="515" fg:w="7"/><text x="42.2565%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.49%)</title><rect x="42.0881%" y="549" width="0.4894%" height="15" fill="rgb(216,124,40)" fg:x="516" fg:w="6"/><text x="42.3381%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="42.4144%" y="533" width="0.1631%" height="15" fill="rgb(228,170,12)" fg:x="520" fg:w="2"/><text x="42.6644%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="42.4144%" y="517" width="0.1631%" height="15" fill="rgb(231,226,5)" fg:x="520" fg:w="2"/><text x="42.6644%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4959%" y="501" width="0.0816%" height="15" fill="rgb(237,122,22)" fg:x="521" fg:w="1"/><text x="42.7459%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4959%" y="485" width="0.0816%" height="15" fill="rgb(209,185,25)" fg:x="521" fg:w="1"/><text x="42.7459%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="42.4959%" y="469" width="0.0816%" height="15" fill="rgb(228,200,32)" fg:x="521" fg:w="1"/><text x="42.7459%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4959%" y="453" width="0.0816%" height="15" fill="rgb(217,140,10)" fg:x="521" fg:w="1"/><text x="42.7459%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="42.5775%" y="613" width="0.0816%" height="15" fill="rgb(253,17,24)" fg:x="522" fg:w="1"/><text x="42.8275%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7406%" y="597" width="0.0816%" height="15" fill="rgb(212,61,6)" fg:x="524" fg:w="1"/><text x="42.9906%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="42.8222%" y="485" width="0.0816%" height="15" fill="rgb(205,14,25)" fg:x="525" fg:w="1"/><text x="43.0722%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.8222%" y="469" width="0.0816%" height="15" fill="rgb(232,69,41)" fg:x="525" fg:w="1"/><text x="43.0722%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.8222%" y="453" width="0.0816%" height="15" fill="rgb(241,106,47)" fg:x="525" fg:w="1"/><text x="43.0722%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.8222%" y="437" width="0.0816%" height="15" fill="rgb(210,213,53)" fg:x="525" fg:w="1"/><text x="43.0722%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.8222%" y="421" width="0.0816%" height="15" fill="rgb(253,175,27)" fg:x="525" fg:w="1"/><text x="43.0722%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.8222%" y="405" width="0.0816%" height="15" fill="rgb(211,171,24)" fg:x="525" fg:w="1"/><text x="43.0722%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.8222%" y="389" width="0.0816%" height="15" fill="rgb(229,80,7)" fg:x="525" fg:w="1"/><text x="43.0722%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.8222%" y="373" width="0.0816%" height="15" fill="rgb(212,46,39)" fg:x="525" fg:w="1"/><text x="43.0722%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.8222%" y="357" width="0.0816%" height="15" fill="rgb(240,80,45)" fg:x="525" fg:w="1"/><text x="43.0722%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.8222%" y="341" width="0.0816%" height="15" fill="rgb(253,177,40)" fg:x="525" fg:w="1"/><text x="43.0722%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.8222%" y="325" width="0.0816%" height="15" fill="rgb(249,200,15)" fg:x="525" fg:w="1"/><text x="43.0722%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.8222%" y="309" width="0.0816%" height="15" fill="rgb(217,78,26)" fg:x="525" fg:w="1"/><text x="43.0722%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="42.8222%" y="293" width="0.0816%" height="15" fill="rgb(254,151,32)" fg:x="525" fg:w="1"/><text x="43.0722%" y="303.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="42.8222%" y="277" width="0.0816%" height="15" fill="rgb(226,165,27)" fg:x="525" fg:w="1"/><text x="43.0722%" y="287.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="42.8222%" y="261" width="0.0816%" height="15" fill="rgb(250,206,4)" fg:x="525" fg:w="1"/><text x="43.0722%" y="271.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="42.8222%" y="245" width="0.0816%" height="15" fill="rgb(231,229,27)" fg:x="525" fg:w="1"/><text x="43.0722%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="42.8222%" y="597" width="0.1631%" height="15" fill="rgb(239,217,8)" fg:x="525" fg:w="2"/><text x="43.0722%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="42.8222%" y="581" width="0.1631%" height="15" fill="rgb(225,204,27)" fg:x="525" fg:w="2"/><text x="43.0722%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.8222%" y="565" width="0.1631%" height="15" fill="rgb(230,56,32)" fg:x="525" fg:w="2"/><text x="43.0722%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.8222%" y="549" width="0.1631%" height="15" fill="rgb(222,56,27)" fg:x="525" fg:w="2"/><text x="43.0722%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="42.8222%" y="533" width="0.1631%" height="15" fill="rgb(253,108,27)" fg:x="525" fg:w="2"/><text x="43.0722%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="42.8222%" y="517" width="0.1631%" height="15" fill="rgb(212,87,36)" fg:x="525" fg:w="2"/><text x="43.0722%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="42.8222%" y="501" width="0.1631%" height="15" fill="rgb(247,82,36)" fg:x="525" fg:w="2"/><text x="43.0722%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.9038%" y="485" width="0.0816%" height="15" fill="rgb(222,143,9)" fg:x="526" fg:w="1"/><text x="43.1538%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.9038%" y="469" width="0.0816%" height="15" fill="rgb(238,162,48)" fg:x="526" fg:w="1"/><text x="43.1538%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="42.9038%" y="453" width="0.0816%" height="15" fill="rgb(221,59,43)" fg:x="526" fg:w="1"/><text x="43.1538%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="42.9038%" y="437" width="0.0816%" height="15" fill="rgb(205,166,41)" fg:x="526" fg:w="1"/><text x="43.1538%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.0669%" y="485" width="0.1631%" height="15" fill="rgb(241,186,40)" fg:x="528" fg:w="2"/><text x="43.3169%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.0669%" y="469" width="0.1631%" height="15" fill="rgb(216,119,35)" fg:x="528" fg:w="2"/><text x="43.3169%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="43.0669%" y="453" width="0.1631%" height="15" fill="rgb(208,68,38)" fg:x="528" fg:w="2"/><text x="43.3169%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="43.0669%" y="437" width="0.1631%" height="15" fill="rgb(217,113,1)" fg:x="528" fg:w="2"/><text x="43.3169%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="43.0669%" y="421" width="0.1631%" height="15" fill="rgb(242,153,3)" fg:x="528" fg:w="2"/><text x="43.3169%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="43.0669%" y="405" width="0.1631%" height="15" fill="rgb(229,76,35)" fg:x="528" fg:w="2"/><text x="43.3169%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.0669%" y="389" width="0.1631%" height="15" fill="rgb(229,125,34)" fg:x="528" fg:w="2"/><text x="43.3169%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="43.0669%" y="581" width="0.2447%" height="15" fill="rgb(238,179,36)" fg:x="528" fg:w="3"/><text x="43.3169%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="43.0669%" y="565" width="0.2447%" height="15" fill="rgb(244,183,19)" fg:x="528" fg:w="3"/><text x="43.3169%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="43.0669%" y="549" width="0.2447%" height="15" fill="rgb(216,85,49)" fg:x="528" fg:w="3"/><text x="43.3169%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="43.0669%" y="533" width="0.2447%" height="15" fill="rgb(208,161,47)" fg:x="528" fg:w="3"/><text x="43.3169%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="43.0669%" y="517" width="0.2447%" height="15" fill="rgb(233,210,18)" fg:x="528" fg:w="3"/><text x="43.3169%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="43.0669%" y="501" width="0.2447%" height="15" fill="rgb(205,104,42)" fg:x="528" fg:w="3"/><text x="43.3169%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.2300%" y="485" width="0.0816%" height="15" fill="rgb(248,90,43)" fg:x="530" fg:w="1"/><text x="43.4800%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.2300%" y="469" width="0.0816%" height="15" fill="rgb(206,198,11)" fg:x="530" fg:w="1"/><text x="43.4800%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="43.3116%" y="581" width="0.1631%" height="15" fill="rgb(239,165,27)" fg:x="531" fg:w="2"/><text x="43.5616%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="43.3116%" y="565" width="0.1631%" height="15" fill="rgb(246,44,32)" fg:x="531" fg:w="2"/><text x="43.5616%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="43.3116%" y="549" width="0.1631%" height="15" fill="rgb(252,65,42)" fg:x="531" fg:w="2"/><text x="43.5616%" y="559.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.24%)</title><rect x="43.4747%" y="581" width="0.2447%" height="15" fill="rgb(246,197,18)" fg:x="533" fg:w="3"/><text x="43.7247%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="43.4747%" y="565" width="0.2447%" height="15" fill="rgb(216,192,4)" fg:x="533" fg:w="3"/><text x="43.7247%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.5563%" y="549" width="0.1631%" height="15" fill="rgb(208,117,10)" fg:x="534" fg:w="2"/><text x="43.8063%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="43.7194%" y="517" width="0.1631%" height="15" fill="rgb(240,61,47)" fg:x="536" fg:w="2"/><text x="43.9694%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.8010%" y="501" width="0.0816%" height="15" fill="rgb(228,178,21)" fg:x="537" fg:w="1"/><text x="44.0510%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.8010%" y="485" width="0.0816%" height="15" fill="rgb(219,96,54)" fg:x="537" fg:w="1"/><text x="44.0510%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.8010%" y="469" width="0.0816%" height="15" fill="rgb(250,177,24)" fg:x="537" fg:w="1"/><text x="44.0510%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.8010%" y="453" width="0.0816%" height="15" fill="rgb(242,154,46)" fg:x="537" fg:w="1"/><text x="44.0510%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.8010%" y="437" width="0.0816%" height="15" fill="rgb(226,176,29)" fg:x="537" fg:w="1"/><text x="44.0510%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.8010%" y="421" width="0.0816%" height="15" fill="rgb(226,29,2)" fg:x="537" fg:w="1"/><text x="44.0510%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="43.7194%" y="533" width="0.2447%" height="15" fill="rgb(237,104,14)" fg:x="536" fg:w="3"/><text x="43.9694%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.8825%" y="517" width="0.0816%" height="15" fill="rgb(245,207,31)" fg:x="538" fg:w="1"/><text x="44.1325%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.1272%" y="517" width="0.0816%" height="15" fill="rgb(229,211,45)" fg:x="541" fg:w="1"/><text x="44.3772%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="44.2088%" y="517" width="0.3263%" height="15" fill="rgb(229,113,15)" fg:x="542" fg:w="4"/><text x="44.4588%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="44.2088%" y="501" width="0.3263%" height="15" fill="rgb(237,147,15)" fg:x="542" fg:w="4"/><text x="44.4588%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="44.2088%" y="485" width="0.3263%" height="15" fill="rgb(244,120,12)" fg:x="542" fg:w="4"/><text x="44.4588%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="44.2904%" y="469" width="0.2447%" height="15" fill="rgb(205,120,12)" fg:x="543" fg:w="3"/><text x="44.5404%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="44.3719%" y="453" width="0.1631%" height="15" fill="rgb(231,26,45)" fg:x="544" fg:w="2"/><text x="44.6219%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="44.3719%" y="437" width="0.1631%" height="15" fill="rgb(246,98,1)" fg:x="544" fg:w="2"/><text x="44.6219%" y="447.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="44.3719%" y="421" width="0.1631%" height="15" fill="rgb(207,68,45)" fg:x="544" fg:w="2"/><text x="44.6219%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="44.7798%" y="469" width="0.1631%" height="15" fill="rgb(231,27,38)" fg:x="549" fg:w="2"/><text x="45.0298%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="44.7798%" y="453" width="0.1631%" height="15" fill="rgb(214,223,3)" fg:x="549" fg:w="2"/><text x="45.0298%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="44.7798%" y="437" width="0.1631%" height="15" fill="rgb(228,195,46)" fg:x="549" fg:w="2"/><text x="45.0298%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.7798%" y="421" width="0.1631%" height="15" fill="rgb(231,100,42)" fg:x="549" fg:w="2"/><text x="45.0298%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="44.7798%" y="501" width="0.2447%" height="15" fill="rgb(236,53,4)" fg:x="549" fg:w="3"/><text x="45.0298%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="44.7798%" y="485" width="0.2447%" height="15" fill="rgb(230,152,12)" fg:x="549" fg:w="3"/><text x="45.0298%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="44.9429%" y="469" width="0.0816%" height="15" fill="rgb(226,101,19)" fg:x="551" fg:w="1"/><text x="45.1929%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="45.0245%" y="501" width="0.2447%" height="15" fill="rgb(250,149,32)" fg:x="552" fg:w="3"/><text x="45.2745%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="45.0245%" y="485" width="0.2447%" height="15" fill="rgb(232,178,12)" fg:x="552" fg:w="3"/><text x="45.2745%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="45.1060%" y="469" width="0.1631%" height="15" fill="rgb(246,151,17)" fg:x="553" fg:w="2"/><text x="45.3560%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.2692%" y="485" width="0.0816%" height="15" fill="rgb(252,17,51)" fg:x="555" fg:w="1"/><text x="45.5192%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="45.3507%" y="485" width="0.1631%" height="15" fill="rgb(250,207,23)" fg:x="556" fg:w="2"/><text x="45.6007%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="45.3507%" y="469" width="0.1631%" height="15" fill="rgb(205,27,5)" fg:x="556" fg:w="2"/><text x="45.6007%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="45.3507%" y="453" width="0.1631%" height="15" fill="rgb(224,32,19)" fg:x="556" fg:w="2"/><text x="45.6007%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="45.5139%" y="469" width="0.0816%" height="15" fill="rgb(247,214,40)" fg:x="558" fg:w="1"/><text x="45.7639%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.5139%" y="453" width="0.0816%" height="15" fill="rgb(239,199,17)" fg:x="558" fg:w="1"/><text x="45.7639%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="45.8401%" y="453" width="0.3263%" height="15" fill="rgb(251,159,9)" fg:x="562" fg:w="4"/><text x="46.0901%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="45.8401%" y="437" width="0.3263%" height="15" fill="rgb(225,78,32)" fg:x="562" fg:w="4"/><text x="46.0901%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="46.0033%" y="421" width="0.1631%" height="15" fill="rgb(206,97,47)" fg:x="564" fg:w="2"/><text x="46.2533%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="46.0848%" y="405" width="0.0816%" height="15" fill="rgb(227,107,4)" fg:x="565" fg:w="1"/><text x="46.3348%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="46.1664%" y="437" width="0.3263%" height="15" fill="rgb(241,146,50)" fg:x="566" fg:w="4"/><text x="46.4164%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="46.3295%" y="421" width="0.1631%" height="15" fill="rgb(232,92,30)" fg:x="568" fg:w="2"/><text x="46.5795%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="46.3295%" y="405" width="0.1631%" height="15" fill="rgb(222,0,40)" fg:x="568" fg:w="2"/><text x="46.5795%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="46.4111%" y="389" width="0.0816%" height="15" fill="rgb(219,54,33)" fg:x="569" fg:w="1"/><text x="46.6611%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.31%)</title><rect x="45.2692%" y="501" width="1.3051%" height="15" fill="rgb(226,209,28)" fg:x="555" fg:w="16"/><text x="45.5192%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.06%)</title><rect x="45.5139%" y="485" width="1.0604%" height="15" fill="rgb(254,205,35)" fg:x="558" fg:w="13"/><text x="45.7639%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.98%)</title><rect x="45.5954%" y="469" width="0.9788%" height="15" fill="rgb(230,159,3)" fg:x="559" fg:w="12"/><text x="45.8454%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="46.1664%" y="453" width="0.4078%" height="15" fill="rgb(232,190,24)" fg:x="566" fg:w="5"/><text x="46.4164%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.4927%" y="437" width="0.0816%" height="15" fill="rgb(217,227,44)" fg:x="570" fg:w="1"/><text x="46.7427%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.4927%" y="421" width="0.0816%" height="15" fill="rgb(236,211,1)" fg:x="570" fg:w="1"/><text x="46.7427%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.4927%" y="405" width="0.0816%" height="15" fill="rgb(250,127,46)" fg:x="570" fg:w="1"/><text x="46.7427%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.20%)</title><rect x="44.5351%" y="517" width="2.2023%" height="15" fill="rgb(229,213,6)" fg:x="546" fg:w="27"/><text x="44.7851%" y="527.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="46.5742%" y="501" width="0.1631%" height="15" fill="rgb(237,15,36)" fg:x="571" fg:w="2"/><text x="46.8242%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.6558%" y="485" width="0.0816%" height="15" fill="rgb(213,131,41)" fg:x="572" fg:w="1"/><text x="46.9058%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.6558%" y="469" width="0.0816%" height="15" fill="rgb(225,82,44)" fg:x="572" fg:w="1"/><text x="46.9058%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 3.02%)</title><rect x="43.9641%" y="533" width="3.0179%" height="15" fill="rgb(249,42,11)" fg:x="539" fg:w="37"/><text x="44.2141%" y="543.50">ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="46.7374%" y="517" width="0.2447%" height="15" fill="rgb(253,11,29)" fg:x="573" fg:w="3"/><text x="46.9874%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="46.7374%" y="501" width="0.2447%" height="15" fill="rgb(206,8,54)" fg:x="573" fg:w="3"/><text x="46.9874%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="46.7374%" y="485" width="0.2447%" height="15" fill="rgb(222,186,2)" fg:x="573" fg:w="3"/><text x="46.9874%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.9005%" y="469" width="0.0816%" height="15" fill="rgb(221,206,53)" fg:x="575" fg:w="1"/><text x="47.1505%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.9005%" y="453" width="0.0816%" height="15" fill="rgb(230,150,21)" fg:x="575" fg:w="1"/><text x="47.1505%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.9005%" y="437" width="0.0816%" height="15" fill="rgb(253,202,10)" fg:x="575" fg:w="1"/><text x="47.1505%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (43 samples, 3.51%)</title><rect x="43.7194%" y="549" width="3.5073%" height="15" fill="rgb(238,109,40)" fg:x="536" fg:w="43"/><text x="43.9694%" y="559.50">&lt;se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="46.9821%" y="533" width="0.2447%" height="15" fill="rgb(247,120,22)" fg:x="576" fg:w="3"/><text x="47.2321%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.0636%" y="517" width="0.1631%" height="15" fill="rgb(207,43,30)" fg:x="577" fg:w="2"/><text x="47.3136%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.1452%" y="501" width="0.0816%" height="15" fill="rgb(213,211,24)" fg:x="578" fg:w="1"/><text x="47.3952%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.1452%" y="485" width="0.0816%" height="15" fill="rgb(239,73,39)" fg:x="578" fg:w="1"/><text x="47.3952%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2268%" y="517" width="0.0816%" height="15" fill="rgb(245,182,19)" fg:x="579" fg:w="1"/><text x="47.4768%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3083%" y="501" width="0.0816%" height="15" fill="rgb(247,143,26)" fg:x="580" fg:w="1"/><text x="47.5583%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.3899%" y="501" width="0.0816%" height="15" fill="rgb(228,191,23)" fg:x="581" fg:w="1"/><text x="47.6399%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3899%" y="485" width="0.0816%" height="15" fill="rgb(253,165,31)" fg:x="581" fg:w="1"/><text x="47.6399%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="47.2268%" y="549" width="0.3263%" height="15" fill="rgb(234,138,20)" fg:x="579" fg:w="4"/><text x="47.4768%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.33%)</title><rect x="47.2268%" y="533" width="0.3263%" height="15" fill="rgb(218,191,29)" fg:x="579" fg:w="4"/><text x="47.4768%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="47.3083%" y="517" width="0.2447%" height="15" fill="rgb(221,157,19)" fg:x="580" fg:w="3"/><text x="47.5583%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.4715%" y="501" width="0.0816%" height="15" fill="rgb(237,26,42)" fg:x="582" fg:w="1"/><text x="47.7215%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.4715%" y="485" width="0.0816%" height="15" fill="rgb(220,163,24)" fg:x="582" fg:w="1"/><text x="47.7215%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.4715%" y="469" width="0.0816%" height="15" fill="rgb(242,115,20)" fg:x="582" fg:w="1"/><text x="47.7215%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.4715%" y="453" width="0.0816%" height="15" fill="rgb(210,206,9)" fg:x="582" fg:w="1"/><text x="47.7215%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.4715%" y="437" width="0.0816%" height="15" fill="rgb(208,71,17)" fg:x="582" fg:w="1"/><text x="47.7215%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.4715%" y="421" width="0.0816%" height="15" fill="rgb(233,7,5)" fg:x="582" fg:w="1"/><text x="47.7215%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.7162%" y="453" width="0.0816%" height="15" fill="rgb(207,92,33)" fg:x="585" fg:w="1"/><text x="47.9662%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8793%" y="437" width="0.0816%" height="15" fill="rgb(218,87,9)" fg:x="587" fg:w="1"/><text x="48.1293%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="47.7162%" y="517" width="0.3263%" height="15" fill="rgb(219,47,37)" fg:x="585" fg:w="4"/><text x="47.9662%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.33%)</title><rect x="47.7162%" y="501" width="0.3263%" height="15" fill="rgb(221,152,34)" fg:x="585" fg:w="4"/><text x="47.9662%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="47.7162%" y="485" width="0.3263%" height="15" fill="rgb(235,176,21)" fg:x="585" fg:w="4"/><text x="47.9662%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="47.7162%" y="469" width="0.3263%" height="15" fill="rgb(232,212,21)" fg:x="585" fg:w="4"/><text x="47.9662%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="47.7977%" y="453" width="0.2447%" height="15" fill="rgb(245,82,39)" fg:x="586" fg:w="3"/><text x="48.0477%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.9608%" y="437" width="0.0816%" height="15" fill="rgb(241,52,51)" fg:x="588" fg:w="1"/><text x="48.2108%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="48.2055%" y="453" width="0.1631%" height="15" fill="rgb(219,91,24)" fg:x="591" fg:w="2"/><text x="48.4555%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="48.2055%" y="437" width="0.1631%" height="15" fill="rgb(241,142,12)" fg:x="591" fg:w="2"/><text x="48.4555%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.2871%" y="421" width="0.0816%" height="15" fill="rgb(230,27,9)" fg:x="592" fg:w="1"/><text x="48.5371%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="48.3687%" y="453" width="0.1631%" height="15" fill="rgb(249,181,32)" fg:x="593" fg:w="2"/><text x="48.6187%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="48.3687%" y="437" width="0.1631%" height="15" fill="rgb(230,107,3)" fg:x="593" fg:w="2"/><text x="48.6187%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="48.3687%" y="421" width="0.1631%" height="15" fill="rgb(246,204,14)" fg:x="593" fg:w="2"/><text x="48.6187%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="48.3687%" y="405" width="0.1631%" height="15" fill="rgb(213,192,47)" fg:x="593" fg:w="2"/><text x="48.6187%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.49%)</title><rect x="48.1240%" y="469" width="0.4894%" height="15" fill="rgb(240,44,36)" fg:x="590" fg:w="6"/><text x="48.3740%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.5318%" y="453" width="0.0816%" height="15" fill="rgb(244,209,38)" fg:x="595" fg:w="1"/><text x="48.7818%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.57%)</title><rect x="48.1240%" y="501" width="0.5710%" height="15" fill="rgb(219,34,37)" fg:x="590" fg:w="7"/><text x="48.3740%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.57%)</title><rect x="48.1240%" y="485" width="0.5710%" height="15" fill="rgb(210,28,6)" fg:x="590" fg:w="7"/><text x="48.3740%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.6134%" y="469" width="0.0816%" height="15" fill="rgb(244,110,52)" fg:x="596" fg:w="1"/><text x="48.8634%" y="479.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (14 samples, 1.14%)</title><rect x="47.6346%" y="533" width="1.1419%" height="15" fill="rgb(254,124,47)" fg:x="584" fg:w="14"/><text x="47.8846%" y="543.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.73%)</title><rect x="48.0424%" y="517" width="0.7341%" height="15" fill="rgb(254,110,13)" fg:x="589" fg:w="9"/><text x="48.2924%" y="527.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="48.6949%" y="501" width="0.0816%" height="15" fill="rgb(252,57,21)" fg:x="597" fg:w="1"/><text x="48.9449%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="48.8581%" y="501" width="0.4078%" height="15" fill="rgb(242,60,45)" fg:x="599" fg:w="5"/><text x="49.1081%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="48.8581%" y="485" width="0.4078%" height="15" fill="rgb(234,49,30)" fg:x="599" fg:w="5"/><text x="49.1081%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="49.0212%" y="469" width="0.2447%" height="15" fill="rgb(218,98,6)" fg:x="601" fg:w="3"/><text x="49.2712%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="49.2659%" y="501" width="0.0816%" height="15" fill="rgb(220,174,29)" fg:x="604" fg:w="1"/><text x="49.5159%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.2659%" y="485" width="0.0816%" height="15" fill="rgb(236,163,23)" fg:x="604" fg:w="1"/><text x="49.5159%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="49.3475%" y="501" width="0.0816%" height="15" fill="rgb(242,114,45)" fg:x="605" fg:w="1"/><text x="49.5975%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="49.3475%" y="485" width="0.0816%" height="15" fill="rgb(232,10,53)" fg:x="605" fg:w="1"/><text x="49.5975%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.3475%" y="469" width="0.0816%" height="15" fill="rgb(245,108,29)" fg:x="605" fg:w="1"/><text x="49.5975%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.3475%" y="453" width="0.0816%" height="15" fill="rgb(240,89,53)" fg:x="605" fg:w="1"/><text x="49.5975%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.5922%" y="469" width="0.0816%" height="15" fill="rgb(226,60,45)" fg:x="608" fg:w="1"/><text x="49.8422%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="49.6737%" y="469" width="0.0816%" height="15" fill="rgb(230,41,44)" fg:x="609" fg:w="1"/><text x="49.9237%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="49.6737%" y="453" width="0.0816%" height="15" fill="rgb(230,26,20)" fg:x="609" fg:w="1"/><text x="49.9237%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.49%)</title><rect x="49.4290%" y="501" width="0.4894%" height="15" fill="rgb(237,170,32)" fg:x="606" fg:w="6"/><text x="49.6790%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="49.4290%" y="485" width="0.4894%" height="15" fill="rgb(212,35,42)" fg:x="606" fg:w="6"/><text x="49.6790%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.7553%" y="469" width="0.1631%" height="15" fill="rgb(227,31,34)" fg:x="610" fg:w="2"/><text x="50.0053%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.8369%" y="453" width="0.0816%" height="15" fill="rgb(216,19,18)" fg:x="611" fg:w="1"/><text x="50.0869%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.8369%" y="437" width="0.0816%" height="15" fill="rgb(211,133,42)" fg:x="611" fg:w="1"/><text x="50.0869%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="50.0000%" y="485" width="0.0816%" height="15" fill="rgb(244,66,13)" fg:x="613" fg:w="1"/><text x="50.2500%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.1631%" y="453" width="0.1631%" height="15" fill="rgb(218,185,50)" fg:x="615" fg:w="2"/><text x="50.4131%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2447%" y="437" width="0.0816%" height="15" fill="rgb(219,149,13)" fg:x="616" fg:w="1"/><text x="50.4947%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2447%" y="421" width="0.0816%" height="15" fill="rgb(221,125,0)" fg:x="616" fg:w="1"/><text x="50.4947%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="50.4078%" y="437" width="0.0816%" height="15" fill="rgb(247,126,27)" fg:x="618" fg:w="1"/><text x="50.6578%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4894%" y="405" width="0.0816%" height="15" fill="rgb(250,138,30)" fg:x="619" fg:w="1"/><text x="50.7394%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="50.4894%" y="421" width="0.1631%" height="15" fill="rgb(230,151,9)" fg:x="619" fg:w="2"/><text x="50.7394%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="50.5710%" y="405" width="0.0816%" height="15" fill="rgb(233,80,38)" fg:x="620" fg:w="1"/><text x="50.8210%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.5710%" y="389" width="0.0816%" height="15" fill="rgb(232,68,43)" fg:x="620" fg:w="1"/><text x="50.8210%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="50.3263%" y="453" width="0.4078%" height="15" fill="rgb(254,5,50)" fg:x="617" fg:w="5"/><text x="50.5763%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="50.4894%" y="437" width="0.2447%" height="15" fill="rgb(225,45,5)" fg:x="619" fg:w="3"/><text x="50.7394%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6525%" y="421" width="0.0816%" height="15" fill="rgb(239,22,3)" fg:x="621" fg:w="1"/><text x="50.9025%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="50.8157%" y="421" width="0.0816%" height="15" fill="rgb(243,129,0)" fg:x="623" fg:w="1"/><text x="51.0657%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="51.1419%" y="373" width="0.0816%" height="15" fill="rgb(223,164,0)" fg:x="627" fg:w="1"/><text x="51.3919%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="51.7129%" y="341" width="0.0816%" height="15" fill="rgb(221,46,29)" fg:x="634" fg:w="1"/><text x="51.9629%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="51.7129%" y="325" width="0.0816%" height="15" fill="rgb(205,97,47)" fg:x="634" fg:w="1"/><text x="51.9629%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="51.7129%" y="309" width="0.0816%" height="15" fill="rgb(249,14,8)" fg:x="634" fg:w="1"/><text x="51.9629%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.82%)</title><rect x="51.0604%" y="405" width="0.8157%" height="15" fill="rgb(216,77,3)" fg:x="626" fg:w="10"/><text x="51.3104%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.82%)</title><rect x="51.0604%" y="389" width="0.8157%" height="15" fill="rgb(206,168,54)" fg:x="626" fg:w="10"/><text x="51.3104%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="51.2235%" y="373" width="0.6525%" height="15" fill="rgb(236,3,41)" fg:x="628" fg:w="8"/><text x="51.4735%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="51.6313%" y="357" width="0.2447%" height="15" fill="rgb(231,132,24)" fg:x="633" fg:w="3"/><text x="51.8813%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7945%" y="341" width="0.0816%" height="15" fill="rgb(227,221,40)" fg:x="635" fg:w="1"/><text x="52.0445%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.14%)</title><rect x="50.8157%" y="437" width="1.1419%" height="15" fill="rgb(233,151,11)" fg:x="623" fg:w="14"/><text x="51.0657%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.06%)</title><rect x="50.8972%" y="421" width="1.0604%" height="15" fill="rgb(247,81,35)" fg:x="624" fg:w="13"/><text x="51.1472%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8760%" y="405" width="0.0816%" height="15" fill="rgb(243,128,48)" fg:x="636" fg:w="1"/><text x="52.1260%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.96%)</title><rect x="50.1631%" y="469" width="1.9576%" height="15" fill="rgb(253,16,10)" fg:x="615" fg:w="24"/><text x="50.4131%" y="479.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.39%)</title><rect x="50.7341%" y="453" width="1.3866%" height="15" fill="rgb(228,67,27)" fg:x="622" fg:w="17"/><text x="50.9841%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.9576%" y="437" width="0.1631%" height="15" fill="rgb(231,105,25)" fg:x="637" fg:w="2"/><text x="52.2076%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 2.20%)</title><rect x="50.0816%" y="485" width="2.2023%" height="15" fill="rgb(213,166,47)" fg:x="614" fg:w="27"/><text x="50.3316%" y="495.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="52.1207%" y="469" width="0.1631%" height="15" fill="rgb(209,27,10)" fg:x="639" fg:w="2"/><text x="52.3707%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2023%" y="453" width="0.0816%" height="15" fill="rgb(241,44,30)" fg:x="640" fg:w="1"/><text x="52.4523%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2838%" y="485" width="0.0816%" height="15" fill="rgb(223,216,15)" fg:x="641" fg:w="1"/><text x="52.5338%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (46 samples, 3.75%)</title><rect x="48.7765%" y="533" width="3.7520%" height="15" fill="rgb(227,14,7)" fg:x="598" fg:w="46"/><text x="49.0265%" y="543.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (46 samples, 3.75%)</title><rect x="48.7765%" y="517" width="3.7520%" height="15" fill="rgb(237,14,5)" fg:x="598" fg:w="46"/><text x="49.0265%" y="527.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.61%)</title><rect x="49.9184%" y="501" width="2.6101%" height="15" fill="rgb(232,14,36)" fg:x="612" fg:w="32"/><text x="50.1684%" y="511.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.3654%" y="485" width="0.1631%" height="15" fill="rgb(234,0,38)" fg:x="642" fg:w="2"/><text x="52.6154%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.4470%" y="469" width="0.0816%" height="15" fill="rgb(207,170,14)" fg:x="643" fg:w="1"/><text x="52.6970%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4470%" y="453" width="0.0816%" height="15" fill="rgb(252,45,13)" fg:x="643" fg:w="1"/><text x="52.6970%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.0179%" y="277" width="0.0816%" height="15" fill="rgb(213,142,7)" fg:x="650" fg:w="1"/><text x="53.2679%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="52.9364%" y="341" width="0.2447%" height="15" fill="rgb(216,157,23)" fg:x="649" fg:w="3"/><text x="53.1864%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="52.9364%" y="325" width="0.2447%" height="15" fill="rgb(212,145,33)" fg:x="649" fg:w="3"/><text x="53.1864%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.0179%" y="309" width="0.1631%" height="15" fill="rgb(233,26,13)" fg:x="650" fg:w="2"/><text x="53.2679%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.0179%" y="293" width="0.1631%" height="15" fill="rgb(219,196,19)" fg:x="650" fg:w="2"/><text x="53.2679%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.0995%" y="277" width="0.0816%" height="15" fill="rgb(246,56,21)" fg:x="651" fg:w="1"/><text x="53.3495%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.0995%" y="261" width="0.0816%" height="15" fill="rgb(222,28,53)" fg:x="651" fg:w="1"/><text x="53.3495%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="52.6917%" y="405" width="0.5710%" height="15" fill="rgb(224,5,27)" fg:x="646" fg:w="7"/><text x="52.9417%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="52.6917%" y="389" width="0.5710%" height="15" fill="rgb(220,153,33)" fg:x="646" fg:w="7"/><text x="52.9417%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="52.7732%" y="373" width="0.4894%" height="15" fill="rgb(226,58,19)" fg:x="647" fg:w="6"/><text x="53.0232%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="52.9364%" y="357" width="0.3263%" height="15" fill="rgb(239,112,23)" fg:x="649" fg:w="4"/><text x="53.1864%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.1811%" y="341" width="0.0816%" height="15" fill="rgb(251,213,20)" fg:x="652" fg:w="1"/><text x="53.4311%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="52.6917%" y="437" width="0.6525%" height="15" fill="rgb(215,181,21)" fg:x="646" fg:w="8"/><text x="52.9417%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="52.6917%" y="421" width="0.6525%" height="15" fill="rgb(240,8,35)" fg:x="646" fg:w="8"/><text x="52.9417%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2626%" y="405" width="0.0816%" height="15" fill="rgb(232,203,3)" fg:x="653" fg:w="1"/><text x="53.5126%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2626%" y="389" width="0.0816%" height="15" fill="rgb(214,202,43)" fg:x="653" fg:w="1"/><text x="53.5126%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2626%" y="373" width="0.0816%" height="15" fill="rgb(254,35,11)" fg:x="653" fg:w="1"/><text x="53.5126%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.41%)</title><rect x="53.3442%" y="437" width="0.4078%" height="15" fill="rgb(239,173,13)" fg:x="654" fg:w="5"/><text x="53.5942%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="53.5889%" y="421" width="0.1631%" height="15" fill="rgb(220,141,0)" fg:x="657" fg:w="2"/><text x="53.8389%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.39%)</title><rect x="52.5285%" y="469" width="1.3866%" height="15" fill="rgb(210,98,12)" fg:x="644" fg:w="17"/><text x="52.7785%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.22%)</title><rect x="52.6917%" y="453" width="1.2235%" height="15" fill="rgb(254,153,22)" fg:x="646" fg:w="15"/><text x="52.9417%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.7520%" y="437" width="0.1631%" height="15" fill="rgb(247,223,17)" fg:x="659" fg:w="2"/><text x="54.0020%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.8336%" y="421" width="0.0816%" height="15" fill="rgb(246,56,7)" fg:x="660" fg:w="1"/><text x="54.0836%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.9152%" y="453" width="0.0816%" height="15" fill="rgb(240,226,12)" fg:x="661" fg:w="1"/><text x="54.1652%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="53.9152%" y="469" width="0.1631%" height="15" fill="rgb(205,87,46)" fg:x="661" fg:w="2"/><text x="54.1652%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.9967%" y="453" width="0.0816%" height="15" fill="rgb(245,214,51)" fg:x="662" fg:w="1"/><text x="54.2467%" y="463.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (128 samples, 10.44%)</title><rect x="43.7194%" y="581" width="10.4405%" height="15" fill="rgb(223,172,33)" fg:x="536" fg:w="128"/><text x="43.9694%" y="591.50">engine::interna..</text></g><g><title>engine::session::SavesEntities::check_for_changes (128 samples, 10.44%)</title><rect x="43.7194%" y="565" width="10.4405%" height="15" fill="rgb(227,203,34)" fg:x="536" fg:w="128"/><text x="43.9694%" y="575.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (81 samples, 6.61%)</title><rect x="47.5530%" y="549" width="6.6069%" height="15" fill="rgb(248,143,44)" fg:x="583" fg:w="81"/><text x="47.8030%" y="559.50">kernel::m..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (20 samples, 1.63%)</title><rect x="52.5285%" y="533" width="1.6313%" height="15" fill="rgb(226,162,5)" fg:x="644" fg:w="20"/><text x="52.7785%" y="543.50"></text></g><g><title>serde_json::de::from_trait (20 samples, 1.63%)</title><rect x="52.5285%" y="517" width="1.6313%" height="15" fill="rgb(211,143,1)" fg:x="644" fg:w="20"/><text x="52.7785%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.63%)</title><rect x="52.5285%" y="501" width="1.6313%" height="15" fill="rgb(224,96,15)" fg:x="644" fg:w="20"/><text x="52.7785%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.63%)</title><rect x="52.5285%" y="485" width="1.6313%" height="15" fill="rgb(222,4,38)" fg:x="644" fg:w="20"/><text x="52.7785%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.0783%" y="469" width="0.0816%" height="15" fill="rgb(253,228,15)" fg:x="663" fg:w="1"/><text x="54.3283%" y="479.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="54.1599%" y="581" width="0.0816%" height="15" fill="rgb(242,194,12)" fg:x="664" fg:w="1"/><text x="54.4099%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="54.1599%" y="565" width="0.0816%" height="15" fill="rgb(214,177,31)" fg:x="664" fg:w="1"/><text x="54.4099%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="54.1599%" y="549" width="0.0816%" height="15" fill="rgb(226,58,51)" fg:x="664" fg:w="1"/><text x="54.4099%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="54.1599%" y="533" width="0.0816%" height="15" fill="rgb(250,119,16)" fg:x="664" fg:w="1"/><text x="54.4099%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="54.1599%" y="517" width="0.0816%" height="15" fill="rgb(223,128,53)" fg:x="664" fg:w="1"/><text x="54.4099%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="54.1599%" y="501" width="0.0816%" height="15" fill="rgb(251,199,15)" fg:x="664" fg:w="1"/><text x="54.4099%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="54.1599%" y="485" width="0.0816%" height="15" fill="rgb(235,168,42)" fg:x="664" fg:w="1"/><text x="54.4099%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="54.1599%" y="469" width="0.0816%" height="15" fill="rgb(250,210,17)" fg:x="664" fg:w="1"/><text x="54.4099%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="54.1599%" y="453" width="0.0816%" height="15" fill="rgb(226,36,41)" fg:x="664" fg:w="1"/><text x="54.4099%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="54.1599%" y="437" width="0.0816%" height="15" fill="rgb(225,87,10)" fg:x="664" fg:w="1"/><text x="54.4099%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.1599%" y="421" width="0.0816%" height="15" fill="rgb(228,83,9)" fg:x="664" fg:w="1"/><text x="54.4099%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.1599%" y="405" width="0.0816%" height="15" fill="rgb(225,16,36)" fg:x="664" fg:w="1"/><text x="54.4099%" y="415.50"></text></g><g><title>engine::session::Session::save_entity_changes (139 samples, 11.34%)</title><rect x="42.9853%" y="597" width="11.3377%" height="15" fill="rgb(242,198,13)" fg:x="527" fg:w="139"/><text x="43.2353%" y="607.50">engine::session::..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="54.2414%" y="581" width="0.0816%" height="15" fill="rgb(239,25,51)" fg:x="665" fg:w="1"/><text x="54.4914%" y="591.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="54.2414%" y="565" width="0.0816%" height="15" fill="rgb(239,28,37)" fg:x="665" fg:w="1"/><text x="54.4914%" y="575.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="54.2414%" y="549" width="0.0816%" height="15" fill="rgb(234,70,17)" fg:x="665" fg:w="1"/><text x="54.4914%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="54.2414%" y="533" width="0.0816%" height="15" fill="rgb(231,215,53)" fg:x="665" fg:w="1"/><text x="54.4914%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="54.2414%" y="517" width="0.0816%" height="15" fill="rgb(218,140,42)" fg:x="665" fg:w="1"/><text x="54.4914%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="54.2414%" y="501" width="0.0816%" height="15" fill="rgb(233,227,45)" fg:x="665" fg:w="1"/><text x="54.4914%" y="511.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="54.2414%" y="485" width="0.0816%" height="15" fill="rgb(225,189,21)" fg:x="665" fg:w="1"/><text x="54.4914%" y="495.50"></text></g><g><title>engine::session::Session::close (144 samples, 11.75%)</title><rect x="42.6591%" y="613" width="11.7455%" height="15" fill="rgb(237,176,54)" fg:x="523" fg:w="144"/><text x="42.9091%" y="623.50">engine::session::..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="54.3230%" y="597" width="0.0816%" height="15" fill="rgb(215,131,46)" fg:x="666" fg:w="1"/><text x="54.5730%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.4861%" y="581" width="0.0816%" height="15" fill="rgb(218,95,20)" fg:x="668" fg:w="1"/><text x="54.7361%" y="591.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (2 samples, 0.16%)</title><rect x="54.6493%" y="517" width="0.1631%" height="15" fill="rgb(208,198,12)" fg:x="670" fg:w="2"/><text x="54.8993%" y="527.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="54.6493%" y="501" width="0.1631%" height="15" fill="rgb(239,107,50)" fg:x="670" fg:w="2"/><text x="54.8993%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="54.9755%" y="453" width="0.2447%" height="15" fill="rgb(240,217,37)" fg:x="674" fg:w="3"/><text x="55.2255%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.2202%" y="453" width="0.0816%" height="15" fill="rgb(242,197,49)" fg:x="677" fg:w="1"/><text x="55.4702%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.3018%" y="453" width="0.0816%" height="15" fill="rgb(219,171,17)" fg:x="678" fg:w="1"/><text x="55.5518%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.3018%" y="437" width="0.0816%" height="15" fill="rgb(209,81,40)" fg:x="678" fg:w="1"/><text x="55.5518%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.3018%" y="421" width="0.0816%" height="15" fill="rgb(237,156,30)" fg:x="678" fg:w="1"/><text x="55.5518%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.3018%" y="405" width="0.0816%" height="15" fill="rgb(212,127,16)" fg:x="678" fg:w="1"/><text x="55.5518%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.3018%" y="389" width="0.0816%" height="15" fill="rgb(226,66,32)" fg:x="678" fg:w="1"/><text x="55.5518%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.3834%" y="437" width="0.0816%" height="15" fill="rgb(245,22,46)" fg:x="679" fg:w="1"/><text x="55.6334%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="55.4649%" y="437" width="0.2447%" height="15" fill="rgb(210,112,21)" fg:x="680" fg:w="3"/><text x="55.7149%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="55.4649%" y="421" width="0.2447%" height="15" fill="rgb(207,118,39)" fg:x="680" fg:w="3"/><text x="55.7149%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="55.4649%" y="405" width="0.2447%" height="15" fill="rgb(205,206,35)" fg:x="680" fg:w="3"/><text x="55.7149%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.7912%" y="421" width="0.0816%" height="15" fill="rgb(222,120,2)" fg:x="684" fg:w="1"/><text x="56.0412%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7912%" y="405" width="0.0816%" height="15" fill="rgb(205,38,18)" fg:x="684" fg:w="1"/><text x="56.0412%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.06%)</title><rect x="54.8940%" y="469" width="1.0604%" height="15" fill="rgb(226,61,2)" fg:x="673" fg:w="13"/><text x="55.1440%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="55.3834%" y="453" width="0.5710%" height="15" fill="rgb(242,161,23)" fg:x="679" fg:w="7"/><text x="55.6334%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="55.7096%" y="437" width="0.2447%" height="15" fill="rgb(213,13,52)" fg:x="683" fg:w="3"/><text x="55.9596%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.8728%" y="421" width="0.0816%" height="15" fill="rgb(246,209,47)" fg:x="685" fg:w="1"/><text x="56.1228%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8728%" y="405" width="0.0816%" height="15" fill="rgb(214,41,3)" fg:x="685" fg:w="1"/><text x="56.1228%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="55.9543%" y="469" width="0.0816%" height="15" fill="rgb(236,119,38)" fg:x="686" fg:w="1"/><text x="56.2043%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="56.0359%" y="453" width="0.0816%" height="15" fill="rgb(218,50,11)" fg:x="687" fg:w="1"/><text x="56.2859%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="56.0359%" y="437" width="0.0816%" height="15" fill="rgb(228,38,11)" fg:x="687" fg:w="1"/><text x="56.2859%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="56.0359%" y="421" width="0.0816%" height="15" fill="rgb(212,13,9)" fg:x="687" fg:w="1"/><text x="56.2859%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5253%" y="357" width="0.0816%" height="15" fill="rgb(208,211,9)" fg:x="693" fg:w="1"/><text x="56.7753%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5253%" y="341" width="0.0816%" height="15" fill="rgb(239,39,32)" fg:x="693" fg:w="1"/><text x="56.7753%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.5253%" y="325" width="0.0816%" height="15" fill="rgb(254,179,26)" fg:x="693" fg:w="1"/><text x="56.7753%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.5253%" y="309" width="0.0816%" height="15" fill="rgb(249,165,28)" fg:x="693" fg:w="1"/><text x="56.7753%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.5253%" y="293" width="0.0816%" height="15" fill="rgb(225,59,50)" fg:x="693" fg:w="1"/><text x="56.7753%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5253%" y="277" width="0.0816%" height="15" fill="rgb(209,122,5)" fg:x="693" fg:w="1"/><text x="56.7753%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5253%" y="261" width="0.0816%" height="15" fill="rgb(214,65,34)" fg:x="693" fg:w="1"/><text x="56.7753%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.5253%" y="245" width="0.0816%" height="15" fill="rgb(249,183,32)" fg:x="693" fg:w="1"/><text x="56.7753%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.5253%" y="229" width="0.0816%" height="15" fill="rgb(218,122,24)" fg:x="693" fg:w="1"/><text x="56.7753%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.5253%" y="213" width="0.0816%" height="15" fill="rgb(224,109,18)" fg:x="693" fg:w="1"/><text x="56.7753%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.5253%" y="197" width="0.0816%" height="15" fill="rgb(210,68,50)" fg:x="693" fg:w="1"/><text x="56.7753%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5253%" y="181" width="0.0816%" height="15" fill="rgb(212,184,34)" fg:x="693" fg:w="1"/><text x="56.7753%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="56.4437%" y="373" width="0.3263%" height="15" fill="rgb(238,105,48)" fg:x="692" fg:w="4"/><text x="56.6937%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.6069%" y="357" width="0.1631%" height="15" fill="rgb(222,134,54)" fg:x="694" fg:w="2"/><text x="56.8569%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7700%" y="197" width="0.0816%" height="15" fill="rgb(246,24,43)" fg:x="696" fg:w="1"/><text x="57.0200%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.7700%" y="373" width="0.1631%" height="15" fill="rgb(227,169,22)" fg:x="696" fg:w="2"/><text x="57.0200%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.7700%" y="357" width="0.1631%" height="15" fill="rgb(253,152,4)" fg:x="696" fg:w="2"/><text x="57.0200%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="56.7700%" y="341" width="0.1631%" height="15" fill="rgb(219,158,36)" fg:x="696" fg:w="2"/><text x="57.0200%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="56.7700%" y="325" width="0.1631%" height="15" fill="rgb(251,128,40)" fg:x="696" fg:w="2"/><text x="57.0200%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="56.7700%" y="309" width="0.1631%" height="15" fill="rgb(254,101,39)" fg:x="696" fg:w="2"/><text x="57.0200%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.7700%" y="293" width="0.1631%" height="15" fill="rgb(221,168,40)" fg:x="696" fg:w="2"/><text x="57.0200%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.7700%" y="277" width="0.1631%" height="15" fill="rgb(221,14,27)" fg:x="696" fg:w="2"/><text x="57.0200%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="56.7700%" y="261" width="0.1631%" height="15" fill="rgb(207,36,43)" fg:x="696" fg:w="2"/><text x="57.0200%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="56.7700%" y="245" width="0.1631%" height="15" fill="rgb(240,172,53)" fg:x="696" fg:w="2"/><text x="57.0200%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="56.7700%" y="229" width="0.1631%" height="15" fill="rgb(241,138,43)" fg:x="696" fg:w="2"/><text x="57.0200%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="56.7700%" y="213" width="0.1631%" height="15" fill="rgb(227,78,19)" fg:x="696" fg:w="2"/><text x="57.0200%" y="223.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="56.8515%" y="197" width="0.0816%" height="15" fill="rgb(215,127,44)" fg:x="697" fg:w="1"/><text x="57.1015%" y="207.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="56.8515%" y="181" width="0.0816%" height="15" fill="rgb(227,13,10)" fg:x="697" fg:w="1"/><text x="57.1015%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.82%)</title><rect x="56.3622%" y="389" width="0.8157%" height="15" fill="rgb(249,177,6)" fg:x="691" fg:w="10"/><text x="56.6122%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="56.9331%" y="373" width="0.2447%" height="15" fill="rgb(215,154,26)" fg:x="698" fg:w="3"/><text x="57.1831%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12 samples, 0.98%)</title><rect x="56.3622%" y="405" width="0.9788%" height="15" fill="rgb(250,168,20)" fg:x="691" fg:w="12"/><text x="56.6122%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.1778%" y="389" width="0.1631%" height="15" fill="rgb(222,53,38)" fg:x="701" fg:w="2"/><text x="57.4278%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2594%" y="373" width="0.0816%" height="15" fill="rgb(245,154,5)" fg:x="702" fg:w="1"/><text x="57.5094%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.2594%" y="357" width="0.0816%" height="15" fill="rgb(214,89,50)" fg:x="702" fg:w="1"/><text x="57.5094%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.2594%" y="341" width="0.0816%" height="15" fill="rgb(232,73,14)" fg:x="702" fg:w="1"/><text x="57.5094%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.2594%" y="325" width="0.0816%" height="15" fill="rgb(230,101,20)" fg:x="702" fg:w="1"/><text x="57.5094%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2594%" y="309" width="0.0816%" height="15" fill="rgb(208,56,28)" fg:x="702" fg:w="1"/><text x="57.5094%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2594%" y="293" width="0.0816%" height="15" fill="rgb(247,205,22)" fg:x="702" fg:w="1"/><text x="57.5094%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.2594%" y="277" width="0.0816%" height="15" fill="rgb(252,109,51)" fg:x="702" fg:w="1"/><text x="57.5094%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.2594%" y="261" width="0.0816%" height="15" fill="rgb(220,40,24)" fg:x="702" fg:w="1"/><text x="57.5094%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.2594%" y="245" width="0.0816%" height="15" fill="rgb(251,108,7)" fg:x="702" fg:w="1"/><text x="57.5094%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.2594%" y="229" width="0.0816%" height="15" fill="rgb(238,102,51)" fg:x="702" fg:w="1"/><text x="57.5094%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2594%" y="213" width="0.0816%" height="15" fill="rgb(219,149,34)" fg:x="702" fg:w="1"/><text x="57.5094%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.3409%" y="325" width="0.1631%" height="15" fill="rgb(239,70,0)" fg:x="703" fg:w="2"/><text x="57.5909%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.3409%" y="309" width="0.1631%" height="15" fill="rgb(246,214,23)" fg:x="703" fg:w="2"/><text x="57.5909%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.3409%" y="293" width="0.1631%" height="15" fill="rgb(239,221,51)" fg:x="703" fg:w="2"/><text x="57.5909%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.3409%" y="277" width="0.1631%" height="15" fill="rgb(254,62,14)" fg:x="703" fg:w="2"/><text x="57.5909%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.3409%" y="261" width="0.1631%" height="15" fill="rgb(253,57,33)" fg:x="703" fg:w="2"/><text x="57.5909%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.3409%" y="245" width="0.1631%" height="15" fill="rgb(229,34,6)" fg:x="703" fg:w="2"/><text x="57.5909%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.3409%" y="229" width="0.1631%" height="15" fill="rgb(235,191,23)" fg:x="703" fg:w="2"/><text x="57.5909%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.3409%" y="405" width="0.2447%" height="15" fill="rgb(217,207,27)" fg:x="703" fg:w="3"/><text x="57.5909%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.3409%" y="389" width="0.2447%" height="15" fill="rgb(232,41,44)" fg:x="703" fg:w="3"/><text x="57.5909%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="57.3409%" y="373" width="0.2447%" height="15" fill="rgb(221,188,19)" fg:x="703" fg:w="3"/><text x="57.5909%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="57.3409%" y="357" width="0.2447%" height="15" fill="rgb(245,180,45)" fg:x="703" fg:w="3"/><text x="57.5909%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="57.3409%" y="341" width="0.2447%" height="15" fill="rgb(250,220,42)" fg:x="703" fg:w="3"/><text x="57.5909%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.5041%" y="325" width="0.0816%" height="15" fill="rgb(234,16,34)" fg:x="705" fg:w="1"/><text x="57.7541%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.5041%" y="309" width="0.0816%" height="15" fill="rgb(233,217,23)" fg:x="705" fg:w="1"/><text x="57.7541%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 1.55%)</title><rect x="56.2806%" y="421" width="1.5498%" height="15" fill="rgb(209,22,46)" fg:x="690" fg:w="19"/><text x="56.5306%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="57.5856%" y="405" width="0.2447%" height="15" fill="rgb(213,101,18)" fg:x="706" fg:w="3"/><text x="57.8356%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="57.8303%" y="421" width="0.4078%" height="15" fill="rgb(215,179,52)" fg:x="709" fg:w="5"/><text x="58.0803%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.33%)</title><rect x="57.9119%" y="405" width="0.3263%" height="15" fill="rgb(223,50,25)" fg:x="710" fg:w="4"/><text x="58.1619%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.33%)</title><rect x="57.9119%" y="389" width="0.3263%" height="15" fill="rgb(224,51,44)" fg:x="710" fg:w="4"/><text x="58.1619%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.33%)</title><rect x="57.9119%" y="373" width="0.3263%" height="15" fill="rgb(224,13,54)" fg:x="710" fg:w="4"/><text x="58.1619%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.33%)</title><rect x="57.9119%" y="357" width="0.3263%" height="15" fill="rgb(219,58,47)" fg:x="710" fg:w="4"/><text x="58.1619%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.33%)</title><rect x="57.9119%" y="341" width="0.3263%" height="15" fill="rgb(246,124,34)" fg:x="710" fg:w="4"/><text x="58.1619%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.33%)</title><rect x="57.9119%" y="325" width="0.3263%" height="15" fill="rgb(245,109,25)" fg:x="710" fg:w="4"/><text x="58.1619%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.33%)</title><rect x="57.9119%" y="309" width="0.3263%" height="15" fill="rgb(235,48,23)" fg:x="710" fg:w="4"/><text x="58.1619%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.33%)</title><rect x="57.9119%" y="293" width="0.3263%" height="15" fill="rgb(229,203,36)" fg:x="710" fg:w="4"/><text x="58.1619%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.33%)</title><rect x="57.9119%" y="277" width="0.3263%" height="15" fill="rgb(234,180,9)" fg:x="710" fg:w="4"/><text x="58.1619%" y="287.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.33%)</title><rect x="57.9119%" y="261" width="0.3263%" height="15" fill="rgb(228,98,45)" fg:x="710" fg:w="4"/><text x="58.1619%" y="271.50"></text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="57.9119%" y="245" width="0.3263%" height="15" fill="rgb(240,24,36)" fg:x="710" fg:w="4"/><text x="58.1619%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.4829%" y="309" width="0.0816%" height="15" fill="rgb(227,154,19)" fg:x="717" fg:w="1"/><text x="58.7329%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.4829%" y="293" width="0.0816%" height="15" fill="rgb(231,2,48)" fg:x="717" fg:w="1"/><text x="58.7329%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.4829%" y="277" width="0.0816%" height="15" fill="rgb(219,216,0)" fg:x="717" fg:w="1"/><text x="58.7329%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.4829%" y="261" width="0.0816%" height="15" fill="rgb(251,88,0)" fg:x="717" fg:w="1"/><text x="58.7329%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.4829%" y="245" width="0.0816%" height="15" fill="rgb(242,45,45)" fg:x="717" fg:w="1"/><text x="58.7329%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.4829%" y="229" width="0.0816%" height="15" fill="rgb(218,149,45)" fg:x="717" fg:w="1"/><text x="58.7329%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.4829%" y="213" width="0.0816%" height="15" fill="rgb(247,194,10)" fg:x="717" fg:w="1"/><text x="58.7329%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="58.3197%" y="405" width="0.3263%" height="15" fill="rgb(234,33,37)" fg:x="715" fg:w="4"/><text x="58.5697%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.4829%" y="389" width="0.1631%" height="15" fill="rgb(218,61,13)" fg:x="717" fg:w="2"/><text x="58.7329%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.4829%" y="373" width="0.1631%" height="15" fill="rgb(210,80,52)" fg:x="717" fg:w="2"/><text x="58.7329%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.4829%" y="357" width="0.1631%" height="15" fill="rgb(218,203,27)" fg:x="717" fg:w="2"/><text x="58.7329%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.4829%" y="341" width="0.1631%" height="15" fill="rgb(209,126,33)" fg:x="717" fg:w="2"/><text x="58.7329%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.4829%" y="325" width="0.1631%" height="15" fill="rgb(234,173,41)" fg:x="717" fg:w="2"/><text x="58.7329%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.5644%" y="309" width="0.0816%" height="15" fill="rgb(228,166,9)" fg:x="718" fg:w="1"/><text x="58.8144%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.5644%" y="293" width="0.0816%" height="15" fill="rgb(208,124,43)" fg:x="718" fg:w="1"/><text x="58.8144%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.49%)</title><rect x="58.2382%" y="421" width="0.4894%" height="15" fill="rgb(212,154,38)" fg:x="714" fg:w="6"/><text x="58.4882%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6460%" y="405" width="0.0816%" height="15" fill="rgb(246,179,35)" fg:x="719" fg:w="1"/><text x="58.8960%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (32 samples, 2.61%)</title><rect x="56.1990%" y="437" width="2.6101%" height="15" fill="rgb(251,3,50)" fg:x="689" fg:w="32"/><text x="56.4490%" y="447.50">&lt;a..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7276%" y="421" width="0.0816%" height="15" fill="rgb(219,96,8)" fg:x="720" fg:w="1"/><text x="58.9776%" y="431.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (36 samples, 2.94%)</title><rect x="56.0359%" y="469" width="2.9364%" height="15" fill="rgb(251,216,33)" fg:x="687" fg:w="36"/><text x="56.2859%" y="479.50">en..</text></g><g><title>kernel::model::scopes::Scopes::modified (35 samples, 2.85%)</title><rect x="56.1175%" y="453" width="2.8548%" height="15" fill="rgb(243,145,29)" fg:x="688" fg:w="35"/><text x="56.3675%" y="463.50">ke..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.8091%" y="437" width="0.1631%" height="15" fill="rgb(210,75,20)" fg:x="721" fg:w="2"/><text x="59.0591%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.8091%" y="421" width="0.1631%" height="15" fill="rgb(235,56,8)" fg:x="721" fg:w="2"/><text x="59.0591%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.8091%" y="405" width="0.1631%" height="15" fill="rgb(226,175,49)" fg:x="721" fg:w="2"/><text x="59.0591%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.8091%" y="389" width="0.1631%" height="15" fill="rgb(242,204,23)" fg:x="721" fg:w="2"/><text x="59.0591%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.8091%" y="373" width="0.1631%" height="15" fill="rgb(225,104,24)" fg:x="721" fg:w="2"/><text x="59.0591%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.8091%" y="357" width="0.1631%" height="15" fill="rgb(253,34,1)" fg:x="721" fg:w="2"/><text x="59.0591%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.8091%" y="341" width="0.1631%" height="15" fill="rgb(233,199,23)" fg:x="721" fg:w="2"/><text x="59.0591%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.8091%" y="325" width="0.1631%" height="15" fill="rgb(247,7,51)" fg:x="721" fg:w="2"/><text x="59.0591%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="58.8091%" y="309" width="0.1631%" height="15" fill="rgb(214,146,12)" fg:x="721" fg:w="2"/><text x="59.0591%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="58.8091%" y="293" width="0.1631%" height="15" fill="rgb(234,181,43)" fg:x="721" fg:w="2"/><text x="59.0591%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="58.8091%" y="277" width="0.1631%" height="15" fill="rgb(239,148,6)" fg:x="721" fg:w="2"/><text x="59.0591%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.8091%" y="261" width="0.1631%" height="15" fill="rgb(206,151,17)" fg:x="721" fg:w="2"/><text x="59.0591%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.9723%" y="453" width="0.1631%" height="15" fill="rgb(213,215,10)" fg:x="723" fg:w="2"/><text x="59.2223%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0538%" y="437" width="0.0816%" height="15" fill="rgb(215,220,44)" fg:x="724" fg:w="1"/><text x="59.3038%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.0538%" y="421" width="0.0816%" height="15" fill="rgb(245,205,37)" fg:x="724" fg:w="1"/><text x="59.3038%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.0538%" y="405" width="0.0816%" height="15" fill="rgb(245,130,43)" fg:x="724" fg:w="1"/><text x="59.3038%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.0538%" y="389" width="0.0816%" height="15" fill="rgb(231,227,38)" fg:x="724" fg:w="1"/><text x="59.3038%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.0538%" y="373" width="0.0816%" height="15" fill="rgb(233,185,4)" fg:x="724" fg:w="1"/><text x="59.3038%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.0538%" y="357" width="0.0816%" height="15" fill="rgb(224,154,43)" fg:x="724" fg:w="1"/><text x="59.3038%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="59.2170%" y="437" width="0.0816%" height="15" fill="rgb(235,156,15)" fg:x="726" fg:w="1"/><text x="59.4670%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="59.2985%" y="325" width="0.0816%" height="15" fill="rgb(211,55,43)" fg:x="727" fg:w="1"/><text x="59.5485%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="59.2985%" y="309" width="0.0816%" height="15" fill="rgb(247,149,40)" fg:x="727" fg:w="1"/><text x="59.5485%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.2985%" y="293" width="0.0816%" height="15" fill="rgb(232,171,16)" fg:x="727" fg:w="1"/><text x="59.5485%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.2985%" y="277" width="0.0816%" height="15" fill="rgb(215,117,49)" fg:x="727" fg:w="1"/><text x="59.5485%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.2985%" y="261" width="0.0816%" height="15" fill="rgb(246,194,11)" fg:x="727" fg:w="1"/><text x="59.5485%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.2985%" y="245" width="0.0816%" height="15" fill="rgb(242,101,44)" fg:x="727" fg:w="1"/><text x="59.5485%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.2985%" y="229" width="0.0816%" height="15" fill="rgb(226,174,6)" fg:x="727" fg:w="1"/><text x="59.5485%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2985%" y="213" width="0.0816%" height="15" fill="rgb(213,150,20)" fg:x="727" fg:w="1"/><text x="59.5485%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2985%" y="197" width="0.0816%" height="15" fill="rgb(222,124,42)" fg:x="727" fg:w="1"/><text x="59.5485%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2985%" y="181" width="0.0816%" height="15" fill="rgb(250,19,47)" fg:x="727" fg:w="1"/><text x="59.5485%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2985%" y="165" width="0.0816%" height="15" fill="rgb(241,217,19)" fg:x="727" fg:w="1"/><text x="59.5485%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2985%" y="149" width="0.0816%" height="15" fill="rgb(207,210,34)" fg:x="727" fg:w="1"/><text x="59.5485%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2985%" y="133" width="0.0816%" height="15" fill="rgb(244,45,4)" fg:x="727" fg:w="1"/><text x="59.5485%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2985%" y="117" width="0.0816%" height="15" fill="rgb(252,134,50)" fg:x="727" fg:w="1"/><text x="59.5485%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2985%" y="101" width="0.0816%" height="15" fill="rgb(238,74,2)" fg:x="727" fg:w="1"/><text x="59.5485%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2985%" y="85" width="0.0816%" height="15" fill="rgb(226,58,46)" fg:x="727" fg:w="1"/><text x="59.5485%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2985%" y="69" width="0.0816%" height="15" fill="rgb(232,83,35)" fg:x="727" fg:w="1"/><text x="59.5485%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2985%" y="53" width="0.0816%" height="15" fill="rgb(212,148,47)" fg:x="727" fg:w="1"/><text x="59.5485%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2985%" y="37" width="0.0816%" height="15" fill="rgb(235,29,1)" fg:x="727" fg:w="1"/><text x="59.5485%" y="47.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="59.2985%" y="357" width="0.1631%" height="15" fill="rgb(247,55,37)" fg:x="727" fg:w="2"/><text x="59.5485%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="59.2985%" y="341" width="0.1631%" height="15" fill="rgb(222,48,3)" fg:x="727" fg:w="2"/><text x="59.5485%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="59.3801%" y="325" width="0.0816%" height="15" fill="rgb(234,21,33)" fg:x="728" fg:w="1"/><text x="59.6301%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="59.3801%" y="309" width="0.0816%" height="15" fill="rgb(247,178,53)" fg:x="728" fg:w="1"/><text x="59.6301%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.3801%" y="293" width="0.0816%" height="15" fill="rgb(225,75,7)" fg:x="728" fg:w="1"/><text x="59.6301%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.3801%" y="277" width="0.0816%" height="15" fill="rgb(219,199,7)" fg:x="728" fg:w="1"/><text x="59.6301%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.3801%" y="261" width="0.0816%" height="15" fill="rgb(209,93,42)" fg:x="728" fg:w="1"/><text x="59.6301%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.3801%" y="245" width="0.0816%" height="15" fill="rgb(240,175,17)" fg:x="728" fg:w="1"/><text x="59.6301%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.3801%" y="229" width="0.0816%" height="15" fill="rgb(232,106,7)" fg:x="728" fg:w="1"/><text x="59.6301%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.5432%" y="261" width="0.2447%" height="15" fill="rgb(242,106,43)" fg:x="730" fg:w="3"/><text x="59.7932%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.6248%" y="245" width="0.1631%" height="15" fill="rgb(242,61,37)" fg:x="731" fg:w="2"/><text x="59.8748%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="59.7064%" y="229" width="0.0816%" height="15" fill="rgb(205,72,10)" fg:x="732" fg:w="1"/><text x="59.9564%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="59.7064%" y="213" width="0.0816%" height="15" fill="rgb(214,184,36)" fg:x="732" fg:w="1"/><text x="59.9564%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="59.4617%" y="357" width="0.4894%" height="15" fill="rgb(206,107,18)" fg:x="729" fg:w="6"/><text x="59.7117%" y="367.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="59.5432%" y="341" width="0.4078%" height="15" fill="rgb(210,75,5)" fg:x="730" fg:w="5"/><text x="59.7932%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="59.5432%" y="325" width="0.4078%" height="15" fill="rgb(205,3,19)" fg:x="730" fg:w="5"/><text x="59.7932%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="59.5432%" y="309" width="0.4078%" height="15" fill="rgb(207,181,42)" fg:x="730" fg:w="5"/><text x="59.7932%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="59.5432%" y="293" width="0.4078%" height="15" fill="rgb(229,179,43)" fg:x="730" fg:w="5"/><text x="59.7932%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="59.5432%" y="277" width="0.4078%" height="15" fill="rgb(246,95,30)" fg:x="730" fg:w="5"/><text x="59.7932%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.7879%" y="261" width="0.1631%" height="15" fill="rgb(234,144,45)" fg:x="733" fg:w="2"/><text x="60.0379%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="60.0326%" y="197" width="0.1631%" height="15" fill="rgb(250,54,25)" fg:x="736" fg:w="2"/><text x="60.2826%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1142%" y="181" width="0.0816%" height="15" fill="rgb(215,195,40)" fg:x="737" fg:w="1"/><text x="60.3642%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.0326%" y="229" width="0.2447%" height="15" fill="rgb(233,188,42)" fg:x="736" fg:w="3"/><text x="60.2826%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.0326%" y="213" width="0.2447%" height="15" fill="rgb(247,227,35)" fg:x="736" fg:w="3"/><text x="60.2826%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.1958%" y="197" width="0.0816%" height="15" fill="rgb(249,124,27)" fg:x="738" fg:w="1"/><text x="60.4458%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.2773%" y="229" width="0.0816%" height="15" fill="rgb(219,207,25)" fg:x="739" fg:w="1"/><text x="60.5273%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.2773%" y="213" width="0.0816%" height="15" fill="rgb(241,216,47)" fg:x="739" fg:w="1"/><text x="60.5273%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.2773%" y="197" width="0.0816%" height="15" fill="rgb(233,82,50)" fg:x="739" fg:w="1"/><text x="60.5273%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.2773%" y="181" width="0.0816%" height="15" fill="rgb(232,63,2)" fg:x="739" fg:w="1"/><text x="60.5273%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.3589%" y="197" width="0.0816%" height="15" fill="rgb(236,184,28)" fg:x="740" fg:w="1"/><text x="60.6089%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4405%" y="149" width="0.0816%" height="15" fill="rgb(254,63,27)" fg:x="741" fg:w="1"/><text x="60.6905%" y="159.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="60.4405%" y="181" width="0.1631%" height="15" fill="rgb(253,106,28)" fg:x="741" fg:w="2"/><text x="60.6905%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="60.4405%" y="165" width="0.1631%" height="15" fill="rgb(225,141,39)" fg:x="741" fg:w="2"/><text x="60.6905%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5220%" y="149" width="0.0816%" height="15" fill="rgb(222,157,20)" fg:x="742" fg:w="1"/><text x="60.7720%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.5220%" y="133" width="0.0816%" height="15" fill="rgb(210,190,9)" fg:x="742" fg:w="1"/><text x="60.7720%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.5220%" y="117" width="0.0816%" height="15" fill="rgb(242,167,7)" fg:x="742" fg:w="1"/><text x="60.7720%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.5220%" y="101" width="0.0816%" height="15" fill="rgb(227,82,41)" fg:x="742" fg:w="1"/><text x="60.7720%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.6036%" y="149" width="0.0816%" height="15" fill="rgb(222,131,13)" fg:x="743" fg:w="1"/><text x="60.8536%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.73%)</title><rect x="60.0326%" y="277" width="0.7341%" height="15" fill="rgb(221,98,26)" fg:x="736" fg:w="9"/><text x="60.2826%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="60.0326%" y="261" width="0.7341%" height="15" fill="rgb(251,63,52)" fg:x="736" fg:w="9"/><text x="60.2826%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.73%)</title><rect x="60.0326%" y="245" width="0.7341%" height="15" fill="rgb(246,25,43)" fg:x="736" fg:w="9"/><text x="60.2826%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="60.3589%" y="229" width="0.4078%" height="15" fill="rgb(247,167,15)" fg:x="740" fg:w="5"/><text x="60.6089%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="60.3589%" y="213" width="0.4078%" height="15" fill="rgb(240,104,42)" fg:x="740" fg:w="5"/><text x="60.6089%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.33%)</title><rect x="60.4405%" y="197" width="0.3263%" height="15" fill="rgb(224,54,6)" fg:x="741" fg:w="4"/><text x="60.6905%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.6036%" y="181" width="0.1631%" height="15" fill="rgb(244,108,35)" fg:x="743" fg:w="2"/><text x="60.8536%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.6036%" y="165" width="0.1631%" height="15" fill="rgb(216,154,2)" fg:x="743" fg:w="2"/><text x="60.8536%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.6852%" y="149" width="0.0816%" height="15" fill="rgb(222,8,47)" fg:x="744" fg:w="1"/><text x="60.9352%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6852%" y="133" width="0.0816%" height="15" fill="rgb(252,93,1)" fg:x="744" fg:w="1"/><text x="60.9352%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.6852%" y="117" width="0.0816%" height="15" fill="rgb(223,226,51)" fg:x="744" fg:w="1"/><text x="60.9352%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.6852%" y="101" width="0.0816%" height="15" fill="rgb(206,147,9)" fg:x="744" fg:w="1"/><text x="60.9352%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6852%" y="85" width="0.0816%" height="15" fill="rgb(248,180,41)" fg:x="744" fg:w="1"/><text x="60.9352%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.6852%" y="69" width="0.0816%" height="15" fill="rgb(209,47,50)" fg:x="744" fg:w="1"/><text x="60.9352%" y="79.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (11 samples, 0.90%)</title><rect x="59.9511%" y="341" width="0.8972%" height="15" fill="rgb(243,65,31)" fg:x="735" fg:w="11"/><text x="60.2011%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (11 samples, 0.90%)</title><rect x="59.9511%" y="325" width="0.8972%" height="15" fill="rgb(228,128,1)" fg:x="735" fg:w="11"/><text x="60.2011%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.82%)</title><rect x="60.0326%" y="309" width="0.8157%" height="15" fill="rgb(231,192,16)" fg:x="736" fg:w="10"/><text x="60.2826%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.82%)</title><rect x="60.0326%" y="293" width="0.8157%" height="15" fill="rgb(224,26,40)" fg:x="736" fg:w="10"/><text x="60.2826%" y="303.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="60.7667%" y="277" width="0.0816%" height="15" fill="rgb(214,192,17)" fg:x="745" fg:w="1"/><text x="61.0167%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.8483%" y="293" width="0.0816%" height="15" fill="rgb(225,147,18)" fg:x="746" fg:w="1"/><text x="61.0983%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.8483%" y="277" width="0.0816%" height="15" fill="rgb(205,35,11)" fg:x="746" fg:w="1"/><text x="61.0983%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.0114%" y="261" width="0.1631%" height="15" fill="rgb(242,40,42)" fg:x="748" fg:w="2"/><text x="61.2614%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0930%" y="245" width="0.0816%" height="15" fill="rgb(250,170,13)" fg:x="749" fg:w="1"/><text x="61.3430%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.1746%" y="213" width="0.1631%" height="15" fill="rgb(240,161,28)" fg:x="750" fg:w="2"/><text x="61.4246%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.1746%" y="197" width="0.1631%" height="15" fill="rgb(245,179,12)" fg:x="750" fg:w="2"/><text x="61.4246%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.1746%" y="181" width="0.1631%" height="15" fill="rgb(250,92,32)" fg:x="750" fg:w="2"/><text x="61.4246%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.1746%" y="165" width="0.1631%" height="15" fill="rgb(233,10,40)" fg:x="750" fg:w="2"/><text x="61.4246%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.1746%" y="149" width="0.1631%" height="15" fill="rgb(217,98,1)" fg:x="750" fg:w="2"/><text x="61.4246%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.1746%" y="133" width="0.1631%" height="15" fill="rgb(238,202,7)" fg:x="750" fg:w="2"/><text x="61.4246%" y="143.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.1746%" y="117" width="0.1631%" height="15" fill="rgb(222,91,3)" fg:x="750" fg:w="2"/><text x="61.4246%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.3377%" y="181" width="0.1631%" height="15" fill="rgb(211,170,49)" fg:x="752" fg:w="2"/><text x="61.5877%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (28 samples, 2.28%)</title><rect x="59.2985%" y="405" width="2.2838%" height="15" fill="rgb(253,139,18)" fg:x="727" fg:w="28"/><text x="59.5485%" y="415.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (28 samples, 2.28%)</title><rect x="59.2985%" y="389" width="2.2838%" height="15" fill="rgb(222,4,43)" fg:x="727" fg:w="28"/><text x="59.5485%" y="399.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (28 samples, 2.28%)</title><rect x="59.2985%" y="373" width="2.2838%" height="15" fill="rgb(207,205,12)" fg:x="727" fg:w="28"/><text x="59.5485%" y="383.50">e..</text></g><g><title>kernel::model::deserialize_entity (20 samples, 1.63%)</title><rect x="59.9511%" y="357" width="1.6313%" height="15" fill="rgb(216,159,46)" fg:x="735" fg:w="20"/><text x="60.2011%" y="367.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.73%)</title><rect x="60.8483%" y="341" width="0.7341%" height="15" fill="rgb(236,115,1)" fg:x="746" fg:w="9"/><text x="61.0983%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.73%)</title><rect x="60.8483%" y="325" width="0.7341%" height="15" fill="rgb(251,35,33)" fg:x="746" fg:w="9"/><text x="61.0983%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="60.8483%" y="309" width="0.7341%" height="15" fill="rgb(248,62,51)" fg:x="746" fg:w="9"/><text x="61.0983%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="60.9299%" y="293" width="0.6525%" height="15" fill="rgb(254,180,19)" fg:x="747" fg:w="8"/><text x="61.1799%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="60.9299%" y="277" width="0.6525%" height="15" fill="rgb(217,100,32)" fg:x="747" fg:w="8"/><text x="61.1799%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="61.1746%" y="261" width="0.4078%" height="15" fill="rgb(224,71,22)" fg:x="750" fg:w="5"/><text x="61.4246%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="61.1746%" y="245" width="0.4078%" height="15" fill="rgb(251,185,33)" fg:x="750" fg:w="5"/><text x="61.4246%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="61.1746%" y="229" width="0.4078%" height="15" fill="rgb(209,75,48)" fg:x="750" fg:w="5"/><text x="61.4246%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="61.3377%" y="213" width="0.2447%" height="15" fill="rgb(253,190,16)" fg:x="752" fg:w="3"/><text x="61.5877%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.3377%" y="197" width="0.2447%" height="15" fill="rgb(226,140,1)" fg:x="752" fg:w="3"/><text x="61.5877%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.5008%" y="181" width="0.0816%" height="15" fill="rgb(206,75,30)" fg:x="754" fg:w="1"/><text x="61.7508%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5008%" y="165" width="0.0816%" height="15" fill="rgb(231,208,37)" fg:x="754" fg:w="1"/><text x="61.7508%" y="175.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="61.5824%" y="405" width="0.2447%" height="15" fill="rgb(238,136,40)" fg:x="755" fg:w="3"/><text x="61.8324%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.6639%" y="389" width="0.1631%" height="15" fill="rgb(247,137,17)" fg:x="756" fg:w="2"/><text x="61.9139%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.6639%" y="373" width="0.1631%" height="15" fill="rgb(240,60,40)" fg:x="756" fg:w="2"/><text x="61.9139%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7455%" y="357" width="0.0816%" height="15" fill="rgb(236,68,50)" fg:x="757" fg:w="1"/><text x="61.9955%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7455%" y="341" width="0.0816%" height="15" fill="rgb(230,42,12)" fg:x="757" fg:w="1"/><text x="61.9955%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7455%" y="325" width="0.0816%" height="15" fill="rgb(219,16,16)" fg:x="757" fg:w="1"/><text x="61.9955%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7455%" y="309" width="0.0816%" height="15" fill="rgb(220,38,35)" fg:x="757" fg:w="1"/><text x="61.9955%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7455%" y="293" width="0.0816%" height="15" fill="rgb(228,33,1)" fg:x="757" fg:w="1"/><text x="61.9955%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7455%" y="277" width="0.0816%" height="15" fill="rgb(241,46,31)" fg:x="757" fg:w="1"/><text x="61.9955%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7455%" y="261" width="0.0816%" height="15" fill="rgb(232,58,20)" fg:x="757" fg:w="1"/><text x="61.9955%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7455%" y="245" width="0.0816%" height="15" fill="rgb(206,228,53)" fg:x="757" fg:w="1"/><text x="61.9955%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7455%" y="229" width="0.0816%" height="15" fill="rgb(206,88,33)" fg:x="757" fg:w="1"/><text x="61.9955%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7455%" y="213" width="0.0816%" height="15" fill="rgb(238,69,7)" fg:x="757" fg:w="1"/><text x="61.9955%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7455%" y="197" width="0.0816%" height="15" fill="rgb(250,21,46)" fg:x="757" fg:w="1"/><text x="61.9955%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7455%" y="181" width="0.0816%" height="15" fill="rgb(215,212,21)" fg:x="757" fg:w="1"/><text x="61.9955%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.8271%" y="373" width="0.0816%" height="15" fill="rgb(211,35,12)" fg:x="758" fg:w="1"/><text x="62.0771%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="61.9086%" y="373" width="0.0816%" height="15" fill="rgb(231,184,16)" fg:x="759" fg:w="1"/><text x="62.1586%" y="383.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (39 samples, 3.18%)</title><rect x="58.9723%" y="469" width="3.1811%" height="15" fill="rgb(242,140,15)" fg:x="723" fg:w="39"/><text x="59.2223%" y="479.50">eng..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (37 samples, 3.02%)</title><rect x="59.1354%" y="453" width="3.0179%" height="15" fill="rgb(220,37,14)" fg:x="725" fg:w="37"/><text x="59.3854%" y="463.50">&lt;pl..</text></g><g><title>kernel::model::entry::Entry::scope (35 samples, 2.85%)</title><rect x="59.2985%" y="437" width="2.8548%" height="15" fill="rgb(223,146,22)" fg:x="727" fg:w="35"/><text x="59.5485%" y="447.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (35 samples, 2.85%)</title><rect x="59.2985%" y="421" width="2.8548%" height="15" fill="rgb(216,132,15)" fg:x="727" fg:w="35"/><text x="59.5485%" y="431.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="61.8271%" y="405" width="0.3263%" height="15" fill="rgb(248,83,5)" fg:x="758" fg:w="4"/><text x="62.0771%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="61.8271%" y="389" width="0.3263%" height="15" fill="rgb(231,206,48)" fg:x="758" fg:w="4"/><text x="62.0771%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.9902%" y="373" width="0.1631%" height="15" fill="rgb(253,185,37)" fg:x="760" fg:w="2"/><text x="62.2402%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.9902%" y="357" width="0.1631%" height="15" fill="rgb(208,21,44)" fg:x="760" fg:w="2"/><text x="62.2402%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="61.9902%" y="341" width="0.1631%" height="15" fill="rgb(236,125,4)" fg:x="760" fg:w="2"/><text x="62.2402%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="62.1533%" y="437" width="0.0816%" height="15" fill="rgb(226,134,25)" fg:x="762" fg:w="1"/><text x="62.4033%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.3165%" y="341" width="0.0816%" height="15" fill="rgb(250,201,12)" fg:x="764" fg:w="1"/><text x="62.5665%" y="351.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (94 samples, 7.67%)</title><rect x="54.8124%" y="485" width="7.6672%" height="15" fill="rgb(225,92,18)" fg:x="672" fg:w="94"/><text x="55.0624%" y="495.50">&lt;engine::p..</text></g><g><title>kernel::plugins::mw::apply_middleware (4 samples, 0.33%)</title><rect x="62.1533%" y="469" width="0.3263%" height="15" fill="rgb(227,35,22)" fg:x="762" fg:w="4"/><text x="62.4033%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.33%)</title><rect x="62.1533%" y="453" width="0.3263%" height="15" fill="rgb(214,180,52)" fg:x="762" fg:w="4"/><text x="62.4033%" y="463.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="62.2349%" y="437" width="0.2447%" height="15" fill="rgb(233,55,38)" fg:x="763" fg:w="3"/><text x="62.4849%" y="447.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="62.2349%" y="421" width="0.2447%" height="15" fill="rgb(249,171,43)" fg:x="763" fg:w="3"/><text x="62.4849%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="62.2349%" y="405" width="0.2447%" height="15" fill="rgb(239,87,2)" fg:x="763" fg:w="3"/><text x="62.4849%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="62.2349%" y="389" width="0.2447%" height="15" fill="rgb(248,141,5)" fg:x="763" fg:w="3"/><text x="62.4849%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="62.2349%" y="373" width="0.2447%" height="15" fill="rgb(238,33,42)" fg:x="763" fg:w="3"/><text x="62.4849%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (2 samples, 0.16%)</title><rect x="62.3165%" y="357" width="0.1631%" height="15" fill="rgb(231,57,19)" fg:x="764" fg:w="2"/><text x="62.5665%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3980%" y="341" width="0.0816%" height="15" fill="rgb(214,78,53)" fg:x="765" fg:w="1"/><text x="62.6480%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="62.5612%" y="437" width="0.0816%" height="15" fill="rgb(206,132,29)" fg:x="767" fg:w="1"/><text x="62.8112%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="62.7243%" y="389" width="0.1631%" height="15" fill="rgb(248,174,31)" fg:x="769" fg:w="2"/><text x="62.9743%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="62.7243%" y="373" width="0.1631%" height="15" fill="rgb(221,87,13)" fg:x="769" fg:w="2"/><text x="62.9743%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="62.7243%" y="357" width="0.1631%" height="15" fill="rgb(223,197,17)" fg:x="769" fg:w="2"/><text x="62.9743%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="62.7243%" y="341" width="0.1631%" height="15" fill="rgb(220,144,50)" fg:x="769" fg:w="2"/><text x="62.9743%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.7243%" y="325" width="0.1631%" height="15" fill="rgb(244,201,11)" fg:x="769" fg:w="2"/><text x="62.9743%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="62.7243%" y="309" width="0.1631%" height="15" fill="rgb(249,81,34)" fg:x="769" fg:w="2"/><text x="62.9743%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.7243%" y="293" width="0.1631%" height="15" fill="rgb(205,161,12)" fg:x="769" fg:w="2"/><text x="62.9743%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.8059%" y="277" width="0.0816%" height="15" fill="rgb(252,139,50)" fg:x="770" fg:w="1"/><text x="63.0559%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8059%" y="261" width="0.0816%" height="15" fill="rgb(205,169,14)" fg:x="770" fg:w="1"/><text x="63.0559%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.8059%" y="245" width="0.0816%" height="15" fill="rgb(248,198,33)" fg:x="770" fg:w="1"/><text x="63.0559%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8059%" y="229" width="0.0816%" height="15" fill="rgb(236,23,21)" fg:x="770" fg:w="1"/><text x="63.0559%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.8059%" y="213" width="0.0816%" height="15" fill="rgb(231,13,38)" fg:x="770" fg:w="1"/><text x="63.0559%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9690%" y="277" width="0.0816%" height="15" fill="rgb(239,139,21)" fg:x="772" fg:w="1"/><text x="63.2190%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.9690%" y="293" width="0.1631%" height="15" fill="rgb(222,164,45)" fg:x="772" fg:w="2"/><text x="63.2190%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.0506%" y="277" width="0.0816%" height="15" fill="rgb(230,52,27)" fg:x="773" fg:w="1"/><text x="63.3006%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.0506%" y="261" width="0.0816%" height="15" fill="rgb(227,143,42)" fg:x="773" fg:w="1"/><text x="63.3006%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.0506%" y="245" width="0.0816%" height="15" fill="rgb(249,127,1)" fg:x="773" fg:w="1"/><text x="63.3006%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.0506%" y="229" width="0.0816%" height="15" fill="rgb(243,107,26)" fg:x="773" fg:w="1"/><text x="63.3006%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.0506%" y="213" width="0.0816%" height="15" fill="rgb(225,7,45)" fg:x="773" fg:w="1"/><text x="63.3006%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.0506%" y="197" width="0.0816%" height="15" fill="rgb(241,88,38)" fg:x="773" fg:w="1"/><text x="63.3006%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.0506%" y="181" width="0.0816%" height="15" fill="rgb(226,121,9)" fg:x="773" fg:w="1"/><text x="63.3006%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.0506%" y="165" width="0.0816%" height="15" fill="rgb(253,60,29)" fg:x="773" fg:w="1"/><text x="63.3006%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.0506%" y="149" width="0.0816%" height="15" fill="rgb(244,181,39)" fg:x="773" fg:w="1"/><text x="63.3006%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.0506%" y="133" width="0.0816%" height="15" fill="rgb(252,203,31)" fg:x="773" fg:w="1"/><text x="63.3006%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.0506%" y="117" width="0.0816%" height="15" fill="rgb(224,120,8)" fg:x="773" fg:w="1"/><text x="63.3006%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="62.8874%" y="341" width="0.3263%" height="15" fill="rgb(205,171,54)" fg:x="771" fg:w="4"/><text x="63.1374%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.9690%" y="325" width="0.2447%" height="15" fill="rgb(235,89,11)" fg:x="772" fg:w="3"/><text x="63.2190%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.9690%" y="309" width="0.2447%" height="15" fill="rgb(212,180,28)" fg:x="772" fg:w="3"/><text x="63.2190%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1321%" y="293" width="0.0816%" height="15" fill="rgb(247,84,49)" fg:x="774" fg:w="1"/><text x="63.3821%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1321%" y="277" width="0.0816%" height="15" fill="rgb(236,187,52)" fg:x="774" fg:w="1"/><text x="63.3821%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.1321%" y="261" width="0.0816%" height="15" fill="rgb(227,24,15)" fg:x="774" fg:w="1"/><text x="63.3821%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.1321%" y="245" width="0.0816%" height="15" fill="rgb(227,211,13)" fg:x="774" fg:w="1"/><text x="63.3821%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.1321%" y="229" width="0.0816%" height="15" fill="rgb(245,52,14)" fg:x="774" fg:w="1"/><text x="63.3821%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1321%" y="213" width="0.0816%" height="15" fill="rgb(225,185,13)" fg:x="774" fg:w="1"/><text x="63.3821%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.1321%" y="197" width="0.0816%" height="15" fill="rgb(217,160,29)" fg:x="774" fg:w="1"/><text x="63.3821%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.1321%" y="181" width="0.0816%" height="15" fill="rgb(216,115,53)" fg:x="774" fg:w="1"/><text x="63.3821%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.1321%" y="165" width="0.0816%" height="15" fill="rgb(236,99,5)" fg:x="774" fg:w="1"/><text x="63.3821%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.1321%" y="149" width="0.0816%" height="15" fill="rgb(222,60,38)" fg:x="774" fg:w="1"/><text x="63.3821%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.1321%" y="133" width="0.0816%" height="15" fill="rgb(212,82,22)" fg:x="774" fg:w="1"/><text x="63.3821%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.1321%" y="117" width="0.0816%" height="15" fill="rgb(214,48,28)" fg:x="774" fg:w="1"/><text x="63.3821%" y="127.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.57%)</title><rect x="62.7243%" y="421" width="0.5710%" height="15" fill="rgb(245,196,50)" fg:x="769" fg:w="7"/><text x="62.9743%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.57%)</title><rect x="62.7243%" y="405" width="0.5710%" height="15" fill="rgb(225,159,46)" fg:x="769" fg:w="7"/><text x="62.9743%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="62.8874%" y="389" width="0.4078%" height="15" fill="rgb(207,195,48)" fg:x="771" fg:w="5"/><text x="63.1374%" y="399.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="62.8874%" y="373" width="0.4078%" height="15" fill="rgb(240,73,3)" fg:x="771" fg:w="5"/><text x="63.1374%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="62.8874%" y="357" width="0.4078%" height="15" fill="rgb(245,57,23)" fg:x="771" fg:w="5"/><text x="63.1374%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.2137%" y="341" width="0.0816%" height="15" fill="rgb(240,75,18)" fg:x="775" fg:w="1"/><text x="63.4637%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2137%" y="325" width="0.0816%" height="15" fill="rgb(238,168,12)" fg:x="775" fg:w="1"/><text x="63.4637%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.2137%" y="309" width="0.0816%" height="15" fill="rgb(226,20,40)" fg:x="775" fg:w="1"/><text x="63.4637%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2137%" y="293" width="0.0816%" height="15" fill="rgb(224,130,35)" fg:x="775" fg:w="1"/><text x="63.4637%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.2137%" y="277" width="0.0816%" height="15" fill="rgb(225,63,41)" fg:x="775" fg:w="1"/><text x="63.4637%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2137%" y="261" width="0.0816%" height="15" fill="rgb(219,3,3)" fg:x="775" fg:w="1"/><text x="63.4637%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.2137%" y="245" width="0.0816%" height="15" fill="rgb(218,157,4)" fg:x="775" fg:w="1"/><text x="63.4637%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2137%" y="229" width="0.0816%" height="15" fill="rgb(232,76,36)" fg:x="775" fg:w="1"/><text x="63.4637%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="63.2953%" y="421" width="0.0816%" height="15" fill="rgb(247,36,0)" fg:x="776" fg:w="1"/><text x="63.5453%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="63.2953%" y="405" width="0.0816%" height="15" fill="rgb(205,2,34)" fg:x="776" fg:w="1"/><text x="63.5453%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.2953%" y="389" width="0.0816%" height="15" fill="rgb(239,136,13)" fg:x="776" fg:w="1"/><text x="63.5453%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2953%" y="373" width="0.0816%" height="15" fill="rgb(253,122,12)" fg:x="776" fg:w="1"/><text x="63.5453%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2953%" y="357" width="0.0816%" height="15" fill="rgb(222,174,7)" fg:x="776" fg:w="1"/><text x="63.5453%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2953%" y="341" width="0.0816%" height="15" fill="rgb(208,191,42)" fg:x="776" fg:w="1"/><text x="63.5453%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2953%" y="325" width="0.0816%" height="15" fill="rgb(237,212,15)" fg:x="776" fg:w="1"/><text x="63.5453%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2953%" y="309" width="0.0816%" height="15" fill="rgb(215,65,20)" fg:x="776" fg:w="1"/><text x="63.5453%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2953%" y="293" width="0.0816%" height="15" fill="rgb(232,103,11)" fg:x="776" fg:w="1"/><text x="63.5453%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.2953%" y="277" width="0.0816%" height="15" fill="rgb(235,148,18)" fg:x="776" fg:w="1"/><text x="63.5453%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.2953%" y="261" width="0.0816%" height="15" fill="rgb(240,173,7)" fg:x="776" fg:w="1"/><text x="63.5453%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.2953%" y="245" width="0.0816%" height="15" fill="rgb(228,182,25)" fg:x="776" fg:w="1"/><text x="63.5453%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2953%" y="229" width="0.0816%" height="15" fill="rgb(247,3,52)" fg:x="776" fg:w="1"/><text x="63.5453%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2953%" y="213" width="0.0816%" height="15" fill="rgb(226,155,8)" fg:x="776" fg:w="1"/><text x="63.5453%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.2953%" y="197" width="0.0816%" height="15" fill="rgb(243,195,38)" fg:x="776" fg:w="1"/><text x="63.5453%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.2953%" y="181" width="0.0816%" height="15" fill="rgb(254,181,33)" fg:x="776" fg:w="1"/><text x="63.5453%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.2953%" y="165" width="0.0816%" height="15" fill="rgb(232,98,23)" fg:x="776" fg:w="1"/><text x="63.5453%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.2953%" y="149" width="0.0816%" height="15" fill="rgb(205,23,10)" fg:x="776" fg:w="1"/><text x="63.5453%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.2953%" y="133" width="0.0816%" height="15" fill="rgb(212,124,38)" fg:x="776" fg:w="1"/><text x="63.5453%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.3768%" y="421" width="0.0816%" height="15" fill="rgb(228,207,2)" fg:x="777" fg:w="1"/><text x="63.6268%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.7031%" y="309" width="0.0816%" height="15" fill="rgb(215,120,22)" fg:x="781" fg:w="1"/><text x="63.9531%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="63.7031%" y="293" width="0.0816%" height="15" fill="rgb(251,172,33)" fg:x="781" fg:w="1"/><text x="63.9531%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.7031%" y="277" width="0.0816%" height="15" fill="rgb(250,83,2)" fg:x="781" fg:w="1"/><text x="63.9531%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7847%" y="261" width="0.0816%" height="15" fill="rgb(210,132,53)" fg:x="782" fg:w="1"/><text x="64.0347%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7847%" y="245" width="0.0816%" height="15" fill="rgb(221,208,36)" fg:x="782" fg:w="1"/><text x="64.0347%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7847%" y="229" width="0.0816%" height="15" fill="rgb(205,192,46)" fg:x="782" fg:w="1"/><text x="64.0347%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7847%" y="213" width="0.0816%" height="15" fill="rgb(223,163,14)" fg:x="782" fg:w="1"/><text x="64.0347%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.7847%" y="197" width="0.0816%" height="15" fill="rgb(218,41,28)" fg:x="782" fg:w="1"/><text x="64.0347%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7847%" y="181" width="0.0816%" height="15" fill="rgb(235,104,10)" fg:x="782" fg:w="1"/><text x="64.0347%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7847%" y="165" width="0.0816%" height="15" fill="rgb(246,17,4)" fg:x="782" fg:w="1"/><text x="64.0347%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.8662%" y="261" width="0.0816%" height="15" fill="rgb(240,7,16)" fg:x="783" fg:w="1"/><text x="64.1162%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.8662%" y="245" width="0.0816%" height="15" fill="rgb(213,160,23)" fg:x="783" fg:w="1"/><text x="64.1162%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.8662%" y="229" width="0.0816%" height="15" fill="rgb(251,179,49)" fg:x="783" fg:w="1"/><text x="64.1162%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.8662%" y="213" width="0.0816%" height="15" fill="rgb(247,198,10)" fg:x="783" fg:w="1"/><text x="64.1162%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.8662%" y="197" width="0.0816%" height="15" fill="rgb(220,65,29)" fg:x="783" fg:w="1"/><text x="64.1162%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="63.8662%" y="181" width="0.0816%" height="15" fill="rgb(237,171,28)" fg:x="783" fg:w="1"/><text x="64.1162%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="63.7847%" y="293" width="0.2447%" height="15" fill="rgb(228,44,26)" fg:x="782" fg:w="3"/><text x="64.0347%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.7847%" y="277" width="0.2447%" height="15" fill="rgb(216,210,27)" fg:x="782" fg:w="3"/><text x="64.0347%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9478%" y="261" width="0.0816%" height="15" fill="rgb(252,10,17)" fg:x="784" fg:w="1"/><text x="64.1978%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9478%" y="245" width="0.0816%" height="15" fill="rgb(214,172,30)" fg:x="784" fg:w="1"/><text x="64.1978%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0294%" y="245" width="0.0816%" height="15" fill="rgb(253,130,48)" fg:x="785" fg:w="1"/><text x="64.2794%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="64.0294%" y="293" width="0.1631%" height="15" fill="rgb(226,99,43)" fg:x="785" fg:w="2"/><text x="64.2794%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="64.0294%" y="277" width="0.1631%" height="15" fill="rgb(239,111,26)" fg:x="785" fg:w="2"/><text x="64.2794%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="64.0294%" y="261" width="0.1631%" height="15" fill="rgb(240,27,53)" fg:x="785" fg:w="2"/><text x="64.2794%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.1109%" y="245" width="0.0816%" height="15" fill="rgb(254,163,12)" fg:x="786" fg:w="1"/><text x="64.3609%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.1109%" y="229" width="0.0816%" height="15" fill="rgb(225,51,48)" fg:x="786" fg:w="1"/><text x="64.3609%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.1109%" y="213" width="0.0816%" height="15" fill="rgb(205,19,32)" fg:x="786" fg:w="1"/><text x="64.3609%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.1925%" y="277" width="0.0816%" height="15" fill="rgb(218,119,26)" fg:x="787" fg:w="1"/><text x="64.4425%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.2741%" y="261" width="0.1631%" height="15" fill="rgb(231,173,33)" fg:x="788" fg:w="2"/><text x="64.5241%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="64.4372%" y="245" width="0.1631%" height="15" fill="rgb(241,100,29)" fg:x="790" fg:w="2"/><text x="64.6872%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="64.4372%" y="229" width="0.1631%" height="15" fill="rgb(250,194,34)" fg:x="790" fg:w="2"/><text x="64.6872%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.5188%" y="213" width="0.0816%" height="15" fill="rgb(215,23,50)" fg:x="791" fg:w="1"/><text x="64.7688%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.5188%" y="197" width="0.0816%" height="15" fill="rgb(206,49,37)" fg:x="791" fg:w="1"/><text x="64.7688%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.5188%" y="181" width="0.0816%" height="15" fill="rgb(247,39,21)" fg:x="791" fg:w="1"/><text x="64.7688%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.06%)</title><rect x="63.7031%" y="341" width="1.0604%" height="15" fill="rgb(209,220,15)" fg:x="781" fg:w="13"/><text x="63.9531%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.06%)</title><rect x="63.7031%" y="325" width="1.0604%" height="15" fill="rgb(206,41,33)" fg:x="781" fg:w="13"/><text x="63.9531%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.98%)</title><rect x="63.7847%" y="309" width="0.9788%" height="15" fill="rgb(221,225,45)" fg:x="782" fg:w="12"/><text x="64.0347%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="64.1925%" y="293" width="0.5710%" height="15" fill="rgb(216,27,18)" fg:x="787" fg:w="7"/><text x="64.4425%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="64.2741%" y="277" width="0.4894%" height="15" fill="rgb(250,193,34)" fg:x="788" fg:w="6"/><text x="64.5241%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.33%)</title><rect x="64.4372%" y="261" width="0.3263%" height="15" fill="rgb(227,215,20)" fg:x="790" fg:w="4"/><text x="64.6872%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.6003%" y="245" width="0.1631%" height="15" fill="rgb(242,211,27)" fg:x="792" fg:w="2"/><text x="64.8503%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.6003%" y="229" width="0.1631%" height="15" fill="rgb(229,190,30)" fg:x="792" fg:w="2"/><text x="64.8503%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.6819%" y="213" width="0.0816%" height="15" fill="rgb(253,31,29)" fg:x="793" fg:w="1"/><text x="64.9319%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.6819%" y="197" width="0.0816%" height="15" fill="rgb(229,177,52)" fg:x="793" fg:w="1"/><text x="64.9319%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (16 samples, 1.31%)</title><rect x="63.5400%" y="405" width="1.3051%" height="15" fill="rgb(226,88,8)" fg:x="779" fg:w="16"/><text x="63.7900%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (15 samples, 1.22%)</title><rect x="63.6215%" y="389" width="1.2235%" height="15" fill="rgb(214,55,27)" fg:x="780" fg:w="15"/><text x="63.8715%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.22%)</title><rect x="63.6215%" y="373" width="1.2235%" height="15" fill="rgb(233,202,5)" fg:x="780" fg:w="15"/><text x="63.8715%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.22%)</title><rect x="63.6215%" y="357" width="1.2235%" height="15" fill="rgb(251,49,30)" fg:x="780" fg:w="15"/><text x="63.8715%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.7635%" y="341" width="0.0816%" height="15" fill="rgb(235,18,52)" fg:x="794" fg:w="1"/><text x="65.0135%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.7635%" y="325" width="0.0816%" height="15" fill="rgb(250,111,51)" fg:x="794" fg:w="1"/><text x="65.0135%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.7635%" y="309" width="0.0816%" height="15" fill="rgb(218,13,25)" fg:x="794" fg:w="1"/><text x="65.0135%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7635%" y="293" width="0.0816%" height="15" fill="rgb(248,96,7)" fg:x="794" fg:w="1"/><text x="65.0135%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.8450%" y="325" width="0.0816%" height="15" fill="rgb(217,31,15)" fg:x="795" fg:w="1"/><text x="65.0950%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8450%" y="309" width="0.0816%" height="15" fill="rgb(228,59,49)" fg:x="795" fg:w="1"/><text x="65.0950%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.41%)</title><rect x="64.9266%" y="261" width="0.4078%" height="15" fill="rgb(210,152,38)" fg:x="796" fg:w="5"/><text x="65.1766%" y="271.50"></text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="65.0082%" y="245" width="0.3263%" height="15" fill="rgb(206,71,11)" fg:x="797" fg:w="4"/><text x="65.2582%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3344%" y="197" width="0.0816%" height="15" fill="rgb(244,199,5)" fg:x="801" fg:w="1"/><text x="65.5844%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3344%" y="181" width="0.0816%" height="15" fill="rgb(253,49,1)" fg:x="801" fg:w="1"/><text x="65.5844%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (36 samples, 2.94%)</title><rect x="62.5612%" y="453" width="2.9364%" height="15" fill="rgb(225,206,40)" fg:x="767" fg:w="36"/><text x="62.8112%" y="463.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_persisted (35 samples, 2.85%)</title><rect x="62.6427%" y="437" width="2.8548%" height="15" fill="rgb(243,116,47)" fg:x="768" fg:w="35"/><text x="62.8927%" y="447.50">en..</text></g><g><title>kernel::model::deserialize_entity (25 samples, 2.04%)</title><rect x="63.4584%" y="421" width="2.0392%" height="15" fill="rgb(219,225,16)" fg:x="778" fg:w="25"/><text x="63.7084%" y="431.50">k..</text></g><g><title>serde_json::de::from_trait (8 samples, 0.65%)</title><rect x="64.8450%" y="405" width="0.6525%" height="15" fill="rgb(233,29,47)" fg:x="795" fg:w="8"/><text x="65.0950%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="64.8450%" y="389" width="0.6525%" height="15" fill="rgb(250,179,18)" fg:x="795" fg:w="8"/><text x="65.0950%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="64.8450%" y="373" width="0.6525%" height="15" fill="rgb(215,176,6)" fg:x="795" fg:w="8"/><text x="65.0950%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="64.8450%" y="357" width="0.6525%" height="15" fill="rgb(214,117,39)" fg:x="795" fg:w="8"/><text x="65.0950%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="64.8450%" y="341" width="0.6525%" height="15" fill="rgb(247,183,36)" fg:x="795" fg:w="8"/><text x="65.0950%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="64.9266%" y="325" width="0.5710%" height="15" fill="rgb(237,200,3)" fg:x="796" fg:w="7"/><text x="65.1766%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="64.9266%" y="309" width="0.5710%" height="15" fill="rgb(212,220,24)" fg:x="796" fg:w="7"/><text x="65.1766%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="64.9266%" y="293" width="0.5710%" height="15" fill="rgb(245,216,20)" fg:x="796" fg:w="7"/><text x="65.1766%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="64.9266%" y="277" width="0.5710%" height="15" fill="rgb(219,124,7)" fg:x="796" fg:w="7"/><text x="65.1766%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.3344%" y="261" width="0.1631%" height="15" fill="rgb(227,167,8)" fg:x="801" fg:w="2"/><text x="65.5844%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.3344%" y="245" width="0.1631%" height="15" fill="rgb(241,37,2)" fg:x="801" fg:w="2"/><text x="65.5844%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.3344%" y="229" width="0.1631%" height="15" fill="rgb(238,134,33)" fg:x="801" fg:w="2"/><text x="65.5844%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.3344%" y="213" width="0.1631%" height="15" fill="rgb(248,48,27)" fg:x="801" fg:w="2"/><text x="65.5844%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.4160%" y="197" width="0.0816%" height="15" fill="rgb(212,14,16)" fg:x="802" fg:w="1"/><text x="65.6660%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.4160%" y="181" width="0.0816%" height="15" fill="rgb(217,205,37)" fg:x="802" fg:w="1"/><text x="65.6660%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.4160%" y="165" width="0.0816%" height="15" fill="rgb(233,185,47)" fg:x="802" fg:w="1"/><text x="65.6660%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (39 samples, 3.18%)</title><rect x="62.4796%" y="469" width="3.1811%" height="15" fill="rgb(244,88,8)" fg:x="766" fg:w="39"/><text x="62.7296%" y="479.50">&lt;en..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="65.4976%" y="453" width="0.1631%" height="15" fill="rgb(213,0,20)" fg:x="803" fg:w="2"/><text x="65.7476%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="65.4976%" y="437" width="0.1631%" height="15" fill="rgb(238,159,36)" fg:x="803" fg:w="2"/><text x="65.7476%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="65.4976%" y="421" width="0.1631%" height="15" fill="rgb(253,173,17)" fg:x="803" fg:w="2"/><text x="65.7476%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="65.4976%" y="405" width="0.1631%" height="15" fill="rgb(221,23,28)" fg:x="803" fg:w="2"/><text x="65.7476%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="65.4976%" y="389" width="0.1631%" height="15" fill="rgb(218,113,15)" fg:x="803" fg:w="2"/><text x="65.7476%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="65.4976%" y="373" width="0.1631%" height="15" fill="rgb(233,58,3)" fg:x="803" fg:w="2"/><text x="65.7476%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="65.4976%" y="357" width="0.1631%" height="15" fill="rgb(250,46,35)" fg:x="803" fg:w="2"/><text x="65.7476%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.5791%" y="341" width="0.0816%" height="15" fill="rgb(210,169,11)" fg:x="804" fg:w="1"/><text x="65.8291%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.5791%" y="325" width="0.0816%" height="15" fill="rgb(246,88,19)" fg:x="804" fg:w="1"/><text x="65.8291%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="65.5791%" y="309" width="0.0816%" height="15" fill="rgb(206,81,49)" fg:x="804" fg:w="1"/><text x="65.8291%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.5791%" y="293" width="0.0816%" height="15" fill="rgb(232,144,18)" fg:x="804" fg:w="1"/><text x="65.8291%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.5791%" y="277" width="0.0816%" height="15" fill="rgb(235,2,27)" fg:x="804" fg:w="1"/><text x="65.8291%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.5791%" y="261" width="0.0816%" height="15" fill="rgb(239,157,39)" fg:x="804" fg:w="1"/><text x="65.8291%" y="271.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="65.5791%" y="245" width="0.0816%" height="15" fill="rgb(220,11,17)" fg:x="804" fg:w="1"/><text x="65.8291%" y="255.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="65.5791%" y="229" width="0.0816%" height="15" fill="rgb(243,94,50)" fg:x="804" fg:w="1"/><text x="65.8291%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.5791%" y="213" width="0.0816%" height="15" fill="rgb(218,22,0)" fg:x="804" fg:w="1"/><text x="65.8291%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.5791%" y="197" width="0.0816%" height="15" fill="rgb(249,70,21)" fg:x="804" fg:w="1"/><text x="65.8291%" y="207.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="65.5791%" y="181" width="0.0816%" height="15" fill="rgb(245,111,46)" fg:x="804" fg:w="1"/><text x="65.8291%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="65.5791%" y="165" width="0.0816%" height="15" fill="rgb(244,183,12)" fg:x="804" fg:w="1"/><text x="65.8291%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="65.5791%" y="149" width="0.0816%" height="15" fill="rgb(207,117,0)" fg:x="804" fg:w="1"/><text x="65.8291%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="65.5791%" y="133" width="0.0816%" height="15" fill="rgb(206,20,43)" fg:x="804" fg:w="1"/><text x="65.8291%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.5791%" y="117" width="0.0816%" height="15" fill="rgb(221,104,11)" fg:x="804" fg:w="1"/><text x="65.8291%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.5791%" y="101" width="0.0816%" height="15" fill="rgb(254,36,50)" fg:x="804" fg:w="1"/><text x="65.8291%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="65.5791%" y="85" width="0.0816%" height="15" fill="rgb(252,17,15)" fg:x="804" fg:w="1"/><text x="65.8291%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="65.5791%" y="69" width="0.0816%" height="15" fill="rgb(219,129,43)" fg:x="804" fg:w="1"/><text x="65.8291%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="65.5791%" y="53" width="0.0816%" height="15" fill="rgb(205,34,45)" fg:x="804" fg:w="1"/><text x="65.8291%" y="63.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="65.5791%" y="37" width="0.0816%" height="15" fill="rgb(251,201,32)" fg:x="804" fg:w="1"/><text x="65.8291%" y="47.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.8238%" y="437" width="0.0816%" height="15" fill="rgb(205,56,0)" fg:x="807" fg:w="1"/><text x="66.0738%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9869%" y="405" width="0.0816%" height="15" fill="rgb(211,193,27)" fg:x="809" fg:w="1"/><text x="66.2369%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.9869%" y="389" width="0.0816%" height="15" fill="rgb(231,100,42)" fg:x="809" fg:w="1"/><text x="66.2369%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.9869%" y="373" width="0.0816%" height="15" fill="rgb(245,85,27)" fg:x="809" fg:w="1"/><text x="66.2369%" y="383.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (6 samples, 0.49%)</title><rect x="65.6607%" y="469" width="0.4894%" height="15" fill="rgb(241,76,24)" fg:x="805" fg:w="6"/><text x="65.9107%" y="479.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.41%)</title><rect x="65.7423%" y="453" width="0.4078%" height="15" fill="rgb(249,157,15)" fg:x="806" fg:w="5"/><text x="65.9923%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="65.9054%" y="437" width="0.2447%" height="15" fill="rgb(222,218,25)" fg:x="808" fg:w="3"/><text x="66.1554%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="65.9054%" y="421" width="0.2447%" height="15" fill="rgb(252,156,52)" fg:x="808" fg:w="3"/><text x="66.1554%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.0685%" y="405" width="0.0816%" height="15" fill="rgb(211,185,7)" fg:x="810" fg:w="1"/><text x="66.3185%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.0685%" y="389" width="0.0816%" height="15" fill="rgb(234,108,24)" fg:x="810" fg:w="1"/><text x="66.3185%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="66.1501%" y="469" width="0.1631%" height="15" fill="rgb(227,218,2)" fg:x="811" fg:w="2"/><text x="66.4001%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="66.1501%" y="453" width="0.1631%" height="15" fill="rgb(224,0,36)" fg:x="811" fg:w="2"/><text x="66.4001%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (143 samples, 11.66%)</title><rect x="54.8124%" y="517" width="11.6639%" height="15" fill="rgb(233,201,10)" fg:x="672" fg:w="143"/><text x="55.0624%" y="527.50">&lt;plugins_core::ca..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (143 samples, 11.66%)</title><rect x="54.8124%" y="501" width="11.6639%" height="15" fill="rgb(252,209,14)" fg:x="672" fg:w="143"/><text x="55.0624%" y="511.50">&lt;engine::perform:..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (49 samples, 4.00%)</title><rect x="62.4796%" y="485" width="3.9967%" height="15" fill="rgb(205,93,49)" fg:x="766" fg:w="49"/><text x="62.7296%" y="495.50">engi..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="66.3132%" y="469" width="0.1631%" height="15" fill="rgb(234,116,45)" fg:x="813" fg:w="2"/><text x="66.5632%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="66.3132%" y="453" width="0.1631%" height="15" fill="rgb(248,89,35)" fg:x="813" fg:w="2"/><text x="66.5632%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="66.3132%" y="437" width="0.1631%" height="15" fill="rgb(233,167,45)" fg:x="813" fg:w="2"/><text x="66.5632%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="66.3132%" y="421" width="0.1631%" height="15" fill="rgb(248,228,14)" fg:x="813" fg:w="2"/><text x="66.5632%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="66.3132%" y="405" width="0.1631%" height="15" fill="rgb(246,91,14)" fg:x="813" fg:w="2"/><text x="66.5632%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.3132%" y="389" width="0.1631%" height="15" fill="rgb(227,142,5)" fg:x="813" fg:w="2"/><text x="66.5632%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.3132%" y="373" width="0.1631%" height="15" fill="rgb(221,63,33)" fg:x="813" fg:w="2"/><text x="66.5632%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="66.3132%" y="357" width="0.1631%" height="15" fill="rgb(233,49,0)" fg:x="813" fg:w="2"/><text x="66.5632%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.3132%" y="341" width="0.1631%" height="15" fill="rgb(251,115,38)" fg:x="813" fg:w="2"/><text x="66.5632%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.3132%" y="325" width="0.1631%" height="15" fill="rgb(231,214,32)" fg:x="813" fg:w="2"/><text x="66.5632%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.3948%" y="309" width="0.0816%" height="15" fill="rgb(248,73,46)" fg:x="814" fg:w="1"/><text x="66.6448%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="66.3948%" y="293" width="0.0816%" height="15" fill="rgb(237,156,4)" fg:x="814" fg:w="1"/><text x="66.6448%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.3948%" y="277" width="0.0816%" height="15" fill="rgb(227,132,2)" fg:x="814" fg:w="1"/><text x="66.6448%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.3948%" y="261" width="0.0816%" height="15" fill="rgb(248,161,9)" fg:x="814" fg:w="1"/><text x="66.6448%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.3948%" y="245" width="0.0816%" height="15" fill="rgb(238,77,38)" fg:x="814" fg:w="1"/><text x="66.6448%" y="255.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="66.3948%" y="229" width="0.0816%" height="15" fill="rgb(222,166,40)" fg:x="814" fg:w="1"/><text x="66.6448%" y="239.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="66.3948%" y="213" width="0.0816%" height="15" fill="rgb(214,168,45)" fg:x="814" fg:w="1"/><text x="66.6448%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3948%" y="197" width="0.0816%" height="15" fill="rgb(226,64,37)" fg:x="814" fg:w="1"/><text x="66.6448%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3948%" y="181" width="0.0816%" height="15" fill="rgb(232,210,43)" fg:x="814" fg:w="1"/><text x="66.6448%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.3948%" y="165" width="0.0816%" height="15" fill="rgb(214,76,33)" fg:x="814" fg:w="1"/><text x="66.6448%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.3948%" y="149" width="0.0816%" height="15" fill="rgb(210,78,5)" fg:x="814" fg:w="1"/><text x="66.6448%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.3948%" y="133" width="0.0816%" height="15" fill="rgb(211,107,37)" fg:x="814" fg:w="1"/><text x="66.6448%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.3948%" y="117" width="0.0816%" height="15" fill="rgb(249,67,16)" fg:x="814" fg:w="1"/><text x="66.6448%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.3948%" y="101" width="0.0816%" height="15" fill="rgb(222,114,31)" fg:x="814" fg:w="1"/><text x="66.6448%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.3948%" y="85" width="0.0816%" height="15" fill="rgb(242,118,19)" fg:x="814" fg:w="1"/><text x="66.6448%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.3948%" y="69" width="0.0816%" height="15" fill="rgb(223,115,1)" fg:x="814" fg:w="1"/><text x="66.6448%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.3948%" y="53" width="0.0816%" height="15" fill="rgb(241,182,54)" fg:x="814" fg:w="1"/><text x="66.6448%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.3948%" y="37" width="0.0816%" height="15" fill="rgb(244,166,36)" fg:x="814" fg:w="1"/><text x="66.6448%" y="47.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="66.6395%" y="485" width="0.0816%" height="15" fill="rgb(241,52,43)" fg:x="817" fg:w="1"/><text x="66.8895%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="66.6395%" y="469" width="0.0816%" height="15" fill="rgb(236,82,9)" fg:x="817" fg:w="1"/><text x="66.8895%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (150 samples, 12.23%)</title><rect x="54.5677%" y="533" width="12.2349%" height="15" fill="rgb(241,119,0)" fg:x="669" fg:w="150"/><text x="54.8177%" y="543.50">&lt;core::iter::adapt..</text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Evaluator&gt;::evaluate (4 samples, 0.33%)</title><rect x="66.4763%" y="517" width="0.3263%" height="15" fill="rgb(221,19,22)" fg:x="815" fg:w="4"/><text x="66.7263%" y="527.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.33%)</title><rect x="66.4763%" y="501" width="0.3263%" height="15" fill="rgb(254,144,35)" fg:x="815" fg:w="4"/><text x="66.7263%" y="511.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="66.7210%" y="485" width="0.0816%" height="15" fill="rgb(246,132,30)" fg:x="818" fg:w="1"/><text x="66.9710%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (153 samples, 12.48%)</title><rect x="54.5677%" y="581" width="12.4796%" height="15" fill="rgb(234,69,28)" fg:x="669" fg:w="153"/><text x="54.8177%" y="591.50">&lt;kernel::plugins::S..</text></g><g><title>core::iter::adapters::try_process (153 samples, 12.48%)</title><rect x="54.5677%" y="565" width="12.4796%" height="15" fill="rgb(219,106,47)" fg:x="669" fg:w="153"/><text x="54.8177%" y="575.50">core::iter::adapter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (153 samples, 12.48%)</title><rect x="54.5677%" y="549" width="12.4796%" height="15" fill="rgb(218,79,24)" fg:x="669" fg:w="153"/><text x="54.8177%" y="559.50">&lt;alloc::vec::Vec&lt;T&gt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="66.8026%" y="533" width="0.2447%" height="15" fill="rgb(225,26,21)" fg:x="819" fg:w="3"/><text x="67.0526%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="66.8026%" y="517" width="0.2447%" height="15" fill="rgb(217,68,49)" fg:x="819" fg:w="3"/><text x="67.0526%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="66.8842%" y="501" width="0.1631%" height="15" fill="rgb(220,204,28)" fg:x="820" fg:w="2"/><text x="67.1342%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0473%" y="581" width="0.0816%" height="15" fill="rgb(237,208,43)" fg:x="822" fg:w="1"/><text x="67.2973%" y="591.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (159 samples, 12.97%)</title><rect x="54.4046%" y="613" width="12.9690%" height="15" fill="rgb(213,97,42)" fg:x="667" fg:w="159"/><text x="54.6546%" y="623.50">engine::session::Se..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (158 samples, 12.89%)</title><rect x="54.4861%" y="597" width="12.8874%" height="15" fill="rgb(238,96,52)" fg:x="668" fg:w="158"/><text x="54.7361%" y="607.50">engine::perform::St..</text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="67.1289%" y="581" width="0.2447%" height="15" fill="rgb(228,14,13)" fg:x="823" fg:w="3"/><text x="67.3789%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="67.1289%" y="565" width="0.2447%" height="15" fill="rgb(219,123,13)" fg:x="823" fg:w="3"/><text x="67.3789%" y="575.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="67.1289%" y="549" width="0.2447%" height="15" fill="rgb(216,144,17)" fg:x="823" fg:w="3"/><text x="67.3789%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="67.1289%" y="533" width="0.2447%" height="15" fill="rgb(230,228,29)" fg:x="823" fg:w="3"/><text x="67.3789%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="67.1289%" y="517" width="0.2447%" height="15" fill="rgb(233,18,5)" fg:x="823" fg:w="3"/><text x="67.3789%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="67.1289%" y="501" width="0.2447%" height="15" fill="rgb(233,197,12)" fg:x="823" fg:w="3"/><text x="67.3789%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="67.2104%" y="485" width="0.1631%" height="15" fill="rgb(234,140,29)" fg:x="824" fg:w="2"/><text x="67.4604%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="67.2104%" y="469" width="0.1631%" height="15" fill="rgb(233,113,19)" fg:x="824" fg:w="2"/><text x="67.4604%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="67.2104%" y="453" width="0.1631%" height="15" fill="rgb(246,209,13)" fg:x="824" fg:w="2"/><text x="67.4604%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="67.2104%" y="437" width="0.1631%" height="15" fill="rgb(242,79,54)" fg:x="824" fg:w="2"/><text x="67.4604%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.2920%" y="421" width="0.0816%" height="15" fill="rgb(219,73,16)" fg:x="825" fg:w="1"/><text x="67.5420%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.2920%" y="405" width="0.0816%" height="15" fill="rgb(224,52,10)" fg:x="825" fg:w="1"/><text x="67.5420%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="67.2920%" y="389" width="0.0816%" height="15" fill="rgb(237,179,5)" fg:x="825" fg:w="1"/><text x="67.5420%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="67.2920%" y="373" width="0.0816%" height="15" fill="rgb(231,20,6)" fg:x="825" fg:w="1"/><text x="67.5420%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="67.2920%" y="357" width="0.0816%" height="15" fill="rgb(253,171,45)" fg:x="825" fg:w="1"/><text x="67.5420%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="67.2920%" y="341" width="0.0816%" height="15" fill="rgb(230,75,49)" fg:x="825" fg:w="1"/><text x="67.5420%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.2920%" y="325" width="0.0816%" height="15" fill="rgb(216,83,46)" fg:x="825" fg:w="1"/><text x="67.5420%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (827 samples, 67.46%)</title><rect x="0.0000%" y="661" width="67.4551%" height="15" fill="rgb(236,56,9)" fg:x="0" fg:w="827"/><text x="0.2500%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (827 samples, 67.46%)</title><rect x="0.0000%" y="645" width="67.4551%" height="15" fill="rgb(215,28,34)" fg:x="0" fg:w="827"/><text x="0.2500%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (827 samples, 67.46%)</title><rect x="0.0000%" y="629" width="67.4551%" height="15" fill="rgb(230,222,20)" fg:x="0" fg:w="827"/><text x="0.2500%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="67.3736%" y="613" width="0.0816%" height="15" fill="rgb(235,209,51)" fg:x="826" fg:w="1"/><text x="67.6236%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="67.3736%" y="597" width="0.0816%" height="15" fill="rgb(235,167,1)" fg:x="826" fg:w="1"/><text x="67.6236%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.3736%" y="581" width="0.0816%" height="15" fill="rgb(248,220,0)" fg:x="826" fg:w="1"/><text x="67.6236%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.3736%" y="565" width="0.0816%" height="15" fill="rgb(239,0,18)" fg:x="826" fg:w="1"/><text x="67.6236%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.4551%" y="597" width="0.1631%" height="15" fill="rgb(229,179,11)" fg:x="827" fg:w="2"/><text x="67.7051%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::perform::StandardPerformer&gt;&gt; (1 samples, 0.08%)</title><rect x="67.6183%" y="597" width="0.0816%" height="15" fill="rgb(226,116,53)" fg:x="829" fg:w="1"/><text x="67.8683%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6998%" y="485" width="0.0816%" height="15" fill="rgb(218,1,49)" fg:x="830" fg:w="1"/><text x="67.9498%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.7814%" y="485" width="0.0816%" height="15" fill="rgb(208,184,47)" fg:x="831" fg:w="1"/><text x="68.0314%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.9445%" y="453" width="0.1631%" height="15" fill="rgb(238,174,3)" fg:x="833" fg:w="2"/><text x="68.1945%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.0261%" y="437" width="0.0816%" height="15" fill="rgb(247,188,6)" fg:x="834" fg:w="1"/><text x="68.2761%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.1077%" y="437" width="0.0816%" height="15" fill="rgb(211,165,46)" fg:x="835" fg:w="1"/><text x="68.3577%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.1892%" y="437" width="0.0816%" height="15" fill="rgb(222,190,10)" fg:x="836" fg:w="1"/><text x="68.4392%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.1892%" y="421" width="0.0816%" height="15" fill="rgb(206,185,3)" fg:x="836" fg:w="1"/><text x="68.4392%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.90%)</title><rect x="67.4551%" y="613" width="0.8972%" height="15" fill="rgb(244,125,37)" fg:x="827" fg:w="11"/><text x="67.7051%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (8 samples, 0.65%)</title><rect x="67.6998%" y="597" width="0.6525%" height="15" fill="rgb(211,43,7)" fg:x="830" fg:w="8"/><text x="67.9498%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="67.6998%" y="581" width="0.6525%" height="15" fill="rgb(250,41,42)" fg:x="830" fg:w="8"/><text x="67.9498%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (8 samples, 0.65%)</title><rect x="67.6998%" y="565" width="0.6525%" height="15" fill="rgb(254,54,42)" fg:x="830" fg:w="8"/><text x="67.9498%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="67.6998%" y="549" width="0.6525%" height="15" fill="rgb(213,71,43)" fg:x="830" fg:w="8"/><text x="67.9498%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="67.6998%" y="533" width="0.6525%" height="15" fill="rgb(249,3,44)" fg:x="830" fg:w="8"/><text x="67.9498%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (8 samples, 0.65%)</title><rect x="67.6998%" y="517" width="0.6525%" height="15" fill="rgb(229,80,41)" fg:x="830" fg:w="8"/><text x="67.9498%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="67.6998%" y="501" width="0.6525%" height="15" fill="rgb(231,25,28)" fg:x="830" fg:w="8"/><text x="67.9498%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="67.8630%" y="485" width="0.4894%" height="15" fill="rgb(208,79,48)" fg:x="832" fg:w="6"/><text x="68.1130%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="67.9445%" y="469" width="0.4078%" height="15" fill="rgb(207,196,38)" fg:x="833" fg:w="5"/><text x="68.1945%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="68.1077%" y="453" width="0.2447%" height="15" fill="rgb(228,105,49)" fg:x="835" fg:w="3"/><text x="68.3577%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.2708%" y="437" width="0.0816%" height="15" fill="rgb(237,99,15)" fg:x="837" fg:w="1"/><text x="68.5208%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.4339%" y="501" width="0.0816%" height="15" fill="rgb(224,207,46)" fg:x="839" fg:w="1"/><text x="68.6839%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.4339%" y="485" width="0.0816%" height="15" fill="rgb(249,117,50)" fg:x="839" fg:w="1"/><text x="68.6839%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.4339%" y="469" width="0.0816%" height="15" fill="rgb(248,17,13)" fg:x="839" fg:w="1"/><text x="68.6839%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.4339%" y="453" width="0.0816%" height="15" fill="rgb(228,187,36)" fg:x="839" fg:w="1"/><text x="68.6839%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4339%" y="437" width="0.0816%" height="15" fill="rgb(234,132,20)" fg:x="839" fg:w="1"/><text x="68.6839%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.4339%" y="421" width="0.0816%" height="15" fill="rgb(209,170,46)" fg:x="839" fg:w="1"/><text x="68.6839%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4339%" y="405" width="0.0816%" height="15" fill="rgb(237,23,19)" fg:x="839" fg:w="1"/><text x="68.6839%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.4339%" y="389" width="0.0816%" height="15" fill="rgb(227,21,26)" fg:x="839" fg:w="1"/><text x="68.6839%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4339%" y="373" width="0.0816%" height="15" fill="rgb(222,220,48)" fg:x="839" fg:w="1"/><text x="68.6839%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.4339%" y="357" width="0.0816%" height="15" fill="rgb(214,9,16)" fg:x="839" fg:w="1"/><text x="68.6839%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4339%" y="341" width="0.0816%" height="15" fill="rgb(209,73,30)" fg:x="839" fg:w="1"/><text x="68.6839%" y="351.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="68.4339%" y="325" width="0.0816%" height="15" fill="rgb(207,20,33)" fg:x="839" fg:w="1"/><text x="68.6839%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.5971%" y="453" width="0.0816%" height="15" fill="rgb(219,153,12)" fg:x="841" fg:w="1"/><text x="68.8471%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.5971%" y="437" width="0.0816%" height="15" fill="rgb(235,97,25)" fg:x="841" fg:w="1"/><text x="68.8471%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.5971%" y="421" width="0.0816%" height="15" fill="rgb(244,30,34)" fg:x="841" fg:w="1"/><text x="68.8471%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.5971%" y="405" width="0.0816%" height="15" fill="rgb(214,106,45)" fg:x="841" fg:w="1"/><text x="68.8471%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.5971%" y="389" width="0.0816%" height="15" fill="rgb(226,41,9)" fg:x="841" fg:w="1"/><text x="68.8471%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.5971%" y="373" width="0.0816%" height="15" fill="rgb(253,139,29)" fg:x="841" fg:w="1"/><text x="68.8471%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.5971%" y="357" width="0.0816%" height="15" fill="rgb(213,205,39)" fg:x="841" fg:w="1"/><text x="68.8471%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.5971%" y="341" width="0.0816%" height="15" fill="rgb(209,27,10)" fg:x="841" fg:w="1"/><text x="68.8471%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.5971%" y="325" width="0.0816%" height="15" fill="rgb(249,142,16)" fg:x="841" fg:w="1"/><text x="68.8471%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.5971%" y="309" width="0.0816%" height="15" fill="rgb(242,65,12)" fg:x="841" fg:w="1"/><text x="68.8471%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.5971%" y="293" width="0.0816%" height="15" fill="rgb(232,48,10)" fg:x="841" fg:w="1"/><text x="68.8471%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.5971%" y="277" width="0.0816%" height="15" fill="rgb(253,67,19)" fg:x="841" fg:w="1"/><text x="68.8471%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.5971%" y="261" width="0.0816%" height="15" fill="rgb(227,93,29)" fg:x="841" fg:w="1"/><text x="68.8471%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5971%" y="245" width="0.0816%" height="15" fill="rgb(226,189,53)" fg:x="841" fg:w="1"/><text x="68.8471%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.41%)</title><rect x="68.3524%" y="533" width="0.4078%" height="15" fill="rgb(223,224,1)" fg:x="838" fg:w="5"/><text x="68.6024%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.33%)</title><rect x="68.4339%" y="517" width="0.3263%" height="15" fill="rgb(221,84,32)" fg:x="839" fg:w="4"/><text x="68.6839%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="68.5155%" y="501" width="0.2447%" height="15" fill="rgb(214,189,28)" fg:x="840" fg:w="3"/><text x="68.7655%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="68.5155%" y="485" width="0.2447%" height="15" fill="rgb(234,7,52)" fg:x="840" fg:w="3"/><text x="68.7655%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="68.5155%" y="469" width="0.2447%" height="15" fill="rgb(249,73,31)" fg:x="840" fg:w="3"/><text x="68.7655%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.6786%" y="453" width="0.0816%" height="15" fill="rgb(253,153,41)" fg:x="842" fg:w="1"/><text x="68.9286%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6786%" y="437" width="0.0816%" height="15" fill="rgb(249,52,34)" fg:x="842" fg:w="1"/><text x="68.9286%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.6786%" y="421" width="0.0816%" height="15" fill="rgb(236,177,47)" fg:x="842" fg:w="1"/><text x="68.9286%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6786%" y="405" width="0.0816%" height="15" fill="rgb(252,185,45)" fg:x="842" fg:w="1"/><text x="68.9286%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.6786%" y="389" width="0.0816%" height="15" fill="rgb(251,15,30)" fg:x="842" fg:w="1"/><text x="68.9286%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6786%" y="373" width="0.0816%" height="15" fill="rgb(233,31,4)" fg:x="842" fg:w="1"/><text x="68.9286%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.6786%" y="357" width="0.0816%" height="15" fill="rgb(254,44,24)" fg:x="842" fg:w="1"/><text x="68.9286%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6786%" y="341" width="0.0816%" height="15" fill="rgb(218,54,1)" fg:x="842" fg:w="1"/><text x="68.9286%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.7602%" y="517" width="0.0816%" height="15" fill="rgb(243,209,39)" fg:x="843" fg:w="1"/><text x="69.0102%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="68.7602%" y="533" width="0.2447%" height="15" fill="rgb(206,75,33)" fg:x="843" fg:w="3"/><text x="69.0102%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="68.8418%" y="517" width="0.1631%" height="15" fill="rgb(223,108,18)" fg:x="844" fg:w="2"/><text x="69.0918%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.8418%" y="501" width="0.1631%" height="15" fill="rgb(244,89,31)" fg:x="844" fg:w="2"/><text x="69.0918%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.8418%" y="485" width="0.1631%" height="15" fill="rgb(222,167,27)" fg:x="844" fg:w="2"/><text x="69.0918%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.8418%" y="469" width="0.1631%" height="15" fill="rgb(247,41,16)" fg:x="844" fg:w="2"/><text x="69.0918%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.8418%" y="453" width="0.1631%" height="15" fill="rgb(233,168,40)" fg:x="844" fg:w="2"/><text x="69.0918%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.8418%" y="437" width="0.1631%" height="15" fill="rgb(205,211,8)" fg:x="844" fg:w="2"/><text x="69.0918%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.8418%" y="421" width="0.1631%" height="15" fill="rgb(238,105,11)" fg:x="844" fg:w="2"/><text x="69.0918%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.8418%" y="405" width="0.1631%" height="15" fill="rgb(223,142,52)" fg:x="844" fg:w="2"/><text x="69.0918%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.8418%" y="389" width="0.1631%" height="15" fill="rgb(238,51,33)" fg:x="844" fg:w="2"/><text x="69.0918%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.8418%" y="373" width="0.1631%" height="15" fill="rgb(231,188,43)" fg:x="844" fg:w="2"/><text x="69.0918%" y="383.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="69.0049%" y="533" width="0.0816%" height="15" fill="rgb(216,92,17)" fg:x="846" fg:w="1"/><text x="69.2549%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.0049%" y="517" width="0.0816%" height="15" fill="rgb(228,2,40)" fg:x="846" fg:w="1"/><text x="69.2549%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.0049%" y="501" width="0.0816%" height="15" fill="rgb(226,73,15)" fg:x="846" fg:w="1"/><text x="69.2549%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="69.0049%" y="485" width="0.0816%" height="15" fill="rgb(227,66,46)" fg:x="846" fg:w="1"/><text x="69.2549%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.3312%" y="309" width="0.0816%" height="15" fill="rgb(209,71,6)" fg:x="850" fg:w="1"/><text x="69.5812%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.3312%" y="293" width="0.0816%" height="15" fill="rgb(246,100,25)" fg:x="850" fg:w="1"/><text x="69.5812%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.3312%" y="277" width="0.0816%" height="15" fill="rgb(248,185,27)" fg:x="850" fg:w="1"/><text x="69.5812%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.3312%" y="405" width="0.1631%" height="15" fill="rgb(225,118,47)" fg:x="850" fg:w="2"/><text x="69.5812%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.3312%" y="389" width="0.1631%" height="15" fill="rgb(220,185,44)" fg:x="850" fg:w="2"/><text x="69.5812%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.3312%" y="373" width="0.1631%" height="15" fill="rgb(227,95,24)" fg:x="850" fg:w="2"/><text x="69.5812%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.3312%" y="357" width="0.1631%" height="15" fill="rgb(252,84,24)" fg:x="850" fg:w="2"/><text x="69.5812%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.3312%" y="341" width="0.1631%" height="15" fill="rgb(240,34,44)" fg:x="850" fg:w="2"/><text x="69.5812%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.3312%" y="325" width="0.1631%" height="15" fill="rgb(209,72,54)" fg:x="850" fg:w="2"/><text x="69.5812%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.4127%" y="309" width="0.0816%" height="15" fill="rgb(226,19,45)" fg:x="851" fg:w="1"/><text x="69.6627%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.4943%" y="405" width="0.0816%" height="15" fill="rgb(246,7,45)" fg:x="852" fg:w="1"/><text x="69.7443%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.4943%" y="389" width="0.0816%" height="15" fill="rgb(225,45,2)" fg:x="852" fg:w="1"/><text x="69.7443%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.4943%" y="373" width="0.0816%" height="15" fill="rgb(221,80,29)" fg:x="852" fg:w="1"/><text x="69.7443%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.4943%" y="357" width="0.0816%" height="15" fill="rgb(228,11,19)" fg:x="852" fg:w="1"/><text x="69.7443%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.4943%" y="341" width="0.0816%" height="15" fill="rgb(243,17,21)" fg:x="852" fg:w="1"/><text x="69.7443%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="69.3312%" y="453" width="0.3263%" height="15" fill="rgb(243,88,8)" fg:x="850" fg:w="4"/><text x="69.5812%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="69.3312%" y="437" width="0.3263%" height="15" fill="rgb(214,17,9)" fg:x="850" fg:w="4"/><text x="69.5812%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.33%)</title><rect x="69.3312%" y="421" width="0.3263%" height="15" fill="rgb(232,169,15)" fg:x="850" fg:w="4"/><text x="69.5812%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.5759%" y="405" width="0.0816%" height="15" fill="rgb(232,86,53)" fg:x="853" fg:w="1"/><text x="69.8259%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5759%" y="389" width="0.0816%" height="15" fill="rgb(222,100,4)" fg:x="853" fg:w="1"/><text x="69.8259%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5759%" y="373" width="0.0816%" height="15" fill="rgb(253,151,38)" fg:x="853" fg:w="1"/><text x="69.8259%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.65%)</title><rect x="69.0865%" y="517" width="0.6525%" height="15" fill="rgb(238,215,29)" fg:x="847" fg:w="8"/><text x="69.3365%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.65%)</title><rect x="69.0865%" y="501" width="0.6525%" height="15" fill="rgb(205,128,53)" fg:x="847" fg:w="8"/><text x="69.3365%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="69.0865%" y="485" width="0.6525%" height="15" fill="rgb(248,183,14)" fg:x="847" fg:w="8"/><text x="69.3365%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="69.0865%" y="469" width="0.6525%" height="15" fill="rgb(244,172,35)" fg:x="847" fg:w="8"/><text x="69.3365%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.6574%" y="453" width="0.0816%" height="15" fill="rgb(234,93,19)" fg:x="854" fg:w="1"/><text x="69.9074%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.6574%" y="437" width="0.0816%" height="15" fill="rgb(227,109,7)" fg:x="854" fg:w="1"/><text x="69.9074%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.6574%" y="421" width="0.0816%" height="15" fill="rgb(233,136,54)" fg:x="854" fg:w="1"/><text x="69.9074%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6574%" y="405" width="0.0816%" height="15" fill="rgb(233,19,40)" fg:x="854" fg:w="1"/><text x="69.9074%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="69.7390%" y="421" width="0.0816%" height="15" fill="rgb(247,41,18)" fg:x="855" fg:w="1"/><text x="69.9890%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="69.7390%" y="437" width="0.1631%" height="15" fill="rgb(220,34,34)" fg:x="855" fg:w="2"/><text x="69.9890%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.8206%" y="421" width="0.0816%" height="15" fill="rgb(222,135,32)" fg:x="856" fg:w="1"/><text x="70.0706%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.9837%" y="373" width="0.0816%" height="15" fill="rgb(214,80,19)" fg:x="858" fg:w="1"/><text x="70.2337%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9837%" y="357" width="0.0816%" height="15" fill="rgb(234,54,46)" fg:x="858" fg:w="1"/><text x="70.2337%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (22 samples, 1.79%)</title><rect x="68.3524%" y="581" width="1.7945%" height="15" fill="rgb(251,48,23)" fg:x="838" fg:w="22"/><text x="68.6024%" y="591.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (22 samples, 1.79%)</title><rect x="68.3524%" y="565" width="1.7945%" height="15" fill="rgb(254,109,52)" fg:x="838" fg:w="22"/><text x="68.6024%" y="575.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (22 samples, 1.79%)</title><rect x="68.3524%" y="549" width="1.7945%" height="15" fill="rgb(240,186,19)" fg:x="838" fg:w="22"/><text x="68.6024%" y="559.50">e..</text></g><g><title>kernel::model::deserialize_entity (13 samples, 1.06%)</title><rect x="69.0865%" y="533" width="1.0604%" height="15" fill="rgb(246,187,17)" fg:x="847" fg:w="13"/><text x="69.3365%" y="543.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="69.7390%" y="517" width="0.4078%" height="15" fill="rgb(212,21,5)" fg:x="855" fg:w="5"/><text x="69.9890%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="69.7390%" y="501" width="0.4078%" height="15" fill="rgb(225,185,18)" fg:x="855" fg:w="5"/><text x="69.9890%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="69.7390%" y="485" width="0.4078%" height="15" fill="rgb(245,114,17)" fg:x="855" fg:w="5"/><text x="69.9890%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="69.7390%" y="469" width="0.4078%" height="15" fill="rgb(223,164,24)" fg:x="855" fg:w="5"/><text x="69.9890%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="69.7390%" y="453" width="0.4078%" height="15" fill="rgb(211,228,3)" fg:x="855" fg:w="5"/><text x="69.9890%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="69.9021%" y="437" width="0.2447%" height="15" fill="rgb(223,16,38)" fg:x="857" fg:w="3"/><text x="70.1521%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.9837%" y="421" width="0.1631%" height="15" fill="rgb(207,31,54)" fg:x="858" fg:w="2"/><text x="70.2337%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.9837%" y="405" width="0.1631%" height="15" fill="rgb(220,39,11)" fg:x="858" fg:w="2"/><text x="70.2337%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.9837%" y="389" width="0.1631%" height="15" fill="rgb(235,185,0)" fg:x="858" fg:w="2"/><text x="70.2337%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.0653%" y="373" width="0.0816%" height="15" fill="rgb(249,39,18)" fg:x="859" fg:w="1"/><text x="70.3153%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.0653%" y="357" width="0.0816%" height="15" fill="rgb(240,110,33)" fg:x="859" fg:w="1"/><text x="70.3153%" y="367.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="70.1468%" y="581" width="0.0816%" height="15" fill="rgb(210,92,42)" fg:x="860" fg:w="1"/><text x="70.3968%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="70.1468%" y="565" width="0.0816%" height="15" fill="rgb(218,215,28)" fg:x="860" fg:w="1"/><text x="70.3968%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.1468%" y="549" width="0.0816%" height="15" fill="rgb(238,215,36)" fg:x="860" fg:w="1"/><text x="70.3968%" y="559.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="70.3100%" y="549" width="0.0816%" height="15" fill="rgb(220,31,10)" fg:x="862" fg:w="1"/><text x="70.5600%" y="559.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="70.3915%" y="533" width="0.0816%" height="15" fill="rgb(212,93,14)" fg:x="863" fg:w="1"/><text x="70.6415%" y="543.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="70.4731%" y="533" width="0.2447%" height="15" fill="rgb(254,207,2)" fg:x="864" fg:w="3"/><text x="70.7231%" y="543.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="70.4731%" y="517" width="0.2447%" height="15" fill="rgb(205,57,44)" fg:x="864" fg:w="3"/><text x="70.7231%" y="527.50"></text></g><g><title>__strerror_r (1 samples, 0.08%)</title><rect x="70.6362%" y="501" width="0.0816%" height="15" fill="rgb(226,151,19)" fg:x="866" fg:w="1"/><text x="70.8862%" y="511.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="70.8809%" y="469" width="0.0816%" height="15" fill="rgb(230,72,30)" fg:x="869" fg:w="1"/><text x="71.1309%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (39 samples, 3.18%)</title><rect x="68.3524%" y="613" width="3.1811%" height="15" fill="rgb(244,0,8)" fg:x="838" fg:w="39"/><text x="68.6024%" y="623.50">&lt;en..</text></g><g><title>engine::session::Session::new (39 samples, 3.18%)</title><rect x="68.3524%" y="597" width="3.1811%" height="15" fill="rgb(230,192,6)" fg:x="838" fg:w="39"/><text x="68.6024%" y="607.50">eng..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (16 samples, 1.31%)</title><rect x="70.2284%" y="581" width="1.3051%" height="15" fill="rgb(233,207,13)" fg:x="861" fg:w="16"/><text x="70.4784%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.22%)</title><rect x="70.3100%" y="565" width="1.2235%" height="15" fill="rgb(206,227,7)" fg:x="862" fg:w="15"/><text x="70.5600%" y="575.50"></text></g><g><title>libloading::os::unix::Library::open (14 samples, 1.14%)</title><rect x="70.3915%" y="549" width="1.1419%" height="15" fill="rgb(213,217,25)" fg:x="863" fg:w="14"/><text x="70.6415%" y="559.50"></text></g><g><title>dlopen (10 samples, 0.82%)</title><rect x="70.7178%" y="533" width="0.8157%" height="15" fill="rgb(249,75,4)" fg:x="867" fg:w="10"/><text x="70.9678%" y="543.50"></text></g><g><title>_dl_catch_error (9 samples, 0.73%)</title><rect x="70.7993%" y="517" width="0.7341%" height="15" fill="rgb(225,114,18)" fg:x="868" fg:w="9"/><text x="71.0493%" y="527.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.73%)</title><rect x="70.7993%" y="501" width="0.7341%" height="15" fill="rgb(211,162,40)" fg:x="868" fg:w="9"/><text x="71.0493%" y="511.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.65%)</title><rect x="70.8809%" y="485" width="0.6525%" height="15" fill="rgb(206,49,29)" fg:x="869" fg:w="8"/><text x="71.1309%" y="495.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.57%)</title><rect x="70.9625%" y="469" width="0.5710%" height="15" fill="rgb(244,8,6)" fg:x="870" fg:w="7"/><text x="71.2125%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.6150%" y="597" width="0.0816%" height="15" fill="rgb(231,194,28)" fg:x="878" fg:w="1"/><text x="71.8650%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.6150%" y="581" width="0.0816%" height="15" fill="rgb(210,69,5)" fg:x="878" fg:w="1"/><text x="71.8650%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.6966%" y="565" width="0.0816%" height="15" fill="rgb(216,186,12)" fg:x="879" fg:w="1"/><text x="71.9466%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6966%" y="549" width="0.0816%" height="15" fill="rgb(238,61,15)" fg:x="879" fg:w="1"/><text x="71.9466%" y="559.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="71.7781%" y="565" width="0.0816%" height="15" fill="rgb(226,104,1)" fg:x="880" fg:w="1"/><text x="72.0281%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="71.7781%" y="549" width="0.0816%" height="15" fill="rgb(229,128,15)" fg:x="880" fg:w="1"/><text x="72.0281%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.7781%" y="533" width="0.0816%" height="15" fill="rgb(247,110,15)" fg:x="880" fg:w="1"/><text x="72.0281%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7781%" y="517" width="0.0816%" height="15" fill="rgb(210,74,48)" fg:x="880" fg:w="1"/><text x="72.0281%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7781%" y="501" width="0.0816%" height="15" fill="rgb(246,121,10)" fg:x="880" fg:w="1"/><text x="72.0281%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7781%" y="485" width="0.0816%" height="15" fill="rgb(214,156,37)" fg:x="880" fg:w="1"/><text x="72.0281%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="71.8597%" y="501" width="0.2447%" height="15" fill="rgb(214,210,34)" fg:x="881" fg:w="3"/><text x="72.1097%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="71.8597%" y="517" width="0.5710%" height="15" fill="rgb(237,93,35)" fg:x="881" fg:w="7"/><text x="72.1097%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="72.1044%" y="501" width="0.3263%" height="15" fill="rgb(206,36,8)" fg:x="884" fg:w="4"/><text x="72.3544%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="72.2675%" y="485" width="0.1631%" height="15" fill="rgb(208,151,12)" fg:x="886" fg:w="2"/><text x="72.5175%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="72.2675%" y="469" width="0.1631%" height="15" fill="rgb(225,133,52)" fg:x="886" fg:w="2"/><text x="72.5175%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.4307%" y="501" width="0.1631%" height="15" fill="rgb(231,71,53)" fg:x="888" fg:w="2"/><text x="72.6807%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.5122%" y="485" width="0.0816%" height="15" fill="rgb(243,76,21)" fg:x="889" fg:w="1"/><text x="72.7622%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.5122%" y="469" width="0.0816%" height="15" fill="rgb(252,144,3)" fg:x="889" fg:w="1"/><text x="72.7622%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.5122%" y="453" width="0.0816%" height="15" fill="rgb(231,199,10)" fg:x="889" fg:w="1"/><text x="72.7622%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.5122%" y="437" width="0.0816%" height="15" fill="rgb(215,18,11)" fg:x="889" fg:w="1"/><text x="72.7622%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="72.5938%" y="485" width="0.0816%" height="15" fill="rgb(241,65,24)" fg:x="890" fg:w="1"/><text x="72.8438%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.5938%" y="469" width="0.0816%" height="15" fill="rgb(251,192,38)" fg:x="890" fg:w="1"/><text x="72.8438%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.5938%" y="453" width="0.0816%" height="15" fill="rgb(205,9,35)" fg:x="890" fg:w="1"/><text x="72.8438%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.6754%" y="485" width="0.1631%" height="15" fill="rgb(229,225,49)" fg:x="891" fg:w="2"/><text x="72.9254%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.7569%" y="469" width="0.0816%" height="15" fill="rgb(207,125,39)" fg:x="892" fg:w="1"/><text x="73.0069%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.7569%" y="453" width="0.0816%" height="15" fill="rgb(222,78,19)" fg:x="892" fg:w="1"/><text x="73.0069%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.7569%" y="437" width="0.0816%" height="15" fill="rgb(248,207,20)" fg:x="892" fg:w="1"/><text x="73.0069%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.8385%" y="469" width="0.0816%" height="15" fill="rgb(205,103,49)" fg:x="893" fg:w="1"/><text x="73.0885%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.8385%" y="453" width="0.0816%" height="15" fill="rgb(216,42,28)" fg:x="893" fg:w="1"/><text x="73.0885%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.0016%" y="453" width="0.0816%" height="15" fill="rgb(213,205,53)" fg:x="895" fg:w="1"/><text x="73.2516%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.0016%" y="437" width="0.0816%" height="15" fill="rgb(239,140,53)" fg:x="895" fg:w="1"/><text x="73.2516%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.0016%" y="421" width="0.0816%" height="15" fill="rgb(248,95,9)" fg:x="895" fg:w="1"/><text x="73.2516%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.0832%" y="437" width="0.0816%" height="15" fill="rgb(254,58,47)" fg:x="896" fg:w="1"/><text x="73.3332%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.0832%" y="421" width="0.0816%" height="15" fill="rgb(234,227,14)" fg:x="896" fg:w="1"/><text x="73.3332%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.0832%" y="405" width="0.0816%" height="15" fill="rgb(205,192,45)" fg:x="896" fg:w="1"/><text x="73.3332%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.0832%" y="389" width="0.0816%" height="15" fill="rgb(253,187,31)" fg:x="896" fg:w="1"/><text x="73.3332%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.1648%" y="437" width="0.0816%" height="15" fill="rgb(222,6,32)" fg:x="897" fg:w="1"/><text x="73.4148%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.1648%" y="421" width="0.0816%" height="15" fill="rgb(249,190,19)" fg:x="897" fg:w="1"/><text x="73.4148%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.1648%" y="405" width="0.0816%" height="15" fill="rgb(251,28,20)" fg:x="897" fg:w="1"/><text x="73.4148%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.1648%" y="389" width="0.0816%" height="15" fill="rgb(210,223,40)" fg:x="897" fg:w="1"/><text x="73.4148%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.1648%" y="373" width="0.0816%" height="15" fill="rgb(216,137,22)" fg:x="897" fg:w="1"/><text x="73.4148%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="73.0832%" y="453" width="0.2447%" height="15" fill="rgb(247,39,34)" fg:x="896" fg:w="3"/><text x="73.3332%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.2463%" y="437" width="0.0816%" height="15" fill="rgb(239,43,50)" fg:x="898" fg:w="1"/><text x="73.4963%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="72.8385%" y="485" width="0.5710%" height="15" fill="rgb(241,212,9)" fg:x="893" fg:w="7"/><text x="73.0885%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="72.9201%" y="469" width="0.4894%" height="15" fill="rgb(205,8,2)" fg:x="894" fg:w="6"/><text x="73.1701%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.3279%" y="453" width="0.0816%" height="15" fill="rgb(217,173,54)" fg:x="899" fg:w="1"/><text x="73.5779%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.3279%" y="437" width="0.0816%" height="15" fill="rgb(208,149,52)" fg:x="899" fg:w="1"/><text x="73.5779%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.3279%" y="421" width="0.0816%" height="15" fill="rgb(239,99,40)" fg:x="899" fg:w="1"/><text x="73.5779%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.90%)</title><rect x="72.5938%" y="501" width="0.8972%" height="15" fill="rgb(233,214,26)" fg:x="890" fg:w="11"/><text x="72.8438%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.4095%" y="485" width="0.0816%" height="15" fill="rgb(231,225,37)" fg:x="900" fg:w="1"/><text x="73.6595%" y="495.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="73.6542%" y="421" width="0.0816%" height="15" fill="rgb(252,55,35)" fg:x="903" fg:w="1"/><text x="73.9042%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.96%)</title><rect x="71.8597%" y="533" width="1.9576%" height="15" fill="rgb(239,43,18)" fg:x="881" fg:w="24"/><text x="72.1097%" y="543.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.39%)</title><rect x="72.4307%" y="517" width="1.3866%" height="15" fill="rgb(251,125,49)" fg:x="888" fg:w="17"/><text x="72.6807%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="73.4910%" y="501" width="0.3263%" height="15" fill="rgb(212,83,54)" fg:x="901" fg:w="4"/><text x="73.7410%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="73.5726%" y="485" width="0.2447%" height="15" fill="rgb(250,75,6)" fg:x="902" fg:w="3"/><text x="73.8226%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="73.5726%" y="469" width="0.2447%" height="15" fill="rgb(252,36,40)" fg:x="902" fg:w="3"/><text x="73.8226%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="73.6542%" y="453" width="0.1631%" height="15" fill="rgb(230,91,51)" fg:x="903" fg:w="2"/><text x="73.9042%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="73.6542%" y="437" width="0.1631%" height="15" fill="rgb(212,92,28)" fg:x="903" fg:w="2"/><text x="73.9042%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.7357%" y="421" width="0.0816%" height="15" fill="rgb(227,13,22)" fg:x="904" fg:w="1"/><text x="73.9857%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8173%" y="501" width="0.0816%" height="15" fill="rgb(239,204,32)" fg:x="905" fg:w="1"/><text x="74.0673%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8989%" y="485" width="0.0816%" height="15" fill="rgb(228,49,41)" fg:x="906" fg:w="1"/><text x="74.1489%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9804%" y="469" width="0.0816%" height="15" fill="rgb(206,95,6)" fg:x="907" fg:w="1"/><text x="74.2304%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.0620%" y="469" width="0.0816%" height="15" fill="rgb(251,20,14)" fg:x="908" fg:w="1"/><text x="74.3120%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0620%" y="453" width="0.0816%" height="15" fill="rgb(214,99,28)" fg:x="908" fg:w="1"/><text x="74.3120%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1436%" y="453" width="0.0816%" height="15" fill="rgb(239,122,54)" fg:x="909" fg:w="1"/><text x="74.3936%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="73.8173%" y="533" width="0.5710%" height="15" fill="rgb(218,217,46)" fg:x="905" fg:w="7"/><text x="74.0673%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="73.8173%" y="517" width="0.5710%" height="15" fill="rgb(249,106,28)" fg:x="905" fg:w="7"/><text x="74.0673%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="73.8989%" y="501" width="0.4894%" height="15" fill="rgb(250,158,18)" fg:x="906" fg:w="6"/><text x="74.1489%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="73.9804%" y="485" width="0.4078%" height="15" fill="rgb(226,137,29)" fg:x="907" fg:w="5"/><text x="74.2304%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.1436%" y="469" width="0.2447%" height="15" fill="rgb(210,188,1)" fg:x="909" fg:w="3"/><text x="74.3936%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.2251%" y="453" width="0.1631%" height="15" fill="rgb(227,84,42)" fg:x="910" fg:w="2"/><text x="74.4751%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.3067%" y="437" width="0.0816%" height="15" fill="rgb(222,147,48)" fg:x="911" fg:w="1"/><text x="74.5567%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.3067%" y="421" width="0.0816%" height="15" fill="rgb(241,150,43)" fg:x="911" fg:w="1"/><text x="74.5567%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="74.3883%" y="485" width="0.1631%" height="15" fill="rgb(206,139,52)" fg:x="912" fg:w="2"/><text x="74.6383%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.4698%" y="469" width="0.0816%" height="15" fill="rgb(230,63,14)" fg:x="913" fg:w="1"/><text x="74.7198%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="74.5514%" y="485" width="0.2447%" height="15" fill="rgb(247,8,20)" fg:x="914" fg:w="3"/><text x="74.8014%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="74.5514%" y="469" width="0.2447%" height="15" fill="rgb(213,115,4)" fg:x="914" fg:w="3"/><text x="74.8014%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.6330%" y="453" width="0.1631%" height="15" fill="rgb(241,79,49)" fg:x="915" fg:w="2"/><text x="74.8830%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7961%" y="437" width="0.0816%" height="15" fill="rgb(222,42,35)" fg:x="917" fg:w="1"/><text x="75.0461%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7961%" y="421" width="0.0816%" height="15" fill="rgb(247,59,23)" fg:x="917" fg:w="1"/><text x="75.0461%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7961%" y="405" width="0.0816%" height="15" fill="rgb(247,93,18)" fg:x="917" fg:w="1"/><text x="75.0461%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.8777%" y="437" width="0.0816%" height="15" fill="rgb(249,107,47)" fg:x="918" fg:w="1"/><text x="75.1277%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.8777%" y="421" width="0.0816%" height="15" fill="rgb(219,27,1)" fg:x="918" fg:w="1"/><text x="75.1277%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.8777%" y="405" width="0.0816%" height="15" fill="rgb(217,82,32)" fg:x="918" fg:w="1"/><text x="75.1277%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.8777%" y="389" width="0.0816%" height="15" fill="rgb(250,129,47)" fg:x="918" fg:w="1"/><text x="75.1277%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="74.7961%" y="453" width="0.4078%" height="15" fill="rgb(253,88,35)" fg:x="917" fg:w="5"/><text x="75.0461%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="74.9592%" y="437" width="0.2447%" height="15" fill="rgb(245,221,14)" fg:x="919" fg:w="3"/><text x="75.2092%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="74.9592%" y="421" width="0.2447%" height="15" fill="rgb(217,119,54)" fg:x="919" fg:w="3"/><text x="75.2092%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="74.9592%" y="405" width="0.2447%" height="15" fill="rgb(247,128,31)" fg:x="919" fg:w="3"/><text x="75.2092%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="75.0408%" y="389" width="0.1631%" height="15" fill="rgb(211,99,22)" fg:x="920" fg:w="2"/><text x="75.2908%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.0408%" y="373" width="0.1631%" height="15" fill="rgb(212,20,17)" fg:x="920" fg:w="2"/><text x="75.2908%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.1223%" y="357" width="0.0816%" height="15" fill="rgb(209,159,29)" fg:x="921" fg:w="1"/><text x="75.3723%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1223%" y="341" width="0.0816%" height="15" fill="rgb(222,177,53)" fg:x="921" fg:w="1"/><text x="75.3723%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.57%)</title><rect x="74.7961%" y="469" width="0.5710%" height="15" fill="rgb(234,46,43)" fg:x="917" fg:w="7"/><text x="75.0461%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="75.2039%" y="453" width="0.1631%" height="15" fill="rgb(208,108,14)" fg:x="922" fg:w="2"/><text x="75.4539%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2855%" y="437" width="0.0816%" height="15" fill="rgb(226,78,53)" fg:x="923" fg:w="1"/><text x="75.5355%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3670%" y="469" width="0.0816%" height="15" fill="rgb(230,20,41)" fg:x="924" fg:w="1"/><text x="75.6170%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (45 samples, 3.67%)</title><rect x="71.8597%" y="565" width="3.6705%" height="15" fill="rgb(213,195,35)" fg:x="881" fg:w="45"/><text x="72.1097%" y="575.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (45 samples, 3.67%)</title><rect x="71.8597%" y="549" width="3.6705%" height="15" fill="rgb(242,62,36)" fg:x="881" fg:w="45"/><text x="72.1097%" y="559.50">engi..</text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.14%)</title><rect x="74.3883%" y="533" width="1.1419%" height="15" fill="rgb(222,210,37)" fg:x="912" fg:w="14"/><text x="74.6383%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.14%)</title><rect x="74.3883%" y="517" width="1.1419%" height="15" fill="rgb(232,107,19)" fg:x="912" fg:w="14"/><text x="74.6383%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.14%)</title><rect x="74.3883%" y="501" width="1.1419%" height="15" fill="rgb(235,85,17)" fg:x="912" fg:w="14"/><text x="74.6383%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.73%)</title><rect x="74.7961%" y="485" width="0.7341%" height="15" fill="rgb(219,195,31)" fg:x="917" fg:w="9"/><text x="75.0461%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4486%" y="469" width="0.0816%" height="15" fill="rgb(231,183,30)" fg:x="925" fg:w="1"/><text x="75.6986%" y="479.50"></text></g><g><title>engine::session::Session::flush (48 samples, 3.92%)</title><rect x="71.6966%" y="597" width="3.9152%" height="15" fill="rgb(212,0,11)" fg:x="879" fg:w="48"/><text x="71.9466%" y="607.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (48 samples, 3.92%)</title><rect x="71.6966%" y="581" width="3.9152%" height="15" fill="rgb(249,53,54)" fg:x="879" fg:w="48"/><text x="71.9466%" y="591.50">engi..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="75.5302%" y="565" width="0.0816%" height="15" fill="rgb(211,118,13)" fg:x="926" fg:w="1"/><text x="75.7802%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="75.5302%" y="549" width="0.0816%" height="15" fill="rgb(237,42,9)" fg:x="926" fg:w="1"/><text x="75.7802%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="75.5302%" y="533" width="0.0816%" height="15" fill="rgb(227,68,32)" fg:x="926" fg:w="1"/><text x="75.7802%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="75.5302%" y="517" width="0.0816%" height="15" fill="rgb(238,10,7)" fg:x="926" fg:w="1"/><text x="75.7802%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="75.5302%" y="501" width="0.0816%" height="15" fill="rgb(224,42,12)" fg:x="926" fg:w="1"/><text x="75.7802%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.5302%" y="485" width="0.0816%" height="15" fill="rgb(252,190,5)" fg:x="926" fg:w="1"/><text x="75.7802%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.5302%" y="469" width="0.0816%" height="15" fill="rgb(220,214,39)" fg:x="926" fg:w="1"/><text x="75.7802%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="75.5302%" y="453" width="0.0816%" height="15" fill="rgb(247,98,4)" fg:x="926" fg:w="1"/><text x="75.7802%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.5302%" y="437" width="0.0816%" height="15" fill="rgb(211,60,12)" fg:x="926" fg:w="1"/><text x="75.7802%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.5302%" y="421" width="0.0816%" height="15" fill="rgb(224,42,10)" fg:x="926" fg:w="1"/><text x="75.7802%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.6933%" y="533" width="0.0816%" height="15" fill="rgb(217,167,4)" fg:x="928" fg:w="1"/><text x="75.9433%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.6933%" y="517" width="0.0816%" height="15" fill="rgb(253,18,17)" fg:x="928" fg:w="1"/><text x="75.9433%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.6933%" y="501" width="0.0816%" height="15" fill="rgb(249,186,44)" fg:x="928" fg:w="1"/><text x="75.9433%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6933%" y="485" width="0.0816%" height="15" fill="rgb(254,124,54)" fg:x="928" fg:w="1"/><text x="75.9433%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6933%" y="469" width="0.0816%" height="15" fill="rgb(220,124,39)" fg:x="928" fg:w="1"/><text x="75.9433%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6933%" y="453" width="0.0816%" height="15" fill="rgb(225,96,46)" fg:x="928" fg:w="1"/><text x="75.9433%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6933%" y="437" width="0.0816%" height="15" fill="rgb(221,106,12)" fg:x="928" fg:w="1"/><text x="75.9433%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="75.6117%" y="581" width="0.2447%" height="15" fill="rgb(227,133,23)" fg:x="927" fg:w="3"/><text x="75.8617%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="75.6117%" y="565" width="0.2447%" height="15" fill="rgb(216,44,52)" fg:x="927" fg:w="3"/><text x="75.8617%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="75.6117%" y="549" width="0.2447%" height="15" fill="rgb(239,149,7)" fg:x="927" fg:w="3"/><text x="75.8617%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="75.7749%" y="533" width="0.0816%" height="15" fill="rgb(211,157,31)" fg:x="929" fg:w="1"/><text x="76.0249%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="75.7749%" y="517" width="0.0816%" height="15" fill="rgb(206,215,22)" fg:x="929" fg:w="1"/><text x="76.0249%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.7749%" y="501" width="0.0816%" height="15" fill="rgb(208,113,15)" fg:x="929" fg:w="1"/><text x="76.0249%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.7749%" y="485" width="0.0816%" height="15" fill="rgb(207,189,15)" fg:x="929" fg:w="1"/><text x="76.0249%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.7749%" y="469" width="0.0816%" height="15" fill="rgb(231,115,4)" fg:x="929" fg:w="1"/><text x="76.0249%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.7749%" y="453" width="0.0816%" height="15" fill="rgb(253,117,2)" fg:x="929" fg:w="1"/><text x="76.0249%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.7749%" y="437" width="0.0816%" height="15" fill="rgb(248,48,24)" fg:x="929" fg:w="1"/><text x="76.0249%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.7749%" y="421" width="0.0816%" height="15" fill="rgb(241,28,46)" fg:x="929" fg:w="1"/><text x="76.0249%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.7749%" y="405" width="0.0816%" height="15" fill="rgb(216,165,52)" fg:x="929" fg:w="1"/><text x="76.0249%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.8564%" y="533" width="0.0816%" height="15" fill="rgb(220,222,34)" fg:x="930" fg:w="1"/><text x="76.1064%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.8564%" y="517" width="0.0816%" height="15" fill="rgb(247,222,49)" fg:x="930" fg:w="1"/><text x="76.1064%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.8564%" y="501" width="0.0816%" height="15" fill="rgb(240,10,31)" fg:x="930" fg:w="1"/><text x="76.1064%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.8564%" y="485" width="0.0816%" height="15" fill="rgb(221,199,35)" fg:x="930" fg:w="1"/><text x="76.1064%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.8564%" y="469" width="0.0816%" height="15" fill="rgb(230,223,11)" fg:x="930" fg:w="1"/><text x="76.1064%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.8564%" y="453" width="0.0816%" height="15" fill="rgb(218,82,45)" fg:x="930" fg:w="1"/><text x="76.1064%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.8564%" y="437" width="0.0816%" height="15" fill="rgb(233,213,33)" fg:x="930" fg:w="1"/><text x="76.1064%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.8564%" y="421" width="0.0816%" height="15" fill="rgb(210,143,52)" fg:x="930" fg:w="1"/><text x="76.1064%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.8564%" y="405" width="0.0816%" height="15" fill="rgb(206,95,4)" fg:x="930" fg:w="1"/><text x="76.1064%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8564%" y="389" width="0.0816%" height="15" fill="rgb(246,164,46)" fg:x="930" fg:w="1"/><text x="76.1064%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9380%" y="485" width="0.0816%" height="15" fill="rgb(213,210,47)" fg:x="931" fg:w="1"/><text x="76.1880%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9380%" y="469" width="0.0816%" height="15" fill="rgb(210,12,38)" fg:x="931" fg:w="1"/><text x="76.1880%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9380%" y="453" width="0.0816%" height="15" fill="rgb(252,192,54)" fg:x="931" fg:w="1"/><text x="76.1880%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9380%" y="437" width="0.0816%" height="15" fill="rgb(242,92,6)" fg:x="931" fg:w="1"/><text x="76.1880%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9380%" y="421" width="0.0816%" height="15" fill="rgb(253,154,15)" fg:x="931" fg:w="1"/><text x="76.1880%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9380%" y="405" width="0.0816%" height="15" fill="rgb(209,20,43)" fg:x="931" fg:w="1"/><text x="76.1880%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="75.8564%" y="565" width="0.2447%" height="15" fill="rgb(232,28,49)" fg:x="930" fg:w="3"/><text x="76.1064%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="75.8564%" y="549" width="0.2447%" height="15" fill="rgb(248,131,53)" fg:x="930" fg:w="3"/><text x="76.1064%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="75.9380%" y="533" width="0.1631%" height="15" fill="rgb(214,16,30)" fg:x="931" fg:w="2"/><text x="76.1880%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.9380%" y="517" width="0.1631%" height="15" fill="rgb(245,16,0)" fg:x="931" fg:w="2"/><text x="76.1880%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.9380%" y="501" width="0.1631%" height="15" fill="rgb(245,17,35)" fg:x="931" fg:w="2"/><text x="76.1880%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.0196%" y="485" width="0.0816%" height="15" fill="rgb(249,27,53)" fg:x="932" fg:w="1"/><text x="76.2696%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0196%" y="469" width="0.0816%" height="15" fill="rgb(214,73,24)" fg:x="932" fg:w="1"/><text x="76.2696%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.0196%" y="453" width="0.0816%" height="15" fill="rgb(223,84,37)" fg:x="932" fg:w="1"/><text x="76.2696%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0196%" y="437" width="0.0816%" height="15" fill="rgb(210,109,28)" fg:x="932" fg:w="1"/><text x="76.2696%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.0196%" y="421" width="0.0816%" height="15" fill="rgb(208,186,6)" fg:x="932" fg:w="1"/><text x="76.2696%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0196%" y="405" width="0.0816%" height="15" fill="rgb(235,201,30)" fg:x="932" fg:w="1"/><text x="76.2696%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.0196%" y="389" width="0.0816%" height="15" fill="rgb(216,198,48)" fg:x="932" fg:w="1"/><text x="76.2696%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0196%" y="373" width="0.0816%" height="15" fill="rgb(254,186,25)" fg:x="932" fg:w="1"/><text x="76.2696%" y="383.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1011%" y="549" width="0.0816%" height="15" fill="rgb(227,87,5)" fg:x="933" fg:w="1"/><text x="76.3511%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1011%" y="533" width="0.0816%" height="15" fill="rgb(236,205,25)" fg:x="933" fg:w="1"/><text x="76.3511%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1011%" y="517" width="0.0816%" height="15" fill="rgb(229,99,32)" fg:x="933" fg:w="1"/><text x="76.3511%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="76.1011%" y="565" width="0.1631%" height="15" fill="rgb(231,177,31)" fg:x="933" fg:w="2"/><text x="76.3511%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1827%" y="549" width="0.0816%" height="15" fill="rgb(246,15,2)" fg:x="934" fg:w="1"/><text x="76.4327%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1827%" y="533" width="0.0816%" height="15" fill="rgb(207,39,15)" fg:x="934" fg:w="1"/><text x="76.4327%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1827%" y="517" width="0.0816%" height="15" fill="rgb(207,44,9)" fg:x="934" fg:w="1"/><text x="76.4327%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1827%" y="501" width="0.0816%" height="15" fill="rgb(225,224,33)" fg:x="934" fg:w="1"/><text x="76.4327%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1827%" y="485" width="0.0816%" height="15" fill="rgb(252,151,3)" fg:x="934" fg:w="1"/><text x="76.4327%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1827%" y="469" width="0.0816%" height="15" fill="rgb(211,140,13)" fg:x="934" fg:w="1"/><text x="76.4327%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3458%" y="453" width="0.0816%" height="15" fill="rgb(239,225,17)" fg:x="936" fg:w="1"/><text x="76.5958%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3458%" y="437" width="0.0816%" height="15" fill="rgb(223,170,52)" fg:x="936" fg:w="1"/><text x="76.5958%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3458%" y="421" width="0.0816%" height="15" fill="rgb(212,64,21)" fg:x="936" fg:w="1"/><text x="76.5958%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3458%" y="405" width="0.0816%" height="15" fill="rgb(236,126,48)" fg:x="936" fg:w="1"/><text x="76.5958%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.3458%" y="517" width="0.1631%" height="15" fill="rgb(209,135,11)" fg:x="936" fg:w="2"/><text x="76.5958%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.3458%" y="501" width="0.1631%" height="15" fill="rgb(228,126,40)" fg:x="936" fg:w="2"/><text x="76.5958%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.3458%" y="485" width="0.1631%" height="15" fill="rgb(205,196,36)" fg:x="936" fg:w="2"/><text x="76.5958%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.3458%" y="469" width="0.1631%" height="15" fill="rgb(243,160,33)" fg:x="936" fg:w="2"/><text x="76.5958%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4274%" y="453" width="0.0816%" height="15" fill="rgb(210,84,20)" fg:x="937" fg:w="1"/><text x="76.6774%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5090%" y="469" width="0.0816%" height="15" fill="rgb(228,213,30)" fg:x="938" fg:w="1"/><text x="76.7590%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.5090%" y="453" width="0.0816%" height="15" fill="rgb(252,33,45)" fg:x="938" fg:w="1"/><text x="76.7590%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5090%" y="437" width="0.0816%" height="15" fill="rgb(254,227,20)" fg:x="938" fg:w="1"/><text x="76.7590%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5090%" y="421" width="0.0816%" height="15" fill="rgb(228,192,2)" fg:x="938" fg:w="1"/><text x="76.7590%" y="431.50"></text></g><g><title>plugins_core::build::Build::holding (13 samples, 1.06%)</title><rect x="75.6117%" y="597" width="1.0604%" height="15" fill="rgb(233,32,8)" fg:x="927" fg:w="13"/><text x="75.8617%" y="607.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.82%)</title><rect x="75.8564%" y="581" width="0.8157%" height="15" fill="rgb(220,146,47)" fg:x="930" fg:w="10"/><text x="76.1064%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.41%)</title><rect x="76.2643%" y="565" width="0.4078%" height="15" fill="rgb(246,194,1)" fg:x="935" fg:w="5"/><text x="76.5143%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="76.2643%" y="549" width="0.4078%" height="15" fill="rgb(218,203,9)" fg:x="935" fg:w="5"/><text x="76.5143%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="76.2643%" y="533" width="0.4078%" height="15" fill="rgb(237,97,14)" fg:x="935" fg:w="5"/><text x="76.5143%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.5090%" y="517" width="0.1631%" height="15" fill="rgb(239,76,15)" fg:x="938" fg:w="2"/><text x="76.7590%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.5090%" y="501" width="0.1631%" height="15" fill="rgb(222,53,45)" fg:x="938" fg:w="2"/><text x="76.7590%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.5090%" y="485" width="0.1631%" height="15" fill="rgb(237,88,5)" fg:x="938" fg:w="2"/><text x="76.7590%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.5905%" y="469" width="0.0816%" height="15" fill="rgb(218,223,35)" fg:x="939" fg:w="1"/><text x="76.8405%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5905%" y="453" width="0.0816%" height="15" fill="rgb(243,229,38)" fg:x="939" fg:w="1"/><text x="76.8405%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.5905%" y="437" width="0.0816%" height="15" fill="rgb(240,75,41)" fg:x="939" fg:w="1"/><text x="76.8405%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5905%" y="421" width="0.0816%" height="15" fill="rgb(209,110,37)" fg:x="939" fg:w="1"/><text x="76.8405%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.5905%" y="405" width="0.0816%" height="15" fill="rgb(221,130,46)" fg:x="939" fg:w="1"/><text x="76.8405%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5905%" y="389" width="0.0816%" height="15" fill="rgb(237,160,20)" fg:x="939" fg:w="1"/><text x="76.8405%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.5905%" y="373" width="0.0816%" height="15" fill="rgb(234,126,24)" fg:x="939" fg:w="1"/><text x="76.8405%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5905%" y="357" width="0.0816%" height="15" fill="rgb(207,177,9)" fg:x="939" fg:w="1"/><text x="76.8405%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7537%" y="437" width="0.0816%" height="15" fill="rgb(231,191,33)" fg:x="941" fg:w="1"/><text x="77.0037%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7537%" y="421" width="0.0816%" height="15" fill="rgb(207,42,1)" fg:x="941" fg:w="1"/><text x="77.0037%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.7537%" y="405" width="0.0816%" height="15" fill="rgb(218,34,50)" fg:x="941" fg:w="1"/><text x="77.0037%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.7537%" y="389" width="0.0816%" height="15" fill="rgb(254,126,39)" fg:x="941" fg:w="1"/><text x="77.0037%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.7537%" y="373" width="0.0816%" height="15" fill="rgb(251,17,26)" fg:x="941" fg:w="1"/><text x="77.0037%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.7537%" y="357" width="0.0816%" height="15" fill="rgb(252,215,34)" fg:x="941" fg:w="1"/><text x="77.0037%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.7537%" y="341" width="0.0816%" height="15" fill="rgb(217,120,44)" fg:x="941" fg:w="1"/><text x="77.0037%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.7537%" y="325" width="0.0816%" height="15" fill="rgb(211,31,11)" fg:x="941" fg:w="1"/><text x="77.0037%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.7537%" y="309" width="0.0816%" height="15" fill="rgb(222,69,51)" fg:x="941" fg:w="1"/><text x="77.0037%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.7537%" y="293" width="0.0816%" height="15" fill="rgb(215,229,42)" fg:x="941" fg:w="1"/><text x="77.0037%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.7537%" y="277" width="0.0816%" height="15" fill="rgb(212,102,15)" fg:x="941" fg:w="1"/><text x="77.0037%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.7537%" y="261" width="0.0816%" height="15" fill="rgb(205,179,41)" fg:x="941" fg:w="1"/><text x="77.0037%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7537%" y="245" width="0.0816%" height="15" fill="rgb(219,148,46)" fg:x="941" fg:w="1"/><text x="77.0037%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.7537%" y="485" width="0.1631%" height="15" fill="rgb(243,40,19)" fg:x="941" fg:w="2"/><text x="77.0037%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.7537%" y="469" width="0.1631%" height="15" fill="rgb(208,206,34)" fg:x="941" fg:w="2"/><text x="77.0037%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.7537%" y="453" width="0.1631%" height="15" fill="rgb(244,184,38)" fg:x="941" fg:w="2"/><text x="77.0037%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8352%" y="437" width="0.0816%" height="15" fill="rgb(244,151,47)" fg:x="942" fg:w="1"/><text x="77.0852%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="76.7537%" y="533" width="0.2447%" height="15" fill="rgb(236,134,42)" fg:x="941" fg:w="3"/><text x="77.0037%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.7537%" y="517" width="0.2447%" height="15" fill="rgb(233,93,22)" fg:x="941" fg:w="3"/><text x="77.0037%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.7537%" y="501" width="0.2447%" height="15" fill="rgb(211,202,10)" fg:x="941" fg:w="3"/><text x="77.0037%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9168%" y="485" width="0.0816%" height="15" fill="rgb(240,63,8)" fg:x="943" fg:w="1"/><text x="77.1668%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9168%" y="469" width="0.0816%" height="15" fill="rgb(214,9,4)" fg:x="943" fg:w="1"/><text x="77.1668%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9168%" y="453" width="0.0816%" height="15" fill="rgb(243,66,45)" fg:x="943" fg:w="1"/><text x="77.1668%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9168%" y="437" width="0.0816%" height="15" fill="rgb(220,50,42)" fg:x="943" fg:w="1"/><text x="77.1668%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.9168%" y="421" width="0.0816%" height="15" fill="rgb(220,134,27)" fg:x="943" fg:w="1"/><text x="77.1668%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.41%)</title><rect x="76.6721%" y="597" width="0.4078%" height="15" fill="rgb(246,151,50)" fg:x="940" fg:w="5"/><text x="76.9221%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="76.6721%" y="581" width="0.4078%" height="15" fill="rgb(238,216,27)" fg:x="940" fg:w="5"/><text x="76.9221%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="76.7537%" y="565" width="0.3263%" height="15" fill="rgb(250,92,11)" fg:x="941" fg:w="4"/><text x="77.0037%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="76.7537%" y="549" width="0.3263%" height="15" fill="rgb(248,183,6)" fg:x="941" fg:w="4"/><text x="77.0037%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="76.9984%" y="533" width="0.0816%" height="15" fill="rgb(211,204,50)" fg:x="944" fg:w="1"/><text x="77.2484%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="76.9984%" y="517" width="0.0816%" height="15" fill="rgb(252,55,47)" fg:x="944" fg:w="1"/><text x="77.2484%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.9984%" y="501" width="0.0816%" height="15" fill="rgb(240,198,32)" fg:x="944" fg:w="1"/><text x="77.2484%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="76.9984%" y="485" width="0.0816%" height="15" fill="rgb(224,203,19)" fg:x="944" fg:w="1"/><text x="77.2484%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="77.0799%" y="597" width="0.0816%" height="15" fill="rgb(205,27,16)" fg:x="945" fg:w="1"/><text x="77.3299%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="77.0799%" y="581" width="0.0816%" height="15" fill="rgb(224,226,17)" fg:x="945" fg:w="1"/><text x="77.3299%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="77.0799%" y="565" width="0.0816%" height="15" fill="rgb(205,216,54)" fg:x="945" fg:w="1"/><text x="77.3299%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.0799%" y="549" width="0.0816%" height="15" fill="rgb(248,168,46)" fg:x="945" fg:w="1"/><text x="77.3299%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="77.0799%" y="533" width="0.0816%" height="15" fill="rgb(226,111,45)" fg:x="945" fg:w="1"/><text x="77.3299%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.0799%" y="517" width="0.0816%" height="15" fill="rgb(231,15,9)" fg:x="945" fg:w="1"/><text x="77.3299%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="77.0799%" y="501" width="0.0816%" height="15" fill="rgb(243,168,3)" fg:x="945" fg:w="1"/><text x="77.3299%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.0799%" y="485" width="0.0816%" height="15" fill="rgb(221,220,54)" fg:x="945" fg:w="1"/><text x="77.3299%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="77.0799%" y="469" width="0.0816%" height="15" fill="rgb(232,174,38)" fg:x="945" fg:w="1"/><text x="77.3299%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="77.0799%" y="453" width="0.0816%" height="15" fill="rgb(205,14,38)" fg:x="945" fg:w="1"/><text x="77.3299%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1615%" y="565" width="0.0816%" height="15" fill="rgb(234,89,19)" fg:x="946" fg:w="1"/><text x="77.4115%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="77.1615%" y="581" width="0.1631%" height="15" fill="rgb(216,68,51)" fg:x="946" fg:w="2"/><text x="77.4115%" y="591.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.2431%" y="565" width="0.0816%" height="15" fill="rgb(213,49,2)" fg:x="947" fg:w="1"/><text x="77.4931%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="77.2431%" y="549" width="0.0816%" height="15" fill="rgb(242,146,30)" fg:x="947" fg:w="1"/><text x="77.4931%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.2431%" y="533" width="0.0816%" height="15" fill="rgb(224,188,11)" fg:x="947" fg:w="1"/><text x="77.4931%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.2431%" y="517" width="0.0816%" height="15" fill="rgb(213,159,11)" fg:x="947" fg:w="1"/><text x="77.4931%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.2431%" y="501" width="0.0816%" height="15" fill="rgb(229,13,31)" fg:x="947" fg:w="1"/><text x="77.4931%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2431%" y="485" width="0.0816%" height="15" fill="rgb(209,103,11)" fg:x="947" fg:w="1"/><text x="77.4931%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.2431%" y="469" width="0.0816%" height="15" fill="rgb(206,3,4)" fg:x="947" fg:w="1"/><text x="77.4931%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2431%" y="453" width="0.0816%" height="15" fill="rgb(252,10,49)" fg:x="947" fg:w="1"/><text x="77.4931%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2431%" y="437" width="0.0816%" height="15" fill="rgb(217,160,32)" fg:x="947" fg:w="1"/><text x="77.4931%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2431%" y="421" width="0.0816%" height="15" fill="rgb(249,196,0)" fg:x="947" fg:w="1"/><text x="77.4931%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2431%" y="405" width="0.0816%" height="15" fill="rgb(213,17,48)" fg:x="947" fg:w="1"/><text x="77.4931%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2431%" y="389" width="0.0816%" height="15" fill="rgb(206,42,46)" fg:x="947" fg:w="1"/><text x="77.4931%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2431%" y="373" width="0.0816%" height="15" fill="rgb(212,105,24)" fg:x="947" fg:w="1"/><text x="77.4931%" y="383.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3246%" y="581" width="0.0816%" height="15" fill="rgb(243,216,30)" fg:x="948" fg:w="1"/><text x="77.5746%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3246%" y="565" width="0.0816%" height="15" fill="rgb(207,121,3)" fg:x="948" fg:w="1"/><text x="77.5746%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3246%" y="549" width="0.0816%" height="15" fill="rgb(249,78,0)" fg:x="948" fg:w="1"/><text x="77.5746%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.3246%" y="533" width="0.0816%" height="15" fill="rgb(244,151,32)" fg:x="948" fg:w="1"/><text x="77.5746%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.3246%" y="517" width="0.0816%" height="15" fill="rgb(228,63,25)" fg:x="948" fg:w="1"/><text x="77.5746%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.3246%" y="501" width="0.0816%" height="15" fill="rgb(231,158,23)" fg:x="948" fg:w="1"/><text x="77.5746%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3246%" y="485" width="0.0816%" height="15" fill="rgb(248,107,23)" fg:x="948" fg:w="1"/><text x="77.5746%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3246%" y="469" width="0.0816%" height="15" fill="rgb(215,168,21)" fg:x="948" fg:w="1"/><text x="77.5746%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.3246%" y="453" width="0.0816%" height="15" fill="rgb(227,83,22)" fg:x="948" fg:w="1"/><text x="77.5746%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.3246%" y="437" width="0.0816%" height="15" fill="rgb(217,118,43)" fg:x="948" fg:w="1"/><text x="77.5746%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.3246%" y="421" width="0.0816%" height="15" fill="rgb(229,220,41)" fg:x="948" fg:w="1"/><text x="77.5746%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.3246%" y="405" width="0.0816%" height="15" fill="rgb(254,146,46)" fg:x="948" fg:w="1"/><text x="77.5746%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3246%" y="389" width="0.0816%" height="15" fill="rgb(233,208,31)" fg:x="948" fg:w="1"/><text x="77.5746%" y="399.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.4878%" y="533" width="0.0816%" height="15" fill="rgb(222,162,7)" fg:x="950" fg:w="1"/><text x="77.7378%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.4878%" y="517" width="0.0816%" height="15" fill="rgb(230,117,45)" fg:x="950" fg:w="1"/><text x="77.7378%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.4878%" y="501" width="0.0816%" height="15" fill="rgb(239,163,6)" fg:x="950" fg:w="1"/><text x="77.7378%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.4878%" y="485" width="0.0816%" height="15" fill="rgb(246,130,17)" fg:x="950" fg:w="1"/><text x="77.7378%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.4878%" y="469" width="0.0816%" height="15" fill="rgb(216,84,5)" fg:x="950" fg:w="1"/><text x="77.7378%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.4878%" y="453" width="0.0816%" height="15" fill="rgb(230,200,21)" fg:x="950" fg:w="1"/><text x="77.7378%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.4878%" y="437" width="0.0816%" height="15" fill="rgb(224,2,8)" fg:x="950" fg:w="1"/><text x="77.7378%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.4878%" y="421" width="0.0816%" height="15" fill="rgb(238,178,10)" fg:x="950" fg:w="1"/><text x="77.7378%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.4878%" y="405" width="0.0816%" height="15" fill="rgb(242,153,24)" fg:x="950" fg:w="1"/><text x="77.7378%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.4878%" y="389" width="0.0816%" height="15" fill="rgb(242,32,48)" fg:x="950" fg:w="1"/><text x="77.7378%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.4878%" y="373" width="0.0816%" height="15" fill="rgb(227,36,0)" fg:x="950" fg:w="1"/><text x="77.7378%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.4878%" y="357" width="0.0816%" height="15" fill="rgb(251,33,35)" fg:x="950" fg:w="1"/><text x="77.7378%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4878%" y="341" width="0.0816%" height="15" fill="rgb(232,168,51)" fg:x="950" fg:w="1"/><text x="77.7378%" y="351.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="77.5693%" y="533" width="0.0816%" height="15" fill="rgb(228,56,10)" fg:x="951" fg:w="1"/><text x="77.8193%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="77.5693%" y="517" width="0.0816%" height="15" fill="rgb(231,10,26)" fg:x="951" fg:w="1"/><text x="77.8193%" y="527.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.5693%" y="501" width="0.0816%" height="15" fill="rgb(226,202,12)" fg:x="951" fg:w="1"/><text x="77.8193%" y="511.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="77.5693%" y="485" width="0.0816%" height="15" fill="rgb(251,49,21)" fg:x="951" fg:w="1"/><text x="77.8193%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5693%" y="469" width="0.0816%" height="15" fill="rgb(206,228,28)" fg:x="951" fg:w="1"/><text x="77.8193%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5693%" y="453" width="0.0816%" height="15" fill="rgb(205,198,31)" fg:x="951" fg:w="1"/><text x="77.8193%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.5693%" y="437" width="0.0816%" height="15" fill="rgb(213,69,1)" fg:x="951" fg:w="1"/><text x="77.8193%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.5693%" y="421" width="0.0816%" height="15" fill="rgb(209,177,9)" fg:x="951" fg:w="1"/><text x="77.8193%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.5693%" y="405" width="0.0816%" height="15" fill="rgb(227,119,30)" fg:x="951" fg:w="1"/><text x="77.8193%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.5693%" y="389" width="0.0816%" height="15" fill="rgb(234,106,41)" fg:x="951" fg:w="1"/><text x="77.8193%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.5693%" y="373" width="0.0816%" height="15" fill="rgb(244,103,47)" fg:x="951" fg:w="1"/><text x="77.8193%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.5693%" y="357" width="0.0816%" height="15" fill="rgb(212,211,25)" fg:x="951" fg:w="1"/><text x="77.8193%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.5693%" y="341" width="0.0816%" height="15" fill="rgb(208,63,53)" fg:x="951" fg:w="1"/><text x="77.8193%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.5693%" y="325" width="0.0816%" height="15" fill="rgb(213,176,21)" fg:x="951" fg:w="1"/><text x="77.8193%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.5693%" y="309" width="0.0816%" height="15" fill="rgb(243,124,12)" fg:x="951" fg:w="1"/><text x="77.8193%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="77.6509%" y="453" width="0.0816%" height="15" fill="rgb(239,2,35)" fg:x="952" fg:w="1"/><text x="77.9009%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7325%" y="421" width="0.0816%" height="15" fill="rgb(253,169,22)" fg:x="953" fg:w="1"/><text x="77.9825%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7325%" y="405" width="0.0816%" height="15" fill="rgb(254,51,12)" fg:x="953" fg:w="1"/><text x="77.9825%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7325%" y="389" width="0.0816%" height="15" fill="rgb(244,17,47)" fg:x="953" fg:w="1"/><text x="77.9825%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7325%" y="373" width="0.0816%" height="15" fill="rgb(251,45,46)" fg:x="953" fg:w="1"/><text x="77.9825%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7325%" y="357" width="0.0816%" height="15" fill="rgb(223,87,43)" fg:x="953" fg:w="1"/><text x="77.9825%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="77.6509%" y="469" width="0.2447%" height="15" fill="rgb(230,132,31)" fg:x="952" fg:w="3"/><text x="77.9009%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="77.7325%" y="453" width="0.1631%" height="15" fill="rgb(206,99,1)" fg:x="953" fg:w="2"/><text x="77.9825%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.7325%" y="437" width="0.1631%" height="15" fill="rgb(227,110,25)" fg:x="953" fg:w="2"/><text x="77.9825%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.8140%" y="421" width="0.0816%" height="15" fill="rgb(217,182,7)" fg:x="954" fg:w="1"/><text x="78.0640%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8140%" y="405" width="0.0816%" height="15" fill="rgb(250,176,4)" fg:x="954" fg:w="1"/><text x="78.0640%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.8140%" y="389" width="0.0816%" height="15" fill="rgb(244,98,30)" fg:x="954" fg:w="1"/><text x="78.0640%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8140%" y="373" width="0.0816%" height="15" fill="rgb(228,150,42)" fg:x="954" fg:w="1"/><text x="78.0640%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.8140%" y="357" width="0.0816%" height="15" fill="rgb(231,91,46)" fg:x="954" fg:w="1"/><text x="78.0640%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8140%" y="341" width="0.0816%" height="15" fill="rgb(252,161,32)" fg:x="954" fg:w="1"/><text x="78.0640%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.8140%" y="325" width="0.0816%" height="15" fill="rgb(236,69,41)" fg:x="954" fg:w="1"/><text x="78.0640%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8140%" y="309" width="0.0816%" height="15" fill="rgb(212,160,3)" fg:x="954" fg:w="1"/><text x="78.0640%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="77.6509%" y="517" width="0.4078%" height="15" fill="rgb(216,5,50)" fg:x="952" fg:w="5"/><text x="77.9009%" y="527.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="77.6509%" y="501" width="0.4078%" height="15" fill="rgb(241,138,25)" fg:x="952" fg:w="5"/><text x="77.9009%" y="511.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="77.6509%" y="485" width="0.4078%" height="15" fill="rgb(239,42,18)" fg:x="952" fg:w="5"/><text x="77.9009%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="77.8956%" y="469" width="0.1631%" height="15" fill="rgb(239,40,7)" fg:x="955" fg:w="2"/><text x="78.1456%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="77.8956%" y="453" width="0.1631%" height="15" fill="rgb(239,11,31)" fg:x="955" fg:w="2"/><text x="78.1456%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="77.8956%" y="437" width="0.1631%" height="15" fill="rgb(224,77,40)" fg:x="955" fg:w="2"/><text x="78.1456%" y="447.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="77.8956%" y="421" width="0.1631%" height="15" fill="rgb(226,15,5)" fg:x="955" fg:w="2"/><text x="78.1456%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.8956%" y="405" width="0.1631%" height="15" fill="rgb(254,188,5)" fg:x="955" fg:w="2"/><text x="78.1456%" y="415.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="77.8956%" y="389" width="0.1631%" height="15" fill="rgb(241,148,52)" fg:x="955" fg:w="2"/><text x="78.1456%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.8956%" y="373" width="0.1631%" height="15" fill="rgb(251,48,36)" fg:x="955" fg:w="2"/><text x="78.1456%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="77.8956%" y="357" width="0.1631%" height="15" fill="rgb(243,83,13)" fg:x="955" fg:w="2"/><text x="78.1456%" y="367.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="77.8956%" y="341" width="0.1631%" height="15" fill="rgb(210,105,0)" fg:x="955" fg:w="2"/><text x="78.1456%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.8956%" y="325" width="0.1631%" height="15" fill="rgb(239,60,36)" fg:x="955" fg:w="2"/><text x="78.1456%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="77.8956%" y="309" width="0.1631%" height="15" fill="rgb(210,20,0)" fg:x="955" fg:w="2"/><text x="78.1456%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.9772%" y="293" width="0.0816%" height="15" fill="rgb(244,26,53)" fg:x="956" fg:w="1"/><text x="78.2272%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0587%" y="421" width="0.0816%" height="15" fill="rgb(240,100,49)" fg:x="957" fg:w="1"/><text x="78.3087%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0587%" y="405" width="0.0816%" height="15" fill="rgb(250,46,45)" fg:x="957" fg:w="1"/><text x="78.3087%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0587%" y="389" width="0.0816%" height="15" fill="rgb(220,181,29)" fg:x="957" fg:w="1"/><text x="78.3087%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0587%" y="373" width="0.0816%" height="15" fill="rgb(213,137,33)" fg:x="957" fg:w="1"/><text x="78.3087%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0587%" y="357" width="0.0816%" height="15" fill="rgb(213,27,48)" fg:x="957" fg:w="1"/><text x="78.3087%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0587%" y="341" width="0.0816%" height="15" fill="rgb(245,180,39)" fg:x="957" fg:w="1"/><text x="78.3087%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="78.0587%" y="501" width="0.1631%" height="15" fill="rgb(212,158,42)" fg:x="957" fg:w="2"/><text x="78.3087%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="78.0587%" y="485" width="0.1631%" height="15" fill="rgb(228,193,18)" fg:x="957" fg:w="2"/><text x="78.3087%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="78.0587%" y="469" width="0.1631%" height="15" fill="rgb(245,172,29)" fg:x="957" fg:w="2"/><text x="78.3087%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="78.0587%" y="453" width="0.1631%" height="15" fill="rgb(207,98,24)" fg:x="957" fg:w="2"/><text x="78.3087%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.0587%" y="437" width="0.1631%" height="15" fill="rgb(249,92,26)" fg:x="957" fg:w="2"/><text x="78.3087%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.1403%" y="421" width="0.0816%" height="15" fill="rgb(217,176,26)" fg:x="958" fg:w="1"/><text x="78.3903%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1403%" y="405" width="0.0816%" height="15" fill="rgb(221,8,39)" fg:x="958" fg:w="1"/><text x="78.3903%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1403%" y="389" width="0.0816%" height="15" fill="rgb(208,90,18)" fg:x="958" fg:w="1"/><text x="78.3903%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.2219%" y="485" width="0.0816%" height="15" fill="rgb(207,202,30)" fg:x="959" fg:w="1"/><text x="78.4719%" y="495.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.73%)</title><rect x="77.6509%" y="533" width="0.7341%" height="15" fill="rgb(231,124,22)" fg:x="952" fg:w="9"/><text x="77.9009%" y="543.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.33%)</title><rect x="78.0587%" y="517" width="0.3263%" height="15" fill="rgb(206,15,5)" fg:x="957" fg:w="4"/><text x="78.3087%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.2219%" y="501" width="0.1631%" height="15" fill="rgb(239,16,52)" fg:x="959" fg:w="2"/><text x="78.4719%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="78.3034%" y="485" width="0.0816%" height="15" fill="rgb(245,213,29)" fg:x="960" fg:w="1"/><text x="78.5534%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.3034%" y="469" width="0.0816%" height="15" fill="rgb(213,203,36)" fg:x="960" fg:w="1"/><text x="78.5534%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="78.3034%" y="453" width="0.0816%" height="15" fill="rgb(209,55,18)" fg:x="960" fg:w="1"/><text x="78.5534%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.3034%" y="437" width="0.0816%" height="15" fill="rgb(207,133,49)" fg:x="960" fg:w="1"/><text x="78.5534%" y="447.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="78.3850%" y="501" width="0.0816%" height="15" fill="rgb(240,33,46)" fg:x="961" fg:w="1"/><text x="78.6350%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4666%" y="469" width="0.0816%" height="15" fill="rgb(212,35,2)" fg:x="962" fg:w="1"/><text x="78.7166%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (15 samples, 1.22%)</title><rect x="77.4062%" y="581" width="1.2235%" height="15" fill="rgb(231,119,28)" fg:x="949" fg:w="15"/><text x="77.6562%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 1.22%)</title><rect x="77.4062%" y="565" width="1.2235%" height="15" fill="rgb(252,178,7)" fg:x="949" fg:w="15"/><text x="77.6562%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.22%)</title><rect x="77.4062%" y="549" width="1.2235%" height="15" fill="rgb(251,91,4)" fg:x="949" fg:w="15"/><text x="77.6562%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="78.3850%" y="533" width="0.2447%" height="15" fill="rgb(233,122,19)" fg:x="961" fg:w="3"/><text x="78.6350%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="78.3850%" y="517" width="0.2447%" height="15" fill="rgb(231,208,46)" fg:x="961" fg:w="3"/><text x="78.6350%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="78.4666%" y="501" width="0.1631%" height="15" fill="rgb(243,15,41)" fg:x="962" fg:w="2"/><text x="78.7166%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.4666%" y="485" width="0.1631%" height="15" fill="rgb(210,32,43)" fg:x="962" fg:w="2"/><text x="78.7166%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5481%" y="469" width="0.0816%" height="15" fill="rgb(222,177,15)" fg:x="963" fg:w="1"/><text x="78.7981%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="78.6297%" y="581" width="0.0816%" height="15" fill="rgb(244,121,34)" fg:x="964" fg:w="1"/><text x="78.8797%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6297%" y="565" width="0.0816%" height="15" fill="rgb(234,138,4)" fg:x="964" fg:w="1"/><text x="78.8797%" y="575.50"></text></g><g><title>engine::session::Session::flush (1 samples, 0.08%)</title><rect x="78.7113%" y="565" width="0.0816%" height="15" fill="rgb(240,97,48)" fg:x="965" fg:w="1"/><text x="78.9613%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="78.7928%" y="549" width="0.0816%" height="15" fill="rgb(237,65,54)" fg:x="966" fg:w="1"/><text x="79.0428%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="78.7928%" y="533" width="0.0816%" height="15" fill="rgb(214,25,24)" fg:x="966" fg:w="1"/><text x="79.0428%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.8744%" y="485" width="0.0816%" height="15" fill="rgb(213,5,3)" fg:x="967" fg:w="1"/><text x="79.1244%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.9560%" y="485" width="0.0816%" height="15" fill="rgb(219,81,29)" fg:x="968" fg:w="1"/><text x="79.2060%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9560%" y="469" width="0.0816%" height="15" fill="rgb(220,43,48)" fg:x="968" fg:w="1"/><text x="79.2060%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.9560%" y="453" width="0.0816%" height="15" fill="rgb(239,157,2)" fg:x="968" fg:w="1"/><text x="79.2060%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9560%" y="437" width="0.0816%" height="15" fill="rgb(213,104,43)" fg:x="968" fg:w="1"/><text x="79.2060%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.9560%" y="421" width="0.0816%" height="15" fill="rgb(237,84,9)" fg:x="968" fg:w="1"/><text x="79.2060%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.0375%" y="437" width="0.0816%" height="15" fill="rgb(252,6,33)" fg:x="969" fg:w="1"/><text x="79.2875%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0375%" y="421" width="0.0816%" height="15" fill="rgb(251,172,22)" fg:x="969" fg:w="1"/><text x="79.2875%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.0375%" y="469" width="0.1631%" height="15" fill="rgb(244,91,53)" fg:x="969" fg:w="2"/><text x="79.2875%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.0375%" y="453" width="0.1631%" height="15" fill="rgb(219,29,30)" fg:x="969" fg:w="2"/><text x="79.2875%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1191%" y="437" width="0.0816%" height="15" fill="rgb(213,3,15)" fg:x="970" fg:w="1"/><text x="79.3691%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="79.2007%" y="469" width="0.3263%" height="15" fill="rgb(208,25,28)" fg:x="971" fg:w="4"/><text x="79.4507%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="79.2007%" y="453" width="0.3263%" height="15" fill="rgb(252,144,25)" fg:x="971" fg:w="4"/><text x="79.4507%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="79.2007%" y="437" width="0.3263%" height="15" fill="rgb(226,220,25)" fg:x="971" fg:w="4"/><text x="79.4507%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="79.2822%" y="421" width="0.2447%" height="15" fill="rgb(212,131,28)" fg:x="972" fg:w="3"/><text x="79.5322%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.5269%" y="453" width="0.0816%" height="15" fill="rgb(219,143,52)" fg:x="975" fg:w="1"/><text x="79.7769%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.6085%" y="453" width="0.0816%" height="15" fill="rgb(215,56,7)" fg:x="976" fg:w="1"/><text x="79.8585%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.6085%" y="437" width="0.0816%" height="15" fill="rgb(239,59,51)" fg:x="976" fg:w="1"/><text x="79.8585%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.6900%" y="437" width="0.0816%" height="15" fill="rgb(209,215,4)" fg:x="977" fg:w="1"/><text x="79.9400%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.7716%" y="421" width="0.0816%" height="15" fill="rgb(221,118,39)" fg:x="978" fg:w="1"/><text x="80.0216%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.7716%" y="405" width="0.0816%" height="15" fill="rgb(236,6,44)" fg:x="978" fg:w="1"/><text x="80.0216%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.7716%" y="389" width="0.0816%" height="15" fill="rgb(216,122,9)" fg:x="978" fg:w="1"/><text x="80.0216%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.8532%" y="405" width="0.1631%" height="15" fill="rgb(244,134,42)" fg:x="979" fg:w="2"/><text x="80.1032%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.8532%" y="389" width="0.1631%" height="15" fill="rgb(209,189,35)" fg:x="979" fg:w="2"/><text x="80.1032%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.9347%" y="373" width="0.0816%" height="15" fill="rgb(250,47,36)" fg:x="980" fg:w="1"/><text x="80.1847%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.9347%" y="357" width="0.0816%" height="15" fill="rgb(252,112,4)" fg:x="980" fg:w="1"/><text x="80.1847%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="79.8532%" y="421" width="0.3263%" height="15" fill="rgb(221,79,51)" fg:x="979" fg:w="4"/><text x="80.1032%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.0163%" y="405" width="0.1631%" height="15" fill="rgb(232,65,53)" fg:x="981" fg:w="2"/><text x="80.2663%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.0163%" y="389" width="0.1631%" height="15" fill="rgb(211,37,7)" fg:x="981" fg:w="2"/><text x="80.2663%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="79.5269%" y="469" width="0.7341%" height="15" fill="rgb(234,221,18)" fg:x="975" fg:w="9"/><text x="79.7769%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="79.6900%" y="453" width="0.5710%" height="15" fill="rgb(220,158,26)" fg:x="977" fg:w="7"/><text x="79.9400%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="79.7716%" y="437" width="0.4894%" height="15" fill="rgb(220,70,6)" fg:x="978" fg:w="6"/><text x="80.0216%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.1794%" y="421" width="0.0816%" height="15" fill="rgb(250,39,48)" fg:x="983" fg:w="1"/><text x="80.4294%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.1794%" y="405" width="0.0816%" height="15" fill="rgb(206,40,27)" fg:x="983" fg:w="1"/><text x="80.4294%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.1794%" y="389" width="0.0816%" height="15" fill="rgb(247,80,36)" fg:x="983" fg:w="1"/><text x="80.4294%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.1794%" y="373" width="0.0816%" height="15" fill="rgb(222,9,20)" fg:x="983" fg:w="1"/><text x="80.4294%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.1794%" y="357" width="0.0816%" height="15" fill="rgb(217,26,45)" fg:x="983" fg:w="1"/><text x="80.4294%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.1794%" y="341" width="0.0816%" height="15" fill="rgb(221,67,14)" fg:x="983" fg:w="1"/><text x="80.4294%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.31%)</title><rect x="79.0375%" y="485" width="1.3051%" height="15" fill="rgb(248,100,24)" fg:x="969" fg:w="16"/><text x="79.2875%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.2610%" y="469" width="0.0816%" height="15" fill="rgb(230,187,16)" fg:x="984" fg:w="1"/><text x="80.5110%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.2610%" y="453" width="0.0816%" height="15" fill="rgb(205,108,13)" fg:x="984" fg:w="1"/><text x="80.5110%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.88%)</title><rect x="78.8744%" y="517" width="1.8760%" height="15" fill="rgb(235,71,51)" fg:x="967" fg:w="23"/><text x="79.1244%" y="527.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.88%)</title><rect x="78.8744%" y="501" width="1.8760%" height="15" fill="rgb(251,172,48)" fg:x="967" fg:w="23"/><text x="79.1244%" y="511.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="80.3426%" y="485" width="0.4078%" height="15" fill="rgb(240,96,49)" fg:x="985" fg:w="5"/><text x="80.5926%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="80.5057%" y="469" width="0.2447%" height="15" fill="rgb(235,46,36)" fg:x="987" fg:w="3"/><text x="80.7557%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="80.5057%" y="453" width="0.2447%" height="15" fill="rgb(244,3,49)" fg:x="987" fg:w="3"/><text x="80.7557%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="80.5057%" y="437" width="0.2447%" height="15" fill="rgb(206,78,54)" fg:x="987" fg:w="3"/><text x="80.7557%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="80.5873%" y="421" width="0.1631%" height="15" fill="rgb(208,85,42)" fg:x="988" fg:w="2"/><text x="80.8373%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="80.5873%" y="405" width="0.1631%" height="15" fill="rgb(219,196,21)" fg:x="988" fg:w="2"/><text x="80.8373%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.8320%" y="469" width="0.0816%" height="15" fill="rgb(238,19,9)" fg:x="991" fg:w="1"/><text x="81.0820%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8320%" y="453" width="0.0816%" height="15" fill="rgb(206,86,13)" fg:x="991" fg:w="1"/><text x="81.0820%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9135%" y="453" width="0.0816%" height="15" fill="rgb(214,123,40)" fg:x="992" fg:w="1"/><text x="81.1635%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.9951%" y="453" width="0.0816%" height="15" fill="rgb(243,53,5)" fg:x="993" fg:w="1"/><text x="81.2451%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9951%" y="437" width="0.0816%" height="15" fill="rgb(254,186,31)" fg:x="993" fg:w="1"/><text x="81.2451%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.0767%" y="437" width="0.0816%" height="15" fill="rgb(221,216,25)" fg:x="994" fg:w="1"/><text x="81.3267%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="81.1582%" y="437" width="0.1631%" height="15" fill="rgb(248,107,42)" fg:x="995" fg:w="2"/><text x="81.4082%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.1582%" y="421" width="0.1631%" height="15" fill="rgb(221,85,43)" fg:x="995" fg:w="2"/><text x="81.4082%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.2398%" y="405" width="0.0816%" height="15" fill="rgb(225,34,24)" fg:x="996" fg:w="1"/><text x="81.4898%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="81.3214%" y="421" width="0.1631%" height="15" fill="rgb(211,119,1)" fg:x="997" fg:w="2"/><text x="81.5714%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="80.7504%" y="517" width="0.8972%" height="15" fill="rgb(254,216,46)" fg:x="990" fg:w="11"/><text x="81.0004%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.90%)</title><rect x="80.7504%" y="501" width="0.8972%" height="15" fill="rgb(238,11,38)" fg:x="990" fg:w="11"/><text x="81.0004%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.82%)</title><rect x="80.8320%" y="485" width="0.8157%" height="15" fill="rgb(233,50,15)" fg:x="991" fg:w="10"/><text x="81.0820%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="80.9135%" y="469" width="0.7341%" height="15" fill="rgb(217,181,29)" fg:x="992" fg:w="9"/><text x="81.1635%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="81.0767%" y="453" width="0.5710%" height="15" fill="rgb(214,56,3)" fg:x="994" fg:w="7"/><text x="81.3267%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="81.3214%" y="437" width="0.3263%" height="15" fill="rgb(230,69,45)" fg:x="997" fg:w="4"/><text x="81.5714%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.4845%" y="421" width="0.1631%" height="15" fill="rgb(224,201,50)" fg:x="999" fg:w="2"/><text x="81.7345%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.4845%" y="405" width="0.1631%" height="15" fill="rgb(217,228,18)" fg:x="999" fg:w="2"/><text x="81.7345%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5661%" y="389" width="0.0816%" height="15" fill="rgb(239,33,44)" fg:x="1000" fg:w="1"/><text x="81.8161%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5661%" y="373" width="0.0816%" height="15" fill="rgb(248,210,23)" fg:x="1000" fg:w="1"/><text x="81.8161%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7292%" y="469" width="0.0816%" height="15" fill="rgb(253,135,8)" fg:x="1002" fg:w="1"/><text x="81.9792%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7292%" y="453" width="0.0816%" height="15" fill="rgb(217,98,21)" fg:x="1002" fg:w="1"/><text x="81.9792%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.7292%" y="437" width="0.0816%" height="15" fill="rgb(253,130,21)" fg:x="1002" fg:w="1"/><text x="81.9792%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8108%" y="421" width="0.0816%" height="15" fill="rgb(207,81,54)" fg:x="1003" fg:w="1"/><text x="82.0608%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8108%" y="405" width="0.0816%" height="15" fill="rgb(232,48,33)" fg:x="1003" fg:w="1"/><text x="82.0608%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8108%" y="389" width="0.0816%" height="15" fill="rgb(211,9,35)" fg:x="1003" fg:w="1"/><text x="82.0608%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8923%" y="341" width="0.0816%" height="15" fill="rgb(205,152,21)" fg:x="1004" fg:w="1"/><text x="82.1423%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="81.8923%" y="421" width="0.1631%" height="15" fill="rgb(249,21,27)" fg:x="1004" fg:w="2"/><text x="82.1423%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.8923%" y="405" width="0.1631%" height="15" fill="rgb(252,29,24)" fg:x="1004" fg:w="2"/><text x="82.1423%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.8923%" y="389" width="0.1631%" height="15" fill="rgb(230,130,50)" fg:x="1004" fg:w="2"/><text x="82.1423%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.8923%" y="373" width="0.1631%" height="15" fill="rgb(239,144,14)" fg:x="1004" fg:w="2"/><text x="82.1423%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.8923%" y="357" width="0.1631%" height="15" fill="rgb(227,111,50)" fg:x="1004" fg:w="2"/><text x="82.1423%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.9739%" y="341" width="0.0816%" height="15" fill="rgb(254,84,20)" fg:x="1005" fg:w="1"/><text x="82.2239%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="81.8108%" y="437" width="0.4078%" height="15" fill="rgb(232,90,48)" fg:x="1003" fg:w="5"/><text x="82.0608%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.0555%" y="421" width="0.1631%" height="15" fill="rgb(253,63,47)" fg:x="1006" fg:w="2"/><text x="82.3055%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.0555%" y="405" width="0.1631%" height="15" fill="rgb(251,146,35)" fg:x="1006" fg:w="2"/><text x="82.3055%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.0555%" y="389" width="0.1631%" height="15" fill="rgb(229,192,35)" fg:x="1006" fg:w="2"/><text x="82.3055%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.1370%" y="373" width="0.0816%" height="15" fill="rgb(225,68,9)" fg:x="1007" fg:w="1"/><text x="82.3870%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1370%" y="357" width="0.0816%" height="15" fill="rgb(214,97,34)" fg:x="1007" fg:w="1"/><text x="82.3870%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.1370%" y="341" width="0.0816%" height="15" fill="rgb(253,31,26)" fg:x="1007" fg:w="1"/><text x="82.3870%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1370%" y="325" width="0.0816%" height="15" fill="rgb(225,151,47)" fg:x="1007" fg:w="1"/><text x="82.3870%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.57%)</title><rect x="81.8108%" y="453" width="0.5710%" height="15" fill="rgb(206,185,9)" fg:x="1003" fg:w="7"/><text x="82.0608%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="82.2186%" y="437" width="0.1631%" height="15" fill="rgb(249,65,17)" fg:x="1008" fg:w="2"/><text x="82.4686%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3002%" y="421" width="0.0816%" height="15" fill="rgb(220,110,10)" fg:x="1009" fg:w="1"/><text x="82.5502%" y="431.50"></text></g><g><title>engine::session::Session::flush (46 samples, 3.75%)</title><rect x="78.7113%" y="581" width="3.7520%" height="15" fill="rgb(222,198,49)" fg:x="965" fg:w="46"/><text x="78.9613%" y="591.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (45 samples, 3.67%)</title><rect x="78.7928%" y="565" width="3.6705%" height="15" fill="rgb(239,81,13)" fg:x="966" fg:w="45"/><text x="79.0428%" y="575.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (44 samples, 3.59%)</title><rect x="78.8744%" y="549" width="3.5889%" height="15" fill="rgb(216,128,11)" fg:x="967" fg:w="44"/><text x="79.1244%" y="559.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (44 samples, 3.59%)</title><rect x="78.8744%" y="533" width="3.5889%" height="15" fill="rgb(247,156,8)" fg:x="967" fg:w="44"/><text x="79.1244%" y="543.50">engi..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.82%)</title><rect x="81.6476%" y="517" width="0.8157%" height="15" fill="rgb(219,173,1)" fg:x="1001" fg:w="10"/><text x="81.8976%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.82%)</title><rect x="81.6476%" y="501" width="0.8157%" height="15" fill="rgb(227,42,24)" fg:x="1001" fg:w="10"/><text x="81.8976%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.82%)</title><rect x="81.6476%" y="485" width="0.8157%" height="15" fill="rgb(253,219,50)" fg:x="1001" fg:w="10"/><text x="81.8976%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="81.8108%" y="469" width="0.6525%" height="15" fill="rgb(215,191,54)" fg:x="1003" fg:w="8"/><text x="82.0608%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3817%" y="453" width="0.0816%" height="15" fill="rgb(238,83,12)" fg:x="1010" fg:w="1"/><text x="82.6317%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3817%" y="437" width="0.0816%" height="15" fill="rgb(205,124,9)" fg:x="1010" fg:w="1"/><text x="82.6317%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3817%" y="421" width="0.0816%" height="15" fill="rgb(253,174,7)" fg:x="1010" fg:w="1"/><text x="82.6317%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.4633%" y="517" width="0.1631%" height="15" fill="rgb(206,134,49)" fg:x="1011" fg:w="2"/><text x="82.7133%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.4633%" y="501" width="0.1631%" height="15" fill="rgb(221,89,20)" fg:x="1011" fg:w="2"/><text x="82.7133%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.4633%" y="485" width="0.1631%" height="15" fill="rgb(240,205,13)" fg:x="1011" fg:w="2"/><text x="82.7133%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.4633%" y="469" width="0.1631%" height="15" fill="rgb(237,174,32)" fg:x="1011" fg:w="2"/><text x="82.7133%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.4633%" y="453" width="0.1631%" height="15" fill="rgb(226,12,15)" fg:x="1011" fg:w="2"/><text x="82.7133%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.4633%" y="437" width="0.1631%" height="15" fill="rgb(245,160,52)" fg:x="1011" fg:w="2"/><text x="82.7133%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5449%" y="421" width="0.0816%" height="15" fill="rgb(253,80,21)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5449%" y="405" width="0.0816%" height="15" fill="rgb(231,225,22)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5449%" y="389" width="0.0816%" height="15" fill="rgb(253,185,12)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.5449%" y="373" width="0.0816%" height="15" fill="rgb(234,197,21)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.5449%" y="357" width="0.0816%" height="15" fill="rgb(210,47,30)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.5449%" y="341" width="0.0816%" height="15" fill="rgb(246,139,27)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.5449%" y="325" width="0.0816%" height="15" fill="rgb(226,130,16)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.5449%" y="309" width="0.0816%" height="15" fill="rgb(237,208,20)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.5449%" y="293" width="0.0816%" height="15" fill="rgb(245,186,28)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.5449%" y="277" width="0.0816%" height="15" fill="rgb(238,105,39)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.5449%" y="261" width="0.0816%" height="15" fill="rgb(253,228,11)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.5449%" y="245" width="0.0816%" height="15" fill="rgb(224,136,38)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5449%" y="229" width="0.0816%" height="15" fill="rgb(211,3,25)" fg:x="1012" fg:w="1"/><text x="82.7949%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6264%" y="469" width="0.0816%" height="15" fill="rgb(238,66,34)" fg:x="1013" fg:w="1"/><text x="82.8764%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.7080%" y="437" width="0.0816%" height="15" fill="rgb(223,188,11)" fg:x="1014" fg:w="1"/><text x="82.9580%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="82.6264%" y="501" width="0.2447%" height="15" fill="rgb(221,10,35)" fg:x="1013" fg:w="3"/><text x="82.8764%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.6264%" y="485" width="0.2447%" height="15" fill="rgb(223,18,44)" fg:x="1013" fg:w="3"/><text x="82.8764%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="82.7080%" y="469" width="0.1631%" height="15" fill="rgb(220,97,41)" fg:x="1014" fg:w="2"/><text x="82.9580%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.7080%" y="453" width="0.1631%" height="15" fill="rgb(206,95,45)" fg:x="1014" fg:w="2"/><text x="82.9580%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.7896%" y="437" width="0.0816%" height="15" fill="rgb(209,96,13)" fg:x="1015" fg:w="1"/><text x="83.0396%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7896%" y="421" width="0.0816%" height="15" fill="rgb(237,39,34)" fg:x="1015" fg:w="1"/><text x="83.0396%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.7896%" y="405" width="0.0816%" height="15" fill="rgb(213,49,47)" fg:x="1015" fg:w="1"/><text x="83.0396%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7896%" y="389" width="0.0816%" height="15" fill="rgb(205,107,27)" fg:x="1015" fg:w="1"/><text x="83.0396%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.7896%" y="373" width="0.0816%" height="15" fill="rgb(212,142,9)" fg:x="1015" fg:w="1"/><text x="83.0396%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7896%" y="357" width="0.0816%" height="15" fill="rgb(226,182,0)" fg:x="1015" fg:w="1"/><text x="83.0396%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8711%" y="469" width="0.0816%" height="15" fill="rgb(231,3,53)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8711%" y="453" width="0.0816%" height="15" fill="rgb(246,111,28)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8711%" y="437" width="0.0816%" height="15" fill="rgb(254,183,7)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8711%" y="421" width="0.0816%" height="15" fill="rgb(247,177,28)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.8711%" y="405" width="0.0816%" height="15" fill="rgb(244,43,1)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.8711%" y="389" width="0.0816%" height="15" fill="rgb(207,2,35)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.8711%" y="373" width="0.0816%" height="15" fill="rgb(213,83,22)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.8711%" y="357" width="0.0816%" height="15" fill="rgb(246,212,13)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.8711%" y="341" width="0.0816%" height="15" fill="rgb(213,127,46)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.8711%" y="325" width="0.0816%" height="15" fill="rgb(219,215,39)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.8711%" y="309" width="0.0816%" height="15" fill="rgb(227,99,17)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.8711%" y="293" width="0.0816%" height="15" fill="rgb(208,155,18)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.8711%" y="277" width="0.0816%" height="15" fill="rgb(223,204,38)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8711%" y="261" width="0.0816%" height="15" fill="rgb(212,114,21)" fg:x="1016" fg:w="1"/><text x="83.1211%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.9527%" y="373" width="0.0816%" height="15" fill="rgb(250,74,13)" fg:x="1017" fg:w="1"/><text x="83.2027%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9527%" y="357" width="0.0816%" height="15" fill="rgb(234,7,1)" fg:x="1017" fg:w="1"/><text x="83.2027%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9527%" y="341" width="0.0816%" height="15" fill="rgb(207,138,31)" fg:x="1017" fg:w="1"/><text x="83.2027%" y="351.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (8 samples, 0.65%)</title><rect x="82.4633%" y="533" width="0.6525%" height="15" fill="rgb(215,186,42)" fg:x="1011" fg:w="8"/><text x="82.7133%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.49%)</title><rect x="82.6264%" y="517" width="0.4894%" height="15" fill="rgb(229,205,49)" fg:x="1013" fg:w="6"/><text x="82.8764%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="82.8711%" y="501" width="0.2447%" height="15" fill="rgb(216,156,32)" fg:x="1016" fg:w="3"/><text x="83.1211%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="82.8711%" y="485" width="0.2447%" height="15" fill="rgb(238,7,21)" fg:x="1016" fg:w="3"/><text x="83.1211%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="82.9527%" y="469" width="0.1631%" height="15" fill="rgb(249,190,22)" fg:x="1017" fg:w="2"/><text x="83.2027%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.9527%" y="453" width="0.1631%" height="15" fill="rgb(253,51,31)" fg:x="1017" fg:w="2"/><text x="83.2027%" y="463.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="82.9527%" y="437" width="0.1631%" height="15" fill="rgb(237,90,54)" fg:x="1017" fg:w="2"/><text x="83.2027%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.9527%" y="421" width="0.1631%" height="15" fill="rgb(250,214,33)" fg:x="1017" fg:w="2"/><text x="83.2027%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="82.9527%" y="405" width="0.1631%" height="15" fill="rgb(237,10,49)" fg:x="1017" fg:w="2"/><text x="83.2027%" y="415.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="82.9527%" y="389" width="0.1631%" height="15" fill="rgb(241,56,36)" fg:x="1017" fg:w="2"/><text x="83.2027%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.0343%" y="373" width="0.0816%" height="15" fill="rgb(227,164,12)" fg:x="1018" fg:w="1"/><text x="83.2843%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0343%" y="357" width="0.0816%" height="15" fill="rgb(249,149,35)" fg:x="1018" fg:w="1"/><text x="83.2843%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.0343%" y="341" width="0.0816%" height="15" fill="rgb(238,227,50)" fg:x="1018" fg:w="1"/><text x="83.2843%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0343%" y="325" width="0.0816%" height="15" fill="rgb(235,102,45)" fg:x="1018" fg:w="1"/><text x="83.2843%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.55%)</title><rect x="82.4633%" y="565" width="1.5498%" height="15" fill="rgb(211,10,38)" fg:x="1011" fg:w="19"/><text x="82.7133%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (19 samples, 1.55%)</title><rect x="82.4633%" y="549" width="1.5498%" height="15" fill="rgb(219,77,48)" fg:x="1011" fg:w="19"/><text x="82.7133%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (11 samples, 0.90%)</title><rect x="83.1158%" y="533" width="0.8972%" height="15" fill="rgb(246,6,15)" fg:x="1019" fg:w="11"/><text x="83.3658%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.90%)</title><rect x="83.1158%" y="517" width="0.8972%" height="15" fill="rgb(207,220,2)" fg:x="1019" fg:w="11"/><text x="83.3658%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.90%)</title><rect x="83.1158%" y="501" width="0.8972%" height="15" fill="rgb(242,48,14)" fg:x="1019" fg:w="11"/><text x="83.3658%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.90%)</title><rect x="83.1158%" y="485" width="0.8972%" height="15" fill="rgb(218,19,27)" fg:x="1019" fg:w="11"/><text x="83.3658%" y="495.50"></text></g><g><title>__libc_malloc (11 samples, 0.90%)</title><rect x="83.1158%" y="469" width="0.8972%" height="15" fill="rgb(228,0,35)" fg:x="1019" fg:w="11"/><text x="83.3658%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="84.0131%" y="549" width="0.0816%" height="15" fill="rgb(244,142,54)" fg:x="1030" fg:w="1"/><text x="84.2631%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="84.0131%" y="533" width="0.0816%" height="15" fill="rgb(243,217,40)" fg:x="1030" fg:w="1"/><text x="84.2631%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0131%" y="517" width="0.0816%" height="15" fill="rgb(207,114,16)" fg:x="1030" fg:w="1"/><text x="84.2631%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0946%" y="469" width="0.1631%" height="15" fill="rgb(224,33,25)" fg:x="1031" fg:w="2"/><text x="84.3446%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0946%" y="453" width="0.1631%" height="15" fill="rgb(230,93,54)" fg:x="1031" fg:w="2"/><text x="84.3446%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0946%" y="437" width="0.1631%" height="15" fill="rgb(224,56,24)" fg:x="1031" fg:w="2"/><text x="84.3446%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0946%" y="421" width="0.1631%" height="15" fill="rgb(235,189,50)" fg:x="1031" fg:w="2"/><text x="84.3446%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0946%" y="405" width="0.1631%" height="15" fill="rgb(242,173,8)" fg:x="1031" fg:w="2"/><text x="84.3446%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.1762%" y="389" width="0.0816%" height="15" fill="rgb(209,206,10)" fg:x="1032" fg:w="1"/><text x="84.4262%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2577%" y="469" width="0.0816%" height="15" fill="rgb(213,182,44)" fg:x="1033" fg:w="1"/><text x="84.5077%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.2577%" y="453" width="0.0816%" height="15" fill="rgb(243,51,15)" fg:x="1033" fg:w="1"/><text x="84.5077%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2577%" y="437" width="0.0816%" height="15" fill="rgb(241,13,14)" fg:x="1033" fg:w="1"/><text x="84.5077%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2577%" y="421" width="0.0816%" height="15" fill="rgb(239,147,24)" fg:x="1033" fg:w="1"/><text x="84.5077%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2577%" y="405" width="0.0816%" height="15" fill="rgb(223,129,16)" fg:x="1033" fg:w="1"/><text x="84.5077%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.2577%" y="389" width="0.0816%" height="15" fill="rgb(209,169,13)" fg:x="1033" fg:w="1"/><text x="84.5077%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="84.0946%" y="517" width="0.3263%" height="15" fill="rgb(235,159,41)" fg:x="1031" fg:w="4"/><text x="84.3446%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="84.0946%" y="501" width="0.3263%" height="15" fill="rgb(223,219,48)" fg:x="1031" fg:w="4"/><text x="84.3446%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="84.0946%" y="485" width="0.3263%" height="15" fill="rgb(236,80,13)" fg:x="1031" fg:w="4"/><text x="84.3446%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.3393%" y="469" width="0.0816%" height="15" fill="rgb(213,5,6)" fg:x="1034" fg:w="1"/><text x="84.5893%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3393%" y="453" width="0.0816%" height="15" fill="rgb(205,59,21)" fg:x="1034" fg:w="1"/><text x="84.5893%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.4209%" y="373" width="0.0816%" height="15" fill="rgb(247,137,35)" fg:x="1035" fg:w="1"/><text x="84.6709%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.4209%" y="357" width="0.0816%" height="15" fill="rgb(242,208,28)" fg:x="1035" fg:w="1"/><text x="84.6709%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.49%)</title><rect x="84.0946%" y="549" width="0.4894%" height="15" fill="rgb(245,62,25)" fg:x="1031" fg:w="6"/><text x="84.3446%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.49%)</title><rect x="84.0946%" y="533" width="0.4894%" height="15" fill="rgb(233,99,54)" fg:x="1031" fg:w="6"/><text x="84.3446%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.4209%" y="517" width="0.1631%" height="15" fill="rgb(213,10,37)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.4209%" y="501" width="0.1631%" height="15" fill="rgb(235,143,30)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.4209%" y="485" width="0.1631%" height="15" fill="rgb(250,146,33)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="84.4209%" y="469" width="0.1631%" height="15" fill="rgb(226,198,42)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.4209%" y="453" width="0.1631%" height="15" fill="rgb(222,55,6)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="84.4209%" y="437" width="0.1631%" height="15" fill="rgb(213,224,31)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.4209%" y="421" width="0.1631%" height="15" fill="rgb(226,103,35)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="84.4209%" y="405" width="0.1631%" height="15" fill="rgb(205,66,45)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.4209%" y="389" width="0.1631%" height="15" fill="rgb(226,51,42)" fg:x="1035" fg:w="2"/><text x="84.6709%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5024%" y="373" width="0.0816%" height="15" fill="rgb(206,69,1)" fg:x="1036" fg:w="1"/><text x="84.7524%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.5840%" y="549" width="0.0816%" height="15" fill="rgb(213,228,47)" fg:x="1037" fg:w="1"/><text x="84.8340%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5840%" y="533" width="0.0816%" height="15" fill="rgb(224,204,18)" fg:x="1037" fg:w="1"/><text x="84.8340%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5840%" y="517" width="0.0816%" height="15" fill="rgb(253,187,47)" fg:x="1037" fg:w="1"/><text x="84.8340%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.5840%" y="501" width="0.0816%" height="15" fill="rgb(232,61,2)" fg:x="1037" fg:w="1"/><text x="84.8340%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="84.5840%" y="485" width="0.0816%" height="15" fill="rgb(213,132,35)" fg:x="1037" fg:w="1"/><text x="84.8340%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5840%" y="469" width="0.0816%" height="15" fill="rgb(247,33,21)" fg:x="1037" fg:w="1"/><text x="84.8340%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7471%" y="389" width="0.0816%" height="15" fill="rgb(233,71,46)" fg:x="1039" fg:w="1"/><text x="84.9971%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="84.6656%" y="453" width="0.3263%" height="15" fill="rgb(222,173,43)" fg:x="1038" fg:w="4"/><text x="84.9156%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="84.6656%" y="437" width="0.3263%" height="15" fill="rgb(249,218,47)" fg:x="1038" fg:w="4"/><text x="84.9156%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="84.6656%" y="421" width="0.3263%" height="15" fill="rgb(254,185,48)" fg:x="1038" fg:w="4"/><text x="84.9156%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="84.7471%" y="405" width="0.2447%" height="15" fill="rgb(252,165,50)" fg:x="1039" fg:w="3"/><text x="84.9971%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="84.8287%" y="389" width="0.1631%" height="15" fill="rgb(206,219,6)" fg:x="1040" fg:w="2"/><text x="85.0787%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9103%" y="373" width="0.0816%" height="15" fill="rgb(212,212,45)" fg:x="1041" fg:w="1"/><text x="85.1603%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9103%" y="357" width="0.0816%" height="15" fill="rgb(221,31,9)" fg:x="1041" fg:w="1"/><text x="85.1603%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9103%" y="341" width="0.0816%" height="15" fill="rgb(234,198,39)" fg:x="1041" fg:w="1"/><text x="85.1603%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9103%" y="325" width="0.0816%" height="15" fill="rgb(252,145,46)" fg:x="1041" fg:w="1"/><text x="85.1603%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.9103%" y="309" width="0.0816%" height="15" fill="rgb(237,149,0)" fg:x="1041" fg:w="1"/><text x="85.1603%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.9103%" y="293" width="0.0816%" height="15" fill="rgb(229,65,5)" fg:x="1041" fg:w="1"/><text x="85.1603%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9918%" y="389" width="0.0816%" height="15" fill="rgb(235,60,36)" fg:x="1042" fg:w="1"/><text x="85.2418%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.9918%" y="453" width="0.1631%" height="15" fill="rgb(222,47,18)" fg:x="1042" fg:w="2"/><text x="85.2418%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.9918%" y="437" width="0.1631%" height="15" fill="rgb(235,114,22)" fg:x="1042" fg:w="2"/><text x="85.2418%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.9918%" y="421" width="0.1631%" height="15" fill="rgb(209,167,11)" fg:x="1042" fg:w="2"/><text x="85.2418%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.9918%" y="405" width="0.1631%" height="15" fill="rgb(251,73,18)" fg:x="1042" fg:w="2"/><text x="85.2418%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0734%" y="389" width="0.0816%" height="15" fill="rgb(217,60,17)" fg:x="1043" fg:w="1"/><text x="85.3234%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0734%" y="373" width="0.0816%" height="15" fill="rgb(224,36,37)" fg:x="1043" fg:w="1"/><text x="85.3234%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0734%" y="357" width="0.0816%" height="15" fill="rgb(211,21,32)" fg:x="1043" fg:w="1"/><text x="85.3234%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0734%" y="341" width="0.0816%" height="15" fill="rgb(231,55,48)" fg:x="1043" fg:w="1"/><text x="85.3234%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="84.6656%" y="501" width="0.5710%" height="15" fill="rgb(227,42,18)" fg:x="1038" fg:w="7"/><text x="84.9156%" y="511.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="84.6656%" y="485" width="0.5710%" height="15" fill="rgb(217,2,27)" fg:x="1038" fg:w="7"/><text x="84.9156%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="84.6656%" y="469" width="0.5710%" height="15" fill="rgb(251,138,23)" fg:x="1038" fg:w="7"/><text x="84.9156%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.1550%" y="453" width="0.0816%" height="15" fill="rgb(226,184,11)" fg:x="1044" fg:w="1"/><text x="85.4050%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1550%" y="437" width="0.0816%" height="15" fill="rgb(242,142,12)" fg:x="1044" fg:w="1"/><text x="85.4050%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.1550%" y="421" width="0.0816%" height="15" fill="rgb(234,187,18)" fg:x="1044" fg:w="1"/><text x="85.4050%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1550%" y="405" width="0.0816%" height="15" fill="rgb(237,44,42)" fg:x="1044" fg:w="1"/><text x="85.4050%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.1550%" y="389" width="0.0816%" height="15" fill="rgb(211,90,23)" fg:x="1044" fg:w="1"/><text x="85.4050%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2365%" y="421" width="0.0816%" height="15" fill="rgb(207,81,18)" fg:x="1045" fg:w="1"/><text x="85.4865%" y="431.50"></text></g><g><title>plugins_core::build::Build::holding (36 samples, 2.94%)</title><rect x="82.4633%" y="581" width="2.9364%" height="15" fill="rgb(222,107,28)" fg:x="1011" fg:w="36"/><text x="82.7133%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_container (17 samples, 1.39%)</title><rect x="84.0131%" y="565" width="1.3866%" height="15" fill="rgb(237,83,52)" fg:x="1030" fg:w="17"/><text x="84.2631%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.73%)</title><rect x="84.6656%" y="549" width="0.7341%" height="15" fill="rgb(208,67,11)" fg:x="1038" fg:w="9"/><text x="84.9156%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.73%)</title><rect x="84.6656%" y="533" width="0.7341%" height="15" fill="rgb(249,157,49)" fg:x="1038" fg:w="9"/><text x="84.9156%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.73%)</title><rect x="84.6656%" y="517" width="0.7341%" height="15" fill="rgb(243,200,1)" fg:x="1038" fg:w="9"/><text x="84.9156%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.2365%" y="501" width="0.1631%" height="15" fill="rgb(225,162,37)" fg:x="1045" fg:w="2"/><text x="85.4865%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.2365%" y="485" width="0.1631%" height="15" fill="rgb(242,92,13)" fg:x="1045" fg:w="2"/><text x="85.4865%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.2365%" y="469" width="0.1631%" height="15" fill="rgb(220,43,36)" fg:x="1045" fg:w="2"/><text x="85.4865%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.2365%" y="453" width="0.1631%" height="15" fill="rgb(213,165,48)" fg:x="1045" fg:w="2"/><text x="85.4865%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.2365%" y="437" width="0.1631%" height="15" fill="rgb(227,200,9)" fg:x="1045" fg:w="2"/><text x="85.4865%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3181%" y="421" width="0.0816%" height="15" fill="rgb(221,222,28)" fg:x="1046" fg:w="1"/><text x="85.5681%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="85.3997%" y="533" width="0.0816%" height="15" fill="rgb(223,142,26)" fg:x="1047" fg:w="1"/><text x="85.6497%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="85.3997%" y="517" width="0.0816%" height="15" fill="rgb(243,46,9)" fg:x="1047" fg:w="1"/><text x="85.6497%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.3997%" y="501" width="0.0816%" height="15" fill="rgb(250,56,11)" fg:x="1047" fg:w="1"/><text x="85.6497%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="85.3997%" y="549" width="0.1631%" height="15" fill="rgb(229,113,5)" fg:x="1047" fg:w="2"/><text x="85.6497%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.4812%" y="533" width="0.0816%" height="15" fill="rgb(244,108,28)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.4812%" y="517" width="0.0816%" height="15" fill="rgb(242,119,50)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.4812%" y="501" width="0.0816%" height="15" fill="rgb(224,164,23)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4812%" y="485" width="0.0816%" height="15" fill="rgb(214,227,44)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.4812%" y="469" width="0.0816%" height="15" fill="rgb(238,202,4)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.4812%" y="453" width="0.0816%" height="15" fill="rgb(213,190,30)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.4812%" y="437" width="0.0816%" height="15" fill="rgb(239,15,2)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4812%" y="421" width="0.0816%" height="15" fill="rgb(249,229,4)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.4812%" y="405" width="0.0816%" height="15" fill="rgb(239,75,44)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="85.4812%" y="389" width="0.0816%" height="15" fill="rgb(251,206,23)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.4812%" y="373" width="0.0816%" height="15" fill="rgb(215,208,0)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4812%" y="357" width="0.0816%" height="15" fill="rgb(230,75,50)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.4812%" y="341" width="0.0816%" height="15" fill="rgb(246,180,39)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4812%" y="325" width="0.0816%" height="15" fill="rgb(249,175,24)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4812%" y="309" width="0.0816%" height="15" fill="rgb(247,176,22)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.4812%" y="293" width="0.0816%" height="15" fill="rgb(241,100,24)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.4812%" y="277" width="0.0816%" height="15" fill="rgb(233,4,35)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.4812%" y="261" width="0.0816%" height="15" fill="rgb(211,164,46)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.4812%" y="245" width="0.0816%" height="15" fill="rgb(242,99,53)" fg:x="1048" fg:w="1"/><text x="85.7312%" y="255.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="85.5628%" y="533" width="0.2447%" height="15" fill="rgb(243,45,33)" fg:x="1049" fg:w="3"/><text x="85.8128%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="85.5628%" y="517" width="0.2447%" height="15" fill="rgb(217,55,21)" fg:x="1049" fg:w="3"/><text x="85.8128%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="85.5628%" y="501" width="0.2447%" height="15" fill="rgb(245,145,46)" fg:x="1049" fg:w="3"/><text x="85.8128%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.6444%" y="485" width="0.1631%" height="15" fill="rgb(215,112,45)" fg:x="1050" fg:w="2"/><text x="85.8944%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.6444%" y="469" width="0.1631%" height="15" fill="rgb(228,104,16)" fg:x="1050" fg:w="2"/><text x="85.8944%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.6444%" y="453" width="0.1631%" height="15" fill="rgb(239,186,38)" fg:x="1050" fg:w="2"/><text x="85.8944%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.7259%" y="437" width="0.0816%" height="15" fill="rgb(228,38,35)" fg:x="1051" fg:w="1"/><text x="85.9759%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.49%)</title><rect x="85.3997%" y="581" width="0.4894%" height="15" fill="rgb(251,42,40)" fg:x="1047" fg:w="6"/><text x="85.6497%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="85.3997%" y="565" width="0.4894%" height="15" fill="rgb(210,51,19)" fg:x="1047" fg:w="6"/><text x="85.6497%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="85.5628%" y="549" width="0.3263%" height="15" fill="rgb(236,94,42)" fg:x="1049" fg:w="4"/><text x="85.8128%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="85.8075%" y="533" width="0.0816%" height="15" fill="rgb(239,167,16)" fg:x="1052" fg:w="1"/><text x="86.0575%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8075%" y="517" width="0.0816%" height="15" fill="rgb(252,175,31)" fg:x="1052" fg:w="1"/><text x="86.0575%" y="527.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="85.8891%" y="549" width="0.0816%" height="15" fill="rgb(206,166,30)" fg:x="1053" fg:w="1"/><text x="86.1391%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="85.9706%" y="501" width="0.0816%" height="15" fill="rgb(206,209,37)" fg:x="1054" fg:w="1"/><text x="86.2206%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="85.8891%" y="581" width="0.2447%" height="15" fill="rgb(226,91,4)" fg:x="1053" fg:w="3"/><text x="86.1391%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="85.8891%" y="565" width="0.2447%" height="15" fill="rgb(222,167,0)" fg:x="1053" fg:w="3"/><text x="86.1391%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="85.9706%" y="549" width="0.1631%" height="15" fill="rgb(211,70,14)" fg:x="1054" fg:w="2"/><text x="86.2206%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.9706%" y="533" width="0.1631%" height="15" fill="rgb(214,84,42)" fg:x="1054" fg:w="2"/><text x="86.2206%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="85.9706%" y="517" width="0.1631%" height="15" fill="rgb(235,157,37)" fg:x="1054" fg:w="2"/><text x="86.2206%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.0522%" y="501" width="0.0816%" height="15" fill="rgb(225,13,6)" fg:x="1055" fg:w="1"/><text x="86.3022%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="86.0522%" y="485" width="0.0816%" height="15" fill="rgb(205,202,1)" fg:x="1055" fg:w="1"/><text x="86.3022%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.0522%" y="469" width="0.0816%" height="15" fill="rgb(232,195,26)" fg:x="1055" fg:w="1"/><text x="86.3022%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.0522%" y="453" width="0.0816%" height="15" fill="rgb(208,102,26)" fg:x="1055" fg:w="1"/><text x="86.3022%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="86.0522%" y="437" width="0.0816%" height="15" fill="rgb(215,41,39)" fg:x="1055" fg:w="1"/><text x="86.3022%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.0522%" y="421" width="0.0816%" height="15" fill="rgb(247,139,11)" fg:x="1055" fg:w="1"/><text x="86.3022%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.0522%" y="405" width="0.0816%" height="15" fill="rgb(243,99,6)" fg:x="1055" fg:w="1"/><text x="86.3022%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1338%" y="469" width="0.0816%" height="15" fill="rgb(230,168,48)" fg:x="1056" fg:w="1"/><text x="86.3838%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="86.1338%" y="565" width="0.1631%" height="15" fill="rgb(238,227,13)" fg:x="1056" fg:w="2"/><text x="86.3838%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="86.1338%" y="549" width="0.1631%" height="15" fill="rgb(209,109,13)" fg:x="1056" fg:w="2"/><text x="86.3838%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="86.1338%" y="533" width="0.1631%" height="15" fill="rgb(228,195,1)" fg:x="1056" fg:w="2"/><text x="86.3838%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.1338%" y="517" width="0.1631%" height="15" fill="rgb(230,218,0)" fg:x="1056" fg:w="2"/><text x="86.3838%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.1338%" y="501" width="0.1631%" height="15" fill="rgb(206,1,45)" fg:x="1056" fg:w="2"/><text x="86.3838%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.1338%" y="485" width="0.1631%" height="15" fill="rgb(209,124,26)" fg:x="1056" fg:w="2"/><text x="86.3838%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.2153%" y="469" width="0.0816%" height="15" fill="rgb(220,59,8)" fg:x="1057" fg:w="1"/><text x="86.4653%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="86.2969%" y="469" width="0.0816%" height="15" fill="rgb(251,41,37)" fg:x="1058" fg:w="1"/><text x="86.5469%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.2969%" y="517" width="0.1631%" height="15" fill="rgb(239,152,21)" fg:x="1058" fg:w="2"/><text x="86.5469%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.2969%" y="501" width="0.1631%" height="15" fill="rgb(226,32,1)" fg:x="1058" fg:w="2"/><text x="86.5469%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.2969%" y="485" width="0.1631%" height="15" fill="rgb(230,154,36)" fg:x="1058" fg:w="2"/><text x="86.5469%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.3785%" y="469" width="0.0816%" height="15" fill="rgb(208,228,43)" fg:x="1059" fg:w="1"/><text x="86.6285%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3785%" y="453" width="0.0816%" height="15" fill="rgb(214,203,3)" fg:x="1059" fg:w="1"/><text x="86.6285%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.3785%" y="437" width="0.0816%" height="15" fill="rgb(207,149,29)" fg:x="1059" fg:w="1"/><text x="86.6285%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.33%)</title><rect x="86.2969%" y="549" width="0.3263%" height="15" fill="rgb(250,105,7)" fg:x="1058" fg:w="4"/><text x="86.5469%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.33%)</title><rect x="86.2969%" y="533" width="0.3263%" height="15" fill="rgb(232,222,16)" fg:x="1058" fg:w="4"/><text x="86.5469%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.4600%" y="517" width="0.1631%" height="15" fill="rgb(209,32,24)" fg:x="1060" fg:w="2"/><text x="86.7100%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.4600%" y="501" width="0.1631%" height="15" fill="rgb(225,13,6)" fg:x="1060" fg:w="2"/><text x="86.7100%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.4600%" y="485" width="0.1631%" height="15" fill="rgb(245,226,26)" fg:x="1060" fg:w="2"/><text x="86.7100%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.5416%" y="469" width="0.0816%" height="15" fill="rgb(229,178,27)" fg:x="1061" fg:w="1"/><text x="86.7916%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.5416%" y="453" width="0.0816%" height="15" fill="rgb(205,227,28)" fg:x="1061" fg:w="1"/><text x="86.7916%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.5416%" y="437" width="0.0816%" height="15" fill="rgb(210,191,45)" fg:x="1061" fg:w="1"/><text x="86.7916%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.5416%" y="421" width="0.0816%" height="15" fill="rgb(206,124,16)" fg:x="1061" fg:w="1"/><text x="86.7916%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.6232%" y="549" width="0.0816%" height="15" fill="rgb(210,162,0)" fg:x="1062" fg:w="1"/><text x="86.8732%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6232%" y="533" width="0.0816%" height="15" fill="rgb(211,54,38)" fg:x="1062" fg:w="1"/><text x="86.8732%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6232%" y="517" width="0.0816%" height="15" fill="rgb(248,192,3)" fg:x="1062" fg:w="1"/><text x="86.8732%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6232%" y="501" width="0.0816%" height="15" fill="rgb(233,187,18)" fg:x="1062" fg:w="1"/><text x="86.8732%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6232%" y="485" width="0.0816%" height="15" fill="rgb(237,208,14)" fg:x="1062" fg:w="1"/><text x="86.8732%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6232%" y="469" width="0.0816%" height="15" fill="rgb(212,77,1)" fg:x="1062" fg:w="1"/><text x="86.8732%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.7047%" y="389" width="0.0816%" height="15" fill="rgb(210,163,22)" fg:x="1063" fg:w="1"/><text x="86.9547%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7863%" y="357" width="0.0816%" height="15" fill="rgb(250,58,28)" fg:x="1064" fg:w="1"/><text x="87.0363%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="86.7863%" y="341" width="0.0816%" height="15" fill="rgb(254,28,41)" fg:x="1064" fg:w="1"/><text x="87.0363%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.7863%" y="325" width="0.0816%" height="15" fill="rgb(237,162,36)" fg:x="1064" fg:w="1"/><text x="87.0363%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="86.7047%" y="501" width="0.2447%" height="15" fill="rgb(232,56,6)" fg:x="1063" fg:w="3"/><text x="86.9547%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="86.7047%" y="485" width="0.2447%" height="15" fill="rgb(216,127,42)" fg:x="1063" fg:w="3"/><text x="86.9547%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="86.7047%" y="469" width="0.2447%" height="15" fill="rgb(241,69,15)" fg:x="1063" fg:w="3"/><text x="86.9547%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="86.7047%" y="453" width="0.2447%" height="15" fill="rgb(227,180,19)" fg:x="1063" fg:w="3"/><text x="86.9547%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="86.7047%" y="437" width="0.2447%" height="15" fill="rgb(231,188,29)" fg:x="1063" fg:w="3"/><text x="86.9547%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="86.7047%" y="421" width="0.2447%" height="15" fill="rgb(224,176,27)" fg:x="1063" fg:w="3"/><text x="86.9547%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="86.7047%" y="405" width="0.2447%" height="15" fill="rgb(249,214,19)" fg:x="1063" fg:w="3"/><text x="86.9547%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.7863%" y="389" width="0.1631%" height="15" fill="rgb(240,0,4)" fg:x="1064" fg:w="2"/><text x="87.0363%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.7863%" y="373" width="0.1631%" height="15" fill="rgb(233,28,41)" fg:x="1064" fg:w="2"/><text x="87.0363%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.8679%" y="357" width="0.0816%" height="15" fill="rgb(220,90,51)" fg:x="1065" fg:w="1"/><text x="87.1179%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8679%" y="341" width="0.0816%" height="15" fill="rgb(250,52,22)" fg:x="1065" fg:w="1"/><text x="87.1179%" y="351.50"></text></g><g><title>plugins_core::build::Build::occupying (11 samples, 0.90%)</title><rect x="86.1338%" y="581" width="0.8972%" height="15" fill="rgb(231,152,36)" fg:x="1056" fg:w="11"/><text x="86.3838%" y="591.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.73%)</title><rect x="86.2969%" y="565" width="0.7341%" height="15" fill="rgb(250,218,4)" fg:x="1058" fg:w="9"/><text x="86.5469%" y="575.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.33%)</title><rect x="86.7047%" y="549" width="0.3263%" height="15" fill="rgb(210,38,21)" fg:x="1063" fg:w="4"/><text x="86.9547%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.33%)</title><rect x="86.7047%" y="533" width="0.3263%" height="15" fill="rgb(230,75,13)" fg:x="1063" fg:w="4"/><text x="86.9547%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.33%)</title><rect x="86.7047%" y="517" width="0.3263%" height="15" fill="rgb(250,68,53)" fg:x="1063" fg:w="4"/><text x="86.9547%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.9494%" y="501" width="0.0816%" height="15" fill="rgb(250,210,16)" fg:x="1066" fg:w="1"/><text x="87.1994%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.9494%" y="485" width="0.0816%" height="15" fill="rgb(240,132,5)" fg:x="1066" fg:w="1"/><text x="87.1994%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.9494%" y="469" width="0.0816%" height="15" fill="rgb(222,148,48)" fg:x="1066" fg:w="1"/><text x="87.1994%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9494%" y="453" width="0.0816%" height="15" fill="rgb(247,181,24)" fg:x="1066" fg:w="1"/><text x="87.1994%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9494%" y="437" width="0.0816%" height="15" fill="rgb(239,5,31)" fg:x="1066" fg:w="1"/><text x="87.1994%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9494%" y="421" width="0.0816%" height="15" fill="rgb(241,152,38)" fg:x="1066" fg:w="1"/><text x="87.1994%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9494%" y="405" width="0.0816%" height="15" fill="rgb(246,200,37)" fg:x="1066" fg:w="1"/><text x="87.1994%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9494%" y="389" width="0.0816%" height="15" fill="rgb(243,210,26)" fg:x="1066" fg:w="1"/><text x="87.1994%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0310%" y="469" width="0.0816%" height="15" fill="rgb(222,22,22)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0310%" y="453" width="0.0816%" height="15" fill="rgb(208,129,28)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0310%" y="437" width="0.0816%" height="15" fill="rgb(254,169,28)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.0310%" y="421" width="0.0816%" height="15" fill="rgb(225,45,17)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.0310%" y="405" width="0.0816%" height="15" fill="rgb(232,199,2)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.0310%" y="389" width="0.0816%" height="15" fill="rgb(235,33,40)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0310%" y="373" width="0.0816%" height="15" fill="rgb(237,89,50)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0310%" y="357" width="0.0816%" height="15" fill="rgb(238,126,5)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.0310%" y="341" width="0.0816%" height="15" fill="rgb(247,214,42)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.0310%" y="325" width="0.0816%" height="15" fill="rgb(238,60,45)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.0310%" y="309" width="0.0816%" height="15" fill="rgb(225,69,44)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.0310%" y="293" width="0.0816%" height="15" fill="rgb(241,13,44)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0310%" y="277" width="0.0816%" height="15" fill="rgb(227,121,22)" fg:x="1067" fg:w="1"/><text x="87.2810%" y="287.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.0310%" y="501" width="0.1631%" height="15" fill="rgb(231,160,23)" fg:x="1067" fg:w="2"/><text x="87.2810%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.0310%" y="485" width="0.1631%" height="15" fill="rgb(250,179,43)" fg:x="1067" fg:w="2"/><text x="87.2810%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1126%" y="469" width="0.0816%" height="15" fill="rgb(233,54,46)" fg:x="1068" fg:w="1"/><text x="87.3626%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1126%" y="453" width="0.0816%" height="15" fill="rgb(247,120,42)" fg:x="1068" fg:w="1"/><text x="87.3626%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.1126%" y="437" width="0.0816%" height="15" fill="rgb(221,219,12)" fg:x="1068" fg:w="1"/><text x="87.3626%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1941%" y="437" width="0.0816%" height="15" fill="rgb(211,126,8)" fg:x="1069" fg:w="1"/><text x="87.4441%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1941%" y="421" width="0.0816%" height="15" fill="rgb(218,154,33)" fg:x="1069" fg:w="1"/><text x="87.4441%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1941%" y="405" width="0.0816%" height="15" fill="rgb(212,199,16)" fg:x="1069" fg:w="1"/><text x="87.4441%" y="415.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="87.0310%" y="533" width="0.3263%" height="15" fill="rgb(236,215,46)" fg:x="1067" fg:w="4"/><text x="87.2810%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="87.0310%" y="517" width="0.3263%" height="15" fill="rgb(232,32,22)" fg:x="1067" fg:w="4"/><text x="87.2810%" y="527.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="87.1941%" y="501" width="0.1631%" height="15" fill="rgb(234,79,15)" fg:x="1069" fg:w="2"/><text x="87.4441%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="87.1941%" y="485" width="0.1631%" height="15" fill="rgb(235,187,47)" fg:x="1069" fg:w="2"/><text x="87.4441%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="87.1941%" y="469" width="0.1631%" height="15" fill="rgb(244,69,37)" fg:x="1069" fg:w="2"/><text x="87.4441%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.1941%" y="453" width="0.1631%" height="15" fill="rgb(249,140,25)" fg:x="1069" fg:w="2"/><text x="87.4441%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.2757%" y="437" width="0.0816%" height="15" fill="rgb(213,69,8)" fg:x="1070" fg:w="1"/><text x="87.5257%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2757%" y="421" width="0.0816%" height="15" fill="rgb(220,136,2)" fg:x="1070" fg:w="1"/><text x="87.5257%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.2757%" y="405" width="0.0816%" height="15" fill="rgb(237,50,36)" fg:x="1070" fg:w="1"/><text x="87.5257%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.2757%" y="389" width="0.0816%" height="15" fill="rgb(226,18,11)" fg:x="1070" fg:w="1"/><text x="87.5257%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2757%" y="373" width="0.0816%" height="15" fill="rgb(243,156,2)" fg:x="1070" fg:w="1"/><text x="87.5257%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2757%" y="357" width="0.0816%" height="15" fill="rgb(218,8,34)" fg:x="1070" fg:w="1"/><text x="87.5257%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2757%" y="341" width="0.0816%" height="15" fill="rgb(250,94,35)" fg:x="1070" fg:w="1"/><text x="87.5257%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2757%" y="325" width="0.0816%" height="15" fill="rgb(229,127,21)" fg:x="1070" fg:w="1"/><text x="87.5257%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="87.0310%" y="565" width="0.4078%" height="15" fill="rgb(234,49,5)" fg:x="1067" fg:w="5"/><text x="87.2810%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="87.0310%" y="549" width="0.4078%" height="15" fill="rgb(248,12,16)" fg:x="1067" fg:w="5"/><text x="87.2810%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="87.3573%" y="533" width="0.0816%" height="15" fill="rgb(208,220,31)" fg:x="1071" fg:w="1"/><text x="87.6073%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (127 samples, 10.36%)</title><rect x="77.1615%" y="597" width="10.3589%" height="15" fill="rgb(243,184,0)" fg:x="946" fg:w="127"/><text x="77.4115%" y="607.50">plugins_core::b..</text></g><g><title>plugins_core::build::Build::with_username (6 samples, 0.49%)</title><rect x="87.0310%" y="581" width="0.4894%" height="15" fill="rgb(217,38,21)" fg:x="1067" fg:w="6"/><text x="87.2810%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="87.4388%" y="565" width="0.0816%" height="15" fill="rgb(239,120,45)" fg:x="1072" fg:w="1"/><text x="87.6888%" y="575.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="87.4388%" y="549" width="0.0816%" height="15" fill="rgb(235,33,2)" fg:x="1072" fg:w="1"/><text x="87.6888%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.4388%" y="533" width="0.0816%" height="15" fill="rgb(249,161,5)" fg:x="1072" fg:w="1"/><text x="87.6888%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="87.5204%" y="501" width="0.0816%" height="15" fill="rgb(250,165,48)" fg:x="1073" fg:w="1"/><text x="87.7704%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="87.5204%" y="517" width="0.1631%" height="15" fill="rgb(221,23,45)" fg:x="1073" fg:w="2"/><text x="87.7704%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.6020%" y="501" width="0.0816%" height="15" fill="rgb(217,108,46)" fg:x="1074" fg:w="1"/><text x="87.8520%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.6020%" y="485" width="0.0816%" height="15" fill="rgb(254,26,35)" fg:x="1074" fg:w="1"/><text x="87.8520%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.6020%" y="469" width="0.0816%" height="15" fill="rgb(218,223,28)" fg:x="1074" fg:w="1"/><text x="87.8520%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6020%" y="453" width="0.0816%" height="15" fill="rgb(242,27,47)" fg:x="1074" fg:w="1"/><text x="87.8520%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="87.5204%" y="565" width="0.2447%" height="15" fill="rgb(218,39,35)" fg:x="1073" fg:w="3"/><text x="87.7704%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="87.5204%" y="549" width="0.2447%" height="15" fill="rgb(232,127,16)" fg:x="1073" fg:w="3"/><text x="87.7704%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="87.5204%" y="533" width="0.2447%" height="15" fill="rgb(231,219,51)" fg:x="1073" fg:w="3"/><text x="87.7704%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="87.6835%" y="517" width="0.0816%" height="15" fill="rgb(217,220,46)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.6835%" y="501" width="0.0816%" height="15" fill="rgb(230,75,1)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.6835%" y="485" width="0.0816%" height="15" fill="rgb(218,2,8)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.6835%" y="469" width="0.0816%" height="15" fill="rgb(206,111,30)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6835%" y="453" width="0.0816%" height="15" fill="rgb(209,135,6)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.6835%" y="437" width="0.0816%" height="15" fill="rgb(205,169,10)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6835%" y="421" width="0.0816%" height="15" fill="rgb(212,204,38)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.6835%" y="405" width="0.0816%" height="15" fill="rgb(205,199,14)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6835%" y="389" width="0.0816%" height="15" fill="rgb(212,4,6)" fg:x="1075" fg:w="1"/><text x="87.9335%" y="399.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (201 samples, 16.39%)</title><rect x="71.5334%" y="613" width="16.3948%" height="15" fill="rgb(250,15,10)" fg:x="877" fg:w="201"/><text x="71.7834%" y="623.50">&lt;tests::HoldingKeyInVesse..</text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.41%)</title><rect x="87.5204%" y="597" width="0.4078%" height="15" fill="rgb(212,49,51)" fg:x="1073" fg:w="5"/><text x="87.7704%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.41%)</title><rect x="87.5204%" y="581" width="0.4078%" height="15" fill="rgb(235,21,9)" fg:x="1073" fg:w="5"/><text x="87.7704%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="87.7651%" y="565" width="0.1631%" height="15" fill="rgb(251,31,32)" fg:x="1076" fg:w="2"/><text x="88.0151%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="87.7651%" y="549" width="0.1631%" height="15" fill="rgb(246,23,9)" fg:x="1076" fg:w="2"/><text x="88.0151%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="87.7651%" y="533" width="0.1631%" height="15" fill="rgb(225,216,14)" fg:x="1076" fg:w="2"/><text x="88.0151%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="87.7651%" y="517" width="0.1631%" height="15" fill="rgb(215,200,26)" fg:x="1076" fg:w="2"/><text x="88.0151%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="87.7651%" y="501" width="0.1631%" height="15" fill="rgb(237,130,47)" fg:x="1076" fg:w="2"/><text x="88.0151%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.7651%" y="485" width="0.1631%" height="15" fill="rgb(247,74,14)" fg:x="1076" fg:w="2"/><text x="88.0151%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.8467%" y="469" width="0.0816%" height="15" fill="rgb(254,97,46)" fg:x="1077" fg:w="1"/><text x="88.0967%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.8467%" y="453" width="0.0816%" height="15" fill="rgb(234,191,1)" fg:x="1077" fg:w="1"/><text x="88.0967%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.8467%" y="437" width="0.0816%" height="15" fill="rgb(215,165,14)" fg:x="1077" fg:w="1"/><text x="88.0967%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.0098%" y="597" width="0.0816%" height="15" fill="rgb(230,182,6)" fg:x="1079" fg:w="1"/><text x="88.2598%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.0098%" y="581" width="0.0816%" height="15" fill="rgb(210,127,39)" fg:x="1079" fg:w="1"/><text x="88.2598%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.0098%" y="565" width="0.0816%" height="15" fill="rgb(223,212,51)" fg:x="1079" fg:w="1"/><text x="88.2598%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.0098%" y="549" width="0.0816%" height="15" fill="rgb(226,176,43)" fg:x="1079" fg:w="1"/><text x="88.2598%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.0098%" y="533" width="0.0816%" height="15" fill="rgb(222,155,4)" fg:x="1079" fg:w="1"/><text x="88.2598%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="88.0098%" y="517" width="0.0816%" height="15" fill="rgb(215,149,7)" fg:x="1079" fg:w="1"/><text x="88.2598%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="88.0098%" y="501" width="0.0816%" height="15" fill="rgb(252,199,23)" fg:x="1079" fg:w="1"/><text x="88.2598%" y="511.50"></text></g><g><title>core::str::converts::from_utf8_unchecked (1 samples, 0.08%)</title><rect x="88.0098%" y="485" width="0.0816%" height="15" fill="rgb(245,52,29)" fg:x="1079" fg:w="1"/><text x="88.2598%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="88.1729%" y="581" width="0.0816%" height="15" fill="rgb(221,228,19)" fg:x="1081" fg:w="1"/><text x="88.4229%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.1729%" y="565" width="0.0816%" height="15" fill="rgb(253,101,6)" fg:x="1081" fg:w="1"/><text x="88.4229%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="88.2545%" y="549" width="0.0816%" height="15" fill="rgb(211,130,8)" fg:x="1082" fg:w="1"/><text x="88.5045%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.2545%" y="533" width="0.0816%" height="15" fill="rgb(238,37,53)" fg:x="1082" fg:w="1"/><text x="88.5045%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="88.2545%" y="581" width="0.1631%" height="15" fill="rgb(235,145,5)" fg:x="1082" fg:w="2"/><text x="88.5045%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="88.2545%" y="565" width="0.1631%" height="15" fill="rgb(244,12,43)" fg:x="1082" fg:w="2"/><text x="88.5045%" y="575.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="88.3361%" y="549" width="0.0816%" height="15" fill="rgb(246,195,24)" fg:x="1083" fg:w="1"/><text x="88.5861%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="88.4176%" y="581" width="0.0816%" height="15" fill="rgb(235,163,6)" fg:x="1084" fg:w="1"/><text x="88.6676%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4992%" y="549" width="0.0816%" height="15" fill="rgb(236,218,17)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4992%" y="533" width="0.0816%" height="15" fill="rgb(235,12,38)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.4992%" y="517" width="0.0816%" height="15" fill="rgb(225,195,33)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.4992%" y="501" width="0.0816%" height="15" fill="rgb(238,54,35)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.4992%" y="485" width="0.0816%" height="15" fill="rgb(238,33,7)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4992%" y="469" width="0.0816%" height="15" fill="rgb(245,5,14)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4992%" y="453" width="0.0816%" height="15" fill="rgb(251,95,31)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.4992%" y="437" width="0.0816%" height="15" fill="rgb(222,15,46)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.4992%" y="421" width="0.0816%" height="15" fill="rgb(226,182,24)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.4992%" y="405" width="0.0816%" height="15" fill="rgb(229,105,41)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.4992%" y="389" width="0.0816%" height="15" fill="rgb(216,99,53)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4992%" y="373" width="0.0816%" height="15" fill="rgb(253,26,20)" fg:x="1085" fg:w="1"/><text x="88.7492%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.6623%" y="533" width="0.0816%" height="15" fill="rgb(249,155,28)" fg:x="1087" fg:w="1"/><text x="88.9123%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="88.7439%" y="533" width="0.3263%" height="15" fill="rgb(241,221,2)" fg:x="1088" fg:w="4"/><text x="88.9939%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="88.7439%" y="517" width="0.3263%" height="15" fill="rgb(219,124,6)" fg:x="1088" fg:w="4"/><text x="88.9939%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="88.8254%" y="501" width="0.2447%" height="15" fill="rgb(233,37,6)" fg:x="1089" fg:w="3"/><text x="89.0754%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="88.8254%" y="485" width="0.2447%" height="15" fill="rgb(238,20,14)" fg:x="1089" fg:w="3"/><text x="89.0754%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="88.8254%" y="469" width="0.2447%" height="15" fill="rgb(232,106,27)" fg:x="1089" fg:w="3"/><text x="89.0754%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="88.9070%" y="453" width="0.1631%" height="15" fill="rgb(246,157,24)" fg:x="1090" fg:w="2"/><text x="89.1570%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.9886%" y="437" width="0.0816%" height="15" fill="rgb(214,153,10)" fg:x="1091" fg:w="1"/><text x="89.2386%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.9886%" y="421" width="0.0816%" height="15" fill="rgb(212,94,6)" fg:x="1091" fg:w="1"/><text x="89.2386%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.1517%" y="517" width="0.0816%" height="15" fill="rgb(254,25,27)" fg:x="1093" fg:w="1"/><text x="89.4017%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.1517%" y="501" width="0.0816%" height="15" fill="rgb(250,43,52)" fg:x="1093" fg:w="1"/><text x="89.4017%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.1517%" y="485" width="0.0816%" height="15" fill="rgb(221,226,40)" fg:x="1093" fg:w="1"/><text x="89.4017%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.2333%" y="517" width="0.0816%" height="15" fill="rgb(235,162,34)" fg:x="1094" fg:w="1"/><text x="89.4833%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.2333%" y="501" width="0.0816%" height="15" fill="rgb(239,24,26)" fg:x="1094" fg:w="1"/><text x="89.4833%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.2333%" y="485" width="0.0816%" height="15" fill="rgb(244,226,11)" fg:x="1094" fg:w="1"/><text x="89.4833%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="89.2333%" y="469" width="0.0816%" height="15" fill="rgb(225,23,10)" fg:x="1094" fg:w="1"/><text x="89.4833%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.3964%" y="501" width="0.0816%" height="15" fill="rgb(249,125,6)" fg:x="1096" fg:w="1"/><text x="89.6464%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.3964%" y="485" width="0.0816%" height="15" fill="rgb(246,212,12)" fg:x="1096" fg:w="1"/><text x="89.6464%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.4780%" y="501" width="0.0816%" height="15" fill="rgb(230,43,32)" fg:x="1097" fg:w="1"/><text x="89.7280%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.4780%" y="485" width="0.0816%" height="15" fill="rgb(210,95,23)" fg:x="1097" fg:w="1"/><text x="89.7280%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.7227%" y="485" width="0.1631%" height="15" fill="rgb(229,103,33)" fg:x="1100" fg:w="2"/><text x="89.9727%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.7227%" y="469" width="0.1631%" height="15" fill="rgb(222,104,27)" fg:x="1100" fg:w="2"/><text x="89.9727%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.8858%" y="469" width="0.0816%" height="15" fill="rgb(239,221,23)" fg:x="1102" fg:w="1"/><text x="90.1358%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.8858%" y="453" width="0.0816%" height="15" fill="rgb(222,98,21)" fg:x="1102" fg:w="1"/><text x="90.1358%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.8858%" y="437" width="0.0816%" height="15" fill="rgb(231,101,20)" fg:x="1102" fg:w="1"/><text x="90.1358%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.8858%" y="421" width="0.0816%" height="15" fill="rgb(215,150,22)" fg:x="1102" fg:w="1"/><text x="90.1358%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="89.9674%" y="453" width="0.1631%" height="15" fill="rgb(248,3,34)" fg:x="1103" fg:w="2"/><text x="90.2174%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.9674%" y="437" width="0.1631%" height="15" fill="rgb(220,141,21)" fg:x="1103" fg:w="2"/><text x="90.2174%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="89.5595%" y="501" width="0.7341%" height="15" fill="rgb(223,41,48)" fg:x="1098" fg:w="9"/><text x="89.8095%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="89.8858%" y="485" width="0.4078%" height="15" fill="rgb(247,12,5)" fg:x="1102" fg:w="5"/><text x="90.1358%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="89.9674%" y="469" width="0.3263%" height="15" fill="rgb(206,173,10)" fg:x="1103" fg:w="4"/><text x="90.2174%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.1305%" y="453" width="0.1631%" height="15" fill="rgb(233,214,37)" fg:x="1105" fg:w="2"/><text x="90.3805%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="90.1305%" y="437" width="0.1631%" height="15" fill="rgb(238,86,43)" fg:x="1105" fg:w="2"/><text x="90.3805%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.1305%" y="421" width="0.1631%" height="15" fill="rgb(212,182,8)" fg:x="1105" fg:w="2"/><text x="90.3805%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.06%)</title><rect x="89.3148%" y="517" width="1.0604%" height="15" fill="rgb(240,91,47)" fg:x="1095" fg:w="13"/><text x="89.5648%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.2936%" y="501" width="0.0816%" height="15" fill="rgb(209,138,26)" fg:x="1107" fg:w="1"/><text x="90.5436%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.2936%" y="485" width="0.0816%" height="15" fill="rgb(231,163,20)" fg:x="1107" fg:w="1"/><text x="90.5436%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.2936%" y="469" width="0.0816%" height="15" fill="rgb(214,91,54)" fg:x="1107" fg:w="1"/><text x="90.5436%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (25 samples, 2.04%)</title><rect x="88.5808%" y="549" width="2.0392%" height="15" fill="rgb(230,32,17)" fg:x="1086" fg:w="25"/><text x="88.8308%" y="559.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.55%)</title><rect x="89.0701%" y="533" width="1.5498%" height="15" fill="rgb(231,34,34)" fg:x="1092" fg:w="19"/><text x="89.3201%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="90.3752%" y="517" width="0.2447%" height="15" fill="rgb(224,228,27)" fg:x="1108" fg:w="3"/><text x="90.6252%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="90.3752%" y="501" width="0.2447%" height="15" fill="rgb(219,35,40)" fg:x="1108" fg:w="3"/><text x="90.6252%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="90.3752%" y="485" width="0.2447%" height="15" fill="rgb(234,42,8)" fg:x="1108" fg:w="3"/><text x="90.6252%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="90.3752%" y="469" width="0.2447%" height="15" fill="rgb(226,75,22)" fg:x="1108" fg:w="3"/><text x="90.6252%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="90.4568%" y="453" width="0.1631%" height="15" fill="rgb(242,203,28)" fg:x="1109" fg:w="2"/><text x="90.7068%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.5383%" y="437" width="0.0816%" height="15" fill="rgb(221,3,9)" fg:x="1110" fg:w="1"/><text x="90.7883%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6199%" y="517" width="0.0816%" height="15" fill="rgb(214,34,31)" fg:x="1111" fg:w="1"/><text x="90.8699%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7015%" y="501" width="0.0816%" height="15" fill="rgb(252,119,15)" fg:x="1112" fg:w="1"/><text x="90.9515%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.7830%" y="469" width="0.0816%" height="15" fill="rgb(244,224,31)" fg:x="1113" fg:w="1"/><text x="91.0330%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7830%" y="453" width="0.0816%" height="15" fill="rgb(215,8,51)" fg:x="1113" fg:w="1"/><text x="91.0330%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="90.6199%" y="549" width="0.3263%" height="15" fill="rgb(207,24,1)" fg:x="1111" fg:w="4"/><text x="90.8699%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.33%)</title><rect x="90.6199%" y="533" width="0.3263%" height="15" fill="rgb(245,90,0)" fg:x="1111" fg:w="4"/><text x="90.8699%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.7015%" y="517" width="0.2447%" height="15" fill="rgb(246,43,48)" fg:x="1112" fg:w="3"/><text x="90.9515%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.7830%" y="501" width="0.1631%" height="15" fill="rgb(252,218,10)" fg:x="1113" fg:w="2"/><text x="91.0330%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="90.7830%" y="485" width="0.1631%" height="15" fill="rgb(231,24,35)" fg:x="1113" fg:w="2"/><text x="91.0330%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.8646%" y="469" width="0.0816%" height="15" fill="rgb(225,66,19)" fg:x="1114" fg:w="1"/><text x="91.1146%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.8646%" y="453" width="0.0816%" height="15" fill="rgb(214,96,51)" fg:x="1114" fg:w="1"/><text x="91.1146%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.8646%" y="437" width="0.0816%" height="15" fill="rgb(251,151,47)" fg:x="1114" fg:w="1"/><text x="91.1146%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9462%" y="517" width="0.0816%" height="15" fill="rgb(236,79,14)" fg:x="1115" fg:w="1"/><text x="91.1962%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="91.1093%" y="437" width="0.0816%" height="15" fill="rgb(210,205,11)" fg:x="1117" fg:w="1"/><text x="91.3593%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.1093%" y="421" width="0.0816%" height="15" fill="rgb(233,142,53)" fg:x="1117" fg:w="1"/><text x="91.3593%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.1093%" y="405" width="0.0816%" height="15" fill="rgb(212,116,48)" fg:x="1117" fg:w="1"/><text x="91.3593%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="91.0277%" y="517" width="0.2447%" height="15" fill="rgb(234,55,33)" fg:x="1116" fg:w="3"/><text x="91.2777%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="91.0277%" y="501" width="0.2447%" height="15" fill="rgb(253,92,27)" fg:x="1116" fg:w="3"/><text x="91.2777%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="91.0277%" y="485" width="0.2447%" height="15" fill="rgb(220,7,35)" fg:x="1116" fg:w="3"/><text x="91.2777%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="91.0277%" y="469" width="0.2447%" height="15" fill="rgb(246,124,6)" fg:x="1116" fg:w="3"/><text x="91.2777%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="91.0277%" y="453" width="0.2447%" height="15" fill="rgb(212,111,51)" fg:x="1116" fg:w="3"/><text x="91.2777%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.1909%" y="437" width="0.0816%" height="15" fill="rgb(253,116,7)" fg:x="1118" fg:w="1"/><text x="91.4409%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1909%" y="421" width="0.0816%" height="15" fill="rgb(213,145,18)" fg:x="1118" fg:w="1"/><text x="91.4409%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.2724%" y="501" width="0.0816%" height="15" fill="rgb(219,149,7)" fg:x="1119" fg:w="1"/><text x="91.5224%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.2724%" y="485" width="0.0816%" height="15" fill="rgb(225,156,20)" fg:x="1119" fg:w="1"/><text x="91.5224%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.2724%" y="469" width="0.0816%" height="15" fill="rgb(211,98,19)" fg:x="1119" fg:w="1"/><text x="91.5224%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.2724%" y="453" width="0.0816%" height="15" fill="rgb(231,192,31)" fg:x="1119" fg:w="1"/><text x="91.5224%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.49%)</title><rect x="90.9462%" y="533" width="0.4894%" height="15" fill="rgb(249,95,19)" fg:x="1115" fg:w="6"/><text x="91.1962%" y="543.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="91.2724%" y="517" width="0.1631%" height="15" fill="rgb(247,101,36)" fg:x="1119" fg:w="2"/><text x="91.5224%" y="527.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="91.3540%" y="501" width="0.0816%" height="15" fill="rgb(221,45,43)" fg:x="1120" fg:w="1"/><text x="91.6040%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5987%" y="501" width="0.0816%" height="15" fill="rgb(220,42,1)" fg:x="1123" fg:w="1"/><text x="91.8487%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.6803%" y="501" width="0.1631%" height="15" fill="rgb(236,19,24)" fg:x="1124" fg:w="2"/><text x="91.9303%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7618%" y="485" width="0.0816%" height="15" fill="rgb(225,192,6)" fg:x="1125" fg:w="1"/><text x="92.0118%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.7618%" y="469" width="0.0816%" height="15" fill="rgb(242,30,19)" fg:x="1125" fg:w="1"/><text x="92.0118%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8434%" y="501" width="0.0816%" height="15" fill="rgb(240,36,6)" fg:x="1126" fg:w="1"/><text x="92.0934%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.8434%" y="485" width="0.0816%" height="15" fill="rgb(246,40,28)" fg:x="1126" fg:w="1"/><text x="92.0934%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8434%" y="469" width="0.0816%" height="15" fill="rgb(225,155,33)" fg:x="1126" fg:w="1"/><text x="92.0934%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.0065%" y="469" width="0.0816%" height="15" fill="rgb(240,65,18)" fg:x="1128" fg:w="1"/><text x="92.2565%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1697%" y="453" width="0.0816%" height="15" fill="rgb(217,0,48)" fg:x="1130" fg:w="1"/><text x="92.4197%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.2512%" y="421" width="0.0816%" height="15" fill="rgb(217,80,15)" fg:x="1131" fg:w="1"/><text x="92.5012%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="92.2512%" y="453" width="0.1631%" height="15" fill="rgb(253,43,51)" fg:x="1131" fg:w="2"/><text x="92.5012%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="92.2512%" y="437" width="0.1631%" height="15" fill="rgb(246,60,4)" fg:x="1131" fg:w="2"/><text x="92.5012%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="92.3328%" y="421" width="0.0816%" height="15" fill="rgb(230,40,54)" fg:x="1132" fg:w="1"/><text x="92.5828%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5775%" y="421" width="0.0816%" height="15" fill="rgb(208,20,44)" fg:x="1135" fg:w="1"/><text x="92.8275%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5775%" y="405" width="0.0816%" height="15" fill="rgb(230,22,22)" fg:x="1135" fg:w="1"/><text x="92.8275%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5775%" y="389" width="0.0816%" height="15" fill="rgb(207,57,4)" fg:x="1135" fg:w="1"/><text x="92.8275%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7406%" y="357" width="0.0816%" height="15" fill="rgb(242,130,33)" fg:x="1137" fg:w="1"/><text x="92.9906%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7406%" y="341" width="0.0816%" height="15" fill="rgb(218,66,43)" fg:x="1137" fg:w="1"/><text x="92.9906%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="92.5775%" y="437" width="0.3263%" height="15" fill="rgb(236,105,16)" fg:x="1135" fg:w="4"/><text x="92.8275%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="92.6591%" y="421" width="0.2447%" height="15" fill="rgb(230,46,15)" fg:x="1136" fg:w="3"/><text x="92.9091%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="92.6591%" y="405" width="0.2447%" height="15" fill="rgb(251,172,40)" fg:x="1136" fg:w="3"/><text x="92.9091%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="92.6591%" y="389" width="0.2447%" height="15" fill="rgb(225,217,32)" fg:x="1136" fg:w="3"/><text x="92.9091%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.7406%" y="373" width="0.1631%" height="15" fill="rgb(243,10,29)" fg:x="1137" fg:w="2"/><text x="92.9906%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.8222%" y="357" width="0.0816%" height="15" fill="rgb(207,102,10)" fg:x="1138" fg:w="1"/><text x="93.0722%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.90%)</title><rect x="92.0881%" y="469" width="0.8972%" height="15" fill="rgb(241,125,5)" fg:x="1129" fg:w="11"/><text x="92.3381%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="92.4144%" y="453" width="0.5710%" height="15" fill="rgb(230,125,29)" fg:x="1133" fg:w="7"/><text x="92.6644%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9038%" y="437" width="0.0816%" height="15" fill="rgb(223,65,44)" fg:x="1139" fg:w="1"/><text x="93.1538%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.06%)</title><rect x="92.0065%" y="485" width="1.0604%" height="15" fill="rgb(224,188,28)" fg:x="1128" fg:w="13"/><text x="92.2565%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="92.9853%" y="469" width="0.0816%" height="15" fill="rgb(254,197,27)" fg:x="1140" fg:w="1"/><text x="93.2353%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9853%" y="453" width="0.0816%" height="15" fill="rgb(220,200,25)" fg:x="1140" fg:w="1"/><text x="93.2353%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0669%" y="453" width="0.0816%" height="15" fill="rgb(239,225,54)" fg:x="1141" fg:w="1"/><text x="93.3169%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (22 samples, 1.79%)</title><rect x="91.4356%" y="533" width="1.7945%" height="15" fill="rgb(211,59,40)" fg:x="1121" fg:w="22"/><text x="91.6856%" y="543.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.79%)</title><rect x="91.4356%" y="517" width="1.7945%" height="15" fill="rgb(213,176,46)" fg:x="1121" fg:w="22"/><text x="91.6856%" y="527.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.31%)</title><rect x="91.9250%" y="501" width="1.3051%" height="15" fill="rgb(226,99,4)" fg:x="1127" fg:w="16"/><text x="92.1750%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.0669%" y="485" width="0.1631%" height="15" fill="rgb(239,203,43)" fg:x="1141" fg:w="2"/><text x="93.3169%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.0669%" y="469" width="0.1631%" height="15" fill="rgb(246,1,45)" fg:x="1141" fg:w="2"/><text x="93.3169%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.1485%" y="453" width="0.0816%" height="15" fill="rgb(231,42,52)" fg:x="1142" fg:w="1"/><text x="93.3985%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.2300%" y="389" width="0.1631%" height="15" fill="rgb(240,13,50)" fg:x="1143" fg:w="2"/><text x="93.4800%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2300%" y="373" width="0.1631%" height="15" fill="rgb(225,81,14)" fg:x="1143" fg:w="2"/><text x="93.4800%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.2300%" y="357" width="0.1631%" height="15" fill="rgb(216,182,23)" fg:x="1143" fg:w="2"/><text x="93.4800%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3116%" y="341" width="0.0816%" height="15" fill="rgb(233,137,19)" fg:x="1144" fg:w="1"/><text x="93.5616%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.3931%" y="373" width="0.0816%" height="15" fill="rgb(242,61,46)" fg:x="1145" fg:w="1"/><text x="93.6431%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.3931%" y="357" width="0.0816%" height="15" fill="rgb(221,168,51)" fg:x="1145" fg:w="1"/><text x="93.6431%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.3931%" y="341" width="0.0816%" height="15" fill="rgb(238,48,15)" fg:x="1145" fg:w="1"/><text x="93.6431%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.3931%" y="325" width="0.0816%" height="15" fill="rgb(216,13,16)" fg:x="1145" fg:w="1"/><text x="93.6431%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.3931%" y="309" width="0.0816%" height="15" fill="rgb(223,185,34)" fg:x="1145" fg:w="1"/><text x="93.6431%" y="319.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (62 samples, 5.06%)</title><rect x="88.4992%" y="581" width="5.0571%" height="15" fill="rgb(228,94,42)" fg:x="1085" fg:w="62"/><text x="88.7492%" y="591.50">engine..</text></g><g><title>engine::session::SavesEntities::check_for_changes (62 samples, 5.06%)</title><rect x="88.4992%" y="565" width="5.0571%" height="15" fill="rgb(218,166,43)" fg:x="1085" fg:w="62"/><text x="88.7492%" y="575.50">engine..</text></g><g><title>kernel::model::any_entity_changes (32 samples, 2.61%)</title><rect x="90.9462%" y="549" width="2.6101%" height="15" fill="rgb(232,30,50)" fg:x="1115" fg:w="32"/><text x="91.1962%" y="559.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.33%)</title><rect x="93.2300%" y="533" width="0.3263%" height="15" fill="rgb(245,206,45)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="543.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.33%)</title><rect x="93.2300%" y="517" width="0.3263%" height="15" fill="rgb(220,56,22)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="93.2300%" y="501" width="0.3263%" height="15" fill="rgb(239,129,38)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="93.2300%" y="485" width="0.3263%" height="15" fill="rgb(207,68,41)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="93.2300%" y="469" width="0.3263%" height="15" fill="rgb(221,21,7)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="93.2300%" y="453" width="0.3263%" height="15" fill="rgb(240,33,25)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="93.2300%" y="437" width="0.3263%" height="15" fill="rgb(242,119,10)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="93.2300%" y="421" width="0.3263%" height="15" fill="rgb(214,149,40)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="93.2300%" y="405" width="0.3263%" height="15" fill="rgb(228,25,36)" fg:x="1143" fg:w="4"/><text x="93.4800%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.3931%" y="389" width="0.1631%" height="15" fill="rgb(222,59,15)" fg:x="1145" fg:w="2"/><text x="93.6431%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.4747%" y="373" width="0.0816%" height="15" fill="rgb(218,170,0)" fg:x="1146" fg:w="1"/><text x="93.7247%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.4747%" y="357" width="0.0816%" height="15" fill="rgb(232,173,23)" fg:x="1146" fg:w="1"/><text x="93.7247%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="93.5563%" y="549" width="0.0816%" height="15" fill="rgb(218,116,1)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.5563%" y="533" width="0.0816%" height="15" fill="rgb(207,34,4)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5563%" y="517" width="0.0816%" height="15" fill="rgb(229,54,52)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5563%" y="501" width="0.0816%" height="15" fill="rgb(211,86,23)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5563%" y="485" width="0.0816%" height="15" fill="rgb(254,153,34)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.5563%" y="469" width="0.0816%" height="15" fill="rgb(219,220,14)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.5563%" y="453" width="0.0816%" height="15" fill="rgb(247,8,26)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.5563%" y="437" width="0.0816%" height="15" fill="rgb(213,129,42)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5563%" y="421" width="0.0816%" height="15" fill="rgb(225,95,41)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5563%" y="405" width="0.0816%" height="15" fill="rgb(215,134,24)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.5563%" y="389" width="0.0816%" height="15" fill="rgb(235,23,54)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="93.5563%" y="373" width="0.0816%" height="15" fill="rgb(229,96,31)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="93.5563%" y="357" width="0.0816%" height="15" fill="rgb(206,111,12)" fg:x="1147" fg:w="1"/><text x="93.8063%" y="367.50"></text></g><g><title>engine::session::Session::save_entity_changes (69 samples, 5.63%)</title><rect x="88.0914%" y="597" width="5.6281%" height="15" fill="rgb(222,177,8)" fg:x="1080" fg:w="69"/><text x="88.3414%" y="607.50">engine:..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="93.5563%" y="581" width="0.1631%" height="15" fill="rgb(251,36,52)" fg:x="1147" fg:w="2"/><text x="93.8063%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="93.5563%" y="565" width="0.1631%" height="15" fill="rgb(216,182,29)" fg:x="1147" fg:w="2"/><text x="93.8063%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="93.6378%" y="549" width="0.0816%" height="15" fill="rgb(241,145,50)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="93.6378%" y="533" width="0.0816%" height="15" fill="rgb(231,71,35)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="93.6378%" y="517" width="0.0816%" height="15" fill="rgb(218,22,17)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.6378%" y="501" width="0.0816%" height="15" fill="rgb(225,227,6)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.6378%" y="485" width="0.0816%" height="15" fill="rgb(224,204,17)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.6378%" y="469" width="0.0816%" height="15" fill="rgb(227,61,28)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.6378%" y="453" width="0.0816%" height="15" fill="rgb(242,148,23)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.6378%" y="437" width="0.0816%" height="15" fill="rgb(237,105,33)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.6378%" y="421" width="0.0816%" height="15" fill="rgb(238,218,40)" fg:x="1148" fg:w="1"/><text x="93.8878%" y="431.50"></text></g><g><title>engine::session::Session::close (72 samples, 5.87%)</title><rect x="87.9282%" y="613" width="5.8728%" height="15" fill="rgb(209,126,11)" fg:x="1078" fg:w="72"/><text x="88.1782%" y="623.50">engine:..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="93.7194%" y="597" width="0.0816%" height="15" fill="rgb(245,90,11)" fg:x="1149" fg:w="1"/><text x="93.9694%" y="607.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="93.7194%" y="581" width="0.0816%" height="15" fill="rgb(211,195,10)" fg:x="1149" fg:w="1"/><text x="93.9694%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="93.7194%" y="565" width="0.0816%" height="15" fill="rgb(231,45,45)" fg:x="1149" fg:w="1"/><text x="93.9694%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="93.7194%" y="549" width="0.0816%" height="15" fill="rgb(246,100,43)" fg:x="1149" fg:w="1"/><text x="93.9694%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="93.7194%" y="533" width="0.0816%" height="15" fill="rgb(241,193,8)" fg:x="1149" fg:w="1"/><text x="93.9694%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.8825%" y="421" width="0.0816%" height="15" fill="rgb(208,76,19)" fg:x="1151" fg:w="1"/><text x="94.1325%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="93.8825%" y="453" width="0.1631%" height="15" fill="rgb(223,69,40)" fg:x="1151" fg:w="2"/><text x="94.1325%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.8825%" y="437" width="0.1631%" height="15" fill="rgb(207,120,39)" fg:x="1151" fg:w="2"/><text x="94.1325%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9641%" y="421" width="0.0816%" height="15" fill="rgb(212,209,28)" fg:x="1152" fg:w="1"/><text x="94.2141%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9641%" y="405" width="0.0816%" height="15" fill="rgb(246,82,29)" fg:x="1152" fg:w="1"/><text x="94.2141%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.9641%" y="389" width="0.0816%" height="15" fill="rgb(239,6,40)" fg:x="1152" fg:w="1"/><text x="94.2141%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.1272%" y="437" width="0.0816%" height="15" fill="rgb(228,181,35)" fg:x="1154" fg:w="1"/><text x="94.3772%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.1272%" y="421" width="0.0816%" height="15" fill="rgb(238,151,2)" fg:x="1154" fg:w="1"/><text x="94.3772%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="94.2088%" y="405" width="0.1631%" height="15" fill="rgb(236,94,18)" fg:x="1155" fg:w="2"/><text x="94.4588%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3719%" y="405" width="0.0816%" height="15" fill="rgb(208,38,14)" fg:x="1157" fg:w="1"/><text x="94.6219%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="93.8825%" y="469" width="0.6525%" height="15" fill="rgb(234,215,27)" fg:x="1151" fg:w="8"/><text x="94.1325%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="94.0457%" y="453" width="0.4894%" height="15" fill="rgb(254,211,53)" fg:x="1153" fg:w="6"/><text x="94.2957%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="94.2088%" y="437" width="0.3263%" height="15" fill="rgb(216,175,11)" fg:x="1155" fg:w="4"/><text x="94.4588%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="94.2088%" y="421" width="0.3263%" height="15" fill="rgb(246,179,26)" fg:x="1155" fg:w="4"/><text x="94.4588%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.4535%" y="405" width="0.0816%" height="15" fill="rgb(249,19,52)" fg:x="1158" fg:w="1"/><text x="94.7035%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.4535%" y="389" width="0.0816%" height="15" fill="rgb(230,42,52)" fg:x="1158" fg:w="1"/><text x="94.7035%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5351%" y="469" width="0.0816%" height="15" fill="rgb(221,171,0)" fg:x="1159" fg:w="1"/><text x="94.7851%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.9429%" y="373" width="0.2447%" height="15" fill="rgb(222,177,40)" fg:x="1164" fg:w="3"/><text x="95.1929%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1060%" y="357" width="0.0816%" height="15" fill="rgb(247,34,16)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1060%" y="341" width="0.0816%" height="15" fill="rgb(213,217,37)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1060%" y="325" width="0.0816%" height="15" fill="rgb(231,189,24)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1060%" y="309" width="0.0816%" height="15" fill="rgb(214,22,9)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1060%" y="293" width="0.0816%" height="15" fill="rgb(212,70,22)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1060%" y="277" width="0.0816%" height="15" fill="rgb(249,64,51)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1060%" y="261" width="0.0816%" height="15" fill="rgb(249,148,20)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1060%" y="245" width="0.0816%" height="15" fill="rgb(246,46,48)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1060%" y="229" width="0.0816%" height="15" fill="rgb(217,34,48)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1060%" y="213" width="0.0816%" height="15" fill="rgb(222,45,26)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1060%" y="197" width="0.0816%" height="15" fill="rgb(230,201,36)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1060%" y="181" width="0.0816%" height="15" fill="rgb(217,30,43)" fg:x="1166" fg:w="1"/><text x="95.3560%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="94.8613%" y="389" width="0.4894%" height="15" fill="rgb(230,197,40)" fg:x="1163" fg:w="6"/><text x="95.1113%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.1876%" y="373" width="0.1631%" height="15" fill="rgb(239,181,18)" fg:x="1167" fg:w="2"/><text x="95.4376%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.1876%" y="357" width="0.1631%" height="15" fill="rgb(222,60,39)" fg:x="1167" fg:w="2"/><text x="95.4376%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="95.1876%" y="341" width="0.1631%" height="15" fill="rgb(210,60,22)" fg:x="1167" fg:w="2"/><text x="95.4376%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="95.1876%" y="325" width="0.1631%" height="15" fill="rgb(239,213,48)" fg:x="1167" fg:w="2"/><text x="95.4376%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="95.1876%" y="309" width="0.1631%" height="15" fill="rgb(253,214,23)" fg:x="1167" fg:w="2"/><text x="95.4376%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.1876%" y="293" width="0.1631%" height="15" fill="rgb(211,98,45)" fg:x="1167" fg:w="2"/><text x="95.4376%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.1876%" y="277" width="0.1631%" height="15" fill="rgb(239,130,44)" fg:x="1167" fg:w="2"/><text x="95.4376%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="95.1876%" y="261" width="0.1631%" height="15" fill="rgb(222,181,35)" fg:x="1167" fg:w="2"/><text x="95.4376%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.2692%" y="245" width="0.0816%" height="15" fill="rgb(219,219,49)" fg:x="1168" fg:w="1"/><text x="95.5192%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.2692%" y="229" width="0.0816%" height="15" fill="rgb(227,161,51)" fg:x="1168" fg:w="1"/><text x="95.5192%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.2692%" y="213" width="0.0816%" height="15" fill="rgb(239,112,27)" fg:x="1168" fg:w="1"/><text x="95.5192%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2692%" y="197" width="0.0816%" height="15" fill="rgb(248,122,18)" fg:x="1168" fg:w="1"/><text x="95.5192%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3507%" y="389" width="0.0816%" height="15" fill="rgb(245,130,23)" fg:x="1169" fg:w="1"/><text x="95.6007%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3507%" y="373" width="0.0816%" height="15" fill="rgb(211,225,28)" fg:x="1169" fg:w="1"/><text x="95.6007%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.3507%" y="357" width="0.0816%" height="15" fill="rgb(242,105,44)" fg:x="1169" fg:w="1"/><text x="95.6007%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.3507%" y="341" width="0.0816%" height="15" fill="rgb(216,183,46)" fg:x="1169" fg:w="1"/><text x="95.6007%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.3507%" y="325" width="0.0816%" height="15" fill="rgb(227,112,9)" fg:x="1169" fg:w="1"/><text x="95.6007%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.3507%" y="309" width="0.0816%" height="15" fill="rgb(244,21,0)" fg:x="1169" fg:w="1"/><text x="95.6007%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.3507%" y="293" width="0.0816%" height="15" fill="rgb(236,185,14)" fg:x="1169" fg:w="1"/><text x="95.6007%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.65%)</title><rect x="94.8613%" y="405" width="0.6525%" height="15" fill="rgb(236,170,30)" fg:x="1163" fg:w="8"/><text x="95.1113%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4323%" y="389" width="0.0816%" height="15" fill="rgb(209,198,51)" fg:x="1170" fg:w="1"/><text x="95.6823%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5139%" y="405" width="0.0816%" height="15" fill="rgb(205,171,26)" fg:x="1171" fg:w="1"/><text x="95.7639%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5139%" y="389" width="0.0816%" height="15" fill="rgb(246,41,49)" fg:x="1171" fg:w="1"/><text x="95.7639%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5139%" y="373" width="0.0816%" height="15" fill="rgb(240,229,12)" fg:x="1171" fg:w="1"/><text x="95.7639%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5139%" y="357" width="0.0816%" height="15" fill="rgb(212,8,54)" fg:x="1171" fg:w="1"/><text x="95.7639%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5139%" y="341" width="0.0816%" height="15" fill="rgb(230,114,13)" fg:x="1171" fg:w="1"/><text x="95.7639%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.5139%" y="325" width="0.0816%" height="15" fill="rgb(229,130,28)" fg:x="1171" fg:w="1"/><text x="95.7639%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.5139%" y="309" width="0.0816%" height="15" fill="rgb(206,139,15)" fg:x="1171" fg:w="1"/><text x="95.7639%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12 samples, 0.98%)</title><rect x="94.6982%" y="421" width="0.9788%" height="15" fill="rgb(241,188,35)" fg:x="1161" fg:w="12"/><text x="94.9482%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5954%" y="405" width="0.0816%" height="15" fill="rgb(208,224,26)" fg:x="1172" fg:w="1"/><text x="95.8454%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.6770%" y="421" width="0.1631%" height="15" fill="rgb(251,131,28)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.6770%" y="405" width="0.1631%" height="15" fill="rgb(208,153,1)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="95.6770%" y="389" width="0.1631%" height="15" fill="rgb(234,33,36)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="95.6770%" y="373" width="0.1631%" height="15" fill="rgb(246,42,29)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="95.6770%" y="357" width="0.1631%" height="15" fill="rgb(251,114,16)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.6770%" y="341" width="0.1631%" height="15" fill="rgb(233,13,38)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.6770%" y="325" width="0.1631%" height="15" fill="rgb(247,120,19)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="95.6770%" y="309" width="0.1631%" height="15" fill="rgb(205,11,16)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="95.6770%" y="293" width="0.1631%" height="15" fill="rgb(228,185,19)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="95.6770%" y="277" width="0.1631%" height="15" fill="rgb(239,88,52)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="95.6770%" y="261" width="0.1631%" height="15" fill="rgb(219,23,1)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.6770%" y="245" width="0.1631%" height="15" fill="rgb(253,177,16)" fg:x="1173" fg:w="2"/><text x="95.9270%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 1.22%)</title><rect x="94.6982%" y="437" width="1.2235%" height="15" fill="rgb(225,150,40)" fg:x="1161" fg:w="15"/><text x="94.9482%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8401%" y="421" width="0.0816%" height="15" fill="rgb(208,108,30)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8401%" y="405" width="0.0816%" height="15" fill="rgb(214,122,4)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8401%" y="389" width="0.0816%" height="15" fill="rgb(229,74,37)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8401%" y="373" width="0.0816%" height="15" fill="rgb(233,61,41)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.8401%" y="357" width="0.0816%" height="15" fill="rgb(238,191,5)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.8401%" y="341" width="0.0816%" height="15" fill="rgb(233,78,24)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.8401%" y="325" width="0.0816%" height="15" fill="rgb(211,142,8)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.8401%" y="309" width="0.0816%" height="15" fill="rgb(253,38,53)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.8401%" y="293" width="0.0816%" height="15" fill="rgb(234,63,51)" fg:x="1175" fg:w="1"/><text x="96.0901%" y="303.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (17 samples, 1.39%)</title><rect x="94.6166%" y="469" width="1.3866%" height="15" fill="rgb(205,23,31)" fg:x="1160" fg:w="17"/><text x="94.8666%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::modified (17 samples, 1.39%)</title><rect x="94.6166%" y="453" width="1.3866%" height="15" fill="rgb(210,184,50)" fg:x="1160" fg:w="17"/><text x="94.8666%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9217%" y="437" width="0.0816%" height="15" fill="rgb(222,112,26)" fg:x="1176" fg:w="1"/><text x="96.1717%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9217%" y="421" width="0.0816%" height="15" fill="rgb(250,98,18)" fg:x="1176" fg:w="1"/><text x="96.1717%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.9217%" y="405" width="0.0816%" height="15" fill="rgb(250,34,12)" fg:x="1176" fg:w="1"/><text x="96.1717%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.9217%" y="389" width="0.0816%" height="15" fill="rgb(236,141,30)" fg:x="1176" fg:w="1"/><text x="96.1717%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.9217%" y="373" width="0.0816%" height="15" fill="rgb(246,134,38)" fg:x="1176" fg:w="1"/><text x="96.1717%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.9217%" y="357" width="0.0816%" height="15" fill="rgb(240,114,4)" fg:x="1176" fg:w="1"/><text x="96.1717%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.9217%" y="341" width="0.0816%" height="15" fill="rgb(243,113,39)" fg:x="1176" fg:w="1"/><text x="96.1717%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="96.0033%" y="373" width="0.0816%" height="15" fill="rgb(239,215,4)" fg:x="1177" fg:w="1"/><text x="96.2533%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0848%" y="341" width="0.0816%" height="15" fill="rgb(236,229,45)" fg:x="1178" fg:w="1"/><text x="96.3348%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="96.1664%" y="325" width="0.1631%" height="15" fill="rgb(242,2,6)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="335.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.1664%" y="309" width="0.1631%" height="15" fill="rgb(239,108,21)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.1664%" y="293" width="0.1631%" height="15" fill="rgb(215,168,34)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.1664%" y="277" width="0.1631%" height="15" fill="rgb(238,31,17)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1664%" y="261" width="0.1631%" height="15" fill="rgb(220,133,11)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.1664%" y="245" width="0.1631%" height="15" fill="rgb(212,158,23)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1664%" y="229" width="0.1631%" height="15" fill="rgb(223,172,7)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.1664%" y="213" width="0.1631%" height="15" fill="rgb(244,3,52)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1664%" y="197" width="0.1631%" height="15" fill="rgb(207,69,27)" fg:x="1179" fg:w="2"/><text x="96.4164%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.2480%" y="181" width="0.0816%" height="15" fill="rgb(213,136,45)" fg:x="1180" fg:w="1"/><text x="96.4980%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.2480%" y="165" width="0.0816%" height="15" fill="rgb(218,79,17)" fg:x="1180" fg:w="1"/><text x="96.4980%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3295%" y="277" width="0.0816%" height="15" fill="rgb(216,106,36)" fg:x="1181" fg:w="1"/><text x="96.5795%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3295%" y="261" width="0.0816%" height="15" fill="rgb(251,27,45)" fg:x="1181" fg:w="1"/><text x="96.5795%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3295%" y="245" width="0.0816%" height="15" fill="rgb(232,21,34)" fg:x="1181" fg:w="1"/><text x="96.5795%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3295%" y="229" width="0.0816%" height="15" fill="rgb(249,191,16)" fg:x="1181" fg:w="1"/><text x="96.5795%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3295%" y="213" width="0.0816%" height="15" fill="rgb(224,88,20)" fg:x="1181" fg:w="1"/><text x="96.5795%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.4111%" y="213" width="0.0816%" height="15" fill="rgb(237,93,27)" fg:x="1182" fg:w="1"/><text x="96.6611%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4111%" y="197" width="0.0816%" height="15" fill="rgb(226,198,48)" fg:x="1182" fg:w="1"/><text x="96.6611%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.49%)</title><rect x="96.0848%" y="357" width="0.4894%" height="15" fill="rgb(207,162,53)" fg:x="1178" fg:w="6"/><text x="96.3348%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="96.1664%" y="341" width="0.4078%" height="15" fill="rgb(207,169,9)" fg:x="1179" fg:w="5"/><text x="96.4164%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="96.3295%" y="325" width="0.2447%" height="15" fill="rgb(224,166,46)" fg:x="1181" fg:w="3"/><text x="96.5795%" y="335.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="96.3295%" y="309" width="0.2447%" height="15" fill="rgb(233,26,6)" fg:x="1181" fg:w="3"/><text x="96.5795%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.3295%" y="293" width="0.2447%" height="15" fill="rgb(218,106,45)" fg:x="1181" fg:w="3"/><text x="96.5795%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.4111%" y="277" width="0.1631%" height="15" fill="rgb(240,217,4)" fg:x="1182" fg:w="2"/><text x="96.6611%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.4111%" y="261" width="0.1631%" height="15" fill="rgb(246,171,10)" fg:x="1182" fg:w="2"/><text x="96.6611%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.4111%" y="245" width="0.1631%" height="15" fill="rgb(223,197,30)" fg:x="1182" fg:w="2"/><text x="96.6611%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.4111%" y="229" width="0.1631%" height="15" fill="rgb(207,92,16)" fg:x="1182" fg:w="2"/><text x="96.6611%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.4927%" y="213" width="0.0816%" height="15" fill="rgb(211,6,44)" fg:x="1183" fg:w="1"/><text x="96.7427%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4927%" y="197" width="0.0816%" height="15" fill="rgb(219,139,2)" fg:x="1183" fg:w="1"/><text x="96.7427%" y="207.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.4927%" y="181" width="0.0816%" height="15" fill="rgb(224,103,21)" fg:x="1183" fg:w="1"/><text x="96.7427%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4927%" y="165" width="0.0816%" height="15" fill="rgb(254,110,48)" fg:x="1183" fg:w="1"/><text x="96.7427%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4927%" y="149" width="0.0816%" height="15" fill="rgb(212,88,19)" fg:x="1183" fg:w="1"/><text x="96.7427%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="96.5742%" y="309" width="0.0816%" height="15" fill="rgb(248,103,6)" fg:x="1184" fg:w="1"/><text x="96.8242%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6558%" y="165" width="0.0816%" height="15" fill="rgb(214,53,46)" fg:x="1185" fg:w="1"/><text x="96.9058%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6558%" y="149" width="0.0816%" height="15" fill="rgb(236,190,24)" fg:x="1185" fg:w="1"/><text x="96.9058%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.6558%" y="133" width="0.0816%" height="15" fill="rgb(254,58,28)" fg:x="1185" fg:w="1"/><text x="96.9058%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6558%" y="117" width="0.0816%" height="15" fill="rgb(243,63,27)" fg:x="1185" fg:w="1"/><text x="96.9058%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6558%" y="101" width="0.0816%" height="15" fill="rgb(206,81,20)" fg:x="1185" fg:w="1"/><text x="96.9058%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6558%" y="85" width="0.0816%" height="15" fill="rgb(252,69,51)" fg:x="1185" fg:w="1"/><text x="96.9058%" y="95.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6558%" y="69" width="0.0816%" height="15" fill="rgb(222,213,4)" fg:x="1185" fg:w="1"/><text x="96.9058%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.6558%" y="229" width="0.1631%" height="15" fill="rgb(226,198,12)" fg:x="1185" fg:w="2"/><text x="96.9058%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.6558%" y="213" width="0.1631%" height="15" fill="rgb(248,115,11)" fg:x="1185" fg:w="2"/><text x="96.9058%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.6558%" y="197" width="0.1631%" height="15" fill="rgb(221,148,54)" fg:x="1185" fg:w="2"/><text x="96.9058%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.6558%" y="181" width="0.1631%" height="15" fill="rgb(214,209,51)" fg:x="1185" fg:w="2"/><text x="96.9058%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.7374%" y="165" width="0.0816%" height="15" fill="rgb(249,116,53)" fg:x="1186" fg:w="1"/><text x="96.9874%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.9005%" y="149" width="0.0816%" height="15" fill="rgb(248,170,1)" fg:x="1188" fg:w="1"/><text x="97.1505%" y="159.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.49%)</title><rect x="96.5742%" y="341" width="0.4894%" height="15" fill="rgb(244,105,10)" fg:x="1184" fg:w="6"/><text x="96.8242%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.49%)</title><rect x="96.5742%" y="325" width="0.4894%" height="15" fill="rgb(229,100,5)" fg:x="1184" fg:w="6"/><text x="96.8242%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="96.6558%" y="309" width="0.4078%" height="15" fill="rgb(233,221,39)" fg:x="1185" fg:w="5"/><text x="96.9058%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="96.6558%" y="293" width="0.4078%" height="15" fill="rgb(233,88,21)" fg:x="1185" fg:w="5"/><text x="96.9058%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="96.6558%" y="277" width="0.4078%" height="15" fill="rgb(206,13,0)" fg:x="1185" fg:w="5"/><text x="96.9058%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="96.6558%" y="261" width="0.4078%" height="15" fill="rgb(242,15,35)" fg:x="1185" fg:w="5"/><text x="96.9058%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="96.6558%" y="245" width="0.4078%" height="15" fill="rgb(247,142,41)" fg:x="1185" fg:w="5"/><text x="96.9058%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.8189%" y="229" width="0.2447%" height="15" fill="rgb(245,51,29)" fg:x="1187" fg:w="3"/><text x="97.0689%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.8189%" y="213" width="0.2447%" height="15" fill="rgb(228,209,43)" fg:x="1187" fg:w="3"/><text x="97.0689%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="96.8189%" y="197" width="0.2447%" height="15" fill="rgb(233,185,9)" fg:x="1187" fg:w="3"/><text x="97.0689%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.8189%" y="181" width="0.2447%" height="15" fill="rgb(226,93,0)" fg:x="1187" fg:w="3"/><text x="97.0689%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.9005%" y="165" width="0.1631%" height="15" fill="rgb(245,194,43)" fg:x="1188" fg:w="2"/><text x="97.1505%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.9821%" y="149" width="0.0816%" height="15" fill="rgb(211,145,34)" fg:x="1189" fg:w="1"/><text x="97.2321%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9821%" y="133" width="0.0816%" height="15" fill="rgb(231,228,28)" fg:x="1189" fg:w="1"/><text x="97.2321%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9821%" y="117" width="0.0816%" height="15" fill="rgb(236,149,4)" fg:x="1189" fg:w="1"/><text x="97.2321%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.9821%" y="101" width="0.0816%" height="15" fill="rgb(234,114,38)" fg:x="1189" fg:w="1"/><text x="97.2321%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9821%" y="85" width="0.0816%" height="15" fill="rgb(246,132,51)" fg:x="1189" fg:w="1"/><text x="97.2321%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9821%" y="69" width="0.0816%" height="15" fill="rgb(251,137,22)" fg:x="1189" fg:w="1"/><text x="97.2321%" y="79.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.9821%" y="53" width="0.0816%" height="15" fill="rgb(243,59,52)" fg:x="1189" fg:w="1"/><text x="97.2321%" y="63.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9821%" y="37" width="0.0816%" height="15" fill="rgb(239,56,28)" fg:x="1189" fg:w="1"/><text x="97.2321%" y="47.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.1452%" y="229" width="0.1631%" height="15" fill="rgb(218,168,27)" fg:x="1191" fg:w="2"/><text x="97.3952%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.3083%" y="213" width="0.0816%" height="15" fill="rgb(232,165,11)" fg:x="1193" fg:w="1"/><text x="97.5583%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.3083%" y="197" width="0.0816%" height="15" fill="rgb(253,55,41)" fg:x="1193" fg:w="1"/><text x="97.5583%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.3083%" y="181" width="0.0816%" height="15" fill="rgb(233,206,24)" fg:x="1193" fg:w="1"/><text x="97.5583%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.3083%" y="165" width="0.0816%" height="15" fill="rgb(220,199,8)" fg:x="1193" fg:w="1"/><text x="97.5583%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.3083%" y="149" width="0.0816%" height="15" fill="rgb(254,65,26)" fg:x="1193" fg:w="1"/><text x="97.5583%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.3083%" y="133" width="0.0816%" height="15" fill="rgb(253,102,23)" fg:x="1193" fg:w="1"/><text x="97.5583%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3083%" y="117" width="0.0816%" height="15" fill="rgb(231,103,35)" fg:x="1193" fg:w="1"/><text x="97.5583%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="97.3899%" y="213" width="0.0816%" height="15" fill="rgb(238,26,10)" fg:x="1194" fg:w="1"/><text x="97.6399%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="97.3899%" y="197" width="0.0816%" height="15" fill="rgb(234,191,34)" fg:x="1194" fg:w="1"/><text x="97.6399%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3899%" y="181" width="0.0816%" height="15" fill="rgb(206,210,9)" fg:x="1194" fg:w="1"/><text x="97.6399%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.4715%" y="181" width="0.0816%" height="15" fill="rgb(219,155,3)" fg:x="1195" fg:w="1"/><text x="97.7215%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (20 samples, 1.63%)</title><rect x="96.0033%" y="389" width="1.6313%" height="15" fill="rgb(221,62,52)" fg:x="1177" fg:w="20"/><text x="96.2533%" y="399.50"></text></g><g><title>engine::internal::Entities::add_persisted (19 samples, 1.55%)</title><rect x="96.0848%" y="373" width="1.5498%" height="15" fill="rgb(215,197,36)" fg:x="1178" fg:w="19"/><text x="96.3348%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity (13 samples, 1.06%)</title><rect x="96.5742%" y="357" width="1.0604%" height="15" fill="rgb(226,222,6)" fg:x="1184" fg:w="13"/><text x="96.8242%" y="367.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="97.0636%" y="341" width="0.5710%" height="15" fill="rgb(215,58,28)" fg:x="1190" fg:w="7"/><text x="97.3136%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="97.0636%" y="325" width="0.5710%" height="15" fill="rgb(212,148,2)" fg:x="1190" fg:w="7"/><text x="97.3136%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="97.0636%" y="309" width="0.5710%" height="15" fill="rgb(208,21,42)" fg:x="1190" fg:w="7"/><text x="97.3136%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="97.0636%" y="293" width="0.5710%" height="15" fill="rgb(209,107,26)" fg:x="1190" fg:w="7"/><text x="97.3136%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="97.0636%" y="277" width="0.5710%" height="15" fill="rgb(254,60,47)" fg:x="1190" fg:w="7"/><text x="97.3136%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="97.0636%" y="261" width="0.5710%" height="15" fill="rgb(207,226,45)" fg:x="1190" fg:w="7"/><text x="97.3136%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="97.0636%" y="245" width="0.5710%" height="15" fill="rgb(223,124,22)" fg:x="1190" fg:w="7"/><text x="97.3136%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="97.3083%" y="229" width="0.3263%" height="15" fill="rgb(240,162,13)" fg:x="1193" fg:w="4"/><text x="97.5583%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.4715%" y="213" width="0.1631%" height="15" fill="rgb(244,199,31)" fg:x="1195" fg:w="2"/><text x="97.7215%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.4715%" y="197" width="0.1631%" height="15" fill="rgb(207,92,16)" fg:x="1195" fg:w="2"/><text x="97.7215%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5530%" y="181" width="0.0816%" height="15" fill="rgb(215,31,19)" fg:x="1196" fg:w="1"/><text x="97.8030%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (21 samples, 1.71%)</title><rect x="96.0033%" y="405" width="1.7129%" height="15" fill="rgb(245,118,14)" fg:x="1177" fg:w="21"/><text x="96.2533%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.6346%" y="389" width="0.0816%" height="15" fill="rgb(248,12,46)" fg:x="1197" fg:w="1"/><text x="97.8846%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.7162%" y="373" width="0.0816%" height="15" fill="rgb(209,119,0)" fg:x="1198" fg:w="1"/><text x="97.9662%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.7162%" y="405" width="0.1631%" height="15" fill="rgb(254,51,44)" fg:x="1198" fg:w="2"/><text x="97.9662%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.7162%" y="389" width="0.1631%" height="15" fill="rgb(253,182,35)" fg:x="1198" fg:w="2"/><text x="97.9662%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7977%" y="373" width="0.0816%" height="15" fill="rgb(205,198,39)" fg:x="1199" fg:w="1"/><text x="98.0477%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7977%" y="357" width="0.0816%" height="15" fill="rgb(251,175,48)" fg:x="1199" fg:w="1"/><text x="98.0477%" y="367.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (50 samples, 4.08%)</title><rect x="93.8825%" y="485" width="4.0783%" height="15" fill="rgb(239,38,17)" fg:x="1151" fg:w="50"/><text x="94.1325%" y="495.50">&lt;eng..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (24 samples, 1.96%)</title><rect x="96.0033%" y="469" width="1.9576%" height="15" fill="rgb(212,101,8)" fg:x="1177" fg:w="24"/><text x="96.2533%" y="479.50">e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (24 samples, 1.96%)</title><rect x="96.0033%" y="453" width="1.9576%" height="15" fill="rgb(228,35,17)" fg:x="1177" fg:w="24"/><text x="96.2533%" y="463.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (24 samples, 1.96%)</title><rect x="96.0033%" y="437" width="1.9576%" height="15" fill="rgb(214,95,8)" fg:x="1177" fg:w="24"/><text x="96.2533%" y="447.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (24 samples, 1.96%)</title><rect x="96.0033%" y="421" width="1.9576%" height="15" fill="rgb(210,176,35)" fg:x="1177" fg:w="24"/><text x="96.2533%" y="431.50">k..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="97.8793%" y="405" width="0.0816%" height="15" fill="rgb(226,4,3)" fg:x="1200" fg:w="1"/><text x="98.1293%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="97.8793%" y="389" width="0.0816%" height="15" fill="rgb(232,133,14)" fg:x="1200" fg:w="1"/><text x="98.1293%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9608%" y="341" width="0.0816%" height="15" fill="rgb(250,191,8)" fg:x="1201" fg:w="1"/><text x="98.2108%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9608%" y="325" width="0.0816%" height="15" fill="rgb(213,12,45)" fg:x="1201" fg:w="1"/><text x="98.2108%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9608%" y="309" width="0.0816%" height="15" fill="rgb(233,78,26)" fg:x="1201" fg:w="1"/><text x="98.2108%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9608%" y="293" width="0.0816%" height="15" fill="rgb(245,222,11)" fg:x="1201" fg:w="1"/><text x="98.2108%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.9608%" y="389" width="0.1631%" height="15" fill="rgb(216,174,12)" fg:x="1201" fg:w="2"/><text x="98.2108%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.9608%" y="373" width="0.1631%" height="15" fill="rgb(213,15,9)" fg:x="1201" fg:w="2"/><text x="98.2108%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.9608%" y="357" width="0.1631%" height="15" fill="rgb(238,103,32)" fg:x="1201" fg:w="2"/><text x="98.2108%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.0424%" y="341" width="0.0816%" height="15" fill="rgb(245,85,15)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0424%" y="325" width="0.0816%" height="15" fill="rgb(254,204,5)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.0424%" y="309" width="0.0816%" height="15" fill="rgb(231,178,15)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0424%" y="293" width="0.0816%" height="15" fill="rgb(248,151,3)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.0424%" y="277" width="0.0816%" height="15" fill="rgb(250,139,13)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0424%" y="261" width="0.0816%" height="15" fill="rgb(243,107,53)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.0424%" y="245" width="0.0816%" height="15" fill="rgb(232,81,15)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0424%" y="229" width="0.0816%" height="15" fill="rgb(225,187,48)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0424%" y="213" width="0.0816%" height="15" fill="rgb(205,116,12)" fg:x="1202" fg:w="1"/><text x="98.2924%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="97.9608%" y="421" width="0.2447%" height="15" fill="rgb(220,222,31)" fg:x="1201" fg:w="3"/><text x="98.2108%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="97.9608%" y="405" width="0.2447%" height="15" fill="rgb(233,187,49)" fg:x="1201" fg:w="3"/><text x="98.2108%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.1240%" y="389" width="0.0816%" height="15" fill="rgb(211,168,53)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.1240%" y="373" width="0.0816%" height="15" fill="rgb(206,160,16)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.1240%" y="357" width="0.0816%" height="15" fill="rgb(254,164,13)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.1240%" y="341" width="0.0816%" height="15" fill="rgb(229,45,30)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1240%" y="325" width="0.0816%" height="15" fill="rgb(237,32,10)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.1240%" y="309" width="0.0816%" height="15" fill="rgb(251,20,47)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1240%" y="293" width="0.0816%" height="15" fill="rgb(251,116,12)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.1240%" y="277" width="0.0816%" height="15" fill="rgb(214,227,27)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1240%" y="261" width="0.0816%" height="15" fill="rgb(248,10,53)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.1240%" y="245" width="0.0816%" height="15" fill="rgb(221,176,25)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1240%" y="229" width="0.0816%" height="15" fill="rgb(205,70,46)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.1240%" y="213" width="0.0816%" height="15" fill="rgb(217,45,38)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1240%" y="197" width="0.0816%" height="15" fill="rgb(243,6,54)" fg:x="1203" fg:w="1"/><text x="98.3740%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2055%" y="373" width="0.0816%" height="15" fill="rgb(242,76,23)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2055%" y="357" width="0.0816%" height="15" fill="rgb(239,166,0)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2055%" y="341" width="0.0816%" height="15" fill="rgb(238,174,32)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2055%" y="325" width="0.0816%" height="15" fill="rgb(238,124,44)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2055%" y="309" width="0.0816%" height="15" fill="rgb(206,185,9)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2055%" y="293" width="0.0816%" height="15" fill="rgb(215,157,17)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.2055%" y="277" width="0.0816%" height="15" fill="rgb(251,17,29)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.2055%" y="261" width="0.0816%" height="15" fill="rgb(227,113,27)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.2055%" y="245" width="0.0816%" height="15" fill="rgb(217,226,24)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.2055%" y="229" width="0.0816%" height="15" fill="rgb(251,99,38)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.2055%" y="213" width="0.0816%" height="15" fill="rgb(231,147,19)" fg:x="1204" fg:w="1"/><text x="98.4555%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2871%" y="277" width="0.0816%" height="15" fill="rgb(230,86,8)" fg:x="1205" fg:w="1"/><text x="98.5371%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2871%" y="261" width="0.0816%" height="15" fill="rgb(237,159,39)" fg:x="1205" fg:w="1"/><text x="98.5371%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="98.2055%" y="421" width="0.2447%" height="15" fill="rgb(247,179,47)" fg:x="1204" fg:w="3"/><text x="98.4555%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="98.2055%" y="405" width="0.2447%" height="15" fill="rgb(253,152,26)" fg:x="1204" fg:w="3"/><text x="98.4555%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.2055%" y="389" width="0.2447%" height="15" fill="rgb(222,211,15)" fg:x="1204" fg:w="3"/><text x="98.4555%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.2871%" y="373" width="0.1631%" height="15" fill="rgb(236,193,6)" fg:x="1205" fg:w="2"/><text x="98.5371%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.2871%" y="357" width="0.1631%" height="15" fill="rgb(226,206,10)" fg:x="1205" fg:w="2"/><text x="98.5371%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.2871%" y="341" width="0.1631%" height="15" fill="rgb(213,125,22)" fg:x="1205" fg:w="2"/><text x="98.5371%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.2871%" y="325" width="0.1631%" height="15" fill="rgb(221,66,28)" fg:x="1205" fg:w="2"/><text x="98.5371%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.2871%" y="309" width="0.1631%" height="15" fill="rgb(222,84,53)" fg:x="1205" fg:w="2"/><text x="98.5371%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.2871%" y="293" width="0.1631%" height="15" fill="rgb(243,50,15)" fg:x="1205" fg:w="2"/><text x="98.5371%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3687%" y="277" width="0.0816%" height="15" fill="rgb(208,184,23)" fg:x="1206" fg:w="1"/><text x="98.6187%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3687%" y="261" width="0.0816%" height="15" fill="rgb(221,83,2)" fg:x="1206" fg:w="1"/><text x="98.6187%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3687%" y="245" width="0.0816%" height="15" fill="rgb(236,53,24)" fg:x="1206" fg:w="1"/><text x="98.6187%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3687%" y="229" width="0.0816%" height="15" fill="rgb(244,171,29)" fg:x="1206" fg:w="1"/><text x="98.6187%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="98.3687%" y="213" width="0.0816%" height="15" fill="rgb(205,19,11)" fg:x="1206" fg:w="1"/><text x="98.6187%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.3687%" y="197" width="0.0816%" height="15" fill="rgb(207,108,29)" fg:x="1206" fg:w="1"/><text x="98.6187%" y="207.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="98.4502%" y="421" width="0.0816%" height="15" fill="rgb(236,215,43)" fg:x="1207" fg:w="1"/><text x="98.7002%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4502%" y="405" width="0.0816%" height="15" fill="rgb(213,58,35)" fg:x="1207" fg:w="1"/><text x="98.7002%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4502%" y="389" width="0.0816%" height="15" fill="rgb(220,211,46)" fg:x="1207" fg:w="1"/><text x="98.7002%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.6134%" y="197" width="0.0816%" height="15" fill="rgb(212,134,16)" fg:x="1209" fg:w="1"/><text x="98.8634%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6134%" y="181" width="0.0816%" height="15" fill="rgb(232,90,44)" fg:x="1209" fg:w="1"/><text x="98.8634%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.6134%" y="165" width="0.0816%" height="15" fill="rgb(212,18,36)" fg:x="1209" fg:w="1"/><text x="98.8634%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.5318%" y="293" width="0.2447%" height="15" fill="rgb(206,112,24)" fg:x="1208" fg:w="3"/><text x="98.7818%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.5318%" y="277" width="0.2447%" height="15" fill="rgb(238,223,40)" fg:x="1208" fg:w="3"/><text x="98.7818%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.5318%" y="261" width="0.2447%" height="15" fill="rgb(226,169,20)" fg:x="1208" fg:w="3"/><text x="98.7818%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.5318%" y="245" width="0.2447%" height="15" fill="rgb(241,64,52)" fg:x="1208" fg:w="3"/><text x="98.7818%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.5318%" y="229" width="0.2447%" height="15" fill="rgb(228,120,25)" fg:x="1208" fg:w="3"/><text x="98.7818%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6134%" y="213" width="0.1631%" height="15" fill="rgb(234,108,19)" fg:x="1209" fg:w="2"/><text x="98.8634%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6949%" y="197" width="0.0816%" height="15" fill="rgb(236,133,29)" fg:x="1210" fg:w="1"/><text x="98.9449%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6949%" y="181" width="0.0816%" height="15" fill="rgb(246,174,53)" fg:x="1210" fg:w="1"/><text x="98.9449%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.6949%" y="165" width="0.0816%" height="15" fill="rgb(210,105,35)" fg:x="1210" fg:w="1"/><text x="98.9449%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.7765%" y="293" width="0.0816%" height="15" fill="rgb(225,27,26)" fg:x="1211" fg:w="1"/><text x="99.0265%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.7765%" y="277" width="0.0816%" height="15" fill="rgb(233,2,39)" fg:x="1211" fg:w="1"/><text x="99.0265%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.7765%" y="261" width="0.0816%" height="15" fill="rgb(219,164,26)" fg:x="1211" fg:w="1"/><text x="99.0265%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.7765%" y="245" width="0.0816%" height="15" fill="rgb(236,211,5)" fg:x="1211" fg:w="1"/><text x="99.0265%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7765%" y="229" width="0.0816%" height="15" fill="rgb(244,227,23)" fg:x="1211" fg:w="1"/><text x="99.0265%" y="239.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.41%)</title><rect x="98.5318%" y="405" width="0.4078%" height="15" fill="rgb(230,184,8)" fg:x="1208" fg:w="5"/><text x="98.7818%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.41%)</title><rect x="98.5318%" y="389" width="0.4078%" height="15" fill="rgb(217,125,48)" fg:x="1208" fg:w="5"/><text x="98.7818%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="98.5318%" y="373" width="0.4078%" height="15" fill="rgb(223,192,47)" fg:x="1208" fg:w="5"/><text x="98.7818%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="98.5318%" y="357" width="0.4078%" height="15" fill="rgb(226,119,10)" fg:x="1208" fg:w="5"/><text x="98.7818%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="98.5318%" y="341" width="0.4078%" height="15" fill="rgb(221,49,29)" fg:x="1208" fg:w="5"/><text x="98.7818%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="98.5318%" y="325" width="0.4078%" height="15" fill="rgb(217,205,19)" fg:x="1208" fg:w="5"/><text x="98.7818%" y="335.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="98.5318%" y="309" width="0.4078%" height="15" fill="rgb(242,104,7)" fg:x="1208" fg:w="5"/><text x="98.7818%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8581%" y="293" width="0.0816%" height="15" fill="rgb(209,154,48)" fg:x="1212" fg:w="1"/><text x="99.1081%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8581%" y="277" width="0.0816%" height="15" fill="rgb(219,213,46)" fg:x="1212" fg:w="1"/><text x="99.1081%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8581%" y="261" width="0.0816%" height="15" fill="rgb(229,105,38)" fg:x="1212" fg:w="1"/><text x="99.1081%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.8581%" y="245" width="0.0816%" height="15" fill="rgb(205,151,5)" fg:x="1212" fg:w="1"/><text x="99.1081%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.8581%" y="229" width="0.0816%" height="15" fill="rgb(248,115,40)" fg:x="1212" fg:w="1"/><text x="99.1081%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1028%" y="325" width="0.0816%" height="15" fill="rgb(206,179,2)" fg:x="1215" fg:w="1"/><text x="99.3528%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1028%" y="309" width="0.0816%" height="15" fill="rgb(230,103,24)" fg:x="1215" fg:w="1"/><text x="99.3528%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1843%" y="277" width="0.0816%" height="15" fill="rgb(218,152,4)" fg:x="1216" fg:w="1"/><text x="99.4343%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1843%" y="261" width="0.0816%" height="15" fill="rgb(236,161,54)" fg:x="1216" fg:w="1"/><text x="99.4343%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.1843%" y="245" width="0.0816%" height="15" fill="rgb(226,65,17)" fg:x="1216" fg:w="1"/><text x="99.4343%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.39%)</title><rect x="97.9608%" y="453" width="1.3866%" height="15" fill="rgb(221,134,44)" fg:x="1201" fg:w="17"/><text x="98.2108%" y="463.50"></text></g><g><title>engine::internal::Entities::add_persisted (17 samples, 1.39%)</title><rect x="97.9608%" y="437" width="1.3866%" height="15" fill="rgb(251,129,4)" fg:x="1201" fg:w="17"/><text x="98.2108%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.82%)</title><rect x="98.5318%" y="421" width="0.8157%" height="15" fill="rgb(244,32,34)" fg:x="1208" fg:w="10"/><text x="98.7818%" y="431.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="98.9396%" y="405" width="0.4078%" height="15" fill="rgb(251,224,37)" fg:x="1213" fg:w="5"/><text x="99.1896%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="98.9396%" y="389" width="0.4078%" height="15" fill="rgb(248,117,31)" fg:x="1213" fg:w="5"/><text x="99.1896%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="98.9396%" y="373" width="0.4078%" height="15" fill="rgb(222,208,37)" fg:x="1213" fg:w="5"/><text x="99.1896%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.1028%" y="357" width="0.2447%" height="15" fill="rgb(234,211,25)" fg:x="1215" fg:w="3"/><text x="99.3528%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.1028%" y="341" width="0.2447%" height="15" fill="rgb(211,72,6)" fg:x="1215" fg:w="3"/><text x="99.3528%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1843%" y="325" width="0.1631%" height="15" fill="rgb(249,198,38)" fg:x="1216" fg:w="2"/><text x="99.4343%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1843%" y="309" width="0.1631%" height="15" fill="rgb(221,86,51)" fg:x="1216" fg:w="2"/><text x="99.4343%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1843%" y="293" width="0.1631%" height="15" fill="rgb(226,178,43)" fg:x="1216" fg:w="2"/><text x="99.4343%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2659%" y="277" width="0.0816%" height="15" fill="rgb(215,145,7)" fg:x="1217" fg:w="1"/><text x="99.5159%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2659%" y="261" width="0.0816%" height="15" fill="rgb(250,202,36)" fg:x="1217" fg:w="1"/><text x="99.5159%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2659%" y="245" width="0.0816%" height="15" fill="rgb(215,86,13)" fg:x="1217" fg:w="1"/><text x="99.5159%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (18 samples, 1.47%)</title><rect x="97.9608%" y="469" width="1.4682%" height="15" fill="rgb(221,134,12)" fg:x="1201" fg:w="18"/><text x="98.2108%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.3475%" y="453" width="0.0816%" height="15" fill="rgb(213,82,10)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.3475%" y="437" width="0.0816%" height="15" fill="rgb(214,142,0)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.3475%" y="421" width="0.0816%" height="15" fill="rgb(205,145,9)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.3475%" y="405" width="0.0816%" height="15" fill="rgb(244,214,8)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.3475%" y="389" width="0.0816%" height="15" fill="rgb(224,72,51)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.3475%" y="373" width="0.0816%" height="15" fill="rgb(233,137,37)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.3475%" y="357" width="0.0816%" height="15" fill="rgb(208,71,28)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.3475%" y="341" width="0.0816%" height="15" fill="rgb(226,31,7)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.3475%" y="325" width="0.0816%" height="15" fill="rgb(229,62,18)" fg:x="1218" fg:w="1"/><text x="99.5975%" y="335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5106%" y="389" width="0.0816%" height="15" fill="rgb(226,74,28)" fg:x="1220" fg:w="1"/><text x="99.7606%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.5106%" y="373" width="0.0816%" height="15" fill="rgb(214,170,18)" fg:x="1220" fg:w="1"/><text x="99.7606%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (72 samples, 5.87%)</title><rect x="93.8010%" y="517" width="5.8728%" height="15" fill="rgb(227,229,35)" fg:x="1150" fg:w="72"/><text x="94.0510%" y="527.50">&lt;plugin..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (71 samples, 5.79%)</title><rect x="93.8825%" y="501" width="5.7912%" height="15" fill="rgb(225,181,39)" fg:x="1151" fg:w="71"/><text x="94.1325%" y="511.50">&lt;engine..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (21 samples, 1.71%)</title><rect x="97.9608%" y="485" width="1.7129%" height="15" fill="rgb(253,124,44)" fg:x="1201" fg:w="21"/><text x="98.2108%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.24%)</title><rect x="99.4290%" y="469" width="0.2447%" height="15" fill="rgb(220,75,18)" fg:x="1219" fg:w="3"/><text x="99.6790%" y="479.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="99.4290%" y="453" width="0.2447%" height="15" fill="rgb(239,175,43)" fg:x="1219" fg:w="3"/><text x="99.6790%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="99.4290%" y="437" width="0.2447%" height="15" fill="rgb(228,112,50)" fg:x="1219" fg:w="3"/><text x="99.6790%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.4290%" y="421" width="0.2447%" height="15" fill="rgb(232,105,36)" fg:x="1219" fg:w="3"/><text x="99.6790%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5106%" y="405" width="0.1631%" height="15" fill="rgb(227,137,47)" fg:x="1220" fg:w="2"/><text x="99.7606%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.5922%" y="389" width="0.0816%" height="15" fill="rgb(217,51,9)" fg:x="1221" fg:w="1"/><text x="99.8422%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73 samples, 5.95%)</title><rect x="93.8010%" y="533" width="5.9543%" height="15" fill="rgb(245,117,0)" fg:x="1150" fg:w="73"/><text x="94.0510%" y="543.50">&lt;core::i..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="99.6737%" y="517" width="0.0816%" height="15" fill="rgb(252,52,30)" fg:x="1222" fg:w="1"/><text x="99.9237%" y="527.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (74 samples, 6.04%)</title><rect x="93.8010%" y="581" width="6.0359%" height="15" fill="rgb(227,85,33)" fg:x="1150" fg:w="74"/><text x="94.0510%" y="591.50">&lt;kernel:..</text></g><g><title>core::iter::adapters::try_process (74 samples, 6.04%)</title><rect x="93.8010%" y="565" width="6.0359%" height="15" fill="rgb(220,157,20)" fg:x="1150" fg:w="74"/><text x="94.0510%" y="575.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 6.04%)</title><rect x="93.8010%" y="549" width="6.0359%" height="15" fill="rgb(254,14,34)" fg:x="1150" fg:w="74"/><text x="94.0510%" y="559.50">&lt;alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.7553%" y="533" width="0.0816%" height="15" fill="rgb(216,103,41)" fg:x="1223" fg:w="1"/><text x="100.0053%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.7553%" y="517" width="0.0816%" height="15" fill="rgb(245,221,9)" fg:x="1223" fg:w="1"/><text x="100.0053%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.7553%" y="501" width="0.0816%" height="15" fill="rgb(254,136,47)" fg:x="1223" fg:w="1"/><text x="100.0053%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.8369%" y="581" width="0.0816%" height="15" fill="rgb(235,71,46)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.8369%" y="565" width="0.0816%" height="15" fill="rgb(242,154,29)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8369%" y="549" width="0.0816%" height="15" fill="rgb(210,65,31)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8369%" y="533" width="0.0816%" height="15" fill="rgb(244,9,50)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.8369%" y="517" width="0.0816%" height="15" fill="rgb(215,141,38)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="99.8369%" y="501" width="0.0816%" height="15" fill="rgb(241,129,6)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="99.8369%" y="485" width="0.0816%" height="15" fill="rgb(253,169,4)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.8369%" y="469" width="0.0816%" height="15" fill="rgb(237,82,36)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8369%" y="453" width="0.0816%" height="15" fill="rgb(209,171,11)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8369%" y="437" width="0.0816%" height="15" fill="rgb(242,19,22)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8369%" y="421" width="0.0816%" height="15" fill="rgb(251,122,24)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.8369%" y="405" width="0.0816%" height="15" fill="rgb(226,166,42)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.8369%" y="389" width="0.0816%" height="15" fill="rgb(244,101,48)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.8369%" y="373" width="0.0816%" height="15" fill="rgb(227,125,1)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.8369%" y="357" width="0.0816%" height="15" fill="rgb(206,79,43)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.8369%" y="341" width="0.0816%" height="15" fill="rgb(241,109,41)" fg:x="1224" fg:w="1"/><text x="100.0869%" y="351.50"></text></g><g><title>all (1,226 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(219,73,4)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="975.50"></text></g><g><title>simple-6bd4aef2 (1,226 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(239,25,41)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="959.50">simple-6bd4aef2</text></g><g><title>_start (1,226 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(208,88,46)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="943.50">_start</text></g><g><title>__libc_start_main (1,226 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(239,184,9)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="927.50">__libc_start_main</text></g><g><title>main (1,226 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(223,114,13)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (1,226 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(214,28,42)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,226 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(252,32,44)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,226 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(231,159,4)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,226 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(210,35,26)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,226 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(208,190,37)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="831.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,226 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(226,148,22)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,226 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(242,153,24)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,226 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(213,133,7)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,226 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(248,206,18)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,226 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(233,157,4)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="751.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,226 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(249,179,32)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,226 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(248,69,35)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="719.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,226 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(249,158,38)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="703.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,226 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(223,18,43)" fg:x="0" fg:w="1226"/><text x="0.2500%" y="687.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (399 samples, 32.54%)</title><rect x="67.4551%" y="661" width="32.5449%" height="15" fill="rgb(238,42,45)" fg:x="827" fg:w="399"/><text x="67.7051%" y="671.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::ro..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (399 samples, 32.54%)</title><rect x="67.4551%" y="645" width="32.5449%" height="15" fill="rgb(219,65,47)" fg:x="827" fg:w="399"/><text x="67.7051%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (399 samples, 32.54%)</title><rect x="67.4551%" y="629" width="32.5449%" height="15" fill="rgb(248,153,12)" fg:x="827" fg:w="399"/><text x="67.7051%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (76 samples, 6.20%)</title><rect x="93.8010%" y="613" width="6.1990%" height="15" fill="rgb(240,118,4)" fg:x="1150" fg:w="76"/><text x="94.0510%" y="623.50">engine::..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (76 samples, 6.20%)</title><rect x="93.8010%" y="597" width="6.1990%" height="15" fill="rgb(250,96,34)" fg:x="1150" fg:w="76"/><text x="94.0510%" y="607.50">engine::..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.9184%" y="581" width="0.0816%" height="15" fill="rgb(221,15,4)" fg:x="1225" fg:w="1"/><text x="100.1684%" y="591.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="99.9184%" y="565" width="0.0816%" height="15" fill="rgb(217,149,33)" fg:x="1225" fg:w="1"/><text x="100.1684%" y="575.50"></text></g></svg></svg>