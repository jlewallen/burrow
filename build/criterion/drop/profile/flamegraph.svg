<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="1207"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.17%)</title><rect x="0.3314%" y="645" width="0.1657%" height="15" fill="rgb(222,184,47)" fg:x="4" fg:w="2"/><text x="0.5814%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="0.3314%" y="629" width="0.1657%" height="15" fill="rgb(249,99,23)" fg:x="4" fg:w="2"/><text x="0.5814%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.4143%" y="613" width="0.0829%" height="15" fill="rgb(214,60,12)" fg:x="5" fg:w="1"/><text x="0.6643%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.4143%" y="597" width="0.0829%" height="15" fill="rgb(250,229,36)" fg:x="5" fg:w="1"/><text x="0.6643%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5800%" y="613" width="0.0829%" height="15" fill="rgb(232,195,10)" fg:x="7" fg:w="1"/><text x="0.8300%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="0.9942%" y="549" width="0.2486%" height="15" fill="rgb(205,213,31)" fg:x="12" fg:w="3"/><text x="1.2442%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="1.2428%" y="549" width="0.1657%" height="15" fill="rgb(237,43,8)" fg:x="15" fg:w="2"/><text x="1.4928%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.4913%" y="533" width="0.0829%" height="15" fill="rgb(216,208,3)" fg:x="18" fg:w="1"/><text x="1.7413%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.4913%" y="517" width="0.0829%" height="15" fill="rgb(228,179,44)" fg:x="18" fg:w="1"/><text x="1.7413%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4913%" y="501" width="0.0829%" height="15" fill="rgb(230,192,27)" fg:x="18" fg:w="1"/><text x="1.7413%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5742%" y="533" width="0.0829%" height="15" fill="rgb(251,30,38)" fg:x="19" fg:w="1"/><text x="1.8242%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="1.6570%" y="533" width="0.1657%" height="15" fill="rgb(246,55,52)" fg:x="20" fg:w="2"/><text x="1.9070%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7399%" y="517" width="0.0829%" height="15" fill="rgb(249,79,26)" fg:x="21" fg:w="1"/><text x="1.9899%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8227%" y="501" width="0.0829%" height="15" fill="rgb(220,202,16)" fg:x="22" fg:w="1"/><text x="2.0727%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="1.8227%" y="533" width="0.1657%" height="15" fill="rgb(250,170,23)" fg:x="22" fg:w="2"/><text x="2.0727%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="1.8227%" y="517" width="0.1657%" height="15" fill="rgb(230,7,37)" fg:x="22" fg:w="2"/><text x="2.0727%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.9056%" y="501" width="0.0829%" height="15" fill="rgb(213,71,1)" fg:x="23" fg:w="1"/><text x="2.1556%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.9056%" y="485" width="0.0829%" height="15" fill="rgb(227,87,39)" fg:x="23" fg:w="1"/><text x="2.1556%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9056%" y="469" width="0.0829%" height="15" fill="rgb(210,41,29)" fg:x="23" fg:w="1"/><text x="2.1556%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.16%)</title><rect x="0.9114%" y="565" width="1.1599%" height="15" fill="rgb(206,191,31)" fg:x="11" fg:w="14"/><text x="1.1614%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="1.4085%" y="549" width="0.6628%" height="15" fill="rgb(247,75,54)" fg:x="17" fg:w="8"/><text x="1.6585%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Write::write_fmt::Adapter&lt;std::sys::unix::stdio::Stderr&gt;&gt; (1 samples, 0.08%)</title><rect x="1.9884%" y="533" width="0.0829%" height="15" fill="rgb(208,54,50)" fg:x="24" fg:w="1"/><text x="2.2384%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.49%)</title><rect x="0.6628%" y="581" width="1.4913%" height="15" fill="rgb(214,90,37)" fg:x="8" fg:w="18"/><text x="0.9128%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0713%" y="565" width="0.0829%" height="15" fill="rgb(220,132,6)" fg:x="25" fg:w="1"/><text x="2.3213%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.57%)</title><rect x="0.6628%" y="597" width="1.5742%" height="15" fill="rgb(213,167,7)" fg:x="8" fg:w="19"/><text x="0.9128%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1541%" y="581" width="0.0829%" height="15" fill="rgb(243,36,27)" fg:x="26" fg:w="1"/><text x="2.4041%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.74%)</title><rect x="0.5800%" y="629" width="1.7399%" height="15" fill="rgb(235,147,12)" fg:x="7" fg:w="21"/><text x="0.8300%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (20 samples, 1.66%)</title><rect x="0.6628%" y="613" width="1.6570%" height="15" fill="rgb(212,198,44)" fg:x="8" fg:w="20"/><text x="0.9128%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.2370%" y="597" width="0.0829%" height="15" fill="rgb(218,68,50)" fg:x="27" fg:w="1"/><text x="2.4870%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2370%" y="581" width="0.0829%" height="15" fill="rgb(224,79,48)" fg:x="27" fg:w="1"/><text x="2.4870%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.40%)</title><rect x="0.0829%" y="661" width="2.4027%" height="15" fill="rgb(213,191,50)" fg:x="1" fg:w="29"/><text x="0.3329%" y="671.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (24 samples, 1.99%)</title><rect x="0.4971%" y="645" width="1.9884%" height="15" fill="rgb(254,146,10)" fg:x="6" fg:w="24"/><text x="0.7471%" y="655.50">c..</text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="2.3198%" y="629" width="0.1657%" height="15" fill="rgb(215,175,11)" fg:x="28" fg:w="2"/><text x="2.5698%" y="639.50"></text></g><g><title>__asprintf (2 samples, 0.17%)</title><rect x="2.7341%" y="533" width="0.1657%" height="15" fill="rgb(207,49,7)" fg:x="33" fg:w="2"/><text x="2.9841%" y="543.50"></text></g><g><title>dlerror (3 samples, 0.25%)</title><rect x="2.7341%" y="549" width="0.2486%" height="15" fill="rgb(234,144,29)" fg:x="33" fg:w="3"/><text x="2.9841%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8998%" y="533" width="0.0829%" height="15" fill="rgb(213,222,48)" fg:x="35" fg:w="1"/><text x="3.1498%" y="543.50"></text></g><g><title>dlopen (13 samples, 1.08%)</title><rect x="2.9826%" y="549" width="1.0771%" height="15" fill="rgb(222,8,6)" fg:x="36" fg:w="13"/><text x="3.2326%" y="559.50"></text></g><g><title>_dl_catch_error (12 samples, 0.99%)</title><rect x="3.0655%" y="533" width="0.9942%" height="15" fill="rgb(221,114,49)" fg:x="37" fg:w="12"/><text x="3.3155%" y="543.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.99%)</title><rect x="3.0655%" y="517" width="0.9942%" height="15" fill="rgb(250,140,42)" fg:x="37" fg:w="12"/><text x="3.3155%" y="527.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.91%)</title><rect x="3.1483%" y="501" width="0.9114%" height="15" fill="rgb(250,150,27)" fg:x="38" fg:w="11"/><text x="3.3983%" y="511.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.83%)</title><rect x="3.2312%" y="485" width="0.8285%" height="15" fill="rgb(252,159,3)" fg:x="39" fg:w="10"/><text x="3.4812%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (17 samples, 1.41%)</title><rect x="2.7341%" y="581" width="1.4085%" height="15" fill="rgb(241,182,3)" fg:x="33" fg:w="17"/><text x="2.9841%" y="591.50"></text></g><g><title>libloading::safe::Library::new (17 samples, 1.41%)</title><rect x="2.7341%" y="565" width="1.4085%" height="15" fill="rgb(236,3,9)" fg:x="33" fg:w="17"/><text x="2.9841%" y="575.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="4.0597%" y="549" width="0.0829%" height="15" fill="rgb(223,227,51)" fg:x="49" fg:w="1"/><text x="4.3097%" y="559.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="4.0597%" y="533" width="0.0829%" height="15" fill="rgb(232,133,30)" fg:x="49" fg:w="1"/><text x="4.3097%" y="543.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="4.0597%" y="517" width="0.0829%" height="15" fill="rgb(209,93,27)" fg:x="49" fg:w="1"/><text x="4.3097%" y="527.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="4.0597%" y="501" width="0.0829%" height="15" fill="rgb(208,108,34)" fg:x="49" fg:w="1"/><text x="4.3097%" y="511.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="4.0597%" y="485" width="0.0829%" height="15" fill="rgb(215,189,13)" fg:x="49" fg:w="1"/><text x="4.3097%" y="495.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="4.1425%" y="565" width="0.0829%" height="15" fill="rgb(206,88,23)" fg:x="50" fg:w="1"/><text x="4.3925%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (19 samples, 1.57%)</title><rect x="2.7341%" y="597" width="1.5742%" height="15" fill="rgb(240,173,0)" fg:x="33" fg:w="19"/><text x="2.9841%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.17%)</title><rect x="4.1425%" y="581" width="0.1657%" height="15" fill="rgb(223,106,52)" fg:x="50" fg:w="2"/><text x="4.3925%" y="591.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.2254%" y="565" width="0.0829%" height="15" fill="rgb(206,130,16)" fg:x="51" fg:w="1"/><text x="4.4754%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="4.3911%" y="565" width="0.0829%" height="15" fill="rgb(220,54,25)" fg:x="53" fg:w="1"/><text x="4.6411%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.3911%" y="549" width="0.0829%" height="15" fill="rgb(210,4,38)" fg:x="53" fg:w="1"/><text x="4.6411%" y="559.50"></text></g><g><title>engine::session::Session::initialize (26 samples, 2.15%)</title><rect x="2.4855%" y="613" width="2.1541%" height="15" fill="rgb(238,94,39)" fg:x="30" fg:w="26"/><text x="2.7355%" y="623.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.33%)</title><rect x="4.3082%" y="597" width="0.3314%" height="15" fill="rgb(234,124,34)" fg:x="52" fg:w="4"/><text x="4.5582%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="4.3911%" y="581" width="0.2486%" height="15" fill="rgb(221,91,40)" fg:x="53" fg:w="3"/><text x="4.6411%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="4.4739%" y="565" width="0.1657%" height="15" fill="rgb(246,53,28)" fg:x="54" fg:w="2"/><text x="4.7239%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="4.4739%" y="549" width="0.1657%" height="15" fill="rgb(229,109,7)" fg:x="54" fg:w="2"/><text x="4.7239%" y="559.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="4.4739%" y="533" width="0.1657%" height="15" fill="rgb(249,117,8)" fg:x="54" fg:w="2"/><text x="4.7239%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (27 samples, 2.24%)</title><rect x="2.4855%" y="661" width="2.2370%" height="15" fill="rgb(210,181,1)" fg:x="30" fg:w="27"/><text x="2.7355%" y="671.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (27 samples, 2.24%)</title><rect x="2.4855%" y="645" width="2.2370%" height="15" fill="rgb(211,66,1)" fg:x="30" fg:w="27"/><text x="2.7355%" y="655.50">e..</text></g><g><title>engine::session::Session::new (27 samples, 2.24%)</title><rect x="2.4855%" y="629" width="2.2370%" height="15" fill="rgb(221,90,14)" fg:x="30" fg:w="27"/><text x="2.7355%" y="639.50">e..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.6396%" y="613" width="0.0829%" height="15" fill="rgb(219,222,44)" fg:x="56" fg:w="1"/><text x="4.8896%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.6396%" y="597" width="0.0829%" height="15" fill="rgb(246,34,33)" fg:x="56" fg:w="1"/><text x="4.8896%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.6396%" y="581" width="0.0829%" height="15" fill="rgb(227,135,41)" fg:x="56" fg:w="1"/><text x="4.8896%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.6396%" y="565" width="0.0829%" height="15" fill="rgb(226,15,14)" fg:x="56" fg:w="1"/><text x="4.8896%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.6396%" y="549" width="0.0829%" height="15" fill="rgb(236,148,47)" fg:x="56" fg:w="1"/><text x="4.8896%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="5.1367%" y="645" width="0.0829%" height="15" fill="rgb(233,162,52)" fg:x="62" fg:w="1"/><text x="5.3867%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.1367%" y="629" width="0.0829%" height="15" fill="rgb(244,35,28)" fg:x="62" fg:w="1"/><text x="5.3867%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.2196%" y="629" width="0.0829%" height="15" fill="rgb(205,121,10)" fg:x="63" fg:w="1"/><text x="5.4696%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.17%)</title><rect x="5.2196%" y="645" width="0.1657%" height="15" fill="rgb(250,58,18)" fg:x="63" fg:w="2"/><text x="5.4696%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.3024%" y="629" width="0.0829%" height="15" fill="rgb(216,37,13)" fg:x="64" fg:w="1"/><text x="5.5524%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.3024%" y="613" width="0.0829%" height="15" fill="rgb(221,215,42)" fg:x="64" fg:w="1"/><text x="5.5524%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.3853%" y="613" width="0.0829%" height="15" fill="rgb(217,214,19)" fg:x="65" fg:w="1"/><text x="5.6353%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.3853%" y="597" width="0.0829%" height="15" fill="rgb(233,139,13)" fg:x="65" fg:w="1"/><text x="5.6353%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.3853%" y="581" width="0.0829%" height="15" fill="rgb(247,168,23)" fg:x="65" fg:w="1"/><text x="5.6353%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.3853%" y="565" width="0.0829%" height="15" fill="rgb(207,202,1)" fg:x="65" fg:w="1"/><text x="5.6353%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.3853%" y="549" width="0.0829%" height="15" fill="rgb(220,155,48)" fg:x="65" fg:w="1"/><text x="5.6353%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.3853%" y="533" width="0.0829%" height="15" fill="rgb(250,43,26)" fg:x="65" fg:w="1"/><text x="5.6353%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.3853%" y="517" width="0.0829%" height="15" fill="rgb(212,190,23)" fg:x="65" fg:w="1"/><text x="5.6353%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.3853%" y="501" width="0.0829%" height="15" fill="rgb(216,39,24)" fg:x="65" fg:w="1"/><text x="5.6353%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.3853%" y="485" width="0.0829%" height="15" fill="rgb(252,113,16)" fg:x="65" fg:w="1"/><text x="5.6353%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.3853%" y="469" width="0.0829%" height="15" fill="rgb(208,113,19)" fg:x="65" fg:w="1"/><text x="5.6353%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.3853%" y="453" width="0.0829%" height="15" fill="rgb(234,107,25)" fg:x="65" fg:w="1"/><text x="5.6353%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.3853%" y="437" width="0.0829%" height="15" fill="rgb(234,217,51)" fg:x="65" fg:w="1"/><text x="5.6353%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.4681%" y="613" width="0.0829%" height="15" fill="rgb(251,29,42)" fg:x="66" fg:w="1"/><text x="5.7181%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.5510%" y="613" width="0.0829%" height="15" fill="rgb(221,62,51)" fg:x="67" fg:w="1"/><text x="5.8010%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.33%)</title><rect x="5.3853%" y="629" width="0.3314%" height="15" fill="rgb(240,192,43)" fg:x="65" fg:w="4"/><text x="5.6353%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="5.6338%" y="613" width="0.0829%" height="15" fill="rgb(224,157,47)" fg:x="68" fg:w="1"/><text x="5.8838%" y="623.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="5.7167%" y="629" width="0.0829%" height="15" fill="rgb(226,84,45)" fg:x="69" fg:w="1"/><text x="5.9667%" y="639.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="5.7167%" y="613" width="0.0829%" height="15" fill="rgb(208,207,23)" fg:x="69" fg:w="1"/><text x="5.9667%" y="623.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="5.7167%" y="597" width="0.0829%" height="15" fill="rgb(253,34,51)" fg:x="69" fg:w="1"/><text x="5.9667%" y="607.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="5.7167%" y="581" width="0.0829%" height="15" fill="rgb(227,26,34)" fg:x="69" fg:w="1"/><text x="5.9667%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="5.7167%" y="565" width="0.0829%" height="15" fill="rgb(245,75,19)" fg:x="69" fg:w="1"/><text x="5.9667%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="5.7167%" y="549" width="0.0829%" height="15" fill="rgb(250,191,31)" fg:x="69" fg:w="1"/><text x="5.9667%" y="559.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="5.7167%" y="533" width="0.0829%" height="15" fill="rgb(224,11,50)" fg:x="69" fg:w="1"/><text x="5.9667%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.7995%" y="597" width="0.0829%" height="15" fill="rgb(231,171,7)" fg:x="70" fg:w="1"/><text x="6.0495%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.8824%" y="597" width="0.0829%" height="15" fill="rgb(252,214,10)" fg:x="71" fg:w="1"/><text x="6.1324%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="5.8824%" y="581" width="0.0829%" height="15" fill="rgb(249,45,46)" fg:x="71" fg:w="1"/><text x="6.1324%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.9652%" y="581" width="0.0829%" height="15" fill="rgb(240,173,7)" fg:x="72" fg:w="1"/><text x="6.2152%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="6.1309%" y="533" width="0.1657%" height="15" fill="rgb(235,214,13)" fg:x="74" fg:w="2"/><text x="6.3809%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="6.1309%" y="517" width="0.1657%" height="15" fill="rgb(245,156,8)" fg:x="74" fg:w="2"/><text x="6.3809%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.2138%" y="501" width="0.0829%" height="15" fill="rgb(235,46,12)" fg:x="75" fg:w="1"/><text x="6.4638%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.50%)</title><rect x="6.1309%" y="549" width="0.4971%" height="15" fill="rgb(221,81,14)" fg:x="74" fg:w="6"/><text x="6.3809%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="6.2966%" y="533" width="0.3314%" height="15" fill="rgb(238,207,9)" fg:x="76" fg:w="4"/><text x="6.5466%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="6.4623%" y="517" width="0.1657%" height="15" fill="rgb(224,129,35)" fg:x="78" fg:w="2"/><text x="6.7123%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="6.4623%" y="501" width="0.1657%" height="15" fill="rgb(243,218,34)" fg:x="78" fg:w="2"/><text x="6.7123%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="7.1251%" y="533" width="0.1657%" height="15" fill="rgb(220,166,13)" fg:x="86" fg:w="2"/><text x="7.3751%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="7.1251%" y="517" width="0.1657%" height="15" fill="rgb(227,167,49)" fg:x="86" fg:w="2"/><text x="7.3751%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.2080%" y="501" width="0.0829%" height="15" fill="rgb(234,142,12)" fg:x="87" fg:w="1"/><text x="7.4580%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="7.7051%" y="485" width="0.1657%" height="15" fill="rgb(207,100,48)" fg:x="93" fg:w="2"/><text x="7.9551%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.66%)</title><rect x="7.2908%" y="533" width="0.6628%" height="15" fill="rgb(210,25,14)" fg:x="88" fg:w="8"/><text x="7.5408%" y="543.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.58%)</title><rect x="7.3737%" y="517" width="0.5800%" height="15" fill="rgb(246,116,27)" fg:x="89" fg:w="7"/><text x="7.6237%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.41%)</title><rect x="7.5394%" y="501" width="0.4143%" height="15" fill="rgb(214,193,42)" fg:x="91" fg:w="5"/><text x="7.7894%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.8708%" y="485" width="0.0829%" height="15" fill="rgb(214,122,8)" fg:x="95" fg:w="1"/><text x="8.1208%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="7.9536%" y="517" width="0.4143%" height="15" fill="rgb(244,173,18)" fg:x="96" fg:w="5"/><text x="8.2036%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="7.9536%" y="501" width="0.4143%" height="15" fill="rgb(232,68,19)" fg:x="96" fg:w="5"/><text x="8.2036%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="7.9536%" y="485" width="0.4143%" height="15" fill="rgb(236,224,1)" fg:x="96" fg:w="5"/><text x="8.2036%" y="495.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="7.9536%" y="469" width="0.4143%" height="15" fill="rgb(240,11,8)" fg:x="96" fg:w="5"/><text x="8.2036%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="8.2022%" y="453" width="0.1657%" height="15" fill="rgb(244,159,20)" fg:x="99" fg:w="2"/><text x="8.4522%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="8.2022%" y="437" width="0.1657%" height="15" fill="rgb(240,223,54)" fg:x="99" fg:w="2"/><text x="8.4522%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.2850%" y="421" width="0.0829%" height="15" fill="rgb(237,146,5)" fg:x="100" fg:w="1"/><text x="8.5350%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="8.3679%" y="517" width="0.1657%" height="15" fill="rgb(218,221,32)" fg:x="101" fg:w="2"/><text x="8.6179%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.4507%" y="501" width="0.0829%" height="15" fill="rgb(244,96,26)" fg:x="102" fg:w="1"/><text x="8.7007%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="8.6993%" y="485" width="0.1657%" height="15" fill="rgb(245,184,37)" fg:x="105" fg:w="2"/><text x="8.9493%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="8.6993%" y="469" width="0.1657%" height="15" fill="rgb(248,91,47)" fg:x="105" fg:w="2"/><text x="8.9493%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.7821%" y="453" width="0.0829%" height="15" fill="rgb(243,199,8)" fg:x="106" fg:w="1"/><text x="9.0321%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="8.9478%" y="469" width="0.4143%" height="15" fill="rgb(249,12,15)" fg:x="108" fg:w="5"/><text x="9.1978%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="9.1135%" y="453" width="0.2486%" height="15" fill="rgb(245,97,12)" fg:x="110" fg:w="3"/><text x="9.3635%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="9.1964%" y="437" width="0.1657%" height="15" fill="rgb(244,61,1)" fg:x="111" fg:w="2"/><text x="9.4464%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.2792%" y="421" width="0.0829%" height="15" fill="rgb(222,194,10)" fg:x="112" fg:w="1"/><text x="9.5292%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.3621%" y="453" width="0.0829%" height="15" fill="rgb(226,178,8)" fg:x="113" fg:w="1"/><text x="9.6121%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.3621%" y="437" width="0.0829%" height="15" fill="rgb(241,32,34)" fg:x="113" fg:w="1"/><text x="9.6121%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.3621%" y="421" width="0.0829%" height="15" fill="rgb(254,26,6)" fg:x="113" fg:w="1"/><text x="9.6121%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.3621%" y="405" width="0.0829%" height="15" fill="rgb(249,71,11)" fg:x="113" fg:w="1"/><text x="9.6121%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="9.4449%" y="453" width="0.1657%" height="15" fill="rgb(232,170,27)" fg:x="114" fg:w="2"/><text x="9.6949%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="9.4449%" y="437" width="0.1657%" height="15" fill="rgb(214,223,17)" fg:x="114" fg:w="2"/><text x="9.6949%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.5278%" y="421" width="0.0829%" height="15" fill="rgb(250,18,15)" fg:x="115" fg:w="1"/><text x="9.7778%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.5278%" y="405" width="0.0829%" height="15" fill="rgb(212,153,51)" fg:x="115" fg:w="1"/><text x="9.7778%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.5278%" y="389" width="0.0829%" height="15" fill="rgb(219,194,12)" fg:x="115" fg:w="1"/><text x="9.7778%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.5278%" y="373" width="0.0829%" height="15" fill="rgb(212,58,17)" fg:x="115" fg:w="1"/><text x="9.7778%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.5278%" y="357" width="0.0829%" height="15" fill="rgb(254,5,10)" fg:x="115" fg:w="1"/><text x="9.7778%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="9.6106%" y="453" width="0.0829%" height="15" fill="rgb(246,91,7)" fg:x="116" fg:w="1"/><text x="9.8606%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.50%)</title><rect x="9.3621%" y="469" width="0.4971%" height="15" fill="rgb(218,108,49)" fg:x="113" fg:w="6"/><text x="9.6121%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="9.6935%" y="453" width="0.1657%" height="15" fill="rgb(238,123,20)" fg:x="117" fg:w="2"/><text x="9.9435%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="9.6935%" y="437" width="0.1657%" height="15" fill="rgb(231,69,23)" fg:x="117" fg:w="2"/><text x="9.9435%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="9.6935%" y="421" width="0.1657%" height="15" fill="rgb(230,209,3)" fg:x="117" fg:w="2"/><text x="9.9435%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.33%)</title><rect x="8.8650%" y="485" width="1.3256%" height="15" fill="rgb(231,19,0)" fg:x="107" fg:w="16"/><text x="9.1150%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="9.8592%" y="469" width="0.3314%" height="15" fill="rgb(226,192,25)" fg:x="119" fg:w="4"/><text x="10.1092%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.1077%" y="453" width="0.0829%" height="15" fill="rgb(223,175,53)" fg:x="122" fg:w="1"/><text x="10.3577%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1077%" y="437" width="0.0829%" height="15" fill="rgb(248,35,51)" fg:x="122" fg:w="1"/><text x="10.3577%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.74%)</title><rect x="8.5336%" y="501" width="1.7399%" height="15" fill="rgb(230,37,26)" fg:x="103" fg:w="21"/><text x="8.7836%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.1906%" y="485" width="0.0829%" height="15" fill="rgb(206,120,22)" fg:x="123" fg:w="1"/><text x="10.4406%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.1906%" y="469" width="0.0829%" height="15" fill="rgb(207,165,28)" fg:x="123" fg:w="1"/><text x="10.4406%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.82%)</title><rect x="8.5336%" y="517" width="1.8227%" height="15" fill="rgb(226,23,46)" fg:x="103" fg:w="22"/><text x="8.7836%" y="527.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.2734%" y="501" width="0.0829%" height="15" fill="rgb(208,130,44)" fg:x="124" fg:w="1"/><text x="10.5234%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.57%)</title><rect x="7.9536%" y="533" width="2.5684%" height="15" fill="rgb(231,67,8)" fg:x="96" fg:w="31"/><text x="8.2036%" y="543.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="10.3563%" y="517" width="0.1657%" height="15" fill="rgb(205,183,22)" fg:x="125" fg:w="2"/><text x="10.6063%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="10.3563%" y="501" width="0.1657%" height="15" fill="rgb(224,47,9)" fg:x="125" fg:w="2"/><text x="10.6063%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.4391%" y="485" width="0.0829%" height="15" fill="rgb(250,183,49)" fg:x="126" fg:w="1"/><text x="10.6891%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (51 samples, 4.23%)</title><rect x="6.6280%" y="549" width="4.2254%" height="15" fill="rgb(220,151,39)" fg:x="80" fg:w="51"/><text x="6.8780%" y="559.50">serde..</text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="10.5220%" y="533" width="0.3314%" height="15" fill="rgb(220,118,20)" fg:x="127" fg:w="4"/><text x="10.7720%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="10.6048%" y="517" width="0.2486%" height="15" fill="rgb(231,65,51)" fg:x="128" fg:w="3"/><text x="10.8548%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.7705%" y="501" width="0.0829%" height="15" fill="rgb(253,125,37)" fg:x="130" fg:w="1"/><text x="11.0205%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (58 samples, 4.81%)</title><rect x="6.1309%" y="565" width="4.8053%" height="15" fill="rgb(232,102,6)" fg:x="74" fg:w="58"/><text x="6.3809%" y="575.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.8534%" y="549" width="0.0829%" height="15" fill="rgb(251,105,13)" fg:x="131" fg:w="1"/><text x="11.1034%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.8534%" y="533" width="0.0829%" height="15" fill="rgb(222,179,29)" fg:x="131" fg:w="1"/><text x="11.1034%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="10.9362%" y="533" width="0.1657%" height="15" fill="rgb(229,180,53)" fg:x="132" fg:w="2"/><text x="11.1862%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.1019%" y="533" width="0.0829%" height="15" fill="rgb(238,104,13)" fg:x="134" fg:w="1"/><text x="11.3519%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="11.2676%" y="517" width="0.1657%" height="15" fill="rgb(210,130,5)" fg:x="136" fg:w="2"/><text x="11.5176%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.4333%" y="517" width="0.0829%" height="15" fill="rgb(233,87,49)" fg:x="138" fg:w="1"/><text x="11.6833%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5162%" y="501" width="0.0829%" height="15" fill="rgb(243,34,9)" fg:x="139" fg:w="1"/><text x="11.7662%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5990%" y="485" width="0.0829%" height="15" fill="rgb(235,225,10)" fg:x="140" fg:w="1"/><text x="11.8490%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.6819%" y="453" width="0.0829%" height="15" fill="rgb(212,0,30)" fg:x="141" fg:w="1"/><text x="11.9319%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.91%)</title><rect x="10.9362%" y="565" width="0.9114%" height="15" fill="rgb(211,177,0)" fg:x="132" fg:w="11"/><text x="11.1862%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.91%)</title><rect x="10.9362%" y="549" width="0.9114%" height="15" fill="rgb(225,220,11)" fg:x="132" fg:w="11"/><text x="11.1862%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="11.1848%" y="533" width="0.6628%" height="15" fill="rgb(215,10,13)" fg:x="135" fg:w="8"/><text x="11.4348%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="11.5162%" y="517" width="0.3314%" height="15" fill="rgb(240,177,14)" fg:x="139" fg:w="4"/><text x="11.7662%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="11.5990%" y="501" width="0.2486%" height="15" fill="rgb(243,7,39)" fg:x="140" fg:w="3"/><text x="11.8490%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="11.6819%" y="485" width="0.1657%" height="15" fill="rgb(212,99,0)" fg:x="141" fg:w="2"/><text x="11.9319%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="11.6819%" y="469" width="0.1657%" height="15" fill="rgb(225,162,48)" fg:x="141" fg:w="2"/><text x="11.9319%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.7647%" y="453" width="0.0829%" height="15" fill="rgb(246,16,25)" fg:x="142" fg:w="1"/><text x="12.0147%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.7647%" y="437" width="0.0829%" height="15" fill="rgb(220,150,2)" fg:x="142" fg:w="1"/><text x="12.0147%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7647%" y="421" width="0.0829%" height="15" fill="rgb(237,113,11)" fg:x="142" fg:w="1"/><text x="12.0147%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8476%" y="533" width="0.0829%" height="15" fill="rgb(236,70,20)" fg:x="143" fg:w="1"/><text x="12.0976%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.17%)</title><rect x="11.8476%" y="549" width="0.1657%" height="15" fill="rgb(234,94,7)" fg:x="143" fg:w="2"/><text x="12.0976%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="11.9304%" y="533" width="0.0829%" height="15" fill="rgb(250,221,0)" fg:x="144" fg:w="1"/><text x="12.1804%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="12.6761%" y="517" width="0.3314%" height="15" fill="rgb(245,149,46)" fg:x="153" fg:w="4"/><text x="12.9261%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="12.7589%" y="501" width="0.2486%" height="15" fill="rgb(215,37,27)" fg:x="154" fg:w="3"/><text x="13.0089%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.0075%" y="517" width="0.0829%" height="15" fill="rgb(232,65,3)" fg:x="157" fg:w="1"/><text x="13.2575%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.0075%" y="501" width="0.0829%" height="15" fill="rgb(214,2,16)" fg:x="157" fg:w="1"/><text x="13.2575%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1732%" y="485" width="0.0829%" height="15" fill="rgb(227,131,50)" fg:x="159" fg:w="1"/><text x="13.4232%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.25%)</title><rect x="13.0903%" y="517" width="0.2486%" height="15" fill="rgb(247,131,45)" fg:x="158" fg:w="3"/><text x="13.3403%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="13.1732%" y="501" width="0.1657%" height="15" fill="rgb(215,97,47)" fg:x="159" fg:w="2"/><text x="13.4232%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2560%" y="485" width="0.0829%" height="15" fill="rgb(233,143,12)" fg:x="160" fg:w="1"/><text x="13.5060%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.5046%" y="485" width="0.0829%" height="15" fill="rgb(222,57,17)" fg:x="163" fg:w="1"/><text x="13.7546%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5874%" y="469" width="0.0829%" height="15" fill="rgb(214,119,38)" fg:x="164" fg:w="1"/><text x="13.8374%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5874%" y="453" width="0.0829%" height="15" fill="rgb(217,28,47)" fg:x="164" fg:w="1"/><text x="13.8374%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5874%" y="437" width="0.0829%" height="15" fill="rgb(231,14,52)" fg:x="164" fg:w="1"/><text x="13.8374%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="13.6703%" y="437" width="0.3314%" height="15" fill="rgb(220,158,18)" fg:x="165" fg:w="4"/><text x="13.9203%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="13.8360%" y="421" width="0.1657%" height="15" fill="rgb(222,143,46)" fg:x="167" fg:w="2"/><text x="14.0860%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="13.8360%" y="405" width="0.1657%" height="15" fill="rgb(227,165,5)" fg:x="167" fg:w="2"/><text x="14.0860%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="13.6703%" y="469" width="0.4143%" height="15" fill="rgb(216,222,49)" fg:x="165" fg:w="5"/><text x="13.9203%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="13.6703%" y="453" width="0.4143%" height="15" fill="rgb(238,73,39)" fg:x="165" fg:w="5"/><text x="13.9203%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0017%" y="437" width="0.0829%" height="15" fill="rgb(252,115,9)" fg:x="169" fg:w="1"/><text x="14.2517%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.1674%" y="453" width="0.0829%" height="15" fill="rgb(238,202,4)" fg:x="171" fg:w="1"/><text x="14.4174%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="14.4988%" y="405" width="0.1657%" height="15" fill="rgb(252,153,44)" fg:x="175" fg:w="2"/><text x="14.7488%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="14.4988%" y="389" width="0.1657%" height="15" fill="rgb(235,128,27)" fg:x="175" fg:w="2"/><text x="14.7488%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="14.8302%" y="389" width="0.3314%" height="15" fill="rgb(221,121,47)" fg:x="179" fg:w="4"/><text x="15.0802%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="14.9130%" y="373" width="0.2486%" height="15" fill="rgb(247,211,47)" fg:x="180" fg:w="3"/><text x="15.1630%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="14.9959%" y="357" width="0.1657%" height="15" fill="rgb(252,47,49)" fg:x="181" fg:w="2"/><text x="15.2459%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="14.9959%" y="341" width="0.1657%" height="15" fill="rgb(219,119,53)" fg:x="181" fg:w="2"/><text x="15.2459%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.99%)</title><rect x="14.2502%" y="453" width="0.9942%" height="15" fill="rgb(243,165,53)" fg:x="172" fg:w="12"/><text x="14.5002%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.99%)</title><rect x="14.2502%" y="437" width="0.9942%" height="15" fill="rgb(230,12,35)" fg:x="172" fg:w="12"/><text x="14.5002%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.83%)</title><rect x="14.4159%" y="421" width="0.8285%" height="15" fill="rgb(239,57,49)" fg:x="174" fg:w="10"/><text x="14.6659%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.58%)</title><rect x="14.6645%" y="405" width="0.5800%" height="15" fill="rgb(231,154,7)" fg:x="177" fg:w="7"/><text x="14.9145%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1616%" y="389" width="0.0829%" height="15" fill="rgb(248,81,34)" fg:x="183" fg:w="1"/><text x="15.4116%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.74%)</title><rect x="13.5874%" y="485" width="1.7399%" height="15" fill="rgb(247,9,5)" fg:x="164" fg:w="21"/><text x="13.8374%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.24%)</title><rect x="14.0845%" y="469" width="1.2428%" height="15" fill="rgb(228,172,27)" fg:x="170" fg:w="15"/><text x="14.3345%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2444%" y="453" width="0.0829%" height="15" fill="rgb(230,57,44)" fg:x="184" fg:w="1"/><text x="15.4944%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (25 samples, 2.07%)</title><rect x="13.4217%" y="501" width="2.0713%" height="15" fill="rgb(249,35,22)" fg:x="162" fg:w="25"/><text x="13.6717%" y="511.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.17%)</title><rect x="15.3273%" y="485" width="0.1657%" height="15" fill="rgb(250,137,27)" fg:x="185" fg:w="2"/><text x="15.5773%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="15.3273%" y="469" width="0.1657%" height="15" fill="rgb(251,57,31)" fg:x="185" fg:w="2"/><text x="15.5773%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.4930%" y="501" width="0.0829%" height="15" fill="rgb(238,60,0)" fg:x="187" fg:w="1"/><text x="15.7430%" y="511.50"></text></g><g><title>engine::session::Session::flush (124 samples, 10.27%)</title><rect x="5.3853%" y="645" width="10.2734%" height="15" fill="rgb(242,185,39)" fg:x="65" fg:w="124"/><text x="5.6353%" y="655.50">engine::session..</text></g><g><title>engine::session::state::State::close (119 samples, 9.86%)</title><rect x="5.7995%" y="629" width="9.8592%" height="15" fill="rgb(240,63,43)" fg:x="70" fg:w="119"/><text x="6.0495%" y="639.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_entities (119 samples, 9.86%)</title><rect x="5.7995%" y="613" width="9.8592%" height="15" fill="rgb(236,155,6)" fg:x="70" fg:w="119"/><text x="6.0495%" y="623.50">engine::sessio..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (117 samples, 9.69%)</title><rect x="5.9652%" y="597" width="9.6935%" height="15" fill="rgb(215,11,29)" fg:x="72" fg:w="117"/><text x="6.2152%" y="607.50">engine::sessio..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (116 samples, 9.61%)</title><rect x="6.0481%" y="581" width="9.6106%" height="15" fill="rgb(228,180,48)" fg:x="73" fg:w="116"/><text x="6.2981%" y="591.50">engine::sessio..</text></g><g><title>kernel::model::any_entity_changes (46 samples, 3.81%)</title><rect x="11.8476%" y="565" width="3.8111%" height="15" fill="rgb(241,102,12)" fg:x="143" fg:w="46"/><text x="12.0976%" y="575.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (44 samples, 3.65%)</title><rect x="12.0133%" y="549" width="3.6454%" height="15" fill="rgb(246,213,4)" fg:x="145" fg:w="44"/><text x="12.2633%" y="559.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 3.31%)</title><rect x="12.3447%" y="533" width="3.3140%" height="15" fill="rgb(218,134,35)" fg:x="149" fg:w="40"/><text x="12.5947%" y="543.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.32%)</title><rect x="13.3389%" y="517" width="2.3198%" height="15" fill="rgb(251,117,35)" fg:x="161" fg:w="28"/><text x="13.5889%" y="527.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5758%" y="501" width="0.0829%" height="15" fill="rgb(206,156,45)" fg:x="188" fg:w="1"/><text x="15.8258%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5758%" y="485" width="0.0829%" height="15" fill="rgb(218,52,27)" fg:x="188" fg:w="1"/><text x="15.8258%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="15.5758%" y="469" width="0.0829%" height="15" fill="rgb(238,83,36)" fg:x="188" fg:w="1"/><text x="15.8258%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.17%)</title><rect x="15.8244%" y="613" width="0.1657%" height="15" fill="rgb(218,53,43)" fg:x="191" fg:w="2"/><text x="16.0744%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.17%)</title><rect x="15.8244%" y="597" width="0.1657%" height="15" fill="rgb(239,54,39)" fg:x="191" fg:w="2"/><text x="16.0744%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="15.8244%" y="581" width="0.1657%" height="15" fill="rgb(212,198,13)" fg:x="191" fg:w="2"/><text x="16.0744%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="565" width="0.1657%" height="15" fill="rgb(234,54,46)" fg:x="191" fg:w="2"/><text x="16.0744%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="15.8244%" y="549" width="0.1657%" height="15" fill="rgb(217,120,7)" fg:x="191" fg:w="2"/><text x="16.0744%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="533" width="0.1657%" height="15" fill="rgb(246,39,15)" fg:x="191" fg:w="2"/><text x="16.0744%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="517" width="0.1657%" height="15" fill="rgb(242,143,31)" fg:x="191" fg:w="2"/><text x="16.0744%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="501" width="0.1657%" height="15" fill="rgb(252,60,24)" fg:x="191" fg:w="2"/><text x="16.0744%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="15.8244%" y="485" width="0.1657%" height="15" fill="rgb(249,220,7)" fg:x="191" fg:w="2"/><text x="16.0744%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="469" width="0.1657%" height="15" fill="rgb(236,67,13)" fg:x="191" fg:w="2"/><text x="16.0744%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="453" width="0.1657%" height="15" fill="rgb(210,62,39)" fg:x="191" fg:w="2"/><text x="16.0744%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="437" width="0.1657%" height="15" fill="rgb(219,122,53)" fg:x="191" fg:w="2"/><text x="16.0744%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="15.8244%" y="421" width="0.1657%" height="15" fill="rgb(218,87,25)" fg:x="191" fg:w="2"/><text x="16.0744%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="405" width="0.1657%" height="15" fill="rgb(234,179,48)" fg:x="191" fg:w="2"/><text x="16.0744%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="389" width="0.1657%" height="15" fill="rgb(248,90,0)" fg:x="191" fg:w="2"/><text x="16.0744%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="373" width="0.1657%" height="15" fill="rgb(207,228,37)" fg:x="191" fg:w="2"/><text x="16.0744%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="15.8244%" y="357" width="0.1657%" height="15" fill="rgb(235,214,15)" fg:x="191" fg:w="2"/><text x="16.0744%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="15.8244%" y="341" width="0.1657%" height="15" fill="rgb(210,144,39)" fg:x="191" fg:w="2"/><text x="16.0744%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="15.8244%" y="325" width="0.1657%" height="15" fill="rgb(222,67,41)" fg:x="191" fg:w="2"/><text x="16.0744%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="15.8244%" y="309" width="0.1657%" height="15" fill="rgb(205,35,37)" fg:x="191" fg:w="2"/><text x="16.0744%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.17%)</title><rect x="15.8244%" y="293" width="0.1657%" height="15" fill="rgb(216,125,40)" fg:x="191" fg:w="2"/><text x="16.0744%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.17%)</title><rect x="15.8244%" y="277" width="0.1657%" height="15" fill="rgb(228,227,20)" fg:x="191" fg:w="2"/><text x="16.0744%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.17%)</title><rect x="15.8244%" y="261" width="0.1657%" height="15" fill="rgb(242,173,45)" fg:x="191" fg:w="2"/><text x="16.0744%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.17%)</title><rect x="15.8244%" y="245" width="0.1657%" height="15" fill="rgb(215,79,24)" fg:x="191" fg:w="2"/><text x="16.0744%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="15.9072%" y="229" width="0.0829%" height="15" fill="rgb(238,164,38)" fg:x="192" fg:w="1"/><text x="16.1572%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="15.9072%" y="213" width="0.0829%" height="15" fill="rgb(245,196,38)" fg:x="192" fg:w="1"/><text x="16.1572%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.9072%" y="197" width="0.0829%" height="15" fill="rgb(231,217,29)" fg:x="192" fg:w="1"/><text x="16.1572%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="15.9072%" y="181" width="0.0829%" height="15" fill="rgb(245,6,4)" fg:x="192" fg:w="1"/><text x="16.1572%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.9072%" y="165" width="0.0829%" height="15" fill="rgb(214,76,49)" fg:x="192" fg:w="1"/><text x="16.1572%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="15.9072%" y="149" width="0.0829%" height="15" fill="rgb(205,96,12)" fg:x="192" fg:w="1"/><text x="16.1572%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="15.9072%" y="133" width="0.0829%" height="15" fill="rgb(243,131,4)" fg:x="192" fg:w="1"/><text x="16.1572%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="15.9072%" y="117" width="0.0829%" height="15" fill="rgb(214,114,4)" fg:x="192" fg:w="1"/><text x="16.1572%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.9072%" y="101" width="0.0829%" height="15" fill="rgb(234,215,15)" fg:x="192" fg:w="1"/><text x="16.1572%" y="111.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.9901%" y="597" width="0.0829%" height="15" fill="rgb(250,216,45)" fg:x="193" fg:w="1"/><text x="16.2401%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.9901%" y="581" width="0.0829%" height="15" fill="rgb(236,128,4)" fg:x="193" fg:w="1"/><text x="16.2401%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="16.1558%" y="565" width="0.1657%" height="15" fill="rgb(234,50,33)" fg:x="195" fg:w="2"/><text x="16.4058%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2386%" y="549" width="0.0829%" height="15" fill="rgb(253,131,37)" fg:x="196" fg:w="1"/><text x="16.4886%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2386%" y="533" width="0.0829%" height="15" fill="rgb(218,55,27)" fg:x="196" fg:w="1"/><text x="16.4886%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.2386%" y="517" width="0.0829%" height="15" fill="rgb(241,220,28)" fg:x="196" fg:w="1"/><text x="16.4886%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.2386%" y="501" width="0.0829%" height="15" fill="rgb(241,90,48)" fg:x="196" fg:w="1"/><text x="16.4886%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="15.9901%" y="613" width="0.4143%" height="15" fill="rgb(216,43,37)" fg:x="193" fg:w="5"/><text x="16.2401%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="16.0729%" y="597" width="0.3314%" height="15" fill="rgb(207,173,9)" fg:x="194" fg:w="4"/><text x="16.3229%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="16.0729%" y="581" width="0.3314%" height="15" fill="rgb(240,126,30)" fg:x="194" fg:w="4"/><text x="16.3229%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.3215%" y="565" width="0.0829%" height="15" fill="rgb(228,178,53)" fg:x="197" fg:w="1"/><text x="16.5715%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.3215%" y="549" width="0.0829%" height="15" fill="rgb(217,33,4)" fg:x="197" fg:w="1"/><text x="16.5715%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="16.4043%" y="613" width="0.0829%" height="15" fill="rgb(206,124,34)" fg:x="198" fg:w="1"/><text x="16.6543%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.17%)</title><rect x="16.4872%" y="613" width="0.1657%" height="15" fill="rgb(208,122,53)" fg:x="199" fg:w="2"/><text x="16.7372%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.17%)</title><rect x="16.4872%" y="597" width="0.1657%" height="15" fill="rgb(215,202,26)" fg:x="199" fg:w="2"/><text x="16.7372%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="16.4872%" y="581" width="0.1657%" height="15" fill="rgb(232,198,31)" fg:x="199" fg:w="2"/><text x="16.7372%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="16.4872%" y="565" width="0.1657%" height="15" fill="rgb(222,23,35)" fg:x="199" fg:w="2"/><text x="16.7372%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.5700%" y="549" width="0.0829%" height="15" fill="rgb(242,27,53)" fg:x="200" fg:w="1"/><text x="16.8200%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="16.6529%" y="597" width="0.2486%" height="15" fill="rgb(210,216,42)" fg:x="201" fg:w="3"/><text x="16.9029%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.25%)</title><rect x="16.6529%" y="581" width="0.2486%" height="15" fill="rgb(234,39,38)" fg:x="201" fg:w="3"/><text x="16.9029%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.17%)</title><rect x="16.7357%" y="565" width="0.1657%" height="15" fill="rgb(235,126,54)" fg:x="202" fg:w="2"/><text x="16.9857%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="16.7357%" y="549" width="0.1657%" height="15" fill="rgb(235,150,33)" fg:x="202" fg:w="2"/><text x="16.9857%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="16.7357%" y="533" width="0.1657%" height="15" fill="rgb(249,49,53)" fg:x="202" fg:w="2"/><text x="16.9857%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="16.7357%" y="517" width="0.1657%" height="15" fill="rgb(238,60,50)" fg:x="202" fg:w="2"/><text x="16.9857%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="16.7357%" y="501" width="0.1657%" height="15" fill="rgb(210,5,2)" fg:x="202" fg:w="2"/><text x="16.9857%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8186%" y="485" width="0.0829%" height="15" fill="rgb(214,207,24)" fg:x="203" fg:w="1"/><text x="17.0686%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8186%" y="469" width="0.0829%" height="15" fill="rgb(228,173,2)" fg:x="203" fg:w="1"/><text x="17.0686%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8186%" y="453" width="0.0829%" height="15" fill="rgb(244,26,8)" fg:x="203" fg:w="1"/><text x="17.0686%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.8186%" y="437" width="0.0829%" height="15" fill="rgb(249,153,35)" fg:x="203" fg:w="1"/><text x="17.0686%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.8186%" y="421" width="0.0829%" height="15" fill="rgb(221,215,40)" fg:x="203" fg:w="1"/><text x="17.0686%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.8186%" y="405" width="0.0829%" height="15" fill="rgb(238,106,35)" fg:x="203" fg:w="1"/><text x="17.0686%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.8186%" y="389" width="0.0829%" height="15" fill="rgb(207,195,21)" fg:x="203" fg:w="1"/><text x="17.0686%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.8186%" y="373" width="0.0829%" height="15" fill="rgb(205,43,29)" fg:x="203" fg:w="1"/><text x="17.0686%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.8186%" y="357" width="0.0829%" height="15" fill="rgb(236,35,21)" fg:x="203" fg:w="1"/><text x="17.0686%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.8186%" y="341" width="0.0829%" height="15" fill="rgb(244,74,8)" fg:x="203" fg:w="1"/><text x="17.0686%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.8186%" y="325" width="0.0829%" height="15" fill="rgb(241,229,7)" fg:x="203" fg:w="1"/><text x="17.0686%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.8186%" y="309" width="0.0829%" height="15" fill="rgb(212,223,25)" fg:x="203" fg:w="1"/><text x="17.0686%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8186%" y="293" width="0.0829%" height="15" fill="rgb(234,58,53)" fg:x="203" fg:w="1"/><text x="17.0686%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.91%)</title><rect x="15.6587%" y="629" width="1.9056%" height="15" fill="rgb(244,36,1)" fg:x="189" fg:w="23"/><text x="15.9087%" y="639.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.91%)</title><rect x="16.6529%" y="613" width="0.9114%" height="15" fill="rgb(222,40,54)" fg:x="201" fg:w="11"/><text x="16.9029%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (8 samples, 0.66%)</title><rect x="16.9014%" y="597" width="0.6628%" height="15" fill="rgb(210,207,39)" fg:x="204" fg:w="8"/><text x="17.1514%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.66%)</title><rect x="16.9014%" y="581" width="0.6628%" height="15" fill="rgb(234,52,14)" fg:x="204" fg:w="8"/><text x="17.1514%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.66%)</title><rect x="16.9014%" y="565" width="0.6628%" height="15" fill="rgb(239,108,46)" fg:x="204" fg:w="8"/><text x="17.1514%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.66%)</title><rect x="16.9014%" y="549" width="0.6628%" height="15" fill="rgb(252,223,5)" fg:x="204" fg:w="8"/><text x="17.1514%" y="559.50"></text></g><g><title>__libc_malloc (8 samples, 0.66%)</title><rect x="16.9014%" y="533" width="0.6628%" height="15" fill="rgb(227,181,11)" fg:x="204" fg:w="8"/><text x="17.1514%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7299%" y="533" width="0.0829%" height="15" fill="rgb(248,126,40)" fg:x="214" fg:w="1"/><text x="17.9799%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7299%" y="517" width="0.0829%" height="15" fill="rgb(243,1,18)" fg:x="214" fg:w="1"/><text x="17.9799%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7299%" y="501" width="0.0829%" height="15" fill="rgb(214,145,23)" fg:x="214" fg:w="1"/><text x="17.9799%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7299%" y="485" width="0.0829%" height="15" fill="rgb(241,218,11)" fg:x="214" fg:w="1"/><text x="17.9799%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7299%" y="469" width="0.0829%" height="15" fill="rgb(214,219,24)" fg:x="214" fg:w="1"/><text x="17.9799%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7299%" y="453" width="0.0829%" height="15" fill="rgb(235,32,7)" fg:x="214" fg:w="1"/><text x="17.9799%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7299%" y="437" width="0.0829%" height="15" fill="rgb(227,121,28)" fg:x="214" fg:w="1"/><text x="17.9799%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.7299%" y="421" width="0.0829%" height="15" fill="rgb(216,129,49)" fg:x="214" fg:w="1"/><text x="17.9799%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.7299%" y="405" width="0.0829%" height="15" fill="rgb(207,194,50)" fg:x="214" fg:w="1"/><text x="17.9799%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.7299%" y="389" width="0.0829%" height="15" fill="rgb(207,4,18)" fg:x="214" fg:w="1"/><text x="17.9799%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7299%" y="373" width="0.0829%" height="15" fill="rgb(213,50,30)" fg:x="214" fg:w="1"/><text x="17.9799%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7299%" y="357" width="0.0829%" height="15" fill="rgb(208,77,22)" fg:x="214" fg:w="1"/><text x="17.9799%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.7299%" y="341" width="0.0829%" height="15" fill="rgb(244,204,34)" fg:x="214" fg:w="1"/><text x="17.9799%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.7299%" y="325" width="0.0829%" height="15" fill="rgb(230,20,17)" fg:x="214" fg:w="1"/><text x="17.9799%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.7299%" y="309" width="0.0829%" height="15" fill="rgb(237,83,15)" fg:x="214" fg:w="1"/><text x="17.9799%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.7299%" y="293" width="0.0829%" height="15" fill="rgb(221,109,25)" fg:x="214" fg:w="1"/><text x="17.9799%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8128%" y="533" width="0.0829%" height="15" fill="rgb(205,194,52)" fg:x="215" fg:w="1"/><text x="18.0628%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.8128%" y="517" width="0.0829%" height="15" fill="rgb(244,173,54)" fg:x="215" fg:w="1"/><text x="18.0628%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8128%" y="501" width="0.0829%" height="15" fill="rgb(227,181,18)" fg:x="215" fg:w="1"/><text x="18.0628%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8128%" y="485" width="0.0829%" height="15" fill="rgb(238,36,30)" fg:x="215" fg:w="1"/><text x="18.0628%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8128%" y="469" width="0.0829%" height="15" fill="rgb(254,85,0)" fg:x="215" fg:w="1"/><text x="18.0628%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8128%" y="453" width="0.0829%" height="15" fill="rgb(247,63,33)" fg:x="215" fg:w="1"/><text x="18.0628%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.8956%" y="437" width="0.0829%" height="15" fill="rgb(220,7,54)" fg:x="216" fg:w="1"/><text x="18.1456%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.8956%" y="421" width="0.0829%" height="15" fill="rgb(238,227,21)" fg:x="216" fg:w="1"/><text x="18.1456%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="17.7299%" y="581" width="0.3314%" height="15" fill="rgb(237,29,31)" fg:x="214" fg:w="4"/><text x="17.9799%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="17.7299%" y="565" width="0.3314%" height="15" fill="rgb(211,21,50)" fg:x="214" fg:w="4"/><text x="17.9799%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="17.7299%" y="549" width="0.3314%" height="15" fill="rgb(239,119,2)" fg:x="214" fg:w="4"/><text x="17.9799%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="17.8956%" y="533" width="0.1657%" height="15" fill="rgb(250,2,39)" fg:x="216" fg:w="2"/><text x="18.1456%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="17.8956%" y="517" width="0.1657%" height="15" fill="rgb(244,46,53)" fg:x="216" fg:w="2"/><text x="18.1456%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="17.8956%" y="501" width="0.1657%" height="15" fill="rgb(209,21,19)" fg:x="216" fg:w="2"/><text x="18.1456%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="17.8956%" y="485" width="0.1657%" height="15" fill="rgb(236,145,4)" fg:x="216" fg:w="2"/><text x="18.1456%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="17.8956%" y="469" width="0.1657%" height="15" fill="rgb(220,133,36)" fg:x="216" fg:w="2"/><text x="18.1456%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="17.8956%" y="453" width="0.1657%" height="15" fill="rgb(244,18,3)" fg:x="216" fg:w="2"/><text x="18.1456%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.9785%" y="437" width="0.0829%" height="15" fill="rgb(232,171,48)" fg:x="217" fg:w="1"/><text x="18.2285%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9785%" y="421" width="0.0829%" height="15" fill="rgb(223,223,53)" fg:x="217" fg:w="1"/><text x="18.2285%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.9785%" y="405" width="0.0829%" height="15" fill="rgb(246,92,13)" fg:x="217" fg:w="1"/><text x="18.2285%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9785%" y="389" width="0.0829%" height="15" fill="rgb(229,171,10)" fg:x="217" fg:w="1"/><text x="18.2285%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.9785%" y="373" width="0.0829%" height="15" fill="rgb(213,131,26)" fg:x="217" fg:w="1"/><text x="18.2285%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9785%" y="357" width="0.0829%" height="15" fill="rgb(242,87,54)" fg:x="217" fg:w="1"/><text x="18.2285%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="17.7299%" y="613" width="0.4143%" height="15" fill="rgb(237,21,35)" fg:x="214" fg:w="5"/><text x="17.9799%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.41%)</title><rect x="17.7299%" y="597" width="0.4143%" height="15" fill="rgb(253,13,47)" fg:x="214" fg:w="5"/><text x="17.9799%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.0613%" y="581" width="0.0829%" height="15" fill="rgb(215,122,49)" fg:x="218" fg:w="1"/><text x="18.3113%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.0613%" y="565" width="0.0829%" height="15" fill="rgb(209,179,30)" fg:x="218" fg:w="1"/><text x="18.3113%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.0613%" y="549" width="0.0829%" height="15" fill="rgb(235,100,24)" fg:x="218" fg:w="1"/><text x="18.3113%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0613%" y="533" width="0.0829%" height="15" fill="rgb(209,67,24)" fg:x="218" fg:w="1"/><text x="18.3113%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0613%" y="517" width="0.0829%" height="15" fill="rgb(206,74,32)" fg:x="218" fg:w="1"/><text x="18.3113%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0613%" y="501" width="0.0829%" height="15" fill="rgb(212,45,25)" fg:x="218" fg:w="1"/><text x="18.3113%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0613%" y="485" width="0.0829%" height="15" fill="rgb(239,26,3)" fg:x="218" fg:w="1"/><text x="18.3113%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.0613%" y="469" width="0.0829%" height="15" fill="rgb(218,36,15)" fg:x="218" fg:w="1"/><text x="18.3113%" y="479.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="18.3099%" y="597" width="0.0829%" height="15" fill="rgb(206,108,24)" fg:x="221" fg:w="1"/><text x="18.5599%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.33%)</title><rect x="18.1442%" y="613" width="0.3314%" height="15" fill="rgb(234,204,42)" fg:x="219" fg:w="4"/><text x="18.3942%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.3927%" y="597" width="0.0829%" height="15" fill="rgb(229,2,11)" fg:x="222" fg:w="1"/><text x="18.6427%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4756%" y="597" width="0.0829%" height="15" fill="rgb(221,20,48)" fg:x="223" fg:w="1"/><text x="18.7256%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="18.4756%" y="613" width="0.1657%" height="15" fill="rgb(244,164,10)" fg:x="223" fg:w="2"/><text x="18.7256%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="18.5584%" y="597" width="0.0829%" height="15" fill="rgb(243,229,2)" fg:x="224" fg:w="1"/><text x="18.8084%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.5584%" y="581" width="0.0829%" height="15" fill="rgb(232,131,37)" fg:x="224" fg:w="1"/><text x="18.8084%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.5584%" y="565" width="0.0829%" height="15" fill="rgb(217,156,11)" fg:x="224" fg:w="1"/><text x="18.8084%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.5584%" y="549" width="0.0829%" height="15" fill="rgb(239,99,48)" fg:x="224" fg:w="1"/><text x="18.8084%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.5584%" y="533" width="0.0829%" height="15" fill="rgb(231,209,9)" fg:x="224" fg:w="1"/><text x="18.8084%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7241%" y="501" width="0.0829%" height="15" fill="rgb(254,97,27)" fg:x="226" fg:w="1"/><text x="18.9741%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7241%" y="485" width="0.0829%" height="15" fill="rgb(223,151,38)" fg:x="226" fg:w="1"/><text x="18.9741%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.7241%" y="469" width="0.0829%" height="15" fill="rgb(219,206,35)" fg:x="226" fg:w="1"/><text x="18.9741%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.7241%" y="453" width="0.0829%" height="15" fill="rgb(216,130,31)" fg:x="226" fg:w="1"/><text x="18.9741%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.7241%" y="437" width="0.0829%" height="15" fill="rgb(251,97,34)" fg:x="226" fg:w="1"/><text x="18.9741%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.7241%" y="421" width="0.0829%" height="15" fill="rgb(246,159,47)" fg:x="226" fg:w="1"/><text x="18.9741%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.7241%" y="405" width="0.0829%" height="15" fill="rgb(232,87,10)" fg:x="226" fg:w="1"/><text x="18.9741%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.7241%" y="389" width="0.0829%" height="15" fill="rgb(249,1,37)" fg:x="226" fg:w="1"/><text x="18.9741%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.7241%" y="373" width="0.0829%" height="15" fill="rgb(239,135,14)" fg:x="226" fg:w="1"/><text x="18.9741%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.7241%" y="357" width="0.0829%" height="15" fill="rgb(253,116,46)" fg:x="226" fg:w="1"/><text x="18.9741%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.7241%" y="341" width="0.0829%" height="15" fill="rgb(222,217,37)" fg:x="226" fg:w="1"/><text x="18.9741%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7241%" y="325" width="0.0829%" height="15" fill="rgb(252,96,8)" fg:x="226" fg:w="1"/><text x="18.9741%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="18.6413%" y="517" width="0.2486%" height="15" fill="rgb(254,103,41)" fg:x="225" fg:w="3"/><text x="18.8913%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8070%" y="501" width="0.0829%" height="15" fill="rgb(218,213,19)" fg:x="227" fg:w="1"/><text x="19.0570%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.8898%" y="517" width="0.0829%" height="15" fill="rgb(253,95,21)" fg:x="228" fg:w="1"/><text x="19.1398%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.8898%" y="501" width="0.0829%" height="15" fill="rgb(229,26,28)" fg:x="228" fg:w="1"/><text x="19.1398%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.8898%" y="485" width="0.0829%" height="15" fill="rgb(230,129,16)" fg:x="228" fg:w="1"/><text x="19.1398%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.8898%" y="469" width="0.0829%" height="15" fill="rgb(236,126,17)" fg:x="228" fg:w="1"/><text x="19.1398%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="18.6413%" y="565" width="0.4143%" height="15" fill="rgb(209,33,33)" fg:x="225" fg:w="5"/><text x="18.8913%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="18.6413%" y="549" width="0.4143%" height="15" fill="rgb(227,85,29)" fg:x="225" fg:w="5"/><text x="18.8913%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="18.6413%" y="533" width="0.4143%" height="15" fill="rgb(241,53,46)" fg:x="225" fg:w="5"/><text x="18.8913%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.9727%" y="517" width="0.0829%" height="15" fill="rgb(228,167,53)" fg:x="229" fg:w="1"/><text x="19.2227%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9727%" y="501" width="0.0829%" height="15" fill="rgb(238,195,45)" fg:x="229" fg:w="1"/><text x="19.2227%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.9727%" y="485" width="0.0829%" height="15" fill="rgb(252,124,45)" fg:x="229" fg:w="1"/><text x="19.2227%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9727%" y="469" width="0.0829%" height="15" fill="rgb(251,38,35)" fg:x="229" fg:w="1"/><text x="19.2227%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.9727%" y="453" width="0.0829%" height="15" fill="rgb(227,33,2)" fg:x="229" fg:w="1"/><text x="19.2227%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9727%" y="437" width="0.0829%" height="15" fill="rgb(223,157,46)" fg:x="229" fg:w="1"/><text x="19.2227%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.9727%" y="421" width="0.0829%" height="15" fill="rgb(222,78,41)" fg:x="229" fg:w="1"/><text x="19.2227%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9727%" y="405" width="0.0829%" height="15" fill="rgb(248,176,11)" fg:x="229" fg:w="1"/><text x="19.2227%" y="415.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="19.0555%" y="549" width="0.0829%" height="15" fill="rgb(241,221,18)" fg:x="230" fg:w="1"/><text x="19.3055%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.0555%" y="533" width="0.0829%" height="15" fill="rgb(218,85,22)" fg:x="230" fg:w="1"/><text x="19.3055%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.0555%" y="517" width="0.0829%" height="15" fill="rgb(222,223,7)" fg:x="230" fg:w="1"/><text x="19.3055%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="19.2212%" y="517" width="0.1657%" height="15" fill="rgb(254,59,39)" fg:x="232" fg:w="2"/><text x="19.4712%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3041%" y="501" width="0.0829%" height="15" fill="rgb(247,100,27)" fg:x="233" fg:w="1"/><text x="19.5541%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3041%" y="485" width="0.0829%" height="15" fill="rgb(237,207,10)" fg:x="233" fg:w="1"/><text x="19.5541%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3041%" y="469" width="0.0829%" height="15" fill="rgb(220,121,28)" fg:x="233" fg:w="1"/><text x="19.5541%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.83%)</title><rect x="18.6413%" y="597" width="0.8285%" height="15" fill="rgb(213,223,20)" fg:x="225" fg:w="10"/><text x="18.8913%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.83%)</title><rect x="18.6413%" y="581" width="0.8285%" height="15" fill="rgb(205,121,27)" fg:x="225" fg:w="10"/><text x="18.8913%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="19.0555%" y="565" width="0.4143%" height="15" fill="rgb(253,24,53)" fg:x="230" fg:w="5"/><text x="19.3055%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="19.1384%" y="549" width="0.3314%" height="15" fill="rgb(224,224,47)" fg:x="231" fg:w="4"/><text x="19.3884%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="19.1384%" y="533" width="0.3314%" height="15" fill="rgb(250,125,36)" fg:x="231" fg:w="4"/><text x="19.3884%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="19.3869%" y="517" width="0.0829%" height="15" fill="rgb(240,144,38)" fg:x="234" fg:w="1"/><text x="19.6369%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (47 samples, 3.89%)</title><rect x="15.6587%" y="645" width="3.8940%" height="15" fill="rgb(250,15,50)" fg:x="189" fg:w="47"/><text x="15.9087%" y="655.50">plug..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.99%)</title><rect x="17.5642%" y="629" width="1.9884%" height="15" fill="rgb(210,24,26)" fg:x="212" fg:w="24"/><text x="17.8142%" y="639.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.91%)</title><rect x="18.6413%" y="613" width="0.9114%" height="15" fill="rgb(234,53,53)" fg:x="225" fg:w="11"/><text x="18.8913%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="19.4698%" y="597" width="0.0829%" height="15" fill="rgb(208,108,28)" fg:x="235" fg:w="1"/><text x="19.7198%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.4698%" y="581" width="0.0829%" height="15" fill="rgb(227,143,7)" fg:x="235" fg:w="1"/><text x="19.7198%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="19.4698%" y="565" width="0.0829%" height="15" fill="rgb(238,189,38)" fg:x="235" fg:w="1"/><text x="19.7198%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="19.4698%" y="549" width="0.0829%" height="15" fill="rgb(222,69,15)" fg:x="235" fg:w="1"/><text x="19.7198%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.4698%" y="533" width="0.0829%" height="15" fill="rgb(213,169,7)" fg:x="235" fg:w="1"/><text x="19.7198%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.4698%" y="517" width="0.0829%" height="15" fill="rgb(251,219,4)" fg:x="235" fg:w="1"/><text x="19.7198%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.4698%" y="501" width="0.0829%" height="15" fill="rgb(241,55,40)" fg:x="235" fg:w="1"/><text x="19.7198%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.4698%" y="485" width="0.0829%" height="15" fill="rgb(243,57,30)" fg:x="235" fg:w="1"/><text x="19.7198%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5526%" y="597" width="0.0829%" height="15" fill="rgb(234,50,30)" fg:x="236" fg:w="1"/><text x="19.8026%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="19.6355%" y="597" width="0.0829%" height="15" fill="rgb(239,23,42)" fg:x="237" fg:w="1"/><text x="19.8855%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6355%" y="581" width="0.0829%" height="15" fill="rgb(217,38,19)" fg:x="237" fg:w="1"/><text x="19.8855%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6355%" y="565" width="0.0829%" height="15" fill="rgb(215,179,16)" fg:x="237" fg:w="1"/><text x="19.8855%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.6355%" y="549" width="0.0829%" height="15" fill="rgb(254,21,37)" fg:x="237" fg:w="1"/><text x="19.8855%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.6355%" y="533" width="0.0829%" height="15" fill="rgb(219,207,48)" fg:x="237" fg:w="1"/><text x="19.8855%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.6355%" y="517" width="0.0829%" height="15" fill="rgb(227,225,41)" fg:x="237" fg:w="1"/><text x="19.8855%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.6355%" y="501" width="0.0829%" height="15" fill="rgb(223,130,1)" fg:x="237" fg:w="1"/><text x="19.8855%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.6355%" y="485" width="0.0829%" height="15" fill="rgb(249,54,42)" fg:x="237" fg:w="1"/><text x="19.8855%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.6355%" y="469" width="0.0829%" height="15" fill="rgb(248,69,25)" fg:x="237" fg:w="1"/><text x="19.8855%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.6355%" y="453" width="0.0829%" height="15" fill="rgb(234,21,32)" fg:x="237" fg:w="1"/><text x="19.8855%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.6355%" y="437" width="0.0829%" height="15" fill="rgb(252,136,6)" fg:x="237" fg:w="1"/><text x="19.8855%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.6355%" y="421" width="0.0829%" height="15" fill="rgb(245,87,12)" fg:x="237" fg:w="1"/><text x="19.8855%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6355%" y="405" width="0.0829%" height="15" fill="rgb(208,12,15)" fg:x="237" fg:w="1"/><text x="19.8855%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.33%)</title><rect x="19.5526%" y="613" width="0.3314%" height="15" fill="rgb(250,98,2)" fg:x="236" fg:w="4"/><text x="19.8026%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.17%)</title><rect x="19.7183%" y="597" width="0.1657%" height="15" fill="rgb(205,213,15)" fg:x="238" fg:w="2"/><text x="19.9683%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="19.7183%" y="581" width="0.1657%" height="15" fill="rgb(248,192,44)" fg:x="238" fg:w="2"/><text x="19.9683%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="565" width="0.1657%" height="15" fill="rgb(221,89,17)" fg:x="238" fg:w="2"/><text x="19.9683%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="19.7183%" y="549" width="0.1657%" height="15" fill="rgb(209,55,3)" fg:x="238" fg:w="2"/><text x="19.9683%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="533" width="0.1657%" height="15" fill="rgb(247,23,45)" fg:x="238" fg:w="2"/><text x="19.9683%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="517" width="0.1657%" height="15" fill="rgb(235,152,23)" fg:x="238" fg:w="2"/><text x="19.9683%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="501" width="0.1657%" height="15" fill="rgb(244,63,13)" fg:x="238" fg:w="2"/><text x="19.9683%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="19.7183%" y="485" width="0.1657%" height="15" fill="rgb(227,30,37)" fg:x="238" fg:w="2"/><text x="19.9683%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="469" width="0.1657%" height="15" fill="rgb(224,49,42)" fg:x="238" fg:w="2"/><text x="19.9683%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="453" width="0.1657%" height="15" fill="rgb(218,129,5)" fg:x="238" fg:w="2"/><text x="19.9683%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="437" width="0.1657%" height="15" fill="rgb(240,199,54)" fg:x="238" fg:w="2"/><text x="19.9683%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="19.7183%" y="421" width="0.1657%" height="15" fill="rgb(234,31,13)" fg:x="238" fg:w="2"/><text x="19.9683%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="405" width="0.1657%" height="15" fill="rgb(219,73,54)" fg:x="238" fg:w="2"/><text x="19.9683%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="389" width="0.1657%" height="15" fill="rgb(251,162,10)" fg:x="238" fg:w="2"/><text x="19.9683%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="373" width="0.1657%" height="15" fill="rgb(240,138,47)" fg:x="238" fg:w="2"/><text x="19.9683%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="19.7183%" y="357" width="0.1657%" height="15" fill="rgb(216,138,26)" fg:x="238" fg:w="2"/><text x="19.9683%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="19.7183%" y="341" width="0.1657%" height="15" fill="rgb(243,17,35)" fg:x="238" fg:w="2"/><text x="19.9683%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="19.7183%" y="325" width="0.1657%" height="15" fill="rgb(241,60,18)" fg:x="238" fg:w="2"/><text x="19.9683%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="19.7183%" y="309" width="0.1657%" height="15" fill="rgb(234,2,44)" fg:x="238" fg:w="2"/><text x="19.9683%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.17%)</title><rect x="19.7183%" y="293" width="0.1657%" height="15" fill="rgb(225,225,33)" fg:x="238" fg:w="2"/><text x="19.9683%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.17%)</title><rect x="19.7183%" y="277" width="0.1657%" height="15" fill="rgb(234,50,31)" fg:x="238" fg:w="2"/><text x="19.9683%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.17%)</title><rect x="19.7183%" y="261" width="0.1657%" height="15" fill="rgb(249,6,25)" fg:x="238" fg:w="2"/><text x="19.9683%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.17%)</title><rect x="19.7183%" y="245" width="0.1657%" height="15" fill="rgb(241,5,17)" fg:x="238" fg:w="2"/><text x="19.9683%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="19.7183%" y="229" width="0.1657%" height="15" fill="rgb(207,116,10)" fg:x="238" fg:w="2"/><text x="19.9683%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="19.7183%" y="213" width="0.1657%" height="15" fill="rgb(222,128,18)" fg:x="238" fg:w="2"/><text x="19.9683%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="19.7183%" y="197" width="0.1657%" height="15" fill="rgb(229,109,25)" fg:x="238" fg:w="2"/><text x="19.9683%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.17%)</title><rect x="19.7183%" y="181" width="0.1657%" height="15" fill="rgb(222,102,25)" fg:x="238" fg:w="2"/><text x="19.9683%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="19.7183%" y="165" width="0.1657%" height="15" fill="rgb(239,211,5)" fg:x="238" fg:w="2"/><text x="19.9683%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="19.8012%" y="149" width="0.0829%" height="15" fill="rgb(223,136,26)" fg:x="239" fg:w="1"/><text x="20.0512%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="19.8012%" y="133" width="0.0829%" height="15" fill="rgb(227,30,15)" fg:x="239" fg:w="1"/><text x="20.0512%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="19.8012%" y="117" width="0.0829%" height="15" fill="rgb(247,76,4)" fg:x="239" fg:w="1"/><text x="20.0512%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.8012%" y="101" width="0.0829%" height="15" fill="rgb(245,38,48)" fg:x="239" fg:w="1"/><text x="20.0512%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0497%" y="501" width="0.0829%" height="15" fill="rgb(210,220,14)" fg:x="242" fg:w="1"/><text x="20.2997%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0497%" y="485" width="0.0829%" height="15" fill="rgb(224,60,51)" fg:x="242" fg:w="1"/><text x="20.2997%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0497%" y="469" width="0.0829%" height="15" fill="rgb(212,133,49)" fg:x="242" fg:w="1"/><text x="20.2997%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.0497%" y="453" width="0.0829%" height="15" fill="rgb(231,39,22)" fg:x="242" fg:w="1"/><text x="20.2997%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.0497%" y="437" width="0.0829%" height="15" fill="rgb(236,173,22)" fg:x="242" fg:w="1"/><text x="20.2997%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.0497%" y="421" width="0.0829%" height="15" fill="rgb(210,70,0)" fg:x="242" fg:w="1"/><text x="20.2997%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.0497%" y="405" width="0.0829%" height="15" fill="rgb(215,170,11)" fg:x="242" fg:w="1"/><text x="20.2997%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.0497%" y="389" width="0.0829%" height="15" fill="rgb(220,154,28)" fg:x="242" fg:w="1"/><text x="20.2997%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.0497%" y="373" width="0.0829%" height="15" fill="rgb(240,160,41)" fg:x="242" fg:w="1"/><text x="20.2997%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.0497%" y="357" width="0.0829%" height="15" fill="rgb(243,215,41)" fg:x="242" fg:w="1"/><text x="20.2997%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.0497%" y="341" width="0.0829%" height="15" fill="rgb(214,208,31)" fg:x="242" fg:w="1"/><text x="20.2997%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.0497%" y="325" width="0.0829%" height="15" fill="rgb(247,57,22)" fg:x="242" fg:w="1"/><text x="20.2997%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0497%" y="309" width="0.0829%" height="15" fill="rgb(228,73,52)" fg:x="242" fg:w="1"/><text x="20.2997%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="19.9669%" y="517" width="0.2486%" height="15" fill="rgb(252,60,9)" fg:x="241" fg:w="3"/><text x="20.2169%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.1326%" y="501" width="0.0829%" height="15" fill="rgb(233,9,51)" fg:x="243" fg:w="1"/><text x="20.3826%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.1326%" y="485" width="0.0829%" height="15" fill="rgb(223,67,14)" fg:x="243" fg:w="1"/><text x="20.3826%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.1326%" y="469" width="0.0829%" height="15" fill="rgb(222,86,2)" fg:x="243" fg:w="1"/><text x="20.3826%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.1326%" y="453" width="0.0829%" height="15" fill="rgb(243,58,54)" fg:x="243" fg:w="1"/><text x="20.3826%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.1326%" y="437" width="0.0829%" height="15" fill="rgb(210,200,39)" fg:x="243" fg:w="1"/><text x="20.3826%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.1326%" y="421" width="0.0829%" height="15" fill="rgb(238,135,9)" fg:x="243" fg:w="1"/><text x="20.3826%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.1326%" y="405" width="0.0829%" height="15" fill="rgb(232,179,7)" fg:x="243" fg:w="1"/><text x="20.3826%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.1326%" y="389" width="0.0829%" height="15" fill="rgb(245,65,41)" fg:x="243" fg:w="1"/><text x="20.3826%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.1326%" y="373" width="0.0829%" height="15" fill="rgb(227,43,8)" fg:x="243" fg:w="1"/><text x="20.3826%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.1326%" y="357" width="0.0829%" height="15" fill="rgb(235,91,14)" fg:x="243" fg:w="1"/><text x="20.3826%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.1326%" y="341" width="0.0829%" height="15" fill="rgb(235,219,31)" fg:x="243" fg:w="1"/><text x="20.3826%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1326%" y="325" width="0.0829%" height="15" fill="rgb(227,121,25)" fg:x="243" fg:w="1"/><text x="20.3826%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="19.8840%" y="565" width="0.4143%" height="15" fill="rgb(254,129,24)" fg:x="240" fg:w="5"/><text x="20.1340%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="19.9669%" y="549" width="0.3314%" height="15" fill="rgb(226,144,49)" fg:x="241" fg:w="4"/><text x="20.2169%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="19.9669%" y="533" width="0.3314%" height="15" fill="rgb(214,187,32)" fg:x="241" fg:w="4"/><text x="20.2169%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.2154%" y="517" width="0.0829%" height="15" fill="rgb(243,129,46)" fg:x="244" fg:w="1"/><text x="20.4654%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.2154%" y="501" width="0.0829%" height="15" fill="rgb(221,185,35)" fg:x="244" fg:w="1"/><text x="20.4654%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.2154%" y="485" width="0.0829%" height="15" fill="rgb(205,0,32)" fg:x="244" fg:w="1"/><text x="20.4654%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.2154%" y="469" width="0.0829%" height="15" fill="rgb(229,179,12)" fg:x="244" fg:w="1"/><text x="20.4654%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.2154%" y="453" width="0.0829%" height="15" fill="rgb(252,107,19)" fg:x="244" fg:w="1"/><text x="20.4654%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="20.2154%" y="437" width="0.0829%" height="15" fill="rgb(220,95,27)" fg:x="244" fg:w="1"/><text x="20.4654%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="20.2154%" y="421" width="0.0829%" height="15" fill="rgb(240,113,40)" fg:x="244" fg:w="1"/><text x="20.4654%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.2983%" y="501" width="0.0829%" height="15" fill="rgb(208,4,43)" fg:x="245" fg:w="1"/><text x="20.5483%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2983%" y="485" width="0.0829%" height="15" fill="rgb(247,189,30)" fg:x="245" fg:w="1"/><text x="20.5483%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="20.2983%" y="565" width="0.1657%" height="15" fill="rgb(231,157,17)" fg:x="245" fg:w="2"/><text x="20.5483%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="20.2983%" y="549" width="0.1657%" height="15" fill="rgb(224,139,6)" fg:x="245" fg:w="2"/><text x="20.5483%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="20.2983%" y="533" width="0.1657%" height="15" fill="rgb(223,83,16)" fg:x="245" fg:w="2"/><text x="20.5483%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="20.2983%" y="517" width="0.1657%" height="15" fill="rgb(232,211,20)" fg:x="245" fg:w="2"/><text x="20.5483%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.3811%" y="501" width="0.0829%" height="15" fill="rgb(225,203,35)" fg:x="246" fg:w="1"/><text x="20.6311%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.3811%" y="485" width="0.0829%" height="15" fill="rgb(215,211,44)" fg:x="246" fg:w="1"/><text x="20.6311%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.3811%" y="469" width="0.0829%" height="15" fill="rgb(248,213,26)" fg:x="246" fg:w="1"/><text x="20.6311%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.3811%" y="453" width="0.0829%" height="15" fill="rgb(214,23,52)" fg:x="246" fg:w="1"/><text x="20.6311%" y="463.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="20.4640%" y="565" width="0.0829%" height="15" fill="rgb(225,173,50)" fg:x="247" fg:w="1"/><text x="20.7140%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="20.6297%" y="469" width="0.0829%" height="15" fill="rgb(206,150,22)" fg:x="249" fg:w="1"/><text x="20.8797%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (12 samples, 0.99%)</title><rect x="19.8840%" y="613" width="0.9942%" height="15" fill="rgb(239,64,23)" fg:x="240" fg:w="12"/><text x="20.1340%" y="623.50"></text></g><g><title>kernel::model::props::load_props (12 samples, 0.99%)</title><rect x="19.8840%" y="597" width="0.9942%" height="15" fill="rgb(242,50,38)" fg:x="240" fg:w="12"/><text x="20.1340%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.99%)</title><rect x="19.8840%" y="581" width="0.9942%" height="15" fill="rgb(217,91,15)" fg:x="240" fg:w="12"/><text x="20.1340%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="20.5468%" y="565" width="0.3314%" height="15" fill="rgb(230,172,6)" fg:x="248" fg:w="4"/><text x="20.7968%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="20.5468%" y="549" width="0.3314%" height="15" fill="rgb(221,98,26)" fg:x="248" fg:w="4"/><text x="20.7968%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="20.5468%" y="533" width="0.3314%" height="15" fill="rgb(227,210,45)" fg:x="248" fg:w="4"/><text x="20.7968%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="20.5468%" y="517" width="0.3314%" height="15" fill="rgb(206,8,30)" fg:x="248" fg:w="4"/><text x="20.7968%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="20.5468%" y="501" width="0.3314%" height="15" fill="rgb(241,219,17)" fg:x="248" fg:w="4"/><text x="20.7968%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="20.5468%" y="485" width="0.3314%" height="15" fill="rgb(247,121,29)" fg:x="248" fg:w="4"/><text x="20.7968%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="20.7125%" y="469" width="0.1657%" height="15" fill="rgb(219,169,49)" fg:x="250" fg:w="2"/><text x="20.9625%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7954%" y="453" width="0.0829%" height="15" fill="rgb(253,49,49)" fg:x="251" fg:w="1"/><text x="21.0454%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="20.9611%" y="565" width="0.2486%" height="15" fill="rgb(217,178,3)" fg:x="253" fg:w="3"/><text x="21.2111%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1268%" y="549" width="0.0829%" height="15" fill="rgb(234,73,37)" fg:x="255" fg:w="1"/><text x="21.3768%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.1268%" y="533" width="0.0829%" height="15" fill="rgb(250,98,22)" fg:x="255" fg:w="1"/><text x="21.3768%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.1268%" y="517" width="0.0829%" height="15" fill="rgb(220,108,37)" fg:x="255" fg:w="1"/><text x="21.3768%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.1268%" y="501" width="0.0829%" height="15" fill="rgb(225,168,10)" fg:x="255" fg:w="1"/><text x="21.3768%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.1268%" y="485" width="0.0829%" height="15" fill="rgb(247,215,21)" fg:x="255" fg:w="1"/><text x="21.3768%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.1268%" y="469" width="0.0829%" height="15" fill="rgb(253,189,31)" fg:x="255" fg:w="1"/><text x="21.3768%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="21.1268%" y="453" width="0.0829%" height="15" fill="rgb(241,54,22)" fg:x="255" fg:w="1"/><text x="21.3768%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.1268%" y="437" width="0.0829%" height="15" fill="rgb(211,87,4)" fg:x="255" fg:w="1"/><text x="21.3768%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.41%)</title><rect x="20.8782%" y="597" width="0.4143%" height="15" fill="rgb(245,112,24)" fg:x="252" fg:w="5"/><text x="21.1282%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="20.8782%" y="581" width="0.4143%" height="15" fill="rgb(235,190,41)" fg:x="252" fg:w="5"/><text x="21.1282%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.2096%" y="565" width="0.0829%" height="15" fill="rgb(214,89,8)" fg:x="256" fg:w="1"/><text x="21.4596%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.2096%" y="549" width="0.0829%" height="15" fill="rgb(249,155,35)" fg:x="256" fg:w="1"/><text x="21.4596%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.2096%" y="533" width="0.0829%" height="15" fill="rgb(249,88,26)" fg:x="256" fg:w="1"/><text x="21.4596%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.50%)</title><rect x="20.8782%" y="613" width="0.4971%" height="15" fill="rgb(232,56,8)" fg:x="252" fg:w="6"/><text x="21.1282%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="21.2925%" y="597" width="0.0829%" height="15" fill="rgb(240,95,3)" fg:x="257" fg:w="1"/><text x="21.5425%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="21.2925%" y="581" width="0.0829%" height="15" fill="rgb(222,44,28)" fg:x="257" fg:w="1"/><text x="21.5425%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.2925%" y="565" width="0.0829%" height="15" fill="rgb(234,16,30)" fg:x="257" fg:w="1"/><text x="21.5425%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.3753%" y="565" width="0.0829%" height="15" fill="rgb(223,26,17)" fg:x="258" fg:w="1"/><text x="21.6253%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.3753%" y="549" width="0.0829%" height="15" fill="rgb(239,187,47)" fg:x="258" fg:w="1"/><text x="21.6253%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3753%" y="533" width="0.0829%" height="15" fill="rgb(247,102,50)" fg:x="258" fg:w="1"/><text x="21.6253%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.3753%" y="517" width="0.0829%" height="15" fill="rgb(231,216,22)" fg:x="258" fg:w="1"/><text x="21.6253%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="21.4582%" y="533" width="0.1657%" height="15" fill="rgb(216,201,26)" fg:x="259" fg:w="2"/><text x="21.7082%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5410%" y="517" width="0.0829%" height="15" fill="rgb(214,186,23)" fg:x="260" fg:w="1"/><text x="21.7910%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5410%" y="501" width="0.0829%" height="15" fill="rgb(235,184,4)" fg:x="260" fg:w="1"/><text x="21.7910%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.5410%" y="485" width="0.0829%" height="15" fill="rgb(244,46,17)" fg:x="260" fg:w="1"/><text x="21.7910%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.5410%" y="469" width="0.0829%" height="15" fill="rgb(248,74,46)" fg:x="260" fg:w="1"/><text x="21.7910%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.5410%" y="453" width="0.0829%" height="15" fill="rgb(243,79,5)" fg:x="260" fg:w="1"/><text x="21.7910%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5410%" y="437" width="0.0829%" height="15" fill="rgb(213,148,1)" fg:x="260" fg:w="1"/><text x="21.7910%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5410%" y="421" width="0.0829%" height="15" fill="rgb(221,30,0)" fg:x="260" fg:w="1"/><text x="21.7910%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.5410%" y="405" width="0.0829%" height="15" fill="rgb(207,85,29)" fg:x="260" fg:w="1"/><text x="21.7910%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.5410%" y="389" width="0.0829%" height="15" fill="rgb(239,31,46)" fg:x="260" fg:w="1"/><text x="21.7910%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.5410%" y="373" width="0.0829%" height="15" fill="rgb(219,6,1)" fg:x="260" fg:w="1"/><text x="21.7910%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.5410%" y="357" width="0.0829%" height="15" fill="rgb(229,90,29)" fg:x="260" fg:w="1"/><text x="21.7910%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="21.5410%" y="341" width="0.0829%" height="15" fill="rgb(242,201,42)" fg:x="260" fg:w="1"/><text x="21.7910%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="21.5410%" y="325" width="0.0829%" height="15" fill="rgb(243,80,54)" fg:x="260" fg:w="1"/><text x="21.7910%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6239%" y="501" width="0.0829%" height="15" fill="rgb(223,166,15)" fg:x="261" fg:w="1"/><text x="21.8739%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6239%" y="485" width="0.0829%" height="15" fill="rgb(238,78,27)" fg:x="261" fg:w="1"/><text x="21.8739%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.6239%" y="469" width="0.0829%" height="15" fill="rgb(235,28,43)" fg:x="261" fg:w="1"/><text x="21.8739%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="21.3753%" y="597" width="0.4143%" height="15" fill="rgb(240,210,28)" fg:x="258" fg:w="5"/><text x="21.6253%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.41%)</title><rect x="21.3753%" y="581" width="0.4143%" height="15" fill="rgb(253,6,46)" fg:x="258" fg:w="5"/><text x="21.6253%" y="591.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.33%)</title><rect x="21.4582%" y="565" width="0.3314%" height="15" fill="rgb(250,159,47)" fg:x="259" fg:w="4"/><text x="21.7082%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="21.4582%" y="549" width="0.3314%" height="15" fill="rgb(216,139,2)" fg:x="259" fg:w="4"/><text x="21.7082%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.17%)</title><rect x="21.6239%" y="533" width="0.1657%" height="15" fill="rgb(221,124,44)" fg:x="261" fg:w="2"/><text x="21.8739%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="21.6239%" y="517" width="0.1657%" height="15" fill="rgb(205,37,22)" fg:x="261" fg:w="2"/><text x="21.8739%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="21.7067%" y="501" width="0.0829%" height="15" fill="rgb(250,55,8)" fg:x="262" fg:w="1"/><text x="21.9567%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.7067%" y="485" width="0.0829%" height="15" fill="rgb(215,83,48)" fg:x="262" fg:w="1"/><text x="21.9567%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.7067%" y="469" width="0.0829%" height="15" fill="rgb(253,2,32)" fg:x="262" fg:w="1"/><text x="21.9567%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="21.7067%" y="453" width="0.0829%" height="15" fill="rgb(236,67,28)" fg:x="262" fg:w="1"/><text x="21.9567%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.7067%" y="437" width="0.0829%" height="15" fill="rgb(252,55,15)" fg:x="262" fg:w="1"/><text x="21.9567%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (28 samples, 2.32%)</title><rect x="19.5526%" y="645" width="2.3198%" height="15" fill="rgb(243,173,17)" fg:x="236" fg:w="28"/><text x="19.8026%" y="655.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (28 samples, 2.32%)</title><rect x="19.5526%" y="629" width="2.3198%" height="15" fill="rgb(215,212,13)" fg:x="236" fg:w="28"/><text x="19.8026%" y="639.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.50%)</title><rect x="21.3753%" y="613" width="0.4971%" height="15" fill="rgb(253,176,6)" fg:x="258" fg:w="6"/><text x="21.6253%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="21.7896%" y="597" width="0.0829%" height="15" fill="rgb(236,105,26)" fg:x="263" fg:w="1"/><text x="22.0396%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="21.8724%" y="629" width="0.0829%" height="15" fill="rgb(239,226,32)" fg:x="264" fg:w="1"/><text x="22.1224%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.9553%" y="613" width="0.0829%" height="15" fill="rgb(236,104,51)" fg:x="265" fg:w="1"/><text x="22.2053%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.9553%" y="597" width="0.0829%" height="15" fill="rgb(220,172,33)" fg:x="265" fg:w="1"/><text x="22.2053%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.33%)</title><rect x="21.8724%" y="645" width="0.3314%" height="15" fill="rgb(224,182,25)" fg:x="264" fg:w="4"/><text x="22.1224%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.25%)</title><rect x="21.9553%" y="629" width="0.2486%" height="15" fill="rgb(236,184,24)" fg:x="265" fg:w="3"/><text x="22.2053%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.17%)</title><rect x="22.0381%" y="613" width="0.1657%" height="15" fill="rgb(241,221,14)" fg:x="266" fg:w="2"/><text x="22.2881%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.1210%" y="597" width="0.0829%" height="15" fill="rgb(227,146,5)" fg:x="267" fg:w="1"/><text x="22.3710%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1210%" y="581" width="0.0829%" height="15" fill="rgb(214,15,23)" fg:x="267" fg:w="1"/><text x="22.3710%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.1210%" y="565" width="0.0829%" height="15" fill="rgb(233,157,31)" fg:x="267" fg:w="1"/><text x="22.3710%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1210%" y="549" width="0.0829%" height="15" fill="rgb(211,27,52)" fg:x="267" fg:w="1"/><text x="22.3710%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="22.1210%" y="533" width="0.0829%" height="15" fill="rgb(212,223,15)" fg:x="267" fg:w="1"/><text x="22.3710%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="22.2867%" y="613" width="0.0829%" height="15" fill="rgb(254,211,0)" fg:x="269" fg:w="1"/><text x="22.5367%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="22.2867%" y="597" width="0.0829%" height="15" fill="rgb(205,43,38)" fg:x="269" fg:w="1"/><text x="22.5367%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3695%" y="501" width="0.0829%" height="15" fill="rgb(242,206,46)" fg:x="270" fg:w="1"/><text x="22.6195%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.3695%" y="485" width="0.0829%" height="15" fill="rgb(220,221,12)" fg:x="270" fg:w="1"/><text x="22.6195%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.3695%" y="469" width="0.0829%" height="15" fill="rgb(217,156,35)" fg:x="270" fg:w="1"/><text x="22.6195%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.3695%" y="453" width="0.0829%" height="15" fill="rgb(207,181,49)" fg:x="270" fg:w="1"/><text x="22.6195%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.3695%" y="437" width="0.0829%" height="15" fill="rgb(235,103,47)" fg:x="270" fg:w="1"/><text x="22.6195%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.3695%" y="421" width="0.0829%" height="15" fill="rgb(222,63,28)" fg:x="270" fg:w="1"/><text x="22.6195%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="22.3695%" y="405" width="0.0829%" height="15" fill="rgb(244,137,21)" fg:x="270" fg:w="1"/><text x="22.6195%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.3695%" y="389" width="0.0829%" height="15" fill="rgb(228,35,27)" fg:x="270" fg:w="1"/><text x="22.6195%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="22.3695%" y="565" width="0.1657%" height="15" fill="rgb(226,191,41)" fg:x="270" fg:w="2"/><text x="22.6195%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="22.3695%" y="549" width="0.1657%" height="15" fill="rgb(210,154,3)" fg:x="270" fg:w="2"/><text x="22.6195%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="22.3695%" y="533" width="0.1657%" height="15" fill="rgb(216,60,49)" fg:x="270" fg:w="2"/><text x="22.6195%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="22.3695%" y="517" width="0.1657%" height="15" fill="rgb(226,17,20)" fg:x="270" fg:w="2"/><text x="22.6195%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4524%" y="501" width="0.0829%" height="15" fill="rgb(206,115,35)" fg:x="271" fg:w="1"/><text x="22.7024%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4524%" y="485" width="0.0829%" height="15" fill="rgb(227,88,1)" fg:x="271" fg:w="1"/><text x="22.7024%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.4524%" y="469" width="0.0829%" height="15" fill="rgb(230,222,24)" fg:x="271" fg:w="1"/><text x="22.7024%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.4524%" y="453" width="0.0829%" height="15" fill="rgb(214,124,32)" fg:x="271" fg:w="1"/><text x="22.7024%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.4524%" y="437" width="0.0829%" height="15" fill="rgb(240,41,36)" fg:x="271" fg:w="1"/><text x="22.7024%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4524%" y="421" width="0.0829%" height="15" fill="rgb(221,17,52)" fg:x="271" fg:w="1"/><text x="22.7024%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4524%" y="405" width="0.0829%" height="15" fill="rgb(252,70,16)" fg:x="271" fg:w="1"/><text x="22.7024%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.4524%" y="389" width="0.0829%" height="15" fill="rgb(250,177,4)" fg:x="271" fg:w="1"/><text x="22.7024%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.4524%" y="373" width="0.0829%" height="15" fill="rgb(240,188,47)" fg:x="271" fg:w="1"/><text x="22.7024%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.4524%" y="357" width="0.0829%" height="15" fill="rgb(215,92,12)" fg:x="271" fg:w="1"/><text x="22.7024%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.4524%" y="341" width="0.0829%" height="15" fill="rgb(242,110,29)" fg:x="271" fg:w="1"/><text x="22.7024%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4524%" y="325" width="0.0829%" height="15" fill="rgb(208,211,26)" fg:x="271" fg:w="1"/><text x="22.7024%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5352%" y="565" width="0.0829%" height="15" fill="rgb(244,147,6)" fg:x="272" fg:w="1"/><text x="22.7852%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.5352%" y="549" width="0.0829%" height="15" fill="rgb(211,130,42)" fg:x="272" fg:w="1"/><text x="22.7852%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5352%" y="533" width="0.0829%" height="15" fill="rgb(220,63,1)" fg:x="272" fg:w="1"/><text x="22.7852%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.5352%" y="517" width="0.0829%" height="15" fill="rgb(241,212,30)" fg:x="272" fg:w="1"/><text x="22.7852%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5352%" y="501" width="0.0829%" height="15" fill="rgb(233,153,17)" fg:x="272" fg:w="1"/><text x="22.7852%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="22.2867%" y="629" width="0.4143%" height="15" fill="rgb(236,3,10)" fg:x="269" fg:w="5"/><text x="22.5367%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="22.3695%" y="613" width="0.3314%" height="15" fill="rgb(232,41,21)" fg:x="270" fg:w="4"/><text x="22.6195%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="22.3695%" y="597" width="0.3314%" height="15" fill="rgb(206,63,51)" fg:x="270" fg:w="4"/><text x="22.6195%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="22.3695%" y="581" width="0.3314%" height="15" fill="rgb(250,214,3)" fg:x="270" fg:w="4"/><text x="22.6195%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6181%" y="565" width="0.0829%" height="15" fill="rgb(254,89,27)" fg:x="273" fg:w="1"/><text x="22.8681%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6181%" y="549" width="0.0829%" height="15" fill="rgb(249,41,14)" fg:x="273" fg:w="1"/><text x="22.8681%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6181%" y="533" width="0.0829%" height="15" fill="rgb(221,196,51)" fg:x="273" fg:w="1"/><text x="22.8681%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6181%" y="517" width="0.0829%" height="15" fill="rgb(214,116,26)" fg:x="273" fg:w="1"/><text x="22.8681%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.6181%" y="501" width="0.0829%" height="15" fill="rgb(236,67,7)" fg:x="273" fg:w="1"/><text x="22.8681%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6181%" y="485" width="0.0829%" height="15" fill="rgb(253,179,32)" fg:x="273" fg:w="1"/><text x="22.8681%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6181%" y="469" width="0.0829%" height="15" fill="rgb(218,33,15)" fg:x="273" fg:w="1"/><text x="22.8681%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6181%" y="453" width="0.0829%" height="15" fill="rgb(217,202,41)" fg:x="273" fg:w="1"/><text x="22.8681%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="22.7009%" y="597" width="0.0829%" height="15" fill="rgb(234,133,5)" fg:x="274" fg:w="1"/><text x="22.9509%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.7009%" y="581" width="0.0829%" height="15" fill="rgb(240,47,40)" fg:x="274" fg:w="1"/><text x="22.9509%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.17%)</title><rect x="22.7009%" y="629" width="0.1657%" height="15" fill="rgb(234,166,26)" fg:x="274" fg:w="2"/><text x="22.9509%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.17%)</title><rect x="22.7009%" y="613" width="0.1657%" height="15" fill="rgb(244,125,51)" fg:x="274" fg:w="2"/><text x="22.9509%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7838%" y="597" width="0.0829%" height="15" fill="rgb(229,171,11)" fg:x="275" fg:w="1"/><text x="23.0338%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7838%" y="581" width="0.0829%" height="15" fill="rgb(224,38,45)" fg:x="275" fg:w="1"/><text x="23.0338%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="23.1980%" y="565" width="0.0829%" height="15" fill="rgb(237,27,7)" fg:x="280" fg:w="1"/><text x="23.4480%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="23.1980%" y="549" width="0.0829%" height="15" fill="rgb(216,52,7)" fg:x="280" fg:w="1"/><text x="23.4480%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3637%" y="501" width="0.0829%" height="15" fill="rgb(243,11,11)" fg:x="282" fg:w="1"/><text x="23.6137%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3637%" y="485" width="0.0829%" height="15" fill="rgb(253,167,20)" fg:x="282" fg:w="1"/><text x="23.6137%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.25%)</title><rect x="23.2809%" y="549" width="0.2486%" height="15" fill="rgb(215,207,5)" fg:x="281" fg:w="3"/><text x="23.5309%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="23.2809%" y="533" width="0.2486%" height="15" fill="rgb(252,127,31)" fg:x="281" fg:w="3"/><text x="23.5309%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="23.2809%" y="517" width="0.2486%" height="15" fill="rgb(209,106,27)" fg:x="281" fg:w="3"/><text x="23.5309%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4466%" y="501" width="0.0829%" height="15" fill="rgb(214,220,18)" fg:x="283" fg:w="1"/><text x="23.6966%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4466%" y="485" width="0.0829%" height="15" fill="rgb(237,89,12)" fg:x="283" fg:w="1"/><text x="23.6966%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4466%" y="469" width="0.0829%" height="15" fill="rgb(209,167,36)" fg:x="283" fg:w="1"/><text x="23.6966%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4466%" y="453" width="0.0829%" height="15" fill="rgb(243,45,22)" fg:x="283" fg:w="1"/><text x="23.6966%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.4466%" y="437" width="0.0829%" height="15" fill="rgb(239,2,46)" fg:x="283" fg:w="1"/><text x="23.6966%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="23.2809%" y="565" width="0.3314%" height="15" fill="rgb(241,101,0)" fg:x="281" fg:w="4"/><text x="23.5309%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5294%" y="549" width="0.0829%" height="15" fill="rgb(244,34,31)" fg:x="284" fg:w="1"/><text x="23.7794%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (6 samples, 0.50%)</title><rect x="23.1980%" y="581" width="0.4971%" height="15" fill="rgb(248,23,22)" fg:x="280" fg:w="6"/><text x="23.4480%" y="591.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="23.6123%" y="565" width="0.0829%" height="15" fill="rgb(218,27,48)" fg:x="285" fg:w="1"/><text x="23.8623%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6951%" y="437" width="0.0829%" height="15" fill="rgb(232,78,1)" fg:x="286" fg:w="1"/><text x="23.9451%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6951%" y="421" width="0.0829%" height="15" fill="rgb(233,169,12)" fg:x="286" fg:w="1"/><text x="23.9451%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6951%" y="405" width="0.0829%" height="15" fill="rgb(225,222,54)" fg:x="286" fg:w="1"/><text x="23.9451%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.6951%" y="389" width="0.0829%" height="15" fill="rgb(245,126,29)" fg:x="286" fg:w="1"/><text x="23.9451%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.6951%" y="373" width="0.0829%" height="15" fill="rgb(241,63,48)" fg:x="286" fg:w="1"/><text x="23.9451%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.6951%" y="357" width="0.0829%" height="15" fill="rgb(235,126,38)" fg:x="286" fg:w="1"/><text x="23.9451%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6951%" y="341" width="0.0829%" height="15" fill="rgb(232,96,49)" fg:x="286" fg:w="1"/><text x="23.9451%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6951%" y="325" width="0.0829%" height="15" fill="rgb(211,146,40)" fg:x="286" fg:w="1"/><text x="23.9451%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.6951%" y="309" width="0.0829%" height="15" fill="rgb(247,93,44)" fg:x="286" fg:w="1"/><text x="23.9451%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.6951%" y="293" width="0.0829%" height="15" fill="rgb(251,41,49)" fg:x="286" fg:w="1"/><text x="23.9451%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.6951%" y="277" width="0.0829%" height="15" fill="rgb(218,155,12)" fg:x="286" fg:w="1"/><text x="23.9451%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.6951%" y="261" width="0.0829%" height="15" fill="rgb(221,161,30)" fg:x="286" fg:w="1"/><text x="23.9451%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6951%" y="245" width="0.0829%" height="15" fill="rgb(221,179,11)" fg:x="286" fg:w="1"/><text x="23.9451%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="23.6951%" y="501" width="0.1657%" height="15" fill="rgb(224,170,48)" fg:x="286" fg:w="2"/><text x="23.9451%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="23.6951%" y="485" width="0.1657%" height="15" fill="rgb(223,117,5)" fg:x="286" fg:w="2"/><text x="23.9451%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="23.6951%" y="469" width="0.1657%" height="15" fill="rgb(209,52,20)" fg:x="286" fg:w="2"/><text x="23.9451%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="23.6951%" y="453" width="0.1657%" height="15" fill="rgb(209,19,41)" fg:x="286" fg:w="2"/><text x="23.9451%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7780%" y="437" width="0.0829%" height="15" fill="rgb(210,177,12)" fg:x="287" fg:w="1"/><text x="24.0280%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.7780%" y="421" width="0.0829%" height="15" fill="rgb(211,159,37)" fg:x="287" fg:w="1"/><text x="24.0280%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.7780%" y="405" width="0.0829%" height="15" fill="rgb(209,20,2)" fg:x="287" fg:w="1"/><text x="24.0280%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.7780%" y="389" width="0.0829%" height="15" fill="rgb(244,3,46)" fg:x="287" fg:w="1"/><text x="24.0280%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.7780%" y="373" width="0.0829%" height="15" fill="rgb(220,94,38)" fg:x="287" fg:w="1"/><text x="24.0280%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7780%" y="357" width="0.0829%" height="15" fill="rgb(253,14,31)" fg:x="287" fg:w="1"/><text x="24.0280%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7780%" y="341" width="0.0829%" height="15" fill="rgb(234,176,13)" fg:x="287" fg:w="1"/><text x="24.0280%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.7780%" y="325" width="0.0829%" height="15" fill="rgb(218,62,25)" fg:x="287" fg:w="1"/><text x="24.0280%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.7780%" y="309" width="0.0829%" height="15" fill="rgb(216,124,40)" fg:x="287" fg:w="1"/><text x="24.0280%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.7780%" y="293" width="0.0829%" height="15" fill="rgb(228,170,12)" fg:x="287" fg:w="1"/><text x="24.0280%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.7780%" y="277" width="0.0829%" height="15" fill="rgb(231,226,5)" fg:x="287" fg:w="1"/><text x="24.0280%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7780%" y="261" width="0.0829%" height="15" fill="rgb(237,122,22)" fg:x="287" fg:w="1"/><text x="24.0280%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.8608%" y="501" width="0.0829%" height="15" fill="rgb(209,185,25)" fg:x="288" fg:w="1"/><text x="24.1108%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.8608%" y="485" width="0.0829%" height="15" fill="rgb(228,200,32)" fg:x="288" fg:w="1"/><text x="24.1108%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8608%" y="469" width="0.0829%" height="15" fill="rgb(217,140,10)" fg:x="288" fg:w="1"/><text x="24.1108%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="23.9437%" y="373" width="0.1657%" height="15" fill="rgb(253,17,24)" fg:x="289" fg:w="2"/><text x="24.1937%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.50%)</title><rect x="23.6951%" y="581" width="0.4971%" height="15" fill="rgb(212,61,6)" fg:x="286" fg:w="6"/><text x="23.9451%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.50%)</title><rect x="23.6951%" y="565" width="0.4971%" height="15" fill="rgb(205,14,25)" fg:x="286" fg:w="6"/><text x="23.9451%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.50%)</title><rect x="23.6951%" y="549" width="0.4971%" height="15" fill="rgb(232,69,41)" fg:x="286" fg:w="6"/><text x="23.9451%" y="559.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.50%)</title><rect x="23.6951%" y="533" width="0.4971%" height="15" fill="rgb(241,106,47)" fg:x="286" fg:w="6"/><text x="23.9451%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.50%)</title><rect x="23.6951%" y="517" width="0.4971%" height="15" fill="rgb(210,213,53)" fg:x="286" fg:w="6"/><text x="23.9451%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="23.9437%" y="501" width="0.2486%" height="15" fill="rgb(253,175,27)" fg:x="289" fg:w="3"/><text x="24.1937%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="23.9437%" y="485" width="0.2486%" height="15" fill="rgb(211,171,24)" fg:x="289" fg:w="3"/><text x="24.1937%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="23.9437%" y="469" width="0.2486%" height="15" fill="rgb(229,80,7)" fg:x="289" fg:w="3"/><text x="24.1937%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="23.9437%" y="453" width="0.2486%" height="15" fill="rgb(212,46,39)" fg:x="289" fg:w="3"/><text x="24.1937%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="23.9437%" y="437" width="0.2486%" height="15" fill="rgb(240,80,45)" fg:x="289" fg:w="3"/><text x="24.1937%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="23.9437%" y="421" width="0.2486%" height="15" fill="rgb(253,177,40)" fg:x="289" fg:w="3"/><text x="24.1937%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="23.9437%" y="405" width="0.2486%" height="15" fill="rgb(249,200,15)" fg:x="289" fg:w="3"/><text x="24.1937%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="23.9437%" y="389" width="0.2486%" height="15" fill="rgb(217,78,26)" fg:x="289" fg:w="3"/><text x="24.1937%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.1094%" y="373" width="0.0829%" height="15" fill="rgb(254,151,32)" fg:x="291" fg:w="1"/><text x="24.3594%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1094%" y="357" width="0.0829%" height="15" fill="rgb(226,165,27)" fg:x="291" fg:w="1"/><text x="24.3594%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1094%" y="341" width="0.0829%" height="15" fill="rgb(250,206,4)" fg:x="291" fg:w="1"/><text x="24.3594%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="24.1922%" y="549" width="0.0829%" height="15" fill="rgb(231,229,27)" fg:x="292" fg:w="1"/><text x="24.4422%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="24.1922%" y="533" width="0.0829%" height="15" fill="rgb(239,217,8)" fg:x="292" fg:w="1"/><text x="24.4422%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.1922%" y="517" width="0.0829%" height="15" fill="rgb(225,204,27)" fg:x="292" fg:w="1"/><text x="24.4422%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="501" width="0.0829%" height="15" fill="rgb(230,56,32)" fg:x="292" fg:w="1"/><text x="24.4422%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.1922%" y="485" width="0.0829%" height="15" fill="rgb(222,56,27)" fg:x="292" fg:w="1"/><text x="24.4422%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="469" width="0.0829%" height="15" fill="rgb(253,108,27)" fg:x="292" fg:w="1"/><text x="24.4422%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="453" width="0.0829%" height="15" fill="rgb(212,87,36)" fg:x="292" fg:w="1"/><text x="24.4422%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="437" width="0.0829%" height="15" fill="rgb(247,82,36)" fg:x="292" fg:w="1"/><text x="24.4422%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.1922%" y="421" width="0.0829%" height="15" fill="rgb(222,143,9)" fg:x="292" fg:w="1"/><text x="24.4422%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="405" width="0.0829%" height="15" fill="rgb(238,162,48)" fg:x="292" fg:w="1"/><text x="24.4422%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="389" width="0.0829%" height="15" fill="rgb(221,59,43)" fg:x="292" fg:w="1"/><text x="24.4422%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="373" width="0.0829%" height="15" fill="rgb(205,166,41)" fg:x="292" fg:w="1"/><text x="24.4422%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.1922%" y="357" width="0.0829%" height="15" fill="rgb(241,186,40)" fg:x="292" fg:w="1"/><text x="24.4422%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="341" width="0.0829%" height="15" fill="rgb(216,119,35)" fg:x="292" fg:w="1"/><text x="24.4422%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="325" width="0.0829%" height="15" fill="rgb(208,68,38)" fg:x="292" fg:w="1"/><text x="24.4422%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="309" width="0.0829%" height="15" fill="rgb(217,113,1)" fg:x="292" fg:w="1"/><text x="24.4422%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.1922%" y="293" width="0.0829%" height="15" fill="rgb(242,153,3)" fg:x="292" fg:w="1"/><text x="24.4422%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.1922%" y="277" width="0.0829%" height="15" fill="rgb(229,76,35)" fg:x="292" fg:w="1"/><text x="24.4422%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.1922%" y="261" width="0.0829%" height="15" fill="rgb(229,125,34)" fg:x="292" fg:w="1"/><text x="24.4422%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.1922%" y="245" width="0.0829%" height="15" fill="rgb(238,179,36)" fg:x="292" fg:w="1"/><text x="24.4422%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="24.1922%" y="229" width="0.0829%" height="15" fill="rgb(244,183,19)" fg:x="292" fg:w="1"/><text x="24.4422%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="24.1922%" y="213" width="0.0829%" height="15" fill="rgb(216,85,49)" fg:x="292" fg:w="1"/><text x="24.4422%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="24.1922%" y="197" width="0.0829%" height="15" fill="rgb(208,161,47)" fg:x="292" fg:w="1"/><text x="24.4422%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="24.1922%" y="181" width="0.0829%" height="15" fill="rgb(233,210,18)" fg:x="292" fg:w="1"/><text x="24.4422%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="24.1922%" y="165" width="0.0829%" height="15" fill="rgb(205,104,42)" fg:x="292" fg:w="1"/><text x="24.4422%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="24.1922%" y="149" width="0.0829%" height="15" fill="rgb(248,90,43)" fg:x="292" fg:w="1"/><text x="24.4422%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.1922%" y="133" width="0.0829%" height="15" fill="rgb(206,198,11)" fg:x="292" fg:w="1"/><text x="24.4422%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="24.1922%" y="117" width="0.0829%" height="15" fill="rgb(239,165,27)" fg:x="292" fg:w="1"/><text x="24.4422%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.1922%" y="101" width="0.0829%" height="15" fill="rgb(246,44,32)" fg:x="292" fg:w="1"/><text x="24.4422%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="24.1922%" y="85" width="0.0829%" height="15" fill="rgb(252,65,42)" fg:x="292" fg:w="1"/><text x="24.4422%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="24.1922%" y="69" width="0.0829%" height="15" fill="rgb(246,197,18)" fg:x="292" fg:w="1"/><text x="24.4422%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="24.1922%" y="53" width="0.0829%" height="15" fill="rgb(216,192,4)" fg:x="292" fg:w="1"/><text x="24.4422%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.1922%" y="37" width="0.0829%" height="15" fill="rgb(208,117,10)" fg:x="292" fg:w="1"/><text x="24.4422%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3579%" y="501" width="0.0829%" height="15" fill="rgb(240,61,47)" fg:x="294" fg:w="1"/><text x="24.6079%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3579%" y="485" width="0.0829%" height="15" fill="rgb(228,178,21)" fg:x="294" fg:w="1"/><text x="24.6079%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3579%" y="469" width="0.0829%" height="15" fill="rgb(219,96,54)" fg:x="294" fg:w="1"/><text x="24.6079%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.4408%" y="501" width="0.0829%" height="15" fill="rgb(250,177,24)" fg:x="295" fg:w="1"/><text x="24.6908%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.4408%" y="485" width="0.0829%" height="15" fill="rgb(242,154,46)" fg:x="295" fg:w="1"/><text x="24.6908%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.4408%" y="469" width="0.0829%" height="15" fill="rgb(226,176,29)" fg:x="295" fg:w="1"/><text x="24.6908%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.5236%" y="437" width="0.0829%" height="15" fill="rgb(226,29,2)" fg:x="296" fg:w="1"/><text x="24.7736%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="24.6065%" y="405" width="0.0829%" height="15" fill="rgb(237,104,14)" fg:x="297" fg:w="1"/><text x="24.8565%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.6065%" y="389" width="0.0829%" height="15" fill="rgb(245,207,31)" fg:x="297" fg:w="1"/><text x="24.8565%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.6065%" y="373" width="0.0829%" height="15" fill="rgb(229,211,45)" fg:x="297" fg:w="1"/><text x="24.8565%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.50%)</title><rect x="24.2751%" y="549" width="0.4971%" height="15" fill="rgb(229,113,15)" fg:x="293" fg:w="6"/><text x="24.5251%" y="559.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.50%)</title><rect x="24.2751%" y="533" width="0.4971%" height="15" fill="rgb(237,147,15)" fg:x="293" fg:w="6"/><text x="24.5251%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.50%)</title><rect x="24.2751%" y="517" width="0.4971%" height="15" fill="rgb(244,120,12)" fg:x="293" fg:w="6"/><text x="24.5251%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="24.5236%" y="501" width="0.2486%" height="15" fill="rgb(205,120,12)" fg:x="296" fg:w="3"/><text x="24.7736%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="24.5236%" y="485" width="0.2486%" height="15" fill="rgb(231,26,45)" fg:x="296" fg:w="3"/><text x="24.7736%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="24.5236%" y="469" width="0.2486%" height="15" fill="rgb(246,98,1)" fg:x="296" fg:w="3"/><text x="24.7736%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="24.5236%" y="453" width="0.2486%" height="15" fill="rgb(207,68,45)" fg:x="296" fg:w="3"/><text x="24.7736%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="24.6065%" y="437" width="0.1657%" height="15" fill="rgb(231,27,38)" fg:x="297" fg:w="2"/><text x="24.8565%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="24.6065%" y="421" width="0.1657%" height="15" fill="rgb(214,223,3)" fg:x="297" fg:w="2"/><text x="24.8565%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.6893%" y="405" width="0.0829%" height="15" fill="rgb(228,195,46)" fg:x="298" fg:w="1"/><text x="24.9393%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6893%" y="389" width="0.0829%" height="15" fill="rgb(231,100,42)" fg:x="298" fg:w="1"/><text x="24.9393%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.6893%" y="373" width="0.0829%" height="15" fill="rgb(236,53,4)" fg:x="298" fg:w="1"/><text x="24.9393%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6893%" y="357" width="0.0829%" height="15" fill="rgb(230,152,12)" fg:x="298" fg:w="1"/><text x="24.9393%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="24.7722%" y="533" width="0.0829%" height="15" fill="rgb(226,101,19)" fg:x="299" fg:w="1"/><text x="25.0222%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.7722%" y="517" width="0.0829%" height="15" fill="rgb(250,149,32)" fg:x="299" fg:w="1"/><text x="25.0222%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7722%" y="501" width="0.0829%" height="15" fill="rgb(232,178,12)" fg:x="299" fg:w="1"/><text x="25.0222%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.7722%" y="485" width="0.0829%" height="15" fill="rgb(246,151,17)" fg:x="299" fg:w="1"/><text x="25.0222%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.7722%" y="469" width="0.0829%" height="15" fill="rgb(252,17,51)" fg:x="299" fg:w="1"/><text x="25.0222%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7722%" y="453" width="0.0829%" height="15" fill="rgb(250,207,23)" fg:x="299" fg:w="1"/><text x="25.0222%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7722%" y="437" width="0.0829%" height="15" fill="rgb(205,27,5)" fg:x="299" fg:w="1"/><text x="25.0222%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.7722%" y="421" width="0.0829%" height="15" fill="rgb(224,32,19)" fg:x="299" fg:w="1"/><text x="25.0222%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.7722%" y="405" width="0.0829%" height="15" fill="rgb(247,214,40)" fg:x="299" fg:w="1"/><text x="25.0222%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.7722%" y="389" width="0.0829%" height="15" fill="rgb(239,199,17)" fg:x="299" fg:w="1"/><text x="25.0222%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7722%" y="373" width="0.0829%" height="15" fill="rgb(251,159,9)" fg:x="299" fg:w="1"/><text x="25.0222%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.7722%" y="357" width="0.0829%" height="15" fill="rgb(225,78,32)" fg:x="299" fg:w="1"/><text x="25.0222%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.7722%" y="341" width="0.0829%" height="15" fill="rgb(206,97,47)" fg:x="299" fg:w="1"/><text x="25.0222%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.7722%" y="325" width="0.0829%" height="15" fill="rgb(227,107,4)" fg:x="299" fg:w="1"/><text x="25.0222%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.7722%" y="309" width="0.0829%" height="15" fill="rgb(241,146,50)" fg:x="299" fg:w="1"/><text x="25.0222%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.7722%" y="293" width="0.0829%" height="15" fill="rgb(232,92,30)" fg:x="299" fg:w="1"/><text x="25.0222%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7722%" y="277" width="0.0829%" height="15" fill="rgb(222,0,40)" fg:x="299" fg:w="1"/><text x="25.0222%" y="287.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.17%)</title><rect x="24.7722%" y="549" width="0.1657%" height="15" fill="rgb(219,54,33)" fg:x="299" fg:w="2"/><text x="25.0222%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.8550%" y="533" width="0.0829%" height="15" fill="rgb(226,209,28)" fg:x="300" fg:w="1"/><text x="25.1050%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="24.8550%" y="517" width="0.0829%" height="15" fill="rgb(254,205,35)" fg:x="300" fg:w="1"/><text x="25.1050%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.8550%" y="501" width="0.0829%" height="15" fill="rgb(230,159,3)" fg:x="300" fg:w="1"/><text x="25.1050%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.8550%" y="485" width="0.0829%" height="15" fill="rgb(232,190,24)" fg:x="300" fg:w="1"/><text x="25.1050%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="24.9379%" y="501" width="0.0829%" height="15" fill="rgb(217,227,44)" fg:x="301" fg:w="1"/><text x="25.1879%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.9379%" y="485" width="0.0829%" height="15" fill="rgb(236,211,1)" fg:x="301" fg:w="1"/><text x="25.1879%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.9379%" y="469" width="0.0829%" height="15" fill="rgb(250,127,46)" fg:x="301" fg:w="1"/><text x="25.1879%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.9379%" y="453" width="0.0829%" height="15" fill="rgb(229,213,6)" fg:x="301" fg:w="1"/><text x="25.1879%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.9379%" y="437" width="0.0829%" height="15" fill="rgb(237,15,36)" fg:x="301" fg:w="1"/><text x="25.1879%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9379%" y="421" width="0.0829%" height="15" fill="rgb(213,131,41)" fg:x="301" fg:w="1"/><text x="25.1879%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="25.0207%" y="485" width="0.0829%" height="15" fill="rgb(225,82,44)" fg:x="302" fg:w="1"/><text x="25.2707%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.0207%" y="469" width="0.0829%" height="15" fill="rgb(249,42,11)" fg:x="302" fg:w="1"/><text x="25.2707%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1036%" y="453" width="0.0829%" height="15" fill="rgb(253,11,29)" fg:x="303" fg:w="1"/><text x="25.3536%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1036%" y="437" width="0.0829%" height="15" fill="rgb(206,8,54)" fg:x="303" fg:w="1"/><text x="25.3536%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1036%" y="421" width="0.0829%" height="15" fill="rgb(222,186,2)" fg:x="303" fg:w="1"/><text x="25.3536%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="25.1036%" y="469" width="0.1657%" height="15" fill="rgb(221,206,53)" fg:x="303" fg:w="2"/><text x="25.3536%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1864%" y="453" width="0.0829%" height="15" fill="rgb(230,150,21)" fg:x="304" fg:w="1"/><text x="25.4364%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.2693%" y="469" width="0.0829%" height="15" fill="rgb(253,202,10)" fg:x="305" fg:w="1"/><text x="25.5193%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.2693%" y="453" width="0.0829%" height="15" fill="rgb(238,109,40)" fg:x="305" fg:w="1"/><text x="25.5193%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.2693%" y="437" width="0.0829%" height="15" fill="rgb(247,120,22)" fg:x="305" fg:w="1"/><text x="25.5193%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.2693%" y="421" width="0.0829%" height="15" fill="rgb(207,43,30)" fg:x="305" fg:w="1"/><text x="25.5193%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.2693%" y="405" width="0.0829%" height="15" fill="rgb(213,211,24)" fg:x="305" fg:w="1"/><text x="25.5193%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.2693%" y="389" width="0.0829%" height="15" fill="rgb(239,73,39)" fg:x="305" fg:w="1"/><text x="25.5193%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.2693%" y="373" width="0.0829%" height="15" fill="rgb(245,182,19)" fg:x="305" fg:w="1"/><text x="25.5193%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (8 samples, 0.66%)</title><rect x="24.9379%" y="517" width="0.6628%" height="15" fill="rgb(247,143,26)" fg:x="301" fg:w="8"/><text x="25.1879%" y="527.50"></text></g><g><title>kernel::model::props::save_props (7 samples, 0.58%)</title><rect x="25.0207%" y="501" width="0.5800%" height="15" fill="rgb(228,191,23)" fg:x="302" fg:w="7"/><text x="25.2707%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.50%)</title><rect x="25.1036%" y="485" width="0.4971%" height="15" fill="rgb(253,165,31)" fg:x="303" fg:w="6"/><text x="25.3536%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.25%)</title><rect x="25.3521%" y="469" width="0.2486%" height="15" fill="rgb(234,138,20)" fg:x="306" fg:w="3"/><text x="25.6021%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="25.3521%" y="453" width="0.2486%" height="15" fill="rgb(218,191,29)" fg:x="306" fg:w="3"/><text x="25.6021%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.25%)</title><rect x="25.3521%" y="437" width="0.2486%" height="15" fill="rgb(221,157,19)" fg:x="306" fg:w="3"/><text x="25.6021%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="25.3521%" y="421" width="0.2486%" height="15" fill="rgb(237,26,42)" fg:x="306" fg:w="3"/><text x="25.6021%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.25%)</title><rect x="25.3521%" y="405" width="0.2486%" height="15" fill="rgb(220,163,24)" fg:x="306" fg:w="3"/><text x="25.6021%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.17%)</title><rect x="25.4350%" y="389" width="0.1657%" height="15" fill="rgb(242,115,20)" fg:x="307" fg:w="2"/><text x="25.6850%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="25.5178%" y="373" width="0.0829%" height="15" fill="rgb(210,206,9)" fg:x="308" fg:w="1"/><text x="25.7678%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.5178%" y="357" width="0.0829%" height="15" fill="rgb(208,71,17)" fg:x="308" fg:w="1"/><text x="25.7678%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.5178%" y="341" width="0.0829%" height="15" fill="rgb(233,7,5)" fg:x="308" fg:w="1"/><text x="25.7678%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.49%)</title><rect x="24.1922%" y="565" width="1.4913%" height="15" fill="rgb(207,92,33)" fg:x="292" fg:w="18"/><text x="24.4422%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.75%)</title><rect x="24.9379%" y="549" width="0.7457%" height="15" fill="rgb(218,87,9)" fg:x="301" fg:w="9"/><text x="25.1879%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.75%)</title><rect x="24.9379%" y="533" width="0.7457%" height="15" fill="rgb(219,47,37)" fg:x="301" fg:w="9"/><text x="25.1879%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="25.6007%" y="517" width="0.0829%" height="15" fill="rgb(221,152,34)" fg:x="309" fg:w="1"/><text x="25.8507%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6835%" y="437" width="0.0829%" height="15" fill="rgb(235,176,21)" fg:x="310" fg:w="1"/><text x="25.9335%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6835%" y="421" width="0.0829%" height="15" fill="rgb(232,212,21)" fg:x="310" fg:w="1"/><text x="25.9335%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6835%" y="405" width="0.0829%" height="15" fill="rgb(245,82,39)" fg:x="310" fg:w="1"/><text x="25.9335%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="25.6835%" y="469" width="0.1657%" height="15" fill="rgb(241,52,51)" fg:x="310" fg:w="2"/><text x="25.9335%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="25.6835%" y="453" width="0.1657%" height="15" fill="rgb(219,91,24)" fg:x="310" fg:w="2"/><text x="25.9335%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7664%" y="437" width="0.0829%" height="15" fill="rgb(241,142,12)" fg:x="311" fg:w="1"/><text x="26.0164%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="25.6835%" y="517" width="0.2486%" height="15" fill="rgb(230,27,9)" fg:x="310" fg:w="3"/><text x="25.9335%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="25.6835%" y="501" width="0.2486%" height="15" fill="rgb(249,181,32)" fg:x="310" fg:w="3"/><text x="25.9335%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="25.6835%" y="485" width="0.2486%" height="15" fill="rgb(230,107,3)" fg:x="310" fg:w="3"/><text x="25.9335%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8492%" y="469" width="0.0829%" height="15" fill="rgb(246,204,14)" fg:x="312" fg:w="1"/><text x="26.0992%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.8492%" y="453" width="0.0829%" height="15" fill="rgb(213,192,47)" fg:x="312" fg:w="1"/><text x="26.0992%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8492%" y="437" width="0.0829%" height="15" fill="rgb(240,44,36)" fg:x="312" fg:w="1"/><text x="26.0992%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8492%" y="421" width="0.0829%" height="15" fill="rgb(244,209,38)" fg:x="312" fg:w="1"/><text x="26.0992%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8492%" y="405" width="0.0829%" height="15" fill="rgb(219,34,37)" fg:x="312" fg:w="1"/><text x="26.0992%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8492%" y="389" width="0.0829%" height="15" fill="rgb(210,28,6)" fg:x="312" fg:w="1"/><text x="26.0992%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.8492%" y="373" width="0.0829%" height="15" fill="rgb(244,110,52)" fg:x="312" fg:w="1"/><text x="26.0992%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8492%" y="357" width="0.0829%" height="15" fill="rgb(254,124,47)" fg:x="312" fg:w="1"/><text x="26.0992%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="25.9321%" y="501" width="0.0829%" height="15" fill="rgb(254,110,13)" fg:x="313" fg:w="1"/><text x="26.1821%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="26.0149%" y="469" width="0.1657%" height="15" fill="rgb(252,57,21)" fg:x="314" fg:w="2"/><text x="26.2649%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="26.1806%" y="469" width="0.1657%" height="15" fill="rgb(242,60,45)" fg:x="316" fg:w="2"/><text x="26.4306%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="26.1806%" y="453" width="0.1657%" height="15" fill="rgb(234,49,30)" fg:x="316" fg:w="2"/><text x="26.4306%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="26.1806%" y="437" width="0.1657%" height="15" fill="rgb(218,98,6)" fg:x="316" fg:w="2"/><text x="26.4306%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2635%" y="421" width="0.0829%" height="15" fill="rgb(220,174,29)" fg:x="317" fg:w="1"/><text x="26.5135%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2635%" y="405" width="0.0829%" height="15" fill="rgb(236,163,23)" fg:x="317" fg:w="1"/><text x="26.5135%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2635%" y="389" width="0.0829%" height="15" fill="rgb(242,114,45)" fg:x="317" fg:w="1"/><text x="26.5135%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2635%" y="373" width="0.0829%" height="15" fill="rgb(232,10,53)" fg:x="317" fg:w="1"/><text x="26.5135%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.83%)</title><rect x="25.6835%" y="549" width="0.8285%" height="15" fill="rgb(245,108,29)" fg:x="310" fg:w="10"/><text x="25.9335%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.83%)</title><rect x="25.6835%" y="533" width="0.8285%" height="15" fill="rgb(240,89,53)" fg:x="310" fg:w="10"/><text x="25.9335%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.58%)</title><rect x="25.9321%" y="517" width="0.5800%" height="15" fill="rgb(226,60,45)" fg:x="313" fg:w="7"/><text x="26.1821%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.50%)</title><rect x="26.0149%" y="501" width="0.4971%" height="15" fill="rgb(230,41,44)" fg:x="314" fg:w="6"/><text x="26.2649%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.50%)</title><rect x="26.0149%" y="485" width="0.4971%" height="15" fill="rgb(230,26,20)" fg:x="314" fg:w="6"/><text x="26.2649%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="26.3463%" y="469" width="0.1657%" height="15" fill="rgb(237,170,32)" fg:x="318" fg:w="2"/><text x="26.5963%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="26.3463%" y="453" width="0.1657%" height="15" fill="rgb(212,35,42)" fg:x="318" fg:w="2"/><text x="26.5963%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="26.3463%" y="437" width="0.1657%" height="15" fill="rgb(227,31,34)" fg:x="318" fg:w="2"/><text x="26.5963%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="26.3463%" y="421" width="0.1657%" height="15" fill="rgb(216,19,18)" fg:x="318" fg:w="2"/><text x="26.5963%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.4292%" y="405" width="0.0829%" height="15" fill="rgb(211,133,42)" fg:x="319" fg:w="1"/><text x="26.6792%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.4292%" y="389" width="0.0829%" height="15" fill="rgb(244,66,13)" fg:x="319" fg:w="1"/><text x="26.6792%" y="399.50"></text></g><g><title>plugins_core::build::Build::leads_to (29 samples, 2.40%)</title><rect x="24.1922%" y="581" width="2.4027%" height="15" fill="rgb(218,185,50)" fg:x="292" fg:w="29"/><text x="24.4422%" y="591.50">pl..</text></g><g><title>plugins_core::tools::leads_to (11 samples, 0.91%)</title><rect x="25.6835%" y="565" width="0.9114%" height="15" fill="rgb(219,149,13)" fg:x="310" fg:w="11"/><text x="25.9335%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.5120%" y="549" width="0.0829%" height="15" fill="rgb(221,125,0)" fg:x="320" fg:w="1"/><text x="26.7620%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="26.5120%" y="533" width="0.0829%" height="15" fill="rgb(247,126,27)" fg:x="320" fg:w="1"/><text x="26.7620%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.5120%" y="517" width="0.0829%" height="15" fill="rgb(250,138,30)" fg:x="320" fg:w="1"/><text x="26.7620%" y="527.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="26.5949%" y="549" width="0.0829%" height="15" fill="rgb(230,151,9)" fg:x="321" fg:w="1"/><text x="26.8449%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.5949%" y="533" width="0.0829%" height="15" fill="rgb(233,80,38)" fg:x="321" fg:w="1"/><text x="26.8449%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.5949%" y="517" width="0.0829%" height="15" fill="rgb(232,68,43)" fg:x="321" fg:w="1"/><text x="26.8449%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="26.5949%" y="501" width="0.0829%" height="15" fill="rgb(254,5,50)" fg:x="321" fg:w="1"/><text x="26.8449%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5949%" y="485" width="0.0829%" height="15" fill="rgb(225,45,5)" fg:x="321" fg:w="1"/><text x="26.8449%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6777%" y="453" width="0.0829%" height="15" fill="rgb(239,22,3)" fg:x="322" fg:w="1"/><text x="26.9277%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="26.6777%" y="549" width="0.1657%" height="15" fill="rgb(243,129,0)" fg:x="322" fg:w="2"/><text x="26.9277%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="26.6777%" y="533" width="0.1657%" height="15" fill="rgb(223,164,0)" fg:x="322" fg:w="2"/><text x="26.9277%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="26.6777%" y="517" width="0.1657%" height="15" fill="rgb(221,46,29)" fg:x="322" fg:w="2"/><text x="26.9277%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="26.6777%" y="501" width="0.1657%" height="15" fill="rgb(205,97,47)" fg:x="322" fg:w="2"/><text x="26.9277%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="26.6777%" y="485" width="0.1657%" height="15" fill="rgb(249,14,8)" fg:x="322" fg:w="2"/><text x="26.9277%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="26.6777%" y="469" width="0.1657%" height="15" fill="rgb(216,77,3)" fg:x="322" fg:w="2"/><text x="26.9277%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.7606%" y="453" width="0.0829%" height="15" fill="rgb(206,168,54)" fg:x="323" fg:w="1"/><text x="27.0106%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.8434%" y="517" width="0.0829%" height="15" fill="rgb(236,3,41)" fg:x="324" fg:w="1"/><text x="27.0934%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.8434%" y="501" width="0.0829%" height="15" fill="rgb(231,132,24)" fg:x="324" fg:w="1"/><text x="27.0934%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.8434%" y="485" width="0.0829%" height="15" fill="rgb(227,221,40)" fg:x="324" fg:w="1"/><text x="27.0934%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.8434%" y="469" width="0.0829%" height="15" fill="rgb(233,151,11)" fg:x="324" fg:w="1"/><text x="27.0934%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.41%)</title><rect x="26.5949%" y="581" width="0.4143%" height="15" fill="rgb(247,81,35)" fg:x="321" fg:w="5"/><text x="26.8449%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.41%)</title><rect x="26.5949%" y="565" width="0.4143%" height="15" fill="rgb(243,128,48)" fg:x="321" fg:w="5"/><text x="26.8449%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.17%)</title><rect x="26.8434%" y="549" width="0.1657%" height="15" fill="rgb(253,16,10)" fg:x="324" fg:w="2"/><text x="27.0934%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="26.8434%" y="533" width="0.1657%" height="15" fill="rgb(228,67,27)" fg:x="324" fg:w="2"/><text x="27.0934%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9263%" y="517" width="0.0829%" height="15" fill="rgb(231,105,25)" fg:x="325" fg:w="1"/><text x="27.1763%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.9263%" y="501" width="0.0829%" height="15" fill="rgb(213,166,47)" fg:x="325" fg:w="1"/><text x="27.1763%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9263%" y="485" width="0.0829%" height="15" fill="rgb(209,27,10)" fg:x="325" fg:w="1"/><text x="27.1763%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.9263%" y="469" width="0.0829%" height="15" fill="rgb(241,44,30)" fg:x="325" fg:w="1"/><text x="27.1763%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.9263%" y="453" width="0.0829%" height="15" fill="rgb(223,216,15)" fg:x="325" fg:w="1"/><text x="27.1763%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (51 samples, 4.23%)</title><rect x="22.8666%" y="629" width="4.2254%" height="15" fill="rgb(227,14,7)" fg:x="276" fg:w="51"/><text x="23.1166%" y="639.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 4.23%)</title><rect x="22.8666%" y="613" width="4.2254%" height="15" fill="rgb(237,14,5)" fg:x="276" fg:w="51"/><text x="23.1166%" y="623.50">&lt;allo..</text></g><g><title>plugins_core::build::QuickThing::make (49 samples, 4.06%)</title><rect x="23.0323%" y="597" width="4.0597%" height="15" fill="rgb(232,14,36)" fg:x="278" fg:w="49"/><text x="23.2823%" y="607.50">plug..</text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="27.0091%" y="581" width="0.0829%" height="15" fill="rgb(234,0,38)" fg:x="326" fg:w="1"/><text x="27.2591%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0091%" y="565" width="0.0829%" height="15" fill="rgb(207,170,14)" fg:x="326" fg:w="1"/><text x="27.2591%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="27.0920%" y="613" width="0.0829%" height="15" fill="rgb(252,45,13)" fg:x="327" fg:w="1"/><text x="27.3420%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0920%" y="597" width="0.0829%" height="15" fill="rgb(213,142,7)" fg:x="327" fg:w="1"/><text x="27.3420%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0920%" y="581" width="0.0829%" height="15" fill="rgb(216,157,23)" fg:x="327" fg:w="1"/><text x="27.3420%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.0920%" y="565" width="0.0829%" height="15" fill="rgb(212,145,33)" fg:x="327" fg:w="1"/><text x="27.3420%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.0920%" y="549" width="0.0829%" height="15" fill="rgb(233,26,13)" fg:x="327" fg:w="1"/><text x="27.3420%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.0920%" y="533" width="0.0829%" height="15" fill="rgb(219,196,19)" fg:x="327" fg:w="1"/><text x="27.3420%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0920%" y="517" width="0.0829%" height="15" fill="rgb(246,56,21)" fg:x="327" fg:w="1"/><text x="27.3420%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0920%" y="501" width="0.0829%" height="15" fill="rgb(222,28,53)" fg:x="327" fg:w="1"/><text x="27.3420%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.0920%" y="485" width="0.0829%" height="15" fill="rgb(224,5,27)" fg:x="327" fg:w="1"/><text x="27.3420%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.0920%" y="469" width="0.0829%" height="15" fill="rgb(220,153,33)" fg:x="327" fg:w="1"/><text x="27.3420%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.0920%" y="453" width="0.0829%" height="15" fill="rgb(226,58,19)" fg:x="327" fg:w="1"/><text x="27.3420%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.0920%" y="437" width="0.0829%" height="15" fill="rgb(239,112,23)" fg:x="327" fg:w="1"/><text x="27.3420%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0920%" y="421" width="0.0829%" height="15" fill="rgb(251,213,20)" fg:x="327" fg:w="1"/><text x="27.3420%" y="431.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.17%)</title><rect x="27.1748%" y="597" width="0.1657%" height="15" fill="rgb(215,181,21)" fg:x="328" fg:w="2"/><text x="27.4248%" y="607.50"></text></g><g><title>std::env::_var (2 samples, 0.17%)</title><rect x="27.1748%" y="581" width="0.1657%" height="15" fill="rgb(240,8,35)" fg:x="328" fg:w="2"/><text x="27.4248%" y="591.50"></text></g><g><title>std::env::var_os (2 samples, 0.17%)</title><rect x="27.1748%" y="565" width="0.1657%" height="15" fill="rgb(232,203,3)" fg:x="328" fg:w="2"/><text x="27.4248%" y="575.50"></text></g><g><title>std::env::_var_os (2 samples, 0.17%)</title><rect x="27.1748%" y="549" width="0.1657%" height="15" fill="rgb(214,202,43)" fg:x="328" fg:w="2"/><text x="27.4248%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.17%)</title><rect x="27.1748%" y="533" width="0.1657%" height="15" fill="rgb(254,35,11)" fg:x="328" fg:w="2"/><text x="27.4248%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.17%)</title><rect x="27.1748%" y="517" width="0.1657%" height="15" fill="rgb(239,173,13)" fg:x="328" fg:w="2"/><text x="27.4248%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.17%)</title><rect x="27.1748%" y="501" width="0.1657%" height="15" fill="rgb(220,141,0)" fg:x="328" fg:w="2"/><text x="27.4248%" y="511.50"></text></g><g><title>getenv (2 samples, 0.17%)</title><rect x="27.1748%" y="485" width="0.1657%" height="15" fill="rgb(210,98,12)" fg:x="328" fg:w="2"/><text x="27.4248%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.17%)</title><rect x="27.3405%" y="533" width="0.1657%" height="15" fill="rgb(254,153,22)" fg:x="330" fg:w="2"/><text x="27.5905%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="27.3405%" y="565" width="0.2486%" height="15" fill="rgb(247,223,17)" fg:x="330" fg:w="3"/><text x="27.5905%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="27.3405%" y="549" width="0.2486%" height="15" fill="rgb(246,56,7)" fg:x="330" fg:w="3"/><text x="27.5905%" y="559.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="27.5062%" y="533" width="0.0829%" height="15" fill="rgb(240,226,12)" fg:x="332" fg:w="1"/><text x="27.7562%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.6719%" y="533" width="0.0829%" height="15" fill="rgb(205,87,46)" fg:x="334" fg:w="1"/><text x="27.9219%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.6719%" y="517" width="0.0829%" height="15" fill="rgb(245,214,51)" fg:x="334" fg:w="1"/><text x="27.9219%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.6719%" y="501" width="0.0829%" height="15" fill="rgb(223,172,33)" fg:x="334" fg:w="1"/><text x="27.9219%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.6719%" y="485" width="0.0829%" height="15" fill="rgb(227,203,34)" fg:x="334" fg:w="1"/><text x="27.9219%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.6719%" y="469" width="0.0829%" height="15" fill="rgb(248,143,44)" fg:x="334" fg:w="1"/><text x="27.9219%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.6719%" y="453" width="0.0829%" height="15" fill="rgb(226,162,5)" fg:x="334" fg:w="1"/><text x="27.9219%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.6719%" y="437" width="0.0829%" height="15" fill="rgb(211,143,1)" fg:x="334" fg:w="1"/><text x="27.9219%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.6719%" y="421" width="0.0829%" height="15" fill="rgb(224,96,15)" fg:x="334" fg:w="1"/><text x="27.9219%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.6719%" y="405" width="0.0829%" height="15" fill="rgb(222,4,38)" fg:x="334" fg:w="1"/><text x="27.9219%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.6719%" y="389" width="0.0829%" height="15" fill="rgb(253,228,15)" fg:x="334" fg:w="1"/><text x="27.9219%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.6719%" y="373" width="0.0829%" height="15" fill="rgb(242,194,12)" fg:x="334" fg:w="1"/><text x="27.9219%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="27.7548%" y="533" width="0.0829%" height="15" fill="rgb(214,177,31)" fg:x="335" fg:w="1"/><text x="28.0048%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.7548%" y="517" width="0.0829%" height="15" fill="rgb(226,58,51)" fg:x="335" fg:w="1"/><text x="28.0048%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.7548%" y="501" width="0.0829%" height="15" fill="rgb(250,119,16)" fg:x="335" fg:w="1"/><text x="28.0048%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.9205%" y="517" width="0.0829%" height="15" fill="rgb(223,128,53)" fg:x="337" fg:w="1"/><text x="28.1705%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="28.0033%" y="501" width="0.2486%" height="15" fill="rgb(251,199,15)" fg:x="338" fg:w="3"/><text x="28.2533%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="28.0033%" y="485" width="0.2486%" height="15" fill="rgb(235,168,42)" fg:x="338" fg:w="3"/><text x="28.2533%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="28.0862%" y="469" width="0.1657%" height="15" fill="rgb(250,210,17)" fg:x="339" fg:w="2"/><text x="28.3362%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.1690%" y="453" width="0.0829%" height="15" fill="rgb(226,36,41)" fg:x="340" fg:w="1"/><text x="28.4190%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.41%)</title><rect x="28.0033%" y="517" width="0.4143%" height="15" fill="rgb(225,87,10)" fg:x="338" fg:w="5"/><text x="28.2533%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="28.2519%" y="501" width="0.1657%" height="15" fill="rgb(228,83,9)" fg:x="341" fg:w="2"/><text x="28.5019%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="28.2519%" y="485" width="0.1657%" height="15" fill="rgb(225,16,36)" fg:x="341" fg:w="2"/><text x="28.5019%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.3347%" y="469" width="0.0829%" height="15" fill="rgb(242,198,13)" fg:x="342" fg:w="1"/><text x="28.5847%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.5833%" y="501" width="0.0829%" height="15" fill="rgb(239,25,51)" fg:x="345" fg:w="1"/><text x="28.8333%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.0804%" y="453" width="0.0829%" height="15" fill="rgb(239,28,37)" fg:x="351" fg:w="1"/><text x="29.3304%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.58%)</title><rect x="28.6661%" y="501" width="0.5800%" height="15" fill="rgb(234,70,17)" fg:x="346" fg:w="7"/><text x="28.9161%" y="511.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="28.8318%" y="485" width="0.4143%" height="15" fill="rgb(231,215,53)" fg:x="348" fg:w="5"/><text x="29.0818%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="28.9147%" y="469" width="0.3314%" height="15" fill="rgb(218,140,42)" fg:x="349" fg:w="4"/><text x="29.1647%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.1632%" y="453" width="0.0829%" height="15" fill="rgb(233,227,45)" fg:x="352" fg:w="1"/><text x="29.4132%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.2461%" y="453" width="0.0829%" height="15" fill="rgb(225,189,21)" fg:x="353" fg:w="1"/><text x="29.4961%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="29.3289%" y="453" width="0.1657%" height="15" fill="rgb(237,176,54)" fg:x="354" fg:w="2"/><text x="29.5789%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.4118%" y="437" width="0.0829%" height="15" fill="rgb(215,131,46)" fg:x="355" fg:w="1"/><text x="29.6618%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.50%)</title><rect x="29.2461%" y="485" width="0.4971%" height="15" fill="rgb(218,95,20)" fg:x="353" fg:w="6"/><text x="29.4961%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.50%)</title><rect x="29.2461%" y="469" width="0.4971%" height="15" fill="rgb(208,198,12)" fg:x="353" fg:w="6"/><text x="29.4961%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="29.4946%" y="453" width="0.2486%" height="15" fill="rgb(239,107,50)" fg:x="356" fg:w="3"/><text x="29.7446%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.6603%" y="437" width="0.0829%" height="15" fill="rgb(240,217,37)" fg:x="358" fg:w="1"/><text x="29.9103%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="29.7432%" y="485" width="0.2486%" height="15" fill="rgb(242,197,49)" fg:x="359" fg:w="3"/><text x="29.9932%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="29.7432%" y="469" width="0.2486%" height="15" fill="rgb(219,171,17)" fg:x="359" fg:w="3"/><text x="29.9932%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="29.7432%" y="453" width="0.2486%" height="15" fill="rgb(209,81,40)" fg:x="359" fg:w="3"/><text x="29.9932%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="29.8260%" y="437" width="0.1657%" height="15" fill="rgb(237,156,30)" fg:x="360" fg:w="2"/><text x="30.0760%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.9089%" y="421" width="0.0829%" height="15" fill="rgb(212,127,16)" fg:x="361" fg:w="1"/><text x="30.1589%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.9089%" y="405" width="0.0829%" height="15" fill="rgb(226,66,32)" fg:x="361" fg:w="1"/><text x="30.1589%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.9089%" y="389" width="0.0829%" height="15" fill="rgb(245,22,46)" fg:x="361" fg:w="1"/><text x="30.1589%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="30.3231%" y="469" width="0.2486%" height="15" fill="rgb(210,112,21)" fg:x="366" fg:w="3"/><text x="30.5731%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="30.3231%" y="453" width="0.2486%" height="15" fill="rgb(207,118,39)" fg:x="366" fg:w="3"/><text x="30.5731%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="30.4060%" y="437" width="0.1657%" height="15" fill="rgb(205,206,35)" fg:x="367" fg:w="2"/><text x="30.6560%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="30.4060%" y="421" width="0.1657%" height="15" fill="rgb(222,120,2)" fg:x="367" fg:w="2"/><text x="30.6560%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="30.5717%" y="453" width="0.1657%" height="15" fill="rgb(205,38,18)" fg:x="369" fg:w="2"/><text x="30.8217%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.6545%" y="437" width="0.0829%" height="15" fill="rgb(226,61,2)" fg:x="370" fg:w="1"/><text x="30.9045%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="30.7374%" y="437" width="0.0829%" height="15" fill="rgb(242,161,23)" fg:x="371" fg:w="1"/><text x="30.9874%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.7374%" y="421" width="0.0829%" height="15" fill="rgb(213,13,52)" fg:x="371" fg:w="1"/><text x="30.9874%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.7374%" y="405" width="0.0829%" height="15" fill="rgb(246,209,47)" fg:x="371" fg:w="1"/><text x="30.9874%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.8202%" y="421" width="0.0829%" height="15" fill="rgb(214,41,3)" fg:x="372" fg:w="1"/><text x="31.0702%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.50%)</title><rect x="31.0688%" y="373" width="0.4971%" height="15" fill="rgb(236,119,38)" fg:x="375" fg:w="6"/><text x="31.3188%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.25%)</title><rect x="31.3173%" y="357" width="0.2486%" height="15" fill="rgb(218,50,11)" fg:x="378" fg:w="3"/><text x="31.5673%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.25%)</title><rect x="31.3173%" y="341" width="0.2486%" height="15" fill="rgb(228,38,11)" fg:x="378" fg:w="3"/><text x="31.5673%" y="351.50"></text></g><g><title>realloc (3 samples, 0.25%)</title><rect x="31.3173%" y="325" width="0.2486%" height="15" fill="rgb(212,13,9)" fg:x="378" fg:w="3"/><text x="31.5673%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.91%)</title><rect x="30.7374%" y="453" width="0.9114%" height="15" fill="rgb(208,211,9)" fg:x="371" fg:w="11"/><text x="30.9874%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.83%)</title><rect x="30.8202%" y="437" width="0.8285%" height="15" fill="rgb(239,39,32)" fg:x="372" fg:w="10"/><text x="31.0702%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.75%)</title><rect x="30.9031%" y="421" width="0.7457%" height="15" fill="rgb(254,179,26)" fg:x="373" fg:w="9"/><text x="31.1531%" y="431.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.66%)</title><rect x="30.9859%" y="405" width="0.6628%" height="15" fill="rgb(249,165,28)" fg:x="374" fg:w="8"/><text x="31.2359%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.58%)</title><rect x="31.0688%" y="389" width="0.5800%" height="15" fill="rgb(225,59,50)" fg:x="375" fg:w="7"/><text x="31.3188%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="31.5659%" y="373" width="0.0829%" height="15" fill="rgb(209,122,5)" fg:x="381" fg:w="1"/><text x="31.8159%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.24%)</title><rect x="30.5717%" y="469" width="1.2428%" height="15" fill="rgb(214,65,34)" fg:x="369" fg:w="15"/><text x="30.8217%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="31.6487%" y="453" width="0.1657%" height="15" fill="rgb(249,183,32)" fg:x="382" fg:w="2"/><text x="31.8987%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="31.6487%" y="437" width="0.1657%" height="15" fill="rgb(218,122,24)" fg:x="382" fg:w="2"/><text x="31.8987%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.7316%" y="421" width="0.0829%" height="15" fill="rgb(224,109,18)" fg:x="383" fg:w="1"/><text x="31.9816%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.91%)</title><rect x="29.9917%" y="485" width="1.9056%" height="15" fill="rgb(210,68,50)" fg:x="362" fg:w="23"/><text x="30.2417%" y="495.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.8144%" y="469" width="0.0829%" height="15" fill="rgb(212,184,34)" fg:x="384" fg:w="1"/><text x="32.0644%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.8144%" y="453" width="0.0829%" height="15" fill="rgb(238,105,48)" fg:x="384" fg:w="1"/><text x="32.0644%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="31.8144%" y="437" width="0.0829%" height="15" fill="rgb(222,134,54)" fg:x="384" fg:w="1"/><text x="32.0644%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.73%)</title><rect x="29.2461%" y="501" width="2.7341%" height="15" fill="rgb(246,24,43)" fg:x="353" fg:w="33"/><text x="29.4961%" y="511.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.8973%" y="485" width="0.0829%" height="15" fill="rgb(227,169,22)" fg:x="385" fg:w="1"/><text x="32.1473%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.41%)</title><rect x="32.3115%" y="469" width="0.4143%" height="15" fill="rgb(253,152,4)" fg:x="390" fg:w="5"/><text x="32.5615%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="32.5601%" y="453" width="0.1657%" height="15" fill="rgb(219,158,36)" fg:x="393" fg:w="2"/><text x="32.8101%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="32.5601%" y="437" width="0.1657%" height="15" fill="rgb(251,128,40)" fg:x="393" fg:w="2"/><text x="32.8101%" y="447.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="32.5601%" y="421" width="0.1657%" height="15" fill="rgb(254,101,39)" fg:x="393" fg:w="2"/><text x="32.8101%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (61 samples, 5.05%)</title><rect x="27.8376%" y="533" width="5.0539%" height="15" fill="rgb(221,168,40)" fg:x="336" fg:w="61"/><text x="28.0876%" y="543.50">&lt;serde..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (54 samples, 4.47%)</title><rect x="28.4176%" y="517" width="4.4739%" height="15" fill="rgb(221,14,27)" fg:x="343" fg:w="54"/><text x="28.6676%" y="527.50">serde..</text></g><g><title>std::io::Write::write_all (11 samples, 0.91%)</title><rect x="31.9801%" y="501" width="0.9114%" height="15" fill="rgb(207,36,43)" fg:x="386" fg:w="11"/><text x="32.2301%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.66%)</title><rect x="32.2287%" y="485" width="0.6628%" height="15" fill="rgb(240,172,53)" fg:x="389" fg:w="8"/><text x="32.4787%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.17%)</title><rect x="32.7258%" y="469" width="0.1657%" height="15" fill="rgb(241,138,43)" fg:x="395" fg:w="2"/><text x="32.9758%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.9743%" y="501" width="0.0829%" height="15" fill="rgb(227,78,19)" fg:x="398" fg:w="1"/><text x="33.2243%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9743%" y="485" width="0.0829%" height="15" fill="rgb(215,127,44)" fg:x="398" fg:w="1"/><text x="33.2243%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2229%" y="485" width="0.0829%" height="15" fill="rgb(227,13,10)" fg:x="401" fg:w="1"/><text x="33.4729%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.41%)</title><rect x="33.3057%" y="485" width="0.4143%" height="15" fill="rgb(249,177,6)" fg:x="402" fg:w="5"/><text x="33.5557%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.6371%" y="469" width="0.0829%" height="15" fill="rgb(215,154,26)" fg:x="406" fg:w="1"/><text x="33.8871%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="33.7200%" y="469" width="0.1657%" height="15" fill="rgb(250,168,20)" fg:x="407" fg:w="2"/><text x="33.9700%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.17%)</title><rect x="33.9685%" y="453" width="0.1657%" height="15" fill="rgb(222,53,38)" fg:x="410" fg:w="2"/><text x="34.2185%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="33.9685%" y="437" width="0.1657%" height="15" fill="rgb(245,154,5)" fg:x="410" fg:w="2"/><text x="34.2185%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="33.9685%" y="421" width="0.1657%" height="15" fill="rgb(214,89,50)" fg:x="410" fg:w="2"/><text x="34.2185%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.2171%" y="421" width="0.0829%" height="15" fill="rgb(232,73,14)" fg:x="413" fg:w="1"/><text x="34.4671%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.2171%" y="405" width="0.0829%" height="15" fill="rgb(230,101,20)" fg:x="413" fg:w="1"/><text x="34.4671%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.66%)</title><rect x="32.8915%" y="533" width="1.6570%" height="15" fill="rgb(208,56,28)" fg:x="397" fg:w="20"/><text x="33.1415%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.66%)</title><rect x="32.8915%" y="517" width="1.6570%" height="15" fill="rgb(247,205,22)" fg:x="397" fg:w="20"/><text x="33.1415%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.49%)</title><rect x="33.0572%" y="501" width="1.4913%" height="15" fill="rgb(252,109,51)" fg:x="399" fg:w="18"/><text x="33.3072%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.83%)</title><rect x="33.7200%" y="485" width="0.8285%" height="15" fill="rgb(220,40,24)" fg:x="407" fg:w="10"/><text x="33.9700%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="33.8857%" y="469" width="0.6628%" height="15" fill="rgb(251,108,7)" fg:x="409" fg:w="8"/><text x="34.1357%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="34.1342%" y="453" width="0.4143%" height="15" fill="rgb(238,102,51)" fg:x="412" fg:w="5"/><text x="34.3842%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="34.1342%" y="437" width="0.4143%" height="15" fill="rgb(219,149,34)" fg:x="412" fg:w="5"/><text x="34.3842%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="34.2999%" y="421" width="0.2486%" height="15" fill="rgb(239,70,0)" fg:x="414" fg:w="3"/><text x="34.5499%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="34.3828%" y="405" width="0.1657%" height="15" fill="rgb(246,214,23)" fg:x="415" fg:w="2"/><text x="34.6328%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.4656%" y="389" width="0.0829%" height="15" fill="rgb(239,221,51)" fg:x="416" fg:w="1"/><text x="34.7156%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.17%)</title><rect x="34.5485%" y="517" width="0.1657%" height="15" fill="rgb(254,62,14)" fg:x="417" fg:w="2"/><text x="34.7985%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="34.6313%" y="501" width="0.0829%" height="15" fill="rgb(253,57,33)" fg:x="418" fg:w="1"/><text x="34.8813%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="34.6313%" y="485" width="0.0829%" height="15" fill="rgb(229,34,6)" fg:x="418" fg:w="1"/><text x="34.8813%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.17%)</title><rect x="34.7142%" y="517" width="0.1657%" height="15" fill="rgb(235,191,23)" fg:x="419" fg:w="2"/><text x="34.9642%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="34.7142%" y="501" width="0.1657%" height="15" fill="rgb(217,207,27)" fg:x="419" fg:w="2"/><text x="34.9642%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2941%" y="485" width="0.0829%" height="15" fill="rgb(232,41,44)" fg:x="426" fg:w="1"/><text x="35.5441%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="35.3770%" y="485" width="0.1657%" height="15" fill="rgb(221,188,19)" fg:x="427" fg:w="2"/><text x="35.6270%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.4598%" y="469" width="0.0829%" height="15" fill="rgb(245,180,45)" fg:x="428" fg:w="1"/><text x="35.7098%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.25%)</title><rect x="35.5427%" y="485" width="0.2486%" height="15" fill="rgb(250,220,42)" fg:x="429" fg:w="3"/><text x="35.7927%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="35.6255%" y="469" width="0.1657%" height="15" fill="rgb(234,16,34)" fg:x="430" fg:w="2"/><text x="35.8755%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.7084%" y="453" width="0.0829%" height="15" fill="rgb(233,217,23)" fg:x="431" fg:w="1"/><text x="35.9584%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (3 samples, 0.25%)</title><rect x="35.7912%" y="485" width="0.2486%" height="15" fill="rgb(209,22,46)" fg:x="432" fg:w="3"/><text x="36.0412%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="35.8741%" y="469" width="0.1657%" height="15" fill="rgb(213,101,18)" fg:x="433" fg:w="2"/><text x="36.1241%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9569%" y="453" width="0.0829%" height="15" fill="rgb(215,179,52)" fg:x="434" fg:w="1"/><text x="36.2069%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9569%" y="437" width="0.0829%" height="15" fill="rgb(223,50,25)" fg:x="434" fg:w="1"/><text x="36.2069%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.17%)</title><rect x="36.0398%" y="485" width="0.1657%" height="15" fill="rgb(224,51,44)" fg:x="435" fg:w="2"/><text x="36.2898%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="36.0398%" y="469" width="0.1657%" height="15" fill="rgb(224,13,54)" fg:x="435" fg:w="2"/><text x="36.2898%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="36.0398%" y="453" width="0.1657%" height="15" fill="rgb(219,58,47)" fg:x="435" fg:w="2"/><text x="36.2898%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2883%" y="405" width="0.0829%" height="15" fill="rgb(246,124,34)" fg:x="438" fg:w="1"/><text x="36.5383%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="36.2883%" y="437" width="0.1657%" height="15" fill="rgb(245,109,25)" fg:x="438" fg:w="2"/><text x="36.5383%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="36.2883%" y="421" width="0.1657%" height="15" fill="rgb(235,48,23)" fg:x="438" fg:w="2"/><text x="36.5383%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.3712%" y="405" width="0.0829%" height="15" fill="rgb(229,203,36)" fg:x="439" fg:w="1"/><text x="36.6212%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="36.4540%" y="421" width="0.0829%" height="15" fill="rgb(234,180,9)" fg:x="440" fg:w="1"/><text x="36.7040%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="36.5369%" y="421" width="0.0829%" height="15" fill="rgb(228,98,45)" fg:x="441" fg:w="1"/><text x="36.7869%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5369%" y="405" width="0.0829%" height="15" fill="rgb(240,24,36)" fg:x="441" fg:w="1"/><text x="36.7869%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.6197%" y="405" width="0.0829%" height="15" fill="rgb(227,154,19)" fg:x="442" fg:w="1"/><text x="36.8697%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="36.7026%" y="405" width="0.1657%" height="15" fill="rgb(231,2,48)" fg:x="443" fg:w="2"/><text x="36.9526%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7854%" y="389" width="0.0829%" height="15" fill="rgb(219,216,0)" fg:x="444" fg:w="1"/><text x="37.0354%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.50%)</title><rect x="36.4540%" y="437" width="0.4971%" height="15" fill="rgb(251,88,0)" fg:x="440" fg:w="6"/><text x="36.7040%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="36.6197%" y="421" width="0.3314%" height="15" fill="rgb(242,45,45)" fg:x="442" fg:w="4"/><text x="36.8697%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8683%" y="405" width="0.0829%" height="15" fill="rgb(218,149,45)" fg:x="445" fg:w="1"/><text x="37.1183%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="37.0340%" y="421" width="0.0829%" height="15" fill="rgb(247,194,10)" fg:x="447" fg:w="1"/><text x="37.2840%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1168%" y="405" width="0.0829%" height="15" fill="rgb(234,33,37)" fg:x="448" fg:w="1"/><text x="37.3668%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1168%" y="389" width="0.0829%" height="15" fill="rgb(218,61,13)" fg:x="448" fg:w="1"/><text x="37.3668%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="37.3654%" y="373" width="0.1657%" height="15" fill="rgb(210,80,52)" fg:x="451" fg:w="2"/><text x="37.6154%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="37.3654%" y="357" width="0.1657%" height="15" fill="rgb(218,203,27)" fg:x="451" fg:w="2"/><text x="37.6154%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.4482%" y="341" width="0.0829%" height="15" fill="rgb(209,126,33)" fg:x="452" fg:w="1"/><text x="37.6982%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="37.6968%" y="341" width="0.1657%" height="15" fill="rgb(234,173,41)" fg:x="455" fg:w="2"/><text x="37.9468%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="37.6968%" y="325" width="0.1657%" height="15" fill="rgb(228,166,9)" fg:x="455" fg:w="2"/><text x="37.9468%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="38.0282%" y="309" width="0.1657%" height="15" fill="rgb(208,124,43)" fg:x="459" fg:w="2"/><text x="38.2782%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="38.0282%" y="293" width="0.1657%" height="15" fill="rgb(212,154,38)" fg:x="459" fg:w="2"/><text x="38.2782%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="38.0282%" y="277" width="0.1657%" height="15" fill="rgb(246,179,35)" fg:x="459" fg:w="2"/><text x="38.2782%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="37.9453%" y="325" width="0.3314%" height="15" fill="rgb(251,3,50)" fg:x="458" fg:w="4"/><text x="38.1953%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.1939%" y="309" width="0.0829%" height="15" fill="rgb(219,96,8)" fg:x="461" fg:w="1"/><text x="38.4439%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.07%)</title><rect x="36.2883%" y="453" width="2.0713%" height="15" fill="rgb(251,216,33)" fg:x="438" fg:w="25"/><text x="36.5383%" y="463.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.41%)</title><rect x="36.9511%" y="437" width="1.4085%" height="15" fill="rgb(243,145,29)" fg:x="446" fg:w="17"/><text x="37.2011%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.24%)</title><rect x="37.1168%" y="421" width="1.2428%" height="15" fill="rgb(210,75,20)" fg:x="448" fg:w="15"/><text x="37.3668%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.16%)</title><rect x="37.1997%" y="405" width="1.1599%" height="15" fill="rgb(235,56,8)" fg:x="449" fg:w="14"/><text x="37.4497%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.08%)</title><rect x="37.2825%" y="389" width="1.0771%" height="15" fill="rgb(226,175,49)" fg:x="450" fg:w="13"/><text x="37.5325%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.83%)</title><rect x="37.5311%" y="373" width="0.8285%" height="15" fill="rgb(242,204,23)" fg:x="453" fg:w="10"/><text x="37.7811%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.83%)</title><rect x="37.5311%" y="357" width="0.8285%" height="15" fill="rgb(225,104,24)" fg:x="453" fg:w="10"/><text x="37.7811%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.50%)</title><rect x="37.8625%" y="341" width="0.4971%" height="15" fill="rgb(253,34,1)" fg:x="457" fg:w="6"/><text x="38.1125%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2767%" y="325" width="0.0829%" height="15" fill="rgb(233,199,23)" fg:x="462" fg:w="1"/><text x="38.5267%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 2.15%)</title><rect x="36.2883%" y="469" width="2.1541%" height="15" fill="rgb(247,7,51)" fg:x="438" fg:w="26"/><text x="36.5383%" y="479.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="38.3596%" y="453" width="0.0829%" height="15" fill="rgb(214,146,12)" fg:x="463" fg:w="1"/><text x="38.6096%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4424%" y="469" width="0.0829%" height="15" fill="rgb(234,181,43)" fg:x="464" fg:w="1"/><text x="38.6924%" y="479.50"></text></g><g><title>engine::session::Session::save_changes (140 samples, 11.60%)</title><rect x="27.1748%" y="613" width="11.5990%" height="15" fill="rgb(239,148,6)" fg:x="328" fg:w="140"/><text x="27.4248%" y="623.50">engine::session::..</text></g><g><title>engine::session::state::State::close (138 samples, 11.43%)</title><rect x="27.3405%" y="597" width="11.4333%" height="15" fill="rgb(206,151,17)" fg:x="330" fg:w="138"/><text x="27.5905%" y="607.50">engine::session::..</text></g><g><title>engine::session::state::State::flush_entities (138 samples, 11.43%)</title><rect x="27.3405%" y="581" width="11.4333%" height="15" fill="rgb(213,215,10)" fg:x="330" fg:w="138"/><text x="27.5905%" y="591.50">engine::session::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (135 samples, 11.18%)</title><rect x="27.5891%" y="565" width="11.1848%" height="15" fill="rgb(215,220,44)" fg:x="333" fg:w="135"/><text x="27.8391%" y="575.50">engine::session:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (135 samples, 11.18%)</title><rect x="27.5891%" y="549" width="11.1848%" height="15" fill="rgb(245,205,37)" fg:x="333" fg:w="135"/><text x="27.8391%" y="559.50">engine::session:..</text></g><g><title>kernel::model::any_entity_changes (51 samples, 4.23%)</title><rect x="34.5485%" y="533" width="4.2254%" height="15" fill="rgb(245,130,43)" fg:x="417" fg:w="51"/><text x="34.7985%" y="543.50">kerne..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (47 samples, 3.89%)</title><rect x="34.8799%" y="517" width="3.8940%" height="15" fill="rgb(231,227,38)" fg:x="421" fg:w="47"/><text x="35.1299%" y="527.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 3.89%)</title><rect x="34.8799%" y="501" width="3.8940%" height="15" fill="rgb(233,185,4)" fg:x="421" fg:w="47"/><text x="35.1299%" y="511.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (31 samples, 2.57%)</title><rect x="36.2055%" y="485" width="2.5684%" height="15" fill="rgb(224,154,43)" fg:x="437" fg:w="31"/><text x="36.4555%" y="495.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="38.5253%" y="469" width="0.2486%" height="15" fill="rgb(235,156,15)" fg:x="465" fg:w="3"/><text x="38.7753%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="38.5253%" y="453" width="0.2486%" height="15" fill="rgb(211,55,43)" fg:x="465" fg:w="3"/><text x="38.7753%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6910%" y="437" width="0.0829%" height="15" fill="rgb(247,149,40)" fg:x="467" fg:w="1"/><text x="38.9410%" y="447.50"></text></g><g><title>engine::session::Session::flush (142 samples, 11.76%)</title><rect x="27.0920%" y="629" width="11.7647%" height="15" fill="rgb(232,171,16)" fg:x="327" fg:w="142"/><text x="27.3420%" y="639.50">engine::session::..</text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="38.7738%" y="613" width="0.0829%" height="15" fill="rgb(215,117,49)" fg:x="468" fg:w="1"/><text x="39.0238%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.08%)</title><rect x="38.7738%" y="597" width="0.0829%" height="15" fill="rgb(246,194,11)" fg:x="468" fg:w="1"/><text x="39.0238%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.17%)</title><rect x="38.8567%" y="613" width="0.1657%" height="15" fill="rgb(242,101,44)" fg:x="469" fg:w="2"/><text x="39.1067%" y="623.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.17%)</title><rect x="38.8567%" y="597" width="0.1657%" height="15" fill="rgb(226,174,6)" fg:x="469" fg:w="2"/><text x="39.1067%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.17%)</title><rect x="38.8567%" y="581" width="0.1657%" height="15" fill="rgb(213,150,20)" fg:x="469" fg:w="2"/><text x="39.1067%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="38.8567%" y="565" width="0.1657%" height="15" fill="rgb(222,124,42)" fg:x="469" fg:w="2"/><text x="39.1067%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.17%)</title><rect x="38.8567%" y="549" width="0.1657%" height="15" fill="rgb(250,19,47)" fg:x="469" fg:w="2"/><text x="39.1067%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.0224%" y="597" width="0.0829%" height="15" fill="rgb(241,217,19)" fg:x="471" fg:w="1"/><text x="39.2724%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="39.0224%" y="581" width="0.0829%" height="15" fill="rgb(207,210,34)" fg:x="471" fg:w="1"/><text x="39.2724%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.0224%" y="565" width="0.0829%" height="15" fill="rgb(244,45,4)" fg:x="471" fg:w="1"/><text x="39.2724%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.0224%" y="549" width="0.0829%" height="15" fill="rgb(252,134,50)" fg:x="471" fg:w="1"/><text x="39.2724%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0224%" y="533" width="0.0829%" height="15" fill="rgb(238,74,2)" fg:x="471" fg:w="1"/><text x="39.2724%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.33%)</title><rect x="38.8567%" y="629" width="0.3314%" height="15" fill="rgb(226,58,46)" fg:x="469" fg:w="4"/><text x="39.1067%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="39.0224%" y="613" width="0.1657%" height="15" fill="rgb(232,83,35)" fg:x="471" fg:w="2"/><text x="39.2724%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="39.1052%" y="597" width="0.0829%" height="15" fill="rgb(212,148,47)" fg:x="472" fg:w="1"/><text x="39.3552%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="39.1052%" y="581" width="0.0829%" height="15" fill="rgb(235,29,1)" fg:x="472" fg:w="1"/><text x="39.3552%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.1052%" y="565" width="0.0829%" height="15" fill="rgb(247,55,37)" fg:x="472" fg:w="1"/><text x="39.3552%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1052%" y="549" width="0.0829%" height="15" fill="rgb(222,48,3)" fg:x="472" fg:w="1"/><text x="39.3552%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="39.2709%" y="581" width="0.0829%" height="15" fill="rgb(234,21,33)" fg:x="474" fg:w="1"/><text x="39.5209%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.17%)</title><rect x="39.2709%" y="597" width="0.1657%" height="15" fill="rgb(247,178,53)" fg:x="474" fg:w="2"/><text x="39.5209%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.3538%" y="581" width="0.0829%" height="15" fill="rgb(225,75,7)" fg:x="475" fg:w="1"/><text x="39.6038%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.3538%" y="565" width="0.0829%" height="15" fill="rgb(219,199,7)" fg:x="475" fg:w="1"/><text x="39.6038%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.3538%" y="549" width="0.0829%" height="15" fill="rgb(209,93,42)" fg:x="475" fg:w="1"/><text x="39.6038%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.3538%" y="533" width="0.0829%" height="15" fill="rgb(240,175,17)" fg:x="475" fg:w="1"/><text x="39.6038%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.3538%" y="517" width="0.0829%" height="15" fill="rgb(232,106,7)" fg:x="475" fg:w="1"/><text x="39.6038%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.3538%" y="501" width="0.0829%" height="15" fill="rgb(242,106,43)" fg:x="475" fg:w="1"/><text x="39.6038%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.3538%" y="485" width="0.0829%" height="15" fill="rgb(242,61,37)" fg:x="475" fg:w="1"/><text x="39.6038%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.5195%" y="485" width="0.0829%" height="15" fill="rgb(205,72,10)" fg:x="477" fg:w="1"/><text x="39.7695%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.5195%" y="469" width="0.0829%" height="15" fill="rgb(214,184,36)" fg:x="477" fg:w="1"/><text x="39.7695%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6023%" y="485" width="0.0829%" height="15" fill="rgb(206,107,18)" fg:x="478" fg:w="1"/><text x="39.8523%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6023%" y="469" width="0.0829%" height="15" fill="rgb(210,75,5)" fg:x="478" fg:w="1"/><text x="39.8523%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.6023%" y="453" width="0.0829%" height="15" fill="rgb(205,3,19)" fg:x="478" fg:w="1"/><text x="39.8523%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.6023%" y="437" width="0.0829%" height="15" fill="rgb(207,181,42)" fg:x="478" fg:w="1"/><text x="39.8523%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.6023%" y="421" width="0.0829%" height="15" fill="rgb(229,179,43)" fg:x="478" fg:w="1"/><text x="39.8523%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6023%" y="405" width="0.0829%" height="15" fill="rgb(246,95,30)" fg:x="478" fg:w="1"/><text x="39.8523%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.6023%" y="389" width="0.0829%" height="15" fill="rgb(234,144,45)" fg:x="478" fg:w="1"/><text x="39.8523%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.6023%" y="373" width="0.0829%" height="15" fill="rgb(250,54,25)" fg:x="478" fg:w="1"/><text x="39.8523%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.6023%" y="357" width="0.0829%" height="15" fill="rgb(215,195,40)" fg:x="478" fg:w="1"/><text x="39.8523%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.6023%" y="341" width="0.0829%" height="15" fill="rgb(233,188,42)" fg:x="478" fg:w="1"/><text x="39.8523%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.6023%" y="325" width="0.0829%" height="15" fill="rgb(247,227,35)" fg:x="478" fg:w="1"/><text x="39.8523%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.6023%" y="309" width="0.0829%" height="15" fill="rgb(249,124,27)" fg:x="478" fg:w="1"/><text x="39.8523%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="39.5195%" y="501" width="0.3314%" height="15" fill="rgb(219,207,25)" fg:x="477" fg:w="4"/><text x="39.7695%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="39.6852%" y="485" width="0.1657%" height="15" fill="rgb(241,216,47)" fg:x="479" fg:w="2"/><text x="39.9352%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.50%)</title><rect x="39.4366%" y="549" width="0.4971%" height="15" fill="rgb(233,82,50)" fg:x="476" fg:w="6"/><text x="39.6866%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.50%)</title><rect x="39.4366%" y="533" width="0.4971%" height="15" fill="rgb(232,63,2)" fg:x="476" fg:w="6"/><text x="39.6866%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.50%)</title><rect x="39.4366%" y="517" width="0.4971%" height="15" fill="rgb(236,184,28)" fg:x="476" fg:w="6"/><text x="39.6866%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8509%" y="501" width="0.0829%" height="15" fill="rgb(254,63,27)" fg:x="481" fg:w="1"/><text x="40.1009%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.9337%" y="453" width="0.0829%" height="15" fill="rgb(253,106,28)" fg:x="482" fg:w="1"/><text x="40.1837%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9337%" y="437" width="0.0829%" height="15" fill="rgb(225,141,39)" fg:x="482" fg:w="1"/><text x="40.1837%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.66%)</title><rect x="39.4366%" y="597" width="0.6628%" height="15" fill="rgb(222,157,20)" fg:x="476" fg:w="8"/><text x="39.6866%" y="607.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.66%)</title><rect x="39.4366%" y="581" width="0.6628%" height="15" fill="rgb(210,190,9)" fg:x="476" fg:w="8"/><text x="39.6866%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.66%)</title><rect x="39.4366%" y="565" width="0.6628%" height="15" fill="rgb(242,167,7)" fg:x="476" fg:w="8"/><text x="39.6866%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="39.9337%" y="549" width="0.1657%" height="15" fill="rgb(227,82,41)" fg:x="482" fg:w="2"/><text x="40.1837%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="39.9337%" y="533" width="0.1657%" height="15" fill="rgb(222,131,13)" fg:x="482" fg:w="2"/><text x="40.1837%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="39.9337%" y="517" width="0.1657%" height="15" fill="rgb(221,98,26)" fg:x="482" fg:w="2"/><text x="40.1837%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="39.9337%" y="501" width="0.1657%" height="15" fill="rgb(251,63,52)" fg:x="482" fg:w="2"/><text x="40.1837%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="39.9337%" y="485" width="0.1657%" height="15" fill="rgb(246,25,43)" fg:x="482" fg:w="2"/><text x="40.1837%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="39.9337%" y="469" width="0.1657%" height="15" fill="rgb(247,167,15)" fg:x="482" fg:w="2"/><text x="40.1837%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0166%" y="453" width="0.0829%" height="15" fill="rgb(240,104,42)" fg:x="483" fg:w="1"/><text x="40.2666%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0166%" y="437" width="0.0829%" height="15" fill="rgb(224,54,6)" fg:x="483" fg:w="1"/><text x="40.2666%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0166%" y="421" width="0.0829%" height="15" fill="rgb(244,108,35)" fg:x="483" fg:w="1"/><text x="40.2666%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0166%" y="405" width="0.0829%" height="15" fill="rgb(216,154,2)" fg:x="483" fg:w="1"/><text x="40.2666%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.17%)</title><rect x="40.0994%" y="597" width="0.1657%" height="15" fill="rgb(222,8,47)" fg:x="484" fg:w="2"/><text x="40.3494%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="40.1823%" y="581" width="0.0829%" height="15" fill="rgb(252,93,1)" fg:x="485" fg:w="1"/><text x="40.4323%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.2651%" y="517" width="0.0829%" height="15" fill="rgb(223,226,51)" fg:x="486" fg:w="1"/><text x="40.5151%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2651%" y="501" width="0.0829%" height="15" fill="rgb(206,147,9)" fg:x="486" fg:w="1"/><text x="40.5151%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2651%" y="485" width="0.0829%" height="15" fill="rgb(248,180,41)" fg:x="486" fg:w="1"/><text x="40.5151%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.2651%" y="469" width="0.0829%" height="15" fill="rgb(209,47,50)" fg:x="486" fg:w="1"/><text x="40.5151%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.2651%" y="453" width="0.0829%" height="15" fill="rgb(243,65,31)" fg:x="486" fg:w="1"/><text x="40.5151%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.2651%" y="437" width="0.0829%" height="15" fill="rgb(228,128,1)" fg:x="486" fg:w="1"/><text x="40.5151%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.2651%" y="421" width="0.0829%" height="15" fill="rgb(231,192,16)" fg:x="486" fg:w="1"/><text x="40.5151%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.2651%" y="405" width="0.0829%" height="15" fill="rgb(224,26,40)" fg:x="486" fg:w="1"/><text x="40.5151%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.2651%" y="389" width="0.0829%" height="15" fill="rgb(214,192,17)" fg:x="486" fg:w="1"/><text x="40.5151%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.2651%" y="373" width="0.0829%" height="15" fill="rgb(225,147,18)" fg:x="486" fg:w="1"/><text x="40.5151%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.2651%" y="357" width="0.0829%" height="15" fill="rgb(205,35,11)" fg:x="486" fg:w="1"/><text x="40.5151%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.2651%" y="341" width="0.0829%" height="15" fill="rgb(242,40,42)" fg:x="486" fg:w="1"/><text x="40.5151%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.2651%" y="325" width="0.0829%" height="15" fill="rgb(250,170,13)" fg:x="486" fg:w="1"/><text x="40.5151%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="40.2651%" y="549" width="0.1657%" height="15" fill="rgb(240,161,28)" fg:x="486" fg:w="2"/><text x="40.5151%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="40.2651%" y="533" width="0.1657%" height="15" fill="rgb(245,179,12)" fg:x="486" fg:w="2"/><text x="40.5151%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3480%" y="517" width="0.0829%" height="15" fill="rgb(250,92,32)" fg:x="487" fg:w="1"/><text x="40.5980%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3480%" y="501" width="0.0829%" height="15" fill="rgb(233,10,40)" fg:x="487" fg:w="1"/><text x="40.5980%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.3480%" y="485" width="0.0829%" height="15" fill="rgb(217,98,1)" fg:x="487" fg:w="1"/><text x="40.5980%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.3480%" y="469" width="0.0829%" height="15" fill="rgb(238,202,7)" fg:x="487" fg:w="1"/><text x="40.5980%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.3480%" y="453" width="0.0829%" height="15" fill="rgb(222,91,3)" fg:x="487" fg:w="1"/><text x="40.5980%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3480%" y="437" width="0.0829%" height="15" fill="rgb(211,170,49)" fg:x="487" fg:w="1"/><text x="40.5980%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3480%" y="421" width="0.0829%" height="15" fill="rgb(253,139,18)" fg:x="487" fg:w="1"/><text x="40.5980%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.3480%" y="405" width="0.0829%" height="15" fill="rgb(222,4,43)" fg:x="487" fg:w="1"/><text x="40.5980%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.3480%" y="389" width="0.0829%" height="15" fill="rgb(207,205,12)" fg:x="487" fg:w="1"/><text x="40.5980%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.3480%" y="373" width="0.0829%" height="15" fill="rgb(216,159,46)" fg:x="487" fg:w="1"/><text x="40.5980%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.3480%" y="357" width="0.0829%" height="15" fill="rgb(236,115,1)" fg:x="487" fg:w="1"/><text x="40.5980%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3480%" y="341" width="0.0829%" height="15" fill="rgb(251,35,33)" fg:x="487" fg:w="1"/><text x="40.5980%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.25%)</title><rect x="40.2651%" y="581" width="0.2486%" height="15" fill="rgb(248,62,51)" fg:x="486" fg:w="3"/><text x="40.5151%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="40.2651%" y="565" width="0.2486%" height="15" fill="rgb(254,180,19)" fg:x="486" fg:w="3"/><text x="40.5151%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.4308%" y="549" width="0.0829%" height="15" fill="rgb(217,100,32)" fg:x="488" fg:w="1"/><text x="40.6808%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.4308%" y="533" width="0.0829%" height="15" fill="rgb(224,71,22)" fg:x="488" fg:w="1"/><text x="40.6808%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="40.4308%" y="517" width="0.0829%" height="15" fill="rgb(251,185,33)" fg:x="488" fg:w="1"/><text x="40.6808%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.5965%" y="565" width="0.0829%" height="15" fill="rgb(209,75,48)" fg:x="490" fg:w="1"/><text x="40.8465%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.5965%" y="549" width="0.0829%" height="15" fill="rgb(253,190,16)" fg:x="490" fg:w="1"/><text x="40.8465%" y="559.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="40.6794%" y="565" width="0.0829%" height="15" fill="rgb(226,140,1)" fg:x="491" fg:w="1"/><text x="40.9294%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.6794%" y="549" width="0.0829%" height="15" fill="rgb(206,75,30)" fg:x="491" fg:w="1"/><text x="40.9294%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="40.6794%" y="533" width="0.0829%" height="15" fill="rgb(231,208,37)" fg:x="491" fg:w="1"/><text x="40.9294%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="40.6794%" y="517" width="0.0829%" height="15" fill="rgb(238,136,40)" fg:x="491" fg:w="1"/><text x="40.9294%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (7 samples, 0.58%)</title><rect x="40.2651%" y="597" width="0.5800%" height="15" fill="rgb(247,137,17)" fg:x="486" fg:w="7"/><text x="40.5151%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="40.5137%" y="581" width="0.3314%" height="15" fill="rgb(240,60,40)" fg:x="489" fg:w="4"/><text x="40.7637%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.7622%" y="565" width="0.0829%" height="15" fill="rgb(236,68,50)" fg:x="492" fg:w="1"/><text x="41.0122%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.7622%" y="549" width="0.0829%" height="15" fill="rgb(230,42,12)" fg:x="492" fg:w="1"/><text x="41.0122%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="40.8451%" y="549" width="0.0829%" height="15" fill="rgb(219,16,16)" fg:x="493" fg:w="1"/><text x="41.0951%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="40.8451%" y="533" width="0.0829%" height="15" fill="rgb(220,38,35)" fg:x="493" fg:w="1"/><text x="41.0951%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8451%" y="517" width="0.0829%" height="15" fill="rgb(228,33,1)" fg:x="493" fg:w="1"/><text x="41.0951%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8451%" y="501" width="0.0829%" height="15" fill="rgb(241,46,31)" fg:x="493" fg:w="1"/><text x="41.0951%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.82%)</title><rect x="39.1881%" y="613" width="1.8227%" height="15" fill="rgb(232,58,20)" fg:x="473" fg:w="22"/><text x="39.4381%" y="623.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.17%)</title><rect x="40.8451%" y="597" width="0.1657%" height="15" fill="rgb(206,228,53)" fg:x="493" fg:w="2"/><text x="41.0951%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.17%)</title><rect x="40.8451%" y="581" width="0.1657%" height="15" fill="rgb(206,88,33)" fg:x="493" fg:w="2"/><text x="41.0951%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.17%)</title><rect x="40.8451%" y="565" width="0.1657%" height="15" fill="rgb(238,69,7)" fg:x="493" fg:w="2"/><text x="41.0951%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="40.9279%" y="549" width="0.0829%" height="15" fill="rgb(250,21,46)" fg:x="494" fg:w="1"/><text x="41.1779%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="40.9279%" y="533" width="0.0829%" height="15" fill="rgb(215,212,21)" fg:x="494" fg:w="1"/><text x="41.1779%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9279%" y="517" width="0.0829%" height="15" fill="rgb(211,35,12)" fg:x="494" fg:w="1"/><text x="41.1779%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9279%" y="501" width="0.0829%" height="15" fill="rgb(231,184,16)" fg:x="494" fg:w="1"/><text x="41.1779%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="41.0936%" y="549" width="0.0829%" height="15" fill="rgb(242,140,15)" fg:x="496" fg:w="1"/><text x="41.3436%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0936%" y="533" width="0.0829%" height="15" fill="rgb(220,37,14)" fg:x="496" fg:w="1"/><text x="41.3436%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="41.1765%" y="517" width="0.2486%" height="15" fill="rgb(223,146,22)" fg:x="497" fg:w="3"/><text x="41.4265%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="41.1765%" y="501" width="0.2486%" height="15" fill="rgb(216,132,15)" fg:x="497" fg:w="3"/><text x="41.4265%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="41.2593%" y="485" width="0.1657%" height="15" fill="rgb(248,83,5)" fg:x="498" fg:w="2"/><text x="41.5093%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="41.2593%" y="469" width="0.1657%" height="15" fill="rgb(231,206,48)" fg:x="498" fg:w="2"/><text x="41.5093%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.4250%" y="485" width="0.0829%" height="15" fill="rgb(253,185,37)" fg:x="500" fg:w="1"/><text x="41.6750%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4250%" y="469" width="0.0829%" height="15" fill="rgb(208,21,44)" fg:x="500" fg:w="1"/><text x="41.6750%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="41.4250%" y="517" width="0.1657%" height="15" fill="rgb(236,125,4)" fg:x="500" fg:w="2"/><text x="41.6750%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="41.4250%" y="501" width="0.1657%" height="15" fill="rgb(226,134,25)" fg:x="500" fg:w="2"/><text x="41.6750%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.5079%" y="485" width="0.0829%" height="15" fill="rgb(250,201,12)" fg:x="501" fg:w="1"/><text x="41.7579%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.5079%" y="469" width="0.0829%" height="15" fill="rgb(225,92,18)" fg:x="501" fg:w="1"/><text x="41.7579%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.5079%" y="453" width="0.0829%" height="15" fill="rgb(227,35,22)" fg:x="501" fg:w="1"/><text x="41.7579%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.6736%" y="421" width="0.0829%" height="15" fill="rgb(214,180,52)" fg:x="503" fg:w="1"/><text x="41.9236%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.6736%" y="405" width="0.0829%" height="15" fill="rgb(233,55,38)" fg:x="503" fg:w="1"/><text x="41.9236%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (11 samples, 0.91%)</title><rect x="41.0108%" y="565" width="0.9114%" height="15" fill="rgb(249,171,43)" fg:x="495" fg:w="11"/><text x="41.2608%" y="575.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.75%)</title><rect x="41.1765%" y="549" width="0.7457%" height="15" fill="rgb(239,87,2)" fg:x="497" fg:w="9"/><text x="41.4265%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.75%)</title><rect x="41.1765%" y="533" width="0.7457%" height="15" fill="rgb(248,141,5)" fg:x="497" fg:w="9"/><text x="41.4265%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="41.5907%" y="517" width="0.3314%" height="15" fill="rgb(238,33,42)" fg:x="502" fg:w="4"/><text x="41.8407%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="41.5907%" y="501" width="0.3314%" height="15" fill="rgb(231,57,19)" fg:x="502" fg:w="4"/><text x="41.8407%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="41.5907%" y="485" width="0.3314%" height="15" fill="rgb(214,78,53)" fg:x="502" fg:w="4"/><text x="41.8407%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="41.5907%" y="469" width="0.3314%" height="15" fill="rgb(206,132,29)" fg:x="502" fg:w="4"/><text x="41.8407%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="41.5907%" y="453" width="0.3314%" height="15" fill="rgb(248,174,31)" fg:x="502" fg:w="4"/><text x="41.8407%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="41.5907%" y="437" width="0.3314%" height="15" fill="rgb(221,87,13)" fg:x="502" fg:w="4"/><text x="41.8407%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="41.7564%" y="421" width="0.1657%" height="15" fill="rgb(223,197,17)" fg:x="504" fg:w="2"/><text x="42.0064%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8393%" y="405" width="0.0829%" height="15" fill="rgb(220,144,50)" fg:x="505" fg:w="1"/><text x="42.0893%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8393%" y="389" width="0.0829%" height="15" fill="rgb(244,201,11)" fg:x="505" fg:w="1"/><text x="42.0893%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0878%" y="501" width="0.0829%" height="15" fill="rgb(249,81,34)" fg:x="508" fg:w="1"/><text x="42.3378%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0878%" y="485" width="0.0829%" height="15" fill="rgb(205,161,12)" fg:x="508" fg:w="1"/><text x="42.3378%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0878%" y="469" width="0.0829%" height="15" fill="rgb(252,139,50)" fg:x="508" fg:w="1"/><text x="42.3378%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.0878%" y="453" width="0.0829%" height="15" fill="rgb(205,169,14)" fg:x="508" fg:w="1"/><text x="42.3378%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0878%" y="437" width="0.0829%" height="15" fill="rgb(248,198,33)" fg:x="508" fg:w="1"/><text x="42.3378%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.1707%" y="501" width="0.0829%" height="15" fill="rgb(236,23,21)" fg:x="509" fg:w="1"/><text x="42.4207%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.1707%" y="485" width="0.0829%" height="15" fill="rgb(231,13,38)" fg:x="509" fg:w="1"/><text x="42.4207%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.1707%" y="469" width="0.0829%" height="15" fill="rgb(239,139,21)" fg:x="509" fg:w="1"/><text x="42.4207%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.1707%" y="453" width="0.0829%" height="15" fill="rgb(222,164,45)" fg:x="509" fg:w="1"/><text x="42.4207%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.1707%" y="437" width="0.0829%" height="15" fill="rgb(230,52,27)" fg:x="509" fg:w="1"/><text x="42.4207%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.1707%" y="421" width="0.0829%" height="15" fill="rgb(227,143,42)" fg:x="509" fg:w="1"/><text x="42.4207%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.1707%" y="405" width="0.0829%" height="15" fill="rgb(249,127,1)" fg:x="509" fg:w="1"/><text x="42.4207%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.1707%" y="389" width="0.0829%" height="15" fill="rgb(243,107,26)" fg:x="509" fg:w="1"/><text x="42.4207%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.1707%" y="373" width="0.0829%" height="15" fill="rgb(225,7,45)" fg:x="509" fg:w="1"/><text x="42.4207%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.1707%" y="357" width="0.0829%" height="15" fill="rgb(241,88,38)" fg:x="509" fg:w="1"/><text x="42.4207%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.1707%" y="341" width="0.0829%" height="15" fill="rgb(226,121,9)" fg:x="509" fg:w="1"/><text x="42.4207%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1707%" y="325" width="0.0829%" height="15" fill="rgb(253,60,29)" fg:x="509" fg:w="1"/><text x="42.4207%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="42.0878%" y="517" width="0.2486%" height="15" fill="rgb(244,181,39)" fg:x="508" fg:w="3"/><text x="42.3378%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2535%" y="501" width="0.0829%" height="15" fill="rgb(252,203,31)" fg:x="510" fg:w="1"/><text x="42.5035%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3364%" y="485" width="0.0829%" height="15" fill="rgb(224,120,8)" fg:x="511" fg:w="1"/><text x="42.5864%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.4192%" y="485" width="0.0829%" height="15" fill="rgb(205,171,54)" fg:x="512" fg:w="1"/><text x="42.6692%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.4192%" y="469" width="0.0829%" height="15" fill="rgb(235,89,11)" fg:x="512" fg:w="1"/><text x="42.6692%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="42.3364%" y="517" width="0.2486%" height="15" fill="rgb(212,180,28)" fg:x="511" fg:w="3"/><text x="42.5864%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="42.3364%" y="501" width="0.2486%" height="15" fill="rgb(247,84,49)" fg:x="511" fg:w="3"/><text x="42.5864%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.5021%" y="485" width="0.0829%" height="15" fill="rgb(236,187,52)" fg:x="513" fg:w="1"/><text x="42.7521%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.5021%" y="469" width="0.0829%" height="15" fill="rgb(227,24,15)" fg:x="513" fg:w="1"/><text x="42.7521%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.5021%" y="453" width="0.0829%" height="15" fill="rgb(227,211,13)" fg:x="513" fg:w="1"/><text x="42.7521%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.5021%" y="437" width="0.0829%" height="15" fill="rgb(245,52,14)" fg:x="513" fg:w="1"/><text x="42.7521%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5021%" y="421" width="0.0829%" height="15" fill="rgb(225,185,13)" fg:x="513" fg:w="1"/><text x="42.7521%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.5849%" y="421" width="0.0829%" height="15" fill="rgb(217,160,29)" fg:x="514" fg:w="1"/><text x="42.8349%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.6678%" y="421" width="0.0829%" height="15" fill="rgb(216,115,53)" fg:x="515" fg:w="1"/><text x="42.9178%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.6678%" y="405" width="0.0829%" height="15" fill="rgb(236,99,5)" fg:x="515" fg:w="1"/><text x="42.9178%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (22 samples, 1.82%)</title><rect x="41.0108%" y="597" width="1.8227%" height="15" fill="rgb(222,60,38)" fg:x="495" fg:w="22"/><text x="41.2608%" y="607.50">k..</text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (22 samples, 1.82%)</title><rect x="41.0108%" y="581" width="1.8227%" height="15" fill="rgb(212,82,22)" fg:x="495" fg:w="22"/><text x="41.2608%" y="591.50">k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.91%)</title><rect x="41.9221%" y="565" width="0.9114%" height="15" fill="rgb(214,48,28)" fg:x="506" fg:w="11"/><text x="42.1721%" y="575.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.83%)</title><rect x="42.0050%" y="549" width="0.8285%" height="15" fill="rgb(245,196,50)" fg:x="507" fg:w="10"/><text x="42.2550%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.83%)</title><rect x="42.0050%" y="533" width="0.8285%" height="15" fill="rgb(225,159,46)" fg:x="507" fg:w="10"/><text x="42.2550%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="42.5849%" y="517" width="0.2486%" height="15" fill="rgb(207,195,48)" fg:x="514" fg:w="3"/><text x="42.8349%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="42.5849%" y="501" width="0.2486%" height="15" fill="rgb(240,73,3)" fg:x="514" fg:w="3"/><text x="42.8349%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="42.5849%" y="485" width="0.2486%" height="15" fill="rgb(245,57,23)" fg:x="514" fg:w="3"/><text x="42.8349%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="42.5849%" y="469" width="0.2486%" height="15" fill="rgb(240,75,18)" fg:x="514" fg:w="3"/><text x="42.8349%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="42.5849%" y="453" width="0.2486%" height="15" fill="rgb(238,168,12)" fg:x="514" fg:w="3"/><text x="42.8349%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="42.5849%" y="437" width="0.2486%" height="15" fill="rgb(226,20,40)" fg:x="514" fg:w="3"/><text x="42.8349%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.7506%" y="421" width="0.0829%" height="15" fill="rgb(224,130,35)" fg:x="516" fg:w="1"/><text x="43.0006%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.7506%" y="405" width="0.0829%" height="15" fill="rgb(225,63,41)" fg:x="516" fg:w="1"/><text x="43.0006%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.7506%" y="389" width="0.0829%" height="15" fill="rgb(219,3,3)" fg:x="516" fg:w="1"/><text x="43.0006%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7506%" y="373" width="0.0829%" height="15" fill="rgb(218,157,4)" fg:x="516" fg:w="1"/><text x="43.0006%" y="383.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="42.8335%" y="581" width="0.0829%" height="15" fill="rgb(232,76,36)" fg:x="517" fg:w="1"/><text x="43.0835%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.8335%" y="565" width="0.0829%" height="15" fill="rgb(247,36,0)" fg:x="517" fg:w="1"/><text x="43.0835%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.8335%" y="549" width="0.0829%" height="15" fill="rgb(205,2,34)" fg:x="517" fg:w="1"/><text x="43.0835%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="42.8335%" y="533" width="0.0829%" height="15" fill="rgb(239,136,13)" fg:x="517" fg:w="1"/><text x="43.0835%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.8335%" y="517" width="0.0829%" height="15" fill="rgb(253,122,12)" fg:x="517" fg:w="1"/><text x="43.0835%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8335%" y="501" width="0.0829%" height="15" fill="rgb(222,174,7)" fg:x="517" fg:w="1"/><text x="43.0835%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9163%" y="517" width="0.0829%" height="15" fill="rgb(208,191,42)" fg:x="518" fg:w="1"/><text x="43.1663%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.25%)</title><rect x="42.8335%" y="597" width="0.2486%" height="15" fill="rgb(237,212,15)" fg:x="517" fg:w="3"/><text x="43.0835%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.17%)</title><rect x="42.9163%" y="581" width="0.1657%" height="15" fill="rgb(215,65,20)" fg:x="518" fg:w="2"/><text x="43.1663%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="42.9163%" y="565" width="0.1657%" height="15" fill="rgb(232,103,11)" fg:x="518" fg:w="2"/><text x="43.1663%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.17%)</title><rect x="42.9163%" y="549" width="0.1657%" height="15" fill="rgb(235,148,18)" fg:x="518" fg:w="2"/><text x="43.1663%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="42.9163%" y="533" width="0.1657%" height="15" fill="rgb(240,173,7)" fg:x="518" fg:w="2"/><text x="43.1663%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9992%" y="517" width="0.0829%" height="15" fill="rgb(228,182,25)" fg:x="519" fg:w="1"/><text x="43.2492%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9992%" y="501" width="0.0829%" height="15" fill="rgb(247,3,52)" fg:x="519" fg:w="1"/><text x="43.2492%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.9992%" y="485" width="0.0829%" height="15" fill="rgb(226,155,8)" fg:x="519" fg:w="1"/><text x="43.2492%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2477%" y="469" width="0.0829%" height="15" fill="rgb(243,195,38)" fg:x="522" fg:w="1"/><text x="43.4977%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2477%" y="453" width="0.0829%" height="15" fill="rgb(254,181,33)" fg:x="522" fg:w="1"/><text x="43.4977%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2477%" y="437" width="0.0829%" height="15" fill="rgb(232,98,23)" fg:x="522" fg:w="1"/><text x="43.4977%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="43.1649%" y="501" width="0.2486%" height="15" fill="rgb(205,23,10)" fg:x="521" fg:w="3"/><text x="43.4149%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="43.1649%" y="485" width="0.2486%" height="15" fill="rgb(212,124,38)" fg:x="521" fg:w="3"/><text x="43.4149%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3306%" y="469" width="0.0829%" height="15" fill="rgb(228,207,2)" fg:x="523" fg:w="1"/><text x="43.5806%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3306%" y="453" width="0.0829%" height="15" fill="rgb(215,120,22)" fg:x="523" fg:w="1"/><text x="43.5806%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.3306%" y="437" width="0.0829%" height="15" fill="rgb(251,172,33)" fg:x="523" fg:w="1"/><text x="43.5806%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.3306%" y="421" width="0.0829%" height="15" fill="rgb(250,83,2)" fg:x="523" fg:w="1"/><text x="43.5806%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.3306%" y="405" width="0.0829%" height="15" fill="rgb(210,132,53)" fg:x="523" fg:w="1"/><text x="43.5806%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.3306%" y="389" width="0.0829%" height="15" fill="rgb(221,208,36)" fg:x="523" fg:w="1"/><text x="43.5806%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.3306%" y="373" width="0.0829%" height="15" fill="rgb(205,192,46)" fg:x="523" fg:w="1"/><text x="43.5806%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.4134%" y="501" width="0.0829%" height="15" fill="rgb(223,163,14)" fg:x="524" fg:w="1"/><text x="43.6634%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.4963%" y="437" width="0.0829%" height="15" fill="rgb(218,41,28)" fg:x="525" fg:w="1"/><text x="43.7463%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4963%" y="421" width="0.0829%" height="15" fill="rgb(235,104,10)" fg:x="525" fg:w="1"/><text x="43.7463%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.58%)</title><rect x="43.0820%" y="549" width="0.5800%" height="15" fill="rgb(246,17,4)" fg:x="520" fg:w="7"/><text x="43.3320%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.58%)</title><rect x="43.0820%" y="533" width="0.5800%" height="15" fill="rgb(240,7,16)" fg:x="520" fg:w="7"/><text x="43.3320%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.58%)</title><rect x="43.0820%" y="517" width="0.5800%" height="15" fill="rgb(213,160,23)" fg:x="520" fg:w="7"/><text x="43.3320%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="43.4963%" y="501" width="0.1657%" height="15" fill="rgb(251,179,49)" fg:x="525" fg:w="2"/><text x="43.7463%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="43.4963%" y="485" width="0.1657%" height="15" fill="rgb(247,198,10)" fg:x="525" fg:w="2"/><text x="43.7463%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="43.4963%" y="469" width="0.1657%" height="15" fill="rgb(220,65,29)" fg:x="525" fg:w="2"/><text x="43.7463%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="43.4963%" y="453" width="0.1657%" height="15" fill="rgb(237,171,28)" fg:x="525" fg:w="2"/><text x="43.7463%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="43.5791%" y="437" width="0.0829%" height="15" fill="rgb(228,44,26)" fg:x="526" fg:w="1"/><text x="43.8291%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="43.7448%" y="501" width="0.2486%" height="15" fill="rgb(216,210,27)" fg:x="528" fg:w="3"/><text x="43.9948%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="43.8277%" y="485" width="0.1657%" height="15" fill="rgb(252,10,17)" fg:x="529" fg:w="2"/><text x="44.0777%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="43.8277%" y="469" width="0.1657%" height="15" fill="rgb(214,172,30)" fg:x="529" fg:w="2"/><text x="44.0777%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9105%" y="453" width="0.0829%" height="15" fill="rgb(253,130,48)" fg:x="530" fg:w="1"/><text x="44.1605%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9105%" y="437" width="0.0829%" height="15" fill="rgb(226,99,43)" fg:x="530" fg:w="1"/><text x="44.1605%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="43.9934%" y="501" width="0.1657%" height="15" fill="rgb(239,111,26)" fg:x="531" fg:w="2"/><text x="44.2434%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="43.9934%" y="485" width="0.1657%" height="15" fill="rgb(240,27,53)" fg:x="531" fg:w="2"/><text x="44.2434%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="43.9934%" y="469" width="0.1657%" height="15" fill="rgb(254,163,12)" fg:x="531" fg:w="2"/><text x="44.2434%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.0762%" y="453" width="0.0829%" height="15" fill="rgb(225,51,48)" fg:x="532" fg:w="1"/><text x="44.3262%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.0762%" y="437" width="0.0829%" height="15" fill="rgb(205,19,32)" fg:x="532" fg:w="1"/><text x="44.3262%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.0762%" y="421" width="0.0829%" height="15" fill="rgb(218,119,26)" fg:x="532" fg:w="1"/><text x="44.3262%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.0762%" y="405" width="0.0829%" height="15" fill="rgb(231,173,33)" fg:x="532" fg:w="1"/><text x="44.3262%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.16%)</title><rect x="43.0820%" y="581" width="1.1599%" height="15" fill="rgb(241,100,29)" fg:x="520" fg:w="14"/><text x="43.3320%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.16%)</title><rect x="43.0820%" y="565" width="1.1599%" height="15" fill="rgb(250,194,34)" fg:x="520" fg:w="14"/><text x="43.3320%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.58%)</title><rect x="43.6620%" y="549" width="0.5800%" height="15" fill="rgb(215,23,50)" fg:x="527" fg:w="7"/><text x="43.9120%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.58%)</title><rect x="43.6620%" y="533" width="0.5800%" height="15" fill="rgb(206,49,37)" fg:x="527" fg:w="7"/><text x="43.9120%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.58%)</title><rect x="43.6620%" y="517" width="0.5800%" height="15" fill="rgb(247,39,21)" fg:x="527" fg:w="7"/><text x="43.9120%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.1591%" y="501" width="0.0829%" height="15" fill="rgb(209,220,15)" fg:x="533" fg:w="1"/><text x="44.4091%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1591%" y="485" width="0.0829%" height="15" fill="rgb(206,41,33)" fg:x="533" fg:w="1"/><text x="44.4091%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.1591%" y="469" width="0.0829%" height="15" fill="rgb(221,225,45)" fg:x="533" fg:w="1"/><text x="44.4091%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1591%" y="453" width="0.0829%" height="15" fill="rgb(216,27,18)" fg:x="533" fg:w="1"/><text x="44.4091%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.1591%" y="437" width="0.0829%" height="15" fill="rgb(250,193,34)" fg:x="533" fg:w="1"/><text x="44.4091%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1591%" y="421" width="0.0829%" height="15" fill="rgb(227,215,20)" fg:x="533" fg:w="1"/><text x="44.4091%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.1591%" y="405" width="0.0829%" height="15" fill="rgb(242,211,27)" fg:x="533" fg:w="1"/><text x="44.4091%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1591%" y="389" width="0.0829%" height="15" fill="rgb(229,190,30)" fg:x="533" fg:w="1"/><text x="44.4091%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.1591%" y="373" width="0.0829%" height="15" fill="rgb(253,31,29)" fg:x="533" fg:w="1"/><text x="44.4091%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.1591%" y="357" width="0.0829%" height="15" fill="rgb(229,177,52)" fg:x="533" fg:w="1"/><text x="44.4091%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (64 samples, 5.30%)</title><rect x="39.1881%" y="629" width="5.3024%" height="15" fill="rgb(226,88,8)" fg:x="473" fg:w="64"/><text x="39.4381%" y="639.50">plugin..</text></g><g><title>plugins_core::tools::set_container (42 samples, 3.48%)</title><rect x="41.0108%" y="613" width="3.4797%" height="15" fill="rgb(214,55,27)" fg:x="495" fg:w="42"/><text x="41.2608%" y="623.50">plu..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (17 samples, 1.41%)</title><rect x="43.0820%" y="597" width="1.4085%" height="15" fill="rgb(233,202,5)" fg:x="520" fg:w="17"/><text x="43.3320%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.25%)</title><rect x="44.2419%" y="581" width="0.2486%" height="15" fill="rgb(251,49,30)" fg:x="534" fg:w="3"/><text x="44.4919%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="44.3248%" y="565" width="0.1657%" height="15" fill="rgb(235,18,52)" fg:x="535" fg:w="2"/><text x="44.5748%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="44.4076%" y="549" width="0.0829%" height="15" fill="rgb(250,111,51)" fg:x="536" fg:w="1"/><text x="44.6576%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="44.4076%" y="533" width="0.0829%" height="15" fill="rgb(218,13,25)" fg:x="536" fg:w="1"/><text x="44.6576%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="44.4905%" y="597" width="0.0829%" height="15" fill="rgb(248,96,7)" fg:x="537" fg:w="1"/><text x="44.7405%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="44.4905%" y="581" width="0.0829%" height="15" fill="rgb(217,31,15)" fg:x="537" fg:w="1"/><text x="44.7405%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.4905%" y="565" width="0.0829%" height="15" fill="rgb(228,59,49)" fg:x="537" fg:w="1"/><text x="44.7405%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="44.5733%" y="309" width="0.1657%" height="15" fill="rgb(210,152,38)" fg:x="538" fg:w="2"/><text x="44.8233%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="44.5733%" y="533" width="0.2486%" height="15" fill="rgb(206,71,11)" fg:x="538" fg:w="3"/><text x="44.8233%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="44.5733%" y="517" width="0.2486%" height="15" fill="rgb(244,199,5)" fg:x="538" fg:w="3"/><text x="44.8233%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="44.5733%" y="501" width="0.2486%" height="15" fill="rgb(253,49,1)" fg:x="538" fg:w="3"/><text x="44.8233%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="44.5733%" y="485" width="0.2486%" height="15" fill="rgb(225,206,40)" fg:x="538" fg:w="3"/><text x="44.8233%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="44.5733%" y="469" width="0.2486%" height="15" fill="rgb(243,116,47)" fg:x="538" fg:w="3"/><text x="44.8233%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.25%)</title><rect x="44.5733%" y="453" width="0.2486%" height="15" fill="rgb(219,225,16)" fg:x="538" fg:w="3"/><text x="44.8233%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.25%)</title><rect x="44.5733%" y="437" width="0.2486%" height="15" fill="rgb(233,29,47)" fg:x="538" fg:w="3"/><text x="44.8233%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.25%)</title><rect x="44.5733%" y="421" width="0.2486%" height="15" fill="rgb(250,179,18)" fg:x="538" fg:w="3"/><text x="44.8233%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="44.5733%" y="405" width="0.2486%" height="15" fill="rgb(215,176,6)" fg:x="538" fg:w="3"/><text x="44.8233%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="44.5733%" y="389" width="0.2486%" height="15" fill="rgb(214,117,39)" fg:x="538" fg:w="3"/><text x="44.8233%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.25%)</title><rect x="44.5733%" y="373" width="0.2486%" height="15" fill="rgb(247,183,36)" fg:x="538" fg:w="3"/><text x="44.8233%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.25%)</title><rect x="44.5733%" y="357" width="0.2486%" height="15" fill="rgb(237,200,3)" fg:x="538" fg:w="3"/><text x="44.8233%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.25%)</title><rect x="44.5733%" y="341" width="0.2486%" height="15" fill="rgb(212,220,24)" fg:x="538" fg:w="3"/><text x="44.8233%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.25%)</title><rect x="44.5733%" y="325" width="0.2486%" height="15" fill="rgb(245,216,20)" fg:x="538" fg:w="3"/><text x="44.8233%" y="335.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="44.7390%" y="309" width="0.0829%" height="15" fill="rgb(219,124,7)" fg:x="540" fg:w="1"/><text x="44.9890%" y="319.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.41%)</title><rect x="44.4905%" y="629" width="0.4143%" height="15" fill="rgb(227,167,8)" fg:x="537" fg:w="5"/><text x="44.7405%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="44.4905%" y="613" width="0.4143%" height="15" fill="rgb(241,37,2)" fg:x="537" fg:w="5"/><text x="44.7405%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="44.5733%" y="597" width="0.3314%" height="15" fill="rgb(238,134,33)" fg:x="538" fg:w="4"/><text x="44.8233%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="44.5733%" y="581" width="0.3314%" height="15" fill="rgb(248,48,27)" fg:x="538" fg:w="4"/><text x="44.8233%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="44.5733%" y="565" width="0.3314%" height="15" fill="rgb(212,14,16)" fg:x="538" fg:w="4"/><text x="44.8233%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="44.5733%" y="549" width="0.3314%" height="15" fill="rgb(217,205,37)" fg:x="538" fg:w="4"/><text x="44.8233%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8219%" y="533" width="0.0829%" height="15" fill="rgb(233,185,47)" fg:x="541" fg:w="1"/><text x="45.0719%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.8219%" y="517" width="0.0829%" height="15" fill="rgb(244,88,8)" fg:x="541" fg:w="1"/><text x="45.0719%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.8219%" y="501" width="0.0829%" height="15" fill="rgb(213,0,20)" fg:x="541" fg:w="1"/><text x="45.0719%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.8219%" y="485" width="0.0829%" height="15" fill="rgb(238,159,36)" fg:x="541" fg:w="1"/><text x="45.0719%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.8219%" y="469" width="0.0829%" height="15" fill="rgb(253,173,17)" fg:x="541" fg:w="1"/><text x="45.0719%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8219%" y="453" width="0.0829%" height="15" fill="rgb(221,23,28)" fg:x="541" fg:w="1"/><text x="45.0719%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.8219%" y="437" width="0.0829%" height="15" fill="rgb(218,113,15)" fg:x="541" fg:w="1"/><text x="45.0719%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.8219%" y="421" width="0.0829%" height="15" fill="rgb(233,58,3)" fg:x="541" fg:w="1"/><text x="45.0719%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.8219%" y="405" width="0.0829%" height="15" fill="rgb(250,46,35)" fg:x="541" fg:w="1"/><text x="45.0719%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.8219%" y="389" width="0.0829%" height="15" fill="rgb(210,169,11)" fg:x="541" fg:w="1"/><text x="45.0719%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.8219%" y="373" width="0.0829%" height="15" fill="rgb(246,88,19)" fg:x="541" fg:w="1"/><text x="45.0719%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8219%" y="357" width="0.0829%" height="15" fill="rgb(206,81,49)" fg:x="541" fg:w="1"/><text x="45.0719%" y="367.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="44.9047%" y="597" width="0.0829%" height="15" fill="rgb(232,144,18)" fg:x="542" fg:w="1"/><text x="45.1547%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="44.9876%" y="597" width="0.1657%" height="15" fill="rgb(235,2,27)" fg:x="543" fg:w="2"/><text x="45.2376%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="44.9876%" y="581" width="0.1657%" height="15" fill="rgb(239,157,39)" fg:x="543" fg:w="2"/><text x="45.2376%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.0704%" y="565" width="0.0829%" height="15" fill="rgb(220,11,17)" fg:x="544" fg:w="1"/><text x="45.3204%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.0704%" y="549" width="0.0829%" height="15" fill="rgb(243,94,50)" fg:x="544" fg:w="1"/><text x="45.3204%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.1533%" y="565" width="0.0829%" height="15" fill="rgb(218,22,0)" fg:x="545" fg:w="1"/><text x="45.4033%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.1533%" y="549" width="0.0829%" height="15" fill="rgb(249,70,21)" fg:x="545" fg:w="1"/><text x="45.4033%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.1533%" y="533" width="0.0829%" height="15" fill="rgb(245,111,46)" fg:x="545" fg:w="1"/><text x="45.4033%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2361%" y="565" width="0.0829%" height="15" fill="rgb(244,183,12)" fg:x="546" fg:w="1"/><text x="45.4861%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.50%)</title><rect x="44.9047%" y="629" width="0.4971%" height="15" fill="rgb(207,117,0)" fg:x="542" fg:w="6"/><text x="45.1547%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.50%)</title><rect x="44.9047%" y="613" width="0.4971%" height="15" fill="rgb(206,20,43)" fg:x="542" fg:w="6"/><text x="45.1547%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.25%)</title><rect x="45.1533%" y="597" width="0.2486%" height="15" fill="rgb(221,104,11)" fg:x="545" fg:w="3"/><text x="45.4033%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.25%)</title><rect x="45.1533%" y="581" width="0.2486%" height="15" fill="rgb(254,36,50)" fg:x="545" fg:w="3"/><text x="45.4033%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="45.3190%" y="565" width="0.0829%" height="15" fill="rgb(252,17,15)" fg:x="547" fg:w="1"/><text x="45.5690%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.3190%" y="549" width="0.0829%" height="15" fill="rgb(219,129,43)" fg:x="547" fg:w="1"/><text x="45.5690%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="45.3190%" y="533" width="0.0829%" height="15" fill="rgb(205,34,45)" fg:x="547" fg:w="1"/><text x="45.5690%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.3190%" y="517" width="0.0829%" height="15" fill="rgb(251,201,32)" fg:x="547" fg:w="1"/><text x="45.5690%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.17%)</title><rect x="45.4018%" y="597" width="0.1657%" height="15" fill="rgb(205,56,0)" fg:x="548" fg:w="2"/><text x="45.6518%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.17%)</title><rect x="45.4018%" y="581" width="0.1657%" height="15" fill="rgb(211,193,27)" fg:x="548" fg:w="2"/><text x="45.6518%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.17%)</title><rect x="45.4018%" y="565" width="0.1657%" height="15" fill="rgb(231,100,42)" fg:x="548" fg:w="2"/><text x="45.6518%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.4847%" y="549" width="0.0829%" height="15" fill="rgb(245,85,27)" fg:x="549" fg:w="1"/><text x="45.7347%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.4847%" y="533" width="0.0829%" height="15" fill="rgb(241,76,24)" fg:x="549" fg:w="1"/><text x="45.7347%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.17%)</title><rect x="45.5675%" y="597" width="0.1657%" height="15" fill="rgb(249,157,15)" fg:x="550" fg:w="2"/><text x="45.8175%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="45.5675%" y="581" width="0.1657%" height="15" fill="rgb(222,218,25)" fg:x="550" fg:w="2"/><text x="45.8175%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="45.5675%" y="565" width="0.1657%" height="15" fill="rgb(252,156,52)" fg:x="550" fg:w="2"/><text x="45.8175%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="45.5675%" y="549" width="0.1657%" height="15" fill="rgb(211,185,7)" fg:x="550" fg:w="2"/><text x="45.8175%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="45.5675%" y="533" width="0.1657%" height="15" fill="rgb(234,108,24)" fg:x="550" fg:w="2"/><text x="45.8175%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.6504%" y="517" width="0.0829%" height="15" fill="rgb(227,218,2)" fg:x="551" fg:w="1"/><text x="45.9004%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6504%" y="501" width="0.0829%" height="15" fill="rgb(224,0,36)" fg:x="551" fg:w="1"/><text x="45.9004%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="45.7332%" y="549" width="0.0829%" height="15" fill="rgb(233,201,10)" fg:x="552" fg:w="1"/><text x="45.9832%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.7332%" y="533" width="0.0829%" height="15" fill="rgb(252,209,14)" fg:x="552" fg:w="1"/><text x="45.9832%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.7332%" y="517" width="0.0829%" height="15" fill="rgb(205,93,49)" fg:x="552" fg:w="1"/><text x="45.9832%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.25%)</title><rect x="45.7332%" y="581" width="0.2486%" height="15" fill="rgb(234,116,45)" fg:x="552" fg:w="3"/><text x="45.9832%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="45.7332%" y="565" width="0.2486%" height="15" fill="rgb(248,89,35)" fg:x="552" fg:w="3"/><text x="45.9832%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="45.8161%" y="549" width="0.1657%" height="15" fill="rgb(233,167,45)" fg:x="553" fg:w="2"/><text x="46.0661%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="45.8161%" y="533" width="0.1657%" height="15" fill="rgb(248,228,14)" fg:x="553" fg:w="2"/><text x="46.0661%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.9818%" y="565" width="0.0829%" height="15" fill="rgb(246,91,14)" fg:x="555" fg:w="1"/><text x="46.2318%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9818%" y="549" width="0.0829%" height="15" fill="rgb(227,142,5)" fg:x="555" fg:w="1"/><text x="46.2318%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9818%" y="533" width="0.0829%" height="15" fill="rgb(221,63,33)" fg:x="555" fg:w="1"/><text x="46.2318%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.9818%" y="517" width="0.0829%" height="15" fill="rgb(233,49,0)" fg:x="555" fg:w="1"/><text x="46.2318%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.9818%" y="501" width="0.0829%" height="15" fill="rgb(251,115,38)" fg:x="555" fg:w="1"/><text x="46.2318%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.9818%" y="485" width="0.0829%" height="15" fill="rgb(231,214,32)" fg:x="555" fg:w="1"/><text x="46.2318%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.9818%" y="469" width="0.0829%" height="15" fill="rgb(248,73,46)" fg:x="555" fg:w="1"/><text x="46.2318%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.9818%" y="453" width="0.0829%" height="15" fill="rgb(237,156,4)" fg:x="555" fg:w="1"/><text x="46.2318%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.41%)</title><rect x="45.7332%" y="597" width="0.4143%" height="15" fill="rgb(227,132,2)" fg:x="552" fg:w="5"/><text x="45.9832%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="45.9818%" y="581" width="0.1657%" height="15" fill="rgb(248,161,9)" fg:x="555" fg:w="2"/><text x="46.2318%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="46.0646%" y="565" width="0.0829%" height="15" fill="rgb(238,77,38)" fg:x="556" fg:w="1"/><text x="46.3146%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="46.1475%" y="549" width="0.0829%" height="15" fill="rgb(222,166,40)" fg:x="557" fg:w="1"/><text x="46.3975%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.1475%" y="533" width="0.0829%" height="15" fill="rgb(214,168,45)" fg:x="557" fg:w="1"/><text x="46.3975%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.1475%" y="517" width="0.0829%" height="15" fill="rgb(226,64,37)" fg:x="557" fg:w="1"/><text x="46.3975%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1475%" y="501" width="0.0829%" height="15" fill="rgb(232,210,43)" fg:x="557" fg:w="1"/><text x="46.3975%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.1475%" y="485" width="0.0829%" height="15" fill="rgb(214,76,33)" fg:x="557" fg:w="1"/><text x="46.3975%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1475%" y="469" width="0.0829%" height="15" fill="rgb(210,78,5)" fg:x="557" fg:w="1"/><text x="46.3975%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.1475%" y="453" width="0.0829%" height="15" fill="rgb(211,107,37)" fg:x="557" fg:w="1"/><text x="46.3975%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.1475%" y="437" width="0.0829%" height="15" fill="rgb(249,67,16)" fg:x="557" fg:w="1"/><text x="46.3975%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.1475%" y="421" width="0.0829%" height="15" fill="rgb(222,114,31)" fg:x="557" fg:w="1"/><text x="46.3975%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.1475%" y="405" width="0.0829%" height="15" fill="rgb(242,118,19)" fg:x="557" fg:w="1"/><text x="46.3975%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.2303%" y="517" width="0.0829%" height="15" fill="rgb(223,115,1)" fg:x="558" fg:w="1"/><text x="46.4803%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.2303%" y="501" width="0.0829%" height="15" fill="rgb(241,182,54)" fg:x="558" fg:w="1"/><text x="46.4803%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.2303%" y="485" width="0.0829%" height="15" fill="rgb(244,166,36)" fg:x="558" fg:w="1"/><text x="46.4803%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.2303%" y="469" width="0.0829%" height="15" fill="rgb(241,52,43)" fg:x="558" fg:w="1"/><text x="46.4803%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.25%)</title><rect x="46.1475%" y="597" width="0.2486%" height="15" fill="rgb(236,82,9)" fg:x="557" fg:w="3"/><text x="46.3975%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="46.1475%" y="581" width="0.2486%" height="15" fill="rgb(241,119,0)" fg:x="557" fg:w="3"/><text x="46.3975%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.25%)</title><rect x="46.1475%" y="565" width="0.2486%" height="15" fill="rgb(221,19,22)" fg:x="557" fg:w="3"/><text x="46.3975%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.17%)</title><rect x="46.2303%" y="549" width="0.1657%" height="15" fill="rgb(254,144,35)" fg:x="558" fg:w="2"/><text x="46.4803%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="46.2303%" y="533" width="0.1657%" height="15" fill="rgb(246,132,30)" fg:x="558" fg:w="2"/><text x="46.4803%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="46.3132%" y="517" width="0.0829%" height="15" fill="rgb(234,69,28)" fg:x="559" fg:w="1"/><text x="46.5632%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.3132%" y="501" width="0.0829%" height="15" fill="rgb(219,106,47)" fg:x="559" fg:w="1"/><text x="46.5632%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="46.3132%" y="485" width="0.0829%" height="15" fill="rgb(218,79,24)" fg:x="559" fg:w="1"/><text x="46.5632%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.3132%" y="469" width="0.0829%" height="15" fill="rgb(225,26,21)" fg:x="559" fg:w="1"/><text x="46.5632%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="46.3132%" y="453" width="0.0829%" height="15" fill="rgb(217,68,49)" fg:x="559" fg:w="1"/><text x="46.5632%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.3132%" y="437" width="0.0829%" height="15" fill="rgb(220,204,28)" fg:x="559" fg:w="1"/><text x="46.5632%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.08%)</title><rect x="45.4018%" y="613" width="1.0771%" height="15" fill="rgb(237,208,43)" fg:x="548" fg:w="13"/><text x="45.6518%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="46.3960%" y="597" width="0.0829%" height="15" fill="rgb(213,97,42)" fg:x="560" fg:w="1"/><text x="46.6460%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="46.4789%" y="597" width="0.0829%" height="15" fill="rgb(238,96,52)" fg:x="561" fg:w="1"/><text x="46.7289%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="46.5617%" y="597" width="0.0829%" height="15" fill="rgb(228,14,13)" fg:x="562" fg:w="1"/><text x="46.8117%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="46.5617%" y="581" width="0.0829%" height="15" fill="rgb(219,123,13)" fg:x="562" fg:w="1"/><text x="46.8117%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.5617%" y="565" width="0.0829%" height="15" fill="rgb(216,144,17)" fg:x="562" fg:w="1"/><text x="46.8117%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.7274%" y="485" width="0.0829%" height="15" fill="rgb(230,228,29)" fg:x="564" fg:w="1"/><text x="46.9774%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.7274%" y="469" width="0.0829%" height="15" fill="rgb(233,18,5)" fg:x="564" fg:w="1"/><text x="46.9774%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.7274%" y="453" width="0.0829%" height="15" fill="rgb(233,197,12)" fg:x="564" fg:w="1"/><text x="46.9774%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="46.7274%" y="517" width="0.1657%" height="15" fill="rgb(234,140,29)" fg:x="564" fg:w="2"/><text x="46.9774%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="46.7274%" y="501" width="0.1657%" height="15" fill="rgb(233,113,19)" fg:x="564" fg:w="2"/><text x="46.9774%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8103%" y="485" width="0.0829%" height="15" fill="rgb(246,209,13)" fg:x="565" fg:w="1"/><text x="47.0603%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.8931%" y="517" width="0.0829%" height="15" fill="rgb(242,79,54)" fg:x="566" fg:w="1"/><text x="47.1431%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="46.8931%" y="501" width="0.0829%" height="15" fill="rgb(219,73,16)" fg:x="566" fg:w="1"/><text x="47.1431%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.8931%" y="485" width="0.0829%" height="15" fill="rgb(224,52,10)" fg:x="566" fg:w="1"/><text x="47.1431%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.8931%" y="469" width="0.0829%" height="15" fill="rgb(237,179,5)" fg:x="566" fg:w="1"/><text x="47.1431%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.8931%" y="453" width="0.0829%" height="15" fill="rgb(231,20,6)" fg:x="566" fg:w="1"/><text x="47.1431%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="46.7274%" y="565" width="0.3314%" height="15" fill="rgb(253,171,45)" fg:x="564" fg:w="4"/><text x="46.9774%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="46.7274%" y="549" width="0.3314%" height="15" fill="rgb(230,75,49)" fg:x="564" fg:w="4"/><text x="46.9774%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="46.7274%" y="533" width="0.3314%" height="15" fill="rgb(216,83,46)" fg:x="564" fg:w="4"/><text x="46.9774%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9760%" y="517" width="0.0829%" height="15" fill="rgb(236,56,9)" fg:x="567" fg:w="1"/><text x="47.2260%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9760%" y="501" width="0.0829%" height="15" fill="rgb(215,28,34)" fg:x="567" fg:w="1"/><text x="47.2260%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9760%" y="485" width="0.0829%" height="15" fill="rgb(230,222,20)" fg:x="567" fg:w="1"/><text x="47.2260%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="47.0588%" y="549" width="0.0829%" height="15" fill="rgb(235,209,51)" fg:x="568" fg:w="1"/><text x="47.3088%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.0588%" y="533" width="0.0829%" height="15" fill="rgb(235,167,1)" fg:x="568" fg:w="1"/><text x="47.3088%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2245%" y="501" width="0.0829%" height="15" fill="rgb(248,220,0)" fg:x="570" fg:w="1"/><text x="47.4745%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2245%" y="485" width="0.0829%" height="15" fill="rgb(239,0,18)" fg:x="570" fg:w="1"/><text x="47.4745%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2245%" y="469" width="0.0829%" height="15" fill="rgb(229,179,11)" fg:x="570" fg:w="1"/><text x="47.4745%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2245%" y="453" width="0.0829%" height="15" fill="rgb(226,116,53)" fg:x="570" fg:w="1"/><text x="47.4745%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2245%" y="437" width="0.0829%" height="15" fill="rgb(218,1,49)" fg:x="570" fg:w="1"/><text x="47.4745%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.75%)</title><rect x="46.6446%" y="597" width="0.7457%" height="15" fill="rgb(208,184,47)" fg:x="563" fg:w="9"/><text x="46.8946%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.66%)</title><rect x="46.7274%" y="581" width="0.6628%" height="15" fill="rgb(238,174,3)" fg:x="564" fg:w="8"/><text x="46.9774%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="47.0588%" y="565" width="0.3314%" height="15" fill="rgb(247,188,6)" fg:x="568" fg:w="4"/><text x="47.3088%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="47.1417%" y="549" width="0.2486%" height="15" fill="rgb(211,165,46)" fg:x="569" fg:w="3"/><text x="47.3917%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="47.1417%" y="533" width="0.2486%" height="15" fill="rgb(222,190,10)" fg:x="569" fg:w="3"/><text x="47.3917%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="47.2245%" y="517" width="0.1657%" height="15" fill="rgb(206,185,3)" fg:x="570" fg:w="2"/><text x="47.4745%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.3074%" y="501" width="0.0829%" height="15" fill="rgb(244,125,37)" fg:x="571" fg:w="1"/><text x="47.5574%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.3074%" y="485" width="0.0829%" height="15" fill="rgb(211,43,7)" fg:x="571" fg:w="1"/><text x="47.5574%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.3074%" y="469" width="0.0829%" height="15" fill="rgb(250,41,42)" fg:x="571" fg:w="1"/><text x="47.5574%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.3074%" y="453" width="0.0829%" height="15" fill="rgb(254,54,42)" fg:x="571" fg:w="1"/><text x="47.5574%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.3074%" y="437" width="0.0829%" height="15" fill="rgb(213,71,43)" fg:x="571" fg:w="1"/><text x="47.5574%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.3074%" y="421" width="0.0829%" height="15" fill="rgb(249,3,44)" fg:x="571" fg:w="1"/><text x="47.5574%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.3074%" y="405" width="0.0829%" height="15" fill="rgb(229,80,41)" fg:x="571" fg:w="1"/><text x="47.5574%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.3074%" y="389" width="0.0829%" height="15" fill="rgb(231,25,28)" fg:x="571" fg:w="1"/><text x="47.5574%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.3074%" y="373" width="0.0829%" height="15" fill="rgb(208,79,48)" fg:x="571" fg:w="1"/><text x="47.5574%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.3074%" y="357" width="0.0829%" height="15" fill="rgb(207,196,38)" fg:x="571" fg:w="1"/><text x="47.5574%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.3074%" y="341" width="0.0829%" height="15" fill="rgb(228,105,49)" fg:x="571" fg:w="1"/><text x="47.5574%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.3074%" y="325" width="0.0829%" height="15" fill="rgb(237,99,15)" fg:x="571" fg:w="1"/><text x="47.5574%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.17%)</title><rect x="47.3902%" y="597" width="0.1657%" height="15" fill="rgb(224,207,46)" fg:x="572" fg:w="2"/><text x="47.6402%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="47.3902%" y="581" width="0.1657%" height="15" fill="rgb(249,117,50)" fg:x="572" fg:w="2"/><text x="47.6402%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="47.3902%" y="565" width="0.1657%" height="15" fill="rgb(248,17,13)" fg:x="572" fg:w="2"/><text x="47.6402%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5559%" y="581" width="0.0829%" height="15" fill="rgb(228,187,36)" fg:x="574" fg:w="1"/><text x="47.8059%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.5559%" y="565" width="0.0829%" height="15" fill="rgb(234,132,20)" fg:x="574" fg:w="1"/><text x="47.8059%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="47.5559%" y="549" width="0.0829%" height="15" fill="rgb(209,170,46)" fg:x="574" fg:w="1"/><text x="47.8059%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.6388%" y="549" width="0.0829%" height="15" fill="rgb(237,23,19)" fg:x="575" fg:w="1"/><text x="47.8888%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="47.7216%" y="549" width="0.0829%" height="15" fill="rgb(227,21,26)" fg:x="576" fg:w="1"/><text x="47.9716%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="47.8045%" y="533" width="0.0829%" height="15" fill="rgb(222,220,48)" fg:x="577" fg:w="1"/><text x="48.0545%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (4 samples, 0.33%)</title><rect x="47.6388%" y="581" width="0.3314%" height="15" fill="rgb(214,9,16)" fg:x="575" fg:w="4"/><text x="47.8888%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="47.6388%" y="565" width="0.3314%" height="15" fill="rgb(209,73,30)" fg:x="575" fg:w="4"/><text x="47.8888%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="47.8045%" y="549" width="0.1657%" height="15" fill="rgb(207,20,33)" fg:x="577" fg:w="2"/><text x="48.0545%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="47.8873%" y="533" width="0.0829%" height="15" fill="rgb(219,153,12)" fg:x="578" fg:w="1"/><text x="48.1373%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.8873%" y="517" width="0.0829%" height="15" fill="rgb(235,97,25)" fg:x="578" fg:w="1"/><text x="48.1373%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.8873%" y="501" width="0.0829%" height="15" fill="rgb(244,30,34)" fg:x="578" fg:w="1"/><text x="48.1373%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.50%)</title><rect x="47.5559%" y="597" width="0.4971%" height="15" fill="rgb(214,106,45)" fg:x="574" fg:w="6"/><text x="47.8059%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="47.9702%" y="581" width="0.0829%" height="15" fill="rgb(226,41,9)" fg:x="579" fg:w="1"/><text x="48.2202%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.9702%" y="565" width="0.0829%" height="15" fill="rgb(253,139,29)" fg:x="579" fg:w="1"/><text x="48.2202%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="47.9702%" y="549" width="0.0829%" height="15" fill="rgb(213,205,39)" fg:x="579" fg:w="1"/><text x="48.2202%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="47.9702%" y="533" width="0.0829%" height="15" fill="rgb(209,27,10)" fg:x="579" fg:w="1"/><text x="48.2202%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="48.0530%" y="581" width="0.0829%" height="15" fill="rgb(249,142,16)" fg:x="580" fg:w="1"/><text x="48.3030%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.0530%" y="565" width="0.0829%" height="15" fill="rgb(242,65,12)" fg:x="580" fg:w="1"/><text x="48.3030%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="48.2187%" y="485" width="0.2486%" height="15" fill="rgb(232,48,10)" fg:x="582" fg:w="3"/><text x="48.4687%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="48.2187%" y="469" width="0.2486%" height="15" fill="rgb(253,67,19)" fg:x="582" fg:w="3"/><text x="48.4687%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="48.2187%" y="453" width="0.2486%" height="15" fill="rgb(227,93,29)" fg:x="582" fg:w="3"/><text x="48.4687%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="48.3016%" y="437" width="0.1657%" height="15" fill="rgb(226,189,53)" fg:x="583" fg:w="2"/><text x="48.5516%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="48.3016%" y="421" width="0.1657%" height="15" fill="rgb(223,224,1)" fg:x="583" fg:w="2"/><text x="48.5516%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="48.3016%" y="405" width="0.1657%" height="15" fill="rgb(221,84,32)" fg:x="583" fg:w="2"/><text x="48.5516%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.17%)</title><rect x="48.3016%" y="389" width="0.1657%" height="15" fill="rgb(214,189,28)" fg:x="583" fg:w="2"/><text x="48.5516%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="48.3016%" y="373" width="0.1657%" height="15" fill="rgb(234,7,52)" fg:x="583" fg:w="2"/><text x="48.5516%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.17%)</title><rect x="48.3016%" y="357" width="0.1657%" height="15" fill="rgb(249,73,31)" fg:x="583" fg:w="2"/><text x="48.5516%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="48.3016%" y="341" width="0.1657%" height="15" fill="rgb(253,153,41)" fg:x="583" fg:w="2"/><text x="48.5516%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="48.3016%" y="325" width="0.1657%" height="15" fill="rgb(249,52,34)" fg:x="583" fg:w="2"/><text x="48.5516%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="48.3016%" y="309" width="0.1657%" height="15" fill="rgb(236,177,47)" fg:x="583" fg:w="2"/><text x="48.5516%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="48.3016%" y="293" width="0.1657%" height="15" fill="rgb(252,185,45)" fg:x="583" fg:w="2"/><text x="48.5516%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="48.3016%" y="277" width="0.1657%" height="15" fill="rgb(251,15,30)" fg:x="583" fg:w="2"/><text x="48.5516%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="48.3016%" y="261" width="0.1657%" height="15" fill="rgb(233,31,4)" fg:x="583" fg:w="2"/><text x="48.5516%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="48.3016%" y="245" width="0.1657%" height="15" fill="rgb(254,44,24)" fg:x="583" fg:w="2"/><text x="48.5516%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="48.2187%" y="501" width="0.3314%" height="15" fill="rgb(218,54,1)" fg:x="582" fg:w="4"/><text x="48.4687%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4673%" y="485" width="0.0829%" height="15" fill="rgb(243,209,39)" fg:x="585" fg:w="1"/><text x="48.7173%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.50%)</title><rect x="48.1359%" y="549" width="0.4971%" height="15" fill="rgb(206,75,33)" fg:x="581" fg:w="6"/><text x="48.3859%" y="559.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.50%)</title><rect x="48.1359%" y="533" width="0.4971%" height="15" fill="rgb(223,108,18)" fg:x="581" fg:w="6"/><text x="48.3859%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.50%)</title><rect x="48.1359%" y="517" width="0.4971%" height="15" fill="rgb(244,89,31)" fg:x="581" fg:w="6"/><text x="48.3859%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5501%" y="501" width="0.0829%" height="15" fill="rgb(222,167,27)" fg:x="586" fg:w="1"/><text x="48.8001%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.5501%" y="485" width="0.0829%" height="15" fill="rgb(247,41,16)" fg:x="586" fg:w="1"/><text x="48.8001%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5501%" y="469" width="0.0829%" height="15" fill="rgb(233,168,40)" fg:x="586" fg:w="1"/><text x="48.8001%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5501%" y="453" width="0.0829%" height="15" fill="rgb(205,211,8)" fg:x="586" fg:w="1"/><text x="48.8001%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5501%" y="437" width="0.0829%" height="15" fill="rgb(238,105,11)" fg:x="586" fg:w="1"/><text x="48.8001%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5501%" y="421" width="0.0829%" height="15" fill="rgb(223,142,52)" fg:x="586" fg:w="1"/><text x="48.8001%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6330%" y="485" width="0.0829%" height="15" fill="rgb(238,51,33)" fg:x="587" fg:w="1"/><text x="48.8830%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6330%" y="469" width="0.0829%" height="15" fill="rgb(231,188,43)" fg:x="587" fg:w="1"/><text x="48.8830%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6330%" y="453" width="0.0829%" height="15" fill="rgb(216,92,17)" fg:x="587" fg:w="1"/><text x="48.8830%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="48.6330%" y="501" width="0.1657%" height="15" fill="rgb(228,2,40)" fg:x="587" fg:w="2"/><text x="48.8830%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7158%" y="485" width="0.0829%" height="15" fill="rgb(226,73,15)" fg:x="588" fg:w="1"/><text x="48.9658%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="48.7987%" y="501" width="0.1657%" height="15" fill="rgb(227,66,46)" fg:x="589" fg:w="2"/><text x="49.0487%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="48.7987%" y="485" width="0.1657%" height="15" fill="rgb(209,71,6)" fg:x="589" fg:w="2"/><text x="49.0487%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="48.7987%" y="469" width="0.1657%" height="15" fill="rgb(246,100,25)" fg:x="589" fg:w="2"/><text x="49.0487%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="48.7987%" y="453" width="0.1657%" height="15" fill="rgb(248,185,27)" fg:x="589" fg:w="2"/><text x="49.0487%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="48.7987%" y="437" width="0.1657%" height="15" fill="rgb(225,118,47)" fg:x="589" fg:w="2"/><text x="49.0487%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="48.7987%" y="421" width="0.1657%" height="15" fill="rgb(220,185,44)" fg:x="589" fg:w="2"/><text x="49.0487%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (324 samples, 26.84%)</title><rect x="22.2038%" y="645" width="26.8434%" height="15" fill="rgb(227,95,24)" fg:x="268" fg:w="324"/><text x="22.4538%" y="655.50">plugins_core::build::BuildSurroundings::bui..</text></g><g><title>plugins_core::build::Build::occupying (44 samples, 3.65%)</title><rect x="45.4018%" y="629" width="3.6454%" height="15" fill="rgb(252,84,24)" fg:x="548" fg:w="44"/><text x="45.6518%" y="639.50">plug..</text></g><g><title>plugins_core::tools::set_occupying (31 samples, 2.57%)</title><rect x="46.4789%" y="613" width="2.5684%" height="15" fill="rgb(240,34,44)" fg:x="561" fg:w="31"/><text x="46.7289%" y="623.50">pl..</text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (12 samples, 0.99%)</title><rect x="48.0530%" y="597" width="0.9942%" height="15" fill="rgb(209,72,54)" fg:x="580" fg:w="12"/><text x="48.3030%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.91%)</title><rect x="48.1359%" y="581" width="0.9114%" height="15" fill="rgb(226,19,45)" fg:x="581" fg:w="11"/><text x="48.3859%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.91%)</title><rect x="48.1359%" y="565" width="0.9114%" height="15" fill="rgb(246,7,45)" fg:x="581" fg:w="11"/><text x="48.3859%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="48.6330%" y="549" width="0.4143%" height="15" fill="rgb(225,45,2)" fg:x="587" fg:w="5"/><text x="48.8830%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="48.6330%" y="533" width="0.4143%" height="15" fill="rgb(221,80,29)" fg:x="587" fg:w="5"/><text x="48.8830%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="48.6330%" y="517" width="0.4143%" height="15" fill="rgb(228,11,19)" fg:x="587" fg:w="5"/><text x="48.8830%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.9644%" y="501" width="0.0829%" height="15" fill="rgb(243,17,21)" fg:x="591" fg:w="1"/><text x="49.2144%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.9644%" y="485" width="0.0829%" height="15" fill="rgb(243,88,8)" fg:x="591" fg:w="1"/><text x="49.2144%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.9644%" y="469" width="0.0829%" height="15" fill="rgb(214,17,9)" fg:x="591" fg:w="1"/><text x="49.2144%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.9644%" y="453" width="0.0829%" height="15" fill="rgb(232,169,15)" fg:x="591" fg:w="1"/><text x="49.2144%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.9644%" y="437" width="0.0829%" height="15" fill="rgb(232,86,53)" fg:x="591" fg:w="1"/><text x="49.2144%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.9644%" y="421" width="0.0829%" height="15" fill="rgb(222,100,4)" fg:x="591" fg:w="1"/><text x="49.2144%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.9644%" y="405" width="0.0829%" height="15" fill="rgb(253,151,38)" fg:x="591" fg:w="1"/><text x="49.2144%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.9644%" y="389" width="0.0829%" height="15" fill="rgb(238,215,29)" fg:x="591" fg:w="1"/><text x="49.2144%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.9644%" y="373" width="0.0829%" height="15" fill="rgb(205,128,53)" fg:x="591" fg:w="1"/><text x="49.2144%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="49.0472%" y="613" width="0.0829%" height="15" fill="rgb(248,183,14)" fg:x="592" fg:w="1"/><text x="49.2972%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="49.0472%" y="597" width="0.0829%" height="15" fill="rgb(244,172,35)" fg:x="592" fg:w="1"/><text x="49.2972%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0472%" y="581" width="0.0829%" height="15" fill="rgb(234,93,19)" fg:x="592" fg:w="1"/><text x="49.2972%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="49.1301%" y="597" width="0.0829%" height="15" fill="rgb(227,109,7)" fg:x="593" fg:w="1"/><text x="49.3801%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="49.1301%" y="581" width="0.0829%" height="15" fill="rgb(233,136,54)" fg:x="593" fg:w="1"/><text x="49.3801%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.17%)</title><rect x="49.1301%" y="613" width="0.1657%" height="15" fill="rgb(233,19,40)" fg:x="593" fg:w="2"/><text x="49.3801%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="49.2129%" y="597" width="0.0829%" height="15" fill="rgb(247,41,18)" fg:x="594" fg:w="1"/><text x="49.4629%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="49.2129%" y="581" width="0.0829%" height="15" fill="rgb(220,34,34)" fg:x="594" fg:w="1"/><text x="49.4629%" y="591.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="49.2958%" y="613" width="0.0829%" height="15" fill="rgb(222,135,32)" fg:x="595" fg:w="1"/><text x="49.5458%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.2958%" y="597" width="0.0829%" height="15" fill="rgb(214,80,19)" fg:x="595" fg:w="1"/><text x="49.5458%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4615%" y="549" width="0.0829%" height="15" fill="rgb(234,54,46)" fg:x="597" fg:w="1"/><text x="49.7115%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.5443%" y="549" width="0.0829%" height="15" fill="rgb(251,48,23)" fg:x="598" fg:w="1"/><text x="49.7943%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (8 samples, 0.66%)</title><rect x="49.0472%" y="645" width="0.6628%" height="15" fill="rgb(254,109,52)" fg:x="592" fg:w="8"/><text x="49.2972%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (8 samples, 0.66%)</title><rect x="49.0472%" y="629" width="0.6628%" height="15" fill="rgb(240,186,19)" fg:x="592" fg:w="8"/><text x="49.2972%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="49.3786%" y="613" width="0.3314%" height="15" fill="rgb(246,187,17)" fg:x="596" fg:w="4"/><text x="49.6286%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="49.4615%" y="597" width="0.2486%" height="15" fill="rgb(212,21,5)" fg:x="597" fg:w="3"/><text x="49.7115%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="49.4615%" y="581" width="0.2486%" height="15" fill="rgb(225,185,18)" fg:x="597" fg:w="3"/><text x="49.7115%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="49.4615%" y="565" width="0.2486%" height="15" fill="rgb(245,114,17)" fg:x="597" fg:w="3"/><text x="49.7115%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.6272%" y="549" width="0.0829%" height="15" fill="rgb(223,164,24)" fg:x="599" fg:w="1"/><text x="49.8772%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6272%" y="533" width="0.0829%" height="15" fill="rgb(211,228,3)" fg:x="599" fg:w="1"/><text x="49.8772%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.6272%" y="517" width="0.0829%" height="15" fill="rgb(223,16,38)" fg:x="599" fg:w="1"/><text x="49.8772%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6272%" y="501" width="0.0829%" height="15" fill="rgb(207,31,54)" fg:x="599" fg:w="1"/><text x="49.8772%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.6272%" y="485" width="0.0829%" height="15" fill="rgb(220,39,11)" fg:x="599" fg:w="1"/><text x="49.8772%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6272%" y="469" width="0.0829%" height="15" fill="rgb(235,185,0)" fg:x="599" fg:w="1"/><text x="49.8772%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.6272%" y="453" width="0.0829%" height="15" fill="rgb(249,39,18)" fg:x="599" fg:w="1"/><text x="49.8772%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.6272%" y="437" width="0.0829%" height="15" fill="rgb(240,110,33)" fg:x="599" fg:w="1"/><text x="49.8772%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="49.7100%" y="597" width="0.0829%" height="15" fill="rgb(210,92,42)" fg:x="600" fg:w="1"/><text x="49.9600%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="49.7100%" y="581" width="0.0829%" height="15" fill="rgb(218,215,28)" fg:x="600" fg:w="1"/><text x="49.9600%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.7929%" y="549" width="0.0829%" height="15" fill="rgb(238,215,36)" fg:x="601" fg:w="1"/><text x="50.0429%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.7929%" y="533" width="0.0829%" height="15" fill="rgb(220,31,10)" fg:x="601" fg:w="1"/><text x="50.0429%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.8757%" y="549" width="0.0829%" height="15" fill="rgb(212,93,14)" fg:x="602" fg:w="1"/><text x="50.1257%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="49.8757%" y="533" width="0.0829%" height="15" fill="rgb(254,207,2)" fg:x="602" fg:w="1"/><text x="50.1257%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.8757%" y="517" width="0.0829%" height="15" fill="rgb(205,57,44)" fg:x="602" fg:w="1"/><text x="50.1257%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.8757%" y="501" width="0.0829%" height="15" fill="rgb(226,151,19)" fg:x="602" fg:w="1"/><text x="50.1257%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8757%" y="485" width="0.0829%" height="15" fill="rgb(230,72,30)" fg:x="602" fg:w="1"/><text x="50.1257%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="49.7929%" y="597" width="0.2486%" height="15" fill="rgb(244,0,8)" fg:x="601" fg:w="3"/><text x="50.0429%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="49.7929%" y="581" width="0.2486%" height="15" fill="rgb(230,192,6)" fg:x="601" fg:w="3"/><text x="50.0429%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="49.7929%" y="565" width="0.2486%" height="15" fill="rgb(233,207,13)" fg:x="601" fg:w="3"/><text x="50.0429%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9586%" y="549" width="0.0829%" height="15" fill="rgb(206,227,7)" fg:x="603" fg:w="1"/><text x="50.2086%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9586%" y="533" width="0.0829%" height="15" fill="rgb(213,217,25)" fg:x="603" fg:w="1"/><text x="50.2086%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9586%" y="517" width="0.0829%" height="15" fill="rgb(249,75,4)" fg:x="603" fg:w="1"/><text x="50.2086%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9586%" y="501" width="0.0829%" height="15" fill="rgb(225,114,18)" fg:x="603" fg:w="1"/><text x="50.2086%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.9586%" y="485" width="0.0829%" height="15" fill="rgb(211,162,40)" fg:x="603" fg:w="1"/><text x="50.2086%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9586%" y="469" width="0.0829%" height="15" fill="rgb(206,49,29)" fg:x="603" fg:w="1"/><text x="50.2086%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9586%" y="453" width="0.0829%" height="15" fill="rgb(244,8,6)" fg:x="603" fg:w="1"/><text x="50.2086%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9586%" y="437" width="0.0829%" height="15" fill="rgb(231,194,28)" fg:x="603" fg:w="1"/><text x="50.2086%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0414%" y="565" width="0.0829%" height="15" fill="rgb(210,69,5)" fg:x="604" fg:w="1"/><text x="50.2914%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0414%" y="549" width="0.0829%" height="15" fill="rgb(216,186,12)" fg:x="604" fg:w="1"/><text x="50.2914%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0414%" y="533" width="0.0829%" height="15" fill="rgb(238,61,15)" fg:x="604" fg:w="1"/><text x="50.2914%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.0414%" y="517" width="0.0829%" height="15" fill="rgb(226,104,1)" fg:x="604" fg:w="1"/><text x="50.2914%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.0414%" y="501" width="0.0829%" height="15" fill="rgb(229,128,15)" fg:x="604" fg:w="1"/><text x="50.2914%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.0414%" y="485" width="0.0829%" height="15" fill="rgb(247,110,15)" fg:x="604" fg:w="1"/><text x="50.2914%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.0414%" y="469" width="0.0829%" height="15" fill="rgb(210,74,48)" fg:x="604" fg:w="1"/><text x="50.2914%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.0414%" y="453" width="0.0829%" height="15" fill="rgb(246,121,10)" fg:x="604" fg:w="1"/><text x="50.2914%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.0414%" y="437" width="0.0829%" height="15" fill="rgb(214,156,37)" fg:x="604" fg:w="1"/><text x="50.2914%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.0414%" y="421" width="0.0829%" height="15" fill="rgb(214,210,34)" fg:x="604" fg:w="1"/><text x="50.2914%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.0414%" y="405" width="0.0829%" height="15" fill="rgb(237,93,35)" fg:x="604" fg:w="1"/><text x="50.2914%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.0414%" y="389" width="0.0829%" height="15" fill="rgb(206,36,8)" fg:x="604" fg:w="1"/><text x="50.2914%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0414%" y="373" width="0.0829%" height="15" fill="rgb(208,151,12)" fg:x="604" fg:w="1"/><text x="50.2914%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.17%)</title><rect x="50.0414%" y="581" width="0.1657%" height="15" fill="rgb(225,133,52)" fg:x="604" fg:w="2"/><text x="50.2914%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="50.1243%" y="565" width="0.0829%" height="15" fill="rgb(231,71,53)" fg:x="605" fg:w="1"/><text x="50.3743%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1243%" y="549" width="0.0829%" height="15" fill="rgb(243,76,21)" fg:x="605" fg:w="1"/><text x="50.3743%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.25%)</title><rect x="50.0414%" y="597" width="0.2486%" height="15" fill="rgb(252,144,3)" fg:x="604" fg:w="3"/><text x="50.2914%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="50.2071%" y="581" width="0.0829%" height="15" fill="rgb(231,199,10)" fg:x="606" fg:w="1"/><text x="50.4571%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2071%" y="565" width="0.0829%" height="15" fill="rgb(215,18,11)" fg:x="606" fg:w="1"/><text x="50.4571%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="50.2900%" y="549" width="0.0829%" height="15" fill="rgb(241,65,24)" fg:x="607" fg:w="1"/><text x="50.5400%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2900%" y="533" width="0.0829%" height="15" fill="rgb(251,192,38)" fg:x="607" fg:w="1"/><text x="50.5400%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2900%" y="517" width="0.0829%" height="15" fill="rgb(205,9,35)" fg:x="607" fg:w="1"/><text x="50.5400%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="50.3728%" y="549" width="0.2486%" height="15" fill="rgb(229,225,49)" fg:x="608" fg:w="3"/><text x="50.6228%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="50.3728%" y="533" width="0.2486%" height="15" fill="rgb(207,125,39)" fg:x="608" fg:w="3"/><text x="50.6228%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="50.3728%" y="517" width="0.2486%" height="15" fill="rgb(222,78,19)" fg:x="608" fg:w="3"/><text x="50.6228%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="50.4557%" y="501" width="0.1657%" height="15" fill="rgb(248,207,20)" fg:x="609" fg:w="2"/><text x="50.7057%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="50.4557%" y="485" width="0.1657%" height="15" fill="rgb(205,103,49)" fg:x="609" fg:w="2"/><text x="50.7057%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="50.4557%" y="469" width="0.1657%" height="15" fill="rgb(216,42,28)" fg:x="609" fg:w="2"/><text x="50.7057%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="50.4557%" y="453" width="0.1657%" height="15" fill="rgb(213,205,53)" fg:x="609" fg:w="2"/><text x="50.7057%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5385%" y="437" width="0.0829%" height="15" fill="rgb(239,140,53)" fg:x="610" fg:w="1"/><text x="50.7885%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5385%" y="421" width="0.0829%" height="15" fill="rgb(248,95,9)" fg:x="610" fg:w="1"/><text x="50.7885%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.5385%" y="405" width="0.0829%" height="15" fill="rgb(254,58,47)" fg:x="610" fg:w="1"/><text x="50.7885%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.5385%" y="389" width="0.0829%" height="15" fill="rgb(234,227,14)" fg:x="610" fg:w="1"/><text x="50.7885%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.5385%" y="373" width="0.0829%" height="15" fill="rgb(205,192,45)" fg:x="610" fg:w="1"/><text x="50.7885%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="50.5385%" y="357" width="0.0829%" height="15" fill="rgb(253,187,31)" fg:x="610" fg:w="1"/><text x="50.7885%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="50.5385%" y="341" width="0.0829%" height="15" fill="rgb(222,6,32)" fg:x="610" fg:w="1"/><text x="50.7885%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.6214%" y="501" width="0.0829%" height="15" fill="rgb(249,190,19)" fg:x="611" fg:w="1"/><text x="50.8714%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6214%" y="485" width="0.0829%" height="15" fill="rgb(251,28,20)" fg:x="611" fg:w="1"/><text x="50.8714%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.6214%" y="469" width="0.0829%" height="15" fill="rgb(210,223,40)" fg:x="611" fg:w="1"/><text x="50.8714%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.6214%" y="453" width="0.0829%" height="15" fill="rgb(216,137,22)" fg:x="611" fg:w="1"/><text x="50.8714%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.6214%" y="437" width="0.0829%" height="15" fill="rgb(247,39,34)" fg:x="611" fg:w="1"/><text x="50.8714%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.6214%" y="421" width="0.0829%" height="15" fill="rgb(239,43,50)" fg:x="611" fg:w="1"/><text x="50.8714%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.6214%" y="405" width="0.0829%" height="15" fill="rgb(241,212,9)" fg:x="611" fg:w="1"/><text x="50.8714%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.6214%" y="389" width="0.0829%" height="15" fill="rgb(205,8,2)" fg:x="611" fg:w="1"/><text x="50.8714%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.6214%" y="373" width="0.0829%" height="15" fill="rgb(217,173,54)" fg:x="611" fg:w="1"/><text x="50.8714%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.6214%" y="357" width="0.0829%" height="15" fill="rgb(208,149,52)" fg:x="611" fg:w="1"/><text x="50.8714%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.6214%" y="341" width="0.0829%" height="15" fill="rgb(239,99,40)" fg:x="611" fg:w="1"/><text x="50.8714%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.6214%" y="325" width="0.0829%" height="15" fill="rgb(233,214,26)" fg:x="611" fg:w="1"/><text x="50.8714%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6214%" y="309" width="0.0829%" height="15" fill="rgb(231,225,37)" fg:x="611" fg:w="1"/><text x="50.8714%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="50.6214%" y="517" width="0.1657%" height="15" fill="rgb(252,55,35)" fg:x="611" fg:w="2"/><text x="50.8714%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7042%" y="501" width="0.0829%" height="15" fill="rgb(239,43,18)" fg:x="612" fg:w="1"/><text x="50.9542%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.33%)</title><rect x="49.7100%" y="613" width="1.3256%" height="15" fill="rgb(251,125,49)" fg:x="600" fg:w="16"/><text x="49.9600%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.75%)</title><rect x="50.2900%" y="597" width="0.7457%" height="15" fill="rgb(212,83,54)" fg:x="607" fg:w="9"/><text x="50.5400%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.75%)</title><rect x="50.2900%" y="581" width="0.7457%" height="15" fill="rgb(250,75,6)" fg:x="607" fg:w="9"/><text x="50.5400%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.75%)</title><rect x="50.2900%" y="565" width="0.7457%" height="15" fill="rgb(252,36,40)" fg:x="607" fg:w="9"/><text x="50.5400%" y="575.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.41%)</title><rect x="50.6214%" y="549" width="0.4143%" height="15" fill="rgb(230,91,51)" fg:x="611" fg:w="5"/><text x="50.8714%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.41%)</title><rect x="50.6214%" y="533" width="0.4143%" height="15" fill="rgb(212,92,28)" fg:x="611" fg:w="5"/><text x="50.8714%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.25%)</title><rect x="50.7871%" y="517" width="0.2486%" height="15" fill="rgb(227,13,22)" fg:x="613" fg:w="3"/><text x="51.0371%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="50.8699%" y="501" width="0.1657%" height="15" fill="rgb(239,204,32)" fg:x="614" fg:w="2"/><text x="51.1199%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="50.9528%" y="485" width="0.0829%" height="15" fill="rgb(228,49,41)" fg:x="615" fg:w="1"/><text x="51.2028%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="50.9528%" y="469" width="0.0829%" height="15" fill="rgb(206,95,6)" fg:x="615" fg:w="1"/><text x="51.2028%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="50.9528%" y="453" width="0.0829%" height="15" fill="rgb(251,20,14)" fg:x="615" fg:w="1"/><text x="51.2028%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="51.1185%" y="597" width="0.0829%" height="15" fill="rgb(214,99,28)" fg:x="617" fg:w="1"/><text x="51.3685%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.25%)</title><rect x="51.0356%" y="613" width="0.2486%" height="15" fill="rgb(239,122,54)" fg:x="616" fg:w="3"/><text x="51.2856%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="51.2013%" y="597" width="0.0829%" height="15" fill="rgb(218,217,46)" fg:x="618" fg:w="1"/><text x="51.4513%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="51.2013%" y="581" width="0.0829%" height="15" fill="rgb(249,106,28)" fg:x="618" fg:w="1"/><text x="51.4513%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="51.2013%" y="565" width="0.0829%" height="15" fill="rgb(250,158,18)" fg:x="618" fg:w="1"/><text x="51.4513%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.2013%" y="549" width="0.0829%" height="15" fill="rgb(226,137,29)" fg:x="618" fg:w="1"/><text x="51.4513%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.2013%" y="533" width="0.0829%" height="15" fill="rgb(210,188,1)" fg:x="618" fg:w="1"/><text x="51.4513%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2013%" y="517" width="0.0829%" height="15" fill="rgb(227,84,42)" fg:x="618" fg:w="1"/><text x="51.4513%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.2013%" y="501" width="0.0829%" height="15" fill="rgb(222,147,48)" fg:x="618" fg:w="1"/><text x="51.4513%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2013%" y="485" width="0.0829%" height="15" fill="rgb(241,150,43)" fg:x="618" fg:w="1"/><text x="51.4513%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.2013%" y="469" width="0.0829%" height="15" fill="rgb(206,139,52)" fg:x="618" fg:w="1"/><text x="51.4513%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2013%" y="453" width="0.0829%" height="15" fill="rgb(230,63,14)" fg:x="618" fg:w="1"/><text x="51.4513%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (20 samples, 1.66%)</title><rect x="49.7100%" y="645" width="1.6570%" height="15" fill="rgb(247,8,20)" fg:x="600" fg:w="20"/><text x="49.9600%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.66%)</title><rect x="49.7100%" y="629" width="1.6570%" height="15" fill="rgb(213,115,4)" fg:x="600" fg:w="20"/><text x="49.9600%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="51.2842%" y="613" width="0.0829%" height="15" fill="rgb(241,79,49)" fg:x="619" fg:w="1"/><text x="51.5342%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="51.2842%" y="597" width="0.0829%" height="15" fill="rgb(222,42,35)" fg:x="619" fg:w="1"/><text x="51.5342%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="51.2842%" y="581" width="0.0829%" height="15" fill="rgb(247,59,23)" fg:x="619" fg:w="1"/><text x="51.5342%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="51.2842%" y="565" width="0.0829%" height="15" fill="rgb(247,93,18)" fg:x="619" fg:w="1"/><text x="51.5342%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.2842%" y="549" width="0.0829%" height="15" fill="rgb(249,107,47)" fg:x="619" fg:w="1"/><text x="51.5342%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.2842%" y="533" width="0.0829%" height="15" fill="rgb(219,27,1)" fg:x="619" fg:w="1"/><text x="51.5342%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="51.8641%" y="613" width="0.0829%" height="15" fill="rgb(217,82,32)" fg:x="626" fg:w="1"/><text x="52.1141%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="51.8641%" y="597" width="0.0829%" height="15" fill="rgb(250,129,47)" fg:x="626" fg:w="1"/><text x="52.1141%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="51.8641%" y="581" width="0.0829%" height="15" fill="rgb(253,88,35)" fg:x="626" fg:w="1"/><text x="52.1141%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="565" width="0.0829%" height="15" fill="rgb(245,221,14)" fg:x="626" fg:w="1"/><text x="52.1141%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.8641%" y="549" width="0.0829%" height="15" fill="rgb(217,119,54)" fg:x="626" fg:w="1"/><text x="52.1141%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="533" width="0.0829%" height="15" fill="rgb(247,128,31)" fg:x="626" fg:w="1"/><text x="52.1141%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="517" width="0.0829%" height="15" fill="rgb(211,99,22)" fg:x="626" fg:w="1"/><text x="52.1141%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="501" width="0.0829%" height="15" fill="rgb(212,20,17)" fg:x="626" fg:w="1"/><text x="52.1141%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.8641%" y="485" width="0.0829%" height="15" fill="rgb(209,159,29)" fg:x="626" fg:w="1"/><text x="52.1141%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="469" width="0.0829%" height="15" fill="rgb(222,177,53)" fg:x="626" fg:w="1"/><text x="52.1141%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="453" width="0.0829%" height="15" fill="rgb(234,46,43)" fg:x="626" fg:w="1"/><text x="52.1141%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="437" width="0.0829%" height="15" fill="rgb(208,108,14)" fg:x="626" fg:w="1"/><text x="52.1141%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.8641%" y="421" width="0.0829%" height="15" fill="rgb(226,78,53)" fg:x="626" fg:w="1"/><text x="52.1141%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="405" width="0.0829%" height="15" fill="rgb(230,20,41)" fg:x="626" fg:w="1"/><text x="52.1141%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="389" width="0.0829%" height="15" fill="rgb(213,195,35)" fg:x="626" fg:w="1"/><text x="52.1141%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="373" width="0.0829%" height="15" fill="rgb(242,62,36)" fg:x="626" fg:w="1"/><text x="52.1141%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.8641%" y="357" width="0.0829%" height="15" fill="rgb(222,210,37)" fg:x="626" fg:w="1"/><text x="52.1141%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.8641%" y="341" width="0.0829%" height="15" fill="rgb(232,107,19)" fg:x="626" fg:w="1"/><text x="52.1141%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.8641%" y="325" width="0.0829%" height="15" fill="rgb(235,85,17)" fg:x="626" fg:w="1"/><text x="52.1141%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.8641%" y="309" width="0.0829%" height="15" fill="rgb(219,195,31)" fg:x="626" fg:w="1"/><text x="52.1141%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="51.8641%" y="293" width="0.0829%" height="15" fill="rgb(231,183,30)" fg:x="626" fg:w="1"/><text x="52.1141%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="51.8641%" y="277" width="0.0829%" height="15" fill="rgb(212,0,11)" fg:x="626" fg:w="1"/><text x="52.1141%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="51.8641%" y="261" width="0.0829%" height="15" fill="rgb(249,53,54)" fg:x="626" fg:w="1"/><text x="52.1141%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="51.8641%" y="245" width="0.0829%" height="15" fill="rgb(211,118,13)" fg:x="626" fg:w="1"/><text x="52.1141%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.8641%" y="229" width="0.0829%" height="15" fill="rgb(237,42,9)" fg:x="626" fg:w="1"/><text x="52.1141%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.8641%" y="213" width="0.0829%" height="15" fill="rgb(227,68,32)" fg:x="626" fg:w="1"/><text x="52.1141%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.8641%" y="197" width="0.0829%" height="15" fill="rgb(238,10,7)" fg:x="626" fg:w="1"/><text x="52.1141%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="51.8641%" y="181" width="0.0829%" height="15" fill="rgb(224,42,12)" fg:x="626" fg:w="1"/><text x="52.1141%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.8641%" y="165" width="0.0829%" height="15" fill="rgb(252,190,5)" fg:x="626" fg:w="1"/><text x="52.1141%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="51.8641%" y="149" width="0.0829%" height="15" fill="rgb(220,214,39)" fg:x="626" fg:w="1"/><text x="52.1141%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="51.8641%" y="133" width="0.0829%" height="15" fill="rgb(247,98,4)" fg:x="626" fg:w="1"/><text x="52.1141%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="51.8641%" y="117" width="0.0829%" height="15" fill="rgb(211,60,12)" fg:x="626" fg:w="1"/><text x="52.1141%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="51.8641%" y="101" width="0.0829%" height="15" fill="rgb(224,42,10)" fg:x="626" fg:w="1"/><text x="52.1141%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9470%" y="597" width="0.0829%" height="15" fill="rgb(217,167,4)" fg:x="627" fg:w="1"/><text x="52.1970%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.17%)</title><rect x="51.9470%" y="613" width="0.1657%" height="15" fill="rgb(253,18,17)" fg:x="627" fg:w="2"/><text x="52.1970%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="52.0298%" y="597" width="0.0829%" height="15" fill="rgb(249,186,44)" fg:x="628" fg:w="1"/><text x="52.2798%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.0298%" y="581" width="0.0829%" height="15" fill="rgb(254,124,54)" fg:x="628" fg:w="1"/><text x="52.2798%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.0298%" y="565" width="0.0829%" height="15" fill="rgb(220,124,39)" fg:x="628" fg:w="1"/><text x="52.2798%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.0298%" y="549" width="0.0829%" height="15" fill="rgb(225,96,46)" fg:x="628" fg:w="1"/><text x="52.2798%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.0298%" y="533" width="0.0829%" height="15" fill="rgb(221,106,12)" fg:x="628" fg:w="1"/><text x="52.2798%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.0298%" y="517" width="0.0829%" height="15" fill="rgb(227,133,23)" fg:x="628" fg:w="1"/><text x="52.2798%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0298%" y="501" width="0.0829%" height="15" fill="rgb(216,44,52)" fg:x="628" fg:w="1"/><text x="52.2798%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.1127%" y="533" width="0.0829%" height="15" fill="rgb(239,149,7)" fg:x="629" fg:w="1"/><text x="52.3627%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.1127%" y="517" width="0.0829%" height="15" fill="rgb(211,157,31)" fg:x="629" fg:w="1"/><text x="52.3627%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.1127%" y="501" width="0.0829%" height="15" fill="rgb(206,215,22)" fg:x="629" fg:w="1"/><text x="52.3627%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.1127%" y="485" width="0.0829%" height="15" fill="rgb(208,113,15)" fg:x="629" fg:w="1"/><text x="52.3627%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.1127%" y="469" width="0.0829%" height="15" fill="rgb(207,189,15)" fg:x="629" fg:w="1"/><text x="52.3627%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1127%" y="453" width="0.0829%" height="15" fill="rgb(231,115,4)" fg:x="629" fg:w="1"/><text x="52.3627%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.1955%" y="533" width="0.0829%" height="15" fill="rgb(253,117,2)" fg:x="630" fg:w="1"/><text x="52.4455%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.1955%" y="517" width="0.0829%" height="15" fill="rgb(248,48,24)" fg:x="630" fg:w="1"/><text x="52.4455%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.1955%" y="501" width="0.0829%" height="15" fill="rgb(241,28,46)" fg:x="630" fg:w="1"/><text x="52.4455%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.1955%" y="485" width="0.0829%" height="15" fill="rgb(216,165,52)" fg:x="630" fg:w="1"/><text x="52.4455%" y="495.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="52.1127%" y="565" width="0.3314%" height="15" fill="rgb(220,222,34)" fg:x="629" fg:w="4"/><text x="52.3627%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="52.1127%" y="549" width="0.3314%" height="15" fill="rgb(247,222,49)" fg:x="629" fg:w="4"/><text x="52.3627%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="52.2784%" y="533" width="0.1657%" height="15" fill="rgb(240,10,31)" fg:x="631" fg:w="2"/><text x="52.5284%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="52.2784%" y="517" width="0.1657%" height="15" fill="rgb(221,199,35)" fg:x="631" fg:w="2"/><text x="52.5284%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="52.2784%" y="501" width="0.1657%" height="15" fill="rgb(230,223,11)" fg:x="631" fg:w="2"/><text x="52.5284%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="52.2784%" y="485" width="0.1657%" height="15" fill="rgb(218,82,45)" fg:x="631" fg:w="2"/><text x="52.5284%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="52.2784%" y="469" width="0.1657%" height="15" fill="rgb(233,213,33)" fg:x="631" fg:w="2"/><text x="52.5284%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="52.2784%" y="453" width="0.1657%" height="15" fill="rgb(210,143,52)" fg:x="631" fg:w="2"/><text x="52.5284%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="52.2784%" y="437" width="0.1657%" height="15" fill="rgb(206,95,4)" fg:x="631" fg:w="2"/><text x="52.5284%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="52.2784%" y="421" width="0.1657%" height="15" fill="rgb(246,164,46)" fg:x="631" fg:w="2"/><text x="52.5284%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="52.2784%" y="405" width="0.1657%" height="15" fill="rgb(213,210,47)" fg:x="631" fg:w="2"/><text x="52.5284%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="52.2784%" y="389" width="0.1657%" height="15" fill="rgb(210,12,38)" fg:x="631" fg:w="2"/><text x="52.5284%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="52.3612%" y="373" width="0.0829%" height="15" fill="rgb(252,192,54)" fg:x="632" fg:w="1"/><text x="52.6112%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="52.3612%" y="357" width="0.0829%" height="15" fill="rgb(242,92,6)" fg:x="632" fg:w="1"/><text x="52.6112%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.99%)</title><rect x="51.6156%" y="629" width="0.9942%" height="15" fill="rgb(253,154,15)" fg:x="623" fg:w="12"/><text x="51.8656%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.50%)</title><rect x="52.1127%" y="613" width="0.4971%" height="15" fill="rgb(209,20,43)" fg:x="629" fg:w="6"/><text x="52.3627%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.50%)</title><rect x="52.1127%" y="597" width="0.4971%" height="15" fill="rgb(232,28,49)" fg:x="629" fg:w="6"/><text x="52.3627%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.50%)</title><rect x="52.1127%" y="581" width="0.4971%" height="15" fill="rgb(248,131,53)" fg:x="629" fg:w="6"/><text x="52.3627%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.17%)</title><rect x="52.4441%" y="565" width="0.1657%" height="15" fill="rgb(214,16,30)" fg:x="633" fg:w="2"/><text x="52.6941%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="52.4441%" y="549" width="0.1657%" height="15" fill="rgb(245,16,0)" fg:x="633" fg:w="2"/><text x="52.6941%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5269%" y="533" width="0.0829%" height="15" fill="rgb(245,17,35)" fg:x="634" fg:w="1"/><text x="52.7769%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5269%" y="517" width="0.0829%" height="15" fill="rgb(249,27,53)" fg:x="634" fg:w="1"/><text x="52.7769%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="52.6098%" y="597" width="0.0829%" height="15" fill="rgb(214,73,24)" fg:x="635" fg:w="1"/><text x="52.8598%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.6098%" y="581" width="0.0829%" height="15" fill="rgb(223,84,37)" fg:x="635" fg:w="1"/><text x="52.8598%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.6098%" y="565" width="0.0829%" height="15" fill="rgb(210,109,28)" fg:x="635" fg:w="1"/><text x="52.8598%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6098%" y="549" width="0.0829%" height="15" fill="rgb(208,186,6)" fg:x="635" fg:w="1"/><text x="52.8598%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.6098%" y="533" width="0.0829%" height="15" fill="rgb(235,201,30)" fg:x="635" fg:w="1"/><text x="52.8598%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6098%" y="517" width="0.0829%" height="15" fill="rgb(216,198,48)" fg:x="635" fg:w="1"/><text x="52.8598%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="52.6926%" y="581" width="0.0829%" height="15" fill="rgb(254,186,25)" fg:x="636" fg:w="1"/><text x="52.9426%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.6926%" y="565" width="0.0829%" height="15" fill="rgb(227,87,5)" fg:x="636" fg:w="1"/><text x="52.9426%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.33%)</title><rect x="52.6098%" y="629" width="0.3314%" height="15" fill="rgb(236,205,25)" fg:x="635" fg:w="4"/><text x="52.8598%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.33%)</title><rect x="52.6098%" y="613" width="0.3314%" height="15" fill="rgb(229,99,32)" fg:x="635" fg:w="4"/><text x="52.8598%" y="623.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.25%)</title><rect x="52.6926%" y="597" width="0.2486%" height="15" fill="rgb(231,177,31)" fg:x="636" fg:w="3"/><text x="52.9426%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="52.7755%" y="581" width="0.1657%" height="15" fill="rgb(246,15,2)" fg:x="637" fg:w="2"/><text x="53.0255%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="52.7755%" y="565" width="0.1657%" height="15" fill="rgb(207,39,15)" fg:x="637" fg:w="2"/><text x="53.0255%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="52.7755%" y="549" width="0.1657%" height="15" fill="rgb(207,44,9)" fg:x="637" fg:w="2"/><text x="53.0255%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="52.9412%" y="613" width="0.0829%" height="15" fill="rgb(225,224,33)" fg:x="639" fg:w="1"/><text x="53.1912%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="52.9412%" y="597" width="0.0829%" height="15" fill="rgb(252,151,3)" fg:x="639" fg:w="1"/><text x="53.1912%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="52.9412%" y="581" width="0.0829%" height="15" fill="rgb(211,140,13)" fg:x="639" fg:w="1"/><text x="53.1912%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="52.9412%" y="565" width="0.0829%" height="15" fill="rgb(239,225,17)" fg:x="639" fg:w="1"/><text x="53.1912%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.9412%" y="549" width="0.0829%" height="15" fill="rgb(223,170,52)" fg:x="639" fg:w="1"/><text x="53.1912%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.9412%" y="533" width="0.0829%" height="15" fill="rgb(212,64,21)" fg:x="639" fg:w="1"/><text x="53.1912%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.9412%" y="517" width="0.0829%" height="15" fill="rgb(236,126,48)" fg:x="639" fg:w="1"/><text x="53.1912%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.9412%" y="501" width="0.0829%" height="15" fill="rgb(209,135,11)" fg:x="639" fg:w="1"/><text x="53.1912%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.9412%" y="485" width="0.0829%" height="15" fill="rgb(228,126,40)" fg:x="639" fg:w="1"/><text x="53.1912%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (584 samples, 48.38%)</title><rect x="4.7225%" y="661" width="48.3844%" height="15" fill="rgb(205,196,36)" fg:x="57" fg:w="584"/><text x="4.9725%" y="671.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (21 samples, 1.74%)</title><rect x="51.3670%" y="645" width="1.7399%" height="15" fill="rgb(243,160,33)" fg:x="620" fg:w="21"/><text x="51.6170%" y="655.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.17%)</title><rect x="52.9412%" y="629" width="0.1657%" height="15" fill="rgb(210,84,20)" fg:x="639" fg:w="2"/><text x="53.1912%" y="639.50"></text></g><g><title>kernel::model::entity::build_entity (1 samples, 0.08%)</title><rect x="53.0240%" y="613" width="0.0829%" height="15" fill="rgb(228,213,30)" fg:x="640" fg:w="1"/><text x="53.2740%" y="623.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="53.0240%" y="597" width="0.0829%" height="15" fill="rgb(252,33,45)" fg:x="640" fg:w="1"/><text x="53.2740%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (3 samples, 0.25%)</title><rect x="53.1069%" y="661" width="0.2486%" height="15" fill="rgb(254,227,20)" fg:x="641" fg:w="3"/><text x="53.3569%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.25%)</title><rect x="53.1069%" y="645" width="0.2486%" height="15" fill="rgb(228,192,2)" fg:x="641" fg:w="3"/><text x="53.3569%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.17%)</title><rect x="53.1897%" y="629" width="0.1657%" height="15" fill="rgb(233,32,8)" fg:x="642" fg:w="2"/><text x="53.4397%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="53.1897%" y="613" width="0.1657%" height="15" fill="rgb(220,146,47)" fg:x="642" fg:w="2"/><text x="53.4397%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="53.1897%" y="597" width="0.1657%" height="15" fill="rgb(246,194,1)" fg:x="642" fg:w="2"/><text x="53.4397%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="53.3554%" y="645" width="0.0829%" height="15" fill="rgb(218,203,9)" fg:x="644" fg:w="1"/><text x="53.6054%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.3554%" y="629" width="0.0829%" height="15" fill="rgb(237,97,14)" fg:x="644" fg:w="1"/><text x="53.6054%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="53.4383%" y="581" width="0.0829%" height="15" fill="rgb(239,76,15)" fg:x="645" fg:w="1"/><text x="53.6883%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.4383%" y="565" width="0.0829%" height="15" fill="rgb(222,53,45)" fg:x="645" fg:w="1"/><text x="53.6883%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.4383%" y="549" width="0.0829%" height="15" fill="rgb(237,88,5)" fg:x="645" fg:w="1"/><text x="53.6883%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.4383%" y="533" width="0.0829%" height="15" fill="rgb(218,223,35)" fg:x="645" fg:w="1"/><text x="53.6883%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.4383%" y="517" width="0.0829%" height="15" fill="rgb(243,229,38)" fg:x="645" fg:w="1"/><text x="53.6883%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="53.6040%" y="549" width="0.2486%" height="15" fill="rgb(240,75,41)" fg:x="647" fg:w="3"/><text x="53.8540%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="53.6868%" y="533" width="0.1657%" height="15" fill="rgb(209,110,37)" fg:x="648" fg:w="2"/><text x="53.9368%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.7697%" y="517" width="0.0829%" height="15" fill="rgb(221,130,46)" fg:x="649" fg:w="1"/><text x="54.0197%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="53.7697%" y="501" width="0.0829%" height="15" fill="rgb(237,160,20)" fg:x="649" fg:w="1"/><text x="54.0197%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.41%)</title><rect x="53.5211%" y="565" width="0.4143%" height="15" fill="rgb(234,126,24)" fg:x="646" fg:w="5"/><text x="53.7711%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="53.8525%" y="549" width="0.0829%" height="15" fill="rgb(207,177,9)" fg:x="650" fg:w="1"/><text x="54.1025%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="54.0182%" y="549" width="0.0829%" height="15" fill="rgb(231,191,33)" fg:x="652" fg:w="1"/><text x="54.2682%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="54.0182%" y="533" width="0.0829%" height="15" fill="rgb(207,42,1)" fg:x="652" fg:w="1"/><text x="54.2682%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="54.0182%" y="517" width="0.0829%" height="15" fill="rgb(218,34,50)" fg:x="652" fg:w="1"/><text x="54.2682%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="54.1011%" y="501" width="0.0829%" height="15" fill="rgb(254,126,39)" fg:x="653" fg:w="1"/><text x="54.3511%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="54.1839%" y="501" width="0.2486%" height="15" fill="rgb(251,17,26)" fg:x="654" fg:w="3"/><text x="54.4339%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="54.2668%" y="485" width="0.1657%" height="15" fill="rgb(252,215,34)" fg:x="655" fg:w="2"/><text x="54.5168%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="54.3496%" y="469" width="0.0829%" height="15" fill="rgb(217,120,44)" fg:x="656" fg:w="1"/><text x="54.5996%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="54.3496%" y="453" width="0.0829%" height="15" fill="rgb(211,31,11)" fg:x="656" fg:w="1"/><text x="54.5996%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.3496%" y="437" width="0.0829%" height="15" fill="rgb(222,69,51)" fg:x="656" fg:w="1"/><text x="54.5996%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="54.1011%" y="533" width="0.4143%" height="15" fill="rgb(215,229,42)" fg:x="653" fg:w="5"/><text x="54.3511%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="54.1011%" y="517" width="0.4143%" height="15" fill="rgb(212,102,15)" fg:x="653" fg:w="5"/><text x="54.3511%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="54.4325%" y="501" width="0.0829%" height="15" fill="rgb(205,179,41)" fg:x="657" fg:w="1"/><text x="54.6825%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="54.4325%" y="485" width="0.0829%" height="15" fill="rgb(219,148,46)" fg:x="657" fg:w="1"/><text x="54.6825%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.4325%" y="469" width="0.0829%" height="15" fill="rgb(243,40,19)" fg:x="657" fg:w="1"/><text x="54.6825%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="54.5153%" y="533" width="0.4143%" height="15" fill="rgb(208,206,34)" fg:x="658" fg:w="5"/><text x="54.7653%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="54.5982%" y="517" width="0.3314%" height="15" fill="rgb(244,184,38)" fg:x="659" fg:w="4"/><text x="54.8482%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="54.7639%" y="501" width="0.1657%" height="15" fill="rgb(244,151,47)" fg:x="661" fg:w="2"/><text x="55.0139%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="54.8467%" y="485" width="0.0829%" height="15" fill="rgb(236,134,42)" fg:x="662" fg:w="1"/><text x="55.0967%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="55.0124%" y="517" width="0.1657%" height="15" fill="rgb(233,93,22)" fg:x="664" fg:w="2"/><text x="55.2624%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="55.0124%" y="501" width="0.1657%" height="15" fill="rgb(211,202,10)" fg:x="664" fg:w="2"/><text x="55.2624%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="55.1781%" y="501" width="0.1657%" height="15" fill="rgb(240,63,8)" fg:x="666" fg:w="2"/><text x="55.4281%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="55.1781%" y="485" width="0.1657%" height="15" fill="rgb(214,9,4)" fg:x="666" fg:w="2"/><text x="55.4281%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="55.2610%" y="469" width="0.0829%" height="15" fill="rgb(243,66,45)" fg:x="667" fg:w="1"/><text x="55.5110%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="55.2610%" y="453" width="0.0829%" height="15" fill="rgb(220,50,42)" fg:x="667" fg:w="1"/><text x="55.5110%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="55.3438%" y="485" width="0.1657%" height="15" fill="rgb(220,134,27)" fg:x="668" fg:w="2"/><text x="55.5938%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="55.4267%" y="469" width="0.0829%" height="15" fill="rgb(246,151,50)" fg:x="669" fg:w="1"/><text x="55.6767%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="55.4267%" y="453" width="0.0829%" height="15" fill="rgb(238,216,27)" fg:x="669" fg:w="1"/><text x="55.6767%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.4267%" y="437" width="0.0829%" height="15" fill="rgb(250,92,11)" fg:x="669" fg:w="1"/><text x="55.6767%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="55.5924%" y="469" width="0.3314%" height="15" fill="rgb(248,183,6)" fg:x="671" fg:w="4"/><text x="55.8424%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="55.6752%" y="453" width="0.2486%" height="15" fill="rgb(211,204,50)" fg:x="672" fg:w="3"/><text x="55.9252%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="55.8409%" y="437" width="0.0829%" height="15" fill="rgb(252,55,47)" fg:x="674" fg:w="1"/><text x="56.0909%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.8409%" y="421" width="0.0829%" height="15" fill="rgb(240,198,32)" fg:x="674" fg:w="1"/><text x="56.0909%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="55.8409%" y="405" width="0.0829%" height="15" fill="rgb(224,203,19)" fg:x="674" fg:w="1"/><text x="56.0909%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="55.8409%" y="389" width="0.0829%" height="15" fill="rgb(205,27,16)" fg:x="674" fg:w="1"/><text x="56.0909%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="55.8409%" y="373" width="0.0829%" height="15" fill="rgb(224,226,17)" fg:x="674" fg:w="1"/><text x="56.0909%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.58%)</title><rect x="55.5095%" y="485" width="0.5800%" height="15" fill="rgb(205,216,54)" fg:x="670" fg:w="7"/><text x="55.7595%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="55.9238%" y="469" width="0.1657%" height="15" fill="rgb(248,168,46)" fg:x="675" fg:w="2"/><text x="56.1738%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.24%)</title><rect x="54.1011%" y="549" width="2.2370%" height="15" fill="rgb(226,111,45)" fg:x="653" fg:w="27"/><text x="54.3511%" y="559.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.41%)</title><rect x="54.9296%" y="533" width="1.4085%" height="15" fill="rgb(231,15,9)" fg:x="663" fg:w="17"/><text x="55.1796%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.16%)</title><rect x="55.1781%" y="517" width="1.1599%" height="15" fill="rgb(243,168,3)" fg:x="666" fg:w="14"/><text x="55.4281%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.99%)</title><rect x="55.3438%" y="501" width="0.9942%" height="15" fill="rgb(221,220,54)" fg:x="668" fg:w="12"/><text x="55.5938%" y="511.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="56.0895%" y="485" width="0.2486%" height="15" fill="rgb(232,174,38)" fg:x="677" fg:w="3"/><text x="56.3395%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="56.1723%" y="469" width="0.1657%" height="15" fill="rgb(205,14,38)" fg:x="678" fg:w="2"/><text x="56.4223%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.2552%" y="453" width="0.0829%" height="15" fill="rgb(234,89,19)" fg:x="679" fg:w="1"/><text x="56.5052%" y="463.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="56.8351%" y="469" width="0.0829%" height="15" fill="rgb(216,68,51)" fg:x="686" fg:w="1"/><text x="57.0851%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="56.8351%" y="453" width="0.0829%" height="15" fill="rgb(213,49,2)" fg:x="686" fg:w="1"/><text x="57.0851%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 3.07%)</title><rect x="53.9354%" y="565" width="3.0655%" height="15" fill="rgb(242,146,30)" fg:x="651" fg:w="37"/><text x="54.1854%" y="575.50">ser..</text></g><g><title>std::io::Write::write_all (8 samples, 0.66%)</title><rect x="56.3380%" y="549" width="0.6628%" height="15" fill="rgb(224,188,11)" fg:x="680" fg:w="8"/><text x="56.5880%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.50%)</title><rect x="56.5037%" y="533" width="0.4971%" height="15" fill="rgb(213,159,11)" fg:x="682" fg:w="6"/><text x="56.7537%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.50%)</title><rect x="56.5037%" y="517" width="0.4971%" height="15" fill="rgb(229,13,31)" fg:x="682" fg:w="6"/><text x="56.7537%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.25%)</title><rect x="56.7523%" y="501" width="0.2486%" height="15" fill="rgb(209,103,11)" fg:x="685" fg:w="3"/><text x="57.0023%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="56.8351%" y="485" width="0.1657%" height="15" fill="rgb(206,3,4)" fg:x="686" fg:w="2"/><text x="57.0851%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="56.9180%" y="469" width="0.0829%" height="15" fill="rgb(252,10,49)" fg:x="687" fg:w="1"/><text x="57.1680%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.65%)</title><rect x="53.5211%" y="581" width="3.6454%" height="15" fill="rgb(217,160,32)" fg:x="646" fg:w="44"/><text x="53.7711%" y="591.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="57.0008%" y="565" width="0.1657%" height="15" fill="rgb(249,196,0)" fg:x="688" fg:w="2"/><text x="57.2508%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="57.0008%" y="549" width="0.1657%" height="15" fill="rgb(213,17,48)" fg:x="688" fg:w="2"/><text x="57.2508%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="57.0008%" y="533" width="0.1657%" height="15" fill="rgb(206,42,46)" fg:x="688" fg:w="2"/><text x="57.2508%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2494%" y="549" width="0.0829%" height="15" fill="rgb(212,105,24)" fg:x="691" fg:w="1"/><text x="57.4994%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="57.3322%" y="517" width="0.1657%" height="15" fill="rgb(243,216,30)" fg:x="692" fg:w="2"/><text x="57.5822%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="57.4979%" y="517" width="0.1657%" height="15" fill="rgb(207,121,3)" fg:x="694" fg:w="2"/><text x="57.7479%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.5808%" y="501" width="0.0829%" height="15" fill="rgb(249,78,0)" fg:x="695" fg:w="1"/><text x="57.8308%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="57.8293%" y="501" width="0.1657%" height="15" fill="rgb(244,151,32)" fg:x="698" fg:w="2"/><text x="58.0793%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.91%)</title><rect x="57.1665%" y="581" width="0.9114%" height="15" fill="rgb(228,63,25)" fg:x="690" fg:w="11"/><text x="57.4165%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.91%)</title><rect x="57.1665%" y="565" width="0.9114%" height="15" fill="rgb(231,158,23)" fg:x="690" fg:w="11"/><text x="57.4165%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.75%)</title><rect x="57.3322%" y="549" width="0.7457%" height="15" fill="rgb(248,107,23)" fg:x="692" fg:w="9"/><text x="57.5822%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.75%)</title><rect x="57.3322%" y="533" width="0.7457%" height="15" fill="rgb(215,168,21)" fg:x="692" fg:w="9"/><text x="57.5822%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="57.6636%" y="517" width="0.4143%" height="15" fill="rgb(227,83,22)" fg:x="696" fg:w="5"/><text x="57.9136%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.9950%" y="501" width="0.0829%" height="15" fill="rgb(217,118,43)" fg:x="700" fg:w="1"/><text x="58.2450%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.9950%" y="485" width="0.0829%" height="15" fill="rgb(229,220,41)" fg:x="700" fg:w="1"/><text x="58.2450%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.9950%" y="469" width="0.0829%" height="15" fill="rgb(254,146,46)" fg:x="700" fg:w="1"/><text x="58.2450%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.9950%" y="453" width="0.0829%" height="15" fill="rgb(233,208,31)" fg:x="700" fg:w="1"/><text x="58.2450%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="58.0779%" y="517" width="0.1657%" height="15" fill="rgb(222,162,7)" fg:x="701" fg:w="2"/><text x="58.3279%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.4093%" y="485" width="0.0829%" height="15" fill="rgb(230,117,45)" fg:x="705" fg:w="1"/><text x="58.6593%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.4093%" y="469" width="0.0829%" height="15" fill="rgb(239,163,6)" fg:x="705" fg:w="1"/><text x="58.6593%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.4921%" y="469" width="0.0829%" height="15" fill="rgb(246,130,17)" fg:x="706" fg:w="1"/><text x="58.7421%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.4921%" y="453" width="0.0829%" height="15" fill="rgb(216,84,5)" fg:x="706" fg:w="1"/><text x="58.7421%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.17%)</title><rect x="58.5750%" y="469" width="0.1657%" height="15" fill="rgb(230,200,21)" fg:x="707" fg:w="2"/><text x="58.8250%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="58.5750%" y="453" width="0.1657%" height="15" fill="rgb(224,2,8)" fg:x="707" fg:w="2"/><text x="58.8250%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="58.5750%" y="437" width="0.1657%" height="15" fill="rgb(238,178,10)" fg:x="707" fg:w="2"/><text x="58.8250%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8235%" y="453" width="0.0829%" height="15" fill="rgb(242,153,24)" fg:x="710" fg:w="1"/><text x="59.0735%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.91%)</title><rect x="58.0779%" y="549" width="0.9114%" height="15" fill="rgb(242,32,48)" fg:x="701" fg:w="11"/><text x="58.3279%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.91%)</title><rect x="58.0779%" y="533" width="0.9114%" height="15" fill="rgb(227,36,0)" fg:x="701" fg:w="11"/><text x="58.3279%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.75%)</title><rect x="58.2436%" y="517" width="0.7457%" height="15" fill="rgb(251,33,35)" fg:x="703" fg:w="9"/><text x="58.4936%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="58.3264%" y="501" width="0.6628%" height="15" fill="rgb(232,168,51)" fg:x="704" fg:w="8"/><text x="58.5764%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.50%)</title><rect x="58.4921%" y="485" width="0.4971%" height="15" fill="rgb(228,56,10)" fg:x="706" fg:w="6"/><text x="58.7421%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="58.7407%" y="469" width="0.2486%" height="15" fill="rgb(231,10,26)" fg:x="709" fg:w="3"/><text x="58.9907%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.9064%" y="453" width="0.0829%" height="15" fill="rgb(226,202,12)" fg:x="711" fg:w="1"/><text x="59.1564%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.9064%" y="437" width="0.0829%" height="15" fill="rgb(251,49,21)" fg:x="711" fg:w="1"/><text x="59.1564%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.9064%" y="421" width="0.0829%" height="15" fill="rgb(206,228,28)" fg:x="711" fg:w="1"/><text x="59.1564%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (14 samples, 1.16%)</title><rect x="58.0779%" y="565" width="1.1599%" height="15" fill="rgb(205,198,31)" fg:x="701" fg:w="14"/><text x="58.3279%" y="575.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.25%)</title><rect x="58.9892%" y="549" width="0.2486%" height="15" fill="rgb(213,69,1)" fg:x="712" fg:w="3"/><text x="59.2392%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="58.9892%" y="533" width="0.2486%" height="15" fill="rgb(209,177,9)" fg:x="712" fg:w="3"/><text x="59.2392%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.1549%" y="517" width="0.0829%" height="15" fill="rgb(227,119,30)" fg:x="714" fg:w="1"/><text x="59.4049%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="59.2378%" y="565" width="0.0829%" height="15" fill="rgb(234,106,41)" fg:x="715" fg:w="1"/><text x="59.4878%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2378%" y="549" width="0.0829%" height="15" fill="rgb(244,103,47)" fg:x="715" fg:w="1"/><text x="59.4878%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.9006%" y="533" width="0.0829%" height="15" fill="rgb(212,211,25)" fg:x="723" fg:w="1"/><text x="60.1506%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.9834%" y="533" width="0.0829%" height="15" fill="rgb(208,63,53)" fg:x="724" fg:w="1"/><text x="60.2334%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.50%)</title><rect x="60.0663%" y="533" width="0.4971%" height="15" fill="rgb(213,176,21)" fg:x="725" fg:w="6"/><text x="60.3163%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="60.2320%" y="517" width="0.3314%" height="15" fill="rgb(243,124,12)" fg:x="727" fg:w="4"/><text x="60.4820%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.4805%" y="501" width="0.0829%" height="15" fill="rgb(239,2,35)" fg:x="730" fg:w="1"/><text x="60.7305%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8119%" y="501" width="0.0829%" height="15" fill="rgb(253,169,22)" fg:x="734" fg:w="1"/><text x="61.0619%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (5 samples, 0.41%)</title><rect x="60.5634%" y="533" width="0.4143%" height="15" fill="rgb(254,51,12)" fg:x="731" fg:w="5"/><text x="60.8134%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="60.6462%" y="517" width="0.3314%" height="15" fill="rgb(244,17,47)" fg:x="732" fg:w="4"/><text x="60.8962%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="60.8948%" y="501" width="0.0829%" height="15" fill="rgb(251,45,46)" fg:x="735" fg:w="1"/><text x="61.1448%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="60.8948%" y="485" width="0.0829%" height="15" fill="rgb(223,87,43)" fg:x="735" fg:w="1"/><text x="61.1448%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="60.9776%" y="533" width="0.0829%" height="15" fill="rgb(230,132,31)" fg:x="736" fg:w="1"/><text x="61.2276%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="60.9776%" y="517" width="0.0829%" height="15" fill="rgb(206,99,1)" fg:x="736" fg:w="1"/><text x="61.2276%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9776%" y="501" width="0.0829%" height="15" fill="rgb(227,110,25)" fg:x="736" fg:w="1"/><text x="61.2276%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9776%" y="485" width="0.0829%" height="15" fill="rgb(217,182,7)" fg:x="736" fg:w="1"/><text x="61.2276%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9776%" y="469" width="0.0829%" height="15" fill="rgb(250,176,4)" fg:x="736" fg:w="1"/><text x="61.2276%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.17%)</title><rect x="61.0605%" y="533" width="0.1657%" height="15" fill="rgb(244,98,30)" fg:x="737" fg:w="2"/><text x="61.3105%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="61.0605%" y="517" width="0.1657%" height="15" fill="rgb(228,150,42)" fg:x="737" fg:w="2"/><text x="61.3105%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="61.0605%" y="501" width="0.1657%" height="15" fill="rgb(231,91,46)" fg:x="737" fg:w="2"/><text x="61.3105%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1433%" y="485" width="0.0829%" height="15" fill="rgb(252,161,32)" fg:x="738" fg:w="1"/><text x="61.3933%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="61.3090%" y="517" width="0.0829%" height="15" fill="rgb(236,69,41)" fg:x="740" fg:w="1"/><text x="61.5590%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="61.5576%" y="485" width="0.2486%" height="15" fill="rgb(212,160,3)" fg:x="743" fg:w="3"/><text x="61.8076%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="61.5576%" y="469" width="0.2486%" height="15" fill="rgb(216,5,50)" fg:x="743" fg:w="3"/><text x="61.8076%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="61.5576%" y="453" width="0.2486%" height="15" fill="rgb(241,138,25)" fg:x="743" fg:w="3"/><text x="61.8076%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="61.8061%" y="485" width="0.4143%" height="15" fill="rgb(239,42,18)" fg:x="746" fg:w="5"/><text x="62.0561%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="61.8890%" y="469" width="0.3314%" height="15" fill="rgb(239,40,7)" fg:x="747" fg:w="4"/><text x="62.1390%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="61.9718%" y="453" width="0.2486%" height="15" fill="rgb(239,11,31)" fg:x="748" fg:w="3"/><text x="62.2218%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="62.0547%" y="437" width="0.1657%" height="15" fill="rgb(224,77,40)" fg:x="749" fg:w="2"/><text x="62.3047%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="62.0547%" y="421" width="0.1657%" height="15" fill="rgb(226,15,5)" fg:x="749" fg:w="2"/><text x="62.3047%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="62.0547%" y="405" width="0.1657%" height="15" fill="rgb(254,188,5)" fg:x="749" fg:w="2"/><text x="62.3047%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="62.8003%" y="453" width="0.4143%" height="15" fill="rgb(241,148,52)" fg:x="758" fg:w="5"/><text x="63.0503%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="62.9660%" y="437" width="0.2486%" height="15" fill="rgb(251,48,36)" fg:x="760" fg:w="3"/><text x="63.2160%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="62.9660%" y="421" width="0.2486%" height="15" fill="rgb(243,83,13)" fg:x="760" fg:w="3"/><text x="63.2160%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="63.2974%" y="437" width="0.0829%" height="15" fill="rgb(210,105,0)" fg:x="764" fg:w="1"/><text x="63.5474%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3803%" y="421" width="0.0829%" height="15" fill="rgb(239,60,36)" fg:x="765" fg:w="1"/><text x="63.6303%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3803%" y="405" width="0.0829%" height="15" fill="rgb(210,20,0)" fg:x="765" fg:w="1"/><text x="63.6303%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.3803%" y="389" width="0.0829%" height="15" fill="rgb(244,26,53)" fg:x="765" fg:w="1"/><text x="63.6303%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="63.8774%" y="357" width="0.4143%" height="15" fill="rgb(240,100,49)" fg:x="771" fg:w="5"/><text x="64.1274%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="63.8774%" y="341" width="0.4143%" height="15" fill="rgb(250,46,45)" fg:x="771" fg:w="5"/><text x="64.1274%" y="351.50"></text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="63.9602%" y="325" width="0.3314%" height="15" fill="rgb(220,181,29)" fg:x="772" fg:w="4"/><text x="64.2102%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.99%)</title><rect x="63.3803%" y="437" width="0.9942%" height="15" fill="rgb(213,137,33)" fg:x="765" fg:w="12"/><text x="63.6303%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.91%)</title><rect x="63.4631%" y="421" width="0.9114%" height="15" fill="rgb(213,27,48)" fg:x="766" fg:w="11"/><text x="63.7131%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.91%)</title><rect x="63.4631%" y="405" width="0.9114%" height="15" fill="rgb(245,180,39)" fg:x="766" fg:w="11"/><text x="63.7131%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.58%)</title><rect x="63.7945%" y="389" width="0.5800%" height="15" fill="rgb(212,158,42)" fg:x="770" fg:w="7"/><text x="64.0445%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.50%)</title><rect x="63.8774%" y="373" width="0.4971%" height="15" fill="rgb(228,193,18)" fg:x="771" fg:w="6"/><text x="64.1274%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="64.2916%" y="357" width="0.0829%" height="15" fill="rgb(245,172,29)" fg:x="776" fg:w="1"/><text x="64.5416%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (38 samples, 3.15%)</title><rect x="61.3919%" y="517" width="3.1483%" height="15" fill="rgb(207,98,24)" fg:x="741" fg:w="38"/><text x="61.6419%" y="527.50">&lt;se..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (36 samples, 2.98%)</title><rect x="61.5576%" y="501" width="2.9826%" height="15" fill="rgb(249,92,26)" fg:x="743" fg:w="36"/><text x="61.8076%" y="511.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (28 samples, 2.32%)</title><rect x="62.2204%" y="485" width="2.3198%" height="15" fill="rgb(217,176,26)" fg:x="751" fg:w="28"/><text x="62.4704%" y="495.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.07%)</title><rect x="62.4689%" y="469" width="2.0713%" height="15" fill="rgb(221,8,39)" fg:x="754" fg:w="25"/><text x="62.7189%" y="479.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.33%)</title><rect x="63.2146%" y="453" width="1.3256%" height="15" fill="rgb(208,90,18)" fg:x="763" fg:w="16"/><text x="63.4646%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="64.3745%" y="437" width="0.1657%" height="15" fill="rgb(207,202,30)" fg:x="777" fg:w="2"/><text x="64.6245%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5402%" y="517" width="0.0829%" height="15" fill="rgb(231,124,22)" fg:x="779" fg:w="1"/><text x="64.7902%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (65 samples, 5.39%)</title><rect x="59.3206%" y="565" width="5.3853%" height="15" fill="rgb(206,15,5)" fg:x="716" fg:w="65"/><text x="59.5706%" y="575.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (64 samples, 5.30%)</title><rect x="59.4035%" y="549" width="5.3024%" height="15" fill="rgb(239,16,52)" fg:x="717" fg:w="64"/><text x="59.6535%" y="559.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (42 samples, 3.48%)</title><rect x="61.2262%" y="533" width="3.4797%" height="15" fill="rgb(245,213,29)" fg:x="739" fg:w="42"/><text x="61.4762%" y="543.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6230%" y="517" width="0.0829%" height="15" fill="rgb(213,203,36)" fg:x="780" fg:w="1"/><text x="64.8730%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="65.5344%" y="389" width="0.1657%" height="15" fill="rgb(209,55,18)" fg:x="791" fg:w="2"/><text x="65.7844%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6172%" y="373" width="0.0829%" height="15" fill="rgb(207,133,49)" fg:x="792" fg:w="1"/><text x="65.8672%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.7001%" y="389" width="0.0829%" height="15" fill="rgb(240,33,46)" fg:x="793" fg:w="1"/><text x="65.9501%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.7001%" y="373" width="0.0829%" height="15" fill="rgb(212,35,2)" fg:x="793" fg:w="1"/><text x="65.9501%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="65.4515%" y="421" width="0.4143%" height="15" fill="rgb(231,119,28)" fg:x="790" fg:w="5"/><text x="65.7015%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="65.4515%" y="405" width="0.4143%" height="15" fill="rgb(252,178,7)" fg:x="790" fg:w="5"/><text x="65.7015%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.7829%" y="389" width="0.0829%" height="15" fill="rgb(251,91,4)" fg:x="794" fg:w="1"/><text x="66.0329%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.7829%" y="373" width="0.0829%" height="15" fill="rgb(233,122,19)" fg:x="794" fg:w="1"/><text x="66.0329%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="65.9486%" y="405" width="0.3314%" height="15" fill="rgb(231,208,46)" fg:x="796" fg:w="4"/><text x="66.1986%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="66.0315%" y="389" width="0.2486%" height="15" fill="rgb(243,15,41)" fg:x="797" fg:w="3"/><text x="66.2815%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="66.0315%" y="373" width="0.2486%" height="15" fill="rgb(210,32,43)" fg:x="797" fg:w="3"/><text x="66.2815%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="66.0315%" y="357" width="0.2486%" height="15" fill="rgb(222,177,15)" fg:x="797" fg:w="3"/><text x="66.2815%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="66.1143%" y="341" width="0.1657%" height="15" fill="rgb(244,121,34)" fg:x="798" fg:w="2"/><text x="66.3643%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="66.1143%" y="325" width="0.1657%" height="15" fill="rgb(234,138,4)" fg:x="798" fg:w="2"/><text x="66.3643%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.1972%" y="309" width="0.0829%" height="15" fill="rgb(240,97,48)" fg:x="799" fg:w="1"/><text x="66.4472%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.99%)</title><rect x="65.3687%" y="437" width="0.9942%" height="15" fill="rgb(237,65,54)" fg:x="789" fg:w="12"/><text x="65.6187%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.50%)</title><rect x="65.8658%" y="421" width="0.4971%" height="15" fill="rgb(214,25,24)" fg:x="795" fg:w="6"/><text x="66.1158%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.2800%" y="405" width="0.0829%" height="15" fill="rgb(213,5,3)" fg:x="800" fg:w="1"/><text x="66.5300%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.2800%" y="389" width="0.0829%" height="15" fill="rgb(219,81,29)" fg:x="800" fg:w="1"/><text x="66.5300%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2800%" y="373" width="0.0829%" height="15" fill="rgb(220,43,48)" fg:x="800" fg:w="1"/><text x="66.5300%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="66.3629%" y="437" width="0.1657%" height="15" fill="rgb(239,157,2)" fg:x="801" fg:w="2"/><text x="66.6129%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.49%)</title><rect x="65.2030%" y="453" width="1.4913%" height="15" fill="rgb(213,104,43)" fg:x="787" fg:w="18"/><text x="65.4530%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="66.5286%" y="437" width="0.1657%" height="15" fill="rgb(237,84,9)" fg:x="803" fg:w="2"/><text x="66.7786%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="66.5286%" y="421" width="0.1657%" height="15" fill="rgb(252,6,33)" fg:x="803" fg:w="2"/><text x="66.7786%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6114%" y="405" width="0.0829%" height="15" fill="rgb(251,172,22)" fg:x="804" fg:w="1"/><text x="66.8614%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.91%)</title><rect x="65.1201%" y="469" width="1.9056%" height="15" fill="rgb(244,91,53)" fg:x="786" fg:w="23"/><text x="65.3701%" y="479.50">&lt;..</text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="66.6943%" y="453" width="0.3314%" height="15" fill="rgb(219,29,30)" fg:x="805" fg:w="4"/><text x="66.9443%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="67.0257%" y="469" width="0.1657%" height="15" fill="rgb(213,3,15)" fg:x="809" fg:w="2"/><text x="67.2757%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="67.0257%" y="453" width="0.1657%" height="15" fill="rgb(208,25,28)" fg:x="809" fg:w="2"/><text x="67.2757%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.32%)</title><rect x="64.9544%" y="501" width="2.3198%" height="15" fill="rgb(252,144,25)" fg:x="784" fg:w="28"/><text x="65.2044%" y="511.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.32%)</title><rect x="64.9544%" y="485" width="2.3198%" height="15" fill="rgb(226,220,25)" fg:x="784" fg:w="28"/><text x="65.2044%" y="495.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1914%" y="469" width="0.0829%" height="15" fill="rgb(212,131,28)" fg:x="811" fg:w="1"/><text x="67.4414%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1914%" y="453" width="0.0829%" height="15" fill="rgb(219,143,52)" fg:x="811" fg:w="1"/><text x="67.4414%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="67.1914%" y="437" width="0.0829%" height="15" fill="rgb(215,56,7)" fg:x="811" fg:w="1"/><text x="67.4414%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="67.1914%" y="421" width="0.0829%" height="15" fill="rgb(239,59,51)" fg:x="811" fg:w="1"/><text x="67.4414%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="67.2742%" y="501" width="0.1657%" height="15" fill="rgb(209,215,4)" fg:x="812" fg:w="2"/><text x="67.5242%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3571%" y="485" width="0.0829%" height="15" fill="rgb(221,118,39)" fg:x="813" fg:w="1"/><text x="67.6071%" y="495.50"></text></g><g><title>engine::session::state::State::close (171 samples, 14.17%)</title><rect x="53.4383%" y="645" width="14.1674%" height="15" fill="rgb(236,6,44)" fg:x="645" fg:w="171"/><text x="53.6883%" y="655.50">engine::session::state..</text></g><g><title>engine::session::state::State::flush_entities (171 samples, 14.17%)</title><rect x="53.4383%" y="629" width="14.1674%" height="15" fill="rgb(216,122,9)" fg:x="645" fg:w="171"/><text x="53.6883%" y="639.50">engine::session::state..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (171 samples, 14.17%)</title><rect x="53.4383%" y="613" width="14.1674%" height="15" fill="rgb(244,134,42)" fg:x="645" fg:w="171"/><text x="53.6883%" y="623.50">engine::session::inter..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (171 samples, 14.17%)</title><rect x="53.4383%" y="597" width="14.1674%" height="15" fill="rgb(209,189,35)" fg:x="645" fg:w="171"/><text x="53.6883%" y="607.50">engine::session::state..</text></g><g><title>kernel::model::any_entity_changes (115 samples, 9.53%)</title><rect x="58.0779%" y="581" width="9.5278%" height="15" fill="rgb(250,47,36)" fg:x="701" fg:w="115"/><text x="58.3279%" y="591.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (35 samples, 2.90%)</title><rect x="64.7059%" y="565" width="2.8998%" height="15" fill="rgb(252,112,4)" fg:x="781" fg:w="35"/><text x="64.9559%" y="575.50">se..</text></g><g><title>serde_json::de::from_trait (35 samples, 2.90%)</title><rect x="64.7059%" y="549" width="2.8998%" height="15" fill="rgb(221,79,51)" fg:x="781" fg:w="35"/><text x="64.9559%" y="559.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (35 samples, 2.90%)</title><rect x="64.7059%" y="533" width="2.8998%" height="15" fill="rgb(232,65,53)" fg:x="781" fg:w="35"/><text x="64.9559%" y="543.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (34 samples, 2.82%)</title><rect x="64.7887%" y="517" width="2.8169%" height="15" fill="rgb(211,37,7)" fg:x="782" fg:w="34"/><text x="65.0387%" y="527.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="67.4399%" y="501" width="0.1657%" height="15" fill="rgb(234,221,18)" fg:x="814" fg:w="2"/><text x="67.6899%" y="511.50"></text></g><g><title>engine::session::Session::close (173 samples, 14.33%)</title><rect x="53.3554%" y="661" width="14.3331%" height="15" fill="rgb(220,158,26)" fg:x="644" fg:w="173"/><text x="53.6054%" y="671.50">engine::session::Sessi..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="67.6056%" y="645" width="0.0829%" height="15" fill="rgb(220,70,6)" fg:x="816" fg:w="1"/><text x="67.8556%" y="655.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="67.6056%" y="629" width="0.0829%" height="15" fill="rgb(250,39,48)" fg:x="816" fg:w="1"/><text x="67.8556%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="67.6056%" y="613" width="0.0829%" height="15" fill="rgb(206,40,27)" fg:x="816" fg:w="1"/><text x="67.8556%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="67.6056%" y="597" width="0.0829%" height="15" fill="rgb(247,80,36)" fg:x="816" fg:w="1"/><text x="67.8556%" y="607.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="67.6056%" y="581" width="0.0829%" height="15" fill="rgb(222,9,20)" fg:x="816" fg:w="1"/><text x="67.8556%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="67.8542%" y="549" width="0.0829%" height="15" fill="rgb(217,26,45)" fg:x="819" fg:w="1"/><text x="68.1042%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="67.8542%" y="533" width="0.0829%" height="15" fill="rgb(221,67,14)" fg:x="819" fg:w="1"/><text x="68.1042%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="67.8542%" y="517" width="0.0829%" height="15" fill="rgb(248,100,24)" fg:x="819" fg:w="1"/><text x="68.1042%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1856%" y="389" width="0.0829%" height="15" fill="rgb(230,187,16)" fg:x="823" fg:w="1"/><text x="68.4356%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1856%" y="373" width="0.0829%" height="15" fill="rgb(205,108,13)" fg:x="823" fg:w="1"/><text x="68.4356%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1856%" y="357" width="0.0829%" height="15" fill="rgb(235,71,51)" fg:x="823" fg:w="1"/><text x="68.4356%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1856%" y="341" width="0.0829%" height="15" fill="rgb(251,172,48)" fg:x="823" fg:w="1"/><text x="68.4356%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1856%" y="325" width="0.0829%" height="15" fill="rgb(240,96,49)" fg:x="823" fg:w="1"/><text x="68.4356%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1856%" y="309" width="0.0829%" height="15" fill="rgb(235,46,36)" fg:x="823" fg:w="1"/><text x="68.4356%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="68.1856%" y="437" width="0.3314%" height="15" fill="rgb(244,3,49)" fg:x="823" fg:w="4"/><text x="68.4356%" y="447.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="68.1856%" y="421" width="0.3314%" height="15" fill="rgb(206,78,54)" fg:x="823" fg:w="4"/><text x="68.4356%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="68.1856%" y="405" width="0.3314%" height="15" fill="rgb(208,85,42)" fg:x="823" fg:w="4"/><text x="68.4356%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="68.2684%" y="389" width="0.2486%" height="15" fill="rgb(219,196,21)" fg:x="824" fg:w="3"/><text x="68.5184%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="68.2684%" y="373" width="0.2486%" height="15" fill="rgb(238,19,9)" fg:x="824" fg:w="3"/><text x="68.5184%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="68.3513%" y="357" width="0.1657%" height="15" fill="rgb(206,86,13)" fg:x="825" fg:w="2"/><text x="68.6013%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="68.3513%" y="341" width="0.1657%" height="15" fill="rgb(214,123,40)" fg:x="825" fg:w="2"/><text x="68.6013%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.4341%" y="325" width="0.0829%" height="15" fill="rgb(243,53,5)" fg:x="826" fg:w="1"/><text x="68.6841%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4341%" y="309" width="0.0829%" height="15" fill="rgb(254,186,31)" fg:x="826" fg:w="1"/><text x="68.6841%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.4341%" y="293" width="0.0829%" height="15" fill="rgb(221,216,25)" fg:x="826" fg:w="1"/><text x="68.6841%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4341%" y="277" width="0.0829%" height="15" fill="rgb(248,107,42)" fg:x="826" fg:w="1"/><text x="68.6841%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.4341%" y="261" width="0.0829%" height="15" fill="rgb(221,85,43)" fg:x="826" fg:w="1"/><text x="68.6841%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4341%" y="245" width="0.0829%" height="15" fill="rgb(225,34,24)" fg:x="826" fg:w="1"/><text x="68.6841%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.66%)</title><rect x="68.1027%" y="469" width="0.6628%" height="15" fill="rgb(211,119,1)" fg:x="822" fg:w="8"/><text x="68.3527%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.58%)</title><rect x="68.1856%" y="453" width="0.5800%" height="15" fill="rgb(254,216,46)" fg:x="823" fg:w="7"/><text x="68.4356%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.25%)</title><rect x="68.5170%" y="437" width="0.2486%" height="15" fill="rgb(238,11,38)" fg:x="827" fg:w="3"/><text x="68.7670%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="68.5170%" y="421" width="0.2486%" height="15" fill="rgb(233,50,15)" fg:x="827" fg:w="3"/><text x="68.7670%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="68.5170%" y="405" width="0.2486%" height="15" fill="rgb(217,181,29)" fg:x="827" fg:w="3"/><text x="68.7670%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="68.5170%" y="389" width="0.2486%" height="15" fill="rgb(214,56,3)" fg:x="827" fg:w="3"/><text x="68.7670%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="68.5170%" y="373" width="0.2486%" height="15" fill="rgb(230,69,45)" fg:x="827" fg:w="3"/><text x="68.7670%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="68.5998%" y="357" width="0.1657%" height="15" fill="rgb(224,201,50)" fg:x="828" fg:w="2"/><text x="68.8498%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="68.5998%" y="341" width="0.1657%" height="15" fill="rgb(217,228,18)" fg:x="828" fg:w="2"/><text x="68.8498%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.6827%" y="325" width="0.0829%" height="15" fill="rgb(239,33,44)" fg:x="829" fg:w="1"/><text x="68.9327%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6827%" y="309" width="0.0829%" height="15" fill="rgb(248,210,23)" fg:x="829" fg:w="1"/><text x="68.9327%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6827%" y="293" width="0.0829%" height="15" fill="rgb(253,135,8)" fg:x="829" fg:w="1"/><text x="68.9327%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6827%" y="277" width="0.0829%" height="15" fill="rgb(217,98,21)" fg:x="829" fg:w="1"/><text x="68.9327%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.6827%" y="261" width="0.0829%" height="15" fill="rgb(253,130,21)" fg:x="829" fg:w="1"/><text x="68.9327%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.6827%" y="245" width="0.0829%" height="15" fill="rgb(207,81,54)" fg:x="829" fg:w="1"/><text x="68.9327%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.6827%" y="229" width="0.0829%" height="15" fill="rgb(232,48,33)" fg:x="829" fg:w="1"/><text x="68.9327%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="68.7655%" y="405" width="0.1657%" height="15" fill="rgb(211,9,35)" fg:x="830" fg:w="2"/><text x="69.0155%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.0969%" y="341" width="0.0829%" height="15" fill="rgb(205,152,21)" fg:x="834" fg:w="1"/><text x="69.3469%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0969%" y="325" width="0.0829%" height="15" fill="rgb(249,21,27)" fg:x="834" fg:w="1"/><text x="69.3469%" y="335.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.58%)</title><rect x="68.7655%" y="453" width="0.5800%" height="15" fill="rgb(252,29,24)" fg:x="830" fg:w="7"/><text x="69.0155%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.58%)</title><rect x="68.7655%" y="437" width="0.5800%" height="15" fill="rgb(230,130,50)" fg:x="830" fg:w="7"/><text x="69.0155%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.58%)</title><rect x="68.7655%" y="421" width="0.5800%" height="15" fill="rgb(239,144,14)" fg:x="830" fg:w="7"/><text x="69.0155%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="68.9312%" y="405" width="0.4143%" height="15" fill="rgb(227,111,50)" fg:x="832" fg:w="5"/><text x="69.1812%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="68.9312%" y="389" width="0.4143%" height="15" fill="rgb(254,84,20)" fg:x="832" fg:w="5"/><text x="69.1812%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="68.9312%" y="373" width="0.4143%" height="15" fill="rgb(232,90,48)" fg:x="832" fg:w="5"/><text x="69.1812%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="69.0141%" y="357" width="0.3314%" height="15" fill="rgb(253,63,47)" fg:x="833" fg:w="4"/><text x="69.2641%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="69.1798%" y="341" width="0.1657%" height="15" fill="rgb(251,146,35)" fg:x="835" fg:w="2"/><text x="69.4298%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.2626%" y="325" width="0.0829%" height="15" fill="rgb(229,192,35)" fg:x="836" fg:w="1"/><text x="69.5126%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.25%)</title><rect x="69.4283%" y="341" width="0.2486%" height="15" fill="rgb(225,68,9)" fg:x="838" fg:w="3"/><text x="69.6783%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5940%" y="325" width="0.0829%" height="15" fill="rgb(214,97,34)" fg:x="840" fg:w="1"/><text x="69.8440%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.5940%" y="309" width="0.0829%" height="15" fill="rgb(253,31,26)" fg:x="840" fg:w="1"/><text x="69.8440%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5940%" y="293" width="0.0829%" height="15" fill="rgb(225,151,47)" fg:x="840" fg:w="1"/><text x="69.8440%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="69.5940%" y="277" width="0.0829%" height="15" fill="rgb(206,185,9)" fg:x="840" fg:w="1"/><text x="69.8440%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="69.5940%" y="261" width="0.0829%" height="15" fill="rgb(249,65,17)" fg:x="840" fg:w="1"/><text x="69.8440%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5940%" y="245" width="0.0829%" height="15" fill="rgb(220,110,10)" fg:x="840" fg:w="1"/><text x="69.8440%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="69.4283%" y="373" width="0.3314%" height="15" fill="rgb(222,198,49)" fg:x="838" fg:w="4"/><text x="69.6783%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="69.4283%" y="357" width="0.3314%" height="15" fill="rgb(239,81,13)" fg:x="838" fg:w="4"/><text x="69.6783%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6769%" y="341" width="0.0829%" height="15" fill="rgb(216,128,11)" fg:x="841" fg:w="1"/><text x="69.9269%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6769%" y="325" width="0.0829%" height="15" fill="rgb(247,156,8)" fg:x="841" fg:w="1"/><text x="69.9269%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.8426%" y="341" width="0.0829%" height="15" fill="rgb(219,173,1)" fg:x="843" fg:w="1"/><text x="70.0926%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="69.9254%" y="309" width="0.0829%" height="15" fill="rgb(227,42,24)" fg:x="844" fg:w="1"/><text x="70.1754%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9254%" y="293" width="0.0829%" height="15" fill="rgb(253,219,50)" fg:x="844" fg:w="1"/><text x="70.1754%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.9254%" y="277" width="0.0829%" height="15" fill="rgb(215,191,54)" fg:x="844" fg:w="1"/><text x="70.1754%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.17%)</title><rect x="69.9254%" y="325" width="0.1657%" height="15" fill="rgb(238,83,12)" fg:x="844" fg:w="2"/><text x="70.1754%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0083%" y="309" width="0.0829%" height="15" fill="rgb(205,124,9)" fg:x="845" fg:w="1"/><text x="70.2583%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (19 samples, 1.57%)</title><rect x="68.7655%" y="469" width="1.5742%" height="15" fill="rgb(253,174,7)" fg:x="830" fg:w="19"/><text x="69.0155%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.99%)</title><rect x="69.3455%" y="453" width="0.9942%" height="15" fill="rgb(206,134,49)" fg:x="837" fg:w="12"/><text x="69.5955%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.99%)</title><rect x="69.3455%" y="437" width="0.9942%" height="15" fill="rgb(221,89,20)" fg:x="837" fg:w="12"/><text x="69.5955%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.99%)</title><rect x="69.3455%" y="421" width="0.9942%" height="15" fill="rgb(240,205,13)" fg:x="837" fg:w="12"/><text x="69.5955%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.99%)</title><rect x="69.3455%" y="405" width="0.9942%" height="15" fill="rgb(237,174,32)" fg:x="837" fg:w="12"/><text x="69.5955%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.99%)</title><rect x="69.3455%" y="389" width="0.9942%" height="15" fill="rgb(226,12,15)" fg:x="837" fg:w="12"/><text x="69.5955%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.58%)</title><rect x="69.7597%" y="373" width="0.5800%" height="15" fill="rgb(245,160,52)" fg:x="842" fg:w="7"/><text x="70.0097%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.50%)</title><rect x="69.8426%" y="357" width="0.4971%" height="15" fill="rgb(253,80,21)" fg:x="843" fg:w="6"/><text x="70.0926%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.41%)</title><rect x="69.9254%" y="341" width="0.4143%" height="15" fill="rgb(231,225,22)" fg:x="844" fg:w="5"/><text x="70.1754%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="70.0911%" y="325" width="0.2486%" height="15" fill="rgb(253,185,12)" fg:x="846" fg:w="3"/><text x="70.3411%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="70.0911%" y="309" width="0.2486%" height="15" fill="rgb(234,197,21)" fg:x="846" fg:w="3"/><text x="70.3411%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.25%)</title><rect x="70.0911%" y="293" width="0.2486%" height="15" fill="rgb(210,47,30)" fg:x="846" fg:w="3"/><text x="70.3411%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="70.0911%" y="277" width="0.2486%" height="15" fill="rgb(246,139,27)" fg:x="846" fg:w="3"/><text x="70.3411%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="70.0911%" y="261" width="0.2486%" height="15" fill="rgb(226,130,16)" fg:x="846" fg:w="3"/><text x="70.3411%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="70.1740%" y="245" width="0.1657%" height="15" fill="rgb(237,208,20)" fg:x="847" fg:w="2"/><text x="70.4240%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="70.1740%" y="229" width="0.1657%" height="15" fill="rgb(245,186,28)" fg:x="847" fg:w="2"/><text x="70.4240%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="70.1740%" y="213" width="0.1657%" height="15" fill="rgb(238,105,39)" fg:x="847" fg:w="2"/><text x="70.4240%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="70.1740%" y="197" width="0.1657%" height="15" fill="rgb(253,228,11)" fg:x="847" fg:w="2"/><text x="70.4240%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="70.1740%" y="181" width="0.1657%" height="15" fill="rgb(224,136,38)" fg:x="847" fg:w="2"/><text x="70.4240%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="70.3397%" y="453" width="0.0829%" height="15" fill="rgb(211,3,25)" fg:x="849" fg:w="1"/><text x="70.5897%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4225%" y="421" width="0.0829%" height="15" fill="rgb(238,66,34)" fg:x="850" fg:w="1"/><text x="70.6725%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4225%" y="405" width="0.0829%" height="15" fill="rgb(223,188,11)" fg:x="850" fg:w="1"/><text x="70.6725%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4225%" y="389" width="0.0829%" height="15" fill="rgb(221,10,35)" fg:x="850" fg:w="1"/><text x="70.6725%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (34 samples, 2.82%)</title><rect x="68.1027%" y="501" width="2.8169%" height="15" fill="rgb(223,18,44)" fg:x="822" fg:w="34"/><text x="68.3527%" y="511.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (34 samples, 2.82%)</title><rect x="68.1027%" y="485" width="2.8169%" height="15" fill="rgb(220,97,41)" fg:x="822" fg:w="34"/><text x="68.3527%" y="495.50">en..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.58%)</title><rect x="70.3397%" y="469" width="0.5800%" height="15" fill="rgb(206,95,45)" fg:x="849" fg:w="7"/><text x="70.5897%" y="479.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.50%)</title><rect x="70.4225%" y="453" width="0.4971%" height="15" fill="rgb(209,96,13)" fg:x="850" fg:w="6"/><text x="70.6725%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.50%)</title><rect x="70.4225%" y="437" width="0.4971%" height="15" fill="rgb(237,39,34)" fg:x="850" fg:w="6"/><text x="70.6725%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="70.5054%" y="421" width="0.4143%" height="15" fill="rgb(213,49,47)" fg:x="851" fg:w="5"/><text x="70.7554%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="70.5054%" y="405" width="0.4143%" height="15" fill="rgb(205,107,27)" fg:x="851" fg:w="5"/><text x="70.7554%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="70.5882%" y="389" width="0.3314%" height="15" fill="rgb(212,142,9)" fg:x="852" fg:w="4"/><text x="70.8382%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="70.5882%" y="373" width="0.3314%" height="15" fill="rgb(226,182,0)" fg:x="852" fg:w="4"/><text x="70.8382%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="70.6711%" y="357" width="0.2486%" height="15" fill="rgb(231,3,53)" fg:x="853" fg:w="3"/><text x="70.9211%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="70.6711%" y="341" width="0.2486%" height="15" fill="rgb(246,111,28)" fg:x="853" fg:w="3"/><text x="70.9211%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="70.6711%" y="325" width="0.2486%" height="15" fill="rgb(254,183,7)" fg:x="853" fg:w="3"/><text x="70.9211%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="70.6711%" y="309" width="0.2486%" height="15" fill="rgb(247,177,28)" fg:x="853" fg:w="3"/><text x="70.9211%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8368%" y="293" width="0.0829%" height="15" fill="rgb(244,43,1)" fg:x="855" fg:w="1"/><text x="71.0868%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8368%" y="277" width="0.0829%" height="15" fill="rgb(207,2,35)" fg:x="855" fg:w="1"/><text x="71.0868%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.8368%" y="261" width="0.0829%" height="15" fill="rgb(213,83,22)" fg:x="855" fg:w="1"/><text x="71.0868%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8368%" y="245" width="0.0829%" height="15" fill="rgb(246,212,13)" fg:x="855" fg:w="1"/><text x="71.0868%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (35 samples, 2.90%)</title><rect x="68.1027%" y="517" width="2.8998%" height="15" fill="rgb(213,127,46)" fg:x="822" fg:w="35"/><text x="68.3527%" y="527.50">&lt;e..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9196%" y="501" width="0.0829%" height="15" fill="rgb(219,215,39)" fg:x="856" fg:w="1"/><text x="71.1696%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.0025%" y="485" width="0.0829%" height="15" fill="rgb(227,99,17)" fg:x="857" fg:w="1"/><text x="71.2525%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0025%" y="469" width="0.0829%" height="15" fill="rgb(208,155,18)" fg:x="857" fg:w="1"/><text x="71.2525%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0025%" y="453" width="0.0829%" height="15" fill="rgb(223,204,38)" fg:x="857" fg:w="1"/><text x="71.2525%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0025%" y="437" width="0.0829%" height="15" fill="rgb(212,114,21)" fg:x="857" fg:w="1"/><text x="71.2525%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0025%" y="421" width="0.0829%" height="15" fill="rgb(250,74,13)" fg:x="857" fg:w="1"/><text x="71.2525%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0025%" y="405" width="0.0829%" height="15" fill="rgb(234,7,1)" fg:x="857" fg:w="1"/><text x="71.2525%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0025%" y="389" width="0.0829%" height="15" fill="rgb(207,138,31)" fg:x="857" fg:w="1"/><text x="71.2525%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0025%" y="373" width="0.0829%" height="15" fill="rgb(215,186,42)" fg:x="857" fg:w="1"/><text x="71.2525%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.0025%" y="357" width="0.0829%" height="15" fill="rgb(229,205,49)" fg:x="857" fg:w="1"/><text x="71.2525%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.0025%" y="341" width="0.0829%" height="15" fill="rgb(216,156,32)" fg:x="857" fg:w="1"/><text x="71.2525%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.0025%" y="325" width="0.0829%" height="15" fill="rgb(238,7,21)" fg:x="857" fg:w="1"/><text x="71.2525%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.0025%" y="309" width="0.0829%" height="15" fill="rgb(249,190,22)" fg:x="857" fg:w="1"/><text x="71.2525%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0025%" y="293" width="0.0829%" height="15" fill="rgb(253,51,31)" fg:x="857" fg:w="1"/><text x="71.2525%" y="303.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (40 samples, 3.31%)</title><rect x="67.8542%" y="565" width="3.3140%" height="15" fill="rgb(237,90,54)" fg:x="819" fg:w="40"/><text x="68.1042%" y="575.50">&lt;pl..</text></g><g><title>kernel::model::entry::Entry::scope (39 samples, 3.23%)</title><rect x="67.9370%" y="549" width="3.2312%" height="15" fill="rgb(250,214,33)" fg:x="820" fg:w="39"/><text x="68.1870%" y="559.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (39 samples, 3.23%)</title><rect x="67.9370%" y="533" width="3.2312%" height="15" fill="rgb(237,10,49)" fg:x="820" fg:w="39"/><text x="68.1870%" y="543.50">ker..</text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="71.0025%" y="517" width="0.1657%" height="15" fill="rgb(241,56,36)" fg:x="857" fg:w="2"/><text x="71.2525%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="71.0025%" y="501" width="0.1657%" height="15" fill="rgb(227,164,12)" fg:x="857" fg:w="2"/><text x="71.2525%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0853%" y="485" width="0.0829%" height="15" fill="rgb(249,149,35)" fg:x="858" fg:w="1"/><text x="71.3353%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0853%" y="469" width="0.0829%" height="15" fill="rgb(238,227,50)" fg:x="858" fg:w="1"/><text x="71.3353%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0853%" y="453" width="0.0829%" height="15" fill="rgb(235,102,45)" fg:x="858" fg:w="1"/><text x="71.3353%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0853%" y="437" width="0.0829%" height="15" fill="rgb(211,10,38)" fg:x="858" fg:w="1"/><text x="71.3353%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0853%" y="421" width="0.0829%" height="15" fill="rgb(219,77,48)" fg:x="858" fg:w="1"/><text x="71.3353%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0853%" y="405" width="0.0829%" height="15" fill="rgb(246,6,15)" fg:x="858" fg:w="1"/><text x="71.3353%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0853%" y="389" width="0.0829%" height="15" fill="rgb(207,220,2)" fg:x="858" fg:w="1"/><text x="71.3353%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.0853%" y="373" width="0.0829%" height="15" fill="rgb(242,48,14)" fg:x="858" fg:w="1"/><text x="71.3353%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.0853%" y="357" width="0.0829%" height="15" fill="rgb(218,19,27)" fg:x="858" fg:w="1"/><text x="71.3353%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.0853%" y="341" width="0.0829%" height="15" fill="rgb(228,0,35)" fg:x="858" fg:w="1"/><text x="71.3353%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.0853%" y="325" width="0.0829%" height="15" fill="rgb(244,142,54)" fg:x="858" fg:w="1"/><text x="71.3353%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0853%" y="309" width="0.0829%" height="15" fill="rgb(243,217,40)" fg:x="858" fg:w="1"/><text x="71.3353%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="71.1682%" y="517" width="0.0829%" height="15" fill="rgb(207,114,16)" fg:x="859" fg:w="1"/><text x="71.4182%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="71.1682%" y="501" width="0.0829%" height="15" fill="rgb(224,33,25)" fg:x="859" fg:w="1"/><text x="71.4182%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2510%" y="357" width="0.0829%" height="15" fill="rgb(230,93,54)" fg:x="860" fg:w="1"/><text x="71.5010%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2510%" y="341" width="0.0829%" height="15" fill="rgb(224,56,24)" fg:x="860" fg:w="1"/><text x="71.5010%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.2510%" y="325" width="0.0829%" height="15" fill="rgb(235,189,50)" fg:x="860" fg:w="1"/><text x="71.5010%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.2510%" y="309" width="0.0829%" height="15" fill="rgb(242,173,8)" fg:x="860" fg:w="1"/><text x="71.5010%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.2510%" y="293" width="0.0829%" height="15" fill="rgb(209,206,10)" fg:x="860" fg:w="1"/><text x="71.5010%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.2510%" y="277" width="0.0829%" height="15" fill="rgb(213,182,44)" fg:x="860" fg:w="1"/><text x="71.5010%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.2510%" y="261" width="0.0829%" height="15" fill="rgb(243,51,15)" fg:x="860" fg:w="1"/><text x="71.5010%" y="271.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.25%)</title><rect x="71.1682%" y="565" width="0.2486%" height="15" fill="rgb(241,13,14)" fg:x="859" fg:w="3"/><text x="71.4182%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.25%)</title><rect x="71.1682%" y="549" width="0.2486%" height="15" fill="rgb(239,147,24)" fg:x="859" fg:w="3"/><text x="71.4182%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.25%)</title><rect x="71.1682%" y="533" width="0.2486%" height="15" fill="rgb(223,129,16)" fg:x="859" fg:w="3"/><text x="71.4182%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.17%)</title><rect x="71.2510%" y="517" width="0.1657%" height="15" fill="rgb(209,169,13)" fg:x="860" fg:w="2"/><text x="71.5010%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="71.2510%" y="501" width="0.1657%" height="15" fill="rgb(235,159,41)" fg:x="860" fg:w="2"/><text x="71.5010%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="71.2510%" y="485" width="0.1657%" height="15" fill="rgb(223,219,48)" fg:x="860" fg:w="2"/><text x="71.5010%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="71.2510%" y="469" width="0.1657%" height="15" fill="rgb(236,80,13)" fg:x="860" fg:w="2"/><text x="71.5010%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="71.2510%" y="453" width="0.1657%" height="15" fill="rgb(213,5,6)" fg:x="860" fg:w="2"/><text x="71.5010%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="71.2510%" y="437" width="0.1657%" height="15" fill="rgb(205,59,21)" fg:x="860" fg:w="2"/><text x="71.5010%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="71.2510%" y="421" width="0.1657%" height="15" fill="rgb(247,137,35)" fg:x="860" fg:w="2"/><text x="71.5010%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="71.2510%" y="405" width="0.1657%" height="15" fill="rgb(242,208,28)" fg:x="860" fg:w="2"/><text x="71.5010%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="71.2510%" y="389" width="0.1657%" height="15" fill="rgb(245,62,25)" fg:x="860" fg:w="2"/><text x="71.5010%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="71.2510%" y="373" width="0.1657%" height="15" fill="rgb(233,99,54)" fg:x="860" fg:w="2"/><text x="71.5010%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.3339%" y="357" width="0.0829%" height="15" fill="rgb(213,10,37)" fg:x="861" fg:w="1"/><text x="71.5839%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.3339%" y="341" width="0.0829%" height="15" fill="rgb(235,143,30)" fg:x="861" fg:w="1"/><text x="71.5839%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.3339%" y="325" width="0.0829%" height="15" fill="rgb(250,146,33)" fg:x="861" fg:w="1"/><text x="71.5839%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.3339%" y="309" width="0.0829%" height="15" fill="rgb(226,198,42)" fg:x="861" fg:w="1"/><text x="71.5839%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.3339%" y="293" width="0.0829%" height="15" fill="rgb(222,55,6)" fg:x="861" fg:w="1"/><text x="71.5839%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="71.3339%" y="277" width="0.0829%" height="15" fill="rgb(213,224,31)" fg:x="861" fg:w="1"/><text x="71.5839%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="71.3339%" y="261" width="0.0829%" height="15" fill="rgb(226,103,35)" fg:x="861" fg:w="1"/><text x="71.5839%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="71.3339%" y="245" width="0.0829%" height="15" fill="rgb(205,66,45)" fg:x="861" fg:w="1"/><text x="71.5839%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="71.3339%" y="229" width="0.0829%" height="15" fill="rgb(226,51,42)" fg:x="861" fg:w="1"/><text x="71.5839%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.3339%" y="213" width="0.0829%" height="15" fill="rgb(206,69,1)" fg:x="861" fg:w="1"/><text x="71.5839%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.3339%" y="197" width="0.0829%" height="15" fill="rgb(213,228,47)" fg:x="861" fg:w="1"/><text x="71.5839%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.3339%" y="181" width="0.0829%" height="15" fill="rgb(224,204,18)" fg:x="861" fg:w="1"/><text x="71.5839%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="71.3339%" y="165" width="0.0829%" height="15" fill="rgb(253,187,47)" fg:x="861" fg:w="1"/><text x="71.5839%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.3339%" y="149" width="0.0829%" height="15" fill="rgb(232,61,2)" fg:x="861" fg:w="1"/><text x="71.5839%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="71.3339%" y="133" width="0.0829%" height="15" fill="rgb(213,132,35)" fg:x="861" fg:w="1"/><text x="71.5839%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="71.3339%" y="117" width="0.0829%" height="15" fill="rgb(247,33,21)" fg:x="861" fg:w="1"/><text x="71.5839%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="71.3339%" y="101" width="0.0829%" height="15" fill="rgb(233,71,46)" fg:x="861" fg:w="1"/><text x="71.5839%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.3339%" y="85" width="0.0829%" height="15" fill="rgb(222,173,43)" fg:x="861" fg:w="1"/><text x="71.5839%" y="95.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (44 samples, 3.65%)</title><rect x="67.8542%" y="581" width="3.6454%" height="15" fill="rgb(249,218,47)" fg:x="819" fg:w="44"/><text x="68.1042%" y="591.50">&lt;eng..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4167%" y="565" width="0.0829%" height="15" fill="rgb(254,185,48)" fg:x="862" fg:w="1"/><text x="71.6667%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.5824%" y="501" width="0.0829%" height="15" fill="rgb(252,165,50)" fg:x="864" fg:w="1"/><text x="71.8324%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="71.6653%" y="453" width="0.0829%" height="15" fill="rgb(206,219,6)" fg:x="865" fg:w="1"/><text x="71.9153%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.6653%" y="437" width="0.0829%" height="15" fill="rgb(212,212,45)" fg:x="865" fg:w="1"/><text x="71.9153%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="71.6653%" y="421" width="0.0829%" height="15" fill="rgb(221,31,9)" fg:x="865" fg:w="1"/><text x="71.9153%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6653%" y="405" width="0.0829%" height="15" fill="rgb(234,198,39)" fg:x="865" fg:w="1"/><text x="71.9153%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (50 samples, 4.14%)</title><rect x="67.6885%" y="645" width="4.1425%" height="15" fill="rgb(252,145,46)" fg:x="817" fg:w="50"/><text x="67.9385%" y="655.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::apply_middleware (50 samples, 4.14%)</title><rect x="67.6885%" y="629" width="4.1425%" height="15" fill="rgb(237,149,0)" fg:x="817" fg:w="50"/><text x="67.9385%" y="639.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (50 samples, 4.14%)</title><rect x="67.6885%" y="613" width="4.1425%" height="15" fill="rgb(229,65,5)" fg:x="817" fg:w="50"/><text x="67.9385%" y="623.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (50 samples, 4.14%)</title><rect x="67.6885%" y="597" width="4.1425%" height="15" fill="rgb(235,60,36)" fg:x="817" fg:w="50"/><text x="67.9385%" y="607.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.33%)</title><rect x="71.4996%" y="581" width="0.3314%" height="15" fill="rgb(222,47,18)" fg:x="863" fg:w="4"/><text x="71.7496%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.33%)</title><rect x="71.4996%" y="565" width="0.3314%" height="15" fill="rgb(235,114,22)" fg:x="863" fg:w="4"/><text x="71.7496%" y="575.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.33%)</title><rect x="71.4996%" y="549" width="0.3314%" height="15" fill="rgb(209,167,11)" fg:x="863" fg:w="4"/><text x="71.7496%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.25%)</title><rect x="71.5824%" y="533" width="0.2486%" height="15" fill="rgb(251,73,18)" fg:x="864" fg:w="3"/><text x="71.8324%" y="543.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.25%)</title><rect x="71.5824%" y="517" width="0.2486%" height="15" fill="rgb(217,60,17)" fg:x="864" fg:w="3"/><text x="71.8324%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.17%)</title><rect x="71.6653%" y="501" width="0.1657%" height="15" fill="rgb(224,36,37)" fg:x="865" fg:w="2"/><text x="71.9153%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.17%)</title><rect x="71.6653%" y="485" width="0.1657%" height="15" fill="rgb(211,21,32)" fg:x="865" fg:w="2"/><text x="71.9153%" y="495.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.17%)</title><rect x="71.6653%" y="469" width="0.1657%" height="15" fill="rgb(231,55,48)" fg:x="865" fg:w="2"/><text x="71.9153%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.7481%" y="453" width="0.0829%" height="15" fill="rgb(227,42,18)" fg:x="866" fg:w="1"/><text x="71.9981%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.9138%" y="581" width="0.0829%" height="15" fill="rgb(217,2,27)" fg:x="868" fg:w="1"/><text x="72.1638%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="71.9138%" y="565" width="0.0829%" height="15" fill="rgb(251,138,23)" fg:x="868" fg:w="1"/><text x="72.1638%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.9138%" y="549" width="0.0829%" height="15" fill="rgb(226,184,11)" fg:x="868" fg:w="1"/><text x="72.1638%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.9138%" y="533" width="0.0829%" height="15" fill="rgb(242,142,12)" fg:x="868" fg:w="1"/><text x="72.1638%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9138%" y="517" width="0.0829%" height="15" fill="rgb(234,187,18)" fg:x="868" fg:w="1"/><text x="72.1638%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.9138%" y="501" width="0.0829%" height="15" fill="rgb(237,44,42)" fg:x="868" fg:w="1"/><text x="72.1638%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9138%" y="485" width="0.0829%" height="15" fill="rgb(211,90,23)" fg:x="868" fg:w="1"/><text x="72.1638%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.9138%" y="469" width="0.0829%" height="15" fill="rgb(207,81,18)" fg:x="868" fg:w="1"/><text x="72.1638%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9138%" y="453" width="0.0829%" height="15" fill="rgb(222,107,28)" fg:x="868" fg:w="1"/><text x="72.1638%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.9138%" y="437" width="0.0829%" height="15" fill="rgb(237,83,52)" fg:x="868" fg:w="1"/><text x="72.1638%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.9967%" y="485" width="0.0829%" height="15" fill="rgb(208,67,11)" fg:x="869" fg:w="1"/><text x="72.2467%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.9967%" y="469" width="0.0829%" height="15" fill="rgb(249,157,49)" fg:x="869" fg:w="1"/><text x="72.2467%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9967%" y="453" width="0.0829%" height="15" fill="rgb(243,200,1)" fg:x="869" fg:w="1"/><text x="72.2467%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="71.9967%" y="533" width="0.1657%" height="15" fill="rgb(225,162,37)" fg:x="869" fg:w="2"/><text x="72.2467%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="71.9967%" y="517" width="0.1657%" height="15" fill="rgb(242,92,13)" fg:x="869" fg:w="2"/><text x="72.2467%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="71.9967%" y="501" width="0.1657%" height="15" fill="rgb(220,43,36)" fg:x="869" fg:w="2"/><text x="72.2467%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0795%" y="485" width="0.0829%" height="15" fill="rgb(213,165,48)" fg:x="870" fg:w="1"/><text x="72.3295%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.0795%" y="469" width="0.0829%" height="15" fill="rgb(227,200,9)" fg:x="870" fg:w="1"/><text x="72.3295%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.0795%" y="453" width="0.0829%" height="15" fill="rgb(221,222,28)" fg:x="870" fg:w="1"/><text x="72.3295%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.0795%" y="437" width="0.0829%" height="15" fill="rgb(223,142,26)" fg:x="870" fg:w="1"/><text x="72.3295%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.0795%" y="421" width="0.0829%" height="15" fill="rgb(243,46,9)" fg:x="870" fg:w="1"/><text x="72.3295%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.0795%" y="405" width="0.0829%" height="15" fill="rgb(250,56,11)" fg:x="870" fg:w="1"/><text x="72.3295%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.0795%" y="389" width="0.0829%" height="15" fill="rgb(229,113,5)" fg:x="870" fg:w="1"/><text x="72.3295%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="72.1624%" y="533" width="0.0829%" height="15" fill="rgb(244,108,28)" fg:x="871" fg:w="1"/><text x="72.4124%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="72.1624%" y="517" width="0.0829%" height="15" fill="rgb(242,119,50)" fg:x="871" fg:w="1"/><text x="72.4124%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.41%)</title><rect x="71.9138%" y="613" width="0.4143%" height="15" fill="rgb(224,164,23)" fg:x="868" fg:w="5"/><text x="72.1638%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.41%)</title><rect x="71.9138%" y="597" width="0.4143%" height="15" fill="rgb(214,227,44)" fg:x="868" fg:w="5"/><text x="72.1638%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="71.9967%" y="581" width="0.3314%" height="15" fill="rgb(238,202,4)" fg:x="869" fg:w="4"/><text x="72.2467%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="71.9967%" y="565" width="0.3314%" height="15" fill="rgb(213,190,30)" fg:x="869" fg:w="4"/><text x="72.2467%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="71.9967%" y="549" width="0.3314%" height="15" fill="rgb(239,15,2)" fg:x="869" fg:w="4"/><text x="72.2467%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.2452%" y="533" width="0.0829%" height="15" fill="rgb(249,229,4)" fg:x="872" fg:w="1"/><text x="72.4952%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.2452%" y="517" width="0.0829%" height="15" fill="rgb(239,75,44)" fg:x="872" fg:w="1"/><text x="72.4952%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.2452%" y="501" width="0.0829%" height="15" fill="rgb(251,206,23)" fg:x="872" fg:w="1"/><text x="72.4952%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.2452%" y="485" width="0.0829%" height="15" fill="rgb(215,208,0)" fg:x="872" fg:w="1"/><text x="72.4952%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.2452%" y="469" width="0.0829%" height="15" fill="rgb(230,75,50)" fg:x="872" fg:w="1"/><text x="72.4952%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.4109%" y="549" width="0.0829%" height="15" fill="rgb(246,180,39)" fg:x="874" fg:w="1"/><text x="72.6609%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="72.5766%" y="517" width="0.1657%" height="15" fill="rgb(249,175,24)" fg:x="876" fg:w="2"/><text x="72.8266%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.7423%" y="389" width="0.0829%" height="15" fill="rgb(247,176,22)" fg:x="878" fg:w="1"/><text x="72.9923%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="72.7423%" y="469" width="0.1657%" height="15" fill="rgb(241,100,24)" fg:x="878" fg:w="2"/><text x="72.9923%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="72.7423%" y="453" width="0.1657%" height="15" fill="rgb(233,4,35)" fg:x="878" fg:w="2"/><text x="72.9923%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="72.7423%" y="437" width="0.1657%" height="15" fill="rgb(211,164,46)" fg:x="878" fg:w="2"/><text x="72.9923%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="72.7423%" y="421" width="0.1657%" height="15" fill="rgb(242,99,53)" fg:x="878" fg:w="2"/><text x="72.9923%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="72.7423%" y="405" width="0.1657%" height="15" fill="rgb(243,45,33)" fg:x="878" fg:w="2"/><text x="72.9923%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.8252%" y="389" width="0.0829%" height="15" fill="rgb(217,55,21)" fg:x="879" fg:w="1"/><text x="73.0752%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.8252%" y="373" width="0.0829%" height="15" fill="rgb(245,145,46)" fg:x="879" fg:w="1"/><text x="73.0752%" y="383.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.66%)</title><rect x="72.3281%" y="597" width="0.6628%" height="15" fill="rgb(215,112,45)" fg:x="873" fg:w="8"/><text x="72.5781%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.66%)</title><rect x="72.3281%" y="581" width="0.6628%" height="15" fill="rgb(228,104,16)" fg:x="873" fg:w="8"/><text x="72.5781%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.66%)</title><rect x="72.3281%" y="565" width="0.6628%" height="15" fill="rgb(239,186,38)" fg:x="873" fg:w="8"/><text x="72.5781%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.50%)</title><rect x="72.4938%" y="549" width="0.4971%" height="15" fill="rgb(228,38,35)" fg:x="875" fg:w="6"/><text x="72.7438%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.50%)</title><rect x="72.4938%" y="533" width="0.4971%" height="15" fill="rgb(251,42,40)" fg:x="875" fg:w="6"/><text x="72.7438%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="72.7423%" y="517" width="0.2486%" height="15" fill="rgb(210,51,19)" fg:x="878" fg:w="3"/><text x="72.9923%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="72.7423%" y="501" width="0.2486%" height="15" fill="rgb(236,94,42)" fg:x="878" fg:w="3"/><text x="72.9923%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="72.7423%" y="485" width="0.2486%" height="15" fill="rgb(239,167,16)" fg:x="878" fg:w="3"/><text x="72.9923%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.9080%" y="469" width="0.0829%" height="15" fill="rgb(252,175,31)" fg:x="880" fg:w="1"/><text x="73.1580%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.9080%" y="453" width="0.0829%" height="15" fill="rgb(206,166,30)" fg:x="880" fg:w="1"/><text x="73.1580%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.9080%" y="437" width="0.0829%" height="15" fill="rgb(206,209,37)" fg:x="880" fg:w="1"/><text x="73.1580%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.9909%" y="533" width="0.0829%" height="15" fill="rgb(226,91,4)" fg:x="881" fg:w="1"/><text x="73.2409%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.9909%" y="517" width="0.0829%" height="15" fill="rgb(222,167,0)" fg:x="881" fg:w="1"/><text x="73.2409%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.9909%" y="501" width="0.0829%" height="15" fill="rgb(211,70,14)" fg:x="881" fg:w="1"/><text x="73.2409%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.17%)</title><rect x="73.0737%" y="485" width="0.1657%" height="15" fill="rgb(214,84,42)" fg:x="882" fg:w="2"/><text x="73.3237%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="73.0737%" y="469" width="0.1657%" height="15" fill="rgb(235,157,37)" fg:x="882" fg:w="2"/><text x="73.3237%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.1566%" y="453" width="0.0829%" height="15" fill="rgb(225,13,6)" fg:x="883" fg:w="1"/><text x="73.4066%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.1566%" y="437" width="0.0829%" height="15" fill="rgb(205,202,1)" fg:x="883" fg:w="1"/><text x="73.4066%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.1566%" y="421" width="0.0829%" height="15" fill="rgb(232,195,26)" fg:x="883" fg:w="1"/><text x="73.4066%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.1566%" y="405" width="0.0829%" height="15" fill="rgb(208,102,26)" fg:x="883" fg:w="1"/><text x="73.4066%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.1566%" y="389" width="0.0829%" height="15" fill="rgb(215,41,39)" fg:x="883" fg:w="1"/><text x="73.4066%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="73.0737%" y="517" width="0.2486%" height="15" fill="rgb(247,139,11)" fg:x="882" fg:w="3"/><text x="73.3237%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="73.0737%" y="501" width="0.2486%" height="15" fill="rgb(243,99,6)" fg:x="882" fg:w="3"/><text x="73.3237%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.2394%" y="485" width="0.0829%" height="15" fill="rgb(230,168,48)" fg:x="884" fg:w="1"/><text x="73.4894%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.2394%" y="469" width="0.0829%" height="15" fill="rgb(238,227,13)" fg:x="884" fg:w="1"/><text x="73.4894%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.2394%" y="453" width="0.0829%" height="15" fill="rgb(209,109,13)" fg:x="884" fg:w="1"/><text x="73.4894%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.2394%" y="437" width="0.0829%" height="15" fill="rgb(228,195,1)" fg:x="884" fg:w="1"/><text x="73.4894%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.2394%" y="421" width="0.0829%" height="15" fill="rgb(230,218,0)" fg:x="884" fg:w="1"/><text x="73.4894%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.2394%" y="405" width="0.0829%" height="15" fill="rgb(206,1,45)" fg:x="884" fg:w="1"/><text x="73.4894%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.3223%" y="485" width="0.0829%" height="15" fill="rgb(209,124,26)" fg:x="885" fg:w="1"/><text x="73.5723%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.3223%" y="469" width="0.0829%" height="15" fill="rgb(220,59,8)" fg:x="885" fg:w="1"/><text x="73.5723%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.4880%" y="453" width="0.0829%" height="15" fill="rgb(251,41,37)" fg:x="887" fg:w="1"/><text x="73.7380%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.33%)</title><rect x="72.3281%" y="613" width="1.3256%" height="15" fill="rgb(239,152,21)" fg:x="873" fg:w="16"/><text x="72.5781%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.66%)</title><rect x="72.9909%" y="597" width="0.6628%" height="15" fill="rgb(226,32,1)" fg:x="881" fg:w="8"/><text x="73.2409%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.66%)</title><rect x="72.9909%" y="581" width="0.6628%" height="15" fill="rgb(230,154,36)" fg:x="881" fg:w="8"/><text x="73.2409%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.66%)</title><rect x="72.9909%" y="565" width="0.6628%" height="15" fill="rgb(208,228,43)" fg:x="881" fg:w="8"/><text x="73.2409%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.66%)</title><rect x="72.9909%" y="549" width="0.6628%" height="15" fill="rgb(214,203,3)" fg:x="881" fg:w="8"/><text x="73.2409%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.58%)</title><rect x="73.0737%" y="533" width="0.5800%" height="15" fill="rgb(207,149,29)" fg:x="882" fg:w="7"/><text x="73.3237%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="73.3223%" y="517" width="0.3314%" height="15" fill="rgb(250,105,7)" fg:x="885" fg:w="4"/><text x="73.5723%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="73.3223%" y="501" width="0.3314%" height="15" fill="rgb(232,222,16)" fg:x="885" fg:w="4"/><text x="73.5723%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.25%)</title><rect x="73.4051%" y="485" width="0.2486%" height="15" fill="rgb(209,32,24)" fg:x="886" fg:w="3"/><text x="73.6551%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="73.4880%" y="469" width="0.1657%" height="15" fill="rgb(225,13,6)" fg:x="887" fg:w="2"/><text x="73.7380%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="73.5708%" y="453" width="0.0829%" height="15" fill="rgb(245,226,26)" fg:x="888" fg:w="1"/><text x="73.8208%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="73.6537%" y="517" width="0.1657%" height="15" fill="rgb(229,178,27)" fg:x="889" fg:w="2"/><text x="73.9037%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="73.6537%" y="501" width="0.1657%" height="15" fill="rgb(205,227,28)" fg:x="889" fg:w="2"/><text x="73.9037%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="73.6537%" y="565" width="0.2486%" height="15" fill="rgb(210,191,45)" fg:x="889" fg:w="3"/><text x="73.9037%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="73.6537%" y="549" width="0.2486%" height="15" fill="rgb(206,124,16)" fg:x="889" fg:w="3"/><text x="73.9037%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="73.6537%" y="533" width="0.2486%" height="15" fill="rgb(210,162,0)" fg:x="889" fg:w="3"/><text x="73.9037%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8194%" y="517" width="0.0829%" height="15" fill="rgb(211,54,38)" fg:x="891" fg:w="1"/><text x="74.0694%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="73.6537%" y="613" width="0.3314%" height="15" fill="rgb(248,192,3)" fg:x="889" fg:w="4"/><text x="73.9037%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="73.6537%" y="597" width="0.3314%" height="15" fill="rgb(233,187,18)" fg:x="889" fg:w="4"/><text x="73.9037%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="73.6537%" y="581" width="0.3314%" height="15" fill="rgb(237,208,14)" fg:x="889" fg:w="4"/><text x="73.9037%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.9022%" y="565" width="0.0829%" height="15" fill="rgb(212,77,1)" fg:x="892" fg:w="1"/><text x="74.1522%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9022%" y="549" width="0.0829%" height="15" fill="rgb(210,163,22)" fg:x="892" fg:w="1"/><text x="74.1522%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.9022%" y="533" width="0.0829%" height="15" fill="rgb(250,58,28)" fg:x="892" fg:w="1"/><text x="74.1522%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9022%" y="517" width="0.0829%" height="15" fill="rgb(254,28,41)" fg:x="892" fg:w="1"/><text x="74.1522%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.9022%" y="501" width="0.0829%" height="15" fill="rgb(237,162,36)" fg:x="892" fg:w="1"/><text x="74.1522%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9022%" y="485" width="0.0829%" height="15" fill="rgb(232,56,6)" fg:x="892" fg:w="1"/><text x="74.1522%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.24%)</title><rect x="71.8310%" y="629" width="2.2370%" height="15" fill="rgb(216,127,42)" fg:x="867" fg:w="27"/><text x="72.0810%" y="639.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="73.9851%" y="613" width="0.0829%" height="15" fill="rgb(241,69,15)" fg:x="893" fg:w="1"/><text x="74.2351%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.9851%" y="597" width="0.0829%" height="15" fill="rgb(227,180,19)" fg:x="893" fg:w="1"/><text x="74.2351%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (28 samples, 2.32%)</title><rect x="71.8310%" y="645" width="2.3198%" height="15" fill="rgb(231,188,29)" fg:x="867" fg:w="28"/><text x="72.0810%" y="655.50">&lt;..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="74.0679%" y="629" width="0.0829%" height="15" fill="rgb(224,176,27)" fg:x="894" fg:w="1"/><text x="74.3179%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0679%" y="613" width="0.0829%" height="15" fill="rgb(249,214,19)" fg:x="894" fg:w="1"/><text x="74.3179%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2336%" y="597" width="0.0829%" height="15" fill="rgb(240,0,4)" fg:x="896" fg:w="1"/><text x="74.4836%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2336%" y="581" width="0.0829%" height="15" fill="rgb(233,28,41)" fg:x="896" fg:w="1"/><text x="74.4836%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2336%" y="565" width="0.0829%" height="15" fill="rgb(220,90,51)" fg:x="896" fg:w="1"/><text x="74.4836%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.2336%" y="549" width="0.0829%" height="15" fill="rgb(250,52,22)" fg:x="896" fg:w="1"/><text x="74.4836%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.2336%" y="533" width="0.0829%" height="15" fill="rgb(231,152,36)" fg:x="896" fg:w="1"/><text x="74.4836%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.2336%" y="517" width="0.0829%" height="15" fill="rgb(250,218,4)" fg:x="896" fg:w="1"/><text x="74.4836%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2336%" y="501" width="0.0829%" height="15" fill="rgb(210,38,21)" fg:x="896" fg:w="1"/><text x="74.4836%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2336%" y="485" width="0.0829%" height="15" fill="rgb(230,75,13)" fg:x="896" fg:w="1"/><text x="74.4836%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.2336%" y="469" width="0.0829%" height="15" fill="rgb(250,68,53)" fg:x="896" fg:w="1"/><text x="74.4836%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.2336%" y="453" width="0.0829%" height="15" fill="rgb(250,210,16)" fg:x="896" fg:w="1"/><text x="74.4836%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.2336%" y="437" width="0.0829%" height="15" fill="rgb(240,132,5)" fg:x="896" fg:w="1"/><text x="74.4836%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.2336%" y="421" width="0.0829%" height="15" fill="rgb(222,148,48)" fg:x="896" fg:w="1"/><text x="74.4836%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2336%" y="405" width="0.0829%" height="15" fill="rgb(247,181,24)" fg:x="896" fg:w="1"/><text x="74.4836%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3993%" y="517" width="0.0829%" height="15" fill="rgb(239,5,31)" fg:x="898" fg:w="1"/><text x="74.6493%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3993%" y="501" width="0.0829%" height="15" fill="rgb(241,152,38)" fg:x="898" fg:w="1"/><text x="74.6493%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3993%" y="485" width="0.0829%" height="15" fill="rgb(246,200,37)" fg:x="898" fg:w="1"/><text x="74.6493%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3993%" y="469" width="0.0829%" height="15" fill="rgb(243,210,26)" fg:x="898" fg:w="1"/><text x="74.6493%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="74.3165%" y="565" width="0.2486%" height="15" fill="rgb(222,22,22)" fg:x="897" fg:w="3"/><text x="74.5665%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="74.3165%" y="549" width="0.2486%" height="15" fill="rgb(208,129,28)" fg:x="897" fg:w="3"/><text x="74.5665%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="74.3165%" y="533" width="0.2486%" height="15" fill="rgb(254,169,28)" fg:x="897" fg:w="3"/><text x="74.5665%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4822%" y="517" width="0.0829%" height="15" fill="rgb(225,45,17)" fg:x="899" fg:w="1"/><text x="74.7322%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4822%" y="501" width="0.0829%" height="15" fill="rgb(232,199,2)" fg:x="899" fg:w="1"/><text x="74.7322%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4822%" y="485" width="0.0829%" height="15" fill="rgb(235,33,40)" fg:x="899" fg:w="1"/><text x="74.7322%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4822%" y="469" width="0.0829%" height="15" fill="rgb(237,89,50)" fg:x="899" fg:w="1"/><text x="74.7322%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.4822%" y="453" width="0.0829%" height="15" fill="rgb(238,126,5)" fg:x="899" fg:w="1"/><text x="74.7322%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4822%" y="437" width="0.0829%" height="15" fill="rgb(247,214,42)" fg:x="899" fg:w="1"/><text x="74.7322%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4822%" y="421" width="0.0829%" height="15" fill="rgb(238,60,45)" fg:x="899" fg:w="1"/><text x="74.7322%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4822%" y="405" width="0.0829%" height="15" fill="rgb(225,69,44)" fg:x="899" fg:w="1"/><text x="74.7322%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.50%)</title><rect x="74.3165%" y="597" width="0.4971%" height="15" fill="rgb(241,13,44)" fg:x="897" fg:w="6"/><text x="74.5665%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.50%)</title><rect x="74.3165%" y="581" width="0.4971%" height="15" fill="rgb(227,121,22)" fg:x="897" fg:w="6"/><text x="74.5665%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.25%)</title><rect x="74.5650%" y="565" width="0.2486%" height="15" fill="rgb(231,160,23)" fg:x="900" fg:w="3"/><text x="74.8150%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="74.5650%" y="549" width="0.2486%" height="15" fill="rgb(250,179,43)" fg:x="900" fg:w="3"/><text x="74.8150%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="74.5650%" y="533" width="0.2486%" height="15" fill="rgb(233,54,46)" fg:x="900" fg:w="3"/><text x="74.8150%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="74.5650%" y="517" width="0.2486%" height="15" fill="rgb(247,120,42)" fg:x="900" fg:w="3"/><text x="74.8150%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="74.5650%" y="501" width="0.2486%" height="15" fill="rgb(221,219,12)" fg:x="900" fg:w="3"/><text x="74.8150%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="74.6479%" y="485" width="0.1657%" height="15" fill="rgb(211,126,8)" fg:x="901" fg:w="2"/><text x="74.8979%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="74.6479%" y="469" width="0.1657%" height="15" fill="rgb(218,154,33)" fg:x="901" fg:w="2"/><text x="74.8979%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.7307%" y="453" width="0.0829%" height="15" fill="rgb(212,199,16)" fg:x="902" fg:w="1"/><text x="74.9807%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.7307%" y="437" width="0.0829%" height="15" fill="rgb(236,215,46)" fg:x="902" fg:w="1"/><text x="74.9807%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7307%" y="421" width="0.0829%" height="15" fill="rgb(232,32,22)" fg:x="902" fg:w="1"/><text x="74.9807%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.8136%" y="533" width="0.0829%" height="15" fill="rgb(234,79,15)" fg:x="903" fg:w="1"/><text x="75.0636%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.17%)</title><rect x="74.9793%" y="501" width="0.1657%" height="15" fill="rgb(235,187,47)" fg:x="905" fg:w="2"/><text x="75.2293%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="74.9793%" y="485" width="0.1657%" height="15" fill="rgb(244,69,37)" fg:x="905" fg:w="2"/><text x="75.2293%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2278%" y="469" width="0.0829%" height="15" fill="rgb(249,140,25)" fg:x="908" fg:w="1"/><text x="75.4778%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2278%" y="453" width="0.0829%" height="15" fill="rgb(213,69,8)" fg:x="908" fg:w="1"/><text x="75.4778%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2278%" y="437" width="0.0829%" height="15" fill="rgb(220,136,2)" fg:x="908" fg:w="1"/><text x="75.4778%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.3935%" y="437" width="0.0829%" height="15" fill="rgb(237,50,36)" fg:x="910" fg:w="1"/><text x="75.6435%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.3935%" y="421" width="0.0829%" height="15" fill="rgb(226,18,11)" fg:x="910" fg:w="1"/><text x="75.6435%" y="431.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.99%)</title><rect x="74.8136%" y="581" width="0.9942%" height="15" fill="rgb(243,156,2)" fg:x="903" fg:w="12"/><text x="75.0636%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.99%)</title><rect x="74.8136%" y="565" width="0.9942%" height="15" fill="rgb(218,8,34)" fg:x="903" fg:w="12"/><text x="75.0636%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.99%)</title><rect x="74.8136%" y="549" width="0.9942%" height="15" fill="rgb(250,94,35)" fg:x="903" fg:w="12"/><text x="75.0636%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.91%)</title><rect x="74.8964%" y="533" width="0.9114%" height="15" fill="rgb(229,127,21)" fg:x="904" fg:w="11"/><text x="75.1464%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.91%)</title><rect x="74.8964%" y="517" width="0.9114%" height="15" fill="rgb(234,49,5)" fg:x="904" fg:w="11"/><text x="75.1464%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.66%)</title><rect x="75.1450%" y="501" width="0.6628%" height="15" fill="rgb(248,12,16)" fg:x="907" fg:w="8"/><text x="75.3950%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.58%)</title><rect x="75.2278%" y="485" width="0.5800%" height="15" fill="rgb(208,220,31)" fg:x="908" fg:w="7"/><text x="75.4778%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.50%)</title><rect x="75.3107%" y="469" width="0.4971%" height="15" fill="rgb(243,184,0)" fg:x="909" fg:w="6"/><text x="75.5607%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="75.3935%" y="453" width="0.4143%" height="15" fill="rgb(217,38,21)" fg:x="910" fg:w="5"/><text x="75.6435%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="75.4764%" y="437" width="0.3314%" height="15" fill="rgb(239,120,45)" fg:x="911" fg:w="4"/><text x="75.7264%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="75.4764%" y="421" width="0.3314%" height="15" fill="rgb(235,33,2)" fg:x="911" fg:w="4"/><text x="75.7264%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="75.6421%" y="405" width="0.1657%" height="15" fill="rgb(249,161,5)" fg:x="913" fg:w="2"/><text x="75.8921%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="75.6421%" y="389" width="0.1657%" height="15" fill="rgb(250,165,48)" fg:x="913" fg:w="2"/><text x="75.8921%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.7249%" y="373" width="0.0829%" height="15" fill="rgb(221,23,45)" fg:x="914" fg:w="1"/><text x="75.9749%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7249%" y="357" width="0.0829%" height="15" fill="rgb(217,108,46)" fg:x="914" fg:w="1"/><text x="75.9749%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.8078%" y="517" width="0.0829%" height="15" fill="rgb(254,26,35)" fg:x="915" fg:w="1"/><text x="76.0578%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8906%" y="517" width="0.0829%" height="15" fill="rgb(218,223,28)" fg:x="916" fg:w="1"/><text x="76.1406%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.9735%" y="517" width="0.0829%" height="15" fill="rgb(242,27,47)" fg:x="917" fg:w="1"/><text x="76.2235%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9735%" y="501" width="0.0829%" height="15" fill="rgb(218,39,35)" fg:x="917" fg:w="1"/><text x="76.2235%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.0563%" y="501" width="0.0829%" height="15" fill="rgb(232,127,16)" fg:x="918" fg:w="1"/><text x="76.3063%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.0563%" y="485" width="0.0829%" height="15" fill="rgb(231,219,51)" fg:x="918" fg:w="1"/><text x="76.3063%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.0563%" y="469" width="0.0829%" height="15" fill="rgb(217,220,46)" fg:x="918" fg:w="1"/><text x="76.3063%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.0563%" y="453" width="0.0829%" height="15" fill="rgb(230,75,1)" fg:x="918" fg:w="1"/><text x="76.3063%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.0563%" y="437" width="0.0829%" height="15" fill="rgb(218,2,8)" fg:x="918" fg:w="1"/><text x="76.3063%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.0563%" y="421" width="0.0829%" height="15" fill="rgb(206,111,30)" fg:x="918" fg:w="1"/><text x="76.3063%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="76.2220%" y="469" width="0.1657%" height="15" fill="rgb(209,135,6)" fg:x="920" fg:w="2"/><text x="76.4720%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="76.2220%" y="453" width="0.1657%" height="15" fill="rgb(205,169,10)" fg:x="920" fg:w="2"/><text x="76.4720%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="76.2220%" y="437" width="0.1657%" height="15" fill="rgb(212,204,38)" fg:x="920" fg:w="2"/><text x="76.4720%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="76.2220%" y="421" width="0.1657%" height="15" fill="rgb(205,199,14)" fg:x="920" fg:w="2"/><text x="76.4720%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="76.2220%" y="405" width="0.1657%" height="15" fill="rgb(212,4,6)" fg:x="920" fg:w="2"/><text x="76.4720%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="76.2220%" y="389" width="0.1657%" height="15" fill="rgb(250,15,10)" fg:x="920" fg:w="2"/><text x="76.4720%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="76.2220%" y="373" width="0.1657%" height="15" fill="rgb(212,49,51)" fg:x="920" fg:w="2"/><text x="76.4720%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="76.2220%" y="357" width="0.1657%" height="15" fill="rgb(235,21,9)" fg:x="920" fg:w="2"/><text x="76.4720%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="76.2220%" y="341" width="0.1657%" height="15" fill="rgb(251,31,32)" fg:x="920" fg:w="2"/><text x="76.4720%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.17%)</title><rect x="76.2220%" y="325" width="0.1657%" height="15" fill="rgb(246,23,9)" fg:x="920" fg:w="2"/><text x="76.4720%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="76.2220%" y="309" width="0.1657%" height="15" fill="rgb(225,216,14)" fg:x="920" fg:w="2"/><text x="76.4720%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="76.2220%" y="293" width="0.1657%" height="15" fill="rgb(215,200,26)" fg:x="920" fg:w="2"/><text x="76.4720%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.3049%" y="277" width="0.0829%" height="15" fill="rgb(237,130,47)" fg:x="921" fg:w="1"/><text x="76.5549%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.3049%" y="261" width="0.0829%" height="15" fill="rgb(247,74,14)" fg:x="921" fg:w="1"/><text x="76.5549%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3049%" y="245" width="0.0829%" height="15" fill="rgb(254,97,46)" fg:x="921" fg:w="1"/><text x="76.5549%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.66%)</title><rect x="75.8078%" y="549" width="0.6628%" height="15" fill="rgb(234,191,1)" fg:x="915" fg:w="8"/><text x="76.0578%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.66%)</title><rect x="75.8078%" y="533" width="0.6628%" height="15" fill="rgb(215,165,14)" fg:x="915" fg:w="8"/><text x="76.0578%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="76.0563%" y="517" width="0.4143%" height="15" fill="rgb(230,182,6)" fg:x="918" fg:w="5"/><text x="76.3063%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="76.1392%" y="501" width="0.3314%" height="15" fill="rgb(210,127,39)" fg:x="919" fg:w="4"/><text x="76.3892%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="76.1392%" y="485" width="0.3314%" height="15" fill="rgb(223,212,51)" fg:x="919" fg:w="4"/><text x="76.3892%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3877%" y="469" width="0.0829%" height="15" fill="rgb(226,176,43)" fg:x="922" fg:w="1"/><text x="76.6377%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (21 samples, 1.74%)</title><rect x="74.8136%" y="597" width="1.7399%" height="15" fill="rgb(222,155,4)" fg:x="903" fg:w="21"/><text x="75.0636%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.75%)</title><rect x="75.8078%" y="581" width="0.7457%" height="15" fill="rgb(215,149,7)" fg:x="915" fg:w="9"/><text x="76.0578%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.75%)</title><rect x="75.8078%" y="565" width="0.7457%" height="15" fill="rgb(252,199,23)" fg:x="915" fg:w="9"/><text x="76.0578%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.4706%" y="549" width="0.0829%" height="15" fill="rgb(245,52,29)" fg:x="923" fg:w="1"/><text x="76.7206%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6363%" y="453" width="0.0829%" height="15" fill="rgb(221,228,19)" fg:x="925" fg:w="1"/><text x="76.8863%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.6363%" y="437" width="0.0829%" height="15" fill="rgb(253,101,6)" fg:x="925" fg:w="1"/><text x="76.8863%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="76.5534%" y="597" width="0.2486%" height="15" fill="rgb(211,130,8)" fg:x="924" fg:w="3"/><text x="76.8034%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="76.5534%" y="581" width="0.2486%" height="15" fill="rgb(238,37,53)" fg:x="924" fg:w="3"/><text x="76.8034%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="76.5534%" y="565" width="0.2486%" height="15" fill="rgb(235,145,5)" fg:x="924" fg:w="3"/><text x="76.8034%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="76.5534%" y="549" width="0.2486%" height="15" fill="rgb(244,12,43)" fg:x="924" fg:w="3"/><text x="76.8034%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="76.5534%" y="533" width="0.2486%" height="15" fill="rgb(246,195,24)" fg:x="924" fg:w="3"/><text x="76.8034%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="76.5534%" y="517" width="0.2486%" height="15" fill="rgb(235,163,6)" fg:x="924" fg:w="3"/><text x="76.8034%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="76.5534%" y="501" width="0.2486%" height="15" fill="rgb(236,218,17)" fg:x="924" fg:w="3"/><text x="76.8034%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="76.5534%" y="485" width="0.2486%" height="15" fill="rgb(235,12,38)" fg:x="924" fg:w="3"/><text x="76.8034%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="76.5534%" y="469" width="0.2486%" height="15" fill="rgb(225,195,33)" fg:x="924" fg:w="3"/><text x="76.8034%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7191%" y="453" width="0.0829%" height="15" fill="rgb(238,54,35)" fg:x="926" fg:w="1"/><text x="76.9691%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7191%" y="437" width="0.0829%" height="15" fill="rgb(238,33,7)" fg:x="926" fg:w="1"/><text x="76.9691%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (33 samples, 2.73%)</title><rect x="74.1508%" y="629" width="2.7341%" height="15" fill="rgb(245,5,14)" fg:x="895" fg:w="33"/><text x="74.4008%" y="639.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (33 samples, 2.73%)</title><rect x="74.1508%" y="613" width="2.7341%" height="15" fill="rgb(251,95,31)" fg:x="895" fg:w="33"/><text x="74.4008%" y="623.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="76.8020%" y="597" width="0.0829%" height="15" fill="rgb(222,15,46)" fg:x="927" fg:w="1"/><text x="77.0520%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.8848%" y="437" width="0.0829%" height="15" fill="rgb(226,182,24)" fg:x="928" fg:w="1"/><text x="77.1348%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.8848%" y="421" width="0.0829%" height="15" fill="rgb(229,105,41)" fg:x="928" fg:w="1"/><text x="77.1348%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="76.8848%" y="405" width="0.0829%" height="15" fill="rgb(216,99,53)" fg:x="928" fg:w="1"/><text x="77.1348%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="76.8848%" y="389" width="0.0829%" height="15" fill="rgb(253,26,20)" fg:x="928" fg:w="1"/><text x="77.1348%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="76.8848%" y="373" width="0.0829%" height="15" fill="rgb(249,155,28)" fg:x="928" fg:w="1"/><text x="77.1348%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="76.8848%" y="357" width="0.0829%" height="15" fill="rgb(241,221,2)" fg:x="928" fg:w="1"/><text x="77.1348%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.8848%" y="341" width="0.0829%" height="15" fill="rgb(219,124,6)" fg:x="928" fg:w="1"/><text x="77.1348%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (35 samples, 2.90%)</title><rect x="74.1508%" y="645" width="2.8998%" height="15" fill="rgb(233,37,6)" fg:x="895" fg:w="35"/><text x="74.4008%" y="655.50">&lt;e..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.17%)</title><rect x="76.8848%" y="629" width="0.1657%" height="15" fill="rgb(238,20,14)" fg:x="928" fg:w="2"/><text x="77.1348%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.17%)</title><rect x="76.8848%" y="613" width="0.1657%" height="15" fill="rgb(232,106,27)" fg:x="928" fg:w="2"/><text x="77.1348%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.17%)</title><rect x="76.8848%" y="597" width="0.1657%" height="15" fill="rgb(246,157,24)" fg:x="928" fg:w="2"/><text x="77.1348%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="76.8848%" y="581" width="0.1657%" height="15" fill="rgb(214,153,10)" fg:x="928" fg:w="2"/><text x="77.1348%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="76.8848%" y="565" width="0.1657%" height="15" fill="rgb(212,94,6)" fg:x="928" fg:w="2"/><text x="77.1348%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="76.8848%" y="549" width="0.1657%" height="15" fill="rgb(254,25,27)" fg:x="928" fg:w="2"/><text x="77.1348%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="76.8848%" y="533" width="0.1657%" height="15" fill="rgb(250,43,52)" fg:x="928" fg:w="2"/><text x="77.1348%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="76.8848%" y="517" width="0.1657%" height="15" fill="rgb(221,226,40)" fg:x="928" fg:w="2"/><text x="77.1348%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="76.8848%" y="501" width="0.1657%" height="15" fill="rgb(235,162,34)" fg:x="928" fg:w="2"/><text x="77.1348%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.17%)</title><rect x="76.8848%" y="485" width="0.1657%" height="15" fill="rgb(239,24,26)" fg:x="928" fg:w="2"/><text x="77.1348%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.17%)</title><rect x="76.8848%" y="469" width="0.1657%" height="15" fill="rgb(244,226,11)" fg:x="928" fg:w="2"/><text x="77.1348%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="76.8848%" y="453" width="0.1657%" height="15" fill="rgb(225,23,10)" fg:x="928" fg:w="2"/><text x="77.1348%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.9677%" y="437" width="0.0829%" height="15" fill="rgb(249,125,6)" fg:x="929" fg:w="1"/><text x="77.2177%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.9677%" y="421" width="0.0829%" height="15" fill="rgb(246,212,12)" fg:x="929" fg:w="1"/><text x="77.2177%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.9677%" y="405" width="0.0829%" height="15" fill="rgb(230,43,32)" fg:x="929" fg:w="1"/><text x="77.2177%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="76.9677%" y="389" width="0.0829%" height="15" fill="rgb(210,95,23)" fg:x="929" fg:w="1"/><text x="77.2177%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="76.9677%" y="373" width="0.0829%" height="15" fill="rgb(229,103,33)" fg:x="929" fg:w="1"/><text x="77.2177%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="76.9677%" y="357" width="0.0829%" height="15" fill="rgb(222,104,27)" fg:x="929" fg:w="1"/><text x="77.2177%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="76.9677%" y="341" width="0.0829%" height="15" fill="rgb(239,221,23)" fg:x="929" fg:w="1"/><text x="77.2177%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.9677%" y="325" width="0.0829%" height="15" fill="rgb(222,98,21)" fg:x="929" fg:w="1"/><text x="77.2177%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1334%" y="597" width="0.0829%" height="15" fill="rgb(231,101,20)" fg:x="931" fg:w="1"/><text x="77.3834%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1334%" y="581" width="0.0829%" height="15" fill="rgb(215,150,22)" fg:x="931" fg:w="1"/><text x="77.3834%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1334%" y="565" width="0.0829%" height="15" fill="rgb(248,3,34)" fg:x="931" fg:w="1"/><text x="77.3834%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2162%" y="565" width="0.0829%" height="15" fill="rgb(220,141,21)" fg:x="932" fg:w="1"/><text x="77.4662%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2162%" y="549" width="0.0829%" height="15" fill="rgb(223,41,48)" fg:x="932" fg:w="1"/><text x="77.4662%" y="559.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.33%)</title><rect x="77.0505%" y="645" width="0.3314%" height="15" fill="rgb(247,12,5)" fg:x="930" fg:w="4"/><text x="77.3005%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.25%)</title><rect x="77.1334%" y="629" width="0.2486%" height="15" fill="rgb(206,173,10)" fg:x="931" fg:w="3"/><text x="77.3834%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="77.1334%" y="613" width="0.2486%" height="15" fill="rgb(233,214,37)" fg:x="931" fg:w="3"/><text x="77.3834%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="77.2162%" y="597" width="0.1657%" height="15" fill="rgb(238,86,43)" fg:x="932" fg:w="2"/><text x="77.4662%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="77.2162%" y="581" width="0.1657%" height="15" fill="rgb(212,182,8)" fg:x="932" fg:w="2"/><text x="77.4662%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.2991%" y="565" width="0.0829%" height="15" fill="rgb(240,91,47)" fg:x="933" fg:w="1"/><text x="77.5491%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.2991%" y="549" width="0.0829%" height="15" fill="rgb(209,138,26)" fg:x="933" fg:w="1"/><text x="77.5491%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2991%" y="533" width="0.0829%" height="15" fill="rgb(231,163,20)" fg:x="933" fg:w="1"/><text x="77.5491%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2991%" y="517" width="0.0829%" height="15" fill="rgb(214,91,54)" fg:x="933" fg:w="1"/><text x="77.5491%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.3819%" y="437" width="0.0829%" height="15" fill="rgb(230,32,17)" fg:x="934" fg:w="1"/><text x="77.6319%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.3819%" y="421" width="0.0829%" height="15" fill="rgb(231,34,34)" fg:x="934" fg:w="1"/><text x="77.6319%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.25%)</title><rect x="77.3819%" y="645" width="0.2486%" height="15" fill="rgb(224,228,27)" fg:x="934" fg:w="3"/><text x="77.6319%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.25%)</title><rect x="77.3819%" y="629" width="0.2486%" height="15" fill="rgb(219,35,40)" fg:x="934" fg:w="3"/><text x="77.6319%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.25%)</title><rect x="77.3819%" y="613" width="0.2486%" height="15" fill="rgb(234,42,8)" fg:x="934" fg:w="3"/><text x="77.6319%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="77.3819%" y="597" width="0.2486%" height="15" fill="rgb(226,75,22)" fg:x="934" fg:w="3"/><text x="77.6319%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="77.3819%" y="581" width="0.2486%" height="15" fill="rgb(242,203,28)" fg:x="934" fg:w="3"/><text x="77.6319%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="77.3819%" y="565" width="0.2486%" height="15" fill="rgb(221,3,9)" fg:x="934" fg:w="3"/><text x="77.6319%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="77.3819%" y="549" width="0.2486%" height="15" fill="rgb(214,34,31)" fg:x="934" fg:w="3"/><text x="77.6319%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="77.3819%" y="533" width="0.2486%" height="15" fill="rgb(252,119,15)" fg:x="934" fg:w="3"/><text x="77.6319%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="77.3819%" y="517" width="0.2486%" height="15" fill="rgb(244,224,31)" fg:x="934" fg:w="3"/><text x="77.6319%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="77.3819%" y="501" width="0.2486%" height="15" fill="rgb(215,8,51)" fg:x="934" fg:w="3"/><text x="77.6319%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="77.3819%" y="485" width="0.2486%" height="15" fill="rgb(207,24,1)" fg:x="934" fg:w="3"/><text x="77.6319%" y="495.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="77.3819%" y="469" width="0.2486%" height="15" fill="rgb(245,90,0)" fg:x="934" fg:w="3"/><text x="77.6319%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="77.3819%" y="453" width="0.2486%" height="15" fill="rgb(246,43,48)" fg:x="934" fg:w="3"/><text x="77.6319%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="77.4648%" y="437" width="0.1657%" height="15" fill="rgb(252,218,10)" fg:x="935" fg:w="2"/><text x="77.7148%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="77.4648%" y="421" width="0.1657%" height="15" fill="rgb(231,24,35)" fg:x="935" fg:w="2"/><text x="77.7148%" y="431.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.17%)</title><rect x="77.4648%" y="405" width="0.1657%" height="15" fill="rgb(225,66,19)" fg:x="935" fg:w="2"/><text x="77.7148%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.17%)</title><rect x="77.4648%" y="389" width="0.1657%" height="15" fill="rgb(214,96,51)" fg:x="935" fg:w="2"/><text x="77.7148%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.17%)</title><rect x="77.4648%" y="373" width="0.1657%" height="15" fill="rgb(251,151,47)" fg:x="935" fg:w="2"/><text x="77.7148%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.17%)</title><rect x="77.4648%" y="357" width="0.1657%" height="15" fill="rgb(236,79,14)" fg:x="935" fg:w="2"/><text x="77.7148%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="77.4648%" y="341" width="0.1657%" height="15" fill="rgb(210,205,11)" fg:x="935" fg:w="2"/><text x="77.7148%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="77.4648%" y="325" width="0.1657%" height="15" fill="rgb(233,142,53)" fg:x="935" fg:w="2"/><text x="77.7148%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="77.4648%" y="309" width="0.1657%" height="15" fill="rgb(212,116,48)" fg:x="935" fg:w="2"/><text x="77.7148%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.17%)</title><rect x="77.4648%" y="293" width="0.1657%" height="15" fill="rgb(234,55,33)" fg:x="935" fg:w="2"/><text x="77.7148%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="77.4648%" y="277" width="0.1657%" height="15" fill="rgb(253,92,27)" fg:x="935" fg:w="2"/><text x="77.7148%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.17%)</title><rect x="77.4648%" y="261" width="0.1657%" height="15" fill="rgb(220,7,35)" fg:x="935" fg:w="2"/><text x="77.7148%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.17%)</title><rect x="77.4648%" y="245" width="0.1657%" height="15" fill="rgb(246,124,6)" fg:x="935" fg:w="2"/><text x="77.7148%" y="255.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.17%)</title><rect x="77.4648%" y="229" width="0.1657%" height="15" fill="rgb(212,111,51)" fg:x="935" fg:w="2"/><text x="77.7148%" y="239.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="77.4648%" y="213" width="0.1657%" height="15" fill="rgb(253,116,7)" fg:x="935" fg:w="2"/><text x="77.7148%" y="223.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (121 samples, 10.02%)</title><rect x="67.6885%" y="661" width="10.0249%" height="15" fill="rgb(213,145,18)" fg:x="817" fg:w="121"/><text x="67.9385%" y="671.50">engine::sessio..</text></g><g><title>kernel::session::SetSession::new (1 samples, 0.08%)</title><rect x="77.6305%" y="645" width="0.0829%" height="15" fill="rgb(219,149,7)" fg:x="937" fg:w="1"/><text x="77.8805%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (939 samples, 77.80%)</title><rect x="0.0000%" y="709" width="77.7962%" height="15" fill="rgb(225,156,20)" fg:x="0" fg:w="939"/><text x="0.2500%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (939 samples, 77.80%)</title><rect x="0.0000%" y="693" width="77.7962%" height="15" fill="rgb(211,98,19)" fg:x="0" fg:w="939"/><text x="0.2500%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (939 samples, 77.80%)</title><rect x="0.0000%" y="677" width="77.7962%" height="15" fill="rgb(231,192,31)" fg:x="0" fg:w="939"/><text x="0.2500%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="77.7133%" y="661" width="0.0829%" height="15" fill="rgb(249,95,19)" fg:x="938" fg:w="1"/><text x="77.9633%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="77.7962%" y="645" width="0.0829%" height="15" fill="rgb(247,101,36)" fg:x="939" fg:w="1"/><text x="78.0462%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7962%" y="629" width="0.0829%" height="15" fill="rgb(221,45,43)" fg:x="939" fg:w="1"/><text x="78.0462%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1276%" y="549" width="0.0829%" height="15" fill="rgb(220,42,1)" fg:x="943" fg:w="1"/><text x="78.3776%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1276%" y="533" width="0.0829%" height="15" fill="rgb(236,19,24)" fg:x="943" fg:w="1"/><text x="78.3776%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="78.2104%" y="533" width="0.2486%" height="15" fill="rgb(225,192,6)" fg:x="944" fg:w="3"/><text x="78.4604%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="78.2104%" y="517" width="0.2486%" height="15" fill="rgb(242,30,19)" fg:x="944" fg:w="3"/><text x="78.4604%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="78.2104%" y="501" width="0.2486%" height="15" fill="rgb(240,36,6)" fg:x="944" fg:w="3"/><text x="78.4604%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.17%)</title><rect x="78.5418%" y="501" width="0.1657%" height="15" fill="rgb(246,40,28)" fg:x="948" fg:w="2"/><text x="78.7918%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="78.5418%" y="485" width="0.1657%" height="15" fill="rgb(225,155,33)" fg:x="948" fg:w="2"/><text x="78.7918%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.83%)</title><rect x="77.9619%" y="581" width="0.8285%" height="15" fill="rgb(240,65,18)" fg:x="941" fg:w="10"/><text x="78.2119%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.83%)</title><rect x="77.9619%" y="565" width="0.8285%" height="15" fill="rgb(217,0,48)" fg:x="941" fg:w="10"/><text x="78.2119%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.58%)</title><rect x="78.2104%" y="549" width="0.5800%" height="15" fill="rgb(217,80,15)" fg:x="944" fg:w="7"/><text x="78.4604%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="78.4590%" y="533" width="0.3314%" height="15" fill="rgb(253,43,51)" fg:x="947" fg:w="4"/><text x="78.7090%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="78.5418%" y="517" width="0.2486%" height="15" fill="rgb(246,60,4)" fg:x="948" fg:w="3"/><text x="78.7918%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.7075%" y="501" width="0.0829%" height="15" fill="rgb(230,40,54)" fg:x="950" fg:w="1"/><text x="78.9575%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.7075%" y="485" width="0.0829%" height="15" fill="rgb(208,20,44)" fg:x="950" fg:w="1"/><text x="78.9575%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7075%" y="469" width="0.0829%" height="15" fill="rgb(230,22,22)" fg:x="950" fg:w="1"/><text x="78.9575%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.99%)</title><rect x="77.8790%" y="597" width="0.9942%" height="15" fill="rgb(207,57,4)" fg:x="940" fg:w="12"/><text x="78.1290%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7904%" y="581" width="0.0829%" height="15" fill="rgb(242,130,33)" fg:x="951" fg:w="1"/><text x="79.0404%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.16%)</title><rect x="77.7962%" y="661" width="1.1599%" height="15" fill="rgb(218,66,43)" fg:x="939" fg:w="14"/><text x="78.0462%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.08%)</title><rect x="77.8790%" y="645" width="1.0771%" height="15" fill="rgb(236,105,16)" fg:x="940" fg:w="13"/><text x="78.1290%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.08%)</title><rect x="77.8790%" y="629" width="1.0771%" height="15" fill="rgb(230,46,15)" fg:x="940" fg:w="13"/><text x="78.1290%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (13 samples, 1.08%)</title><rect x="77.8790%" y="613" width="1.0771%" height="15" fill="rgb(251,172,40)" fg:x="940" fg:w="13"/><text x="78.1290%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="78.8732%" y="597" width="0.0829%" height="15" fill="rgb(225,217,32)" fg:x="952" fg:w="1"/><text x="79.1232%" y="607.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="79.1218%" y="517" width="0.0829%" height="15" fill="rgb(243,10,29)" fg:x="955" fg:w="1"/><text x="79.3718%" y="527.50"></text></g><g><title>dlerror (2 samples, 0.17%)</title><rect x="79.1218%" y="549" width="0.1657%" height="15" fill="rgb(207,102,10)" fg:x="955" fg:w="2"/><text x="79.3718%" y="559.50"></text></g><g><title>__asprintf (2 samples, 0.17%)</title><rect x="79.1218%" y="533" width="0.1657%" height="15" fill="rgb(241,125,5)" fg:x="955" fg:w="2"/><text x="79.3718%" y="543.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="79.2046%" y="517" width="0.0829%" height="15" fill="rgb(230,125,29)" fg:x="956" fg:w="1"/><text x="79.4546%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (3 samples, 0.25%)</title><rect x="79.1218%" y="597" width="0.2486%" height="15" fill="rgb(223,65,44)" fg:x="955" fg:w="3"/><text x="79.3718%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.25%)</title><rect x="79.1218%" y="581" width="0.2486%" height="15" fill="rgb(224,188,28)" fg:x="955" fg:w="3"/><text x="79.3718%" y="591.50"></text></g><g><title>libloading::safe::Library::new (3 samples, 0.25%)</title><rect x="79.1218%" y="565" width="0.2486%" height="15" fill="rgb(254,197,27)" fg:x="955" fg:w="3"/><text x="79.3718%" y="575.50"></text></g><g><title>dlopen (1 samples, 0.08%)</title><rect x="79.2875%" y="549" width="0.0829%" height="15" fill="rgb(220,200,25)" fg:x="957" fg:w="1"/><text x="79.5375%" y="559.50"></text></g><g><title>_dl_catch_error (1 samples, 0.08%)</title><rect x="79.2875%" y="533" width="0.0829%" height="15" fill="rgb(239,225,54)" fg:x="957" fg:w="1"/><text x="79.5375%" y="543.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="79.2875%" y="517" width="0.0829%" height="15" fill="rgb(211,59,40)" fg:x="957" fg:w="1"/><text x="79.5375%" y="527.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="79.2875%" y="501" width="0.0829%" height="15" fill="rgb(213,176,46)" fg:x="957" fg:w="1"/><text x="79.5375%" y="511.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="79.2875%" y="485" width="0.0829%" height="15" fill="rgb(226,99,4)" fg:x="957" fg:w="1"/><text x="79.5375%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (6 samples, 0.50%)</title><rect x="78.9561%" y="661" width="0.4971%" height="15" fill="rgb(239,203,43)" fg:x="953" fg:w="6"/><text x="79.2061%" y="671.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (6 samples, 0.50%)</title><rect x="78.9561%" y="645" width="0.4971%" height="15" fill="rgb(246,1,45)" fg:x="953" fg:w="6"/><text x="79.2061%" y="655.50"></text></g><g><title>engine::session::Session::new (5 samples, 0.41%)</title><rect x="79.0389%" y="629" width="0.4143%" height="15" fill="rgb(231,42,52)" fg:x="954" fg:w="5"/><text x="79.2889%" y="639.50"></text></g><g><title>engine::session::Session::initialize (4 samples, 0.33%)</title><rect x="79.1218%" y="613" width="0.3314%" height="15" fill="rgb(240,13,50)" fg:x="955" fg:w="4"/><text x="79.3718%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="79.3703%" y="597" width="0.0829%" height="15" fill="rgb(225,81,14)" fg:x="958" fg:w="1"/><text x="79.6203%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.3703%" y="581" width="0.0829%" height="15" fill="rgb(216,182,23)" fg:x="958" fg:w="1"/><text x="79.6203%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3703%" y="565" width="0.0829%" height="15" fill="rgb(233,137,19)" fg:x="958" fg:w="1"/><text x="79.6203%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="79.4532%" y="629" width="0.0829%" height="15" fill="rgb(242,61,46)" fg:x="959" fg:w="1"/><text x="79.7032%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.4532%" y="613" width="0.0829%" height="15" fill="rgb(221,168,51)" fg:x="959" fg:w="1"/><text x="79.7032%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.4532%" y="597" width="0.0829%" height="15" fill="rgb(238,48,15)" fg:x="959" fg:w="1"/><text x="79.7032%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.4532%" y="581" width="0.0829%" height="15" fill="rgb(216,13,16)" fg:x="959" fg:w="1"/><text x="79.7032%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.4532%" y="565" width="0.0829%" height="15" fill="rgb(223,185,34)" fg:x="959" fg:w="1"/><text x="79.7032%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.4532%" y="549" width="0.0829%" height="15" fill="rgb(228,94,42)" fg:x="959" fg:w="1"/><text x="79.7032%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="79.4532%" y="533" width="0.0829%" height="15" fill="rgb(218,166,43)" fg:x="959" fg:w="1"/><text x="79.7032%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.4532%" y="517" width="0.0829%" height="15" fill="rgb(232,30,50)" fg:x="959" fg:w="1"/><text x="79.7032%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.6189%" y="581" width="0.0829%" height="15" fill="rgb(245,206,45)" fg:x="961" fg:w="1"/><text x="79.8689%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.6189%" y="565" width="0.0829%" height="15" fill="rgb(220,56,22)" fg:x="961" fg:w="1"/><text x="79.8689%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.6189%" y="549" width="0.0829%" height="15" fill="rgb(239,129,38)" fg:x="961" fg:w="1"/><text x="79.8689%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.7846%" y="549" width="0.0829%" height="15" fill="rgb(207,68,41)" fg:x="963" fg:w="1"/><text x="80.0346%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.7846%" y="533" width="0.0829%" height="15" fill="rgb(221,21,7)" fg:x="963" fg:w="1"/><text x="80.0346%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="79.8674%" y="533" width="0.1657%" height="15" fill="rgb(240,33,25)" fg:x="964" fg:w="2"/><text x="80.1174%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="79.8674%" y="517" width="0.1657%" height="15" fill="rgb(242,119,10)" fg:x="964" fg:w="2"/><text x="80.1174%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="79.8674%" y="501" width="0.1657%" height="15" fill="rgb(214,149,40)" fg:x="964" fg:w="2"/><text x="80.1174%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.9503%" y="485" width="0.0829%" height="15" fill="rgb(228,25,36)" fg:x="965" fg:w="1"/><text x="80.2003%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.0331%" y="517" width="0.0829%" height="15" fill="rgb(222,59,15)" fg:x="966" fg:w="1"/><text x="80.2831%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.0331%" y="501" width="0.0829%" height="15" fill="rgb(218,170,0)" fg:x="966" fg:w="1"/><text x="80.2831%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.0331%" y="485" width="0.0829%" height="15" fill="rgb(232,173,23)" fg:x="966" fg:w="1"/><text x="80.2831%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.0331%" y="469" width="0.0829%" height="15" fill="rgb(218,116,1)" fg:x="966" fg:w="1"/><text x="80.2831%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.0331%" y="453" width="0.0829%" height="15" fill="rgb(207,34,4)" fg:x="966" fg:w="1"/><text x="80.2831%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.1160%" y="517" width="0.0829%" height="15" fill="rgb(229,54,52)" fg:x="967" fg:w="1"/><text x="80.3660%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.1988%" y="501" width="0.0829%" height="15" fill="rgb(211,86,23)" fg:x="968" fg:w="1"/><text x="80.4488%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.1988%" y="485" width="0.0829%" height="15" fill="rgb(254,153,34)" fg:x="968" fg:w="1"/><text x="80.4488%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.1988%" y="469" width="0.0829%" height="15" fill="rgb(219,220,14)" fg:x="968" fg:w="1"/><text x="80.4488%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.1988%" y="453" width="0.0829%" height="15" fill="rgb(247,8,26)" fg:x="968" fg:w="1"/><text x="80.4488%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.3645%" y="437" width="0.0829%" height="15" fill="rgb(213,129,42)" fg:x="970" fg:w="1"/><text x="80.6145%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="80.2817%" y="485" width="0.2486%" height="15" fill="rgb(225,95,41)" fg:x="969" fg:w="3"/><text x="80.5317%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="80.3645%" y="469" width="0.1657%" height="15" fill="rgb(215,134,24)" fg:x="970" fg:w="2"/><text x="80.6145%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="80.3645%" y="453" width="0.1657%" height="15" fill="rgb(235,23,54)" fg:x="970" fg:w="2"/><text x="80.6145%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.4474%" y="437" width="0.0829%" height="15" fill="rgb(229,96,31)" fg:x="971" fg:w="1"/><text x="80.6974%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="80.5302%" y="469" width="0.2486%" height="15" fill="rgb(206,111,12)" fg:x="972" fg:w="3"/><text x="80.7802%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="80.5302%" y="453" width="0.2486%" height="15" fill="rgb(222,177,8)" fg:x="972" fg:w="3"/><text x="80.7802%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.6959%" y="437" width="0.0829%" height="15" fill="rgb(251,36,52)" fg:x="974" fg:w="1"/><text x="80.9459%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.6959%" y="421" width="0.0829%" height="15" fill="rgb(216,182,29)" fg:x="974" fg:w="1"/><text x="80.9459%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="80.7788%" y="469" width="0.1657%" height="15" fill="rgb(241,145,50)" fg:x="975" fg:w="2"/><text x="81.0288%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="80.7788%" y="453" width="0.1657%" height="15" fill="rgb(231,71,35)" fg:x="975" fg:w="2"/><text x="81.0288%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="80.7788%" y="437" width="0.1657%" height="15" fill="rgb(218,22,17)" fg:x="975" fg:w="2"/><text x="81.0288%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="80.7788%" y="421" width="0.1657%" height="15" fill="rgb(225,227,6)" fg:x="975" fg:w="2"/><text x="81.0288%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8616%" y="405" width="0.0829%" height="15" fill="rgb(224,204,17)" fg:x="976" fg:w="1"/><text x="81.1116%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.8616%" y="389" width="0.0829%" height="15" fill="rgb(227,61,28)" fg:x="976" fg:w="1"/><text x="81.1116%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.8616%" y="373" width="0.0829%" height="15" fill="rgb(242,148,23)" fg:x="976" fg:w="1"/><text x="81.1116%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.8616%" y="357" width="0.0829%" height="15" fill="rgb(237,105,33)" fg:x="976" fg:w="1"/><text x="81.1116%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.50%)</title><rect x="80.5302%" y="485" width="0.4971%" height="15" fill="rgb(238,218,40)" fg:x="972" fg:w="6"/><text x="80.7802%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9445%" y="469" width="0.0829%" height="15" fill="rgb(209,126,11)" fg:x="977" fg:w="1"/><text x="81.1945%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.83%)</title><rect x="80.2817%" y="501" width="0.8285%" height="15" fill="rgb(245,90,11)" fg:x="969" fg:w="10"/><text x="80.5317%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0273%" y="485" width="0.0829%" height="15" fill="rgb(211,195,10)" fg:x="978" fg:w="1"/><text x="81.2773%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.49%)</title><rect x="79.7017%" y="565" width="1.4913%" height="15" fill="rgb(231,45,45)" fg:x="962" fg:w="18"/><text x="79.9517%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.33%)</title><rect x="79.8674%" y="549" width="1.3256%" height="15" fill="rgb(246,100,43)" fg:x="964" fg:w="16"/><text x="80.1174%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.16%)</title><rect x="80.0331%" y="533" width="1.1599%" height="15" fill="rgb(241,193,8)" fg:x="966" fg:w="14"/><text x="80.2831%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.99%)</title><rect x="80.1988%" y="517" width="0.9942%" height="15" fill="rgb(208,76,19)" fg:x="968" fg:w="12"/><text x="80.4488%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.1102%" y="501" width="0.0829%" height="15" fill="rgb(223,69,40)" fg:x="979" fg:w="1"/><text x="81.3602%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="81.1930%" y="533" width="0.1657%" height="15" fill="rgb(207,120,39)" fg:x="980" fg:w="2"/><text x="81.4430%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3587%" y="517" width="0.0829%" height="15" fill="rgb(212,209,28)" fg:x="982" fg:w="1"/><text x="81.6087%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4416%" y="501" width="0.0829%" height="15" fill="rgb(246,82,29)" fg:x="983" fg:w="1"/><text x="81.6916%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5244%" y="501" width="0.0829%" height="15" fill="rgb(239,6,40)" fg:x="984" fg:w="1"/><text x="81.7744%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5244%" y="485" width="0.0829%" height="15" fill="rgb(228,181,35)" fg:x="984" fg:w="1"/><text x="81.7744%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="81.1930%" y="565" width="0.6628%" height="15" fill="rgb(238,151,2)" fg:x="980" fg:w="8"/><text x="81.4430%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.66%)</title><rect x="81.1930%" y="549" width="0.6628%" height="15" fill="rgb(236,94,18)" fg:x="980" fg:w="8"/><text x="81.4430%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.50%)</title><rect x="81.3587%" y="533" width="0.4971%" height="15" fill="rgb(208,38,14)" fg:x="982" fg:w="6"/><text x="81.6087%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="81.4416%" y="517" width="0.4143%" height="15" fill="rgb(234,215,27)" fg:x="983" fg:w="5"/><text x="81.6916%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="81.6073%" y="501" width="0.2486%" height="15" fill="rgb(254,211,53)" fg:x="985" fg:w="3"/><text x="81.8573%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="81.6901%" y="485" width="0.1657%" height="15" fill="rgb(216,175,11)" fg:x="986" fg:w="2"/><text x="81.9401%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.7730%" y="469" width="0.0829%" height="15" fill="rgb(246,179,26)" fg:x="987" fg:w="1"/><text x="82.0230%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7730%" y="453" width="0.0829%" height="15" fill="rgb(249,19,52)" fg:x="987" fg:w="1"/><text x="82.0230%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8558%" y="517" width="0.0829%" height="15" fill="rgb(230,42,52)" fg:x="988" fg:w="1"/><text x="82.1058%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="81.9387%" y="517" width="0.1657%" height="15" fill="rgb(221,171,0)" fg:x="989" fg:w="2"/><text x="82.1887%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="81.9387%" y="501" width="0.1657%" height="15" fill="rgb(222,177,40)" fg:x="989" fg:w="2"/><text x="82.1887%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="82.1044%" y="469" width="0.1657%" height="15" fill="rgb(247,34,16)" fg:x="991" fg:w="2"/><text x="82.3544%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="82.1044%" y="453" width="0.1657%" height="15" fill="rgb(213,217,37)" fg:x="991" fg:w="2"/><text x="82.3544%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.1872%" y="437" width="0.0829%" height="15" fill="rgb(231,189,24)" fg:x="992" fg:w="1"/><text x="82.4372%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3529%" y="437" width="0.0829%" height="15" fill="rgb(214,22,9)" fg:x="994" fg:w="1"/><text x="82.6029%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3529%" y="421" width="0.0829%" height="15" fill="rgb(212,70,22)" fg:x="994" fg:w="1"/><text x="82.6029%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3529%" y="405" width="0.0829%" height="15" fill="rgb(249,64,51)" fg:x="994" fg:w="1"/><text x="82.6029%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.5186%" y="389" width="0.0829%" height="15" fill="rgb(249,148,20)" fg:x="996" fg:w="1"/><text x="82.7686%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.5186%" y="373" width="0.0829%" height="15" fill="rgb(246,46,48)" fg:x="996" fg:w="1"/><text x="82.7686%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5186%" y="357" width="0.0829%" height="15" fill="rgb(217,34,48)" fg:x="996" fg:w="1"/><text x="82.7686%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6015%" y="389" width="0.0829%" height="15" fill="rgb(222,45,26)" fg:x="997" fg:w="1"/><text x="82.8515%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.66%)</title><rect x="82.1044%" y="501" width="0.6628%" height="15" fill="rgb(230,201,36)" fg:x="991" fg:w="8"/><text x="82.3544%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.66%)</title><rect x="82.1044%" y="485" width="0.6628%" height="15" fill="rgb(217,30,43)" fg:x="991" fg:w="8"/><text x="82.3544%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.50%)</title><rect x="82.2701%" y="469" width="0.4971%" height="15" fill="rgb(230,197,40)" fg:x="993" fg:w="6"/><text x="82.5201%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="82.3529%" y="453" width="0.4143%" height="15" fill="rgb(239,181,18)" fg:x="994" fg:w="5"/><text x="82.6029%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="82.4358%" y="437" width="0.3314%" height="15" fill="rgb(222,60,39)" fg:x="995" fg:w="4"/><text x="82.6858%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="82.4358%" y="421" width="0.3314%" height="15" fill="rgb(210,60,22)" fg:x="995" fg:w="4"/><text x="82.6858%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="82.4358%" y="405" width="0.3314%" height="15" fill="rgb(239,213,48)" fg:x="995" fg:w="4"/><text x="82.6858%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="82.6843%" y="389" width="0.0829%" height="15" fill="rgb(253,214,23)" fg:x="998" fg:w="1"/><text x="82.9343%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="82.6843%" y="373" width="0.0829%" height="15" fill="rgb(211,98,45)" fg:x="998" fg:w="1"/><text x="82.9343%" y="383.50"></text></g><g><title>engine::session::Session::flush (41 samples, 3.40%)</title><rect x="79.4532%" y="645" width="3.3969%" height="15" fill="rgb(239,130,44)" fg:x="959" fg:w="41"/><text x="79.7032%" y="655.50">eng..</text></g><g><title>engine::session::state::State::close (40 samples, 3.31%)</title><rect x="79.5360%" y="629" width="3.3140%" height="15" fill="rgb(222,181,35)" fg:x="960" fg:w="40"/><text x="79.7860%" y="639.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (39 samples, 3.23%)</title><rect x="79.6189%" y="613" width="3.2312%" height="15" fill="rgb(219,219,49)" fg:x="961" fg:w="39"/><text x="79.8689%" y="623.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (39 samples, 3.23%)</title><rect x="79.6189%" y="597" width="3.2312%" height="15" fill="rgb(227,161,51)" fg:x="961" fg:w="39"/><text x="79.8689%" y="607.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (38 samples, 3.15%)</title><rect x="79.7017%" y="581" width="3.1483%" height="15" fill="rgb(239,112,27)" fg:x="962" fg:w="38"/><text x="79.9517%" y="591.50">eng..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.99%)</title><rect x="81.8558%" y="565" width="0.9942%" height="15" fill="rgb(248,122,18)" fg:x="988" fg:w="12"/><text x="82.1058%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.99%)</title><rect x="81.8558%" y="549" width="0.9942%" height="15" fill="rgb(245,130,23)" fg:x="988" fg:w="12"/><text x="82.1058%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.99%)</title><rect x="81.8558%" y="533" width="0.9942%" height="15" fill="rgb(211,225,28)" fg:x="988" fg:w="12"/><text x="82.1058%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.75%)</title><rect x="82.1044%" y="517" width="0.7457%" height="15" fill="rgb(242,105,44)" fg:x="991" fg:w="9"/><text x="82.3544%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7672%" y="501" width="0.0829%" height="15" fill="rgb(216,183,46)" fg:x="999" fg:w="1"/><text x="83.0172%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7672%" y="485" width="0.0829%" height="15" fill="rgb(227,112,9)" fg:x="999" fg:w="1"/><text x="83.0172%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.7672%" y="469" width="0.0829%" height="15" fill="rgb(244,21,0)" fg:x="999" fg:w="1"/><text x="83.0172%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="82.8500%" y="613" width="0.0829%" height="15" fill="rgb(236,185,14)" fg:x="1000" fg:w="1"/><text x="83.1000%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="82.8500%" y="597" width="0.0829%" height="15" fill="rgb(236,170,30)" fg:x="1000" fg:w="1"/><text x="83.1000%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="82.8500%" y="581" width="0.0829%" height="15" fill="rgb(209,198,51)" fg:x="1000" fg:w="1"/><text x="83.1000%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.8500%" y="565" width="0.0829%" height="15" fill="rgb(205,171,26)" fg:x="1000" fg:w="1"/><text x="83.1000%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9329%" y="533" width="0.0829%" height="15" fill="rgb(246,41,49)" fg:x="1001" fg:w="1"/><text x="83.1829%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.9329%" y="517" width="0.0829%" height="15" fill="rgb(240,229,12)" fg:x="1001" fg:w="1"/><text x="83.1829%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9329%" y="501" width="0.0829%" height="15" fill="rgb(212,8,54)" fg:x="1001" fg:w="1"/><text x="83.1829%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9329%" y="485" width="0.0829%" height="15" fill="rgb(230,114,13)" fg:x="1001" fg:w="1"/><text x="83.1829%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9329%" y="469" width="0.0829%" height="15" fill="rgb(229,130,28)" fg:x="1001" fg:w="1"/><text x="83.1829%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9329%" y="453" width="0.0829%" height="15" fill="rgb(206,139,15)" fg:x="1001" fg:w="1"/><text x="83.1829%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9329%" y="437" width="0.0829%" height="15" fill="rgb(241,188,35)" fg:x="1001" fg:w="1"/><text x="83.1829%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="82.9329%" y="421" width="0.0829%" height="15" fill="rgb(208,224,26)" fg:x="1001" fg:w="1"/><text x="83.1829%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.0157%" y="437" width="0.0829%" height="15" fill="rgb(251,131,28)" fg:x="1002" fg:w="1"/><text x="83.2657%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0157%" y="421" width="0.0829%" height="15" fill="rgb(208,153,1)" fg:x="1002" fg:w="1"/><text x="83.2657%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0157%" y="405" width="0.0829%" height="15" fill="rgb(234,33,36)" fg:x="1002" fg:w="1"/><text x="83.2657%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="82.9329%" y="597" width="0.2486%" height="15" fill="rgb(246,42,29)" fg:x="1001" fg:w="3"/><text x="83.1829%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.25%)</title><rect x="82.9329%" y="581" width="0.2486%" height="15" fill="rgb(251,114,16)" fg:x="1001" fg:w="3"/><text x="83.1829%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.25%)</title><rect x="82.9329%" y="565" width="0.2486%" height="15" fill="rgb(233,13,38)" fg:x="1001" fg:w="3"/><text x="83.1829%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.25%)</title><rect x="82.9329%" y="549" width="0.2486%" height="15" fill="rgb(247,120,19)" fg:x="1001" fg:w="3"/><text x="83.1829%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.17%)</title><rect x="83.0157%" y="533" width="0.1657%" height="15" fill="rgb(205,11,16)" fg:x="1002" fg:w="2"/><text x="83.2657%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="83.0157%" y="517" width="0.1657%" height="15" fill="rgb(228,185,19)" fg:x="1002" fg:w="2"/><text x="83.2657%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.17%)</title><rect x="83.0157%" y="501" width="0.1657%" height="15" fill="rgb(239,88,52)" fg:x="1002" fg:w="2"/><text x="83.2657%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="83.0157%" y="485" width="0.1657%" height="15" fill="rgb(219,23,1)" fg:x="1002" fg:w="2"/><text x="83.2657%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.17%)</title><rect x="83.0157%" y="469" width="0.1657%" height="15" fill="rgb(253,177,16)" fg:x="1002" fg:w="2"/><text x="83.2657%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.17%)</title><rect x="83.0157%" y="453" width="0.1657%" height="15" fill="rgb(225,150,40)" fg:x="1002" fg:w="2"/><text x="83.2657%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0986%" y="437" width="0.0829%" height="15" fill="rgb(208,108,30)" fg:x="1003" fg:w="1"/><text x="83.3486%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.91%)</title><rect x="82.8500%" y="629" width="0.9114%" height="15" fill="rgb(214,122,4)" fg:x="1000" fg:w="11"/><text x="83.1000%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.83%)</title><rect x="82.9329%" y="613" width="0.8285%" height="15" fill="rgb(229,74,37)" fg:x="1001" fg:w="10"/><text x="83.1829%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.58%)</title><rect x="83.1814%" y="597" width="0.5800%" height="15" fill="rgb(233,61,41)" fg:x="1004" fg:w="7"/><text x="83.4314%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.58%)</title><rect x="83.1814%" y="581" width="0.5800%" height="15" fill="rgb(238,191,5)" fg:x="1004" fg:w="7"/><text x="83.4314%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.58%)</title><rect x="83.1814%" y="565" width="0.5800%" height="15" fill="rgb(233,78,24)" fg:x="1004" fg:w="7"/><text x="83.4314%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.58%)</title><rect x="83.1814%" y="549" width="0.5800%" height="15" fill="rgb(211,142,8)" fg:x="1004" fg:w="7"/><text x="83.4314%" y="559.50"></text></g><g><title>__libc_malloc (7 samples, 0.58%)</title><rect x="83.1814%" y="533" width="0.5800%" height="15" fill="rgb(253,38,53)" fg:x="1004" fg:w="7"/><text x="83.4314%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.7614%" y="581" width="0.0829%" height="15" fill="rgb(234,63,51)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.7614%" y="565" width="0.0829%" height="15" fill="rgb(205,23,31)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.7614%" y="549" width="0.0829%" height="15" fill="rgb(210,184,50)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7614%" y="533" width="0.0829%" height="15" fill="rgb(222,112,26)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7614%" y="517" width="0.0829%" height="15" fill="rgb(250,98,18)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7614%" y="501" width="0.0829%" height="15" fill="rgb(250,34,12)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7614%" y="485" width="0.0829%" height="15" fill="rgb(236,141,30)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7614%" y="469" width="0.0829%" height="15" fill="rgb(246,134,38)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.7614%" y="453" width="0.0829%" height="15" fill="rgb(240,114,4)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.7614%" y="437" width="0.0829%" height="15" fill="rgb(243,113,39)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.7614%" y="421" width="0.0829%" height="15" fill="rgb(239,215,4)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="83.7614%" y="405" width="0.0829%" height="15" fill="rgb(236,229,45)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.7614%" y="389" width="0.0829%" height="15" fill="rgb(242,2,6)" fg:x="1011" fg:w="1"/><text x="84.0114%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.17%)</title><rect x="83.7614%" y="613" width="0.1657%" height="15" fill="rgb(239,108,21)" fg:x="1011" fg:w="2"/><text x="84.0114%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="83.7614%" y="597" width="0.1657%" height="15" fill="rgb(215,168,34)" fg:x="1011" fg:w="2"/><text x="84.0114%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.8442%" y="581" width="0.0829%" height="15" fill="rgb(238,31,17)" fg:x="1012" fg:w="1"/><text x="84.0942%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8442%" y="565" width="0.0829%" height="15" fill="rgb(220,133,11)" fg:x="1012" fg:w="1"/><text x="84.0942%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8442%" y="549" width="0.0829%" height="15" fill="rgb(212,158,23)" fg:x="1012" fg:w="1"/><text x="84.0942%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8442%" y="533" width="0.0829%" height="15" fill="rgb(223,172,7)" fg:x="1012" fg:w="1"/><text x="84.0942%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8442%" y="517" width="0.0829%" height="15" fill="rgb(244,3,52)" fg:x="1012" fg:w="1"/><text x="84.0942%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8442%" y="501" width="0.0829%" height="15" fill="rgb(207,69,27)" fg:x="1012" fg:w="1"/><text x="84.0942%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8442%" y="485" width="0.0829%" height="15" fill="rgb(213,136,45)" fg:x="1012" fg:w="1"/><text x="84.0942%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="83.9271%" y="613" width="0.0829%" height="15" fill="rgb(218,79,17)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9271%" y="597" width="0.0829%" height="15" fill="rgb(216,106,36)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9271%" y="581" width="0.0829%" height="15" fill="rgb(251,27,45)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9271%" y="565" width="0.0829%" height="15" fill="rgb(232,21,34)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.9271%" y="549" width="0.0829%" height="15" fill="rgb(249,191,16)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.9271%" y="533" width="0.0829%" height="15" fill="rgb(224,88,20)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.9271%" y="517" width="0.0829%" height="15" fill="rgb(237,93,27)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.9271%" y="501" width="0.0829%" height="15" fill="rgb(226,198,48)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.9271%" y="485" width="0.0829%" height="15" fill="rgb(207,162,53)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.9271%" y="469" width="0.0829%" height="15" fill="rgb(207,169,9)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.9271%" y="453" width="0.0829%" height="15" fill="rgb(224,166,46)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.9271%" y="437" width="0.0829%" height="15" fill="rgb(233,26,6)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.9271%" y="421" width="0.0829%" height="15" fill="rgb(218,106,45)" fg:x="1013" fg:w="1"/><text x="84.1771%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="84.0099%" y="613" width="0.1657%" height="15" fill="rgb(240,217,4)" fg:x="1014" fg:w="2"/><text x="84.2599%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.17%)</title><rect x="84.0099%" y="597" width="0.1657%" height="15" fill="rgb(246,171,10)" fg:x="1014" fg:w="2"/><text x="84.2599%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.17%)</title><rect x="84.0099%" y="581" width="0.1657%" height="15" fill="rgb(223,197,30)" fg:x="1014" fg:w="2"/><text x="84.2599%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.17%)</title><rect x="84.0099%" y="565" width="0.1657%" height="15" fill="rgb(207,92,16)" fg:x="1014" fg:w="2"/><text x="84.2599%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0928%" y="549" width="0.0829%" height="15" fill="rgb(211,6,44)" fg:x="1015" fg:w="1"/><text x="84.3428%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.0928%" y="533" width="0.0829%" height="15" fill="rgb(219,139,2)" fg:x="1015" fg:w="1"/><text x="84.3428%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.0928%" y="517" width="0.0829%" height="15" fill="rgb(224,103,21)" fg:x="1015" fg:w="1"/><text x="84.3428%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="84.1756%" y="517" width="0.1657%" height="15" fill="rgb(254,110,48)" fg:x="1016" fg:w="2"/><text x="84.4256%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="84.1756%" y="501" width="0.1657%" height="15" fill="rgb(212,88,19)" fg:x="1016" fg:w="2"/><text x="84.4256%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="84.1756%" y="485" width="0.1657%" height="15" fill="rgb(248,103,6)" fg:x="1016" fg:w="2"/><text x="84.4256%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="84.1756%" y="469" width="0.1657%" height="15" fill="rgb(214,53,46)" fg:x="1016" fg:w="2"/><text x="84.4256%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="84.1756%" y="453" width="0.1657%" height="15" fill="rgb(236,190,24)" fg:x="1016" fg:w="2"/><text x="84.4256%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="84.1756%" y="437" width="0.1657%" height="15" fill="rgb(254,58,28)" fg:x="1016" fg:w="2"/><text x="84.4256%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2585%" y="421" width="0.0829%" height="15" fill="rgb(243,63,27)" fg:x="1017" fg:w="1"/><text x="84.5085%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="84.1756%" y="565" width="0.2486%" height="15" fill="rgb(206,81,20)" fg:x="1016" fg:w="3"/><text x="84.4256%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="84.1756%" y="549" width="0.2486%" height="15" fill="rgb(252,69,51)" fg:x="1016" fg:w="3"/><text x="84.4256%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="84.1756%" y="533" width="0.2486%" height="15" fill="rgb(222,213,4)" fg:x="1016" fg:w="3"/><text x="84.4256%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3413%" y="517" width="0.0829%" height="15" fill="rgb(226,198,12)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3413%" y="501" width="0.0829%" height="15" fill="rgb(248,115,11)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3413%" y="485" width="0.0829%" height="15" fill="rgb(221,148,54)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3413%" y="469" width="0.0829%" height="15" fill="rgb(214,209,51)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.3413%" y="453" width="0.0829%" height="15" fill="rgb(249,116,53)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3413%" y="437" width="0.0829%" height="15" fill="rgb(248,170,1)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3413%" y="421" width="0.0829%" height="15" fill="rgb(244,105,10)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3413%" y="405" width="0.0829%" height="15" fill="rgb(229,100,5)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3413%" y="389" width="0.0829%" height="15" fill="rgb(233,221,39)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3413%" y="373" width="0.0829%" height="15" fill="rgb(233,88,21)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="84.3413%" y="357" width="0.0829%" height="15" fill="rgb(206,13,0)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="84.3413%" y="341" width="0.0829%" height="15" fill="rgb(242,15,35)" fg:x="1018" fg:w="1"/><text x="84.5913%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4242%" y="517" width="0.0829%" height="15" fill="rgb(247,142,41)" fg:x="1019" fg:w="1"/><text x="84.6742%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4242%" y="501" width="0.0829%" height="15" fill="rgb(245,51,29)" fg:x="1019" fg:w="1"/><text x="84.6742%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.74%)</title><rect x="82.8500%" y="645" width="1.7399%" height="15" fill="rgb(228,209,43)" fg:x="1000" fg:w="21"/><text x="83.1000%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.83%)</title><rect x="83.7614%" y="629" width="0.8285%" height="15" fill="rgb(233,185,9)" fg:x="1011" fg:w="10"/><text x="84.0114%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.41%)</title><rect x="84.1756%" y="613" width="0.4143%" height="15" fill="rgb(226,93,0)" fg:x="1016" fg:w="5"/><text x="84.4256%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="84.1756%" y="597" width="0.4143%" height="15" fill="rgb(245,194,43)" fg:x="1016" fg:w="5"/><text x="84.4256%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.41%)</title><rect x="84.1756%" y="581" width="0.4143%" height="15" fill="rgb(211,145,34)" fg:x="1016" fg:w="5"/><text x="84.4256%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.17%)</title><rect x="84.4242%" y="565" width="0.1657%" height="15" fill="rgb(231,228,28)" fg:x="1019" fg:w="2"/><text x="84.6742%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="84.4242%" y="549" width="0.1657%" height="15" fill="rgb(236,149,4)" fg:x="1019" fg:w="2"/><text x="84.6742%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="84.4242%" y="533" width="0.1657%" height="15" fill="rgb(234,114,38)" fg:x="1019" fg:w="2"/><text x="84.6742%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5070%" y="517" width="0.0829%" height="15" fill="rgb(246,132,51)" fg:x="1020" fg:w="1"/><text x="84.7570%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5070%" y="501" width="0.0829%" height="15" fill="rgb(251,137,22)" fg:x="1020" fg:w="1"/><text x="84.7570%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5070%" y="485" width="0.0829%" height="15" fill="rgb(243,59,52)" fg:x="1020" fg:w="1"/><text x="84.7570%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5070%" y="469" width="0.0829%" height="15" fill="rgb(239,56,28)" fg:x="1020" fg:w="1"/><text x="84.7570%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5070%" y="453" width="0.0829%" height="15" fill="rgb(218,168,27)" fg:x="1020" fg:w="1"/><text x="84.7570%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5070%" y="437" width="0.0829%" height="15" fill="rgb(232,165,11)" fg:x="1020" fg:w="1"/><text x="84.7570%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5070%" y="421" width="0.0829%" height="15" fill="rgb(253,55,41)" fg:x="1020" fg:w="1"/><text x="84.7570%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5070%" y="405" width="0.0829%" height="15" fill="rgb(233,206,24)" fg:x="1020" fg:w="1"/><text x="84.7570%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.5899%" y="613" width="0.0829%" height="15" fill="rgb(220,199,8)" fg:x="1021" fg:w="1"/><text x="84.8399%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.5899%" y="597" width="0.0829%" height="15" fill="rgb(254,65,26)" fg:x="1021" fg:w="1"/><text x="84.8399%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.5899%" y="581" width="0.0829%" height="15" fill="rgb(253,102,23)" fg:x="1021" fg:w="1"/><text x="84.8399%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5899%" y="565" width="0.0829%" height="15" fill="rgb(231,103,35)" fg:x="1021" fg:w="1"/><text x="84.8399%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5899%" y="549" width="0.0829%" height="15" fill="rgb(238,26,10)" fg:x="1021" fg:w="1"/><text x="84.8399%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5899%" y="533" width="0.0829%" height="15" fill="rgb(234,191,34)" fg:x="1021" fg:w="1"/><text x="84.8399%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="84.6727%" y="613" width="0.0829%" height="15" fill="rgb(206,210,9)" fg:x="1022" fg:w="1"/><text x="84.9227%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="84.6727%" y="597" width="0.0829%" height="15" fill="rgb(219,155,3)" fg:x="1022" fg:w="1"/><text x="84.9227%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6727%" y="581" width="0.0829%" height="15" fill="rgb(221,62,52)" fg:x="1022" fg:w="1"/><text x="84.9227%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.25%)</title><rect x="84.5899%" y="645" width="0.2486%" height="15" fill="rgb(215,197,36)" fg:x="1021" fg:w="3"/><text x="84.8399%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.25%)</title><rect x="84.5899%" y="629" width="0.2486%" height="15" fill="rgb(226,222,6)" fg:x="1021" fg:w="3"/><text x="84.8399%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="84.7556%" y="613" width="0.0829%" height="15" fill="rgb(215,58,28)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.7556%" y="597" width="0.0829%" height="15" fill="rgb(212,148,2)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.7556%" y="581" width="0.0829%" height="15" fill="rgb(208,21,42)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.7556%" y="565" width="0.0829%" height="15" fill="rgb(209,107,26)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7556%" y="549" width="0.0829%" height="15" fill="rgb(254,60,47)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7556%" y="533" width="0.0829%" height="15" fill="rgb(207,226,45)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7556%" y="517" width="0.0829%" height="15" fill="rgb(223,124,22)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7556%" y="501" width="0.0829%" height="15" fill="rgb(240,162,13)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7556%" y="485" width="0.0829%" height="15" fill="rgb(244,199,31)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7556%" y="469" width="0.0829%" height="15" fill="rgb(207,92,16)" fg:x="1023" fg:w="1"/><text x="85.0056%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.8384%" y="613" width="0.0829%" height="15" fill="rgb(215,31,19)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.8384%" y="597" width="0.0829%" height="15" fill="rgb(245,118,14)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8384%" y="581" width="0.0829%" height="15" fill="rgb(248,12,46)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8384%" y="565" width="0.0829%" height="15" fill="rgb(209,119,0)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8384%" y="549" width="0.0829%" height="15" fill="rgb(254,51,44)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8384%" y="533" width="0.0829%" height="15" fill="rgb(253,182,35)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.8384%" y="517" width="0.0829%" height="15" fill="rgb(205,198,39)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.8384%" y="501" width="0.0829%" height="15" fill="rgb(251,175,48)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.8384%" y="485" width="0.0829%" height="15" fill="rgb(239,38,17)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8384%" y="469" width="0.0829%" height="15" fill="rgb(212,101,8)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8384%" y="453" width="0.0829%" height="15" fill="rgb(228,35,17)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.8384%" y="437" width="0.0829%" height="15" fill="rgb(214,95,8)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.8384%" y="421" width="0.0829%" height="15" fill="rgb(210,176,35)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.8384%" y="405" width="0.0829%" height="15" fill="rgb(226,4,3)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.8384%" y="389" width="0.0829%" height="15" fill="rgb(232,133,14)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.8384%" y="373" width="0.0829%" height="15" fill="rgb(250,191,8)" fg:x="1024" fg:w="1"/><text x="85.0884%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.17%)</title><rect x="84.8384%" y="645" width="0.1657%" height="15" fill="rgb(213,12,45)" fg:x="1024" fg:w="2"/><text x="85.0884%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.17%)</title><rect x="84.8384%" y="629" width="0.1657%" height="15" fill="rgb(233,78,26)" fg:x="1024" fg:w="2"/><text x="85.0884%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.9213%" y="613" width="0.0829%" height="15" fill="rgb(245,222,11)" fg:x="1025" fg:w="1"/><text x="85.1713%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.9213%" y="597" width="0.0829%" height="15" fill="rgb(216,174,12)" fg:x="1025" fg:w="1"/><text x="85.1713%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9213%" y="581" width="0.0829%" height="15" fill="rgb(213,15,9)" fg:x="1025" fg:w="1"/><text x="85.1713%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9213%" y="565" width="0.0829%" height="15" fill="rgb(238,103,32)" fg:x="1025" fg:w="1"/><text x="85.1713%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="85.1698%" y="629" width="0.0829%" height="15" fill="rgb(245,85,15)" fg:x="1028" fg:w="1"/><text x="85.4198%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="85.1698%" y="613" width="0.0829%" height="15" fill="rgb(254,204,5)" fg:x="1028" fg:w="1"/><text x="85.4198%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.1698%" y="597" width="0.0829%" height="15" fill="rgb(231,178,15)" fg:x="1028" fg:w="1"/><text x="85.4198%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1698%" y="581" width="0.0829%" height="15" fill="rgb(248,151,3)" fg:x="1028" fg:w="1"/><text x="85.4198%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2527%" y="501" width="0.0829%" height="15" fill="rgb(250,139,13)" fg:x="1029" fg:w="1"/><text x="85.5027%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2527%" y="485" width="0.0829%" height="15" fill="rgb(243,107,53)" fg:x="1029" fg:w="1"/><text x="85.5027%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2527%" y="469" width="0.0829%" height="15" fill="rgb(232,81,15)" fg:x="1029" fg:w="1"/><text x="85.5027%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2527%" y="453" width="0.0829%" height="15" fill="rgb(225,187,48)" fg:x="1029" fg:w="1"/><text x="85.5027%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2527%" y="437" width="0.0829%" height="15" fill="rgb(205,116,12)" fg:x="1029" fg:w="1"/><text x="85.5027%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.17%)</title><rect x="85.2527%" y="581" width="0.1657%" height="15" fill="rgb(220,222,31)" fg:x="1029" fg:w="2"/><text x="85.5027%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.17%)</title><rect x="85.2527%" y="565" width="0.1657%" height="15" fill="rgb(233,187,49)" fg:x="1029" fg:w="2"/><text x="85.5027%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.17%)</title><rect x="85.2527%" y="549" width="0.1657%" height="15" fill="rgb(211,168,53)" fg:x="1029" fg:w="2"/><text x="85.5027%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="85.2527%" y="533" width="0.1657%" height="15" fill="rgb(206,160,16)" fg:x="1029" fg:w="2"/><text x="85.5027%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="85.2527%" y="517" width="0.1657%" height="15" fill="rgb(254,164,13)" fg:x="1029" fg:w="2"/><text x="85.5027%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3355%" y="501" width="0.0829%" height="15" fill="rgb(229,45,30)" fg:x="1030" fg:w="1"/><text x="85.5855%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.3355%" y="485" width="0.0829%" height="15" fill="rgb(237,32,10)" fg:x="1030" fg:w="1"/><text x="85.5855%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3355%" y="469" width="0.0829%" height="15" fill="rgb(251,20,47)" fg:x="1030" fg:w="1"/><text x="85.5855%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3355%" y="453" width="0.0829%" height="15" fill="rgb(251,116,12)" fg:x="1030" fg:w="1"/><text x="85.5855%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3355%" y="437" width="0.0829%" height="15" fill="rgb(214,227,27)" fg:x="1030" fg:w="1"/><text x="85.5855%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3355%" y="421" width="0.0829%" height="15" fill="rgb(248,10,53)" fg:x="1030" fg:w="1"/><text x="85.5855%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.3355%" y="405" width="0.0829%" height="15" fill="rgb(221,176,25)" fg:x="1030" fg:w="1"/><text x="85.5855%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.4184%" y="549" width="0.0829%" height="15" fill="rgb(205,70,46)" fg:x="1031" fg:w="1"/><text x="85.6684%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4184%" y="533" width="0.0829%" height="15" fill="rgb(217,45,38)" fg:x="1031" fg:w="1"/><text x="85.6684%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.17%)</title><rect x="85.4184%" y="565" width="0.1657%" height="15" fill="rgb(243,6,54)" fg:x="1031" fg:w="2"/><text x="85.6684%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.5012%" y="549" width="0.0829%" height="15" fill="rgb(242,76,23)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="85.5012%" y="533" width="0.0829%" height="15" fill="rgb(239,166,0)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.5012%" y="517" width="0.0829%" height="15" fill="rgb(238,174,32)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.5012%" y="501" width="0.0829%" height="15" fill="rgb(238,124,44)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.5012%" y="485" width="0.0829%" height="15" fill="rgb(206,185,9)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5012%" y="469" width="0.0829%" height="15" fill="rgb(215,157,17)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5012%" y="453" width="0.0829%" height="15" fill="rgb(251,17,29)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5012%" y="437" width="0.0829%" height="15" fill="rgb(227,113,27)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5012%" y="421" width="0.0829%" height="15" fill="rgb(217,226,24)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.5012%" y="405" width="0.0829%" height="15" fill="rgb(251,99,38)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.5012%" y="389" width="0.0829%" height="15" fill="rgb(231,147,19)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.5012%" y="373" width="0.0829%" height="15" fill="rgb(230,86,8)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.5012%" y="357" width="0.0829%" height="15" fill="rgb(237,159,39)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.5012%" y="341" width="0.0829%" height="15" fill="rgb(247,179,47)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.5012%" y="325" width="0.0829%" height="15" fill="rgb(253,152,26)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.5012%" y="309" width="0.0829%" height="15" fill="rgb(222,211,15)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.5012%" y="293" width="0.0829%" height="15" fill="rgb(236,193,6)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.5012%" y="277" width="0.0829%" height="15" fill="rgb(226,206,10)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.5012%" y="261" width="0.0829%" height="15" fill="rgb(213,125,22)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.5012%" y="245" width="0.0829%" height="15" fill="rgb(221,66,28)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.5012%" y="229" width="0.0829%" height="15" fill="rgb(222,84,53)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5012%" y="213" width="0.0829%" height="15" fill="rgb(243,50,15)" fg:x="1032" fg:w="1"/><text x="85.7512%" y="223.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.17%)</title><rect x="85.5841%" y="549" width="0.1657%" height="15" fill="rgb(208,184,23)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="85.5841%" y="533" width="0.1657%" height="15" fill="rgb(221,83,2)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.17%)</title><rect x="85.5841%" y="517" width="0.1657%" height="15" fill="rgb(236,53,24)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="85.5841%" y="501" width="0.1657%" height="15" fill="rgb(244,171,29)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="85.5841%" y="485" width="0.1657%" height="15" fill="rgb(205,19,11)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="85.5841%" y="469" width="0.1657%" height="15" fill="rgb(207,108,29)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="85.5841%" y="453" width="0.1657%" height="15" fill="rgb(236,215,43)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="85.5841%" y="437" width="0.1657%" height="15" fill="rgb(213,58,35)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="85.5841%" y="421" width="0.1657%" height="15" fill="rgb(220,211,46)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="85.5841%" y="405" width="0.1657%" height="15" fill="rgb(212,134,16)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="85.5841%" y="389" width="0.1657%" height="15" fill="rgb(232,90,44)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="85.5841%" y="373" width="0.1657%" height="15" fill="rgb(212,18,36)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="85.5841%" y="357" width="0.1657%" height="15" fill="rgb(206,112,24)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="85.5841%" y="341" width="0.1657%" height="15" fill="rgb(238,223,40)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="85.5841%" y="325" width="0.1657%" height="15" fill="rgb(226,169,20)" fg:x="1033" fg:w="2"/><text x="85.8341%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.7498%" y="549" width="0.0829%" height="15" fill="rgb(241,64,52)" fg:x="1035" fg:w="1"/><text x="85.9998%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.7498%" y="533" width="0.0829%" height="15" fill="rgb(228,120,25)" fg:x="1035" fg:w="1"/><text x="85.9998%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="85.7498%" y="517" width="0.0829%" height="15" fill="rgb(234,108,19)" fg:x="1035" fg:w="1"/><text x="85.9998%" y="527.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.50%)</title><rect x="85.4184%" y="581" width="0.4971%" height="15" fill="rgb(236,133,29)" fg:x="1031" fg:w="6"/><text x="85.6684%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.33%)</title><rect x="85.5841%" y="565" width="0.3314%" height="15" fill="rgb(246,174,53)" fg:x="1033" fg:w="4"/><text x="85.8341%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.8326%" y="549" width="0.0829%" height="15" fill="rgb(210,105,35)" fg:x="1036" fg:w="1"/><text x="86.0826%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.75%)</title><rect x="85.2527%" y="629" width="0.7457%" height="15" fill="rgb(225,27,26)" fg:x="1029" fg:w="9"/><text x="85.5027%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.75%)</title><rect x="85.2527%" y="613" width="0.7457%" height="15" fill="rgb(233,2,39)" fg:x="1029" fg:w="9"/><text x="85.5027%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.75%)</title><rect x="85.2527%" y="597" width="0.7457%" height="15" fill="rgb(219,164,26)" fg:x="1029" fg:w="9"/><text x="85.5027%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.9155%" y="581" width="0.0829%" height="15" fill="rgb(236,211,5)" fg:x="1037" fg:w="1"/><text x="86.1655%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.9155%" y="565" width="0.0829%" height="15" fill="rgb(244,227,23)" fg:x="1037" fg:w="1"/><text x="86.1655%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.9155%" y="549" width="0.0829%" height="15" fill="rgb(230,184,8)" fg:x="1037" fg:w="1"/><text x="86.1655%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.9155%" y="533" width="0.0829%" height="15" fill="rgb(217,125,48)" fg:x="1037" fg:w="1"/><text x="86.1655%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9155%" y="517" width="0.0829%" height="15" fill="rgb(223,192,47)" fg:x="1037" fg:w="1"/><text x="86.1655%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.9155%" y="501" width="0.0829%" height="15" fill="rgb(226,119,10)" fg:x="1037" fg:w="1"/><text x="86.1655%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.9155%" y="485" width="0.0829%" height="15" fill="rgb(221,49,29)" fg:x="1037" fg:w="1"/><text x="86.1655%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9155%" y="469" width="0.0829%" height="15" fill="rgb(217,205,19)" fg:x="1037" fg:w="1"/><text x="86.1655%" y="479.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="85.9983%" y="597" width="0.0829%" height="15" fill="rgb(242,104,7)" fg:x="1038" fg:w="1"/><text x="86.2483%" y="607.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="85.9983%" y="581" width="0.0829%" height="15" fill="rgb(209,154,48)" fg:x="1038" fg:w="1"/><text x="86.2483%" y="591.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="85.9983%" y="565" width="0.0829%" height="15" fill="rgb(219,213,46)" fg:x="1038" fg:w="1"/><text x="86.2483%" y="575.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="85.9983%" y="549" width="0.0829%" height="15" fill="rgb(229,105,38)" fg:x="1038" fg:w="1"/><text x="86.2483%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="85.9983%" y="533" width="0.0829%" height="15" fill="rgb(205,151,5)" fg:x="1038" fg:w="1"/><text x="86.2483%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="85.9983%" y="517" width="0.0829%" height="15" fill="rgb(248,115,40)" fg:x="1038" fg:w="1"/><text x="86.2483%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="85.9983%" y="501" width="0.0829%" height="15" fill="rgb(206,179,2)" fg:x="1038" fg:w="1"/><text x="86.2483%" y="511.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="85.9983%" y="485" width="0.0829%" height="15" fill="rgb(230,103,24)" fg:x="1038" fg:w="1"/><text x="86.2483%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.1640%" y="565" width="0.0829%" height="15" fill="rgb(218,152,4)" fg:x="1040" fg:w="1"/><text x="86.4140%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="86.3297%" y="533" width="0.0829%" height="15" fill="rgb(236,161,54)" fg:x="1042" fg:w="1"/><text x="86.5797%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.3297%" y="517" width="0.0829%" height="15" fill="rgb(226,65,17)" fg:x="1042" fg:w="1"/><text x="86.5797%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.3297%" y="501" width="0.0829%" height="15" fill="rgb(221,134,44)" fg:x="1042" fg:w="1"/><text x="86.5797%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.3297%" y="485" width="0.0829%" height="15" fill="rgb(251,129,4)" fg:x="1042" fg:w="1"/><text x="86.5797%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.3297%" y="469" width="0.0829%" height="15" fill="rgb(244,32,34)" fg:x="1042" fg:w="1"/><text x="86.5797%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.3297%" y="453" width="0.0829%" height="15" fill="rgb(251,224,37)" fg:x="1042" fg:w="1"/><text x="86.5797%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="86.4126%" y="517" width="0.0829%" height="15" fill="rgb(248,117,31)" fg:x="1043" fg:w="1"/><text x="86.6626%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.4126%" y="501" width="0.0829%" height="15" fill="rgb(222,208,37)" fg:x="1043" fg:w="1"/><text x="86.6626%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.4954%" y="501" width="0.0829%" height="15" fill="rgb(234,211,25)" fg:x="1044" fg:w="1"/><text x="86.7454%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.4954%" y="485" width="0.0829%" height="15" fill="rgb(211,72,6)" fg:x="1044" fg:w="1"/><text x="86.7454%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="86.5783%" y="501" width="0.1657%" height="15" fill="rgb(249,198,38)" fg:x="1045" fg:w="2"/><text x="86.8283%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.17%)</title><rect x="86.7440%" y="485" width="0.1657%" height="15" fill="rgb(221,86,51)" fg:x="1047" fg:w="2"/><text x="86.9940%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="86.7440%" y="469" width="0.1657%" height="15" fill="rgb(226,178,43)" fg:x="1047" fg:w="2"/><text x="86.9940%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.8268%" y="453" width="0.0829%" height="15" fill="rgb(215,145,7)" fg:x="1048" fg:w="1"/><text x="87.0768%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.8268%" y="437" width="0.0829%" height="15" fill="rgb(250,202,36)" fg:x="1048" fg:w="1"/><text x="87.0768%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.9097%" y="469" width="0.0829%" height="15" fill="rgb(215,86,13)" fg:x="1049" fg:w="1"/><text x="87.1597%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9097%" y="453" width="0.0829%" height="15" fill="rgb(221,134,12)" fg:x="1049" fg:w="1"/><text x="87.1597%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.9097%" y="437" width="0.0829%" height="15" fill="rgb(213,82,10)" fg:x="1049" fg:w="1"/><text x="87.1597%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.9097%" y="421" width="0.0829%" height="15" fill="rgb(214,142,0)" fg:x="1049" fg:w="1"/><text x="87.1597%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9925%" y="437" width="0.0829%" height="15" fill="rgb(205,145,9)" fg:x="1050" fg:w="1"/><text x="87.2425%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.9925%" y="421" width="0.0829%" height="15" fill="rgb(244,214,8)" fg:x="1050" fg:w="1"/><text x="87.2425%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="86.7440%" y="501" width="0.4143%" height="15" fill="rgb(224,72,51)" fg:x="1047" fg:w="5"/><text x="86.9940%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="86.9097%" y="485" width="0.2486%" height="15" fill="rgb(233,137,37)" fg:x="1049" fg:w="3"/><text x="87.1597%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="86.9925%" y="469" width="0.1657%" height="15" fill="rgb(208,71,28)" fg:x="1050" fg:w="2"/><text x="87.2425%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="86.9925%" y="453" width="0.1657%" height="15" fill="rgb(226,31,7)" fg:x="1050" fg:w="2"/><text x="87.2425%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.0754%" y="437" width="0.0829%" height="15" fill="rgb(229,62,18)" fg:x="1051" fg:w="1"/><text x="87.3254%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.0754%" y="421" width="0.0829%" height="15" fill="rgb(226,74,28)" fg:x="1051" fg:w="1"/><text x="87.3254%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.91%)</title><rect x="86.4126%" y="533" width="0.9114%" height="15" fill="rgb(214,170,18)" fg:x="1043" fg:w="11"/><text x="86.6626%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.83%)</title><rect x="86.4954%" y="517" width="0.8285%" height="15" fill="rgb(227,229,35)" fg:x="1044" fg:w="10"/><text x="86.7454%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="87.1582%" y="501" width="0.1657%" height="15" fill="rgb(225,181,39)" fg:x="1052" fg:w="2"/><text x="87.4082%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="87.1582%" y="485" width="0.1657%" height="15" fill="rgb(253,124,44)" fg:x="1052" fg:w="2"/><text x="87.4082%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="87.1582%" y="469" width="0.1657%" height="15" fill="rgb(220,75,18)" fg:x="1052" fg:w="2"/><text x="87.4082%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.17%)</title><rect x="87.1582%" y="453" width="0.1657%" height="15" fill="rgb(239,175,43)" fg:x="1052" fg:w="2"/><text x="87.4082%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.17%)</title><rect x="87.1582%" y="437" width="0.1657%" height="15" fill="rgb(228,112,50)" fg:x="1052" fg:w="2"/><text x="87.4082%" y="447.50"></text></g><g><title>realloc (2 samples, 0.17%)</title><rect x="87.1582%" y="421" width="0.1657%" height="15" fill="rgb(232,105,36)" fg:x="1052" fg:w="2"/><text x="87.4082%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.4068%" y="469" width="0.0829%" height="15" fill="rgb(227,137,47)" fg:x="1055" fg:w="1"/><text x="87.6568%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4068%" y="453" width="0.0829%" height="15" fill="rgb(217,51,9)" fg:x="1055" fg:w="1"/><text x="87.6568%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4896%" y="437" width="0.0829%" height="15" fill="rgb(245,117,0)" fg:x="1056" fg:w="1"/><text x="87.7396%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5725%" y="421" width="0.0829%" height="15" fill="rgb(252,52,30)" fg:x="1057" fg:w="1"/><text x="87.8225%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6553%" y="421" width="0.0829%" height="15" fill="rgb(227,85,33)" fg:x="1058" fg:w="1"/><text x="87.9053%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6553%" y="405" width="0.0829%" height="15" fill="rgb(220,157,20)" fg:x="1058" fg:w="1"/><text x="87.9053%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.50%)</title><rect x="87.3239%" y="533" width="0.4971%" height="15" fill="rgb(254,14,34)" fg:x="1054" fg:w="6"/><text x="87.5739%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.50%)</title><rect x="87.3239%" y="517" width="0.4971%" height="15" fill="rgb(216,103,41)" fg:x="1054" fg:w="6"/><text x="87.5739%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="87.4068%" y="501" width="0.4143%" height="15" fill="rgb(245,221,9)" fg:x="1055" fg:w="5"/><text x="87.6568%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="87.4068%" y="485" width="0.4143%" height="15" fill="rgb(254,136,47)" fg:x="1055" fg:w="5"/><text x="87.6568%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="87.4896%" y="469" width="0.3314%" height="15" fill="rgb(235,71,46)" fg:x="1056" fg:w="4"/><text x="87.7396%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="87.4896%" y="453" width="0.3314%" height="15" fill="rgb(242,154,29)" fg:x="1056" fg:w="4"/><text x="87.7396%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="87.5725%" y="437" width="0.2486%" height="15" fill="rgb(210,65,31)" fg:x="1057" fg:w="3"/><text x="87.8225%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7382%" y="421" width="0.0829%" height="15" fill="rgb(244,9,50)" fg:x="1059" fg:w="1"/><text x="87.9882%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="87.8210%" y="485" width="0.0829%" height="15" fill="rgb(215,141,38)" fg:x="1060" fg:w="1"/><text x="88.0710%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="87.8210%" y="469" width="0.0829%" height="15" fill="rgb(241,129,6)" fg:x="1060" fg:w="1"/><text x="88.0710%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9039%" y="485" width="0.0829%" height="15" fill="rgb(253,169,4)" fg:x="1061" fg:w="1"/><text x="88.1539%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9039%" y="469" width="0.0829%" height="15" fill="rgb(237,82,36)" fg:x="1061" fg:w="1"/><text x="88.1539%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="87.9039%" y="453" width="0.0829%" height="15" fill="rgb(209,171,11)" fg:x="1061" fg:w="1"/><text x="88.1539%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.0696%" y="437" width="0.0829%" height="15" fill="rgb(242,19,22)" fg:x="1063" fg:w="1"/><text x="88.3196%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.0696%" y="421" width="0.0829%" height="15" fill="rgb(251,122,24)" fg:x="1063" fg:w="1"/><text x="88.3196%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.0696%" y="405" width="0.0829%" height="15" fill="rgb(226,166,42)" fg:x="1063" fg:w="1"/><text x="88.3196%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.0696%" y="389" width="0.0829%" height="15" fill="rgb(244,101,48)" fg:x="1063" fg:w="1"/><text x="88.3196%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2353%" y="405" width="0.0829%" height="15" fill="rgb(227,125,1)" fg:x="1065" fg:w="1"/><text x="88.4853%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2353%" y="389" width="0.0829%" height="15" fill="rgb(206,79,43)" fg:x="1065" fg:w="1"/><text x="88.4853%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4010%" y="341" width="0.0829%" height="15" fill="rgb(241,109,41)" fg:x="1067" fg:w="1"/><text x="88.6510%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4010%" y="325" width="0.0829%" height="15" fill="rgb(219,73,4)" fg:x="1067" fg:w="1"/><text x="88.6510%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4010%" y="309" width="0.0829%" height="15" fill="rgb(239,25,41)" fg:x="1067" fg:w="1"/><text x="88.6510%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="88.3181%" y="389" width="0.3314%" height="15" fill="rgb(208,88,46)" fg:x="1066" fg:w="4"/><text x="88.5681%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="88.3181%" y="373" width="0.3314%" height="15" fill="rgb(239,184,9)" fg:x="1066" fg:w="4"/><text x="88.5681%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="88.3181%" y="357" width="0.3314%" height="15" fill="rgb(223,114,13)" fg:x="1066" fg:w="4"/><text x="88.5681%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.17%)</title><rect x="88.4838%" y="341" width="0.1657%" height="15" fill="rgb(214,28,42)" fg:x="1068" fg:w="2"/><text x="88.7338%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.5667%" y="325" width="0.0829%" height="15" fill="rgb(252,32,44)" fg:x="1069" fg:w="1"/><text x="88.8167%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.5667%" y="309" width="0.0829%" height="15" fill="rgb(231,159,4)" fg:x="1069" fg:w="1"/><text x="88.8167%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.5667%" y="293" width="0.0829%" height="15" fill="rgb(210,35,26)" fg:x="1069" fg:w="1"/><text x="88.8167%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5667%" y="277" width="0.0829%" height="15" fill="rgb(208,190,37)" fg:x="1069" fg:w="1"/><text x="88.8167%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.58%)</title><rect x="88.1524%" y="421" width="0.5800%" height="15" fill="rgb(226,148,22)" fg:x="1064" fg:w="7"/><text x="88.4024%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="88.3181%" y="405" width="0.4143%" height="15" fill="rgb(242,153,24)" fg:x="1066" fg:w="5"/><text x="88.5681%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6495%" y="389" width="0.0829%" height="15" fill="rgb(213,133,7)" fg:x="1070" fg:w="1"/><text x="88.8995%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.83%)</title><rect x="87.9867%" y="453" width="0.8285%" height="15" fill="rgb(248,206,18)" fg:x="1062" fg:w="10"/><text x="88.2367%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.66%)</title><rect x="88.1524%" y="437" width="0.6628%" height="15" fill="rgb(233,157,4)" fg:x="1064" fg:w="8"/><text x="88.4024%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7324%" y="421" width="0.0829%" height="15" fill="rgb(249,179,32)" fg:x="1071" fg:w="1"/><text x="88.9824%" y="431.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.98%)</title><rect x="85.9983%" y="629" width="2.9826%" height="15" fill="rgb(248,69,35)" fg:x="1038" fg:w="36"/><text x="86.2483%" y="639.50">eng..</text></g><g><title>engine::session::Session::save_changes (36 samples, 2.98%)</title><rect x="85.9983%" y="613" width="2.9826%" height="15" fill="rgb(249,158,38)" fg:x="1038" fg:w="36"/><text x="86.2483%" y="623.50">eng..</text></g><g><title>engine::session::state::State::close (35 samples, 2.90%)</title><rect x="86.0812%" y="597" width="2.8998%" height="15" fill="rgb(223,18,43)" fg:x="1039" fg:w="35"/><text x="86.3312%" y="607.50">en..</text></g><g><title>engine::session::state::State::flush_entities (34 samples, 2.82%)</title><rect x="86.1640%" y="581" width="2.8169%" height="15" fill="rgb(238,42,45)" fg:x="1040" fg:w="34"/><text x="86.4140%" y="591.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (33 samples, 2.73%)</title><rect x="86.2469%" y="565" width="2.7341%" height="15" fill="rgb(219,65,47)" fg:x="1041" fg:w="33"/><text x="86.4969%" y="575.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (33 samples, 2.73%)</title><rect x="86.2469%" y="549" width="2.7341%" height="15" fill="rgb(248,153,12)" fg:x="1041" fg:w="33"/><text x="86.4969%" y="559.50">en..</text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.16%)</title><rect x="87.8210%" y="533" width="1.1599%" height="15" fill="rgb(240,118,4)" fg:x="1060" fg:w="14"/><text x="88.0710%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.16%)</title><rect x="87.8210%" y="517" width="1.1599%" height="15" fill="rgb(250,96,34)" fg:x="1060" fg:w="14"/><text x="88.0710%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.16%)</title><rect x="87.8210%" y="501" width="1.1599%" height="15" fill="rgb(221,15,4)" fg:x="1060" fg:w="14"/><text x="88.0710%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.99%)</title><rect x="87.9867%" y="485" width="0.9942%" height="15" fill="rgb(217,149,33)" fg:x="1062" fg:w="12"/><text x="88.2367%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.99%)</title><rect x="87.9867%" y="469" width="0.9942%" height="15" fill="rgb(213,58,29)" fg:x="1062" fg:w="12"/><text x="88.2367%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.17%)</title><rect x="88.8152%" y="453" width="0.1657%" height="15" fill="rgb(236,218,9)" fg:x="1072" fg:w="2"/><text x="89.0652%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.17%)</title><rect x="88.8152%" y="437" width="0.1657%" height="15" fill="rgb(248,40,19)" fg:x="1072" fg:w="2"/><text x="89.0652%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9809%" y="549" width="0.0829%" height="15" fill="rgb(212,17,6)" fg:x="1074" fg:w="1"/><text x="89.2309%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9809%" y="533" width="0.0829%" height="15" fill="rgb(206,212,20)" fg:x="1074" fg:w="1"/><text x="89.2309%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9809%" y="517" width="0.0829%" height="15" fill="rgb(229,80,37)" fg:x="1074" fg:w="1"/><text x="89.2309%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.17%)</title><rect x="88.9809%" y="597" width="0.1657%" height="15" fill="rgb(253,8,37)" fg:x="1074" fg:w="2"/><text x="89.2309%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="88.9809%" y="581" width="0.1657%" height="15" fill="rgb(215,16,43)" fg:x="1074" fg:w="2"/><text x="89.2309%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="88.9809%" y="565" width="0.1657%" height="15" fill="rgb(236,219,16)" fg:x="1074" fg:w="2"/><text x="89.2309%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.0638%" y="549" width="0.0829%" height="15" fill="rgb(251,0,3)" fg:x="1075" fg:w="1"/><text x="89.3138%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0638%" y="533" width="0.0829%" height="15" fill="rgb(207,133,37)" fg:x="1075" fg:w="1"/><text x="89.3138%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.0638%" y="517" width="0.0829%" height="15" fill="rgb(250,143,20)" fg:x="1075" fg:w="1"/><text x="89.3138%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0638%" y="501" width="0.0829%" height="15" fill="rgb(242,19,50)" fg:x="1075" fg:w="1"/><text x="89.3138%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.0638%" y="485" width="0.0829%" height="15" fill="rgb(206,124,43)" fg:x="1075" fg:w="1"/><text x="89.3138%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0638%" y="469" width="0.0829%" height="15" fill="rgb(229,4,38)" fg:x="1075" fg:w="1"/><text x="89.3138%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.0638%" y="453" width="0.0829%" height="15" fill="rgb(247,220,45)" fg:x="1075" fg:w="1"/><text x="89.3138%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0638%" y="437" width="0.0829%" height="15" fill="rgb(247,195,0)" fg:x="1075" fg:w="1"/><text x="89.3138%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.1466%" y="549" width="0.0829%" height="15" fill="rgb(252,12,19)" fg:x="1076" fg:w="1"/><text x="89.3966%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.1466%" y="533" width="0.0829%" height="15" fill="rgb(222,49,50)" fg:x="1076" fg:w="1"/><text x="89.3966%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1466%" y="517" width="0.0829%" height="15" fill="rgb(209,157,28)" fg:x="1076" fg:w="1"/><text x="89.3966%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1466%" y="501" width="0.0829%" height="15" fill="rgb(238,174,24)" fg:x="1076" fg:w="1"/><text x="89.3966%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1466%" y="485" width="0.0829%" height="15" fill="rgb(224,17,28)" fg:x="1076" fg:w="1"/><text x="89.3966%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1466%" y="469" width="0.0829%" height="15" fill="rgb(249,7,29)" fg:x="1076" fg:w="1"/><text x="89.3966%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.1466%" y="453" width="0.0829%" height="15" fill="rgb(243,178,4)" fg:x="1076" fg:w="1"/><text x="89.3966%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.2295%" y="517" width="0.0829%" height="15" fill="rgb(246,138,35)" fg:x="1077" fg:w="1"/><text x="89.4795%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.2295%" y="501" width="0.0829%" height="15" fill="rgb(251,85,18)" fg:x="1077" fg:w="1"/><text x="89.4795%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.2295%" y="485" width="0.0829%" height="15" fill="rgb(254,55,9)" fg:x="1077" fg:w="1"/><text x="89.4795%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2295%" y="469" width="0.0829%" height="15" fill="rgb(248,4,50)" fg:x="1077" fg:w="1"/><text x="89.4795%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="88.9809%" y="613" width="0.4143%" height="15" fill="rgb(215,208,14)" fg:x="1074" fg:w="5"/><text x="89.2309%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.25%)</title><rect x="89.1466%" y="597" width="0.2486%" height="15" fill="rgb(218,37,18)" fg:x="1076" fg:w="3"/><text x="89.3966%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="89.1466%" y="581" width="0.2486%" height="15" fill="rgb(206,104,13)" fg:x="1076" fg:w="3"/><text x="89.3966%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.25%)</title><rect x="89.1466%" y="565" width="0.2486%" height="15" fill="rgb(248,94,22)" fg:x="1076" fg:w="3"/><text x="89.3966%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.17%)</title><rect x="89.2295%" y="549" width="0.1657%" height="15" fill="rgb(235,42,46)" fg:x="1077" fg:w="2"/><text x="89.4795%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="89.2295%" y="533" width="0.1657%" height="15" fill="rgb(220,228,48)" fg:x="1077" fg:w="2"/><text x="89.4795%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="89.3123%" y="517" width="0.0829%" height="15" fill="rgb(216,58,12)" fg:x="1078" fg:w="1"/><text x="89.5623%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.3123%" y="501" width="0.0829%" height="15" fill="rgb(223,97,52)" fg:x="1078" fg:w="1"/><text x="89.5623%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="89.3123%" y="485" width="0.0829%" height="15" fill="rgb(208,159,17)" fg:x="1078" fg:w="1"/><text x="89.5623%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.3123%" y="469" width="0.0829%" height="15" fill="rgb(215,172,9)" fg:x="1078" fg:w="1"/><text x="89.5623%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.3123%" y="453" width="0.0829%" height="15" fill="rgb(252,175,30)" fg:x="1078" fg:w="1"/><text x="89.5623%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3123%" y="437" width="0.0829%" height="15" fill="rgb(209,159,10)" fg:x="1078" fg:w="1"/><text x="89.5623%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3123%" y="421" width="0.0829%" height="15" fill="rgb(229,73,51)" fg:x="1078" fg:w="1"/><text x="89.5623%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.4780%" y="565" width="0.0829%" height="15" fill="rgb(208,212,43)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.4780%" y="549" width="0.0829%" height="15" fill="rgb(254,123,53)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.4780%" y="533" width="0.0829%" height="15" fill="rgb(254,128,49)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.4780%" y="517" width="0.0829%" height="15" fill="rgb(246,16,16)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4780%" y="501" width="0.0829%" height="15" fill="rgb(209,200,1)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.4780%" y="485" width="0.0829%" height="15" fill="rgb(235,9,3)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4780%" y="469" width="0.0829%" height="15" fill="rgb(233,121,54)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.4780%" y="453" width="0.0829%" height="15" fill="rgb(236,80,25)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4780%" y="437" width="0.0829%" height="15" fill="rgb(220,44,24)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4780%" y="421" width="0.0829%" height="15" fill="rgb(236,225,16)" fg:x="1080" fg:w="1"/><text x="89.7280%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.5609%" y="549" width="0.0829%" height="15" fill="rgb(237,140,0)" fg:x="1081" fg:w="1"/><text x="89.8109%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.6437%" y="517" width="0.0829%" height="15" fill="rgb(243,225,53)" fg:x="1082" fg:w="1"/><text x="89.8937%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.6437%" y="501" width="0.0829%" height="15" fill="rgb(240,140,30)" fg:x="1082" fg:w="1"/><text x="89.8937%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.6437%" y="485" width="0.0829%" height="15" fill="rgb(217,51,16)" fg:x="1082" fg:w="1"/><text x="89.8937%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.6437%" y="469" width="0.0829%" height="15" fill="rgb(245,75,50)" fg:x="1082" fg:w="1"/><text x="89.8937%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.6437%" y="453" width="0.0829%" height="15" fill="rgb(208,174,22)" fg:x="1082" fg:w="1"/><text x="89.8937%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7266%" y="517" width="0.0829%" height="15" fill="rgb(219,98,50)" fg:x="1083" fg:w="1"/><text x="89.9766%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.7266%" y="501" width="0.0829%" height="15" fill="rgb(243,138,3)" fg:x="1083" fg:w="1"/><text x="89.9766%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7266%" y="485" width="0.0829%" height="15" fill="rgb(243,132,26)" fg:x="1083" fg:w="1"/><text x="89.9766%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7266%" y="469" width="0.0829%" height="15" fill="rgb(250,201,8)" fg:x="1083" fg:w="1"/><text x="89.9766%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7266%" y="453" width="0.0829%" height="15" fill="rgb(213,91,26)" fg:x="1083" fg:w="1"/><text x="89.9766%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.7266%" y="437" width="0.0829%" height="15" fill="rgb(229,117,1)" fg:x="1083" fg:w="1"/><text x="89.9766%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7266%" y="421" width="0.0829%" height="15" fill="rgb(229,24,6)" fg:x="1083" fg:w="1"/><text x="89.9766%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.50%)</title><rect x="89.4780%" y="597" width="0.4971%" height="15" fill="rgb(206,69,11)" fg:x="1080" fg:w="6"/><text x="89.7280%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.50%)</title><rect x="89.4780%" y="581" width="0.4971%" height="15" fill="rgb(234,111,34)" fg:x="1080" fg:w="6"/><text x="89.7280%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="89.5609%" y="565" width="0.4143%" height="15" fill="rgb(213,187,51)" fg:x="1081" fg:w="5"/><text x="89.8109%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="89.6437%" y="549" width="0.3314%" height="15" fill="rgb(207,45,11)" fg:x="1082" fg:w="4"/><text x="89.8937%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="89.6437%" y="533" width="0.3314%" height="15" fill="rgb(225,151,47)" fg:x="1082" fg:w="4"/><text x="89.8937%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="89.8094%" y="517" width="0.1657%" height="15" fill="rgb(211,226,5)" fg:x="1084" fg:w="2"/><text x="90.0594%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="89.8094%" y="501" width="0.1657%" height="15" fill="rgb(214,83,52)" fg:x="1084" fg:w="2"/><text x="90.0594%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="89.8094%" y="485" width="0.1657%" height="15" fill="rgb(229,49,53)" fg:x="1084" fg:w="2"/><text x="90.0594%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="89.8094%" y="469" width="0.1657%" height="15" fill="rgb(246,8,28)" fg:x="1084" fg:w="2"/><text x="90.0594%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="89.8094%" y="453" width="0.1657%" height="15" fill="rgb(207,28,41)" fg:x="1084" fg:w="2"/><text x="90.0594%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.9751%" y="597" width="0.0829%" height="15" fill="rgb(254,22,25)" fg:x="1086" fg:w="1"/><text x="90.2251%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="89.9751%" y="581" width="0.0829%" height="15" fill="rgb(209,120,42)" fg:x="1086" fg:w="1"/><text x="90.2251%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.9751%" y="565" width="0.0829%" height="15" fill="rgb(216,194,18)" fg:x="1086" fg:w="1"/><text x="90.2251%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.9751%" y="549" width="0.0829%" height="15" fill="rgb(213,70,17)" fg:x="1086" fg:w="1"/><text x="90.2251%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="89.9751%" y="533" width="0.0829%" height="15" fill="rgb(228,66,19)" fg:x="1086" fg:w="1"/><text x="90.2251%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.9751%" y="517" width="0.0829%" height="15" fill="rgb(236,221,54)" fg:x="1086" fg:w="1"/><text x="90.2251%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9751%" y="501" width="0.0829%" height="15" fill="rgb(207,175,15)" fg:x="1086" fg:w="1"/><text x="90.2251%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="90.0580%" y="581" width="0.0829%" height="15" fill="rgb(234,76,8)" fg:x="1087" fg:w="1"/><text x="90.3080%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.0580%" y="565" width="0.0829%" height="15" fill="rgb(243,106,0)" fg:x="1087" fg:w="1"/><text x="90.3080%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="90.1408%" y="533" width="0.0829%" height="15" fill="rgb(208,48,19)" fg:x="1088" fg:w="1"/><text x="90.3908%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.1408%" y="517" width="0.0829%" height="15" fill="rgb(251,50,29)" fg:x="1088" fg:w="1"/><text x="90.3908%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.33%)</title><rect x="88.9809%" y="629" width="1.3256%" height="15" fill="rgb(222,31,49)" fg:x="1074" fg:w="16"/><text x="89.2309%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.91%)</title><rect x="89.3952%" y="613" width="0.9114%" height="15" fill="rgb(232,33,18)" fg:x="1079" fg:w="11"/><text x="89.6452%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.25%)</title><rect x="90.0580%" y="597" width="0.2486%" height="15" fill="rgb(209,1,44)" fg:x="1087" fg:w="3"/><text x="90.3080%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.17%)</title><rect x="90.1408%" y="581" width="0.1657%" height="15" fill="rgb(211,7,1)" fg:x="1088" fg:w="2"/><text x="90.3908%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="90.1408%" y="565" width="0.1657%" height="15" fill="rgb(224,111,27)" fg:x="1088" fg:w="2"/><text x="90.3908%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.17%)</title><rect x="90.1408%" y="549" width="0.1657%" height="15" fill="rgb(252,195,39)" fg:x="1088" fg:w="2"/><text x="90.3908%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.2237%" y="533" width="0.0829%" height="15" fill="rgb(237,198,5)" fg:x="1089" fg:w="1"/><text x="90.4737%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.2237%" y="517" width="0.0829%" height="15" fill="rgb(232,148,1)" fg:x="1089" fg:w="1"/><text x="90.4737%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.2237%" y="501" width="0.0829%" height="15" fill="rgb(249,41,3)" fg:x="1089" fg:w="1"/><text x="90.4737%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="90.3065%" y="629" width="0.0829%" height="15" fill="rgb(215,14,33)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="90.3065%" y="613" width="0.0829%" height="15" fill="rgb(209,146,24)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="90.3065%" y="597" width="0.0829%" height="15" fill="rgb(219,51,47)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.3065%" y="581" width="0.0829%" height="15" fill="rgb(234,217,40)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.3065%" y="565" width="0.0829%" height="15" fill="rgb(228,34,26)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.3065%" y="549" width="0.0829%" height="15" fill="rgb(224,50,29)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.3065%" y="533" width="0.0829%" height="15" fill="rgb(205,79,51)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.3065%" y="517" width="0.0829%" height="15" fill="rgb(218,136,28)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3065%" y="501" width="0.0829%" height="15" fill="rgb(220,150,10)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3065%" y="485" width="0.0829%" height="15" fill="rgb(242,158,47)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.3065%" y="469" width="0.0829%" height="15" fill="rgb(209,68,0)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.3065%" y="453" width="0.0829%" height="15" fill="rgb(208,13,41)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.3065%" y="437" width="0.0829%" height="15" fill="rgb(226,201,7)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.3065%" y="421" width="0.0829%" height="15" fill="rgb(236,103,26)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3065%" y="405" width="0.0829%" height="15" fill="rgb(243,162,8)" fg:x="1090" fg:w="1"/><text x="90.5565%" y="415.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="90.3894%" y="629" width="0.0829%" height="15" fill="rgb(237,225,11)" fg:x="1091" fg:w="1"/><text x="90.6394%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="90.3894%" y="613" width="0.0829%" height="15" fill="rgb(247,186,32)" fg:x="1091" fg:w="1"/><text x="90.6394%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.3894%" y="597" width="0.0829%" height="15" fill="rgb(215,26,28)" fg:x="1091" fg:w="1"/><text x="90.6394%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.3894%" y="581" width="0.0829%" height="15" fill="rgb(208,121,6)" fg:x="1091" fg:w="1"/><text x="90.6394%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3894%" y="565" width="0.0829%" height="15" fill="rgb(225,91,3)" fg:x="1091" fg:w="1"/><text x="90.6394%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3894%" y="549" width="0.0829%" height="15" fill="rgb(246,119,36)" fg:x="1091" fg:w="1"/><text x="90.6394%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="90.3894%" y="533" width="0.0829%" height="15" fill="rgb(254,173,2)" fg:x="1091" fg:w="1"/><text x="90.6394%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.4722%" y="597" width="0.0829%" height="15" fill="rgb(209,87,54)" fg:x="1092" fg:w="1"/><text x="90.7222%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.4722%" y="581" width="0.0829%" height="15" fill="rgb(223,216,20)" fg:x="1092" fg:w="1"/><text x="90.7222%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.4722%" y="565" width="0.0829%" height="15" fill="rgb(220,31,8)" fg:x="1092" fg:w="1"/><text x="90.7222%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.4722%" y="549" width="0.0829%" height="15" fill="rgb(220,185,15)" fg:x="1092" fg:w="1"/><text x="90.7222%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="90.5551%" y="597" width="0.0829%" height="15" fill="rgb(247,190,50)" fg:x="1093" fg:w="1"/><text x="90.8051%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="90.5551%" y="581" width="0.0829%" height="15" fill="rgb(239,173,47)" fg:x="1093" fg:w="1"/><text x="90.8051%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="90.5551%" y="565" width="0.0829%" height="15" fill="rgb(218,190,42)" fg:x="1093" fg:w="1"/><text x="90.8051%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.5551%" y="549" width="0.0829%" height="15" fill="rgb(251,207,16)" fg:x="1093" fg:w="1"/><text x="90.8051%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="90.5551%" y="533" width="0.0829%" height="15" fill="rgb(222,199,47)" fg:x="1093" fg:w="1"/><text x="90.8051%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5551%" y="517" width="0.0829%" height="15" fill="rgb(245,190,7)" fg:x="1093" fg:w="1"/><text x="90.8051%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6379%" y="501" width="0.0829%" height="15" fill="rgb(239,85,38)" fg:x="1094" fg:w="1"/><text x="90.8879%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="90.4722%" y="613" width="0.3314%" height="15" fill="rgb(229,69,51)" fg:x="1092" fg:w="4"/><text x="90.7222%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.17%)</title><rect x="90.6379%" y="597" width="0.1657%" height="15" fill="rgb(231,104,51)" fg:x="1094" fg:w="2"/><text x="90.8879%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.17%)</title><rect x="90.6379%" y="581" width="0.1657%" height="15" fill="rgb(235,49,4)" fg:x="1094" fg:w="2"/><text x="90.8879%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.17%)</title><rect x="90.6379%" y="565" width="0.1657%" height="15" fill="rgb(246,166,20)" fg:x="1094" fg:w="2"/><text x="90.8879%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.17%)</title><rect x="90.6379%" y="549" width="0.1657%" height="15" fill="rgb(230,119,37)" fg:x="1094" fg:w="2"/><text x="90.8879%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.17%)</title><rect x="90.6379%" y="533" width="0.1657%" height="15" fill="rgb(234,77,34)" fg:x="1094" fg:w="2"/><text x="90.8879%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.17%)</title><rect x="90.6379%" y="517" width="0.1657%" height="15" fill="rgb(211,222,33)" fg:x="1094" fg:w="2"/><text x="90.8879%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7208%" y="501" width="0.0829%" height="15" fill="rgb(226,45,42)" fg:x="1095" fg:w="1"/><text x="90.9708%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8865%" y="517" width="0.0829%" height="15" fill="rgb(215,174,28)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8865%" y="501" width="0.0829%" height="15" fill="rgb(254,173,49)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8865%" y="485" width="0.0829%" height="15" fill="rgb(229,191,6)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8865%" y="469" width="0.0829%" height="15" fill="rgb(212,145,22)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8865%" y="453" width="0.0829%" height="15" fill="rgb(226,6,51)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8865%" y="437" width="0.0829%" height="15" fill="rgb(227,128,8)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8865%" y="421" width="0.0829%" height="15" fill="rgb(205,24,10)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.8865%" y="405" width="0.0829%" height="15" fill="rgb(217,147,27)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.8865%" y="389" width="0.0829%" height="15" fill="rgb(250,82,42)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.8865%" y="373" width="0.0829%" height="15" fill="rgb(248,93,17)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.8865%" y="357" width="0.0829%" height="15" fill="rgb(254,212,40)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.8865%" y="341" width="0.0829%" height="15" fill="rgb(229,209,2)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.8865%" y="325" width="0.0829%" height="15" fill="rgb(211,50,43)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.8865%" y="309" width="0.0829%" height="15" fill="rgb(245,196,29)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.8865%" y="293" width="0.0829%" height="15" fill="rgb(216,132,13)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.8865%" y="277" width="0.0829%" height="15" fill="rgb(251,108,21)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8865%" y="261" width="0.0829%" height="15" fill="rgb(229,174,54)" fg:x="1097" fg:w="1"/><text x="91.1365%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.17%)</title><rect x="90.8865%" y="597" width="0.1657%" height="15" fill="rgb(211,175,47)" fg:x="1097" fg:w="2"/><text x="91.1365%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="90.8865%" y="581" width="0.1657%" height="15" fill="rgb(234,5,37)" fg:x="1097" fg:w="2"/><text x="91.1365%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.17%)</title><rect x="90.8865%" y="565" width="0.1657%" height="15" fill="rgb(244,150,43)" fg:x="1097" fg:w="2"/><text x="91.1365%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="90.8865%" y="549" width="0.1657%" height="15" fill="rgb(242,172,38)" fg:x="1097" fg:w="2"/><text x="91.1365%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="90.8865%" y="533" width="0.1657%" height="15" fill="rgb(205,27,8)" fg:x="1097" fg:w="2"/><text x="91.1365%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.9693%" y="517" width="0.0829%" height="15" fill="rgb(217,57,3)" fg:x="1098" fg:w="1"/><text x="91.2193%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.9693%" y="501" width="0.0829%" height="15" fill="rgb(242,21,38)" fg:x="1098" fg:w="1"/><text x="91.2193%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.9693%" y="485" width="0.0829%" height="15" fill="rgb(209,64,43)" fg:x="1098" fg:w="1"/><text x="91.2193%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.9693%" y="469" width="0.0829%" height="15" fill="rgb(222,2,46)" fg:x="1098" fg:w="1"/><text x="91.2193%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.9693%" y="453" width="0.0829%" height="15" fill="rgb(218,19,44)" fg:x="1098" fg:w="1"/><text x="91.2193%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.9693%" y="437" width="0.0829%" height="15" fill="rgb(240,203,42)" fg:x="1098" fg:w="1"/><text x="91.2193%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9693%" y="421" width="0.0829%" height="15" fill="rgb(229,23,45)" fg:x="1098" fg:w="1"/><text x="91.2193%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.0522%" y="549" width="0.0829%" height="15" fill="rgb(205,228,51)" fg:x="1099" fg:w="1"/><text x="91.3022%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="91.0522%" y="533" width="0.0829%" height="15" fill="rgb(239,36,20)" fg:x="1099" fg:w="1"/><text x="91.3022%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.0522%" y="517" width="0.0829%" height="15" fill="rgb(248,172,27)" fg:x="1099" fg:w="1"/><text x="91.3022%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="91.0522%" y="501" width="0.0829%" height="15" fill="rgb(244,55,32)" fg:x="1099" fg:w="1"/><text x="91.3022%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (75 samples, 6.21%)</title><rect x="85.0041%" y="645" width="6.2138%" height="15" fill="rgb(215,97,16)" fg:x="1026" fg:w="75"/><text x="85.2541%" y="655.50">plugins_..</text></g><g><title>plugins_core::build::Build::occupying (9 samples, 0.75%)</title><rect x="90.4722%" y="629" width="0.7457%" height="15" fill="rgb(224,80,29)" fg:x="1092" fg:w="9"/><text x="90.7222%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.41%)</title><rect x="90.8036%" y="613" width="0.4143%" height="15" fill="rgb(216,93,47)" fg:x="1096" fg:w="5"/><text x="91.0536%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.17%)</title><rect x="91.0522%" y="597" width="0.1657%" height="15" fill="rgb(238,159,10)" fg:x="1099" fg:w="2"/><text x="91.3022%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.17%)</title><rect x="91.0522%" y="581" width="0.1657%" height="15" fill="rgb(223,98,29)" fg:x="1099" fg:w="2"/><text x="91.3022%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="91.0522%" y="565" width="0.1657%" height="15" fill="rgb(210,176,23)" fg:x="1099" fg:w="2"/><text x="91.3022%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.1350%" y="549" width="0.0829%" height="15" fill="rgb(242,162,27)" fg:x="1100" fg:w="1"/><text x="91.3850%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.1350%" y="533" width="0.0829%" height="15" fill="rgb(245,109,32)" fg:x="1100" fg:w="1"/><text x="91.3850%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.1350%" y="517" width="0.0829%" height="15" fill="rgb(248,87,8)" fg:x="1100" fg:w="1"/><text x="91.3850%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1350%" y="501" width="0.0829%" height="15" fill="rgb(250,160,50)" fg:x="1100" fg:w="1"/><text x="91.3850%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1350%" y="485" width="0.0829%" height="15" fill="rgb(246,165,25)" fg:x="1100" fg:w="1"/><text x="91.3850%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1350%" y="469" width="0.0829%" height="15" fill="rgb(249,219,3)" fg:x="1100" fg:w="1"/><text x="91.3850%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1350%" y="453" width="0.0829%" height="15" fill="rgb(226,66,5)" fg:x="1100" fg:w="1"/><text x="91.3850%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="91.2179%" y="645" width="0.0829%" height="15" fill="rgb(250,220,43)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="91.2179%" y="629" width="0.0829%" height="15" fill="rgb(225,111,31)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="91.2179%" y="613" width="0.0829%" height="15" fill="rgb(248,106,18)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.2179%" y="597" width="0.0829%" height="15" fill="rgb(220,226,45)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.2179%" y="581" width="0.0829%" height="15" fill="rgb(208,58,53)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.2179%" y="565" width="0.0829%" height="15" fill="rgb(209,133,1)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.2179%" y="549" width="0.0829%" height="15" fill="rgb(228,216,27)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2179%" y="533" width="0.0829%" height="15" fill="rgb(238,155,2)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.2179%" y="517" width="0.0829%" height="15" fill="rgb(244,99,37)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2179%" y="501" width="0.0829%" height="15" fill="rgb(254,32,3)" fg:x="1101" fg:w="1"/><text x="91.4679%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="91.3007%" y="597" width="0.0829%" height="15" fill="rgb(234,46,50)" fg:x="1102" fg:w="1"/><text x="91.5507%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="91.3007%" y="581" width="0.0829%" height="15" fill="rgb(232,118,51)" fg:x="1102" fg:w="1"/><text x="91.5507%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="91.3007%" y="565" width="0.0829%" height="15" fill="rgb(207,24,32)" fg:x="1102" fg:w="1"/><text x="91.5507%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.3007%" y="549" width="0.0829%" height="15" fill="rgb(208,107,43)" fg:x="1102" fg:w="1"/><text x="91.5507%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.3836%" y="597" width="0.0829%" height="15" fill="rgb(231,28,9)" fg:x="1103" fg:w="1"/><text x="91.6336%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.3836%" y="581" width="0.0829%" height="15" fill="rgb(241,204,15)" fg:x="1103" fg:w="1"/><text x="91.6336%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.3836%" y="565" width="0.0829%" height="15" fill="rgb(214,54,15)" fg:x="1103" fg:w="1"/><text x="91.6336%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.3836%" y="549" width="0.0829%" height="15" fill="rgb(230,12,28)" fg:x="1103" fg:w="1"/><text x="91.6336%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.3836%" y="533" width="0.0829%" height="15" fill="rgb(221,171,5)" fg:x="1103" fg:w="1"/><text x="91.6336%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.3836%" y="517" width="0.0829%" height="15" fill="rgb(207,72,25)" fg:x="1103" fg:w="1"/><text x="91.6336%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.3836%" y="501" width="0.0829%" height="15" fill="rgb(249,79,37)" fg:x="1103" fg:w="1"/><text x="91.6336%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.4664%" y="421" width="0.0829%" height="15" fill="rgb(209,98,49)" fg:x="1104" fg:w="1"/><text x="91.7164%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="91.3007%" y="613" width="0.3314%" height="15" fill="rgb(221,62,13)" fg:x="1102" fg:w="4"/><text x="91.5507%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.17%)</title><rect x="91.4664%" y="597" width="0.1657%" height="15" fill="rgb(223,39,6)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.17%)</title><rect x="91.4664%" y="581" width="0.1657%" height="15" fill="rgb(246,163,20)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.17%)</title><rect x="91.4664%" y="565" width="0.1657%" height="15" fill="rgb(211,111,29)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="91.4664%" y="549" width="0.1657%" height="15" fill="rgb(243,118,5)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="91.4664%" y="533" width="0.1657%" height="15" fill="rgb(240,144,52)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="91.4664%" y="517" width="0.1657%" height="15" fill="rgb(244,158,36)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="91.4664%" y="501" width="0.1657%" height="15" fill="rgb(241,109,37)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="91.4664%" y="485" width="0.1657%" height="15" fill="rgb(213,95,32)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="91.4664%" y="469" width="0.1657%" height="15" fill="rgb(252,193,9)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="91.4664%" y="453" width="0.1657%" height="15" fill="rgb(225,213,21)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="91.4664%" y="437" width="0.1657%" height="15" fill="rgb(220,172,46)" fg:x="1104" fg:w="2"/><text x="91.7164%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5493%" y="421" width="0.0829%" height="15" fill="rgb(235,75,41)" fg:x="1105" fg:w="1"/><text x="91.7993%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5493%" y="405" width="0.0829%" height="15" fill="rgb(213,86,9)" fg:x="1105" fg:w="1"/><text x="91.7993%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5493%" y="389" width="0.0829%" height="15" fill="rgb(238,127,51)" fg:x="1105" fg:w="1"/><text x="91.7993%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5493%" y="373" width="0.0829%" height="15" fill="rgb(215,2,54)" fg:x="1105" fg:w="1"/><text x="91.7993%" y="383.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="91.6321%" y="581" width="0.0829%" height="15" fill="rgb(245,80,6)" fg:x="1106" fg:w="1"/><text x="91.8821%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.6321%" y="565" width="0.0829%" height="15" fill="rgb(233,106,42)" fg:x="1106" fg:w="1"/><text x="91.8821%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.50%)</title><rect x="91.3007%" y="645" width="0.4971%" height="15" fill="rgb(244,86,38)" fg:x="1102" fg:w="6"/><text x="91.5507%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.50%)</title><rect x="91.3007%" y="629" width="0.4971%" height="15" fill="rgb(242,167,7)" fg:x="1102" fg:w="6"/><text x="91.5507%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.17%)</title><rect x="91.6321%" y="613" width="0.1657%" height="15" fill="rgb(218,216,3)" fg:x="1106" fg:w="2"/><text x="91.8821%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.17%)</title><rect x="91.6321%" y="597" width="0.1657%" height="15" fill="rgb(206,136,36)" fg:x="1106" fg:w="2"/><text x="91.8821%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.7150%" y="581" width="0.0829%" height="15" fill="rgb(206,206,15)" fg:x="1107" fg:w="1"/><text x="91.9650%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.7150%" y="565" width="0.0829%" height="15" fill="rgb(207,163,34)" fg:x="1107" fg:w="1"/><text x="91.9650%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.7978%" y="613" width="0.0829%" height="15" fill="rgb(240,127,22)" fg:x="1108" fg:w="1"/><text x="92.0478%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.7978%" y="597" width="0.0829%" height="15" fill="rgb(227,49,5)" fg:x="1108" fg:w="1"/><text x="92.0478%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.7978%" y="581" width="0.0829%" height="15" fill="rgb(231,8,6)" fg:x="1108" fg:w="1"/><text x="92.0478%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7978%" y="565" width="0.0829%" height="15" fill="rgb(223,21,24)" fg:x="1108" fg:w="1"/><text x="92.0478%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7978%" y="549" width="0.0829%" height="15" fill="rgb(244,44,52)" fg:x="1108" fg:w="1"/><text x="92.0478%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7978%" y="533" width="0.0829%" height="15" fill="rgb(207,73,28)" fg:x="1108" fg:w="1"/><text x="92.0478%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7978%" y="517" width="0.0829%" height="15" fill="rgb(234,215,10)" fg:x="1108" fg:w="1"/><text x="92.0478%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7978%" y="501" width="0.0829%" height="15" fill="rgb(236,85,3)" fg:x="1108" fg:w="1"/><text x="92.0478%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="91.8807%" y="565" width="0.1657%" height="15" fill="rgb(236,102,39)" fg:x="1109" fg:w="2"/><text x="92.1307%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="91.8807%" y="549" width="0.1657%" height="15" fill="rgb(243,50,8)" fg:x="1109" fg:w="2"/><text x="92.1307%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="91.8807%" y="533" width="0.1657%" height="15" fill="rgb(207,111,4)" fg:x="1109" fg:w="2"/><text x="92.1307%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="91.8807%" y="517" width="0.1657%" height="15" fill="rgb(230,52,42)" fg:x="1109" fg:w="2"/><text x="92.1307%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9635%" y="501" width="0.0829%" height="15" fill="rgb(252,178,50)" fg:x="1110" fg:w="1"/><text x="92.2135%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9635%" y="485" width="0.0829%" height="15" fill="rgb(234,46,35)" fg:x="1110" fg:w="1"/><text x="92.2135%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.9635%" y="469" width="0.0829%" height="15" fill="rgb(228,69,37)" fg:x="1110" fg:w="1"/><text x="92.2135%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9635%" y="453" width="0.0829%" height="15" fill="rgb(221,21,11)" fg:x="1110" fg:w="1"/><text x="92.2135%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9635%" y="437" width="0.0829%" height="15" fill="rgb(223,56,9)" fg:x="1110" fg:w="1"/><text x="92.2135%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9635%" y="421" width="0.0829%" height="15" fill="rgb(234,30,19)" fg:x="1110" fg:w="1"/><text x="92.2135%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.9635%" y="405" width="0.0829%" height="15" fill="rgb(211,64,54)" fg:x="1110" fg:w="1"/><text x="92.2135%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="91.7978%" y="629" width="0.3314%" height="15" fill="rgb(250,189,5)" fg:x="1108" fg:w="4"/><text x="92.0478%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.25%)</title><rect x="91.8807%" y="613" width="0.2486%" height="15" fill="rgb(214,180,13)" fg:x="1109" fg:w="3"/><text x="92.1307%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="91.8807%" y="597" width="0.2486%" height="15" fill="rgb(238,40,40)" fg:x="1109" fg:w="3"/><text x="92.1307%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.25%)</title><rect x="91.8807%" y="581" width="0.2486%" height="15" fill="rgb(214,101,38)" fg:x="1109" fg:w="3"/><text x="92.1307%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="92.0464%" y="565" width="0.0829%" height="15" fill="rgb(242,65,53)" fg:x="1111" fg:w="1"/><text x="92.2964%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.1292%" y="597" width="0.0829%" height="15" fill="rgb(230,22,45)" fg:x="1112" fg:w="1"/><text x="92.3792%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.1292%" y="581" width="0.0829%" height="15" fill="rgb(223,77,1)" fg:x="1112" fg:w="1"/><text x="92.3792%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.1292%" y="565" width="0.0829%" height="15" fill="rgb(227,33,37)" fg:x="1112" fg:w="1"/><text x="92.3792%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1292%" y="549" width="0.0829%" height="15" fill="rgb(224,148,39)" fg:x="1112" fg:w="1"/><text x="92.3792%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.1292%" y="533" width="0.0829%" height="15" fill="rgb(232,212,39)" fg:x="1112" fg:w="1"/><text x="92.3792%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1292%" y="517" width="0.0829%" height="15" fill="rgb(251,172,7)" fg:x="1112" fg:w="1"/><text x="92.3792%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.17%)</title><rect x="92.1292%" y="629" width="0.1657%" height="15" fill="rgb(219,39,9)" fg:x="1112" fg:w="2"/><text x="92.3792%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.17%)</title><rect x="92.1292%" y="613" width="0.1657%" height="15" fill="rgb(228,118,14)" fg:x="1112" fg:w="2"/><text x="92.3792%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="92.2121%" y="597" width="0.0829%" height="15" fill="rgb(207,140,10)" fg:x="1113" fg:w="1"/><text x="92.4621%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="92.2121%" y="581" width="0.0829%" height="15" fill="rgb(227,111,53)" fg:x="1113" fg:w="1"/><text x="92.4621%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.2121%" y="565" width="0.0829%" height="15" fill="rgb(216,165,16)" fg:x="1113" fg:w="1"/><text x="92.4621%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.2121%" y="549" width="0.0829%" height="15" fill="rgb(226,111,18)" fg:x="1113" fg:w="1"/><text x="92.4621%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.2121%" y="533" width="0.0829%" height="15" fill="rgb(251,27,17)" fg:x="1113" fg:w="1"/><text x="92.4621%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.17%)</title><rect x="92.2949%" y="581" width="0.1657%" height="15" fill="rgb(254,69,9)" fg:x="1114" fg:w="2"/><text x="92.5449%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="92.2949%" y="565" width="0.1657%" height="15" fill="rgb(234,140,37)" fg:x="1114" fg:w="2"/><text x="92.5449%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="92.2949%" y="549" width="0.1657%" height="15" fill="rgb(220,93,8)" fg:x="1114" fg:w="2"/><text x="92.5449%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3778%" y="533" width="0.0829%" height="15" fill="rgb(236,113,3)" fg:x="1115" fg:w="1"/><text x="92.6278%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3778%" y="517" width="0.0829%" height="15" fill="rgb(234,108,23)" fg:x="1115" fg:w="1"/><text x="92.6278%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (158 samples, 13.09%)</title><rect x="79.4532%" y="661" width="13.0903%" height="15" fill="rgb(205,114,34)" fg:x="959" fg:w="158"/><text x="79.7032%" y="671.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (9 samples, 0.75%)</title><rect x="91.7978%" y="645" width="0.7457%" height="15" fill="rgb(236,200,45)" fg:x="1108" fg:w="9"/><text x="92.0478%" y="655.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.25%)</title><rect x="92.2949%" y="629" width="0.2486%" height="15" fill="rgb(227,194,29)" fg:x="1114" fg:w="3"/><text x="92.5449%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new (3 samples, 0.25%)</title><rect x="92.2949%" y="613" width="0.2486%" height="15" fill="rgb(250,76,42)" fg:x="1114" fg:w="3"/><text x="92.5449%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="92.2949%" y="597" width="0.2486%" height="15" fill="rgb(208,128,8)" fg:x="1114" fg:w="3"/><text x="92.5449%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.4606%" y="581" width="0.0829%" height="15" fill="rgb(229,209,35)" fg:x="1116" fg:w="1"/><text x="92.7106%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.4606%" y="565" width="0.0829%" height="15" fill="rgb(215,39,53)" fg:x="1116" fg:w="1"/><text x="92.7106%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.4606%" y="549" width="0.0829%" height="15" fill="rgb(219,123,41)" fg:x="1116" fg:w="1"/><text x="92.7106%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.5435%" y="613" width="0.0829%" height="15" fill="rgb(212,158,18)" fg:x="1117" fg:w="1"/><text x="92.7935%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="92.6263%" y="581" width="0.0829%" height="15" fill="rgb(234,196,53)" fg:x="1118" fg:w="1"/><text x="92.8763%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.6263%" y="565" width="0.0829%" height="15" fill="rgb(210,139,12)" fg:x="1118" fg:w="1"/><text x="92.8763%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.6263%" y="549" width="0.0829%" height="15" fill="rgb(220,116,54)" fg:x="1118" fg:w="1"/><text x="92.8763%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.6263%" y="533" width="0.0829%" height="15" fill="rgb(247,103,28)" fg:x="1118" fg:w="1"/><text x="92.8763%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.6263%" y="517" width="0.0829%" height="15" fill="rgb(253,156,45)" fg:x="1118" fg:w="1"/><text x="92.8763%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.7092%" y="565" width="0.0829%" height="15" fill="rgb(237,157,52)" fg:x="1119" fg:w="1"/><text x="92.9592%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="92.7920%" y="565" width="0.0829%" height="15" fill="rgb(253,112,16)" fg:x="1120" fg:w="1"/><text x="93.0420%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.7920%" y="549" width="0.0829%" height="15" fill="rgb(234,70,18)" fg:x="1120" fg:w="1"/><text x="93.0420%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.7920%" y="533" width="0.0829%" height="15" fill="rgb(247,138,19)" fg:x="1120" fg:w="1"/><text x="93.0420%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.7920%" y="517" width="0.0829%" height="15" fill="rgb(207,171,1)" fg:x="1120" fg:w="1"/><text x="93.0420%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="92.7920%" y="501" width="0.0829%" height="15" fill="rgb(239,213,3)" fg:x="1120" fg:w="1"/><text x="93.0420%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.1234%" y="533" width="0.0829%" height="15" fill="rgb(226,112,4)" fg:x="1124" fg:w="1"/><text x="93.3734%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.2063%" y="485" width="0.0829%" height="15" fill="rgb(252,170,12)" fg:x="1125" fg:w="1"/><text x="93.4563%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.2063%" y="469" width="0.0829%" height="15" fill="rgb(241,106,13)" fg:x="1125" fg:w="1"/><text x="93.4563%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.2891%" y="469" width="0.0829%" height="15" fill="rgb(225,73,23)" fg:x="1126" fg:w="1"/><text x="93.5391%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.2891%" y="453" width="0.0829%" height="15" fill="rgb(251,227,29)" fg:x="1126" fg:w="1"/><text x="93.5391%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.2891%" y="437" width="0.0829%" height="15" fill="rgb(237,144,13)" fg:x="1126" fg:w="1"/><text x="93.5391%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.2891%" y="421" width="0.0829%" height="15" fill="rgb(232,106,46)" fg:x="1126" fg:w="1"/><text x="93.5391%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.2891%" y="405" width="0.0829%" height="15" fill="rgb(245,154,53)" fg:x="1126" fg:w="1"/><text x="93.5391%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.2891%" y="389" width="0.0829%" height="15" fill="rgb(212,119,47)" fg:x="1126" fg:w="1"/><text x="93.5391%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.2891%" y="373" width="0.0829%" height="15" fill="rgb(253,135,25)" fg:x="1126" fg:w="1"/><text x="93.5391%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.58%)</title><rect x="92.8749%" y="549" width="0.5800%" height="15" fill="rgb(253,208,39)" fg:x="1121" fg:w="7"/><text x="93.1249%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="93.2063%" y="533" width="0.2486%" height="15" fill="rgb(226,64,12)" fg:x="1125" fg:w="3"/><text x="93.4563%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="93.2063%" y="517" width="0.2486%" height="15" fill="rgb(214,162,37)" fg:x="1125" fg:w="3"/><text x="93.4563%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="93.2063%" y="501" width="0.2486%" height="15" fill="rgb(250,104,5)" fg:x="1125" fg:w="3"/><text x="93.4563%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.17%)</title><rect x="93.2891%" y="485" width="0.1657%" height="15" fill="rgb(220,202,50)" fg:x="1126" fg:w="2"/><text x="93.5391%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.3720%" y="469" width="0.0829%" height="15" fill="rgb(248,67,38)" fg:x="1127" fg:w="1"/><text x="93.6220%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.3720%" y="453" width="0.0829%" height="15" fill="rgb(242,94,35)" fg:x="1127" fg:w="1"/><text x="93.6220%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="93.3720%" y="437" width="0.0829%" height="15" fill="rgb(209,78,37)" fg:x="1127" fg:w="1"/><text x="93.6220%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.83%)</title><rect x="92.7092%" y="581" width="0.8285%" height="15" fill="rgb(230,126,47)" fg:x="1119" fg:w="10"/><text x="92.9592%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.66%)</title><rect x="92.8749%" y="565" width="0.6628%" height="15" fill="rgb(222,110,35)" fg:x="1121" fg:w="8"/><text x="93.1249%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.4548%" y="549" width="0.0829%" height="15" fill="rgb(233,154,20)" fg:x="1128" fg:w="1"/><text x="93.7048%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.4548%" y="533" width="0.0829%" height="15" fill="rgb(223,53,50)" fg:x="1128" fg:w="1"/><text x="93.7048%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4548%" y="517" width="0.0829%" height="15" fill="rgb(251,27,26)" fg:x="1128" fg:w="1"/><text x="93.7048%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.4548%" y="501" width="0.0829%" height="15" fill="rgb(223,189,16)" fg:x="1128" fg:w="1"/><text x="93.7048%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.4548%" y="485" width="0.0829%" height="15" fill="rgb(207,5,54)" fg:x="1128" fg:w="1"/><text x="93.7048%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.4548%" y="469" width="0.0829%" height="15" fill="rgb(254,124,50)" fg:x="1128" fg:w="1"/><text x="93.7048%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5377%" y="549" width="0.0829%" height="15" fill="rgb(253,193,24)" fg:x="1129" fg:w="1"/><text x="93.7877%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.17%)</title><rect x="93.7034%" y="517" width="0.1657%" height="15" fill="rgb(235,170,24)" fg:x="1131" fg:w="2"/><text x="93.9534%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8691%" y="469" width="0.0829%" height="15" fill="rgb(222,212,52)" fg:x="1133" fg:w="1"/><text x="94.1191%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.50%)</title><rect x="93.5377%" y="581" width="0.4971%" height="15" fill="rgb(223,17,45)" fg:x="1129" fg:w="6"/><text x="93.7877%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.50%)</title><rect x="93.5377%" y="565" width="0.4971%" height="15" fill="rgb(227,103,26)" fg:x="1129" fg:w="6"/><text x="93.7877%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="93.6205%" y="549" width="0.4143%" height="15" fill="rgb(251,151,25)" fg:x="1130" fg:w="5"/><text x="93.8705%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="93.7034%" y="533" width="0.3314%" height="15" fill="rgb(248,144,29)" fg:x="1131" fg:w="4"/><text x="93.9534%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="93.8691%" y="517" width="0.1657%" height="15" fill="rgb(245,97,16)" fg:x="1133" fg:w="2"/><text x="94.1191%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="93.8691%" y="501" width="0.1657%" height="15" fill="rgb(220,200,29)" fg:x="1133" fg:w="2"/><text x="94.1191%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.17%)</title><rect x="93.8691%" y="485" width="0.1657%" height="15" fill="rgb(206,38,29)" fg:x="1133" fg:w="2"/><text x="94.1191%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.9519%" y="469" width="0.0829%" height="15" fill="rgb(245,19,52)" fg:x="1134" fg:w="1"/><text x="94.2019%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.2005%" y="517" width="0.0829%" height="15" fill="rgb(205,67,43)" fg:x="1137" fg:w="1"/><text x="94.4505%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.2833%" y="501" width="0.0829%" height="15" fill="rgb(217,128,23)" fg:x="1138" fg:w="1"/><text x="94.5333%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.2833%" y="485" width="0.0829%" height="15" fill="rgb(210,109,28)" fg:x="1138" fg:w="1"/><text x="94.5333%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3662%" y="485" width="0.0829%" height="15" fill="rgb(233,181,7)" fg:x="1139" fg:w="1"/><text x="94.6162%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3662%" y="469" width="0.0829%" height="15" fill="rgb(244,11,22)" fg:x="1139" fg:w="1"/><text x="94.6162%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4490%" y="437" width="0.0829%" height="15" fill="rgb(205,124,54)" fg:x="1140" fg:w="1"/><text x="94.6990%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.17%)</title><rect x="94.4490%" y="469" width="0.1657%" height="15" fill="rgb(218,21,27)" fg:x="1140" fg:w="2"/><text x="94.6990%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.17%)</title><rect x="94.4490%" y="453" width="0.1657%" height="15" fill="rgb(224,153,33)" fg:x="1140" fg:w="2"/><text x="94.6990%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5319%" y="437" width="0.0829%" height="15" fill="rgb(240,219,28)" fg:x="1141" fg:w="1"/><text x="94.7819%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5319%" y="421" width="0.0829%" height="15" fill="rgb(214,80,29)" fg:x="1141" fg:w="1"/><text x="94.7819%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.58%)</title><rect x="94.1176%" y="549" width="0.5800%" height="15" fill="rgb(247,148,44)" fg:x="1136" fg:w="7"/><text x="94.3676%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.58%)</title><rect x="94.1176%" y="533" width="0.5800%" height="15" fill="rgb(243,110,30)" fg:x="1136" fg:w="7"/><text x="94.3676%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="94.2833%" y="517" width="0.4143%" height="15" fill="rgb(243,173,41)" fg:x="1138" fg:w="5"/><text x="94.5333%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="94.3662%" y="501" width="0.3314%" height="15" fill="rgb(225,160,47)" fg:x="1139" fg:w="4"/><text x="94.6162%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="94.4490%" y="485" width="0.2486%" height="15" fill="rgb(215,44,21)" fg:x="1140" fg:w="3"/><text x="94.6990%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.6147%" y="469" width="0.0829%" height="15" fill="rgb(248,90,3)" fg:x="1142" fg:w="1"/><text x="94.8647%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.6147%" y="453" width="0.0829%" height="15" fill="rgb(220,196,49)" fg:x="1142" fg:w="1"/><text x="94.8647%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.6147%" y="437" width="0.0829%" height="15" fill="rgb(217,138,14)" fg:x="1142" fg:w="1"/><text x="94.8647%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.75%)</title><rect x="94.0348%" y="565" width="0.7457%" height="15" fill="rgb(219,111,20)" fg:x="1135" fg:w="9"/><text x="94.2848%" y="575.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="94.6976%" y="549" width="0.0829%" height="15" fill="rgb(218,114,4)" fg:x="1143" fg:w="1"/><text x="94.9476%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="94.6976%" y="533" width="0.0829%" height="15" fill="rgb(238,133,3)" fg:x="1143" fg:w="1"/><text x="94.9476%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="94.6976%" y="517" width="0.0829%" height="15" fill="rgb(224,95,0)" fg:x="1143" fg:w="1"/><text x="94.9476%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="94.7804%" y="565" width="0.0829%" height="15" fill="rgb(220,169,35)" fg:x="1144" fg:w="1"/><text x="95.0304%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.7804%" y="549" width="0.0829%" height="15" fill="rgb(242,116,47)" fg:x="1144" fg:w="1"/><text x="95.0304%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="95.2775%" y="485" width="0.1657%" height="15" fill="rgb(251,42,20)" fg:x="1150" fg:w="2"/><text x="95.5275%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3604%" y="469" width="0.0829%" height="15" fill="rgb(234,7,34)" fg:x="1151" fg:w="1"/><text x="95.6104%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="95.4432%" y="485" width="0.0829%" height="15" fill="rgb(243,208,13)" fg:x="1152" fg:w="1"/><text x="95.6932%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.4432%" y="469" width="0.0829%" height="15" fill="rgb(227,33,28)" fg:x="1152" fg:w="1"/><text x="95.6932%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.4432%" y="453" width="0.0829%" height="15" fill="rgb(250,47,37)" fg:x="1152" fg:w="1"/><text x="95.6932%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4432%" y="437" width="0.0829%" height="15" fill="rgb(235,111,52)" fg:x="1152" fg:w="1"/><text x="95.6932%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4432%" y="421" width="0.0829%" height="15" fill="rgb(223,64,28)" fg:x="1152" fg:w="1"/><text x="95.6932%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.4432%" y="405" width="0.0829%" height="15" fill="rgb(236,67,22)" fg:x="1152" fg:w="1"/><text x="95.6932%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.17%)</title><rect x="95.5261%" y="453" width="0.1657%" height="15" fill="rgb(243,79,24)" fg:x="1153" fg:w="2"/><text x="95.7761%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6089%" y="437" width="0.0829%" height="15" fill="rgb(241,225,22)" fg:x="1154" fg:w="1"/><text x="95.8589%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="95.6089%" y="421" width="0.0829%" height="15" fill="rgb(228,214,26)" fg:x="1154" fg:w="1"/><text x="95.8589%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9403%" y="389" width="0.0829%" height="15" fill="rgb(219,84,52)" fg:x="1158" fg:w="1"/><text x="96.1903%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9403%" y="373" width="0.0829%" height="15" fill="rgb(220,12,22)" fg:x="1158" fg:w="1"/><text x="96.1903%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.58%)</title><rect x="95.5261%" y="469" width="0.5800%" height="15" fill="rgb(219,9,49)" fg:x="1153" fg:w="7"/><text x="95.7761%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="95.6918%" y="453" width="0.4143%" height="15" fill="rgb(237,40,43)" fg:x="1155" fg:w="5"/><text x="95.9418%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="95.6918%" y="437" width="0.4143%" height="15" fill="rgb(212,189,32)" fg:x="1155" fg:w="5"/><text x="95.9418%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="95.7746%" y="421" width="0.3314%" height="15" fill="rgb(247,48,9)" fg:x="1156" fg:w="4"/><text x="96.0246%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.17%)</title><rect x="95.9403%" y="405" width="0.1657%" height="15" fill="rgb(247,112,3)" fg:x="1158" fg:w="2"/><text x="96.1903%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="96.0232%" y="389" width="0.0829%" height="15" fill="rgb(243,110,18)" fg:x="1159" fg:w="1"/><text x="96.2732%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="96.0232%" y="373" width="0.0829%" height="15" fill="rgb(233,223,44)" fg:x="1159" fg:w="1"/><text x="96.2732%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0232%" y="357" width="0.0829%" height="15" fill="rgb(245,160,20)" fg:x="1159" fg:w="1"/><text x="96.2732%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0232%" y="341" width="0.0829%" height="15" fill="rgb(225,37,1)" fg:x="1159" fg:w="1"/><text x="96.2732%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0232%" y="325" width="0.0829%" height="15" fill="rgb(253,227,39)" fg:x="1159" fg:w="1"/><text x="96.2732%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.08%)</title><rect x="95.1118%" y="517" width="1.0771%" height="15" fill="rgb(240,179,26)" fg:x="1148" fg:w="13"/><text x="95.3618%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.08%)</title><rect x="95.1118%" y="501" width="1.0771%" height="15" fill="rgb(237,212,23)" fg:x="1148" fg:w="13"/><text x="95.3618%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.66%)</title><rect x="95.5261%" y="485" width="0.6628%" height="15" fill="rgb(221,38,11)" fg:x="1153" fg:w="8"/><text x="95.7761%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1060%" y="469" width="0.0829%" height="15" fill="rgb(215,85,6)" fg:x="1160" fg:w="1"/><text x="96.3560%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.41%)</title><rect x="94.8633%" y="565" width="1.4085%" height="15" fill="rgb(239,64,14)" fg:x="1145" fg:w="17"/><text x="95.1133%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.33%)</title><rect x="94.9461%" y="549" width="1.3256%" height="15" fill="rgb(215,150,32)" fg:x="1146" fg:w="16"/><text x="95.1961%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.24%)</title><rect x="95.0290%" y="533" width="1.2428%" height="15" fill="rgb(238,15,13)" fg:x="1147" fg:w="15"/><text x="95.2790%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1889%" y="517" width="0.0829%" height="15" fill="rgb(251,87,8)" fg:x="1161" fg:w="1"/><text x="96.4389%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1889%" y="501" width="0.0829%" height="15" fill="rgb(206,86,1)" fg:x="1161" fg:w="1"/><text x="96.4389%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.4374%" y="421" width="0.0829%" height="15" fill="rgb(208,151,45)" fg:x="1164" fg:w="1"/><text x="96.6874%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.4374%" y="405" width="0.0829%" height="15" fill="rgb(231,181,24)" fg:x="1164" fg:w="1"/><text x="96.6874%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4374%" y="389" width="0.0829%" height="15" fill="rgb(240,106,29)" fg:x="1164" fg:w="1"/><text x="96.6874%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5203%" y="421" width="0.0829%" height="15" fill="rgb(227,166,11)" fg:x="1165" fg:w="1"/><text x="96.7703%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5203%" y="405" width="0.0829%" height="15" fill="rgb(254,14,34)" fg:x="1165" fg:w="1"/><text x="96.7703%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5203%" y="389" width="0.0829%" height="15" fill="rgb(223,222,6)" fg:x="1165" fg:w="1"/><text x="96.7703%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5203%" y="373" width="0.0829%" height="15" fill="rgb(245,69,24)" fg:x="1165" fg:w="1"/><text x="96.7703%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="96.4374%" y="437" width="0.2486%" height="15" fill="rgb(213,193,7)" fg:x="1164" fg:w="3"/><text x="96.6874%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="96.6031%" y="421" width="0.0829%" height="15" fill="rgb(237,92,51)" fg:x="1166" fg:w="1"/><text x="96.8531%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.6031%" y="405" width="0.0829%" height="15" fill="rgb(225,194,6)" fg:x="1166" fg:w="1"/><text x="96.8531%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6031%" y="389" width="0.0829%" height="15" fill="rgb(205,159,49)" fg:x="1166" fg:w="1"/><text x="96.8531%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="96.4374%" y="501" width="0.3314%" height="15" fill="rgb(219,69,2)" fg:x="1164" fg:w="4"/><text x="96.6874%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="96.4374%" y="485" width="0.3314%" height="15" fill="rgb(215,107,24)" fg:x="1164" fg:w="4"/><text x="96.6874%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="96.4374%" y="469" width="0.3314%" height="15" fill="rgb(249,208,29)" fg:x="1164" fg:w="4"/><text x="96.6874%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="96.4374%" y="453" width="0.3314%" height="15" fill="rgb(213,147,10)" fg:x="1164" fg:w="4"/><text x="96.6874%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.6860%" y="437" width="0.0829%" height="15" fill="rgb(254,140,42)" fg:x="1167" fg:w="1"/><text x="96.9360%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.6860%" y="421" width="0.0829%" height="15" fill="rgb(249,9,15)" fg:x="1167" fg:w="1"/><text x="96.9360%" y="431.50"></text></g><g><title>engine::session::Session::close (52 samples, 4.31%)</title><rect x="92.5435%" y="661" width="4.3082%" height="15" fill="rgb(210,19,33)" fg:x="1117" fg:w="52"/><text x="92.7935%" y="671.50">engin..</text></g><g><title>engine::session::state::State::close (52 samples, 4.31%)</title><rect x="92.5435%" y="645" width="4.3082%" height="15" fill="rgb(241,121,22)" fg:x="1117" fg:w="52"/><text x="92.7935%" y="655.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (52 samples, 4.31%)</title><rect x="92.5435%" y="629" width="4.3082%" height="15" fill="rgb(244,69,52)" fg:x="1117" fg:w="52"/><text x="92.7935%" y="639.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (51 samples, 4.23%)</title><rect x="92.6263%" y="613" width="4.2254%" height="15" fill="rgb(244,191,54)" fg:x="1118" fg:w="51"/><text x="92.8763%" y="623.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (51 samples, 4.23%)</title><rect x="92.6263%" y="597" width="4.2254%" height="15" fill="rgb(250,3,53)" fg:x="1118" fg:w="51"/><text x="92.8763%" y="607.50">engin..</text></g><g><title>kernel::model::any_entity_changes (34 samples, 2.82%)</title><rect x="94.0348%" y="581" width="2.8169%" height="15" fill="rgb(205,77,3)" fg:x="1135" fg:w="34"/><text x="94.2848%" y="591.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.58%)</title><rect x="96.2717%" y="565" width="0.5800%" height="15" fill="rgb(207,155,3)" fg:x="1162" fg:w="7"/><text x="96.5217%" y="575.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.58%)</title><rect x="96.2717%" y="549" width="0.5800%" height="15" fill="rgb(224,79,2)" fg:x="1162" fg:w="7"/><text x="96.5217%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.58%)</title><rect x="96.2717%" y="533" width="0.5800%" height="15" fill="rgb(243,172,5)" fg:x="1162" fg:w="7"/><text x="96.5217%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.58%)</title><rect x="96.2717%" y="517" width="0.5800%" height="15" fill="rgb(217,23,43)" fg:x="1162" fg:w="7"/><text x="96.5217%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.7688%" y="501" width="0.0829%" height="15" fill="rgb(223,109,20)" fg:x="1168" fg:w="1"/><text x="97.0188%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.1002%" y="437" width="0.0829%" height="15" fill="rgb(232,159,21)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.1002%" y="421" width="0.0829%" height="15" fill="rgb(219,58,2)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1002%" y="405" width="0.0829%" height="15" fill="rgb(241,56,8)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1002%" y="389" width="0.0829%" height="15" fill="rgb(249,10,27)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1002%" y="373" width="0.0829%" height="15" fill="rgb(248,177,5)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1002%" y="357" width="0.0829%" height="15" fill="rgb(239,12,30)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1002%" y="341" width="0.0829%" height="15" fill="rgb(229,164,25)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.1002%" y="325" width="0.0829%" height="15" fill="rgb(231,217,50)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1002%" y="309" width="0.0829%" height="15" fill="rgb(247,99,32)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1002%" y="293" width="0.0829%" height="15" fill="rgb(240,74,50)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1002%" y="277" width="0.0829%" height="15" fill="rgb(218,54,8)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1002%" y="261" width="0.0829%" height="15" fill="rgb(227,132,20)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1002%" y="245" width="0.0829%" height="15" fill="rgb(232,134,12)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.1002%" y="229" width="0.0829%" height="15" fill="rgb(250,129,18)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.1002%" y="213" width="0.0829%" height="15" fill="rgb(232,129,47)" fg:x="1172" fg:w="1"/><text x="97.3502%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.25%)</title><rect x="97.0174%" y="469" width="0.2486%" height="15" fill="rgb(230,31,40)" fg:x="1171" fg:w="3"/><text x="97.2674%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="97.1002%" y="453" width="0.1657%" height="15" fill="rgb(232,126,10)" fg:x="1172" fg:w="2"/><text x="97.3502%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.1831%" y="437" width="0.0829%" height="15" fill="rgb(205,46,31)" fg:x="1173" fg:w="1"/><text x="97.4331%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1831%" y="421" width="0.0829%" height="15" fill="rgb(232,37,37)" fg:x="1173" fg:w="1"/><text x="97.4331%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2659%" y="341" width="0.0829%" height="15" fill="rgb(240,91,16)" fg:x="1174" fg:w="1"/><text x="97.5159%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2659%" y="325" width="0.0829%" height="15" fill="rgb(224,160,9)" fg:x="1174" fg:w="1"/><text x="97.5159%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2659%" y="309" width="0.0829%" height="15" fill="rgb(215,116,14)" fg:x="1174" fg:w="1"/><text x="97.5159%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2659%" y="293" width="0.0829%" height="15" fill="rgb(235,46,36)" fg:x="1174" fg:w="1"/><text x="97.5159%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2659%" y="277" width="0.0829%" height="15" fill="rgb(238,39,28)" fg:x="1174" fg:w="1"/><text x="97.5159%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2659%" y="261" width="0.0829%" height="15" fill="rgb(242,125,29)" fg:x="1174" fg:w="1"/><text x="97.5159%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2659%" y="245" width="0.0829%" height="15" fill="rgb(238,211,30)" fg:x="1174" fg:w="1"/><text x="97.5159%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2659%" y="229" width="0.0829%" height="15" fill="rgb(227,201,28)" fg:x="1174" fg:w="1"/><text x="97.5159%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="97.2659%" y="373" width="0.2486%" height="15" fill="rgb(238,77,29)" fg:x="1174" fg:w="3"/><text x="97.5159%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="97.2659%" y="357" width="0.2486%" height="15" fill="rgb(213,221,40)" fg:x="1174" fg:w="3"/><text x="97.5159%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.17%)</title><rect x="97.3488%" y="341" width="0.1657%" height="15" fill="rgb(226,220,44)" fg:x="1175" fg:w="2"/><text x="97.5988%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.4316%" y="325" width="0.0829%" height="15" fill="rgb(228,90,23)" fg:x="1176" fg:w="1"/><text x="97.6816%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.33%)</title><rect x="97.2659%" y="469" width="0.3314%" height="15" fill="rgb(235,72,29)" fg:x="1174" fg:w="4"/><text x="97.5159%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="97.2659%" y="453" width="0.3314%" height="15" fill="rgb(248,117,39)" fg:x="1174" fg:w="4"/><text x="97.5159%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="97.2659%" y="437" width="0.3314%" height="15" fill="rgb(225,43,28)" fg:x="1174" fg:w="4"/><text x="97.5159%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="97.2659%" y="421" width="0.3314%" height="15" fill="rgb(240,93,4)" fg:x="1174" fg:w="4"/><text x="97.5159%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="97.2659%" y="405" width="0.3314%" height="15" fill="rgb(234,178,27)" fg:x="1174" fg:w="4"/><text x="97.5159%" y="415.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.33%)</title><rect x="97.2659%" y="389" width="0.3314%" height="15" fill="rgb(254,88,22)" fg:x="1174" fg:w="4"/><text x="97.5159%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.5145%" y="373" width="0.0829%" height="15" fill="rgb(240,206,50)" fg:x="1177" fg:w="1"/><text x="97.7645%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.5145%" y="357" width="0.0829%" height="15" fill="rgb(249,103,8)" fg:x="1177" fg:w="1"/><text x="97.7645%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.5145%" y="341" width="0.0829%" height="15" fill="rgb(241,178,36)" fg:x="1177" fg:w="1"/><text x="97.7645%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.5145%" y="325" width="0.0829%" height="15" fill="rgb(246,110,15)" fg:x="1177" fg:w="1"/><text x="97.7645%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5145%" y="309" width="0.0829%" height="15" fill="rgb(207,14,43)" fg:x="1177" fg:w="1"/><text x="97.7645%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5973%" y="421" width="0.0829%" height="15" fill="rgb(253,219,19)" fg:x="1178" fg:w="1"/><text x="97.8473%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5973%" y="405" width="0.0829%" height="15" fill="rgb(216,126,5)" fg:x="1178" fg:w="1"/><text x="97.8473%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5973%" y="389" width="0.0829%" height="15" fill="rgb(218,78,42)" fg:x="1178" fg:w="1"/><text x="97.8473%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5973%" y="373" width="0.0829%" height="15" fill="rgb(215,154,40)" fg:x="1178" fg:w="1"/><text x="97.8473%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5973%" y="357" width="0.0829%" height="15" fill="rgb(235,129,32)" fg:x="1178" fg:w="1"/><text x="97.8473%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5973%" y="341" width="0.0829%" height="15" fill="rgb(218,51,8)" fg:x="1178" fg:w="1"/><text x="97.8473%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.6802%" y="325" width="0.0829%" height="15" fill="rgb(245,48,4)" fg:x="1179" fg:w="1"/><text x="97.9302%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.6802%" y="309" width="0.0829%" height="15" fill="rgb(250,175,12)" fg:x="1179" fg:w="1"/><text x="97.9302%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.6802%" y="293" width="0.0829%" height="15" fill="rgb(237,95,40)" fg:x="1179" fg:w="1"/><text x="97.9302%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.83%)</title><rect x="97.0174%" y="517" width="0.8285%" height="15" fill="rgb(244,120,0)" fg:x="1171" fg:w="10"/><text x="97.2674%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.83%)</title><rect x="97.0174%" y="501" width="0.8285%" height="15" fill="rgb(241,19,42)" fg:x="1171" fg:w="10"/><text x="97.2674%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.83%)</title><rect x="97.0174%" y="485" width="0.8285%" height="15" fill="rgb(217,174,48)" fg:x="1171" fg:w="10"/><text x="97.2674%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.25%)</title><rect x="97.5973%" y="469" width="0.2486%" height="15" fill="rgb(239,36,38)" fg:x="1178" fg:w="3"/><text x="97.8473%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.25%)</title><rect x="97.5973%" y="453" width="0.2486%" height="15" fill="rgb(220,63,49)" fg:x="1178" fg:w="3"/><text x="97.8473%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.25%)</title><rect x="97.5973%" y="437" width="0.2486%" height="15" fill="rgb(240,101,13)" fg:x="1178" fg:w="3"/><text x="97.8473%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="97.6802%" y="421" width="0.1657%" height="15" fill="rgb(209,184,51)" fg:x="1179" fg:w="2"/><text x="97.9302%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="97.6802%" y="405" width="0.1657%" height="15" fill="rgb(206,136,39)" fg:x="1179" fg:w="2"/><text x="97.9302%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="97.6802%" y="389" width="0.1657%" height="15" fill="rgb(254,47,45)" fg:x="1179" fg:w="2"/><text x="97.9302%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="97.6802%" y="373" width="0.1657%" height="15" fill="rgb(252,103,20)" fg:x="1179" fg:w="2"/><text x="97.9302%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="97.6802%" y="357" width="0.1657%" height="15" fill="rgb(230,69,12)" fg:x="1179" fg:w="2"/><text x="97.9302%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="97.6802%" y="341" width="0.1657%" height="15" fill="rgb(219,2,28)" fg:x="1179" fg:w="2"/><text x="97.9302%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7630%" y="325" width="0.0829%" height="15" fill="rgb(210,9,12)" fg:x="1180" fg:w="1"/><text x="98.0130%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7630%" y="309" width="0.0829%" height="15" fill="rgb(235,99,33)" fg:x="1180" fg:w="1"/><text x="98.0130%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (12 samples, 0.99%)</title><rect x="96.9345%" y="645" width="0.9942%" height="15" fill="rgb(230,11,38)" fg:x="1170" fg:w="12"/><text x="97.1845%" y="655.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (12 samples, 0.99%)</title><rect x="96.9345%" y="629" width="0.9942%" height="15" fill="rgb(217,129,0)" fg:x="1170" fg:w="12"/><text x="97.1845%" y="639.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (12 samples, 0.99%)</title><rect x="96.9345%" y="613" width="0.9942%" height="15" fill="rgb(222,198,4)" fg:x="1170" fg:w="12"/><text x="97.1845%" y="623.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (12 samples, 0.99%)</title><rect x="96.9345%" y="597" width="0.9942%" height="15" fill="rgb(246,170,27)" fg:x="1170" fg:w="12"/><text x="97.1845%" y="607.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (12 samples, 0.99%)</title><rect x="96.9345%" y="581" width="0.9942%" height="15" fill="rgb(229,17,28)" fg:x="1170" fg:w="12"/><text x="97.1845%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (11 samples, 0.91%)</title><rect x="97.0174%" y="565" width="0.9114%" height="15" fill="rgb(233,198,48)" fg:x="1171" fg:w="11"/><text x="97.2674%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.91%)</title><rect x="97.0174%" y="549" width="0.9114%" height="15" fill="rgb(238,103,23)" fg:x="1171" fg:w="11"/><text x="97.2674%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.91%)</title><rect x="97.0174%" y="533" width="0.9114%" height="15" fill="rgb(206,91,41)" fg:x="1171" fg:w="11"/><text x="97.2674%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8459%" y="517" width="0.0829%" height="15" fill="rgb(227,34,25)" fg:x="1181" fg:w="1"/><text x="98.0959%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8459%" y="501" width="0.0829%" height="15" fill="rgb(210,110,44)" fg:x="1181" fg:w="1"/><text x="98.0959%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8459%" y="485" width="0.0829%" height="15" fill="rgb(216,189,8)" fg:x="1181" fg:w="1"/><text x="98.0959%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8459%" y="469" width="0.0829%" height="15" fill="rgb(234,9,46)" fg:x="1181" fg:w="1"/><text x="98.0959%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.9287%" y="581" width="0.0829%" height="15" fill="rgb(251,200,5)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.9287%" y="565" width="0.0829%" height="15" fill="rgb(238,165,37)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.9287%" y="549" width="0.0829%" height="15" fill="rgb(232,77,38)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9287%" y="533" width="0.0829%" height="15" fill="rgb(253,179,33)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9287%" y="517" width="0.0829%" height="15" fill="rgb(240,13,35)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9287%" y="501" width="0.0829%" height="15" fill="rgb(242,150,49)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9287%" y="485" width="0.0829%" height="15" fill="rgb(237,176,28)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.9287%" y="469" width="0.0829%" height="15" fill="rgb(214,176,33)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9287%" y="453" width="0.0829%" height="15" fill="rgb(214,25,12)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9287%" y="437" width="0.0829%" height="15" fill="rgb(238,190,20)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9287%" y="421" width="0.0829%" height="15" fill="rgb(208,11,19)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.9287%" y="405" width="0.0829%" height="15" fill="rgb(239,90,4)" fg:x="1182" fg:w="1"/><text x="98.1787%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.17%)</title><rect x="97.9287%" y="613" width="0.1657%" height="15" fill="rgb(248,110,3)" fg:x="1182" fg:w="2"/><text x="98.1787%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.17%)</title><rect x="97.9287%" y="597" width="0.1657%" height="15" fill="rgb(210,41,30)" fg:x="1182" fg:w="2"/><text x="98.1787%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.0116%" y="581" width="0.0829%" height="15" fill="rgb(239,36,8)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.0116%" y="565" width="0.0829%" height="15" fill="rgb(237,201,47)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.0116%" y="549" width="0.0829%" height="15" fill="rgb(224,140,29)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0116%" y="533" width="0.0829%" height="15" fill="rgb(231,209,17)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0116%" y="517" width="0.0829%" height="15" fill="rgb(249,196,1)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0116%" y="501" width="0.0829%" height="15" fill="rgb(223,207,51)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0116%" y="485" width="0.0829%" height="15" fill="rgb(210,14,40)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0116%" y="469" width="0.0829%" height="15" fill="rgb(250,20,52)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0116%" y="453" width="0.0829%" height="15" fill="rgb(241,46,11)" fg:x="1183" fg:w="1"/><text x="98.2616%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.0944%" y="485" width="0.0829%" height="15" fill="rgb(219,105,5)" fg:x="1184" fg:w="1"/><text x="98.3444%" y="495.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.17%)</title><rect x="98.0944%" y="597" width="0.1657%" height="15" fill="rgb(252,77,35)" fg:x="1184" fg:w="2"/><text x="98.3444%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="98.0944%" y="581" width="0.1657%" height="15" fill="rgb(243,119,2)" fg:x="1184" fg:w="2"/><text x="98.3444%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="98.0944%" y="565" width="0.1657%" height="15" fill="rgb(206,82,28)" fg:x="1184" fg:w="2"/><text x="98.3444%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="98.0944%" y="549" width="0.1657%" height="15" fill="rgb(227,120,12)" fg:x="1184" fg:w="2"/><text x="98.3444%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="98.0944%" y="533" width="0.1657%" height="15" fill="rgb(229,134,41)" fg:x="1184" fg:w="2"/><text x="98.3444%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="98.0944%" y="517" width="0.1657%" height="15" fill="rgb(239,96,32)" fg:x="1184" fg:w="2"/><text x="98.3444%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="98.0944%" y="501" width="0.1657%" height="15" fill="rgb(225,46,27)" fg:x="1184" fg:w="2"/><text x="98.3444%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.1773%" y="485" width="0.0829%" height="15" fill="rgb(215,168,2)" fg:x="1185" fg:w="1"/><text x="98.4273%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1773%" y="469" width="0.0829%" height="15" fill="rgb(207,170,52)" fg:x="1185" fg:w="1"/><text x="98.4273%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.1773%" y="453" width="0.0829%" height="15" fill="rgb(237,198,36)" fg:x="1185" fg:w="1"/><text x="98.4273%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1773%" y="437" width="0.0829%" height="15" fill="rgb(213,27,14)" fg:x="1185" fg:w="1"/><text x="98.4273%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.25%)</title><rect x="98.0944%" y="613" width="0.2486%" height="15" fill="rgb(218,77,5)" fg:x="1184" fg:w="3"/><text x="98.3444%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.2601%" y="597" width="0.0829%" height="15" fill="rgb(230,219,39)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2601%" y="581" width="0.0829%" height="15" fill="rgb(245,177,7)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.2601%" y="565" width="0.0829%" height="15" fill="rgb(246,44,46)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2601%" y="549" width="0.0829%" height="15" fill="rgb(207,173,15)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.2601%" y="533" width="0.0829%" height="15" fill="rgb(245,170,50)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2601%" y="517" width="0.0829%" height="15" fill="rgb(233,156,21)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2601%" y="501" width="0.0829%" height="15" fill="rgb(253,146,27)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.2601%" y="485" width="0.0829%" height="15" fill="rgb(247,66,29)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2601%" y="469" width="0.0829%" height="15" fill="rgb(218,207,26)" fg:x="1186" fg:w="1"/><text x="98.5101%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.50%)</title><rect x="97.9287%" y="645" width="0.4971%" height="15" fill="rgb(234,93,26)" fg:x="1182" fg:w="6"/><text x="98.1787%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.50%)</title><rect x="97.9287%" y="629" width="0.4971%" height="15" fill="rgb(214,75,48)" fg:x="1182" fg:w="6"/><text x="98.1787%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.3430%" y="613" width="0.0829%" height="15" fill="rgb(229,119,22)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.3430%" y="597" width="0.0829%" height="15" fill="rgb(226,153,19)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3430%" y="581" width="0.0829%" height="15" fill="rgb(220,204,36)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3430%" y="565" width="0.0829%" height="15" fill="rgb(253,181,43)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3430%" y="549" width="0.0829%" height="15" fill="rgb(211,41,51)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3430%" y="533" width="0.0829%" height="15" fill="rgb(207,215,0)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3430%" y="517" width="0.0829%" height="15" fill="rgb(212,153,10)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.3430%" y="501" width="0.0829%" height="15" fill="rgb(251,171,36)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3430%" y="485" width="0.0829%" height="15" fill="rgb(225,219,41)" fg:x="1187" fg:w="1"/><text x="98.5930%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.5915%" y="565" width="0.0829%" height="15" fill="rgb(208,200,1)" fg:x="1190" fg:w="1"/><text x="98.8415%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.25%)</title><rect x="98.5915%" y="597" width="0.2486%" height="15" fill="rgb(206,75,47)" fg:x="1190" fg:w="3"/><text x="98.8415%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="98.5915%" y="581" width="0.2486%" height="15" fill="rgb(248,3,16)" fg:x="1190" fg:w="3"/><text x="98.8415%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.17%)</title><rect x="98.6744%" y="565" width="0.1657%" height="15" fill="rgb(242,157,36)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.17%)</title><rect x="98.6744%" y="549" width="0.1657%" height="15" fill="rgb(215,175,11)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.17%)</title><rect x="98.6744%" y="533" width="0.1657%" height="15" fill="rgb(252,222,22)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="98.6744%" y="517" width="0.1657%" height="15" fill="rgb(250,121,35)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="98.6744%" y="501" width="0.1657%" height="15" fill="rgb(233,120,49)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="98.6744%" y="485" width="0.1657%" height="15" fill="rgb(205,201,14)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="98.6744%" y="469" width="0.1657%" height="15" fill="rgb(219,58,45)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.17%)</title><rect x="98.6744%" y="453" width="0.1657%" height="15" fill="rgb(251,65,12)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="98.6744%" y="437" width="0.1657%" height="15" fill="rgb(224,47,31)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="98.6744%" y="421" width="0.1657%" height="15" fill="rgb(233,74,26)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="98.6744%" y="405" width="0.1657%" height="15" fill="rgb(231,211,31)" fg:x="1191" fg:w="2"/><text x="98.9244%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7572%" y="389" width="0.0829%" height="15" fill="rgb(239,167,5)" fg:x="1192" fg:w="1"/><text x="99.0072%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8401%" y="533" width="0.0829%" height="15" fill="rgb(241,85,0)" fg:x="1193" fg:w="1"/><text x="99.0901%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9229%" y="533" width="0.0829%" height="15" fill="rgb(229,130,21)" fg:x="1194" fg:w="1"/><text x="99.1729%" y="543.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.33%)</title><rect x="98.8401%" y="581" width="0.3314%" height="15" fill="rgb(254,84,49)" fg:x="1193" fg:w="4"/><text x="99.0901%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="98.8401%" y="565" width="0.3314%" height="15" fill="rgb(235,85,21)" fg:x="1193" fg:w="4"/><text x="99.0901%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="98.8401%" y="549" width="0.3314%" height="15" fill="rgb(246,128,52)" fg:x="1193" fg:w="4"/><text x="99.0901%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="99.0058%" y="533" width="0.1657%" height="15" fill="rgb(243,114,49)" fg:x="1195" fg:w="2"/><text x="99.2558%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="99.0058%" y="517" width="0.1657%" height="15" fill="rgb(240,224,22)" fg:x="1195" fg:w="2"/><text x="99.2558%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.17%)</title><rect x="99.0058%" y="501" width="0.1657%" height="15" fill="rgb(247,201,52)" fg:x="1195" fg:w="2"/><text x="99.2558%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="99.0058%" y="485" width="0.1657%" height="15" fill="rgb(231,70,45)" fg:x="1195" fg:w="2"/><text x="99.2558%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0886%" y="469" width="0.0829%" height="15" fill="rgb(217,215,20)" fg:x="1196" fg:w="1"/><text x="99.3386%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1715%" y="517" width="0.0829%" height="15" fill="rgb(226,170,30)" fg:x="1197" fg:w="1"/><text x="99.4215%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2543%" y="517" width="0.0829%" height="15" fill="rgb(220,190,43)" fg:x="1198" fg:w="1"/><text x="99.5043%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.3372%" y="469" width="0.0829%" height="15" fill="rgb(218,20,18)" fg:x="1199" fg:w="1"/><text x="99.5872%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3372%" y="453" width="0.0829%" height="15" fill="rgb(245,37,26)" fg:x="1199" fg:w="1"/><text x="99.5872%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3372%" y="437" width="0.0829%" height="15" fill="rgb(241,127,29)" fg:x="1199" fg:w="1"/><text x="99.5872%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.3372%" y="421" width="0.0829%" height="15" fill="rgb(241,33,26)" fg:x="1199" fg:w="1"/><text x="99.5872%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3372%" y="405" width="0.0829%" height="15" fill="rgb(220,106,21)" fg:x="1199" fg:w="1"/><text x="99.5872%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3372%" y="389" width="0.0829%" height="15" fill="rgb(225,125,35)" fg:x="1199" fg:w="1"/><text x="99.5872%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.66%)</title><rect x="98.8401%" y="597" width="0.6628%" height="15" fill="rgb(248,80,22)" fg:x="1193" fg:w="8"/><text x="99.0901%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="99.1715%" y="581" width="0.3314%" height="15" fill="rgb(231,117,39)" fg:x="1197" fg:w="4"/><text x="99.4215%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="99.1715%" y="565" width="0.3314%" height="15" fill="rgb(239,183,16)" fg:x="1197" fg:w="4"/><text x="99.4215%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="99.1715%" y="549" width="0.3314%" height="15" fill="rgb(221,61,19)" fg:x="1197" fg:w="4"/><text x="99.4215%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="99.1715%" y="533" width="0.3314%" height="15" fill="rgb(239,196,44)" fg:x="1197" fg:w="4"/><text x="99.4215%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.17%)</title><rect x="99.3372%" y="517" width="0.1657%" height="15" fill="rgb(206,113,19)" fg:x="1199" fg:w="2"/><text x="99.5872%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="99.3372%" y="501" width="0.1657%" height="15" fill="rgb(245,114,12)" fg:x="1199" fg:w="2"/><text x="99.5872%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="99.3372%" y="485" width="0.1657%" height="15" fill="rgb(247,89,39)" fg:x="1199" fg:w="2"/><text x="99.5872%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4200%" y="469" width="0.0829%" height="15" fill="rgb(213,85,14)" fg:x="1200" fg:w="1"/><text x="99.6700%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.6686%" y="389" width="0.0829%" height="15" fill="rgb(249,206,33)" fg:x="1203" fg:w="1"/><text x="99.9186%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (17 samples, 1.41%)</title><rect x="98.4258%" y="645" width="1.4085%" height="15" fill="rgb(235,167,47)" fg:x="1188" fg:w="17"/><text x="98.6758%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.41%)</title><rect x="98.4258%" y="629" width="1.4085%" height="15" fill="rgb(217,177,16)" fg:x="1188" fg:w="17"/><text x="98.6758%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.33%)</title><rect x="98.5087%" y="613" width="1.3256%" height="15" fill="rgb(250,228,29)" fg:x="1189" fg:w="16"/><text x="98.7587%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="99.5029%" y="597" width="0.3314%" height="15" fill="rgb(216,195,42)" fg:x="1201" fg:w="4"/><text x="99.7529%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="99.5029%" y="581" width="0.3314%" height="15" fill="rgb(232,192,32)" fg:x="1201" fg:w="4"/><text x="99.7529%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="99.5029%" y="565" width="0.3314%" height="15" fill="rgb(211,8,47)" fg:x="1201" fg:w="4"/><text x="99.7529%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="99.5029%" y="549" width="0.3314%" height="15" fill="rgb(251,201,9)" fg:x="1201" fg:w="4"/><text x="99.7529%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="99.5029%" y="533" width="0.3314%" height="15" fill="rgb(206,185,47)" fg:x="1201" fg:w="4"/><text x="99.7529%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="99.5029%" y="517" width="0.3314%" height="15" fill="rgb(245,54,32)" fg:x="1201" fg:w="4"/><text x="99.7529%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="99.5857%" y="501" width="0.2486%" height="15" fill="rgb(208,1,8)" fg:x="1202" fg:w="3"/><text x="99.8357%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="99.5857%" y="485" width="0.2486%" height="15" fill="rgb(228,57,24)" fg:x="1202" fg:w="3"/><text x="99.8357%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="99.5857%" y="469" width="0.2486%" height="15" fill="rgb(251,24,8)" fg:x="1202" fg:w="3"/><text x="99.8357%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="99.5857%" y="453" width="0.2486%" height="15" fill="rgb(236,196,50)" fg:x="1202" fg:w="3"/><text x="99.8357%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="99.5857%" y="437" width="0.2486%" height="15" fill="rgb(246,222,29)" fg:x="1202" fg:w="3"/><text x="99.8357%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="99.6686%" y="421" width="0.1657%" height="15" fill="rgb(211,34,40)" fg:x="1203" fg:w="2"/><text x="99.9186%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.17%)</title><rect x="99.6686%" y="405" width="0.1657%" height="15" fill="rgb(210,66,51)" fg:x="1203" fg:w="2"/><text x="99.9186%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.7514%" y="389" width="0.0829%" height="15" fill="rgb(250,56,43)" fg:x="1204" fg:w="1"/><text x="100.0014%" y="399.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8343%" y="645" width="0.0829%" height="15" fill="rgb(240,111,50)" fg:x="1205" fg:w="1"/><text x="100.0843%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.8343%" y="629" width="0.0829%" height="15" fill="rgb(209,117,13)" fg:x="1205" fg:w="1"/><text x="100.0843%" y="639.50"></text></g><g><title>all (1,207 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(232,164,45)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="1023.50"></text></g><g><title>simple-484c7248 (1,207 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(205,69,32)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="1007.50">simple-484c7248</text></g><g><title>_start (1,207 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(240,147,45)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="991.50">_start</text></g><g><title>__libc_start_main (1,207 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(221,94,48)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="975.50">__libc_start_main</text></g><g><title>main (1,207 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(249,209,17)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start_internal (1,207 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(228,57,28)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,207 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(250,133,26)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,207 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(254,15,16)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,207 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(209,147,42)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,207 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(208,5,29)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,207 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(250,73,31)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,207 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(238,45,10)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,207 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(214,104,5)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,207 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(242,217,19)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,207 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(246,113,27)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,207 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(221,34,27)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,207 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(246,109,6)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="767.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,207 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(217,12,25)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="751.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,207 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(250,195,5)" fg:x="0" fg:w="1207"/><text x="0.2500%" y="735.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (268 samples, 22.20%)</title><rect x="77.7962%" y="709" width="22.2038%" height="15" fill="rgb(244,140,45)" fg:x="939" fg:w="268"/><text x="78.0462%" y="719.50">&lt;criterion::routine::Function&lt;M,F,T..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (268 samples, 22.20%)</title><rect x="77.7962%" y="693" width="22.2038%" height="15" fill="rgb(230,64,14)" fg:x="939" fg:w="268"/><text x="78.0462%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (268 samples, 22.20%)</title><rect x="77.7962%" y="677" width="22.2038%" height="15" fill="rgb(206,27,27)" fg:x="939" fg:w="268"/><text x="78.0462%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (38 samples, 3.15%)</title><rect x="96.8517%" y="661" width="3.1483%" height="15" fill="rgb(230,14,50)" fg:x="1169" fg:w="38"/><text x="97.1017%" y="671.50">eng..</text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="99.9171%" y="645" width="0.0829%" height="15" fill="rgb(237,172,14)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9171%" y="629" width="0.0829%" height="15" fill="rgb(209,25,21)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9171%" y="613" width="0.0829%" height="15" fill="rgb(248,148,22)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.9171%" y="597" width="0.0829%" height="15" fill="rgb(234,100,22)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.9171%" y="581" width="0.0829%" height="15" fill="rgb(210,20,30)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.9171%" y="565" width="0.0829%" height="15" fill="rgb(232,58,0)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.9171%" y="549" width="0.0829%" height="15" fill="rgb(221,68,13)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.9171%" y="533" width="0.0829%" height="15" fill="rgb(231,194,11)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.9171%" y="517" width="0.0829%" height="15" fill="rgb(235,51,41)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.9171%" y="501" width="0.0829%" height="15" fill="rgb(240,50,32)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.9171%" y="485" width="0.0829%" height="15" fill="rgb(240,185,36)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.9171%" y="469" width="0.0829%" height="15" fill="rgb(211,168,15)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9171%" y="453" width="0.0829%" height="15" fill="rgb(221,70,0)" fg:x="1206" fg:w="1"/><text x="100.1671%" y="463.50"></text></g></svg></svg>