<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="1238"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.1616%" y="485" width="0.1616%" height="15" fill="rgb(235,28,43)" fg:x="2" fg:w="2"/><text x="0.4116%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2423%" y="469" width="0.0808%" height="15" fill="rgb(240,210,28)" fg:x="3" fg:w="1"/><text x="0.4923%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.1616%" y="501" width="0.2423%" height="15" fill="rgb(253,6,46)" fg:x="2" fg:w="3"/><text x="0.4116%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3231%" y="485" width="0.0808%" height="15" fill="rgb(250,159,47)" fg:x="4" fg:w="1"/><text x="0.5731%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4039%" y="469" width="0.0808%" height="15" fill="rgb(216,139,2)" fg:x="5" fg:w="1"/><text x="0.6539%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.5654%" y="421" width="0.2423%" height="15" fill="rgb(221,124,44)" fg:x="7" fg:w="3"/><text x="0.8154%" y="431.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.8885%" y="405" width="0.3231%" height="15" fill="rgb(205,37,22)" fg:x="11" fg:w="4"/><text x="1.1385%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.2116%" y="405" width="0.0808%" height="15" fill="rgb(250,55,8)" fg:x="15" fg:w="1"/><text x="1.4616%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2924%" y="389" width="0.0808%" height="15" fill="rgb(215,83,48)" fg:x="16" fg:w="1"/><text x="1.5424%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3732%" y="357" width="0.1616%" height="15" fill="rgb(253,2,32)" fg:x="17" fg:w="2"/><text x="1.6232%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5347%" y="357" width="0.0808%" height="15" fill="rgb(236,67,28)" fg:x="19" fg:w="1"/><text x="1.7847%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5347%" y="341" width="0.0808%" height="15" fill="rgb(252,55,15)" fg:x="19" fg:w="1"/><text x="1.7847%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="1.3732%" y="373" width="0.4039%" height="15" fill="rgb(243,173,17)" fg:x="17" fg:w="5"/><text x="1.6232%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.6155%" y="357" width="0.1616%" height="15" fill="rgb(215,212,13)" fg:x="20" fg:w="2"/><text x="1.8655%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.6963%" y="341" width="0.0808%" height="15" fill="rgb(253,176,6)" fg:x="21" fg:w="1"/><text x="1.9463%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7771%" y="373" width="0.0808%" height="15" fill="rgb(236,105,26)" fg:x="22" fg:w="1"/><text x="2.0271%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8578%" y="373" width="0.0808%" height="15" fill="rgb(239,226,32)" fg:x="23" fg:w="1"/><text x="2.1078%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8578%" y="357" width="0.0808%" height="15" fill="rgb(236,104,51)" fg:x="23" fg:w="1"/><text x="2.1078%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.0194%" y="357" width="0.1616%" height="15" fill="rgb(220,172,33)" fg:x="25" fg:w="2"/><text x="2.2694%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.1809%" y="357" width="0.0808%" height="15" fill="rgb(224,182,25)" fg:x="27" fg:w="1"/><text x="2.4309%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.86%)</title><rect x="0.4847%" y="437" width="1.8578%" height="15" fill="rgb(236,184,24)" fg:x="6" fg:w="23"/><text x="0.7347%" y="447.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.53%)</title><rect x="0.8078%" y="421" width="1.5347%" height="15" fill="rgb(241,221,14)" fg:x="10" fg:w="19"/><text x="1.0578%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="1.2924%" y="405" width="1.0501%" height="15" fill="rgb(227,146,5)" fg:x="16" fg:w="13"/><text x="1.5424%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="1.3732%" y="389" width="0.9693%" height="15" fill="rgb(214,15,23)" fg:x="17" fg:w="12"/><text x="1.6232%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.9386%" y="373" width="0.4039%" height="15" fill="rgb(233,157,31)" fg:x="24" fg:w="5"/><text x="2.1886%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.2617%" y="357" width="0.0808%" height="15" fill="rgb(211,27,52)" fg:x="28" fg:w="1"/><text x="2.5117%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3425%" y="405" width="0.0808%" height="15" fill="rgb(212,223,15)" fg:x="29" fg:w="1"/><text x="2.5925%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.4233%" y="405" width="0.0808%" height="15" fill="rgb(254,211,0)" fg:x="30" fg:w="1"/><text x="2.6733%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.7464%" y="373" width="0.1616%" height="15" fill="rgb(205,43,38)" fg:x="34" fg:w="2"/><text x="2.9964%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.9079%" y="373" width="0.0808%" height="15" fill="rgb(242,206,46)" fg:x="36" fg:w="1"/><text x="3.1579%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="2.6656%" y="389" width="0.4039%" height="15" fill="rgb(220,221,12)" fg:x="33" fg:w="5"/><text x="2.9156%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.9887%" y="373" width="0.0808%" height="15" fill="rgb(217,156,35)" fg:x="37" fg:w="1"/><text x="3.2387%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.9887%" y="357" width="0.0808%" height="15" fill="rgb(207,181,49)" fg:x="37" fg:w="1"/><text x="3.2387%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9887%" y="341" width="0.0808%" height="15" fill="rgb(235,103,47)" fg:x="37" fg:w="1"/><text x="3.2387%" y="351.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="3.0695%" y="389" width="0.2423%" height="15" fill="rgb(222,63,28)" fg:x="38" fg:w="3"/><text x="3.3195%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.3118%" y="389" width="0.0808%" height="15" fill="rgb(244,137,21)" fg:x="41" fg:w="1"/><text x="3.5618%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3118%" y="373" width="0.0808%" height="15" fill="rgb(228,35,27)" fg:x="41" fg:w="1"/><text x="3.5618%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="2.3425%" y="421" width="1.2924%" height="15" fill="rgb(226,191,41)" fg:x="29" fg:w="16"/><text x="2.5925%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="2.5040%" y="405" width="1.1309%" height="15" fill="rgb(210,154,3)" fg:x="31" fg:w="14"/><text x="2.7540%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="3.3926%" y="389" width="0.2423%" height="15" fill="rgb(216,60,49)" fg:x="42" fg:w="3"/><text x="3.6426%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="3.3926%" y="373" width="0.2423%" height="15" fill="rgb(226,17,20)" fg:x="42" fg:w="3"/><text x="3.6426%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5541%" y="357" width="0.0808%" height="15" fill="rgb(206,115,35)" fg:x="44" fg:w="1"/><text x="3.8041%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.37%)</title><rect x="2.3425%" y="437" width="1.3732%" height="15" fill="rgb(227,88,1)" fg:x="29" fg:w="17"/><text x="2.5925%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6349%" y="421" width="0.0808%" height="15" fill="rgb(230,222,24)" fg:x="45" fg:w="1"/><text x="3.8849%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 3.39%)</title><rect x="0.4847%" y="453" width="3.3926%" height="15" fill="rgb(214,124,32)" fg:x="6" fg:w="42"/><text x="0.7347%" y="463.50">&lt;al..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.7157%" y="437" width="0.1616%" height="15" fill="rgb(240,41,36)" fg:x="46" fg:w="2"/><text x="3.9657%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 3.55%)</title><rect x="0.4039%" y="485" width="3.5541%" height="15" fill="rgb(221,17,52)" fg:x="5" fg:w="44"/><text x="0.6539%" y="495.50">&lt;has..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (43 samples, 3.47%)</title><rect x="0.4847%" y="469" width="3.4733%" height="15" fill="rgb(252,70,16)" fg:x="6" fg:w="43"/><text x="0.7347%" y="479.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8772%" y="453" width="0.0808%" height="15" fill="rgb(250,177,4)" fg:x="48" fg:w="1"/><text x="4.1272%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 4.04%)</title><rect x="0.0000%" y="517" width="4.0388%" height="15" fill="rgb(240,188,47)" fg:x="0" fg:w="50"/><text x="0.2500%" y="527.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (45 samples, 3.63%)</title><rect x="0.4039%" y="501" width="3.6349%" height="15" fill="rgb(215,92,12)" fg:x="5" fg:w="45"/><text x="0.6539%" y="511.50">core..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9580%" y="485" width="0.0808%" height="15" fill="rgb(242,110,29)" fg:x="49" fg:w="1"/><text x="4.2080%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="4.2003%" y="261" width="0.0808%" height="15" fill="rgb(208,211,26)" fg:x="52" fg:w="1"/><text x="4.4503%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="4.2003%" y="245" width="0.0808%" height="15" fill="rgb(244,147,6)" fg:x="52" fg:w="1"/><text x="4.4503%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.2003%" y="229" width="0.0808%" height="15" fill="rgb(211,130,42)" fg:x="52" fg:w="1"/><text x="4.4503%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="4.2003%" y="213" width="0.0808%" height="15" fill="rgb(220,63,1)" fg:x="52" fg:w="1"/><text x="4.4503%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.2003%" y="197" width="0.0808%" height="15" fill="rgb(241,212,30)" fg:x="52" fg:w="1"/><text x="4.4503%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="4.2003%" y="181" width="0.0808%" height="15" fill="rgb(233,153,17)" fg:x="52" fg:w="1"/><text x="4.4503%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="4.2003%" y="165" width="0.0808%" height="15" fill="rgb(236,3,10)" fg:x="52" fg:w="1"/><text x="4.4503%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="4.2003%" y="149" width="0.0808%" height="15" fill="rgb(232,41,21)" fg:x="52" fg:w="1"/><text x="4.4503%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.2003%" y="133" width="0.0808%" height="15" fill="rgb(206,63,51)" fg:x="52" fg:w="1"/><text x="4.4503%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="4.2003%" y="421" width="0.1616%" height="15" fill="rgb(250,214,3)" fg:x="52" fg:w="2"/><text x="4.4503%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="4.2003%" y="405" width="0.1616%" height="15" fill="rgb(254,89,27)" fg:x="52" fg:w="2"/><text x="4.4503%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="4.2003%" y="389" width="0.1616%" height="15" fill="rgb(249,41,14)" fg:x="52" fg:w="2"/><text x="4.4503%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="4.2003%" y="373" width="0.1616%" height="15" fill="rgb(221,196,51)" fg:x="52" fg:w="2"/><text x="4.4503%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.2003%" y="357" width="0.1616%" height="15" fill="rgb(214,116,26)" fg:x="52" fg:w="2"/><text x="4.4503%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.2003%" y="341" width="0.1616%" height="15" fill="rgb(236,67,7)" fg:x="52" fg:w="2"/><text x="4.4503%" y="351.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="4.2003%" y="325" width="0.1616%" height="15" fill="rgb(253,179,32)" fg:x="52" fg:w="2"/><text x="4.4503%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="4.2003%" y="309" width="0.1616%" height="15" fill="rgb(218,33,15)" fg:x="52" fg:w="2"/><text x="4.4503%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="4.2003%" y="293" width="0.1616%" height="15" fill="rgb(217,202,41)" fg:x="52" fg:w="2"/><text x="4.4503%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="4.2003%" y="277" width="0.1616%" height="15" fill="rgb(234,133,5)" fg:x="52" fg:w="2"/><text x="4.4503%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.2811%" y="261" width="0.0808%" height="15" fill="rgb(240,47,40)" fg:x="53" fg:w="1"/><text x="4.5311%" y="271.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="4.3619%" y="421" width="0.0808%" height="15" fill="rgb(234,166,26)" fg:x="54" fg:w="1"/><text x="4.6119%" y="431.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="4.4426%" y="421" width="0.0808%" height="15" fill="rgb(244,125,51)" fg:x="55" fg:w="1"/><text x="4.6926%" y="431.50"></text></g><g><title>_IO_default_xsputn (2 samples, 0.16%)</title><rect x="4.7658%" y="373" width="0.1616%" height="15" fill="rgb(229,171,11)" fg:x="59" fg:w="2"/><text x="5.0158%" y="383.50"></text></g><g><title>dlerror (6 samples, 0.48%)</title><rect x="4.5234%" y="405" width="0.4847%" height="15" fill="rgb(224,38,45)" fg:x="56" fg:w="6"/><text x="4.7734%" y="415.50"></text></g><g><title>__asprintf (5 samples, 0.40%)</title><rect x="4.6042%" y="389" width="0.4039%" height="15" fill="rgb(237,27,7)" fg:x="57" fg:w="5"/><text x="4.8542%" y="399.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="4.9273%" y="373" width="0.0808%" height="15" fill="rgb(216,52,7)" fg:x="61" fg:w="1"/><text x="5.1773%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.9774%" y="325" width="0.0808%" height="15" fill="rgb(243,11,11)" fg:x="74" fg:w="1"/><text x="6.2274%" y="335.50"></text></g><g><title>dlopen (14 samples, 1.13%)</title><rect x="5.0081%" y="405" width="1.1309%" height="15" fill="rgb(253,167,20)" fg:x="62" fg:w="14"/><text x="5.2581%" y="415.50"></text></g><g><title>_dl_catch_error (12 samples, 0.97%)</title><rect x="5.1696%" y="389" width="0.9693%" height="15" fill="rgb(215,207,5)" fg:x="64" fg:w="12"/><text x="5.4196%" y="399.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="5.1696%" y="373" width="0.9693%" height="15" fill="rgb(252,127,31)" fg:x="64" fg:w="12"/><text x="5.4196%" y="383.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="5.1696%" y="357" width="0.9693%" height="15" fill="rgb(209,106,27)" fg:x="64" fg:w="12"/><text x="5.4196%" y="367.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="5.1696%" y="341" width="0.9693%" height="15" fill="rgb(214,220,18)" fg:x="64" fg:w="12"/><text x="5.4196%" y="351.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="6.0582%" y="325" width="0.0808%" height="15" fill="rgb(237,89,12)" fg:x="75" fg:w="1"/><text x="6.3082%" y="335.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (25 samples, 2.02%)</title><rect x="4.2003%" y="437" width="2.0194%" height="15" fill="rgb(209,167,36)" fg:x="52" fg:w="25"/><text x="4.4503%" y="447.50">&lt;..</text></g><g><title>libloading::safe::Library::new (21 samples, 1.70%)</title><rect x="4.5234%" y="421" width="1.6963%" height="15" fill="rgb(243,45,22)" fg:x="56" fg:w="21"/><text x="4.7734%" y="431.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="6.1389%" y="405" width="0.0808%" height="15" fill="rgb(239,2,46)" fg:x="76" fg:w="1"/><text x="6.3889%" y="415.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="6.1389%" y="389" width="0.0808%" height="15" fill="rgb(241,101,0)" fg:x="76" fg:w="1"/><text x="6.3889%" y="399.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="6.1389%" y="373" width="0.0808%" height="15" fill="rgb(244,34,31)" fg:x="76" fg:w="1"/><text x="6.3889%" y="383.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="6.1389%" y="357" width="0.0808%" height="15" fill="rgb(248,23,22)" fg:x="76" fg:w="1"/><text x="6.3889%" y="367.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="6.1389%" y="341" width="0.0808%" height="15" fill="rgb(218,27,48)" fg:x="76" fg:w="1"/><text x="6.3889%" y="351.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2 samples, 0.16%)</title><rect x="6.2197%" y="437" width="0.1616%" height="15" fill="rgb(232,78,1)" fg:x="77" fg:w="2"/><text x="6.4697%" y="447.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="6.3005%" y="421" width="0.0808%" height="15" fill="rgb(233,169,12)" fg:x="78" fg:w="1"/><text x="6.5505%" y="431.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="6.3005%" y="405" width="0.0808%" height="15" fill="rgb(225,222,54)" fg:x="78" fg:w="1"/><text x="6.5505%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="6.3005%" y="389" width="0.0808%" height="15" fill="rgb(245,126,29)" fg:x="78" fg:w="1"/><text x="6.5505%" y="399.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="6.3005%" y="373" width="0.0808%" height="15" fill="rgb(241,63,48)" fg:x="78" fg:w="1"/><text x="6.5505%" y="383.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (29 samples, 2.34%)</title><rect x="4.2003%" y="453" width="2.3425%" height="15" fill="rgb(235,126,38)" fg:x="52" fg:w="29"/><text x="4.4503%" y="463.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="6.3813%" y="437" width="0.1616%" height="15" fill="rgb(232,96,49)" fg:x="79" fg:w="2"/><text x="6.6313%" y="447.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="6.3813%" y="421" width="0.1616%" height="15" fill="rgb(211,146,40)" fg:x="79" fg:w="2"/><text x="6.6313%" y="431.50"></text></g><g><title>engine::session::Session::initialize (33 samples, 2.67%)</title><rect x="4.2003%" y="469" width="2.6656%" height="15" fill="rgb(247,93,44)" fg:x="52" fg:w="33"/><text x="4.4503%" y="479.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="6.5428%" y="453" width="0.3231%" height="15" fill="rgb(251,41,49)" fg:x="81" fg:w="4"/><text x="6.7928%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="6.5428%" y="437" width="0.3231%" height="15" fill="rgb(218,155,12)" fg:x="81" fg:w="4"/><text x="6.7928%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="6.7044%" y="421" width="0.1616%" height="15" fill="rgb(221,161,30)" fg:x="83" fg:w="2"/><text x="6.9544%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.7044%" y="405" width="0.1616%" height="15" fill="rgb(221,179,11)" fg:x="83" fg:w="2"/><text x="6.9544%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="6.7044%" y="389" width="0.1616%" height="15" fill="rgb(224,170,48)" fg:x="83" fg:w="2"/><text x="6.9544%" y="399.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="6.8659%" y="469" width="0.2423%" height="15" fill="rgb(223,117,5)" fg:x="85" fg:w="3"/><text x="7.1159%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="6.8659%" y="453" width="0.2423%" height="15" fill="rgb(209,52,20)" fg:x="85" fg:w="3"/><text x="7.1159%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="6.8659%" y="437" width="0.2423%" height="15" fill="rgb(209,19,41)" fg:x="85" fg:w="3"/><text x="7.1159%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.9467%" y="421" width="0.1616%" height="15" fill="rgb(210,177,12)" fg:x="86" fg:w="2"/><text x="7.1967%" y="431.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (39 samples, 3.15%)</title><rect x="4.0388%" y="517" width="3.1502%" height="15" fill="rgb(211,159,37)" fg:x="50" fg:w="39"/><text x="4.2888%" y="527.50">&lt;en..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (39 samples, 3.15%)</title><rect x="4.0388%" y="501" width="3.1502%" height="15" fill="rgb(209,20,2)" fg:x="50" fg:w="39"/><text x="4.2888%" y="511.50">eng..</text></g><g><title>engine::session::Session::new (38 samples, 3.07%)</title><rect x="4.1195%" y="485" width="3.0695%" height="15" fill="rgb(244,3,46)" fg:x="51" fg:w="38"/><text x="4.3695%" y="495.50">eng..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="7.1082%" y="469" width="0.0808%" height="15" fill="rgb(220,94,38)" fg:x="88" fg:w="1"/><text x="7.3582%" y="479.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="7.1082%" y="453" width="0.0808%" height="15" fill="rgb(253,14,31)" fg:x="88" fg:w="1"/><text x="7.3582%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="7.1890%" y="485" width="0.0808%" height="15" fill="rgb(234,176,13)" fg:x="89" fg:w="1"/><text x="7.4390%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.1890%" y="469" width="0.0808%" height="15" fill="rgb(218,62,25)" fg:x="89" fg:w="1"/><text x="7.4390%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.1890%" y="453" width="0.0808%" height="15" fill="rgb(216,124,40)" fg:x="89" fg:w="1"/><text x="7.4390%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.1890%" y="437" width="0.0808%" height="15" fill="rgb(228,170,12)" fg:x="89" fg:w="1"/><text x="7.4390%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="7.1890%" y="501" width="0.1616%" height="15" fill="rgb(231,226,5)" fg:x="89" fg:w="2"/><text x="7.4390%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2698%" y="485" width="0.0808%" height="15" fill="rgb(237,122,22)" fg:x="90" fg:w="1"/><text x="7.5198%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="7.3506%" y="501" width="0.0808%" height="15" fill="rgb(209,185,25)" fg:x="91" fg:w="1"/><text x="7.6006%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.4313%" y="469" width="0.0808%" height="15" fill="rgb(228,200,32)" fg:x="92" fg:w="1"/><text x="7.6813%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.4313%" y="453" width="0.0808%" height="15" fill="rgb(217,140,10)" fg:x="92" fg:w="1"/><text x="7.6813%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.4313%" y="437" width="0.0808%" height="15" fill="rgb(253,17,24)" fg:x="92" fg:w="1"/><text x="7.6813%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.4313%" y="421" width="0.0808%" height="15" fill="rgb(212,61,6)" fg:x="92" fg:w="1"/><text x="7.6813%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.4313%" y="405" width="0.0808%" height="15" fill="rgb(205,14,25)" fg:x="92" fg:w="1"/><text x="7.6813%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.4313%" y="389" width="0.0808%" height="15" fill="rgb(232,69,41)" fg:x="92" fg:w="1"/><text x="7.6813%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.4313%" y="373" width="0.0808%" height="15" fill="rgb(241,106,47)" fg:x="92" fg:w="1"/><text x="7.6813%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.4313%" y="357" width="0.0808%" height="15" fill="rgb(210,213,53)" fg:x="92" fg:w="1"/><text x="7.6813%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.4313%" y="341" width="0.0808%" height="15" fill="rgb(253,175,27)" fg:x="92" fg:w="1"/><text x="7.6813%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.4313%" y="325" width="0.0808%" height="15" fill="rgb(211,171,24)" fg:x="92" fg:w="1"/><text x="7.6813%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.4313%" y="309" width="0.0808%" height="15" fill="rgb(229,80,7)" fg:x="92" fg:w="1"/><text x="7.6813%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.4313%" y="293" width="0.0808%" height="15" fill="rgb(212,46,39)" fg:x="92" fg:w="1"/><text x="7.6813%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.5121%" y="469" width="0.1616%" height="15" fill="rgb(240,80,45)" fg:x="93" fg:w="2"/><text x="7.7621%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="7.5121%" y="453" width="0.1616%" height="15" fill="rgb(253,177,40)" fg:x="93" fg:w="2"/><text x="7.7621%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="7.4313%" y="485" width="0.3231%" height="15" fill="rgb(249,200,15)" fg:x="92" fg:w="4"/><text x="7.6813%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="7.6737%" y="469" width="0.0808%" height="15" fill="rgb(217,78,26)" fg:x="95" fg:w="1"/><text x="7.9237%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="7.8352%" y="421" width="0.1616%" height="15" fill="rgb(254,151,32)" fg:x="97" fg:w="2"/><text x="8.0852%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="7.8352%" y="453" width="0.2423%" height="15" fill="rgb(226,165,27)" fg:x="97" fg:w="3"/><text x="8.0852%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="7.8352%" y="437" width="0.2423%" height="15" fill="rgb(250,206,4)" fg:x="97" fg:w="3"/><text x="8.0852%" y="447.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="7.9968%" y="421" width="0.0808%" height="15" fill="rgb(231,229,27)" fg:x="99" fg:w="1"/><text x="8.2468%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.9968%" y="405" width="0.0808%" height="15" fill="rgb(239,217,8)" fg:x="99" fg:w="1"/><text x="8.2468%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="8.1583%" y="405" width="0.1616%" height="15" fill="rgb(225,204,27)" fg:x="101" fg:w="2"/><text x="8.4083%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="8.1583%" y="389" width="0.1616%" height="15" fill="rgb(230,56,32)" fg:x="101" fg:w="2"/><text x="8.4083%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="8.1583%" y="373" width="0.1616%" height="15" fill="rgb(222,56,27)" fg:x="101" fg:w="2"/><text x="8.4083%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="8.1583%" y="357" width="0.1616%" height="15" fill="rgb(253,108,27)" fg:x="101" fg:w="2"/><text x="8.4083%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.1583%" y="341" width="0.1616%" height="15" fill="rgb(212,87,36)" fg:x="101" fg:w="2"/><text x="8.4083%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.1583%" y="325" width="0.1616%" height="15" fill="rgb(247,82,36)" fg:x="101" fg:w="2"/><text x="8.4083%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.2391%" y="309" width="0.0808%" height="15" fill="rgb(222,143,9)" fg:x="102" fg:w="1"/><text x="8.4891%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2391%" y="293" width="0.0808%" height="15" fill="rgb(238,162,48)" fg:x="102" fg:w="1"/><text x="8.4891%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="8.8045%" y="325" width="0.4847%" height="15" fill="rgb(221,59,43)" fg:x="109" fg:w="6"/><text x="9.0545%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="9.1276%" y="309" width="0.1616%" height="15" fill="rgb(205,166,41)" fg:x="113" fg:w="2"/><text x="9.3776%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.1276%" y="293" width="0.1616%" height="15" fill="rgb(241,186,40)" fg:x="113" fg:w="2"/><text x="9.3776%" y="303.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.1276%" y="277" width="0.1616%" height="15" fill="rgb(216,119,35)" fg:x="113" fg:w="2"/><text x="9.3776%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (13 samples, 1.05%)</title><rect x="8.3199%" y="373" width="1.0501%" height="15" fill="rgb(208,68,38)" fg:x="103" fg:w="13"/><text x="8.5699%" y="383.50"></text></g><g><title>std::io::Write::write_all (12 samples, 0.97%)</title><rect x="8.4006%" y="357" width="0.9693%" height="15" fill="rgb(217,113,1)" fg:x="104" fg:w="12"/><text x="8.6506%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (9 samples, 0.73%)</title><rect x="8.6430%" y="341" width="0.7270%" height="15" fill="rgb(242,153,3)" fg:x="107" fg:w="9"/><text x="8.8930%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.2892%" y="325" width="0.0808%" height="15" fill="rgb(229,76,35)" fg:x="115" fg:w="1"/><text x="9.5392%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (14 samples, 1.13%)</title><rect x="8.3199%" y="389" width="1.1309%" height="15" fill="rgb(229,125,34)" fg:x="103" fg:w="14"/><text x="8.5699%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.3700%" y="373" width="0.0808%" height="15" fill="rgb(238,179,36)" fg:x="116" fg:w="1"/><text x="9.6200%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.3700%" y="357" width="0.0808%" height="15" fill="rgb(244,183,19)" fg:x="116" fg:w="1"/><text x="9.6200%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.3700%" y="341" width="0.0808%" height="15" fill="rgb(216,85,49)" fg:x="116" fg:w="1"/><text x="9.6200%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.4507%" y="373" width="0.0808%" height="15" fill="rgb(208,161,47)" fg:x="117" fg:w="1"/><text x="9.7007%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.65%)</title><rect x="9.5315%" y="373" width="0.6462%" height="15" fill="rgb(233,210,18)" fg:x="118" fg:w="8"/><text x="9.7815%" y="383.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.57%)</title><rect x="9.6123%" y="357" width="0.5654%" height="15" fill="rgb(205,104,42)" fg:x="119" fg:w="7"/><text x="9.8623%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="9.8546%" y="341" width="0.3231%" height="15" fill="rgb(248,90,43)" fg:x="122" fg:w="4"/><text x="10.1046%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="9.8546%" y="325" width="0.3231%" height="15" fill="rgb(206,198,11)" fg:x="122" fg:w="4"/><text x="10.1046%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="9.9354%" y="309" width="0.2423%" height="15" fill="rgb(239,165,27)" fg:x="123" fg:w="3"/><text x="10.1854%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="9.9354%" y="293" width="0.2423%" height="15" fill="rgb(246,44,32)" fg:x="123" fg:w="3"/><text x="10.1854%" y="303.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="9.9354%" y="277" width="0.2423%" height="15" fill="rgb(252,65,42)" fg:x="123" fg:w="3"/><text x="10.1854%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.1777%" y="325" width="0.0808%" height="15" fill="rgb(246,197,18)" fg:x="126" fg:w="1"/><text x="10.4277%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.2585%" y="325" width="0.0808%" height="15" fill="rgb(216,192,4)" fg:x="127" fg:w="1"/><text x="10.5085%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.2585%" y="309" width="0.0808%" height="15" fill="rgb(208,117,10)" fg:x="127" fg:w="1"/><text x="10.5085%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.2585%" y="293" width="0.0808%" height="15" fill="rgb(240,61,47)" fg:x="127" fg:w="1"/><text x="10.5085%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="10.1777%" y="357" width="0.2423%" height="15" fill="rgb(228,178,21)" fg:x="126" fg:w="3"/><text x="10.4277%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="10.1777%" y="341" width="0.2423%" height="15" fill="rgb(219,96,54)" fg:x="126" fg:w="3"/><text x="10.4277%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.3393%" y="325" width="0.0808%" height="15" fill="rgb(250,177,24)" fg:x="128" fg:w="1"/><text x="10.5893%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.3393%" y="309" width="0.0808%" height="15" fill="rgb(242,154,46)" fg:x="128" fg:w="1"/><text x="10.5893%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.3393%" y="293" width="0.0808%" height="15" fill="rgb(226,176,29)" fg:x="128" fg:w="1"/><text x="10.5893%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.3393%" y="277" width="0.0808%" height="15" fill="rgb(226,29,2)" fg:x="128" fg:w="1"/><text x="10.5893%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="10.7431%" y="309" width="0.2423%" height="15" fill="rgb(237,104,14)" fg:x="133" fg:w="3"/><text x="10.9931%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.65%)</title><rect x="10.4200%" y="357" width="0.6462%" height="15" fill="rgb(245,207,31)" fg:x="129" fg:w="8"/><text x="10.6700%" y="367.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="10.5816%" y="341" width="0.4847%" height="15" fill="rgb(229,211,45)" fg:x="131" fg:w="6"/><text x="10.8316%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="10.6624%" y="325" width="0.4039%" height="15" fill="rgb(229,113,15)" fg:x="132" fg:w="5"/><text x="10.9124%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.9855%" y="309" width="0.0808%" height="15" fill="rgb(237,147,15)" fg:x="136" fg:w="1"/><text x="11.2355%" y="319.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="11.1470%" y="341" width="0.0808%" height="15" fill="rgb(244,120,12)" fg:x="138" fg:w="1"/><text x="11.3970%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="11.2278%" y="341" width="0.2423%" height="15" fill="rgb(205,120,12)" fg:x="139" fg:w="3"/><text x="11.4778%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.3893%" y="325" width="0.0808%" height="15" fill="rgb(231,26,45)" fg:x="141" fg:w="1"/><text x="11.6393%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.3893%" y="309" width="0.0808%" height="15" fill="rgb(246,98,1)" fg:x="141" fg:w="1"/><text x="11.6393%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.57%)</title><rect x="11.4701%" y="325" width="0.5654%" height="15" fill="rgb(207,68,45)" fg:x="142" fg:w="7"/><text x="11.7201%" y="335.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="11.5509%" y="309" width="0.4847%" height="15" fill="rgb(231,27,38)" fg:x="143" fg:w="6"/><text x="11.8009%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="11.7124%" y="293" width="0.3231%" height="15" fill="rgb(214,223,3)" fg:x="145" fg:w="4"/><text x="11.9624%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.9548%" y="277" width="0.0808%" height="15" fill="rgb(228,195,46)" fg:x="148" fg:w="1"/><text x="12.2048%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="12.0355%" y="325" width="0.4039%" height="15" fill="rgb(231,100,42)" fg:x="149" fg:w="5"/><text x="12.2855%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="12.1971%" y="309" width="0.2423%" height="15" fill="rgb(236,53,4)" fg:x="151" fg:w="3"/><text x="12.4471%" y="319.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="12.1971%" y="293" width="0.2423%" height="15" fill="rgb(230,152,12)" fg:x="151" fg:w="3"/><text x="12.4471%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.3586%" y="277" width="0.0808%" height="15" fill="rgb(226,101,19)" fg:x="153" fg:w="1"/><text x="12.6086%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="11.4701%" y="341" width="1.1309%" height="15" fill="rgb(250,149,32)" fg:x="142" fg:w="14"/><text x="11.7201%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.4394%" y="325" width="0.1616%" height="15" fill="rgb(232,178,12)" fg:x="154" fg:w="2"/><text x="12.6894%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.5202%" y="309" width="0.0808%" height="15" fill="rgb(246,151,17)" fg:x="155" fg:w="1"/><text x="12.7702%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.5202%" y="293" width="0.0808%" height="15" fill="rgb(252,17,51)" fg:x="155" fg:w="1"/><text x="12.7702%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.62%)</title><rect x="11.0662%" y="357" width="1.6155%" height="15" fill="rgb(250,207,23)" fg:x="137" fg:w="20"/><text x="11.3162%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.6010%" y="341" width="0.0808%" height="15" fill="rgb(205,27,5)" fg:x="156" fg:w="1"/><text x="12.8510%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.67%)</title><rect x="10.1777%" y="373" width="2.6656%" height="15" fill="rgb(224,32,19)" fg:x="126" fg:w="33"/><text x="10.4277%" y="383.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.6817%" y="357" width="0.1616%" height="15" fill="rgb(247,214,40)" fg:x="157" fg:w="2"/><text x="12.9317%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="12.6817%" y="341" width="0.1616%" height="15" fill="rgb(239,199,17)" fg:x="157" fg:w="2"/><text x="12.9317%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.6817%" y="325" width="0.1616%" height="15" fill="rgb(251,159,9)" fg:x="157" fg:w="2"/><text x="12.9317%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (44 samples, 3.55%)</title><rect x="9.4507%" y="389" width="3.5541%" height="15" fill="rgb(225,78,32)" fg:x="117" fg:w="44"/><text x="9.7007%" y="399.50">serd..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.8433%" y="373" width="0.1616%" height="15" fill="rgb(206,97,47)" fg:x="159" fg:w="2"/><text x="13.0933%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="12.8433%" y="357" width="0.1616%" height="15" fill="rgb(227,107,4)" fg:x="159" fg:w="2"/><text x="13.0933%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.8433%" y="341" width="0.1616%" height="15" fill="rgb(241,146,50)" fg:x="159" fg:w="2"/><text x="13.0933%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.9241%" y="325" width="0.0808%" height="15" fill="rgb(232,92,30)" fg:x="160" fg:w="1"/><text x="13.1741%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.9241%" y="309" width="0.0808%" height="15" fill="rgb(222,0,40)" fg:x="160" fg:w="1"/><text x="13.1741%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.9241%" y="293" width="0.0808%" height="15" fill="rgb(219,54,33)" fg:x="160" fg:w="1"/><text x="13.1741%" y="303.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (59 samples, 4.77%)</title><rect x="8.3199%" y="405" width="4.7658%" height="15" fill="rgb(226,209,28)" fg:x="103" fg:w="59"/><text x="8.5699%" y="415.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.0048%" y="389" width="0.0808%" height="15" fill="rgb(254,205,35)" fg:x="161" fg:w="1"/><text x="13.2548%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.0048%" y="373" width="0.0808%" height="15" fill="rgb(230,159,3)" fg:x="161" fg:w="1"/><text x="13.2548%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.0048%" y="357" width="0.0808%" height="15" fill="rgb(232,190,24)" fg:x="161" fg:w="1"/><text x="13.2548%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1664%" y="357" width="0.0808%" height="15" fill="rgb(217,227,44)" fg:x="163" fg:w="1"/><text x="13.4164%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="13.4087%" y="325" width="0.1616%" height="15" fill="rgb(236,211,1)" fg:x="166" fg:w="2"/><text x="13.6587%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="13.5703%" y="325" width="0.0808%" height="15" fill="rgb(250,127,46)" fg:x="168" fg:w="1"/><text x="13.8203%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.5703%" y="309" width="0.0808%" height="15" fill="rgb(229,213,6)" fg:x="168" fg:w="1"/><text x="13.8203%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5703%" y="293" width="0.0808%" height="15" fill="rgb(237,15,36)" fg:x="168" fg:w="1"/><text x="13.8203%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="13.0856%" y="405" width="0.7270%" height="15" fill="rgb(213,131,41)" fg:x="162" fg:w="9"/><text x="13.3356%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="13.0856%" y="389" width="0.7270%" height="15" fill="rgb(225,82,44)" fg:x="162" fg:w="9"/><text x="13.3356%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="13.1664%" y="373" width="0.6462%" height="15" fill="rgb(249,42,11)" fg:x="163" fg:w="8"/><text x="13.4164%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="13.2472%" y="357" width="0.5654%" height="15" fill="rgb(253,11,29)" fg:x="164" fg:w="7"/><text x="13.4972%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="13.3279%" y="341" width="0.4847%" height="15" fill="rgb(206,8,54)" fg:x="165" fg:w="6"/><text x="13.5779%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.6511%" y="325" width="0.1616%" height="15" fill="rgb(222,186,2)" fg:x="169" fg:w="2"/><text x="13.9011%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="13.9742%" y="357" width="0.4039%" height="15" fill="rgb(221,206,53)" fg:x="173" fg:w="5"/><text x="14.2242%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.2165%" y="341" width="0.1616%" height="15" fill="rgb(230,150,21)" fg:x="176" fg:w="2"/><text x="14.4665%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="14.2973%" y="325" width="0.0808%" height="15" fill="rgb(253,202,10)" fg:x="177" fg:w="1"/><text x="14.5473%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3780%" y="357" width="0.0808%" height="15" fill="rgb(238,109,40)" fg:x="178" fg:w="1"/><text x="14.6280%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4588%" y="325" width="0.0808%" height="15" fill="rgb(247,120,22)" fg:x="179" fg:w="1"/><text x="14.7088%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="14.4588%" y="357" width="0.1616%" height="15" fill="rgb(207,43,30)" fg:x="179" fg:w="2"/><text x="14.7088%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.4588%" y="341" width="0.1616%" height="15" fill="rgb(213,211,24)" fg:x="179" fg:w="2"/><text x="14.7088%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.5396%" y="325" width="0.0808%" height="15" fill="rgb(239,73,39)" fg:x="180" fg:w="1"/><text x="14.7896%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.5396%" y="309" width="0.0808%" height="15" fill="rgb(245,182,19)" fg:x="180" fg:w="1"/><text x="14.7896%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="14.6204%" y="341" width="0.1616%" height="15" fill="rgb(247,143,26)" fg:x="181" fg:w="2"/><text x="14.8704%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7819%" y="325" width="0.0808%" height="15" fill="rgb(228,191,23)" fg:x="183" fg:w="1"/><text x="15.0319%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="14.6204%" y="357" width="0.3231%" height="15" fill="rgb(253,165,31)" fg:x="181" fg:w="4"/><text x="14.8704%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.7819%" y="341" width="0.1616%" height="15" fill="rgb(234,138,20)" fg:x="183" fg:w="2"/><text x="15.0319%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="14.8627%" y="325" width="0.0808%" height="15" fill="rgb(218,191,29)" fg:x="184" fg:w="1"/><text x="15.1127%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.8627%" y="309" width="0.0808%" height="15" fill="rgb(221,157,19)" fg:x="184" fg:w="1"/><text x="15.1127%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.9435%" y="341" width="0.0808%" height="15" fill="rgb(237,26,42)" fg:x="185" fg:w="1"/><text x="15.1935%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="15.0242%" y="309" width="0.3231%" height="15" fill="rgb(220,163,24)" fg:x="186" fg:w="4"/><text x="15.2742%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="15.1050%" y="293" width="0.2423%" height="15" fill="rgb(242,115,20)" fg:x="187" fg:w="3"/><text x="15.3550%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="15.1050%" y="277" width="0.2423%" height="15" fill="rgb(210,206,9)" fg:x="187" fg:w="3"/><text x="15.3550%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5897%" y="229" width="0.0808%" height="15" fill="rgb(208,71,17)" fg:x="193" fg:w="1"/><text x="15.8397%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5897%" y="213" width="0.0808%" height="15" fill="rgb(233,7,5)" fg:x="193" fg:w="1"/><text x="15.8397%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5897%" y="197" width="0.0808%" height="15" fill="rgb(207,92,33)" fg:x="193" fg:w="1"/><text x="15.8397%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.7512%" y="213" width="0.0808%" height="15" fill="rgb(218,87,9)" fg:x="195" fg:w="1"/><text x="16.0012%" y="223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7512%" y="197" width="0.0808%" height="15" fill="rgb(219,47,37)" fg:x="195" fg:w="1"/><text x="16.0012%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="15.4281%" y="277" width="0.4847%" height="15" fill="rgb(221,152,34)" fg:x="191" fg:w="6"/><text x="15.6781%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="15.5089%" y="261" width="0.4039%" height="15" fill="rgb(235,176,21)" fg:x="192" fg:w="5"/><text x="15.7589%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="15.5897%" y="245" width="0.3231%" height="15" fill="rgb(232,212,21)" fg:x="193" fg:w="4"/><text x="15.8397%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="15.6704%" y="229" width="0.2423%" height="15" fill="rgb(245,82,39)" fg:x="194" fg:w="3"/><text x="15.9204%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8320%" y="213" width="0.0808%" height="15" fill="rgb(241,52,51)" fg:x="196" fg:w="1"/><text x="16.0820%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.65%)</title><rect x="15.3473%" y="309" width="0.6462%" height="15" fill="rgb(219,91,24)" fg:x="190" fg:w="8"/><text x="15.5973%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="15.4281%" y="293" width="0.5654%" height="15" fill="rgb(241,142,12)" fg:x="191" fg:w="7"/><text x="15.6781%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9128%" y="277" width="0.0808%" height="15" fill="rgb(230,27,9)" fg:x="197" fg:w="1"/><text x="16.1628%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.0743%" y="277" width="0.1616%" height="15" fill="rgb(249,181,32)" fg:x="199" fg:w="2"/><text x="16.3243%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.0743%" y="261" width="0.1616%" height="15" fill="rgb(230,107,3)" fg:x="199" fg:w="2"/><text x="16.3243%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1551%" y="245" width="0.0808%" height="15" fill="rgb(246,204,14)" fg:x="200" fg:w="1"/><text x="16.4051%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="16.4782%" y="261" width="0.0808%" height="15" fill="rgb(213,192,47)" fg:x="204" fg:w="1"/><text x="16.7282%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.6397%" y="245" width="0.0808%" height="15" fill="rgb(240,44,36)" fg:x="206" fg:w="1"/><text x="16.8897%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="16.0743%" y="293" width="0.8078%" height="15" fill="rgb(244,209,38)" fg:x="199" fg:w="10"/><text x="16.3243%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="16.2359%" y="277" width="0.6462%" height="15" fill="rgb(219,34,37)" fg:x="201" fg:w="8"/><text x="16.4859%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="16.5590%" y="261" width="0.3231%" height="15" fill="rgb(210,28,6)" fg:x="205" fg:w="4"/><text x="16.8090%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="16.7205%" y="245" width="0.1616%" height="15" fill="rgb(244,110,52)" fg:x="207" fg:w="2"/><text x="16.9705%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.7205%" y="229" width="0.1616%" height="15" fill="rgb(254,124,47)" fg:x="207" fg:w="2"/><text x="16.9705%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.94%)</title><rect x="15.0242%" y="325" width="1.9386%" height="15" fill="rgb(254,110,13)" fg:x="186" fg:w="24"/><text x="15.2742%" y="335.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.97%)</title><rect x="15.9935%" y="309" width="0.9693%" height="15" fill="rgb(252,57,21)" fg:x="198" fg:w="12"/><text x="16.2435%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8821%" y="293" width="0.0808%" height="15" fill="rgb(242,60,45)" fg:x="209" fg:w="1"/><text x="17.1321%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.9628%" y="325" width="0.0808%" height="15" fill="rgb(234,49,30)" fg:x="210" fg:w="1"/><text x="17.2128%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.26%)</title><rect x="15.0242%" y="341" width="2.2617%" height="15" fill="rgb(218,98,6)" fg:x="186" fg:w="28"/><text x="15.2742%" y="351.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="17.0436%" y="325" width="0.2423%" height="15" fill="rgb(220,174,29)" fg:x="211" fg:w="3"/><text x="17.2936%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2859%" y="341" width="0.0808%" height="15" fill="rgb(236,163,23)" fg:x="214" fg:w="1"/><text x="17.5359%" y="351.50"></text></g><g><title>engine::session::Session::flush (125 samples, 10.10%)</title><rect x="7.4313%" y="501" width="10.0969%" height="15" fill="rgb(242,114,45)" fg:x="92" fg:w="125"/><text x="7.6813%" y="511.50">engine::session..</text></g><g><title>engine::session::state::State::close (121 samples, 9.77%)</title><rect x="7.7544%" y="485" width="9.7738%" height="15" fill="rgb(232,10,53)" fg:x="96" fg:w="121"/><text x="8.0044%" y="495.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_entities (121 samples, 9.77%)</title><rect x="7.7544%" y="469" width="9.7738%" height="15" fill="rgb(245,108,29)" fg:x="96" fg:w="121"/><text x="8.0044%" y="479.50">engine::sessio..</text></g><g><title>core::iter::adapters::try_process (117 samples, 9.45%)</title><rect x="8.0775%" y="453" width="9.4507%" height="15" fill="rgb(240,89,53)" fg:x="100" fg:w="117"/><text x="8.3275%" y="463.50">core::iter::ad..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (116 samples, 9.37%)</title><rect x="8.1583%" y="437" width="9.3700%" height="15" fill="rgb(226,60,45)" fg:x="101" fg:w="116"/><text x="8.4083%" y="447.50">&lt;alloc::vec::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (116 samples, 9.37%)</title><rect x="8.1583%" y="421" width="9.3700%" height="15" fill="rgb(230,41,44)" fg:x="101" fg:w="116"/><text x="8.4083%" y="431.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (46 samples, 3.72%)</title><rect x="13.8126%" y="405" width="3.7157%" height="15" fill="rgb(230,26,20)" fg:x="171" fg:w="46"/><text x="14.0626%" y="415.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (45 samples, 3.63%)</title><rect x="13.8934%" y="389" width="3.6349%" height="15" fill="rgb(237,170,32)" fg:x="172" fg:w="45"/><text x="14.1434%" y="399.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (44 samples, 3.55%)</title><rect x="13.9742%" y="373" width="3.5541%" height="15" fill="rgb(212,35,42)" fg:x="173" fg:w="44"/><text x="14.2242%" y="383.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.58%)</title><rect x="14.9435%" y="357" width="2.5848%" height="15" fill="rgb(227,31,34)" fg:x="185" fg:w="32"/><text x="15.1935%" y="367.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.3667%" y="341" width="0.1616%" height="15" fill="rgb(216,19,18)" fg:x="215" fg:w="2"/><text x="17.6167%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4475%" y="325" width="0.0808%" height="15" fill="rgb(211,133,42)" fg:x="216" fg:w="1"/><text x="17.6975%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4475%" y="309" width="0.0808%" height="15" fill="rgb(244,66,13)" fg:x="216" fg:w="1"/><text x="17.6975%" y="319.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="17.5283%" y="469" width="0.0808%" height="15" fill="rgb(218,185,50)" fg:x="217" fg:w="1"/><text x="17.7783%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5283%" y="453" width="0.0808%" height="15" fill="rgb(219,149,13)" fg:x="217" fg:w="1"/><text x="17.7783%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5283%" y="437" width="0.0808%" height="15" fill="rgb(221,125,0)" fg:x="217" fg:w="1"/><text x="17.7783%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="17.6090%" y="469" width="0.0808%" height="15" fill="rgb(247,126,27)" fg:x="218" fg:w="1"/><text x="17.8590%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="17.6090%" y="453" width="0.0808%" height="15" fill="rgb(250,138,30)" fg:x="218" fg:w="1"/><text x="17.8590%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.6090%" y="437" width="0.0808%" height="15" fill="rgb(230,151,9)" fg:x="218" fg:w="1"/><text x="17.8590%" y="447.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="17.5283%" y="501" width="0.2423%" height="15" fill="rgb(233,80,38)" fg:x="217" fg:w="3"/><text x="17.7783%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="17.5283%" y="485" width="0.2423%" height="15" fill="rgb(232,68,43)" fg:x="217" fg:w="3"/><text x="17.7783%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.6898%" y="469" width="0.0808%" height="15" fill="rgb(254,5,50)" fg:x="219" fg:w="1"/><text x="17.9398%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6898%" y="453" width="0.0808%" height="15" fill="rgb(225,45,5)" fg:x="219" fg:w="1"/><text x="17.9398%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6898%" y="437" width="0.0808%" height="15" fill="rgb(239,22,3)" fg:x="219" fg:w="1"/><text x="17.9398%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.6898%" y="421" width="0.0808%" height="15" fill="rgb(243,129,0)" fg:x="219" fg:w="1"/><text x="17.9398%" y="431.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="17.6898%" y="405" width="0.0808%" height="15" fill="rgb(223,164,0)" fg:x="219" fg:w="1"/><text x="17.9398%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6898%" y="389" width="0.0808%" height="15" fill="rgb(221,46,29)" fg:x="219" fg:w="1"/><text x="17.9398%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7706%" y="469" width="0.0808%" height="15" fill="rgb(205,97,47)" fg:x="220" fg:w="1"/><text x="18.0206%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7706%" y="453" width="0.0808%" height="15" fill="rgb(249,14,8)" fg:x="220" fg:w="1"/><text x="18.0206%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.7706%" y="437" width="0.0808%" height="15" fill="rgb(216,77,3)" fg:x="220" fg:w="1"/><text x="18.0206%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.7706%" y="421" width="0.0808%" height="15" fill="rgb(206,168,54)" fg:x="220" fg:w="1"/><text x="18.0206%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.7706%" y="405" width="0.0808%" height="15" fill="rgb(236,3,41)" fg:x="220" fg:w="1"/><text x="18.0206%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7706%" y="389" width="0.0808%" height="15" fill="rgb(231,132,24)" fg:x="220" fg:w="1"/><text x="18.0206%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7706%" y="373" width="0.0808%" height="15" fill="rgb(227,221,40)" fg:x="220" fg:w="1"/><text x="18.0206%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.7706%" y="357" width="0.0808%" height="15" fill="rgb(233,151,11)" fg:x="220" fg:w="1"/><text x="18.0206%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.7706%" y="341" width="0.0808%" height="15" fill="rgb(247,81,35)" fg:x="220" fg:w="1"/><text x="18.0206%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.7706%" y="325" width="0.0808%" height="15" fill="rgb(243,128,48)" fg:x="220" fg:w="1"/><text x="18.0206%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.7706%" y="309" width="0.0808%" height="15" fill="rgb(253,16,10)" fg:x="220" fg:w="1"/><text x="18.0206%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.9321%" y="357" width="0.1616%" height="15" fill="rgb(228,67,27)" fg:x="222" fg:w="2"/><text x="18.1821%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.0129%" y="341" width="0.0808%" height="15" fill="rgb(231,105,25)" fg:x="223" fg:w="1"/><text x="18.2629%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="17.8514%" y="469" width="0.3231%" height="15" fill="rgb(213,166,47)" fg:x="221" fg:w="4"/><text x="18.1014%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="17.9321%" y="453" width="0.2423%" height="15" fill="rgb(209,27,10)" fg:x="222" fg:w="3"/><text x="18.1821%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="17.9321%" y="437" width="0.2423%" height="15" fill="rgb(241,44,30)" fg:x="222" fg:w="3"/><text x="18.1821%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="17.9321%" y="421" width="0.2423%" height="15" fill="rgb(223,216,15)" fg:x="222" fg:w="3"/><text x="18.1821%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.9321%" y="405" width="0.2423%" height="15" fill="rgb(227,14,7)" fg:x="222" fg:w="3"/><text x="18.1821%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="17.9321%" y="389" width="0.2423%" height="15" fill="rgb(237,14,5)" fg:x="222" fg:w="3"/><text x="18.1821%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.9321%" y="373" width="0.2423%" height="15" fill="rgb(232,14,36)" fg:x="222" fg:w="3"/><text x="18.1821%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.0937%" y="357" width="0.0808%" height="15" fill="rgb(234,0,38)" fg:x="224" fg:w="1"/><text x="18.3437%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0937%" y="341" width="0.0808%" height="15" fill="rgb(207,170,14)" fg:x="224" fg:w="1"/><text x="18.3437%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0937%" y="325" width="0.0808%" height="15" fill="rgb(252,45,13)" fg:x="224" fg:w="1"/><text x="18.3437%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="18.1745%" y="405" width="0.0808%" height="15" fill="rgb(213,142,7)" fg:x="225" fg:w="1"/><text x="18.4245%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="18.1745%" y="453" width="0.1616%" height="15" fill="rgb(216,157,23)" fg:x="225" fg:w="2"/><text x="18.4245%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.1745%" y="437" width="0.1616%" height="15" fill="rgb(212,145,33)" fg:x="225" fg:w="2"/><text x="18.4245%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.1745%" y="421" width="0.1616%" height="15" fill="rgb(233,26,13)" fg:x="225" fg:w="2"/><text x="18.4245%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2553%" y="405" width="0.0808%" height="15" fill="rgb(219,196,19)" fg:x="226" fg:w="1"/><text x="18.5053%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2553%" y="389" width="0.0808%" height="15" fill="rgb(246,56,21)" fg:x="226" fg:w="1"/><text x="18.5053%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.2553%" y="373" width="0.0808%" height="15" fill="rgb(222,28,53)" fg:x="226" fg:w="1"/><text x="18.5053%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2553%" y="357" width="0.0808%" height="15" fill="rgb(224,5,27)" fg:x="226" fg:w="1"/><text x="18.5053%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="18.3360%" y="437" width="0.0808%" height="15" fill="rgb(220,153,33)" fg:x="227" fg:w="1"/><text x="18.5860%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="18.3360%" y="421" width="0.0808%" height="15" fill="rgb(226,58,19)" fg:x="227" fg:w="1"/><text x="18.5860%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4168%" y="405" width="0.0808%" height="15" fill="rgb(239,112,23)" fg:x="228" fg:w="1"/><text x="18.6668%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.4168%" y="389" width="0.0808%" height="15" fill="rgb(251,213,20)" fg:x="228" fg:w="1"/><text x="18.6668%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="18.4168%" y="373" width="0.0808%" height="15" fill="rgb(215,181,21)" fg:x="228" fg:w="1"/><text x="18.6668%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="18.1745%" y="469" width="0.4039%" height="15" fill="rgb(240,8,35)" fg:x="225" fg:w="5"/><text x="18.4245%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="18.3360%" y="453" width="0.2423%" height="15" fill="rgb(232,203,3)" fg:x="227" fg:w="3"/><text x="18.5860%" y="463.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="18.4168%" y="437" width="0.1616%" height="15" fill="rgb(214,202,43)" fg:x="228" fg:w="2"/><text x="18.6668%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.4168%" y="421" width="0.1616%" height="15" fill="rgb(254,35,11)" fg:x="228" fg:w="2"/><text x="18.6668%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4976%" y="405" width="0.0808%" height="15" fill="rgb(239,173,13)" fg:x="229" fg:w="1"/><text x="18.7476%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4976%" y="389" width="0.0808%" height="15" fill="rgb(220,141,0)" fg:x="229" fg:w="1"/><text x="18.7476%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="18.5784%" y="405" width="0.0808%" height="15" fill="rgb(210,98,12)" fg:x="230" fg:w="1"/><text x="18.8284%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.5784%" y="389" width="0.0808%" height="15" fill="rgb(254,153,22)" fg:x="230" fg:w="1"/><text x="18.8284%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.5784%" y="373" width="0.0808%" height="15" fill="rgb(247,223,17)" fg:x="230" fg:w="1"/><text x="18.8284%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.5784%" y="357" width="0.0808%" height="15" fill="rgb(246,56,7)" fg:x="230" fg:w="1"/><text x="18.8284%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.6591%" y="357" width="0.1616%" height="15" fill="rgb(240,226,12)" fg:x="231" fg:w="2"/><text x="18.9091%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.6591%" y="341" width="0.1616%" height="15" fill="rgb(205,87,46)" fg:x="231" fg:w="2"/><text x="18.9091%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7399%" y="325" width="0.0808%" height="15" fill="rgb(245,214,51)" fg:x="232" fg:w="1"/><text x="18.9899%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="18.5784%" y="453" width="0.4039%" height="15" fill="rgb(223,172,33)" fg:x="230" fg:w="5"/><text x="18.8284%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="18.5784%" y="437" width="0.4039%" height="15" fill="rgb(227,203,34)" fg:x="230" fg:w="5"/><text x="18.8284%" y="447.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="18.5784%" y="421" width="0.4039%" height="15" fill="rgb(248,143,44)" fg:x="230" fg:w="5"/><text x="18.8284%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="18.6591%" y="405" width="0.3231%" height="15" fill="rgb(226,162,5)" fg:x="231" fg:w="4"/><text x="18.9091%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="18.6591%" y="389" width="0.3231%" height="15" fill="rgb(211,143,1)" fg:x="231" fg:w="4"/><text x="18.9091%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="18.6591%" y="373" width="0.3231%" height="15" fill="rgb(224,96,15)" fg:x="231" fg:w="4"/><text x="18.9091%" y="383.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="18.8207%" y="357" width="0.1616%" height="15" fill="rgb(222,4,38)" fg:x="233" fg:w="2"/><text x="19.0707%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.9015%" y="341" width="0.0808%" height="15" fill="rgb(253,228,15)" fg:x="234" fg:w="1"/><text x="19.1515%" y="351.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="18.9822%" y="453" width="0.0808%" height="15" fill="rgb(242,194,12)" fg:x="235" fg:w="1"/><text x="19.2322%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0630%" y="421" width="0.0808%" height="15" fill="rgb(214,177,31)" fg:x="236" fg:w="1"/><text x="19.3130%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.1438%" y="421" width="0.2423%" height="15" fill="rgb(226,58,51)" fg:x="237" fg:w="3"/><text x="19.3938%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="19.3861%" y="421" width="0.0808%" height="15" fill="rgb(250,119,16)" fg:x="240" fg:w="1"/><text x="19.6361%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5477%" y="389" width="0.0808%" height="15" fill="rgb(223,128,53)" fg:x="242" fg:w="1"/><text x="19.7977%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="19.4669%" y="421" width="0.2423%" height="15" fill="rgb(251,199,15)" fg:x="241" fg:w="3"/><text x="19.7169%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="19.4669%" y="405" width="0.2423%" height="15" fill="rgb(235,168,42)" fg:x="241" fg:w="3"/><text x="19.7169%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6284%" y="389" width="0.0808%" height="15" fill="rgb(250,210,17)" fg:x="243" fg:w="1"/><text x="19.8784%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6284%" y="373" width="0.0808%" height="15" fill="rgb(226,36,41)" fg:x="243" fg:w="1"/><text x="19.8784%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="19.7092%" y="405" width="0.1616%" height="15" fill="rgb(225,87,10)" fg:x="244" fg:w="2"/><text x="19.9592%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="19.7092%" y="389" width="0.1616%" height="15" fill="rgb(228,83,9)" fg:x="244" fg:w="2"/><text x="19.9592%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="19.7092%" y="373" width="0.1616%" height="15" fill="rgb(225,16,36)" fg:x="244" fg:w="2"/><text x="19.9592%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="19.7092%" y="357" width="0.1616%" height="15" fill="rgb(242,198,13)" fg:x="244" fg:w="2"/><text x="19.9592%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="19.7092%" y="341" width="0.1616%" height="15" fill="rgb(239,25,51)" fg:x="244" fg:w="2"/><text x="19.9592%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="19.7900%" y="325" width="0.0808%" height="15" fill="rgb(239,28,37)" fg:x="245" fg:w="1"/><text x="20.0400%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7900%" y="309" width="0.0808%" height="15" fill="rgb(234,70,17)" fg:x="245" fg:w="1"/><text x="20.0400%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_entity (17 samples, 1.37%)</title><rect x="18.5784%" y="469" width="1.3732%" height="15" fill="rgb(231,215,53)" fg:x="230" fg:w="17"/><text x="18.8284%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.89%)</title><rect x="19.0630%" y="453" width="0.8885%" height="15" fill="rgb(218,140,42)" fg:x="236" fg:w="11"/><text x="19.3130%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.89%)</title><rect x="19.0630%" y="437" width="0.8885%" height="15" fill="rgb(233,227,45)" fg:x="236" fg:w="11"/><text x="19.3130%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="19.7092%" y="421" width="0.2423%" height="15" fill="rgb(225,189,21)" fg:x="244" fg:w="3"/><text x="19.9592%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8708%" y="405" width="0.0808%" height="15" fill="rgb(237,176,54)" fg:x="246" fg:w="1"/><text x="20.1208%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (28 samples, 2.26%)</title><rect x="17.7706%" y="485" width="2.2617%" height="15" fill="rgb(215,131,46)" fg:x="220" fg:w="28"/><text x="18.0206%" y="495.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="19.9515%" y="469" width="0.0808%" height="15" fill="rgb(218,95,20)" fg:x="247" fg:w="1"/><text x="20.2015%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0323%" y="485" width="0.0808%" height="15" fill="rgb(208,198,12)" fg:x="248" fg:w="1"/><text x="20.2823%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0323%" y="469" width="0.0808%" height="15" fill="rgb(239,107,50)" fg:x="248" fg:w="1"/><text x="20.2823%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0323%" y="453" width="0.0808%" height="15" fill="rgb(240,217,37)" fg:x="248" fg:w="1"/><text x="20.2823%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="20.1131%" y="469" width="0.0808%" height="15" fill="rgb(242,197,49)" fg:x="249" fg:w="1"/><text x="20.3631%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1939%" y="437" width="0.1616%" height="15" fill="rgb(219,171,17)" fg:x="250" fg:w="2"/><text x="20.4439%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1939%" y="421" width="0.1616%" height="15" fill="rgb(209,81,40)" fg:x="250" fg:w="2"/><text x="20.4439%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1939%" y="405" width="0.1616%" height="15" fill="rgb(237,156,30)" fg:x="250" fg:w="2"/><text x="20.4439%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.1939%" y="389" width="0.1616%" height="15" fill="rgb(212,127,16)" fg:x="250" fg:w="2"/><text x="20.4439%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.1939%" y="373" width="0.1616%" height="15" fill="rgb(226,66,32)" fg:x="250" fg:w="2"/><text x="20.4439%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="20.1939%" y="357" width="0.1616%" height="15" fill="rgb(245,22,46)" fg:x="250" fg:w="2"/><text x="20.4439%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="20.1939%" y="341" width="0.1616%" height="15" fill="rgb(210,112,21)" fg:x="250" fg:w="2"/><text x="20.4439%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="20.1939%" y="325" width="0.1616%" height="15" fill="rgb(207,118,39)" fg:x="250" fg:w="2"/><text x="20.4439%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="20.1939%" y="309" width="0.1616%" height="15" fill="rgb(205,206,35)" fg:x="250" fg:w="2"/><text x="20.4439%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="20.1939%" y="293" width="0.1616%" height="15" fill="rgb(222,120,2)" fg:x="250" fg:w="2"/><text x="20.4439%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="20.1939%" y="277" width="0.1616%" height="15" fill="rgb(205,38,18)" fg:x="250" fg:w="2"/><text x="20.4439%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="20.1939%" y="261" width="0.1616%" height="15" fill="rgb(226,61,2)" fg:x="250" fg:w="2"/><text x="20.4439%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="20.1939%" y="245" width="0.1616%" height="15" fill="rgb(242,161,23)" fg:x="250" fg:w="2"/><text x="20.4439%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="20.1939%" y="229" width="0.1616%" height="15" fill="rgb(213,13,52)" fg:x="250" fg:w="2"/><text x="20.4439%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.1939%" y="213" width="0.1616%" height="15" fill="rgb(246,209,47)" fg:x="250" fg:w="2"/><text x="20.4439%" y="223.50"></text></g><g><title>plugins_core::build::Build::save (34 samples, 2.75%)</title><rect x="17.7706%" y="501" width="2.7464%" height="15" fill="rgb(214,41,3)" fg:x="220" fg:w="34"/><text x="18.0206%" y="511.50">pl..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="20.1131%" y="485" width="0.4039%" height="15" fill="rgb(236,119,38)" fg:x="249" fg:w="5"/><text x="20.3631%" y="495.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="20.1939%" y="469" width="0.3231%" height="15" fill="rgb(218,50,11)" fg:x="250" fg:w="4"/><text x="20.4439%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="20.1939%" y="453" width="0.3231%" height="15" fill="rgb(228,38,11)" fg:x="250" fg:w="4"/><text x="20.4439%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.3554%" y="437" width="0.1616%" height="15" fill="rgb(212,13,9)" fg:x="252" fg:w="2"/><text x="20.6054%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.3554%" y="421" width="0.1616%" height="15" fill="rgb(208,211,9)" fg:x="252" fg:w="2"/><text x="20.6054%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.3554%" y="405" width="0.1616%" height="15" fill="rgb(239,39,32)" fg:x="252" fg:w="2"/><text x="20.6054%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.3554%" y="389" width="0.1616%" height="15" fill="rgb(254,179,26)" fg:x="252" fg:w="2"/><text x="20.6054%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="20.3554%" y="373" width="0.1616%" height="15" fill="rgb(249,165,28)" fg:x="252" fg:w="2"/><text x="20.6054%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.4362%" y="357" width="0.0808%" height="15" fill="rgb(225,59,50)" fg:x="253" fg:w="1"/><text x="20.6862%" y="367.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="20.5170%" y="469" width="0.0808%" height="15" fill="rgb(209,122,5)" fg:x="254" fg:w="1"/><text x="20.7670%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="20.5170%" y="453" width="0.0808%" height="15" fill="rgb(214,65,34)" fg:x="254" fg:w="1"/><text x="20.7670%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="20.5170%" y="437" width="0.0808%" height="15" fill="rgb(249,183,32)" fg:x="254" fg:w="1"/><text x="20.7670%" y="447.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="20.5170%" y="421" width="0.0808%" height="15" fill="rgb(218,122,24)" fg:x="254" fg:w="1"/><text x="20.7670%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="20.6785%" y="453" width="0.0808%" height="15" fill="rgb(224,109,18)" fg:x="256" fg:w="1"/><text x="20.9285%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6785%" y="437" width="0.0808%" height="15" fill="rgb(210,68,50)" fg:x="256" fg:w="1"/><text x="20.9285%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7593%" y="357" width="0.0808%" height="15" fill="rgb(212,184,34)" fg:x="257" fg:w="1"/><text x="21.0093%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (2 samples, 0.16%)</title><rect x="20.7593%" y="421" width="0.1616%" height="15" fill="rgb(238,105,48)" fg:x="257" fg:w="2"/><text x="21.0093%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.7593%" y="405" width="0.1616%" height="15" fill="rgb(222,134,54)" fg:x="257" fg:w="2"/><text x="21.0093%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="20.7593%" y="389" width="0.1616%" height="15" fill="rgb(246,24,43)" fg:x="257" fg:w="2"/><text x="21.0093%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.7593%" y="373" width="0.1616%" height="15" fill="rgb(227,169,22)" fg:x="257" fg:w="2"/><text x="21.0093%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8401%" y="357" width="0.0808%" height="15" fill="rgb(253,152,4)" fg:x="258" fg:w="1"/><text x="21.0901%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8401%" y="341" width="0.0808%" height="15" fill="rgb(219,158,36)" fg:x="258" fg:w="1"/><text x="21.0901%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.8401%" y="325" width="0.0808%" height="15" fill="rgb(251,128,40)" fg:x="258" fg:w="1"/><text x="21.0901%" y="335.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (6 samples, 0.48%)</title><rect x="20.5170%" y="501" width="0.4847%" height="15" fill="rgb(254,101,39)" fg:x="254" fg:w="6"/><text x="20.7670%" y="511.50"></text></g><g><title>plugins_core::tools::set_quantity (6 samples, 0.48%)</title><rect x="20.5170%" y="485" width="0.4847%" height="15" fill="rgb(221,168,40)" fg:x="254" fg:w="6"/><text x="20.7670%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.40%)</title><rect x="20.5977%" y="469" width="0.4039%" height="15" fill="rgb(221,14,27)" fg:x="255" fg:w="5"/><text x="20.8477%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (3 samples, 0.24%)</title><rect x="20.7593%" y="453" width="0.2423%" height="15" fill="rgb(207,36,43)" fg:x="257" fg:w="3"/><text x="21.0093%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.7593%" y="437" width="0.2423%" height="15" fill="rgb(240,172,53)" fg:x="257" fg:w="3"/><text x="21.0093%" y="447.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;f32&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="20.9208%" y="421" width="0.0808%" height="15" fill="rgb(241,138,43)" fg:x="259" fg:w="1"/><text x="21.1708%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::OpenedScopeRefMut&lt;plugins_core::carrying::model::Containing,kernel::model::entity::Entity&gt;&gt; (1 samples, 0.08%)</title><rect x="21.0016%" y="469" width="0.0808%" height="15" fill="rgb(227,78,19)" fg:x="260" fg:w="1"/><text x="21.2516%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="21.0016%" y="453" width="0.0808%" height="15" fill="rgb(215,127,44)" fg:x="260" fg:w="1"/><text x="21.2516%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0016%" y="437" width="0.0808%" height="15" fill="rgb(227,13,10)" fg:x="260" fg:w="1"/><text x="21.2516%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0824%" y="325" width="0.0808%" height="15" fill="rgb(249,177,6)" fg:x="261" fg:w="1"/><text x="21.3324%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.0824%" y="309" width="0.0808%" height="15" fill="rgb(215,154,26)" fg:x="261" fg:w="1"/><text x="21.3324%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="21.0824%" y="469" width="0.1616%" height="15" fill="rgb(250,168,20)" fg:x="261" fg:w="2"/><text x="21.3324%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="21.0824%" y="453" width="0.1616%" height="15" fill="rgb(222,53,38)" fg:x="261" fg:w="2"/><text x="21.3324%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="21.0824%" y="437" width="0.1616%" height="15" fill="rgb(245,154,5)" fg:x="261" fg:w="2"/><text x="21.3324%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="21.0824%" y="421" width="0.1616%" height="15" fill="rgb(214,89,50)" fg:x="261" fg:w="2"/><text x="21.3324%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="21.0824%" y="405" width="0.1616%" height="15" fill="rgb(232,73,14)" fg:x="261" fg:w="2"/><text x="21.3324%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.0824%" y="389" width="0.1616%" height="15" fill="rgb(230,101,20)" fg:x="261" fg:w="2"/><text x="21.3324%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.0824%" y="373" width="0.1616%" height="15" fill="rgb(208,56,28)" fg:x="261" fg:w="2"/><text x="21.3324%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="21.0824%" y="357" width="0.1616%" height="15" fill="rgb(247,205,22)" fg:x="261" fg:w="2"/><text x="21.3324%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.0824%" y="341" width="0.1616%" height="15" fill="rgb(252,109,51)" fg:x="261" fg:w="2"/><text x="21.3324%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.1632%" y="325" width="0.0808%" height="15" fill="rgb(220,40,24)" fg:x="262" fg:w="1"/><text x="21.4132%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.2439%" y="421" width="0.0808%" height="15" fill="rgb(251,108,7)" fg:x="263" fg:w="1"/><text x="21.4939%" y="431.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="21.2439%" y="469" width="0.1616%" height="15" fill="rgb(238,102,51)" fg:x="263" fg:w="2"/><text x="21.4939%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="21.2439%" y="453" width="0.1616%" height="15" fill="rgb(219,149,34)" fg:x="263" fg:w="2"/><text x="21.4939%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.2439%" y="437" width="0.1616%" height="15" fill="rgb(239,70,0)" fg:x="263" fg:w="2"/><text x="21.4939%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.3247%" y="421" width="0.0808%" height="15" fill="rgb(246,214,23)" fg:x="264" fg:w="1"/><text x="21.5747%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="21.3247%" y="405" width="0.0808%" height="15" fill="rgb(239,221,51)" fg:x="264" fg:w="1"/><text x="21.5747%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4863%" y="309" width="0.0808%" height="15" fill="rgb(254,62,14)" fg:x="266" fg:w="1"/><text x="21.7363%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4863%" y="293" width="0.0808%" height="15" fill="rgb(253,57,33)" fg:x="266" fg:w="1"/><text x="21.7363%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.4863%" y="277" width="0.0808%" height="15" fill="rgb(229,34,6)" fg:x="266" fg:w="1"/><text x="21.7363%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.4863%" y="261" width="0.0808%" height="15" fill="rgb(235,191,23)" fg:x="266" fg:w="1"/><text x="21.7363%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.4863%" y="245" width="0.0808%" height="15" fill="rgb(217,207,27)" fg:x="266" fg:w="1"/><text x="21.7363%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.4863%" y="229" width="0.0808%" height="15" fill="rgb(232,41,44)" fg:x="266" fg:w="1"/><text x="21.7363%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4863%" y="421" width="0.1616%" height="15" fill="rgb(221,188,19)" fg:x="266" fg:w="2"/><text x="21.7363%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4863%" y="405" width="0.1616%" height="15" fill="rgb(245,180,45)" fg:x="266" fg:w="2"/><text x="21.7363%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.4863%" y="389" width="0.1616%" height="15" fill="rgb(250,220,42)" fg:x="266" fg:w="2"/><text x="21.7363%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.4863%" y="373" width="0.1616%" height="15" fill="rgb(234,16,34)" fg:x="266" fg:w="2"/><text x="21.7363%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="21.4863%" y="357" width="0.1616%" height="15" fill="rgb(233,217,23)" fg:x="266" fg:w="2"/><text x="21.7363%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="21.4863%" y="341" width="0.1616%" height="15" fill="rgb(209,22,46)" fg:x="266" fg:w="2"/><text x="21.7363%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="21.4863%" y="325" width="0.1616%" height="15" fill="rgb(213,101,18)" fg:x="266" fg:w="2"/><text x="21.7363%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="21.5670%" y="309" width="0.0808%" height="15" fill="rgb(215,179,52)" fg:x="267" fg:w="1"/><text x="21.8170%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.5670%" y="293" width="0.0808%" height="15" fill="rgb(223,50,25)" fg:x="267" fg:w="1"/><text x="21.8170%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.4863%" y="437" width="0.2423%" height="15" fill="rgb(224,51,44)" fg:x="266" fg:w="3"/><text x="21.7363%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6478%" y="421" width="0.0808%" height="15" fill="rgb(224,13,54)" fg:x="268" fg:w="1"/><text x="21.8978%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6478%" y="405" width="0.0808%" height="15" fill="rgb(219,58,47)" fg:x="268" fg:w="1"/><text x="21.8978%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.6478%" y="389" width="0.0808%" height="15" fill="rgb(246,124,34)" fg:x="268" fg:w="1"/><text x="21.8978%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.6478%" y="373" width="0.0808%" height="15" fill="rgb(245,109,25)" fg:x="268" fg:w="1"/><text x="21.8978%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.6478%" y="357" width="0.0808%" height="15" fill="rgb(235,48,23)" fg:x="268" fg:w="1"/><text x="21.8978%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6478%" y="341" width="0.0808%" height="15" fill="rgb(229,203,36)" fg:x="268" fg:w="1"/><text x="21.8978%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6478%" y="325" width="0.0808%" height="15" fill="rgb(234,180,9)" fg:x="268" fg:w="1"/><text x="21.8978%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.6478%" y="309" width="0.0808%" height="15" fill="rgb(228,98,45)" fg:x="268" fg:w="1"/><text x="21.8978%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.6478%" y="293" width="0.0808%" height="15" fill="rgb(240,24,36)" fg:x="268" fg:w="1"/><text x="21.8978%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.6478%" y="277" width="0.0808%" height="15" fill="rgb(227,154,19)" fg:x="268" fg:w="1"/><text x="21.8978%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.6478%" y="261" width="0.0808%" height="15" fill="rgb(231,2,48)" fg:x="268" fg:w="1"/><text x="21.8978%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.6478%" y="245" width="0.0808%" height="15" fill="rgb(219,216,0)" fg:x="268" fg:w="1"/><text x="21.8978%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="21.7286%" y="437" width="0.0808%" height="15" fill="rgb(251,88,0)" fg:x="269" fg:w="1"/><text x="21.9786%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.48%)</title><rect x="21.4863%" y="453" width="0.4847%" height="15" fill="rgb(242,45,45)" fg:x="266" fg:w="6"/><text x="21.7363%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.8094%" y="437" width="0.1616%" height="15" fill="rgb(218,149,45)" fg:x="270" fg:w="2"/><text x="22.0594%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.8094%" y="421" width="0.1616%" height="15" fill="rgb(247,194,10)" fg:x="270" fg:w="2"/><text x="22.0594%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.8094%" y="405" width="0.1616%" height="15" fill="rgb(234,33,37)" fg:x="270" fg:w="2"/><text x="22.0594%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.8094%" y="389" width="0.1616%" height="15" fill="rgb(218,61,13)" fg:x="270" fg:w="2"/><text x="22.0594%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.8094%" y="373" width="0.1616%" height="15" fill="rgb(210,80,52)" fg:x="270" fg:w="2"/><text x="22.0594%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8901%" y="357" width="0.0808%" height="15" fill="rgb(218,203,27)" fg:x="271" fg:w="1"/><text x="22.1401%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="21.9709%" y="405" width="0.0808%" height="15" fill="rgb(209,126,33)" fg:x="272" fg:w="1"/><text x="22.2209%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.0517%" y="373" width="0.0808%" height="15" fill="rgb(234,173,41)" fg:x="273" fg:w="1"/><text x="22.3017%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.0517%" y="357" width="0.0808%" height="15" fill="rgb(228,166,9)" fg:x="273" fg:w="1"/><text x="22.3017%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.0517%" y="341" width="0.0808%" height="15" fill="rgb(208,124,43)" fg:x="273" fg:w="1"/><text x="22.3017%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0517%" y="325" width="0.0808%" height="15" fill="rgb(212,154,38)" fg:x="273" fg:w="1"/><text x="22.3017%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0517%" y="309" width="0.0808%" height="15" fill="rgb(246,179,35)" fg:x="273" fg:w="1"/><text x="22.3017%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.0517%" y="293" width="0.0808%" height="15" fill="rgb(251,3,50)" fg:x="273" fg:w="1"/><text x="22.3017%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.0517%" y="277" width="0.0808%" height="15" fill="rgb(219,96,8)" fg:x="273" fg:w="1"/><text x="22.3017%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.0517%" y="261" width="0.0808%" height="15" fill="rgb(251,216,33)" fg:x="273" fg:w="1"/><text x="22.3017%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.0517%" y="245" width="0.0808%" height="15" fill="rgb(243,145,29)" fg:x="273" fg:w="1"/><text x="22.3017%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.0517%" y="229" width="0.0808%" height="15" fill="rgb(210,75,20)" fg:x="273" fg:w="1"/><text x="22.3017%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.0517%" y="213" width="0.0808%" height="15" fill="rgb(235,56,8)" fg:x="273" fg:w="1"/><text x="22.3017%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.0517%" y="197" width="0.0808%" height="15" fill="rgb(226,175,49)" fg:x="273" fg:w="1"/><text x="22.3017%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.0517%" y="181" width="0.0808%" height="15" fill="rgb(242,204,23)" fg:x="273" fg:w="1"/><text x="22.3017%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.0517%" y="165" width="0.0808%" height="15" fill="rgb(225,104,24)" fg:x="273" fg:w="1"/><text x="22.3017%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.0517%" y="149" width="0.0808%" height="15" fill="rgb(253,34,1)" fg:x="273" fg:w="1"/><text x="22.3017%" y="159.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.05%)</title><rect x="21.4055%" y="469" width="1.0501%" height="15" fill="rgb(233,199,23)" fg:x="265" fg:w="13"/><text x="21.6555%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="21.9709%" y="453" width="0.4847%" height="15" fill="rgb(247,7,51)" fg:x="272" fg:w="6"/><text x="22.2209%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="21.9709%" y="437" width="0.4847%" height="15" fill="rgb(214,146,12)" fg:x="272" fg:w="6"/><text x="22.2209%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="21.9709%" y="421" width="0.4847%" height="15" fill="rgb(234,181,43)" fg:x="272" fg:w="6"/><text x="22.2209%" y="431.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="22.0517%" y="405" width="0.4039%" height="15" fill="rgb(239,148,6)" fg:x="273" fg:w="5"/><text x="22.3017%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="22.0517%" y="389" width="0.4039%" height="15" fill="rgb(206,151,17)" fg:x="273" fg:w="5"/><text x="22.3017%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="22.1325%" y="373" width="0.3231%" height="15" fill="rgb(213,215,10)" fg:x="274" fg:w="4"/><text x="22.3825%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="22.2132%" y="357" width="0.2423%" height="15" fill="rgb(215,220,44)" fg:x="275" fg:w="3"/><text x="22.4632%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="22.2132%" y="341" width="0.2423%" height="15" fill="rgb(245,205,37)" fg:x="275" fg:w="3"/><text x="22.4632%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="22.2132%" y="325" width="0.2423%" height="15" fill="rgb(245,130,43)" fg:x="275" fg:w="3"/><text x="22.4632%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="22.2940%" y="309" width="0.1616%" height="15" fill="rgb(231,227,38)" fg:x="276" fg:w="2"/><text x="22.5440%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.2940%" y="293" width="0.1616%" height="15" fill="rgb(233,185,4)" fg:x="276" fg:w="2"/><text x="22.5440%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.3748%" y="277" width="0.0808%" height="15" fill="rgb(224,154,43)" fg:x="277" fg:w="1"/><text x="22.6248%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3748%" y="261" width="0.0808%" height="15" fill="rgb(235,156,15)" fg:x="277" fg:w="1"/><text x="22.6248%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4556%" y="373" width="0.0808%" height="15" fill="rgb(211,55,43)" fg:x="278" fg:w="1"/><text x="22.7056%" y="383.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (23 samples, 1.86%)</title><rect x="21.0016%" y="501" width="1.8578%" height="15" fill="rgb(247,149,40)" fg:x="260" fg:w="23"/><text x="21.2516%" y="511.50">p..</text></g><g><title>plugins_core::tools::set_container (23 samples, 1.86%)</title><rect x="21.0016%" y="485" width="1.8578%" height="15" fill="rgb(232,171,16)" fg:x="260" fg:w="23"/><text x="21.2516%" y="495.50">p..</text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="22.4556%" y="469" width="0.4039%" height="15" fill="rgb(215,117,49)" fg:x="278" fg:w="5"/><text x="22.7056%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.40%)</title><rect x="22.4556%" y="453" width="0.4039%" height="15" fill="rgb(246,194,11)" fg:x="278" fg:w="5"/><text x="22.7056%" y="463.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (5 samples, 0.40%)</title><rect x="22.4556%" y="437" width="0.4039%" height="15" fill="rgb(242,101,44)" fg:x="278" fg:w="5"/><text x="22.7056%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="22.4556%" y="421" width="0.4039%" height="15" fill="rgb(226,174,6)" fg:x="278" fg:w="5"/><text x="22.7056%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (5 samples, 0.40%)</title><rect x="22.4556%" y="405" width="0.4039%" height="15" fill="rgb(213,150,20)" fg:x="278" fg:w="5"/><text x="22.7056%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="22.4556%" y="389" width="0.4039%" height="15" fill="rgb(222,124,42)" fg:x="278" fg:w="5"/><text x="22.7056%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="22.5363%" y="373" width="0.3231%" height="15" fill="rgb(250,19,47)" fg:x="279" fg:w="4"/><text x="22.7863%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.6979%" y="357" width="0.1616%" height="15" fill="rgb(241,217,19)" fg:x="281" fg:w="2"/><text x="22.9479%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="22.7787%" y="341" width="0.0808%" height="15" fill="rgb(207,210,34)" fg:x="282" fg:w="1"/><text x="23.0287%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.9402%" y="437" width="0.0808%" height="15" fill="rgb(244,45,4)" fg:x="284" fg:w="1"/><text x="23.1902%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="22.8595%" y="469" width="0.2423%" height="15" fill="rgb(252,134,50)" fg:x="283" fg:w="3"/><text x="23.1095%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="22.8595%" y="453" width="0.2423%" height="15" fill="rgb(238,74,2)" fg:x="283" fg:w="3"/><text x="23.1095%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.0210%" y="437" width="0.0808%" height="15" fill="rgb(226,58,46)" fg:x="285" fg:w="1"/><text x="23.2710%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.0210%" y="421" width="0.0808%" height="15" fill="rgb(232,83,35)" fg:x="285" fg:w="1"/><text x="23.2710%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="22.8595%" y="485" width="0.3231%" height="15" fill="rgb(212,148,47)" fg:x="283" fg:w="4"/><text x="23.1095%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1018%" y="469" width="0.0808%" height="15" fill="rgb(235,29,1)" fg:x="286" fg:w="1"/><text x="23.3518%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="23.1826%" y="485" width="0.0808%" height="15" fill="rgb(247,55,37)" fg:x="287" fg:w="1"/><text x="23.4326%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="23.1826%" y="469" width="0.0808%" height="15" fill="rgb(222,48,3)" fg:x="287" fg:w="1"/><text x="23.4326%" y="479.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="23.1826%" y="453" width="0.0808%" height="15" fill="rgb(234,21,33)" fg:x="287" fg:w="1"/><text x="23.4326%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.1826%" y="437" width="0.0808%" height="15" fill="rgb(247,178,53)" fg:x="287" fg:w="1"/><text x="23.4326%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1826%" y="421" width="0.0808%" height="15" fill="rgb(225,75,7)" fg:x="287" fg:w="1"/><text x="23.4326%" y="431.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="23.2633%" y="469" width="0.0808%" height="15" fill="rgb(219,199,7)" fg:x="288" fg:w="1"/><text x="23.5133%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2633%" y="453" width="0.0808%" height="15" fill="rgb(209,93,42)" fg:x="288" fg:w="1"/><text x="23.5133%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2633%" y="437" width="0.0808%" height="15" fill="rgb(240,175,17)" fg:x="288" fg:w="1"/><text x="23.5133%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="23.2633%" y="421" width="0.0808%" height="15" fill="rgb(232,106,7)" fg:x="288" fg:w="1"/><text x="23.5133%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="23.3441%" y="453" width="0.0808%" height="15" fill="rgb(242,106,43)" fg:x="289" fg:w="1"/><text x="23.5941%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="23.2633%" y="485" width="0.2423%" height="15" fill="rgb(242,61,37)" fg:x="288" fg:w="3"/><text x="23.5133%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="23.3441%" y="469" width="0.1616%" height="15" fill="rgb(205,72,10)" fg:x="289" fg:w="2"/><text x="23.5941%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4249%" y="453" width="0.0808%" height="15" fill="rgb(214,184,36)" fg:x="290" fg:w="1"/><text x="23.6749%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4249%" y="437" width="0.0808%" height="15" fill="rgb(206,107,18)" fg:x="290" fg:w="1"/><text x="23.6749%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4249%" y="421" width="0.0808%" height="15" fill="rgb(210,75,5)" fg:x="290" fg:w="1"/><text x="23.6749%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.6672%" y="405" width="0.0808%" height="15" fill="rgb(205,3,19)" fg:x="293" fg:w="1"/><text x="23.9172%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.6672%" y="389" width="0.0808%" height="15" fill="rgb(207,181,42)" fg:x="293" fg:w="1"/><text x="23.9172%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="23.6672%" y="373" width="0.0808%" height="15" fill="rgb(229,179,43)" fg:x="293" fg:w="1"/><text x="23.9172%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6672%" y="357" width="0.0808%" height="15" fill="rgb(246,95,30)" fg:x="293" fg:w="1"/><text x="23.9172%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6672%" y="341" width="0.0808%" height="15" fill="rgb(234,144,45)" fg:x="293" fg:w="1"/><text x="23.9172%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6672%" y="325" width="0.0808%" height="15" fill="rgb(250,54,25)" fg:x="293" fg:w="1"/><text x="23.9172%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7480%" y="389" width="0.0808%" height="15" fill="rgb(215,195,40)" fg:x="294" fg:w="1"/><text x="23.9980%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.8288%" y="341" width="0.2423%" height="15" fill="rgb(233,188,42)" fg:x="295" fg:w="3"/><text x="24.0788%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.8288%" y="325" width="0.2423%" height="15" fill="rgb(247,227,35)" fg:x="295" fg:w="3"/><text x="24.0788%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="23.9095%" y="309" width="0.1616%" height="15" fill="rgb(249,124,27)" fg:x="296" fg:w="2"/><text x="24.1595%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.65%)</title><rect x="23.5057%" y="485" width="0.6462%" height="15" fill="rgb(219,207,25)" fg:x="291" fg:w="8"/><text x="23.7557%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="23.5057%" y="469" width="0.6462%" height="15" fill="rgb(241,216,47)" fg:x="291" fg:w="8"/><text x="23.7557%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.57%)</title><rect x="23.5864%" y="453" width="0.5654%" height="15" fill="rgb(233,82,50)" fg:x="292" fg:w="7"/><text x="23.8364%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="23.6672%" y="437" width="0.4847%" height="15" fill="rgb(232,63,2)" fg:x="293" fg:w="6"/><text x="23.9172%" y="447.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="23.6672%" y="421" width="0.4847%" height="15" fill="rgb(236,184,28)" fg:x="293" fg:w="6"/><text x="23.9172%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="23.7480%" y="405" width="0.4039%" height="15" fill="rgb(254,63,27)" fg:x="294" fg:w="5"/><text x="23.9980%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="23.8288%" y="389" width="0.3231%" height="15" fill="rgb(253,106,28)" fg:x="295" fg:w="4"/><text x="24.0788%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="23.8288%" y="373" width="0.3231%" height="15" fill="rgb(225,141,39)" fg:x="295" fg:w="4"/><text x="24.0788%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="23.8288%" y="357" width="0.3231%" height="15" fill="rgb(222,157,20)" fg:x="295" fg:w="4"/><text x="24.0788%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0711%" y="341" width="0.0808%" height="15" fill="rgb(210,190,9)" fg:x="298" fg:w="1"/><text x="24.3211%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1519%" y="453" width="0.0808%" height="15" fill="rgb(242,167,7)" fg:x="299" fg:w="1"/><text x="24.4019%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="24.1519%" y="469" width="0.1616%" height="15" fill="rgb(227,82,41)" fg:x="299" fg:w="2"/><text x="24.4019%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2326%" y="453" width="0.0808%" height="15" fill="rgb(222,131,13)" fg:x="300" fg:w="1"/><text x="24.4826%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2326%" y="437" width="0.0808%" height="15" fill="rgb(221,98,26)" fg:x="300" fg:w="1"/><text x="24.4826%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.2326%" y="421" width="0.0808%" height="15" fill="rgb(251,63,52)" fg:x="300" fg:w="1"/><text x="24.4826%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2326%" y="405" width="0.0808%" height="15" fill="rgb(246,25,43)" fg:x="300" fg:w="1"/><text x="24.4826%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="24.4750%" y="389" width="0.2423%" height="15" fill="rgb(247,167,15)" fg:x="303" fg:w="3"/><text x="24.7250%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="24.5557%" y="373" width="0.1616%" height="15" fill="rgb(240,104,42)" fg:x="304" fg:w="2"/><text x="24.8057%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6365%" y="357" width="0.0808%" height="15" fill="rgb(224,54,6)" fg:x="305" fg:w="1"/><text x="24.8865%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6365%" y="341" width="0.0808%" height="15" fill="rgb(244,108,35)" fg:x="305" fg:w="1"/><text x="24.8865%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6365%" y="325" width="0.0808%" height="15" fill="rgb(216,154,2)" fg:x="305" fg:w="1"/><text x="24.8865%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6365%" y="309" width="0.0808%" height="15" fill="rgb(222,8,47)" fg:x="305" fg:w="1"/><text x="24.8865%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6365%" y="293" width="0.0808%" height="15" fill="rgb(252,93,1)" fg:x="305" fg:w="1"/><text x="24.8865%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6365%" y="277" width="0.0808%" height="15" fill="rgb(223,226,51)" fg:x="305" fg:w="1"/><text x="24.8865%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.6365%" y="261" width="0.0808%" height="15" fill="rgb(206,147,9)" fg:x="305" fg:w="1"/><text x="24.8865%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.6365%" y="245" width="0.0808%" height="15" fill="rgb(248,180,41)" fg:x="305" fg:w="1"/><text x="24.8865%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.6365%" y="229" width="0.0808%" height="15" fill="rgb(209,47,50)" fg:x="305" fg:w="1"/><text x="24.8865%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.6365%" y="213" width="0.0808%" height="15" fill="rgb(243,65,31)" fg:x="305" fg:w="1"/><text x="24.8865%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6365%" y="197" width="0.0808%" height="15" fill="rgb(228,128,1)" fg:x="305" fg:w="1"/><text x="24.8865%" y="207.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="24.3942%" y="421" width="0.4039%" height="15" fill="rgb(231,192,16)" fg:x="302" fg:w="5"/><text x="24.6442%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="24.3942%" y="405" width="0.4039%" height="15" fill="rgb(224,26,40)" fg:x="302" fg:w="5"/><text x="24.6442%" y="415.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="24.7173%" y="389" width="0.0808%" height="15" fill="rgb(214,192,17)" fg:x="306" fg:w="1"/><text x="24.9673%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.7981%" y="389" width="0.0808%" height="15" fill="rgb(225,147,18)" fg:x="307" fg:w="1"/><text x="25.0481%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.7981%" y="373" width="0.0808%" height="15" fill="rgb(205,35,11)" fg:x="307" fg:w="1"/><text x="25.0481%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.7981%" y="357" width="0.0808%" height="15" fill="rgb(242,40,42)" fg:x="307" fg:w="1"/><text x="25.0481%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="24.9596%" y="373" width="0.0808%" height="15" fill="rgb(250,170,13)" fg:x="309" fg:w="1"/><text x="25.2096%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.9596%" y="357" width="0.0808%" height="15" fill="rgb(240,161,28)" fg:x="309" fg:w="1"/><text x="25.2096%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="25.2827%" y="341" width="0.4847%" height="15" fill="rgb(245,179,12)" fg:x="313" fg:w="6"/><text x="25.5327%" y="351.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="25.2827%" y="325" width="0.4847%" height="15" fill="rgb(250,92,32)" fg:x="313" fg:w="6"/><text x="25.5327%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="25.3635%" y="309" width="0.4039%" height="15" fill="rgb(233,10,40)" fg:x="314" fg:w="5"/><text x="25.6135%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="25.3635%" y="293" width="0.4039%" height="15" fill="rgb(217,98,1)" fg:x="314" fg:w="5"/><text x="25.6135%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="25.4443%" y="277" width="0.3231%" height="15" fill="rgb(238,202,7)" fg:x="315" fg:w="4"/><text x="25.6943%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="25.4443%" y="261" width="0.3231%" height="15" fill="rgb(222,91,3)" fg:x="315" fg:w="4"/><text x="25.6943%" y="271.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="25.4443%" y="245" width="0.3231%" height="15" fill="rgb(211,170,49)" fg:x="315" fg:w="4"/><text x="25.6943%" y="255.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.73%)</title><rect x="25.2019%" y="357" width="0.7270%" height="15" fill="rgb(253,139,18)" fg:x="312" fg:w="9"/><text x="25.4519%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.7674%" y="341" width="0.1616%" height="15" fill="rgb(222,4,43)" fg:x="319" fg:w="2"/><text x="26.0174%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.8481%" y="325" width="0.0808%" height="15" fill="rgb(207,205,12)" fg:x="320" fg:w="1"/><text x="26.0981%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.8481%" y="309" width="0.0808%" height="15" fill="rgb(216,159,46)" fg:x="320" fg:w="1"/><text x="26.0981%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="25.9289%" y="341" width="0.4039%" height="15" fill="rgb(236,115,1)" fg:x="321" fg:w="5"/><text x="26.1789%" y="351.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="25.9289%" y="325" width="0.4039%" height="15" fill="rgb(251,35,33)" fg:x="321" fg:w="5"/><text x="26.1789%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.1712%" y="309" width="0.1616%" height="15" fill="rgb(248,62,51)" fg:x="324" fg:w="2"/><text x="26.4212%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.5751%" y="293" width="0.0808%" height="15" fill="rgb(254,180,19)" fg:x="329" fg:w="1"/><text x="26.8251%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="26.6559%" y="293" width="0.2423%" height="15" fill="rgb(217,100,32)" fg:x="330" fg:w="3"/><text x="26.9059%" y="303.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.6559%" y="277" width="0.2423%" height="15" fill="rgb(224,71,22)" fg:x="330" fg:w="3"/><text x="26.9059%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.7367%" y="261" width="0.1616%" height="15" fill="rgb(251,185,33)" fg:x="331" fg:w="2"/><text x="26.9867%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.8174%" y="245" width="0.0808%" height="15" fill="rgb(209,75,48)" fg:x="332" fg:w="1"/><text x="27.0674%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.8174%" y="229" width="0.0808%" height="15" fill="rgb(253,190,16)" fg:x="332" fg:w="1"/><text x="27.0674%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.8174%" y="213" width="0.0808%" height="15" fill="rgb(226,140,1)" fg:x="332" fg:w="1"/><text x="27.0674%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.8174%" y="197" width="0.0808%" height="15" fill="rgb(206,75,30)" fg:x="332" fg:w="1"/><text x="27.0674%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.8982%" y="277" width="0.0808%" height="15" fill="rgb(231,208,37)" fg:x="333" fg:w="1"/><text x="27.1482%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.8982%" y="261" width="0.0808%" height="15" fill="rgb(238,136,40)" fg:x="333" fg:w="1"/><text x="27.1482%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.8982%" y="245" width="0.0808%" height="15" fill="rgb(247,137,17)" fg:x="333" fg:w="1"/><text x="27.1482%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.8982%" y="229" width="0.0808%" height="15" fill="rgb(240,60,40)" fg:x="333" fg:w="1"/><text x="27.1482%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8982%" y="293" width="0.1616%" height="15" fill="rgb(236,68,50)" fg:x="333" fg:w="2"/><text x="27.1482%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9790%" y="277" width="0.0808%" height="15" fill="rgb(230,42,12)" fg:x="334" fg:w="1"/><text x="27.2290%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.9790%" y="261" width="0.0808%" height="15" fill="rgb(219,16,16)" fg:x="334" fg:w="1"/><text x="27.2290%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="26.5751%" y="309" width="0.5654%" height="15" fill="rgb(220,38,35)" fg:x="329" fg:w="7"/><text x="26.8251%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.0598%" y="293" width="0.0808%" height="15" fill="rgb(228,33,1)" fg:x="335" fg:w="1"/><text x="27.3098%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.0598%" y="277" width="0.0808%" height="15" fill="rgb(241,46,31)" fg:x="335" fg:w="1"/><text x="27.3098%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.73%)</title><rect x="26.5751%" y="325" width="0.7270%" height="15" fill="rgb(232,58,20)" fg:x="329" fg:w="9"/><text x="26.8251%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.1405%" y="309" width="0.1616%" height="15" fill="rgb(206,228,53)" fg:x="336" fg:w="2"/><text x="27.3905%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.1405%" y="293" width="0.1616%" height="15" fill="rgb(206,88,33)" fg:x="336" fg:w="2"/><text x="27.3905%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="27.3021%" y="325" width="0.4039%" height="15" fill="rgb(238,69,7)" fg:x="338" fg:w="5"/><text x="27.5521%" y="335.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="27.3021%" y="309" width="0.4039%" height="15" fill="rgb(250,21,46)" fg:x="338" fg:w="5"/><text x="27.5521%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.4637%" y="293" width="0.2423%" height="15" fill="rgb(215,212,21)" fg:x="340" fg:w="3"/><text x="27.7137%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.5444%" y="277" width="0.1616%" height="15" fill="rgb(211,35,12)" fg:x="341" fg:w="2"/><text x="27.7944%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.7868%" y="309" width="0.0808%" height="15" fill="rgb(231,184,16)" fg:x="344" fg:w="1"/><text x="28.0368%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.0291%" y="261" width="0.1616%" height="15" fill="rgb(242,140,15)" fg:x="347" fg:w="2"/><text x="28.2791%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.0291%" y="245" width="0.1616%" height="15" fill="rgb(220,37,14)" fg:x="347" fg:w="2"/><text x="28.2791%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.0291%" y="229" width="0.1616%" height="15" fill="rgb(223,146,22)" fg:x="347" fg:w="2"/><text x="28.2791%" y="239.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.0291%" y="213" width="0.1616%" height="15" fill="rgb(216,132,15)" fg:x="347" fg:w="2"/><text x="28.2791%" y="223.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="27.8675%" y="309" width="0.4039%" height="15" fill="rgb(248,83,5)" fg:x="345" fg:w="5"/><text x="28.1175%" y="319.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="27.9483%" y="293" width="0.3231%" height="15" fill="rgb(231,206,48)" fg:x="346" fg:w="4"/><text x="28.1983%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="27.9483%" y="277" width="0.3231%" height="15" fill="rgb(253,185,37)" fg:x="346" fg:w="4"/><text x="28.1983%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.1906%" y="261" width="0.0808%" height="15" fill="rgb(208,21,44)" fg:x="349" fg:w="1"/><text x="28.4406%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="28.3522%" y="293" width="0.3231%" height="15" fill="rgb(236,125,4)" fg:x="351" fg:w="4"/><text x="28.6022%" y="303.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.3522%" y="277" width="0.3231%" height="15" fill="rgb(226,134,25)" fg:x="351" fg:w="4"/><text x="28.6022%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.4330%" y="261" width="0.2423%" height="15" fill="rgb(250,201,12)" fg:x="352" fg:w="3"/><text x="28.6830%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.5137%" y="245" width="0.1616%" height="15" fill="rgb(225,92,18)" fg:x="353" fg:w="2"/><text x="28.7637%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.5945%" y="229" width="0.0808%" height="15" fill="rgb(227,35,22)" fg:x="354" fg:w="1"/><text x="28.8445%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.5945%" y="213" width="0.0808%" height="15" fill="rgb(214,180,52)" fg:x="354" fg:w="1"/><text x="28.8445%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.5945%" y="197" width="0.0808%" height="15" fill="rgb(233,55,38)" fg:x="354" fg:w="1"/><text x="28.8445%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.6753%" y="277" width="0.1616%" height="15" fill="rgb(249,171,43)" fg:x="355" fg:w="2"/><text x="28.9253%" y="287.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.6753%" y="261" width="0.1616%" height="15" fill="rgb(239,87,2)" fg:x="355" fg:w="2"/><text x="28.9253%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.6753%" y="245" width="0.1616%" height="15" fill="rgb(248,141,5)" fg:x="355" fg:w="2"/><text x="28.9253%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.6753%" y="229" width="0.1616%" height="15" fill="rgb(238,33,42)" fg:x="355" fg:w="2"/><text x="28.9253%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="28.6753%" y="293" width="0.2423%" height="15" fill="rgb(231,57,19)" fg:x="355" fg:w="3"/><text x="28.9253%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.8368%" y="277" width="0.0808%" height="15" fill="rgb(214,78,53)" fg:x="357" fg:w="1"/><text x="29.0868%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="28.2714%" y="309" width="0.8078%" height="15" fill="rgb(206,132,29)" fg:x="350" fg:w="10"/><text x="28.5214%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.9176%" y="293" width="0.1616%" height="15" fill="rgb(248,174,31)" fg:x="358" fg:w="2"/><text x="29.1676%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.45%)</title><rect x="27.7060%" y="325" width="1.4540%" height="15" fill="rgb(221,87,13)" fg:x="343" fg:w="18"/><text x="27.9560%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.0792%" y="309" width="0.0808%" height="15" fill="rgb(223,197,17)" fg:x="360" fg:w="1"/><text x="29.3292%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.91%)</title><rect x="26.3328%" y="341" width="2.9079%" height="15" fill="rgb(220,144,50)" fg:x="326" fg:w="36"/><text x="26.5828%" y="351.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.1599%" y="325" width="0.0808%" height="15" fill="rgb(244,201,11)" fg:x="361" fg:w="1"/><text x="29.4099%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.1599%" y="309" width="0.0808%" height="15" fill="rgb(249,81,34)" fg:x="361" fg:w="1"/><text x="29.4099%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1599%" y="293" width="0.0808%" height="15" fill="rgb(205,161,12)" fg:x="361" fg:w="1"/><text x="29.4099%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (47 samples, 3.80%)</title><rect x="25.9289%" y="357" width="3.7964%" height="15" fill="rgb(252,139,50)" fg:x="321" fg:w="47"/><text x="26.1789%" y="367.50">serd..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="29.2407%" y="341" width="0.4847%" height="15" fill="rgb(205,169,14)" fg:x="362" fg:w="6"/><text x="29.4907%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.4830%" y="325" width="0.2423%" height="15" fill="rgb(248,198,33)" fg:x="365" fg:w="3"/><text x="29.7330%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="29.4830%" y="309" width="0.2423%" height="15" fill="rgb(236,23,21)" fg:x="365" fg:w="3"/><text x="29.7330%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.8869%" y="325" width="0.0808%" height="15" fill="rgb(231,13,38)" fg:x="370" fg:w="1"/><text x="30.1369%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (62 samples, 5.01%)</title><rect x="25.0404%" y="373" width="5.0081%" height="15" fill="rgb(239,139,21)" fg:x="310" fg:w="62"/><text x="25.2904%" y="383.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="29.7254%" y="357" width="0.3231%" height="15" fill="rgb(222,164,45)" fg:x="368" fg:w="4"/><text x="29.9754%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.8869%" y="341" width="0.1616%" height="15" fill="rgb(230,52,27)" fg:x="370" fg:w="2"/><text x="30.1369%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.9677%" y="325" width="0.0808%" height="15" fill="rgb(227,143,42)" fg:x="371" fg:w="1"/><text x="30.2177%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.0485%" y="341" width="0.1616%" height="15" fill="rgb(249,127,1)" fg:x="372" fg:w="2"/><text x="30.2985%" y="351.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="30.2100%" y="325" width="0.2423%" height="15" fill="rgb(243,107,26)" fg:x="374" fg:w="3"/><text x="30.4600%" y="335.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="30.5331%" y="309" width="0.2423%" height="15" fill="rgb(225,7,45)" fg:x="378" fg:w="3"/><text x="30.7831%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.7754%" y="309" width="0.0808%" height="15" fill="rgb(241,88,38)" fg:x="381" fg:w="1"/><text x="31.0254%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7754%" y="293" width="0.0808%" height="15" fill="rgb(226,121,9)" fg:x="381" fg:w="1"/><text x="31.0254%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.8562%" y="293" width="0.1616%" height="15" fill="rgb(253,60,29)" fg:x="382" fg:w="2"/><text x="31.1062%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="31.0178%" y="293" width="0.0808%" height="15" fill="rgb(244,181,39)" fg:x="384" fg:w="1"/><text x="31.2678%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.0178%" y="277" width="0.0808%" height="15" fill="rgb(252,203,31)" fg:x="384" fg:w="1"/><text x="31.2678%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.0178%" y="261" width="0.0808%" height="15" fill="rgb(224,120,8)" fg:x="384" fg:w="1"/><text x="31.2678%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.0178%" y="245" width="0.0808%" height="15" fill="rgb(205,171,54)" fg:x="384" fg:w="1"/><text x="31.2678%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.0178%" y="229" width="0.0808%" height="15" fill="rgb(235,89,11)" fg:x="384" fg:w="1"/><text x="31.2678%" y="239.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.1793%" y="277" width="0.1616%" height="15" fill="rgb(212,180,28)" fg:x="386" fg:w="2"/><text x="31.4293%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="30.0485%" y="373" width="1.3732%" height="15" fill="rgb(247,84,49)" fg:x="372" fg:w="17"/><text x="30.2985%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.37%)</title><rect x="30.0485%" y="357" width="1.3732%" height="15" fill="rgb(236,187,52)" fg:x="372" fg:w="17"/><text x="30.2985%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="30.2100%" y="341" width="1.2116%" height="15" fill="rgb(227,24,15)" fg:x="374" fg:w="15"/><text x="30.4600%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="30.4523%" y="325" width="0.9693%" height="15" fill="rgb(227,211,13)" fg:x="377" fg:w="12"/><text x="30.7023%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="30.8562%" y="309" width="0.5654%" height="15" fill="rgb(245,52,14)" fg:x="382" fg:w="7"/><text x="31.1062%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="31.0985%" y="293" width="0.3231%" height="15" fill="rgb(225,185,13)" fg:x="385" fg:w="4"/><text x="31.3485%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.3409%" y="277" width="0.0808%" height="15" fill="rgb(217,160,29)" fg:x="388" fg:w="1"/><text x="31.5909%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3409%" y="261" width="0.0808%" height="15" fill="rgb(216,115,53)" fg:x="388" fg:w="1"/><text x="31.5909%" y="271.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="31.5024%" y="357" width="0.0808%" height="15" fill="rgb(236,99,5)" fg:x="390" fg:w="1"/><text x="31.7524%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="31.9063%" y="325" width="0.3231%" height="15" fill="rgb(222,60,38)" fg:x="395" fg:w="4"/><text x="32.1563%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.0679%" y="309" width="0.1616%" height="15" fill="rgb(212,82,22)" fg:x="397" fg:w="2"/><text x="32.3179%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="32.0679%" y="293" width="0.1616%" height="15" fill="rgb(214,48,28)" fg:x="397" fg:w="2"/><text x="32.3179%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.2294%" y="325" width="0.0808%" height="15" fill="rgb(245,196,50)" fg:x="399" fg:w="1"/><text x="32.4794%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2294%" y="309" width="0.0808%" height="15" fill="rgb(225,159,46)" fg:x="399" fg:w="1"/><text x="32.4794%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.2294%" y="293" width="0.0808%" height="15" fill="rgb(207,195,48)" fg:x="399" fg:w="1"/><text x="32.4794%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="32.2294%" y="277" width="0.0808%" height="15" fill="rgb(240,73,3)" fg:x="399" fg:w="1"/><text x="32.4794%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="32.3102%" y="309" width="0.0808%" height="15" fill="rgb(245,57,23)" fg:x="400" fg:w="1"/><text x="32.5602%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.3910%" y="293" width="0.1616%" height="15" fill="rgb(240,75,18)" fg:x="401" fg:w="2"/><text x="32.6410%" y="303.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="32.3102%" y="325" width="0.3231%" height="15" fill="rgb(238,168,12)" fg:x="400" fg:w="4"/><text x="32.5602%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="32.3910%" y="309" width="0.2423%" height="15" fill="rgb(226,20,40)" fg:x="401" fg:w="3"/><text x="32.6410%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.5525%" y="293" width="0.0808%" height="15" fill="rgb(224,130,35)" fg:x="403" fg:w="1"/><text x="32.8025%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.5525%" y="277" width="0.0808%" height="15" fill="rgb(225,63,41)" fg:x="403" fg:w="1"/><text x="32.8025%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="32.6333%" y="293" width="0.0808%" height="15" fill="rgb(219,3,3)" fg:x="404" fg:w="1"/><text x="32.8833%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="32.7141%" y="277" width="0.4847%" height="15" fill="rgb(218,157,4)" fg:x="405" fg:w="6"/><text x="32.9641%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="32.7948%" y="261" width="0.4039%" height="15" fill="rgb(232,76,36)" fg:x="406" fg:w="5"/><text x="33.0448%" y="271.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="32.9564%" y="245" width="0.2423%" height="15" fill="rgb(247,36,0)" fg:x="408" fg:w="3"/><text x="33.2064%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="33.1987%" y="277" width="0.1616%" height="15" fill="rgb(205,2,34)" fg:x="411" fg:w="2"/><text x="33.4487%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="33.1987%" y="261" width="0.1616%" height="15" fill="rgb(239,136,13)" fg:x="411" fg:w="2"/><text x="33.4487%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="33.2795%" y="245" width="0.0808%" height="15" fill="rgb(253,122,12)" fg:x="412" fg:w="1"/><text x="33.5295%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2795%" y="229" width="0.0808%" height="15" fill="rgb(222,174,7)" fg:x="412" fg:w="1"/><text x="33.5295%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2795%" y="213" width="0.0808%" height="15" fill="rgb(208,191,42)" fg:x="412" fg:w="1"/><text x="33.5295%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2795%" y="197" width="0.0808%" height="15" fill="rgb(237,212,15)" fg:x="412" fg:w="1"/><text x="33.5295%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.5218%" y="261" width="0.0808%" height="15" fill="rgb(215,65,20)" fg:x="415" fg:w="1"/><text x="33.7718%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6026%" y="245" width="0.0808%" height="15" fill="rgb(232,103,11)" fg:x="416" fg:w="1"/><text x="33.8526%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6026%" y="229" width="0.0808%" height="15" fill="rgb(235,148,18)" fg:x="416" fg:w="1"/><text x="33.8526%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6026%" y="213" width="0.0808%" height="15" fill="rgb(240,173,7)" fg:x="416" fg:w="1"/><text x="33.8526%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="33.6834%" y="229" width="0.1616%" height="15" fill="rgb(228,182,25)" fg:x="417" fg:w="2"/><text x="33.9334%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="33.8449%" y="213" width="0.4039%" height="15" fill="rgb(247,3,52)" fg:x="419" fg:w="5"/><text x="34.0949%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.0065%" y="197" width="0.2423%" height="15" fill="rgb(226,155,8)" fg:x="421" fg:w="3"/><text x="34.2565%" y="207.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="34.0065%" y="181" width="0.2423%" height="15" fill="rgb(243,195,38)" fg:x="421" fg:w="3"/><text x="34.2565%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="33.8449%" y="229" width="0.6462%" height="15" fill="rgb(254,181,33)" fg:x="419" fg:w="8"/><text x="34.0949%" y="239.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="34.2488%" y="213" width="0.2423%" height="15" fill="rgb(232,98,23)" fg:x="424" fg:w="3"/><text x="34.4988%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.3296%" y="197" width="0.1616%" height="15" fill="rgb(205,23,10)" fg:x="425" fg:w="2"/><text x="34.5796%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="33.6026%" y="261" width="0.9693%" height="15" fill="rgb(212,124,38)" fg:x="416" fg:w="12"/><text x="33.8526%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.89%)</title><rect x="33.6834%" y="245" width="0.8885%" height="15" fill="rgb(228,207,2)" fg:x="417" fg:w="11"/><text x="33.9334%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4911%" y="229" width="0.0808%" height="15" fill="rgb(215,120,22)" fg:x="427" fg:w="1"/><text x="34.7411%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.94%)</title><rect x="32.7141%" y="293" width="1.9386%" height="15" fill="rgb(251,172,33)" fg:x="405" fg:w="24"/><text x="32.9641%" y="303.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.29%)</title><rect x="33.3603%" y="277" width="1.2924%" height="15" fill="rgb(250,83,2)" fg:x="413" fg:w="16"/><text x="33.6103%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5719%" y="261" width="0.0808%" height="15" fill="rgb(210,132,53)" fg:x="428" fg:w="1"/><text x="34.8219%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.26%)</title><rect x="32.6333%" y="309" width="2.2617%" height="15" fill="rgb(221,208,36)" fg:x="404" fg:w="28"/><text x="32.8833%" y="319.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="34.6527%" y="293" width="0.2423%" height="15" fill="rgb(205,192,46)" fg:x="429" fg:w="3"/><text x="34.9027%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="34.6527%" y="277" width="0.2423%" height="15" fill="rgb(223,163,14)" fg:x="429" fg:w="3"/><text x="34.9027%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8950%" y="309" width="0.0808%" height="15" fill="rgb(218,41,28)" fg:x="432" fg:w="1"/><text x="35.1450%" y="319.50"></text></g><g><title>engine::session::Session::flush (135 samples, 10.90%)</title><rect x="24.1519%" y="485" width="10.9047%" height="15" fill="rgb(235,104,10)" fg:x="299" fg:w="135"/><text x="24.4019%" y="495.50">engine::session:..</text></g><g><title>engine::session::Session::save_changes (133 samples, 10.74%)</title><rect x="24.3134%" y="469" width="10.7431%" height="15" fill="rgb(246,17,4)" fg:x="301" fg:w="133"/><text x="24.5634%" y="479.50">engine::session:..</text></g><g><title>engine::session::state::State::close (133 samples, 10.74%)</title><rect x="24.3134%" y="453" width="10.7431%" height="15" fill="rgb(240,7,16)" fg:x="301" fg:w="133"/><text x="24.5634%" y="463.50">engine::session:..</text></g><g><title>engine::session::state::State::flush_entities (132 samples, 10.66%)</title><rect x="24.3942%" y="437" width="10.6624%" height="15" fill="rgb(213,160,23)" fg:x="302" fg:w="132"/><text x="24.6442%" y="447.50">engine::session:..</text></g><g><title>core::iter::adapters::try_process (127 samples, 10.26%)</title><rect x="24.7981%" y="421" width="10.2585%" height="15" fill="rgb(251,179,49)" fg:x="307" fg:w="127"/><text x="25.0481%" y="431.50">core::iter::ada..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (127 samples, 10.26%)</title><rect x="24.7981%" y="405" width="10.2585%" height="15" fill="rgb(247,198,10)" fg:x="307" fg:w="127"/><text x="25.0481%" y="415.50">&lt;alloc::vec::Ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (126 samples, 10.18%)</title><rect x="24.8788%" y="389" width="10.1777%" height="15" fill="rgb(220,65,29)" fg:x="308" fg:w="126"/><text x="25.1288%" y="399.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (45 samples, 3.63%)</title><rect x="31.4216%" y="373" width="3.6349%" height="15" fill="rgb(237,171,28)" fg:x="389" fg:w="45"/><text x="31.6716%" y="383.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (43 samples, 3.47%)</title><rect x="31.5832%" y="357" width="3.4733%" height="15" fill="rgb(228,44,26)" fg:x="391" fg:w="43"/><text x="31.8332%" y="367.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (43 samples, 3.47%)</title><rect x="31.5832%" y="341" width="3.4733%" height="15" fill="rgb(216,210,27)" fg:x="391" fg:w="43"/><text x="31.8332%" y="351.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (30 samples, 2.42%)</title><rect x="32.6333%" y="325" width="2.4233%" height="15" fill="rgb(252,10,17)" fg:x="404" fg:w="30"/><text x="32.8833%" y="335.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9758%" y="309" width="0.0808%" height="15" fill="rgb(214,172,30)" fg:x="433" fg:w="1"/><text x="35.2258%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9758%" y="293" width="0.0808%" height="15" fill="rgb(253,130,48)" fg:x="433" fg:w="1"/><text x="35.2258%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9758%" y="277" width="0.0808%" height="15" fill="rgb(226,99,43)" fg:x="433" fg:w="1"/><text x="35.2258%" y="287.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="35.0565%" y="485" width="0.0808%" height="15" fill="rgb(239,111,26)" fg:x="434" fg:w="1"/><text x="35.3065%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="35.0565%" y="469" width="0.0808%" height="15" fill="rgb(240,27,53)" fg:x="434" fg:w="1"/><text x="35.3065%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="35.0565%" y="453" width="0.0808%" height="15" fill="rgb(254,163,12)" fg:x="434" fg:w="1"/><text x="35.3065%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="35.0565%" y="437" width="0.0808%" height="15" fill="rgb(225,51,48)" fg:x="434" fg:w="1"/><text x="35.3065%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.0565%" y="421" width="0.0808%" height="15" fill="rgb(205,19,32)" fg:x="434" fg:w="1"/><text x="35.3065%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.0565%" y="405" width="0.0808%" height="15" fill="rgb(218,119,26)" fg:x="434" fg:w="1"/><text x="35.3065%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.1373%" y="421" width="0.0808%" height="15" fill="rgb(231,173,33)" fg:x="435" fg:w="1"/><text x="35.3873%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.1373%" y="405" width="0.0808%" height="15" fill="rgb(241,100,29)" fg:x="435" fg:w="1"/><text x="35.3873%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.1373%" y="437" width="0.1616%" height="15" fill="rgb(250,194,34)" fg:x="435" fg:w="2"/><text x="35.3873%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2181%" y="421" width="0.0808%" height="15" fill="rgb(215,23,50)" fg:x="436" fg:w="1"/><text x="35.4681%" y="431.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="35.1373%" y="485" width="0.2423%" height="15" fill="rgb(206,49,37)" fg:x="435" fg:w="3"/><text x="35.3873%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="35.1373%" y="469" width="0.2423%" height="15" fill="rgb(247,39,21)" fg:x="435" fg:w="3"/><text x="35.3873%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.24%)</title><rect x="35.1373%" y="453" width="0.2423%" height="15" fill="rgb(209,220,15)" fg:x="435" fg:w="3"/><text x="35.3873%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="35.2989%" y="437" width="0.0808%" height="15" fill="rgb(206,41,33)" fg:x="437" fg:w="1"/><text x="35.5489%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2989%" y="421" width="0.0808%" height="15" fill="rgb(221,225,45)" fg:x="437" fg:w="1"/><text x="35.5489%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="35.3796%" y="389" width="0.2423%" height="15" fill="rgb(216,27,18)" fg:x="438" fg:w="3"/><text x="35.6296%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="35.3796%" y="373" width="0.2423%" height="15" fill="rgb(250,193,34)" fg:x="438" fg:w="3"/><text x="35.6296%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.4604%" y="357" width="0.1616%" height="15" fill="rgb(227,215,20)" fg:x="439" fg:w="2"/><text x="35.7104%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.4604%" y="341" width="0.1616%" height="15" fill="rgb(242,211,27)" fg:x="439" fg:w="2"/><text x="35.7104%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="35.4604%" y="325" width="0.1616%" height="15" fill="rgb(229,190,30)" fg:x="439" fg:w="2"/><text x="35.7104%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="35.4604%" y="309" width="0.1616%" height="15" fill="rgb(253,31,29)" fg:x="439" fg:w="2"/><text x="35.7104%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="35.4604%" y="293" width="0.1616%" height="15" fill="rgb(229,177,52)" fg:x="439" fg:w="2"/><text x="35.7104%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.4604%" y="277" width="0.1616%" height="15" fill="rgb(226,88,8)" fg:x="439" fg:w="2"/><text x="35.7104%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.4604%" y="261" width="0.1616%" height="15" fill="rgb(214,55,27)" fg:x="439" fg:w="2"/><text x="35.7104%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="35.4604%" y="245" width="0.1616%" height="15" fill="rgb(233,202,5)" fg:x="439" fg:w="2"/><text x="35.7104%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="35.4604%" y="229" width="0.1616%" height="15" fill="rgb(251,49,30)" fg:x="439" fg:w="2"/><text x="35.7104%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="35.4604%" y="213" width="0.1616%" height="15" fill="rgb(235,18,52)" fg:x="439" fg:w="2"/><text x="35.7104%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="35.4604%" y="197" width="0.1616%" height="15" fill="rgb(250,111,51)" fg:x="439" fg:w="2"/><text x="35.7104%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.4604%" y="181" width="0.1616%" height="15" fill="rgb(218,13,25)" fg:x="439" fg:w="2"/><text x="35.7104%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="35.3796%" y="405" width="0.3231%" height="15" fill="rgb(248,96,7)" fg:x="438" fg:w="4"/><text x="35.6296%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6220%" y="389" width="0.0808%" height="15" fill="rgb(217,31,15)" fg:x="441" fg:w="1"/><text x="35.8720%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="35.3796%" y="453" width="0.4039%" height="15" fill="rgb(228,59,49)" fg:x="438" fg:w="5"/><text x="35.6296%" y="463.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="35.3796%" y="437" width="0.4039%" height="15" fill="rgb(210,152,38)" fg:x="438" fg:w="5"/><text x="35.6296%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="35.3796%" y="421" width="0.4039%" height="15" fill="rgb(206,71,11)" fg:x="438" fg:w="5"/><text x="35.6296%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.7027%" y="405" width="0.0808%" height="15" fill="rgb(244,199,5)" fg:x="442" fg:w="1"/><text x="35.9527%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7027%" y="389" width="0.0808%" height="15" fill="rgb(253,49,1)" fg:x="442" fg:w="1"/><text x="35.9527%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="35.7027%" y="373" width="0.0808%" height="15" fill="rgb(225,206,40)" fg:x="442" fg:w="1"/><text x="35.9527%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.7835%" y="421" width="0.0808%" height="15" fill="rgb(243,116,47)" fg:x="443" fg:w="1"/><text x="36.0335%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.7835%" y="405" width="0.0808%" height="15" fill="rgb(219,225,16)" fg:x="443" fg:w="1"/><text x="36.0335%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.7835%" y="389" width="0.0808%" height="15" fill="rgb(233,29,47)" fg:x="443" fg:w="1"/><text x="36.0335%" y="399.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="35.7835%" y="437" width="0.1616%" height="15" fill="rgb(250,179,18)" fg:x="443" fg:w="2"/><text x="36.0335%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.8643%" y="421" width="0.0808%" height="15" fill="rgb(215,176,6)" fg:x="444" fg:w="1"/><text x="36.1143%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.8643%" y="405" width="0.0808%" height="15" fill="rgb(214,117,39)" fg:x="444" fg:w="1"/><text x="36.1143%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.8643%" y="389" width="0.0808%" height="15" fill="rgb(247,183,36)" fg:x="444" fg:w="1"/><text x="36.1143%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8643%" y="373" width="0.0808%" height="15" fill="rgb(237,200,3)" fg:x="444" fg:w="1"/><text x="36.1143%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9451%" y="405" width="0.0808%" height="15" fill="rgb(212,220,24)" fg:x="445" fg:w="1"/><text x="36.1951%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.9451%" y="389" width="0.0808%" height="15" fill="rgb(245,216,20)" fg:x="445" fg:w="1"/><text x="36.1951%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9451%" y="373" width="0.0808%" height="15" fill="rgb(219,124,7)" fg:x="445" fg:w="1"/><text x="36.1951%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.9451%" y="357" width="0.0808%" height="15" fill="rgb(227,167,8)" fg:x="445" fg:w="1"/><text x="36.1951%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="35.7835%" y="453" width="0.3231%" height="15" fill="rgb(241,37,2)" fg:x="443" fg:w="4"/><text x="36.0335%" y="463.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="35.9451%" y="437" width="0.1616%" height="15" fill="rgb(238,134,33)" fg:x="445" fg:w="2"/><text x="36.1951%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="35.9451%" y="421" width="0.1616%" height="15" fill="rgb(248,48,27)" fg:x="445" fg:w="2"/><text x="36.1951%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="36.0258%" y="405" width="0.0808%" height="15" fill="rgb(212,14,16)" fg:x="446" fg:w="1"/><text x="36.2758%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.1066%" y="405" width="0.0808%" height="15" fill="rgb(217,205,37)" fg:x="447" fg:w="1"/><text x="36.3566%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="36.1066%" y="389" width="0.0808%" height="15" fill="rgb(233,185,47)" fg:x="447" fg:w="1"/><text x="36.3566%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.1066%" y="373" width="0.0808%" height="15" fill="rgb(244,88,8)" fg:x="447" fg:w="1"/><text x="36.3566%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1066%" y="357" width="0.0808%" height="15" fill="rgb(213,0,20)" fg:x="447" fg:w="1"/><text x="36.3566%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.1066%" y="341" width="0.0808%" height="15" fill="rgb(238,159,36)" fg:x="447" fg:w="1"/><text x="36.3566%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1066%" y="325" width="0.0808%" height="15" fill="rgb(253,173,17)" fg:x="447" fg:w="1"/><text x="36.3566%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.1066%" y="309" width="0.0808%" height="15" fill="rgb(221,23,28)" fg:x="447" fg:w="1"/><text x="36.3566%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="36.1874%" y="389" width="0.0808%" height="15" fill="rgb(218,113,15)" fg:x="448" fg:w="1"/><text x="36.4374%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.1874%" y="373" width="0.0808%" height="15" fill="rgb(233,58,3)" fg:x="448" fg:w="1"/><text x="36.4374%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.1874%" y="357" width="0.0808%" height="15" fill="rgb(250,46,35)" fg:x="448" fg:w="1"/><text x="36.4374%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.1874%" y="341" width="0.0808%" height="15" fill="rgb(210,169,11)" fg:x="448" fg:w="1"/><text x="36.4374%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1874%" y="325" width="0.0808%" height="15" fill="rgb(246,88,19)" fg:x="448" fg:w="1"/><text x="36.4374%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2682%" y="357" width="0.0808%" height="15" fill="rgb(206,81,49)" fg:x="449" fg:w="1"/><text x="36.5182%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3489%" y="357" width="0.0808%" height="15" fill="rgb(232,144,18)" fg:x="450" fg:w="1"/><text x="36.5989%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3489%" y="341" width="0.0808%" height="15" fill="rgb(235,2,27)" fg:x="450" fg:w="1"/><text x="36.5989%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3489%" y="325" width="0.0808%" height="15" fill="rgb(239,157,39)" fg:x="450" fg:w="1"/><text x="36.5989%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="36.1066%" y="437" width="0.4039%" height="15" fill="rgb(220,11,17)" fg:x="447" fg:w="5"/><text x="36.3566%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="36.1066%" y="421" width="0.4039%" height="15" fill="rgb(243,94,50)" fg:x="447" fg:w="5"/><text x="36.3566%" y="431.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="36.1874%" y="405" width="0.3231%" height="15" fill="rgb(218,22,0)" fg:x="448" fg:w="4"/><text x="36.4374%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="36.2682%" y="389" width="0.2423%" height="15" fill="rgb(249,70,21)" fg:x="449" fg:w="3"/><text x="36.5182%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="36.2682%" y="373" width="0.2423%" height="15" fill="rgb(245,111,46)" fg:x="449" fg:w="3"/><text x="36.5182%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.4297%" y="357" width="0.0808%" height="15" fill="rgb(244,183,12)" fg:x="451" fg:w="1"/><text x="36.6797%" y="367.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="36.4297%" y="341" width="0.0808%" height="15" fill="rgb(207,117,0)" fg:x="451" fg:w="1"/><text x="36.6797%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="36.4297%" y="325" width="0.0808%" height="15" fill="rgb(206,20,43)" fg:x="451" fg:w="1"/><text x="36.6797%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4297%" y="309" width="0.0808%" height="15" fill="rgb(221,104,11)" fg:x="451" fg:w="1"/><text x="36.6797%" y="319.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="36.5105%" y="437" width="0.0808%" height="15" fill="rgb(254,36,50)" fg:x="452" fg:w="1"/><text x="36.7605%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5913%" y="405" width="0.0808%" height="15" fill="rgb(252,17,15)" fg:x="453" fg:w="1"/><text x="36.8413%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6721%" y="405" width="0.0808%" height="15" fill="rgb(219,129,43)" fg:x="454" fg:w="1"/><text x="36.9221%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6721%" y="389" width="0.0808%" height="15" fill="rgb(205,34,45)" fg:x="454" fg:w="1"/><text x="36.9221%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.6721%" y="373" width="0.0808%" height="15" fill="rgb(251,201,32)" fg:x="454" fg:w="1"/><text x="36.9221%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="36.7528%" y="405" width="0.0808%" height="15" fill="rgb(205,56,0)" fg:x="455" fg:w="1"/><text x="37.0028%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.7528%" y="389" width="0.0808%" height="15" fill="rgb(211,193,27)" fg:x="455" fg:w="1"/><text x="37.0028%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7528%" y="373" width="0.0808%" height="15" fill="rgb(231,100,42)" fg:x="455" fg:w="1"/><text x="37.0028%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7528%" y="357" width="0.0808%" height="15" fill="rgb(245,85,27)" fg:x="455" fg:w="1"/><text x="37.0028%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7528%" y="341" width="0.0808%" height="15" fill="rgb(241,76,24)" fg:x="455" fg:w="1"/><text x="37.0028%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8336%" y="405" width="0.0808%" height="15" fill="rgb(249,157,15)" fg:x="456" fg:w="1"/><text x="37.0836%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.8336%" y="389" width="0.0808%" height="15" fill="rgb(222,218,25)" fg:x="456" fg:w="1"/><text x="37.0836%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8336%" y="373" width="0.0808%" height="15" fill="rgb(252,156,52)" fg:x="456" fg:w="1"/><text x="37.0836%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8336%" y="357" width="0.0808%" height="15" fill="rgb(211,185,7)" fg:x="456" fg:w="1"/><text x="37.0836%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8336%" y="341" width="0.0808%" height="15" fill="rgb(234,108,24)" fg:x="456" fg:w="1"/><text x="37.0836%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.9144%" y="341" width="0.0808%" height="15" fill="rgb(227,218,2)" fg:x="457" fg:w="1"/><text x="37.1644%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.9952%" y="341" width="0.0808%" height="15" fill="rgb(224,0,36)" fg:x="458" fg:w="1"/><text x="37.2452%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="36.9144%" y="405" width="0.3231%" height="15" fill="rgb(233,201,10)" fg:x="457" fg:w="4"/><text x="37.1644%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="36.9144%" y="389" width="0.3231%" height="15" fill="rgb(252,209,14)" fg:x="457" fg:w="4"/><text x="37.1644%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="36.9144%" y="373" width="0.3231%" height="15" fill="rgb(205,93,49)" fg:x="457" fg:w="4"/><text x="37.1644%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="36.9144%" y="357" width="0.3231%" height="15" fill="rgb(234,116,45)" fg:x="457" fg:w="4"/><text x="37.1644%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="37.0759%" y="341" width="0.1616%" height="15" fill="rgb(248,89,35)" fg:x="459" fg:w="2"/><text x="37.3259%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="37.0759%" y="325" width="0.1616%" height="15" fill="rgb(233,167,45)" fg:x="459" fg:w="2"/><text x="37.3259%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="37.0759%" y="309" width="0.1616%" height="15" fill="rgb(248,228,14)" fg:x="459" fg:w="2"/><text x="37.3259%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.0759%" y="293" width="0.1616%" height="15" fill="rgb(246,91,14)" fg:x="459" fg:w="2"/><text x="37.3259%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1567%" y="277" width="0.0808%" height="15" fill="rgb(227,142,5)" fg:x="460" fg:w="1"/><text x="37.4067%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1567%" y="261" width="0.0808%" height="15" fill="rgb(221,63,33)" fg:x="460" fg:w="1"/><text x="37.4067%" y="271.50"></text></g><g><title>engine::session::internal::Entities::add_entity (15 samples, 1.21%)</title><rect x="36.1066%" y="453" width="1.2116%" height="15" fill="rgb(233,49,0)" fg:x="447" fg:w="15"/><text x="36.3566%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.73%)</title><rect x="36.5913%" y="437" width="0.7270%" height="15" fill="rgb(251,115,38)" fg:x="453" fg:w="9"/><text x="36.8413%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="36.5913%" y="421" width="0.7270%" height="15" fill="rgb(231,214,32)" fg:x="453" fg:w="9"/><text x="36.8413%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="37.2375%" y="405" width="0.0808%" height="15" fill="rgb(248,73,46)" fg:x="461" fg:w="1"/><text x="37.4875%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.2375%" y="389" width="0.0808%" height="15" fill="rgb(237,156,4)" fg:x="461" fg:w="1"/><text x="37.4875%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (25 samples, 2.02%)</title><rect x="35.3796%" y="469" width="2.0194%" height="15" fill="rgb(227,132,2)" fg:x="438" fg:w="25"/><text x="35.6296%" y="479.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="37.3183%" y="453" width="0.0808%" height="15" fill="rgb(248,161,9)" fg:x="462" fg:w="1"/><text x="37.5683%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="37.3183%" y="437" width="0.0808%" height="15" fill="rgb(238,77,38)" fg:x="462" fg:w="1"/><text x="37.5683%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.3183%" y="421" width="0.0808%" height="15" fill="rgb(222,166,40)" fg:x="462" fg:w="1"/><text x="37.5683%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.3990%" y="421" width="0.0808%" height="15" fill="rgb(214,168,45)" fg:x="463" fg:w="1"/><text x="37.6490%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.3990%" y="437" width="0.1616%" height="15" fill="rgb(226,64,37)" fg:x="463" fg:w="2"/><text x="37.6490%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4798%" y="421" width="0.0808%" height="15" fill="rgb(232,210,43)" fg:x="464" fg:w="1"/><text x="37.7298%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="37.3990%" y="469" width="0.2423%" height="15" fill="rgb(214,76,33)" fg:x="463" fg:w="3"/><text x="37.6490%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.3990%" y="453" width="0.2423%" height="15" fill="rgb(210,78,5)" fg:x="463" fg:w="3"/><text x="37.6490%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5606%" y="437" width="0.0808%" height="15" fill="rgb(211,107,37)" fg:x="465" fg:w="1"/><text x="37.8106%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.8837%" y="373" width="0.0808%" height="15" fill="rgb(249,67,16)" fg:x="469" fg:w="1"/><text x="38.1337%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.8837%" y="357" width="0.0808%" height="15" fill="rgb(222,114,31)" fg:x="469" fg:w="1"/><text x="38.1337%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.8837%" y="341" width="0.0808%" height="15" fill="rgb(242,118,19)" fg:x="469" fg:w="1"/><text x="38.1337%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.8837%" y="325" width="0.0808%" height="15" fill="rgb(223,115,1)" fg:x="469" fg:w="1"/><text x="38.1337%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.8837%" y="309" width="0.0808%" height="15" fill="rgb(241,182,54)" fg:x="469" fg:w="1"/><text x="38.1337%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8837%" y="293" width="0.0808%" height="15" fill="rgb(244,166,36)" fg:x="469" fg:w="1"/><text x="38.1337%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8837%" y="277" width="0.0808%" height="15" fill="rgb(241,52,43)" fg:x="469" fg:w="1"/><text x="38.1337%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.8837%" y="261" width="0.0808%" height="15" fill="rgb(236,82,9)" fg:x="469" fg:w="1"/><text x="38.1337%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.8837%" y="245" width="0.0808%" height="15" fill="rgb(241,119,0)" fg:x="469" fg:w="1"/><text x="38.1337%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.8837%" y="229" width="0.0808%" height="15" fill="rgb(221,19,22)" fg:x="469" fg:w="1"/><text x="38.1337%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.8837%" y="213" width="0.0808%" height="15" fill="rgb(254,144,35)" fg:x="469" fg:w="1"/><text x="38.1337%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8837%" y="197" width="0.0808%" height="15" fill="rgb(246,132,30)" fg:x="469" fg:w="1"/><text x="38.1337%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="37.8029%" y="389" width="0.4847%" height="15" fill="rgb(234,69,28)" fg:x="468" fg:w="6"/><text x="38.0529%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="37.9645%" y="373" width="0.3231%" height="15" fill="rgb(219,106,47)" fg:x="470" fg:w="4"/><text x="38.2145%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.65%)</title><rect x="37.7221%" y="421" width="0.6462%" height="15" fill="rgb(218,79,24)" fg:x="467" fg:w="8"/><text x="37.9721%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.65%)</title><rect x="37.7221%" y="405" width="0.6462%" height="15" fill="rgb(225,26,21)" fg:x="467" fg:w="8"/><text x="37.9721%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2876%" y="389" width="0.0808%" height="15" fill="rgb(217,68,49)" fg:x="474" fg:w="1"/><text x="38.5376%" y="399.50"></text></g><g><title>plugins_core::build::Build::save (38 samples, 3.07%)</title><rect x="35.3796%" y="485" width="3.0695%" height="15" fill="rgb(220,204,28)" fg:x="438" fg:w="38"/><text x="35.6296%" y="495.50">plu..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.81%)</title><rect x="37.6414%" y="469" width="0.8078%" height="15" fill="rgb(237,208,43)" fg:x="466" fg:w="10"/><text x="37.8914%" y="479.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.81%)</title><rect x="37.6414%" y="453" width="0.8078%" height="15" fill="rgb(213,97,42)" fg:x="466" fg:w="10"/><text x="37.8914%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (10 samples, 0.81%)</title><rect x="37.6414%" y="437" width="0.8078%" height="15" fill="rgb(238,96,52)" fg:x="466" fg:w="10"/><text x="37.8914%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.3683%" y="421" width="0.0808%" height="15" fill="rgb(228,14,13)" fg:x="475" fg:w="1"/><text x="38.6183%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3683%" y="405" width="0.0808%" height="15" fill="rgb(219,123,13)" fg:x="475" fg:w="1"/><text x="38.6183%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.3683%" y="389" width="0.0808%" height="15" fill="rgb(216,144,17)" fg:x="475" fg:w="1"/><text x="38.6183%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3683%" y="373" width="0.0808%" height="15" fill="rgb(230,228,29)" fg:x="475" fg:w="1"/><text x="38.6183%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.3683%" y="357" width="0.0808%" height="15" fill="rgb(233,18,5)" fg:x="475" fg:w="1"/><text x="38.6183%" y="367.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="38.4491%" y="485" width="0.0808%" height="15" fill="rgb(233,197,12)" fg:x="476" fg:w="1"/><text x="38.6991%" y="495.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="38.4491%" y="469" width="0.0808%" height="15" fill="rgb(234,140,29)" fg:x="476" fg:w="1"/><text x="38.6991%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="38.4491%" y="453" width="0.0808%" height="15" fill="rgb(233,113,19)" fg:x="476" fg:w="1"/><text x="38.6991%" y="463.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="38.4491%" y="437" width="0.0808%" height="15" fill="rgb(246,209,13)" fg:x="476" fg:w="1"/><text x="38.6991%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.4491%" y="421" width="0.0808%" height="15" fill="rgb(242,79,54)" fg:x="476" fg:w="1"/><text x="38.6991%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.4491%" y="405" width="0.0808%" height="15" fill="rgb(219,73,16)" fg:x="476" fg:w="1"/><text x="38.6991%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="38.5299%" y="453" width="0.0808%" height="15" fill="rgb(224,52,10)" fg:x="477" fg:w="1"/><text x="38.7799%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="38.6107%" y="373" width="0.2423%" height="15" fill="rgb(237,179,5)" fg:x="478" fg:w="3"/><text x="38.8607%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="38.6107%" y="357" width="0.2423%" height="15" fill="rgb(231,20,6)" fg:x="478" fg:w="3"/><text x="38.8607%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="38.6107%" y="341" width="0.2423%" height="15" fill="rgb(253,171,45)" fg:x="478" fg:w="3"/><text x="38.8607%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="38.6107%" y="325" width="0.2423%" height="15" fill="rgb(230,75,49)" fg:x="478" fg:w="3"/><text x="38.8607%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="38.6107%" y="309" width="0.2423%" height="15" fill="rgb(216,83,46)" fg:x="478" fg:w="3"/><text x="38.8607%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="38.6107%" y="293" width="0.2423%" height="15" fill="rgb(236,56,9)" fg:x="478" fg:w="3"/><text x="38.8607%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="38.6107%" y="277" width="0.2423%" height="15" fill="rgb(215,28,34)" fg:x="478" fg:w="3"/><text x="38.8607%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="38.6107%" y="261" width="0.2423%" height="15" fill="rgb(230,222,20)" fg:x="478" fg:w="3"/><text x="38.8607%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="38.6107%" y="245" width="0.2423%" height="15" fill="rgb(235,209,51)" fg:x="478" fg:w="3"/><text x="38.8607%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="38.6107%" y="229" width="0.2423%" height="15" fill="rgb(235,167,1)" fg:x="478" fg:w="3"/><text x="38.8607%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="38.6107%" y="213" width="0.2423%" height="15" fill="rgb(248,220,0)" fg:x="478" fg:w="3"/><text x="38.8607%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="38.6107%" y="197" width="0.2423%" height="15" fill="rgb(239,0,18)" fg:x="478" fg:w="3"/><text x="38.8607%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="38.6107%" y="181" width="0.2423%" height="15" fill="rgb(229,179,11)" fg:x="478" fg:w="3"/><text x="38.8607%" y="191.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="38.6107%" y="165" width="0.2423%" height="15" fill="rgb(226,116,53)" fg:x="478" fg:w="3"/><text x="38.8607%" y="175.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="38.6107%" y="149" width="0.2423%" height="15" fill="rgb(218,1,49)" fg:x="478" fg:w="3"/><text x="38.8607%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="38.6107%" y="421" width="0.3231%" height="15" fill="rgb(208,184,47)" fg:x="478" fg:w="4"/><text x="38.8607%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="38.6107%" y="405" width="0.3231%" height="15" fill="rgb(238,174,3)" fg:x="478" fg:w="4"/><text x="38.8607%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="38.6107%" y="389" width="0.3231%" height="15" fill="rgb(247,188,6)" fg:x="478" fg:w="4"/><text x="38.8607%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.8530%" y="373" width="0.0808%" height="15" fill="rgb(211,165,46)" fg:x="481" fg:w="1"/><text x="39.1030%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8530%" y="357" width="0.0808%" height="15" fill="rgb(222,190,10)" fg:x="481" fg:w="1"/><text x="39.1030%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.8530%" y="341" width="0.0808%" height="15" fill="rgb(206,185,3)" fg:x="481" fg:w="1"/><text x="39.1030%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8530%" y="325" width="0.0808%" height="15" fill="rgb(244,125,37)" fg:x="481" fg:w="1"/><text x="39.1030%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.8530%" y="309" width="0.0808%" height="15" fill="rgb(211,43,7)" fg:x="481" fg:w="1"/><text x="39.1030%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9338%" y="373" width="0.1616%" height="15" fill="rgb(250,41,42)" fg:x="482" fg:w="2"/><text x="39.1838%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9338%" y="357" width="0.1616%" height="15" fill="rgb(254,54,42)" fg:x="482" fg:w="2"/><text x="39.1838%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9338%" y="341" width="0.1616%" height="15" fill="rgb(213,71,43)" fg:x="482" fg:w="2"/><text x="39.1838%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.0145%" y="325" width="0.0808%" height="15" fill="rgb(249,3,44)" fg:x="483" fg:w="1"/><text x="39.2645%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.0145%" y="309" width="0.0808%" height="15" fill="rgb(229,80,41)" fg:x="483" fg:w="1"/><text x="39.2645%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.0145%" y="293" width="0.0808%" height="15" fill="rgb(231,25,28)" fg:x="483" fg:w="1"/><text x="39.2645%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.0145%" y="277" width="0.0808%" height="15" fill="rgb(208,79,48)" fg:x="483" fg:w="1"/><text x="39.2645%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.0145%" y="261" width="0.0808%" height="15" fill="rgb(207,196,38)" fg:x="483" fg:w="1"/><text x="39.2645%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.0145%" y="245" width="0.0808%" height="15" fill="rgb(228,105,49)" fg:x="483" fg:w="1"/><text x="39.2645%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.0145%" y="229" width="0.0808%" height="15" fill="rgb(237,99,15)" fg:x="483" fg:w="1"/><text x="39.2645%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.0145%" y="213" width="0.0808%" height="15" fill="rgb(224,207,46)" fg:x="483" fg:w="1"/><text x="39.2645%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.0145%" y="197" width="0.0808%" height="15" fill="rgb(249,117,50)" fg:x="483" fg:w="1"/><text x="39.2645%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.0145%" y="181" width="0.0808%" height="15" fill="rgb(248,17,13)" fg:x="483" fg:w="1"/><text x="39.2645%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.0145%" y="165" width="0.0808%" height="15" fill="rgb(228,187,36)" fg:x="483" fg:w="1"/><text x="39.2645%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0145%" y="149" width="0.0808%" height="15" fill="rgb(234,132,20)" fg:x="483" fg:w="1"/><text x="39.2645%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0953%" y="373" width="0.0808%" height="15" fill="rgb(209,170,46)" fg:x="484" fg:w="1"/><text x="39.3453%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.1761%" y="309" width="0.0808%" height="15" fill="rgb(237,23,19)" fg:x="485" fg:w="1"/><text x="39.4261%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (9 samples, 0.73%)</title><rect x="38.6107%" y="453" width="0.7270%" height="15" fill="rgb(227,21,26)" fg:x="478" fg:w="9"/><text x="38.8607%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.73%)</title><rect x="38.6107%" y="437" width="0.7270%" height="15" fill="rgb(222,220,48)" fg:x="478" fg:w="9"/><text x="38.8607%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="38.9338%" y="421" width="0.4039%" height="15" fill="rgb(214,9,16)" fg:x="482" fg:w="5"/><text x="39.1838%" y="431.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="38.9338%" y="405" width="0.4039%" height="15" fill="rgb(209,73,30)" fg:x="482" fg:w="5"/><text x="39.1838%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="38.9338%" y="389" width="0.4039%" height="15" fill="rgb(207,20,33)" fg:x="482" fg:w="5"/><text x="39.1838%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.1761%" y="373" width="0.1616%" height="15" fill="rgb(219,153,12)" fg:x="485" fg:w="2"/><text x="39.4261%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.1761%" y="357" width="0.1616%" height="15" fill="rgb(235,97,25)" fg:x="485" fg:w="2"/><text x="39.4261%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="39.1761%" y="341" width="0.1616%" height="15" fill="rgb(244,30,34)" fg:x="485" fg:w="2"/><text x="39.4261%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.1761%" y="325" width="0.1616%" height="15" fill="rgb(214,106,45)" fg:x="485" fg:w="2"/><text x="39.4261%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="39.2569%" y="309" width="0.0808%" height="15" fill="rgb(226,41,9)" fg:x="486" fg:w="1"/><text x="39.5069%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2569%" y="293" width="0.0808%" height="15" fill="rgb(253,139,29)" fg:x="486" fg:w="1"/><text x="39.5069%" y="303.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (11 samples, 0.89%)</title><rect x="38.5299%" y="485" width="0.8885%" height="15" fill="rgb(213,205,39)" fg:x="477" fg:w="11"/><text x="38.7799%" y="495.50"></text></g><g><title>plugins_core::tools::set_occupying (11 samples, 0.89%)</title><rect x="38.5299%" y="469" width="0.8885%" height="15" fill="rgb(209,27,10)" fg:x="477" fg:w="11"/><text x="38.7799%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="39.3376%" y="453" width="0.0808%" height="15" fill="rgb(249,142,16)" fg:x="487" fg:w="1"/><text x="39.5876%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="39.3376%" y="437" width="0.0808%" height="15" fill="rgb(242,65,12)" fg:x="487" fg:w="1"/><text x="39.5876%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3376%" y="421" width="0.0808%" height="15" fill="rgb(232,48,10)" fg:x="487" fg:w="1"/><text x="39.5876%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3376%" y="405" width="0.0808%" height="15" fill="rgb(253,67,19)" fg:x="487" fg:w="1"/><text x="39.5876%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="39.3376%" y="389" width="0.0808%" height="15" fill="rgb(227,93,29)" fg:x="487" fg:w="1"/><text x="39.5876%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.3376%" y="373" width="0.0808%" height="15" fill="rgb(226,189,53)" fg:x="487" fg:w="1"/><text x="39.5876%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.3376%" y="357" width="0.0808%" height="15" fill="rgb(223,224,1)" fg:x="487" fg:w="1"/><text x="39.5876%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4184%" y="229" width="0.0808%" height="15" fill="rgb(221,84,32)" fg:x="488" fg:w="1"/><text x="39.6684%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.4184%" y="325" width="0.1616%" height="15" fill="rgb(214,189,28)" fg:x="488" fg:w="2"/><text x="39.6684%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.4184%" y="309" width="0.1616%" height="15" fill="rgb(234,7,52)" fg:x="488" fg:w="2"/><text x="39.6684%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="39.4184%" y="293" width="0.1616%" height="15" fill="rgb(249,73,31)" fg:x="488" fg:w="2"/><text x="39.6684%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="39.4184%" y="277" width="0.1616%" height="15" fill="rgb(253,153,41)" fg:x="488" fg:w="2"/><text x="39.6684%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="39.4184%" y="261" width="0.1616%" height="15" fill="rgb(249,52,34)" fg:x="488" fg:w="2"/><text x="39.6684%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="39.4184%" y="245" width="0.1616%" height="15" fill="rgb(236,177,47)" fg:x="488" fg:w="2"/><text x="39.6684%" y="255.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="39.4992%" y="229" width="0.0808%" height="15" fill="rgb(252,185,45)" fg:x="489" fg:w="1"/><text x="39.7492%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.4184%" y="453" width="0.2423%" height="15" fill="rgb(251,15,30)" fg:x="488" fg:w="3"/><text x="39.6684%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="39.4184%" y="437" width="0.2423%" height="15" fill="rgb(233,31,4)" fg:x="488" fg:w="3"/><text x="39.6684%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.4184%" y="421" width="0.2423%" height="15" fill="rgb(254,44,24)" fg:x="488" fg:w="3"/><text x="39.6684%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="39.4184%" y="405" width="0.2423%" height="15" fill="rgb(218,54,1)" fg:x="488" fg:w="3"/><text x="39.6684%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="39.4184%" y="389" width="0.2423%" height="15" fill="rgb(243,209,39)" fg:x="488" fg:w="3"/><text x="39.6684%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="39.4184%" y="373" width="0.2423%" height="15" fill="rgb(206,75,33)" fg:x="488" fg:w="3"/><text x="39.6684%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="39.4184%" y="357" width="0.2423%" height="15" fill="rgb(223,108,18)" fg:x="488" fg:w="3"/><text x="39.6684%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="39.4184%" y="341" width="0.2423%" height="15" fill="rgb(244,89,31)" fg:x="488" fg:w="3"/><text x="39.6684%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.5800%" y="325" width="0.0808%" height="15" fill="rgb(222,167,27)" fg:x="490" fg:w="1"/><text x="39.8300%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.5800%" y="309" width="0.0808%" height="15" fill="rgb(247,41,16)" fg:x="490" fg:w="1"/><text x="39.8300%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.7415%" y="421" width="0.0808%" height="15" fill="rgb(233,168,40)" fg:x="492" fg:w="1"/><text x="39.9915%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (7 samples, 0.57%)</title><rect x="39.4184%" y="469" width="0.5654%" height="15" fill="rgb(205,211,8)" fg:x="488" fg:w="7"/><text x="39.6684%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="39.6607%" y="453" width="0.3231%" height="15" fill="rgb(238,105,11)" fg:x="491" fg:w="4"/><text x="39.9107%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="39.6607%" y="437" width="0.3231%" height="15" fill="rgb(223,142,52)" fg:x="491" fg:w="4"/><text x="39.9107%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.8223%" y="421" width="0.1616%" height="15" fill="rgb(238,51,33)" fg:x="493" fg:w="2"/><text x="40.0723%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.8223%" y="405" width="0.1616%" height="15" fill="rgb(231,188,43)" fg:x="493" fg:w="2"/><text x="40.0723%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.9031%" y="389" width="0.0808%" height="15" fill="rgb(216,92,17)" fg:x="494" fg:w="1"/><text x="40.1531%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.9031%" y="373" width="0.0808%" height="15" fill="rgb(228,2,40)" fg:x="494" fg:w="1"/><text x="40.1531%" y="383.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (9 samples, 0.73%)</title><rect x="39.4184%" y="485" width="0.7270%" height="15" fill="rgb(226,73,15)" fg:x="488" fg:w="9"/><text x="39.6684%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (2 samples, 0.16%)</title><rect x="39.9838%" y="469" width="0.1616%" height="15" fill="rgb(227,66,46)" fg:x="495" fg:w="2"/><text x="40.2338%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="40.0646%" y="453" width="0.0808%" height="15" fill="rgb(209,71,6)" fg:x="496" fg:w="1"/><text x="40.3146%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0646%" y="437" width="0.0808%" height="15" fill="rgb(246,100,25)" fg:x="496" fg:w="1"/><text x="40.3146%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="40.1454%" y="469" width="0.0808%" height="15" fill="rgb(248,185,27)" fg:x="497" fg:w="1"/><text x="40.3954%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="40.1454%" y="453" width="0.0808%" height="15" fill="rgb(225,118,47)" fg:x="497" fg:w="1"/><text x="40.3954%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="40.1454%" y="437" width="0.0808%" height="15" fill="rgb(220,185,44)" fg:x="497" fg:w="1"/><text x="40.3954%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="40.1454%" y="421" width="0.0808%" height="15" fill="rgb(227,95,24)" fg:x="497" fg:w="1"/><text x="40.3954%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="40.1454%" y="405" width="0.0808%" height="15" fill="rgb(252,84,24)" fg:x="497" fg:w="1"/><text x="40.3954%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1454%" y="389" width="0.0808%" height="15" fill="rgb(240,34,44)" fg:x="497" fg:w="1"/><text x="40.3954%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1454%" y="373" width="0.0808%" height="15" fill="rgb(209,72,54)" fg:x="497" fg:w="1"/><text x="40.3954%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.1454%" y="357" width="0.0808%" height="15" fill="rgb(226,19,45)" fg:x="497" fg:w="1"/><text x="40.3954%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.1454%" y="341" width="0.0808%" height="15" fill="rgb(246,7,45)" fg:x="497" fg:w="1"/><text x="40.3954%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.1454%" y="325" width="0.0808%" height="15" fill="rgb(225,45,2)" fg:x="497" fg:w="1"/><text x="40.3954%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.1454%" y="309" width="0.0808%" height="15" fill="rgb(221,80,29)" fg:x="497" fg:w="1"/><text x="40.3954%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.1454%" y="293" width="0.0808%" height="15" fill="rgb(228,11,19)" fg:x="497" fg:w="1"/><text x="40.3954%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.1454%" y="277" width="0.0808%" height="15" fill="rgb(243,17,21)" fg:x="497" fg:w="1"/><text x="40.3954%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.1454%" y="261" width="0.0808%" height="15" fill="rgb(243,88,8)" fg:x="497" fg:w="1"/><text x="40.3954%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.1454%" y="245" width="0.0808%" height="15" fill="rgb(214,17,9)" fg:x="497" fg:w="1"/><text x="40.3954%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.1454%" y="229" width="0.0808%" height="15" fill="rgb(232,169,15)" fg:x="497" fg:w="1"/><text x="40.3954%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.1454%" y="213" width="0.0808%" height="15" fill="rgb(232,86,53)" fg:x="497" fg:w="1"/><text x="40.3954%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1454%" y="197" width="0.0808%" height="15" fill="rgb(222,100,4)" fg:x="497" fg:w="1"/><text x="40.3954%" y="207.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="40.2262%" y="453" width="0.2423%" height="15" fill="rgb(253,151,38)" fg:x="498" fg:w="3"/><text x="40.4762%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.2262%" y="437" width="0.2423%" height="15" fill="rgb(238,215,29)" fg:x="498" fg:w="3"/><text x="40.4762%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.2262%" y="421" width="0.2423%" height="15" fill="rgb(205,128,53)" fg:x="498" fg:w="3"/><text x="40.4762%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.2262%" y="405" width="0.2423%" height="15" fill="rgb(248,183,14)" fg:x="498" fg:w="3"/><text x="40.4762%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.3069%" y="389" width="0.1616%" height="15" fill="rgb(244,172,35)" fg:x="499" fg:w="2"/><text x="40.5569%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.3877%" y="373" width="0.0808%" height="15" fill="rgb(234,93,19)" fg:x="500" fg:w="1"/><text x="40.6377%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3877%" y="357" width="0.0808%" height="15" fill="rgb(227,109,7)" fg:x="500" fg:w="1"/><text x="40.6377%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3877%" y="341" width="0.0808%" height="15" fill="rgb(233,136,54)" fg:x="500" fg:w="1"/><text x="40.6377%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="40.4685%" y="453" width="0.0808%" height="15" fill="rgb(233,19,40)" fg:x="501" fg:w="1"/><text x="40.7185%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.6300%" y="373" width="0.2423%" height="15" fill="rgb(247,41,18)" fg:x="503" fg:w="3"/><text x="40.8800%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.6300%" y="357" width="0.2423%" height="15" fill="rgb(220,34,34)" fg:x="503" fg:w="3"/><text x="40.8800%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.7108%" y="341" width="0.1616%" height="15" fill="rgb(222,135,32)" fg:x="504" fg:w="2"/><text x="40.9608%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7916%" y="325" width="0.0808%" height="15" fill="rgb(214,80,19)" fg:x="505" fg:w="1"/><text x="41.0416%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7916%" y="309" width="0.0808%" height="15" fill="rgb(234,54,46)" fg:x="505" fg:w="1"/><text x="41.0416%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.7916%" y="293" width="0.0808%" height="15" fill="rgb(251,48,23)" fg:x="505" fg:w="1"/><text x="41.0416%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.7916%" y="277" width="0.0808%" height="15" fill="rgb(254,109,52)" fg:x="505" fg:w="1"/><text x="41.0416%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.7916%" y="261" width="0.0808%" height="15" fill="rgb(240,186,19)" fg:x="505" fg:w="1"/><text x="41.0416%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.7916%" y="245" width="0.0808%" height="15" fill="rgb(246,187,17)" fg:x="505" fg:w="1"/><text x="41.0416%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.7916%" y="229" width="0.0808%" height="15" fill="rgb(212,21,5)" fg:x="505" fg:w="1"/><text x="41.0416%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.7916%" y="213" width="0.0808%" height="15" fill="rgb(225,185,18)" fg:x="505" fg:w="1"/><text x="41.0416%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.7916%" y="197" width="0.0808%" height="15" fill="rgb(245,114,17)" fg:x="505" fg:w="1"/><text x="41.0416%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.7916%" y="181" width="0.0808%" height="15" fill="rgb(223,164,24)" fg:x="505" fg:w="1"/><text x="41.0416%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.7916%" y="165" width="0.0808%" height="15" fill="rgb(211,228,3)" fg:x="505" fg:w="1"/><text x="41.0416%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7916%" y="149" width="0.0808%" height="15" fill="rgb(223,16,38)" fg:x="505" fg:w="1"/><text x="41.0416%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="40.6300%" y="421" width="0.3231%" height="15" fill="rgb(207,31,54)" fg:x="503" fg:w="4"/><text x="40.8800%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="40.6300%" y="405" width="0.3231%" height="15" fill="rgb(220,39,11)" fg:x="503" fg:w="4"/><text x="40.8800%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="40.6300%" y="389" width="0.3231%" height="15" fill="rgb(235,185,0)" fg:x="503" fg:w="4"/><text x="40.8800%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.8724%" y="373" width="0.0808%" height="15" fill="rgb(249,39,18)" fg:x="506" fg:w="1"/><text x="41.1224%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.8724%" y="357" width="0.0808%" height="15" fill="rgb(240,110,33)" fg:x="506" fg:w="1"/><text x="41.1224%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.8724%" y="341" width="0.0808%" height="15" fill="rgb(210,92,42)" fg:x="506" fg:w="1"/><text x="41.1224%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.8724%" y="325" width="0.0808%" height="15" fill="rgb(218,215,28)" fg:x="506" fg:w="1"/><text x="41.1224%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.8724%" y="309" width="0.0808%" height="15" fill="rgb(238,215,36)" fg:x="506" fg:w="1"/><text x="41.1224%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.8724%" y="293" width="0.0808%" height="15" fill="rgb(220,31,10)" fg:x="506" fg:w="1"/><text x="41.1224%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8724%" y="277" width="0.0808%" height="15" fill="rgb(212,93,14)" fg:x="506" fg:w="1"/><text x="41.1224%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.9532%" y="341" width="0.0808%" height="15" fill="rgb(254,207,2)" fg:x="507" fg:w="1"/><text x="41.2032%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0339%" y="309" width="0.0808%" height="15" fill="rgb(205,57,44)" fg:x="508" fg:w="1"/><text x="41.2839%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.0339%" y="293" width="0.0808%" height="15" fill="rgb(226,151,19)" fg:x="508" fg:w="1"/><text x="41.2839%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.9532%" y="373" width="0.2423%" height="15" fill="rgb(230,72,30)" fg:x="507" fg:w="3"/><text x="41.2032%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.9532%" y="357" width="0.2423%" height="15" fill="rgb(244,0,8)" fg:x="507" fg:w="3"/><text x="41.2032%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.0339%" y="341" width="0.1616%" height="15" fill="rgb(230,192,6)" fg:x="508" fg:w="2"/><text x="41.2839%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.0339%" y="325" width="0.1616%" height="15" fill="rgb(233,207,13)" fg:x="508" fg:w="2"/><text x="41.2839%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.1147%" y="309" width="0.0808%" height="15" fill="rgb(206,227,7)" fg:x="509" fg:w="1"/><text x="41.3647%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.1147%" y="293" width="0.0808%" height="15" fill="rgb(213,217,25)" fg:x="509" fg:w="1"/><text x="41.3647%" y="303.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.05%)</title><rect x="40.2262%" y="469" width="1.0501%" height="15" fill="rgb(249,75,4)" fg:x="498" fg:w="13"/><text x="40.4762%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (9 samples, 0.73%)</title><rect x="40.5493%" y="453" width="0.7270%" height="15" fill="rgb(225,114,18)" fg:x="502" fg:w="9"/><text x="40.7993%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.73%)</title><rect x="40.5493%" y="437" width="0.7270%" height="15" fill="rgb(211,162,40)" fg:x="502" fg:w="9"/><text x="40.7993%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="40.9532%" y="421" width="0.3231%" height="15" fill="rgb(206,49,29)" fg:x="507" fg:w="4"/><text x="41.2032%" y="431.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="40.9532%" y="405" width="0.3231%" height="15" fill="rgb(244,8,6)" fg:x="507" fg:w="4"/><text x="41.2032%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="40.9532%" y="389" width="0.3231%" height="15" fill="rgb(231,194,28)" fg:x="507" fg:w="4"/><text x="41.2032%" y="399.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="41.1955%" y="373" width="0.0808%" height="15" fill="rgb(210,69,5)" fg:x="510" fg:w="1"/><text x="41.4455%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="41.2763%" y="437" width="0.0808%" height="15" fill="rgb(216,186,12)" fg:x="511" fg:w="1"/><text x="41.5263%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.2763%" y="421" width="0.0808%" height="15" fill="rgb(238,61,15)" fg:x="511" fg:w="1"/><text x="41.5263%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.2763%" y="405" width="0.0808%" height="15" fill="rgb(226,104,1)" fg:x="511" fg:w="1"/><text x="41.5263%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="41.2763%" y="389" width="0.0808%" height="15" fill="rgb(229,128,15)" fg:x="511" fg:w="1"/><text x="41.5263%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2763%" y="373" width="0.0808%" height="15" fill="rgb(247,110,15)" fg:x="511" fg:w="1"/><text x="41.5263%" y="383.50"></text></g><g><title>plugins_core::tools::set_container (16 samples, 1.29%)</title><rect x="40.1454%" y="485" width="1.2924%" height="15" fill="rgb(210,74,48)" fg:x="497" fg:w="16"/><text x="40.3954%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="41.2763%" y="469" width="0.1616%" height="15" fill="rgb(246,121,10)" fg:x="511" fg:w="2"/><text x="41.5263%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="41.2763%" y="453" width="0.1616%" height="15" fill="rgb(214,156,37)" fg:x="511" fg:w="2"/><text x="41.5263%" y="463.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="41.3570%" y="437" width="0.0808%" height="15" fill="rgb(214,210,34)" fg:x="512" fg:w="1"/><text x="41.6070%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.3570%" y="421" width="0.0808%" height="15" fill="rgb(237,93,35)" fg:x="512" fg:w="1"/><text x="41.6070%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="41.3570%" y="405" width="0.0808%" height="15" fill="rgb(206,36,8)" fg:x="512" fg:w="1"/><text x="41.6070%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.3570%" y="389" width="0.0808%" height="15" fill="rgb(208,151,12)" fg:x="512" fg:w="1"/><text x="41.6070%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3570%" y="373" width="0.0808%" height="15" fill="rgb(225,133,52)" fg:x="512" fg:w="1"/><text x="41.6070%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="41.4378%" y="453" width="0.0808%" height="15" fill="rgb(231,71,53)" fg:x="513" fg:w="1"/><text x="41.6878%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4378%" y="437" width="0.0808%" height="15" fill="rgb(243,76,21)" fg:x="513" fg:w="1"/><text x="41.6878%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.4378%" y="421" width="0.0808%" height="15" fill="rgb(252,144,3)" fg:x="513" fg:w="1"/><text x="41.6878%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="41.4378%" y="405" width="0.0808%" height="15" fill="rgb(231,199,10)" fg:x="513" fg:w="1"/><text x="41.6878%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5186%" y="421" width="0.0808%" height="15" fill="rgb(215,18,11)" fg:x="514" fg:w="1"/><text x="41.7686%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (233 samples, 18.82%)</title><rect x="22.8595%" y="501" width="18.8207%" height="15" fill="rgb(241,65,24)" fg:x="283" fg:w="233"/><text x="23.1095%" y="511.50">plugins_core::build::BuildSur..</text></g><g><title>plugins_core::tools::set_wearing (3 samples, 0.24%)</title><rect x="41.4378%" y="485" width="0.2423%" height="15" fill="rgb(251,192,38)" fg:x="513" fg:w="3"/><text x="41.6878%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="41.4378%" y="469" width="0.2423%" height="15" fill="rgb(205,9,35)" fg:x="513" fg:w="3"/><text x="41.6878%" y="479.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (2 samples, 0.16%)</title><rect x="41.5186%" y="453" width="0.1616%" height="15" fill="rgb(229,225,49)" fg:x="514" fg:w="2"/><text x="41.7686%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.5186%" y="437" width="0.1616%" height="15" fill="rgb(207,125,39)" fg:x="514" fg:w="2"/><text x="41.7686%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5994%" y="421" width="0.0808%" height="15" fill="rgb(222,78,19)" fg:x="515" fg:w="1"/><text x="41.8494%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5994%" y="405" width="0.0808%" height="15" fill="rgb(248,207,20)" fg:x="515" fg:w="1"/><text x="41.8494%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5994%" y="389" width="0.0808%" height="15" fill="rgb(205,103,49)" fg:x="515" fg:w="1"/><text x="41.8494%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="41.6801%" y="501" width="0.0808%" height="15" fill="rgb(216,42,28)" fg:x="516" fg:w="1"/><text x="41.9301%" y="511.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="41.6801%" y="485" width="0.0808%" height="15" fill="rgb(213,205,53)" fg:x="516" fg:w="1"/><text x="41.9301%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="41.6801%" y="469" width="0.0808%" height="15" fill="rgb(239,140,53)" fg:x="516" fg:w="1"/><text x="41.9301%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="41.6801%" y="453" width="0.0808%" height="15" fill="rgb(248,95,9)" fg:x="516" fg:w="1"/><text x="41.9301%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="41.6801%" y="437" width="0.0808%" height="15" fill="rgb(254,58,47)" fg:x="516" fg:w="1"/><text x="41.9301%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.7609%" y="469" width="0.0808%" height="15" fill="rgb(234,227,14)" fg:x="517" fg:w="1"/><text x="42.0109%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="41.8417%" y="453" width="0.0808%" height="15" fill="rgb(205,192,45)" fg:x="518" fg:w="1"/><text x="42.0917%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="41.8417%" y="437" width="0.0808%" height="15" fill="rgb(253,187,31)" fg:x="518" fg:w="1"/><text x="42.0917%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8417%" y="421" width="0.0808%" height="15" fill="rgb(222,6,32)" fg:x="518" fg:w="1"/><text x="42.0917%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8417%" y="405" width="0.0808%" height="15" fill="rgb(249,190,19)" fg:x="518" fg:w="1"/><text x="42.0917%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8417%" y="389" width="0.0808%" height="15" fill="rgb(251,28,20)" fg:x="518" fg:w="1"/><text x="42.0917%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8417%" y="373" width="0.0808%" height="15" fill="rgb(210,223,40)" fg:x="518" fg:w="1"/><text x="42.0917%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8417%" y="357" width="0.0808%" height="15" fill="rgb(216,137,22)" fg:x="518" fg:w="1"/><text x="42.0917%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8417%" y="341" width="0.0808%" height="15" fill="rgb(247,39,34)" fg:x="518" fg:w="1"/><text x="42.0917%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8417%" y="325" width="0.0808%" height="15" fill="rgb(239,43,50)" fg:x="518" fg:w="1"/><text x="42.0917%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8417%" y="309" width="0.0808%" height="15" fill="rgb(241,212,9)" fg:x="518" fg:w="1"/><text x="42.0917%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.8417%" y="293" width="0.0808%" height="15" fill="rgb(205,8,2)" fg:x="518" fg:w="1"/><text x="42.0917%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.8417%" y="277" width="0.0808%" height="15" fill="rgb(217,173,54)" fg:x="518" fg:w="1"/><text x="42.0917%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.8417%" y="261" width="0.0808%" height="15" fill="rgb(208,149,52)" fg:x="518" fg:w="1"/><text x="42.0917%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.8417%" y="245" width="0.0808%" height="15" fill="rgb(239,99,40)" fg:x="518" fg:w="1"/><text x="42.0917%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="41.9225%" y="437" width="0.0808%" height="15" fill="rgb(233,214,26)" fg:x="519" fg:w="1"/><text x="42.1725%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="41.8417%" y="469" width="0.2423%" height="15" fill="rgb(231,225,37)" fg:x="518" fg:w="3"/><text x="42.0917%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="41.9225%" y="453" width="0.1616%" height="15" fill="rgb(252,55,35)" fg:x="519" fg:w="2"/><text x="42.1725%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="42.0032%" y="437" width="0.0808%" height="15" fill="rgb(239,43,18)" fg:x="520" fg:w="1"/><text x="42.2532%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.0032%" y="421" width="0.0808%" height="15" fill="rgb(251,125,49)" fg:x="520" fg:w="1"/><text x="42.2532%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.0032%" y="405" width="0.0808%" height="15" fill="rgb(212,83,54)" fg:x="520" fg:w="1"/><text x="42.2532%" y="415.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="42.0032%" y="389" width="0.0808%" height="15" fill="rgb(250,75,6)" fg:x="520" fg:w="1"/><text x="42.2532%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.0032%" y="373" width="0.0808%" height="15" fill="rgb(252,36,40)" fg:x="520" fg:w="1"/><text x="42.2532%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="42.0840%" y="469" width="0.0808%" height="15" fill="rgb(230,91,51)" fg:x="521" fg:w="1"/><text x="42.3340%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0840%" y="453" width="0.0808%" height="15" fill="rgb(212,92,28)" fg:x="521" fg:w="1"/><text x="42.3340%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="42.1648%" y="453" width="0.1616%" height="15" fill="rgb(227,13,22)" fg:x="522" fg:w="2"/><text x="42.4148%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="42.1648%" y="437" width="0.1616%" height="15" fill="rgb(239,204,32)" fg:x="522" fg:w="2"/><text x="42.4148%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.2456%" y="421" width="0.0808%" height="15" fill="rgb(228,49,41)" fg:x="523" fg:w="1"/><text x="42.4956%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.2456%" y="405" width="0.0808%" height="15" fill="rgb(206,95,6)" fg:x="523" fg:w="1"/><text x="42.4956%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.2456%" y="389" width="0.0808%" height="15" fill="rgb(251,20,14)" fg:x="523" fg:w="1"/><text x="42.4956%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.2456%" y="373" width="0.0808%" height="15" fill="rgb(214,99,28)" fg:x="523" fg:w="1"/><text x="42.4956%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="42.2456%" y="357" width="0.0808%" height="15" fill="rgb(239,122,54)" fg:x="523" fg:w="1"/><text x="42.4956%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="42.2456%" y="341" width="0.0808%" height="15" fill="rgb(218,217,46)" fg:x="523" fg:w="1"/><text x="42.4956%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.2456%" y="325" width="0.0808%" height="15" fill="rgb(249,106,28)" fg:x="523" fg:w="1"/><text x="42.4956%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.2456%" y="309" width="0.0808%" height="15" fill="rgb(250,158,18)" fg:x="523" fg:w="1"/><text x="42.4956%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.2456%" y="293" width="0.0808%" height="15" fill="rgb(226,137,29)" fg:x="523" fg:w="1"/><text x="42.4956%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.2456%" y="277" width="0.0808%" height="15" fill="rgb(210,188,1)" fg:x="523" fg:w="1"/><text x="42.4956%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.2456%" y="261" width="0.0808%" height="15" fill="rgb(227,84,42)" fg:x="523" fg:w="1"/><text x="42.4956%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.2456%" y="245" width="0.0808%" height="15" fill="rgb(222,147,48)" fg:x="523" fg:w="1"/><text x="42.4956%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.2456%" y="229" width="0.0808%" height="15" fill="rgb(241,150,43)" fg:x="523" fg:w="1"/><text x="42.4956%" y="239.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (4 samples, 0.32%)</title><rect x="42.3263%" y="453" width="0.3231%" height="15" fill="rgb(206,139,52)" fg:x="524" fg:w="4"/><text x="42.5763%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="42.4879%" y="437" width="0.1616%" height="15" fill="rgb(230,63,14)" fg:x="526" fg:w="2"/><text x="42.7379%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="42.5687%" y="421" width="0.0808%" height="15" fill="rgb(247,8,20)" fg:x="527" fg:w="1"/><text x="42.8187%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="42.5687%" y="405" width="0.0808%" height="15" fill="rgb(213,115,4)" fg:x="527" fg:w="1"/><text x="42.8187%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.5687%" y="389" width="0.0808%" height="15" fill="rgb(241,79,49)" fg:x="527" fg:w="1"/><text x="42.8187%" y="399.50"></text></g><g><title>plugins_core::build::Build::new (7 samples, 0.57%)</title><rect x="42.1648%" y="469" width="0.5654%" height="15" fill="rgb(222,42,35)" fg:x="522" fg:w="7"/><text x="42.4148%" y="479.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="42.6494%" y="453" width="0.0808%" height="15" fill="rgb(247,59,23)" fg:x="528" fg:w="1"/><text x="42.8994%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7302%" y="437" width="0.0808%" height="15" fill="rgb(247,93,18)" fg:x="529" fg:w="1"/><text x="42.9802%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7302%" y="421" width="0.0808%" height="15" fill="rgb(249,107,47)" fg:x="529" fg:w="1"/><text x="42.9802%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.7302%" y="405" width="0.0808%" height="15" fill="rgb(219,27,1)" fg:x="529" fg:w="1"/><text x="42.9802%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.7302%" y="389" width="0.0808%" height="15" fill="rgb(217,82,32)" fg:x="529" fg:w="1"/><text x="42.9802%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.7302%" y="373" width="0.0808%" height="15" fill="rgb(250,129,47)" fg:x="529" fg:w="1"/><text x="42.9802%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.7302%" y="357" width="0.0808%" height="15" fill="rgb(253,88,35)" fg:x="529" fg:w="1"/><text x="42.9802%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.7302%" y="341" width="0.0808%" height="15" fill="rgb(245,221,14)" fg:x="529" fg:w="1"/><text x="42.9802%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.8110%" y="421" width="0.0808%" height="15" fill="rgb(217,119,54)" fg:x="530" fg:w="1"/><text x="43.0610%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.8918%" y="389" width="0.1616%" height="15" fill="rgb(247,128,31)" fg:x="531" fg:w="2"/><text x="43.1418%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.8918%" y="373" width="0.1616%" height="15" fill="rgb(211,99,22)" fg:x="531" fg:w="2"/><text x="43.1418%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.8918%" y="357" width="0.1616%" height="15" fill="rgb(212,20,17)" fg:x="531" fg:w="2"/><text x="43.1418%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9725%" y="341" width="0.0808%" height="15" fill="rgb(209,159,29)" fg:x="532" fg:w="1"/><text x="43.2225%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="42.8110%" y="437" width="0.3231%" height="15" fill="rgb(222,177,53)" fg:x="530" fg:w="4"/><text x="43.0610%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="42.8918%" y="421" width="0.2423%" height="15" fill="rgb(234,46,43)" fg:x="531" fg:w="3"/><text x="43.1418%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="42.8918%" y="405" width="0.2423%" height="15" fill="rgb(208,108,14)" fg:x="531" fg:w="3"/><text x="43.1418%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0533%" y="389" width="0.0808%" height="15" fill="rgb(226,78,53)" fg:x="533" fg:w="1"/><text x="43.3033%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0533%" y="373" width="0.0808%" height="15" fill="rgb(230,20,41)" fg:x="533" fg:w="1"/><text x="43.3033%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0533%" y="357" width="0.0808%" height="15" fill="rgb(213,195,35)" fg:x="533" fg:w="1"/><text x="43.3033%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0533%" y="341" width="0.0808%" height="15" fill="rgb(242,62,36)" fg:x="533" fg:w="1"/><text x="43.3033%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.0533%" y="325" width="0.0808%" height="15" fill="rgb(222,210,37)" fg:x="533" fg:w="1"/><text x="43.3033%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0533%" y="309" width="0.0808%" height="15" fill="rgb(232,107,19)" fg:x="533" fg:w="1"/><text x="43.3033%" y="319.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="43.1341%" y="437" width="0.0808%" height="15" fill="rgb(235,85,17)" fg:x="534" fg:w="1"/><text x="43.3841%" y="447.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="43.1341%" y="421" width="0.0808%" height="15" fill="rgb(219,195,31)" fg:x="534" fg:w="1"/><text x="43.3841%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="43.1341%" y="405" width="0.0808%" height="15" fill="rgb(231,183,30)" fg:x="534" fg:w="1"/><text x="43.3841%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="43.1341%" y="389" width="0.0808%" height="15" fill="rgb(212,0,11)" fg:x="534" fg:w="1"/><text x="43.3841%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="43.2149%" y="389" width="0.0808%" height="15" fill="rgb(249,53,54)" fg:x="535" fg:w="1"/><text x="43.4649%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="43.2149%" y="373" width="0.0808%" height="15" fill="rgb(211,118,13)" fg:x="535" fg:w="1"/><text x="43.4649%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.2149%" y="357" width="0.0808%" height="15" fill="rgb(237,42,9)" fg:x="535" fg:w="1"/><text x="43.4649%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2149%" y="341" width="0.0808%" height="15" fill="rgb(227,68,32)" fg:x="535" fg:w="1"/><text x="43.4649%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.2149%" y="325" width="0.0808%" height="15" fill="rgb(238,10,7)" fg:x="535" fg:w="1"/><text x="43.4649%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2149%" y="309" width="0.0808%" height="15" fill="rgb(224,42,12)" fg:x="535" fg:w="1"/><text x="43.4649%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2149%" y="293" width="0.0808%" height="15" fill="rgb(252,190,5)" fg:x="535" fg:w="1"/><text x="43.4649%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2149%" y="277" width="0.0808%" height="15" fill="rgb(220,214,39)" fg:x="535" fg:w="1"/><text x="43.4649%" y="287.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="43.2149%" y="421" width="0.1616%" height="15" fill="rgb(247,98,4)" fg:x="535" fg:w="2"/><text x="43.4649%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="43.2149%" y="405" width="0.1616%" height="15" fill="rgb(211,60,12)" fg:x="535" fg:w="2"/><text x="43.4649%" y="415.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="43.2956%" y="389" width="0.0808%" height="15" fill="rgb(224,42,10)" fg:x="536" fg:w="1"/><text x="43.5456%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.2956%" y="373" width="0.0808%" height="15" fill="rgb(217,167,4)" fg:x="536" fg:w="1"/><text x="43.5456%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.2956%" y="357" width="0.0808%" height="15" fill="rgb(253,18,17)" fg:x="536" fg:w="1"/><text x="43.5456%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.3764%" y="389" width="0.0808%" height="15" fill="rgb(249,186,44)" fg:x="537" fg:w="1"/><text x="43.6264%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.4572%" y="261" width="0.1616%" height="15" fill="rgb(254,124,54)" fg:x="538" fg:w="2"/><text x="43.7072%" y="271.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="43.2149%" y="437" width="0.4847%" height="15" fill="rgb(220,124,39)" fg:x="535" fg:w="6"/><text x="43.4649%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="43.3764%" y="421" width="0.3231%" height="15" fill="rgb(225,96,46)" fg:x="537" fg:w="4"/><text x="43.6264%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="43.3764%" y="405" width="0.3231%" height="15" fill="rgb(221,106,12)" fg:x="537" fg:w="4"/><text x="43.6264%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="43.4572%" y="389" width="0.2423%" height="15" fill="rgb(227,133,23)" fg:x="538" fg:w="3"/><text x="43.7072%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="43.4572%" y="373" width="0.2423%" height="15" fill="rgb(216,44,52)" fg:x="538" fg:w="3"/><text x="43.7072%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="43.4572%" y="357" width="0.2423%" height="15" fill="rgb(239,149,7)" fg:x="538" fg:w="3"/><text x="43.7072%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="43.4572%" y="341" width="0.2423%" height="15" fill="rgb(211,157,31)" fg:x="538" fg:w="3"/><text x="43.7072%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="43.4572%" y="325" width="0.2423%" height="15" fill="rgb(206,215,22)" fg:x="538" fg:w="3"/><text x="43.7072%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="43.4572%" y="309" width="0.2423%" height="15" fill="rgb(208,113,15)" fg:x="538" fg:w="3"/><text x="43.7072%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="43.4572%" y="293" width="0.2423%" height="15" fill="rgb(207,189,15)" fg:x="538" fg:w="3"/><text x="43.7072%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="43.4572%" y="277" width="0.2423%" height="15" fill="rgb(231,115,4)" fg:x="538" fg:w="3"/><text x="43.7072%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="43.6187%" y="261" width="0.0808%" height="15" fill="rgb(253,117,2)" fg:x="540" fg:w="1"/><text x="43.8687%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="43.6187%" y="245" width="0.0808%" height="15" fill="rgb(248,48,24)" fg:x="540" fg:w="1"/><text x="43.8687%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="42.7302%" y="453" width="1.0501%" height="15" fill="rgb(241,28,46)" fg:x="529" fg:w="13"/><text x="42.9802%" y="463.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="43.6995%" y="437" width="0.0808%" height="15" fill="rgb(216,165,52)" fg:x="541" fg:w="1"/><text x="43.9495%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.7803%" y="437" width="0.1616%" height="15" fill="rgb(220,222,34)" fg:x="542" fg:w="2"/><text x="44.0303%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.8611%" y="421" width="0.0808%" height="15" fill="rgb(247,222,49)" fg:x="543" fg:w="1"/><text x="44.1111%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="43.7803%" y="453" width="0.2423%" height="15" fill="rgb(240,10,31)" fg:x="542" fg:w="3"/><text x="44.0303%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.9418%" y="437" width="0.0808%" height="15" fill="rgb(221,199,35)" fg:x="544" fg:w="1"/><text x="44.1918%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.9418%" y="421" width="0.0808%" height="15" fill="rgb(230,223,11)" fg:x="544" fg:w="1"/><text x="44.1918%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.9418%" y="405" width="0.0808%" height="15" fill="rgb(218,82,45)" fg:x="544" fg:w="1"/><text x="44.1918%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.9418%" y="389" width="0.0808%" height="15" fill="rgb(233,213,33)" fg:x="544" fg:w="1"/><text x="44.1918%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.9418%" y="373" width="0.0808%" height="15" fill="rgb(210,143,52)" fg:x="544" fg:w="1"/><text x="44.1918%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.9418%" y="357" width="0.0808%" height="15" fill="rgb(206,95,4)" fg:x="544" fg:w="1"/><text x="44.1918%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.9418%" y="341" width="0.0808%" height="15" fill="rgb(246,164,46)" fg:x="544" fg:w="1"/><text x="44.1918%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.9418%" y="325" width="0.0808%" height="15" fill="rgb(213,210,47)" fg:x="544" fg:w="1"/><text x="44.1918%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.9418%" y="309" width="0.0808%" height="15" fill="rgb(210,12,38)" fg:x="544" fg:w="1"/><text x="44.1918%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.9418%" y="293" width="0.0808%" height="15" fill="rgb(252,192,54)" fg:x="544" fg:w="1"/><text x="44.1918%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.9418%" y="277" width="0.0808%" height="15" fill="rgb(242,92,6)" fg:x="544" fg:w="1"/><text x="44.1918%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9418%" y="261" width="0.0808%" height="15" fill="rgb(253,154,15)" fg:x="544" fg:w="1"/><text x="44.1918%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0226%" y="405" width="0.0808%" height="15" fill="rgb(209,20,43)" fg:x="545" fg:w="1"/><text x="44.2726%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.0226%" y="389" width="0.0808%" height="15" fill="rgb(232,28,49)" fg:x="545" fg:w="1"/><text x="44.2726%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (30 samples, 2.42%)</title><rect x="41.7609%" y="501" width="2.4233%" height="15" fill="rgb(248,131,53)" fg:x="517" fg:w="30"/><text x="42.0109%" y="511.50">pl..</text></g><g><title>plugins_core::build::QuickThing::make (30 samples, 2.42%)</title><rect x="41.7609%" y="485" width="2.4233%" height="15" fill="rgb(214,16,30)" fg:x="517" fg:w="30"/><text x="42.0109%" y="495.50">pl..</text></g><g><title>plugins_core::build::Build::save (18 samples, 1.45%)</title><rect x="42.7302%" y="469" width="1.4540%" height="15" fill="rgb(245,16,0)" fg:x="529" fg:w="18"/><text x="42.9802%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="44.0226%" y="453" width="0.1616%" height="15" fill="rgb(245,17,35)" fg:x="545" fg:w="2"/><text x="44.2726%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="44.0226%" y="437" width="0.1616%" height="15" fill="rgb(249,27,53)" fg:x="545" fg:w="2"/><text x="44.2726%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="44.0226%" y="421" width="0.1616%" height="15" fill="rgb(214,73,24)" fg:x="545" fg:w="2"/><text x="44.2726%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.1034%" y="405" width="0.0808%" height="15" fill="rgb(223,84,37)" fg:x="546" fg:w="1"/><text x="44.3534%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.1842%" y="437" width="0.0808%" height="15" fill="rgb(210,109,28)" fg:x="547" fg:w="1"/><text x="44.4342%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1842%" y="421" width="0.0808%" height="15" fill="rgb(208,186,6)" fg:x="547" fg:w="1"/><text x="44.4342%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="44.1842%" y="485" width="0.2423%" height="15" fill="rgb(235,201,30)" fg:x="547" fg:w="3"/><text x="44.4342%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="44.1842%" y="469" width="0.2423%" height="15" fill="rgb(216,198,48)" fg:x="547" fg:w="3"/><text x="44.4342%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="44.1842%" y="453" width="0.2423%" height="15" fill="rgb(254,186,25)" fg:x="547" fg:w="3"/><text x="44.4342%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.2649%" y="437" width="0.1616%" height="15" fill="rgb(227,87,5)" fg:x="548" fg:w="2"/><text x="44.5149%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.2649%" y="421" width="0.1616%" height="15" fill="rgb(236,205,25)" fg:x="548" fg:w="2"/><text x="44.5149%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3457%" y="405" width="0.0808%" height="15" fill="rgb(229,99,32)" fg:x="549" fg:w="1"/><text x="44.5957%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="44.4265%" y="469" width="0.1616%" height="15" fill="rgb(231,177,31)" fg:x="550" fg:w="2"/><text x="44.6765%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="44.4265%" y="453" width="0.1616%" height="15" fill="rgb(246,15,2)" fg:x="550" fg:w="2"/><text x="44.6765%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.4265%" y="437" width="0.1616%" height="15" fill="rgb(207,39,15)" fg:x="550" fg:w="2"/><text x="44.6765%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.4265%" y="421" width="0.1616%" height="15" fill="rgb(207,44,9)" fg:x="550" fg:w="2"/><text x="44.6765%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.4265%" y="405" width="0.1616%" height="15" fill="rgb(225,224,33)" fg:x="550" fg:w="2"/><text x="44.6765%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="44.4265%" y="485" width="0.3231%" height="15" fill="rgb(252,151,3)" fg:x="550" fg:w="4"/><text x="44.6765%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="44.5880%" y="469" width="0.1616%" height="15" fill="rgb(211,140,13)" fg:x="552" fg:w="2"/><text x="44.8380%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="44.5880%" y="453" width="0.1616%" height="15" fill="rgb(239,225,17)" fg:x="552" fg:w="2"/><text x="44.8380%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="44.5880%" y="437" width="0.1616%" height="15" fill="rgb(223,170,52)" fg:x="552" fg:w="2"/><text x="44.8380%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.6688%" y="421" width="0.0808%" height="15" fill="rgb(212,64,21)" fg:x="553" fg:w="1"/><text x="44.9188%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="44.7496%" y="469" width="0.0808%" height="15" fill="rgb(236,126,48)" fg:x="554" fg:w="1"/><text x="44.9996%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7496%" y="453" width="0.0808%" height="15" fill="rgb(209,135,11)" fg:x="554" fg:w="1"/><text x="44.9996%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="44.8304%" y="453" width="0.1616%" height="15" fill="rgb(228,126,40)" fg:x="555" fg:w="2"/><text x="45.0804%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="44.9111%" y="437" width="0.0808%" height="15" fill="rgb(205,196,36)" fg:x="556" fg:w="1"/><text x="45.1611%" y="447.50"></text></g><g><title>&lt;replies::Json as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="44.9919%" y="453" width="0.0808%" height="15" fill="rgb(243,160,33)" fg:x="557" fg:w="1"/><text x="45.2419%" y="463.50"></text></g><g><title>plugins_core::build::Build::new_world (5 samples, 0.40%)</title><rect x="44.7496%" y="485" width="0.4039%" height="15" fill="rgb(210,84,20)" fg:x="554" fg:w="5"/><text x="44.9996%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (4 samples, 0.32%)</title><rect x="44.8304%" y="469" width="0.3231%" height="15" fill="rgb(228,213,30)" fg:x="555" fg:w="4"/><text x="45.0804%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0727%" y="453" width="0.0808%" height="15" fill="rgb(252,33,45)" fg:x="558" fg:w="1"/><text x="45.3227%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1535%" y="469" width="0.0808%" height="15" fill="rgb(254,227,20)" fg:x="559" fg:w="1"/><text x="45.4035%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1535%" y="453" width="0.0808%" height="15" fill="rgb(228,192,2)" fg:x="559" fg:w="1"/><text x="45.4035%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.1535%" y="437" width="0.0808%" height="15" fill="rgb(233,32,8)" fg:x="559" fg:w="1"/><text x="45.4035%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.1535%" y="421" width="0.0808%" height="15" fill="rgb(220,146,47)" fg:x="559" fg:w="1"/><text x="45.4035%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.1535%" y="405" width="0.0808%" height="15" fill="rgb(246,194,1)" fg:x="559" fg:w="1"/><text x="45.4035%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.1535%" y="389" width="0.0808%" height="15" fill="rgb(218,203,9)" fg:x="559" fg:w="1"/><text x="45.4035%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.1535%" y="373" width="0.0808%" height="15" fill="rgb(237,97,14)" fg:x="559" fg:w="1"/><text x="45.4035%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.1535%" y="357" width="0.0808%" height="15" fill="rgb(239,76,15)" fg:x="559" fg:w="1"/><text x="45.4035%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.1535%" y="341" width="0.0808%" height="15" fill="rgb(222,53,45)" fg:x="559" fg:w="1"/><text x="45.4035%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.1535%" y="325" width="0.0808%" height="15" fill="rgb(237,88,5)" fg:x="559" fg:w="1"/><text x="45.4035%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.1535%" y="309" width="0.0808%" height="15" fill="rgb(218,223,35)" fg:x="559" fg:w="1"/><text x="45.4035%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="45.1535%" y="293" width="0.0808%" height="15" fill="rgb(243,229,38)" fg:x="559" fg:w="1"/><text x="45.4035%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="45.1535%" y="277" width="0.0808%" height="15" fill="rgb(240,75,41)" fg:x="559" fg:w="1"/><text x="45.4035%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.2342%" y="469" width="0.0808%" height="15" fill="rgb(209,110,37)" fg:x="560" fg:w="1"/><text x="45.4842%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3958%" y="373" width="0.0808%" height="15" fill="rgb(221,130,46)" fg:x="562" fg:w="1"/><text x="45.6458%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3958%" y="357" width="0.0808%" height="15" fill="rgb(237,160,20)" fg:x="562" fg:w="1"/><text x="45.6458%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3958%" y="341" width="0.0808%" height="15" fill="rgb(234,126,24)" fg:x="562" fg:w="1"/><text x="45.6458%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3958%" y="325" width="0.0808%" height="15" fill="rgb(207,177,9)" fg:x="562" fg:w="1"/><text x="45.6458%" y="335.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="45.3958%" y="405" width="0.1616%" height="15" fill="rgb(231,191,33)" fg:x="562" fg:w="2"/><text x="45.6458%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="45.3958%" y="389" width="0.1616%" height="15" fill="rgb(207,42,1)" fg:x="562" fg:w="2"/><text x="45.6458%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.4766%" y="373" width="0.0808%" height="15" fill="rgb(218,34,50)" fg:x="563" fg:w="1"/><text x="45.7266%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.4766%" y="357" width="0.0808%" height="15" fill="rgb(254,126,39)" fg:x="563" fg:w="1"/><text x="45.7266%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.4766%" y="341" width="0.0808%" height="15" fill="rgb(251,17,26)" fg:x="563" fg:w="1"/><text x="45.7266%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.4766%" y="325" width="0.0808%" height="15" fill="rgb(252,215,34)" fg:x="563" fg:w="1"/><text x="45.7266%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.4766%" y="309" width="0.0808%" height="15" fill="rgb(217,120,44)" fg:x="563" fg:w="1"/><text x="45.7266%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="45.5574%" y="389" width="0.0808%" height="15" fill="rgb(211,31,11)" fg:x="564" fg:w="1"/><text x="45.8074%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.5574%" y="373" width="0.0808%" height="15" fill="rgb(222,69,51)" fg:x="564" fg:w="1"/><text x="45.8074%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="45.3958%" y="437" width="0.3231%" height="15" fill="rgb(215,229,42)" fg:x="562" fg:w="4"/><text x="45.6458%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="45.3958%" y="421" width="0.3231%" height="15" fill="rgb(212,102,15)" fg:x="562" fg:w="4"/><text x="45.6458%" y="431.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="45.5574%" y="405" width="0.1616%" height="15" fill="rgb(205,179,41)" fg:x="564" fg:w="2"/><text x="45.8074%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="45.6381%" y="389" width="0.0808%" height="15" fill="rgb(219,148,46)" fg:x="565" fg:w="1"/><text x="45.8881%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.6381%" y="373" width="0.0808%" height="15" fill="rgb(243,40,19)" fg:x="565" fg:w="1"/><text x="45.8881%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="45.6381%" y="357" width="0.0808%" height="15" fill="rgb(208,206,34)" fg:x="565" fg:w="1"/><text x="45.8881%" y="367.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="45.6381%" y="341" width="0.0808%" height="15" fill="rgb(244,184,38)" fg:x="565" fg:w="1"/><text x="45.8881%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.6381%" y="325" width="0.0808%" height="15" fill="rgb(244,151,47)" fg:x="565" fg:w="1"/><text x="45.8881%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.6381%" y="309" width="0.0808%" height="15" fill="rgb(236,134,42)" fg:x="565" fg:w="1"/><text x="45.8881%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.6381%" y="293" width="0.0808%" height="15" fill="rgb(233,93,22)" fg:x="565" fg:w="1"/><text x="45.8881%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6381%" y="277" width="0.0808%" height="15" fill="rgb(211,202,10)" fg:x="565" fg:w="1"/><text x="45.8881%" y="287.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="45.7189%" y="437" width="0.0808%" height="15" fill="rgb(240,63,8)" fg:x="566" fg:w="1"/><text x="45.9689%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.7189%" y="421" width="0.0808%" height="15" fill="rgb(214,9,4)" fg:x="566" fg:w="1"/><text x="45.9689%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.7189%" y="405" width="0.0808%" height="15" fill="rgb(243,66,45)" fg:x="566" fg:w="1"/><text x="45.9689%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="45.7189%" y="389" width="0.0808%" height="15" fill="rgb(220,50,42)" fg:x="566" fg:w="1"/><text x="45.9689%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.0420%" y="405" width="0.1616%" height="15" fill="rgb(220,134,27)" fg:x="570" fg:w="2"/><text x="46.2920%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2036%" y="293" width="0.0808%" height="15" fill="rgb(246,151,50)" fg:x="572" fg:w="1"/><text x="46.4536%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="46.2036%" y="405" width="0.1616%" height="15" fill="rgb(238,216,27)" fg:x="572" fg:w="2"/><text x="46.4536%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="46.2036%" y="389" width="0.1616%" height="15" fill="rgb(250,92,11)" fg:x="572" fg:w="2"/><text x="46.4536%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="46.2036%" y="373" width="0.1616%" height="15" fill="rgb(248,183,6)" fg:x="572" fg:w="2"/><text x="46.4536%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="46.2036%" y="357" width="0.1616%" height="15" fill="rgb(211,204,50)" fg:x="572" fg:w="2"/><text x="46.4536%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="46.2036%" y="341" width="0.1616%" height="15" fill="rgb(252,55,47)" fg:x="572" fg:w="2"/><text x="46.4536%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="46.2036%" y="325" width="0.1616%" height="15" fill="rgb(240,198,32)" fg:x="572" fg:w="2"/><text x="46.4536%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="46.2036%" y="309" width="0.1616%" height="15" fill="rgb(224,203,19)" fg:x="572" fg:w="2"/><text x="46.4536%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2843%" y="293" width="0.0808%" height="15" fill="rgb(205,27,16)" fg:x="573" fg:w="1"/><text x="46.5343%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2843%" y="277" width="0.0808%" height="15" fill="rgb(224,226,17)" fg:x="573" fg:w="1"/><text x="46.5343%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.05%)</title><rect x="45.3958%" y="453" width="1.0501%" height="15" fill="rgb(205,216,54)" fg:x="562" fg:w="13"/><text x="45.6458%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="45.7997%" y="437" width="0.6462%" height="15" fill="rgb(248,168,46)" fg:x="567" fg:w="8"/><text x="46.0497%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="45.7997%" y="421" width="0.6462%" height="15" fill="rgb(226,111,45)" fg:x="567" fg:w="8"/><text x="46.0497%" y="431.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="46.3651%" y="405" width="0.0808%" height="15" fill="rgb(231,15,9)" fg:x="574" fg:w="1"/><text x="46.6151%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.29%)</title><rect x="45.3150%" y="469" width="1.2924%" height="15" fill="rgb(243,168,3)" fg:x="561" fg:w="16"/><text x="45.5650%" y="479.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (2 samples, 0.16%)</title><rect x="46.4459%" y="453" width="0.1616%" height="15" fill="rgb(221,220,54)" fg:x="575" fg:w="2"/><text x="46.6959%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.6074%" y="469" width="0.1616%" height="15" fill="rgb(232,174,38)" fg:x="577" fg:w="2"/><text x="46.8574%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6882%" y="453" width="0.0808%" height="15" fill="rgb(205,14,38)" fg:x="578" fg:w="1"/><text x="46.9382%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6882%" y="437" width="0.0808%" height="15" fill="rgb(234,89,19)" fg:x="578" fg:w="1"/><text x="46.9382%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6882%" y="421" width="0.0808%" height="15" fill="rgb(216,68,51)" fg:x="578" fg:w="1"/><text x="46.9382%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6882%" y="405" width="0.0808%" height="15" fill="rgb(213,49,2)" fg:x="578" fg:w="1"/><text x="46.9382%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.7690%" y="421" width="0.0808%" height="15" fill="rgb(242,146,30)" fg:x="579" fg:w="1"/><text x="47.0190%" y="431.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (492 samples, 39.74%)</title><rect x="7.1890%" y="517" width="39.7415%" height="15" fill="rgb(224,188,11)" fg:x="89" fg:w="492"/><text x="7.4390%" y="527.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (34 samples, 2.75%)</title><rect x="44.1842%" y="501" width="2.7464%" height="15" fill="rgb(213,159,11)" fg:x="547" fg:w="34"/><text x="44.4342%" y="511.50">pl..</text></g><g><title>plugins_core::build::Build::save (22 samples, 1.78%)</title><rect x="45.1535%" y="485" width="1.7771%" height="15" fill="rgb(229,13,31)" fg:x="559" fg:w="22"/><text x="45.4035%" y="495.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="46.7690%" y="469" width="0.1616%" height="15" fill="rgb(209,103,11)" fg:x="579" fg:w="2"/><text x="47.0190%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="46.7690%" y="453" width="0.1616%" height="15" fill="rgb(206,3,4)" fg:x="579" fg:w="2"/><text x="47.0190%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="46.7690%" y="437" width="0.1616%" height="15" fill="rgb(252,10,49)" fg:x="579" fg:w="2"/><text x="47.0190%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8498%" y="421" width="0.0808%" height="15" fill="rgb(217,160,32)" fg:x="580" fg:w="1"/><text x="47.0998%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.8498%" y="405" width="0.0808%" height="15" fill="rgb(249,196,0)" fg:x="580" fg:w="1"/><text x="47.0998%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8498%" y="389" width="0.0808%" height="15" fill="rgb(213,17,48)" fg:x="580" fg:w="1"/><text x="47.0998%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.8498%" y="373" width="0.0808%" height="15" fill="rgb(206,42,46)" fg:x="580" fg:w="1"/><text x="47.0998%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.8498%" y="357" width="0.0808%" height="15" fill="rgb(212,105,24)" fg:x="580" fg:w="1"/><text x="47.0998%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.8498%" y="341" width="0.0808%" height="15" fill="rgb(243,216,30)" fg:x="580" fg:w="1"/><text x="47.0998%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="46.9305%" y="517" width="0.0808%" height="15" fill="rgb(207,121,3)" fg:x="581" fg:w="1"/><text x="47.1805%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.9305%" y="501" width="0.0808%" height="15" fill="rgb(249,78,0)" fg:x="581" fg:w="1"/><text x="47.1805%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="46.9305%" y="485" width="0.0808%" height="15" fill="rgb(244,151,32)" fg:x="581" fg:w="1"/><text x="47.1805%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.9305%" y="469" width="0.0808%" height="15" fill="rgb(228,63,25)" fg:x="581" fg:w="1"/><text x="47.1805%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9305%" y="453" width="0.0808%" height="15" fill="rgb(231,158,23)" fg:x="581" fg:w="1"/><text x="47.1805%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.0113%" y="485" width="0.0808%" height="15" fill="rgb(248,107,23)" fg:x="582" fg:w="1"/><text x="47.2613%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="47.0113%" y="501" width="0.2423%" height="15" fill="rgb(215,168,21)" fg:x="582" fg:w="3"/><text x="47.2613%" y="511.50"></text></g><g><title>kernel::model::base::EntityKey::new (2 samples, 0.16%)</title><rect x="47.0921%" y="485" width="0.1616%" height="15" fill="rgb(227,83,22)" fg:x="583" fg:w="2"/><text x="47.3421%" y="495.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.2536%" y="501" width="0.0808%" height="15" fill="rgb(217,118,43)" fg:x="585" fg:w="1"/><text x="47.5036%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="47.4152%" y="389" width="0.0808%" height="15" fill="rgb(229,220,41)" fg:x="587" fg:w="1"/><text x="47.6652%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.4152%" y="373" width="0.0808%" height="15" fill="rgb(254,146,46)" fg:x="587" fg:w="1"/><text x="47.6652%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.4152%" y="357" width="0.0808%" height="15" fill="rgb(233,208,31)" fg:x="587" fg:w="1"/><text x="47.6652%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.4152%" y="341" width="0.0808%" height="15" fill="rgb(222,162,7)" fg:x="587" fg:w="1"/><text x="47.6652%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.4152%" y="325" width="0.0808%" height="15" fill="rgb(230,117,45)" fg:x="587" fg:w="1"/><text x="47.6652%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="47.4152%" y="309" width="0.0808%" height="15" fill="rgb(239,163,6)" fg:x="587" fg:w="1"/><text x="47.6652%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="47.4152%" y="293" width="0.0808%" height="15" fill="rgb(246,130,17)" fg:x="587" fg:w="1"/><text x="47.6652%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="47.4152%" y="277" width="0.0808%" height="15" fill="rgb(216,84,5)" fg:x="587" fg:w="1"/><text x="47.6652%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="47.4152%" y="261" width="0.0808%" height="15" fill="rgb(230,200,21)" fg:x="587" fg:w="1"/><text x="47.6652%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.4152%" y="245" width="0.0808%" height="15" fill="rgb(224,2,8)" fg:x="587" fg:w="1"/><text x="47.6652%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="47.4152%" y="229" width="0.0808%" height="15" fill="rgb(238,178,10)" fg:x="587" fg:w="1"/><text x="47.6652%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.4152%" y="213" width="0.0808%" height="15" fill="rgb(242,153,24)" fg:x="587" fg:w="1"/><text x="47.6652%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="47.4152%" y="197" width="0.0808%" height="15" fill="rgb(242,32,48)" fg:x="587" fg:w="1"/><text x="47.6652%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.4152%" y="181" width="0.0808%" height="15" fill="rgb(227,36,0)" fg:x="587" fg:w="1"/><text x="47.6652%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="47.4152%" y="165" width="0.0808%" height="15" fill="rgb(251,33,35)" fg:x="587" fg:w="1"/><text x="47.6652%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="47.4152%" y="149" width="0.0808%" height="15" fill="rgb(232,168,51)" fg:x="587" fg:w="1"/><text x="47.6652%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="47.4152%" y="133" width="0.0808%" height="15" fill="rgb(228,56,10)" fg:x="587" fg:w="1"/><text x="47.6652%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="47.4152%" y="117" width="0.0808%" height="15" fill="rgb(231,10,26)" fg:x="587" fg:w="1"/><text x="47.6652%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="47.3344%" y="501" width="0.2423%" height="15" fill="rgb(226,202,12)" fg:x="586" fg:w="3"/><text x="47.5844%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="47.3344%" y="485" width="0.2423%" height="15" fill="rgb(251,49,21)" fg:x="586" fg:w="3"/><text x="47.5844%" y="495.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="47.3344%" y="469" width="0.2423%" height="15" fill="rgb(206,228,28)" fg:x="586" fg:w="3"/><text x="47.5844%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="47.3344%" y="453" width="0.2423%" height="15" fill="rgb(205,198,31)" fg:x="586" fg:w="3"/><text x="47.5844%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="47.3344%" y="437" width="0.2423%" height="15" fill="rgb(213,69,1)" fg:x="586" fg:w="3"/><text x="47.5844%" y="447.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="47.4152%" y="421" width="0.1616%" height="15" fill="rgb(209,177,9)" fg:x="587" fg:w="2"/><text x="47.6652%" y="431.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="47.4152%" y="405" width="0.1616%" height="15" fill="rgb(227,119,30)" fg:x="587" fg:w="2"/><text x="47.6652%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.4960%" y="389" width="0.0808%" height="15" fill="rgb(234,106,41)" fg:x="588" fg:w="1"/><text x="47.7460%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.4960%" y="373" width="0.0808%" height="15" fill="rgb(244,103,47)" fg:x="588" fg:w="1"/><text x="47.7460%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="47.4960%" y="357" width="0.0808%" height="15" fill="rgb(212,211,25)" fg:x="588" fg:w="1"/><text x="47.7460%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="47.4960%" y="341" width="0.0808%" height="15" fill="rgb(208,63,53)" fg:x="588" fg:w="1"/><text x="47.7460%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="47.4960%" y="325" width="0.0808%" height="15" fill="rgb(213,176,21)" fg:x="588" fg:w="1"/><text x="47.7460%" y="335.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="47.5767%" y="501" width="0.0808%" height="15" fill="rgb(243,124,12)" fg:x="589" fg:w="1"/><text x="47.8267%" y="511.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="47.5767%" y="485" width="0.0808%" height="15" fill="rgb(239,2,35)" fg:x="589" fg:w="1"/><text x="47.8267%" y="495.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="47.5767%" y="469" width="0.0808%" height="15" fill="rgb(253,169,22)" fg:x="589" fg:w="1"/><text x="47.8267%" y="479.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="47.5767%" y="453" width="0.0808%" height="15" fill="rgb(254,51,12)" fg:x="589" fg:w="1"/><text x="47.8267%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="47.5767%" y="437" width="0.0808%" height="15" fill="rgb(244,17,47)" fg:x="589" fg:w="1"/><text x="47.8267%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="47.5767%" y="421" width="0.0808%" height="15" fill="rgb(251,45,46)" fg:x="589" fg:w="1"/><text x="47.8267%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="47.5767%" y="405" width="0.0808%" height="15" fill="rgb(223,87,43)" fg:x="589" fg:w="1"/><text x="47.8267%" y="415.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="47.5767%" y="389" width="0.0808%" height="15" fill="rgb(230,132,31)" fg:x="589" fg:w="1"/><text x="47.8267%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="47.6575%" y="469" width="0.1616%" height="15" fill="rgb(206,99,1)" fg:x="590" fg:w="2"/><text x="47.9075%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="47.6575%" y="453" width="0.1616%" height="15" fill="rgb(227,110,25)" fg:x="590" fg:w="2"/><text x="47.9075%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="47.7383%" y="437" width="0.0808%" height="15" fill="rgb(217,182,7)" fg:x="591" fg:w="1"/><text x="47.9883%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="47.8191%" y="421" width="0.1616%" height="15" fill="rgb(250,176,4)" fg:x="592" fg:w="2"/><text x="48.0691%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="47.8191%" y="405" width="0.1616%" height="15" fill="rgb(244,98,30)" fg:x="592" fg:w="2"/><text x="48.0691%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.8191%" y="389" width="0.1616%" height="15" fill="rgb(228,150,42)" fg:x="592" fg:w="2"/><text x="48.0691%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="47.8191%" y="373" width="0.1616%" height="15" fill="rgb(231,91,46)" fg:x="592" fg:w="2"/><text x="48.0691%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.8191%" y="357" width="0.1616%" height="15" fill="rgb(252,161,32)" fg:x="592" fg:w="2"/><text x="48.0691%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.8998%" y="341" width="0.0808%" height="15" fill="rgb(236,69,41)" fg:x="593" fg:w="1"/><text x="48.1498%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.8998%" y="325" width="0.0808%" height="15" fill="rgb(212,160,3)" fg:x="593" fg:w="1"/><text x="48.1498%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="47.9806%" y="389" width="0.3231%" height="15" fill="rgb(216,5,50)" fg:x="594" fg:w="4"/><text x="48.2306%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.1422%" y="373" width="0.1616%" height="15" fill="rgb(241,138,25)" fg:x="596" fg:w="2"/><text x="48.3922%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="48.1422%" y="357" width="0.1616%" height="15" fill="rgb(239,42,18)" fg:x="596" fg:w="2"/><text x="48.3922%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.2229%" y="341" width="0.0808%" height="15" fill="rgb(239,40,7)" fg:x="597" fg:w="1"/><text x="48.4729%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.2229%" y="325" width="0.0808%" height="15" fill="rgb(239,11,31)" fg:x="597" fg:w="1"/><text x="48.4729%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.2229%" y="309" width="0.0808%" height="15" fill="rgb(224,77,40)" fg:x="597" fg:w="1"/><text x="48.4729%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="48.2229%" y="293" width="0.0808%" height="15" fill="rgb(226,15,5)" fg:x="597" fg:w="1"/><text x="48.4729%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.65%)</title><rect x="47.9806%" y="405" width="0.6462%" height="15" fill="rgb(254,188,5)" fg:x="594" fg:w="8"/><text x="48.2306%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="48.3037%" y="389" width="0.3231%" height="15" fill="rgb(241,148,52)" fg:x="598" fg:w="4"/><text x="48.5537%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="48.3845%" y="373" width="0.2423%" height="15" fill="rgb(251,48,36)" fg:x="599" fg:w="3"/><text x="48.6345%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.5460%" y="357" width="0.0808%" height="15" fill="rgb(243,83,13)" fg:x="601" fg:w="1"/><text x="48.7960%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.6268%" y="389" width="0.0808%" height="15" fill="rgb(210,105,0)" fg:x="602" fg:w="1"/><text x="48.8768%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="48.7076%" y="389" width="0.0808%" height="15" fill="rgb(239,60,36)" fg:x="603" fg:w="1"/><text x="48.9576%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.7076%" y="373" width="0.0808%" height="15" fill="rgb(210,20,0)" fg:x="603" fg:w="1"/><text x="48.9576%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.7076%" y="357" width="0.0808%" height="15" fill="rgb(244,26,53)" fg:x="603" fg:w="1"/><text x="48.9576%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.7076%" y="341" width="0.0808%" height="15" fill="rgb(240,100,49)" fg:x="603" fg:w="1"/><text x="48.9576%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="48.7884%" y="389" width="0.4847%" height="15" fill="rgb(250,46,45)" fg:x="604" fg:w="6"/><text x="49.0384%" y="399.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="48.8691%" y="373" width="0.4039%" height="15" fill="rgb(220,181,29)" fg:x="605" fg:w="5"/><text x="49.1191%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="48.9499%" y="357" width="0.3231%" height="15" fill="rgb(213,137,33)" fg:x="606" fg:w="4"/><text x="49.1999%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="48.9499%" y="341" width="0.3231%" height="15" fill="rgb(213,27,48)" fg:x="606" fg:w="4"/><text x="49.1999%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="49.1115%" y="325" width="0.1616%" height="15" fill="rgb(245,180,39)" fg:x="608" fg:w="2"/><text x="49.3615%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="49.1115%" y="309" width="0.1616%" height="15" fill="rgb(212,158,42)" fg:x="608" fg:w="2"/><text x="49.3615%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="49.1115%" y="293" width="0.1616%" height="15" fill="rgb(228,193,18)" fg:x="608" fg:w="2"/><text x="49.3615%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.4346%" y="373" width="0.0808%" height="15" fill="rgb(245,172,29)" fg:x="612" fg:w="1"/><text x="49.6846%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.5153%" y="341" width="0.0808%" height="15" fill="rgb(207,98,24)" fg:x="613" fg:w="1"/><text x="49.7653%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="49.5961%" y="341" width="0.0808%" height="15" fill="rgb(249,92,26)" fg:x="614" fg:w="1"/><text x="49.8461%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.6769%" y="325" width="0.1616%" height="15" fill="rgb(217,176,26)" fg:x="615" fg:w="2"/><text x="49.9269%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.7577%" y="309" width="0.0808%" height="15" fill="rgb(221,8,39)" fg:x="616" fg:w="1"/><text x="50.0077%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="49.6769%" y="341" width="0.4039%" height="15" fill="rgb(208,90,18)" fg:x="615" fg:w="5"/><text x="49.9269%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="49.8384%" y="325" width="0.2423%" height="15" fill="rgb(207,202,30)" fg:x="617" fg:w="3"/><text x="50.0884%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="49.8384%" y="309" width="0.2423%" height="15" fill="rgb(231,124,22)" fg:x="617" fg:w="3"/><text x="50.0884%" y="319.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="49.8384%" y="293" width="0.2423%" height="15" fill="rgb(206,15,5)" fg:x="617" fg:w="3"/><text x="50.0884%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="49.9192%" y="277" width="0.1616%" height="15" fill="rgb(239,16,52)" fg:x="618" fg:w="2"/><text x="50.1692%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="49.9192%" y="261" width="0.1616%" height="15" fill="rgb(245,213,29)" fg:x="618" fg:w="2"/><text x="50.1692%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.73%)</title><rect x="49.5153%" y="373" width="0.7270%" height="15" fill="rgb(213,203,36)" fg:x="613" fg:w="9"/><text x="49.7653%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="49.5153%" y="357" width="0.7270%" height="15" fill="rgb(209,55,18)" fg:x="613" fg:w="9"/><text x="49.7653%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="50.0808%" y="341" width="0.1616%" height="15" fill="rgb(207,133,49)" fg:x="620" fg:w="2"/><text x="50.3308%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="50.2423%" y="373" width="0.2423%" height="15" fill="rgb(240,33,46)" fg:x="622" fg:w="3"/><text x="50.4923%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.4039%" y="357" width="0.0808%" height="15" fill="rgb(212,35,2)" fg:x="624" fg:w="1"/><text x="50.6539%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.7270%" y="357" width="0.0808%" height="15" fill="rgb(231,119,28)" fg:x="628" fg:w="1"/><text x="50.9770%" y="367.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="50.8078%" y="357" width="0.0808%" height="15" fill="rgb(252,178,7)" fg:x="629" fg:w="1"/><text x="51.0578%" y="367.50"></text></g><g><title>ryu::d2s::d2d (1 samples, 0.08%)</title><rect x="50.8078%" y="341" width="0.0808%" height="15" fill="rgb(251,91,4)" fg:x="629" fg:w="1"/><text x="51.0578%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="50.8885%" y="357" width="0.3231%" height="15" fill="rgb(233,122,19)" fg:x="630" fg:w="4"/><text x="51.1385%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="50.8885%" y="341" width="0.3231%" height="15" fill="rgb(231,208,46)" fg:x="630" fg:w="4"/><text x="51.1385%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="51.0501%" y="325" width="0.1616%" height="15" fill="rgb(243,15,41)" fg:x="632" fg:w="2"/><text x="51.3001%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.1309%" y="309" width="0.0808%" height="15" fill="rgb(210,32,43)" fg:x="633" fg:w="1"/><text x="51.3809%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.1309%" y="293" width="0.0808%" height="15" fill="rgb(222,177,15)" fg:x="633" fg:w="1"/><text x="51.3809%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.1309%" y="277" width="0.0808%" height="15" fill="rgb(244,121,34)" fg:x="633" fg:w="1"/><text x="51.3809%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="51.1309%" y="261" width="0.0808%" height="15" fill="rgb(234,138,4)" fg:x="633" fg:w="1"/><text x="51.3809%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="51.2924%" y="341" width="0.0808%" height="15" fill="rgb(240,97,48)" fg:x="635" fg:w="1"/><text x="51.5424%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.2924%" y="325" width="0.0808%" height="15" fill="rgb(237,65,54)" fg:x="635" fg:w="1"/><text x="51.5424%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.2924%" y="309" width="0.0808%" height="15" fill="rgb(214,25,24)" fg:x="635" fg:w="1"/><text x="51.5424%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.2924%" y="293" width="0.0808%" height="15" fill="rgb(213,5,3)" fg:x="635" fg:w="1"/><text x="51.5424%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.2924%" y="277" width="0.0808%" height="15" fill="rgb(219,81,29)" fg:x="635" fg:w="1"/><text x="51.5424%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.2924%" y="261" width="0.0808%" height="15" fill="rgb(220,43,48)" fg:x="635" fg:w="1"/><text x="51.5424%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="51.2924%" y="245" width="0.0808%" height="15" fill="rgb(239,157,2)" fg:x="635" fg:w="1"/><text x="51.5424%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="51.3732%" y="341" width="0.0808%" height="15" fill="rgb(213,104,43)" fg:x="636" fg:w="1"/><text x="51.6232%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.3732%" y="325" width="0.0808%" height="15" fill="rgb(237,84,9)" fg:x="636" fg:w="1"/><text x="51.6232%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.3732%" y="309" width="0.0808%" height="15" fill="rgb(252,6,33)" fg:x="636" fg:w="1"/><text x="51.6232%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.3732%" y="293" width="0.0808%" height="15" fill="rgb(251,172,22)" fg:x="636" fg:w="1"/><text x="51.6232%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="51.2116%" y="357" width="0.4039%" height="15" fill="rgb(244,91,53)" fg:x="634" fg:w="5"/><text x="51.4616%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="51.4540%" y="341" width="0.1616%" height="15" fill="rgb(219,29,30)" fg:x="637" fg:w="2"/><text x="51.7040%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.5347%" y="325" width="0.0808%" height="15" fill="rgb(213,3,15)" fg:x="638" fg:w="1"/><text x="51.7847%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.58%)</title><rect x="49.2730%" y="389" width="2.5848%" height="15" fill="rgb(208,25,28)" fg:x="610" fg:w="32"/><text x="49.5230%" y="399.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.37%)</title><rect x="50.4847%" y="373" width="1.3732%" height="15" fill="rgb(252,144,25)" fg:x="625" fg:w="17"/><text x="50.7347%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="51.6155%" y="357" width="0.2423%" height="15" fill="rgb(226,220,25)" fg:x="639" fg:w="3"/><text x="51.8655%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (57 samples, 4.60%)</title><rect x="47.9806%" y="421" width="4.6042%" height="15" fill="rgb(212,131,28)" fg:x="594" fg:w="57"/><text x="48.2306%" y="431.50">&lt;serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (49 samples, 3.96%)</title><rect x="48.6268%" y="405" width="3.9580%" height="15" fill="rgb(219,143,52)" fg:x="602" fg:w="49"/><text x="48.8768%" y="415.50">serd..</text></g><g><title>std::io::Write::write_all (9 samples, 0.73%)</title><rect x="51.8578%" y="389" width="0.7270%" height="15" fill="rgb(215,56,7)" fg:x="642" fg:w="9"/><text x="52.1078%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.65%)</title><rect x="51.9386%" y="373" width="0.6462%" height="15" fill="rgb(239,59,51)" fg:x="643" fg:w="8"/><text x="52.1886%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="52.1002%" y="357" width="0.4847%" height="15" fill="rgb(209,215,4)" fg:x="645" fg:w="6"/><text x="52.3502%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="52.3425%" y="341" width="0.2423%" height="15" fill="rgb(221,118,39)" fg:x="648" fg:w="3"/><text x="52.5925%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="52.3425%" y="325" width="0.2423%" height="15" fill="rgb(236,6,44)" fg:x="648" fg:w="3"/><text x="52.5925%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="52.4233%" y="309" width="0.1616%" height="15" fill="rgb(216,122,9)" fg:x="649" fg:w="2"/><text x="52.6733%" y="319.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="52.5848%" y="373" width="0.3231%" height="15" fill="rgb(244,134,42)" fg:x="651" fg:w="4"/><text x="52.8348%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.9079%" y="373" width="0.0808%" height="15" fill="rgb(209,189,35)" fg:x="655" fg:w="1"/><text x="53.1579%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.0695%" y="357" width="0.1616%" height="15" fill="rgb(250,47,36)" fg:x="657" fg:w="2"/><text x="53.3195%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="53.2310%" y="357" width="0.2423%" height="15" fill="rgb(252,112,4)" fg:x="659" fg:w="3"/><text x="53.4810%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="53.2310%" y="341" width="0.2423%" height="15" fill="rgb(221,79,51)" fg:x="659" fg:w="3"/><text x="53.4810%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5541%" y="341" width="0.0808%" height="15" fill="rgb(232,65,53)" fg:x="663" fg:w="1"/><text x="53.8041%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.6349%" y="341" width="0.0808%" height="15" fill="rgb(211,37,7)" fg:x="664" fg:w="1"/><text x="53.8849%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6349%" y="325" width="0.0808%" height="15" fill="rgb(234,221,18)" fg:x="664" fg:w="1"/><text x="53.8849%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.7157%" y="309" width="0.0808%" height="15" fill="rgb(220,158,26)" fg:x="665" fg:w="1"/><text x="53.9657%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="53.7157%" y="341" width="0.1616%" height="15" fill="rgb(220,70,6)" fg:x="665" fg:w="2"/><text x="53.9657%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="53.7157%" y="325" width="0.1616%" height="15" fill="rgb(250,39,48)" fg:x="665" fg:w="2"/><text x="53.9657%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.7964%" y="309" width="0.0808%" height="15" fill="rgb(206,40,27)" fg:x="666" fg:w="1"/><text x="54.0464%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="52.5848%" y="421" width="1.3732%" height="15" fill="rgb(247,80,36)" fg:x="651" fg:w="17"/><text x="52.8348%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.37%)</title><rect x="52.5848%" y="405" width="1.3732%" height="15" fill="rgb(222,9,20)" fg:x="651" fg:w="17"/><text x="52.8348%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="52.5848%" y="389" width="1.3732%" height="15" fill="rgb(217,26,45)" fg:x="651" fg:w="17"/><text x="52.8348%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="52.9887%" y="373" width="0.9693%" height="15" fill="rgb(221,67,14)" fg:x="656" fg:w="12"/><text x="53.2387%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="53.4733%" y="357" width="0.4847%" height="15" fill="rgb(248,100,24)" fg:x="662" fg:w="6"/><text x="53.7233%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.8772%" y="341" width="0.0808%" height="15" fill="rgb(230,187,16)" fg:x="667" fg:w="1"/><text x="54.1272%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.8772%" y="325" width="0.0808%" height="15" fill="rgb(205,108,13)" fg:x="667" fg:w="1"/><text x="54.1272%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="53.9580%" y="389" width="0.1616%" height="15" fill="rgb(235,71,51)" fg:x="668" fg:w="2"/><text x="54.2080%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.0388%" y="373" width="0.0808%" height="15" fill="rgb(251,172,48)" fg:x="669" fg:w="1"/><text x="54.2888%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.2003%" y="357" width="0.1616%" height="15" fill="rgb(240,96,49)" fg:x="671" fg:w="2"/><text x="54.4503%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.6042%" y="341" width="0.0808%" height="15" fill="rgb(235,46,36)" fg:x="676" fg:w="1"/><text x="54.8542%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="54.6850%" y="341" width="0.2423%" height="15" fill="rgb(244,3,49)" fg:x="677" fg:w="3"/><text x="54.9350%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.7658%" y="325" width="0.1616%" height="15" fill="rgb(206,78,54)" fg:x="678" fg:w="2"/><text x="55.0158%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="54.9273%" y="325" width="0.2423%" height="15" fill="rgb(208,85,42)" fg:x="680" fg:w="3"/><text x="55.1773%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.0081%" y="309" width="0.1616%" height="15" fill="rgb(219,196,21)" fg:x="681" fg:w="2"/><text x="55.2581%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="55.1696%" y="325" width="0.0808%" height="15" fill="rgb(238,19,9)" fg:x="683" fg:w="1"/><text x="55.4196%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.2504%" y="309" width="0.0808%" height="15" fill="rgb(206,86,13)" fg:x="684" fg:w="1"/><text x="55.5004%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.4120%" y="277" width="0.0808%" height="15" fill="rgb(214,123,40)" fg:x="686" fg:w="1"/><text x="55.6620%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="55.3312%" y="309" width="0.3231%" height="15" fill="rgb(243,53,5)" fg:x="685" fg:w="4"/><text x="55.5812%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="55.4120%" y="293" width="0.2423%" height="15" fill="rgb(254,186,31)" fg:x="686" fg:w="3"/><text x="55.6620%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="55.4927%" y="277" width="0.1616%" height="15" fill="rgb(221,216,25)" fg:x="687" fg:w="2"/><text x="55.7427%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5735%" y="261" width="0.0808%" height="15" fill="rgb(248,107,42)" fg:x="688" fg:w="1"/><text x="55.8235%" y="271.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.8158%" y="293" width="0.1616%" height="15" fill="rgb(221,85,43)" fg:x="691" fg:w="2"/><text x="56.0658%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (24 samples, 1.94%)</title><rect x="54.1195%" y="389" width="1.9386%" height="15" fill="rgb(225,34,24)" fg:x="670" fg:w="24"/><text x="54.3695%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (24 samples, 1.94%)</title><rect x="54.1195%" y="373" width="1.9386%" height="15" fill="rgb(211,119,1)" fg:x="670" fg:w="24"/><text x="54.3695%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.70%)</title><rect x="54.3619%" y="357" width="1.6963%" height="15" fill="rgb(254,216,46)" fg:x="673" fg:w="21"/><text x="54.6119%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="54.9273%" y="341" width="1.1309%" height="15" fill="rgb(238,11,38)" fg:x="680" fg:w="14"/><text x="55.1773%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="55.2504%" y="325" width="0.8078%" height="15" fill="rgb(233,50,15)" fg:x="684" fg:w="10"/><text x="55.5004%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="55.6543%" y="309" width="0.4039%" height="15" fill="rgb(217,181,29)" fg:x="689" fg:w="5"/><text x="55.9043%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.9774%" y="293" width="0.0808%" height="15" fill="rgb(214,56,3)" fg:x="693" fg:w="1"/><text x="56.2274%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="56.0582%" y="389" width="0.0808%" height="15" fill="rgb(230,69,45)" fg:x="694" fg:w="1"/><text x="56.3082%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="56.5428%" y="325" width="0.0808%" height="15" fill="rgb(224,201,50)" fg:x="700" fg:w="1"/><text x="56.7928%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="56.5428%" y="309" width="0.0808%" height="15" fill="rgb(217,228,18)" fg:x="700" fg:w="1"/><text x="56.7928%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="56.5428%" y="293" width="0.0808%" height="15" fill="rgb(239,33,44)" fg:x="700" fg:w="1"/><text x="56.7928%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="56.6236%" y="325" width="0.1616%" height="15" fill="rgb(248,210,23)" fg:x="701" fg:w="2"/><text x="56.8736%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="56.6236%" y="309" width="0.1616%" height="15" fill="rgb(253,135,8)" fg:x="701" fg:w="2"/><text x="56.8736%" y="319.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (36 samples, 2.91%)</title><rect x="53.9580%" y="405" width="2.9079%" height="15" fill="rgb(217,98,21)" fg:x="668" fg:w="36"/><text x="54.2080%" y="415.50">&lt;k..</text></g><g><title>treediff::diff::diff (9 samples, 0.73%)</title><rect x="56.1389%" y="389" width="0.7270%" height="15" fill="rgb(253,130,21)" fg:x="695" fg:w="9"/><text x="56.3889%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.65%)</title><rect x="56.2197%" y="373" width="0.6462%" height="15" fill="rgb(207,81,54)" fg:x="696" fg:w="8"/><text x="56.4697%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.65%)</title><rect x="56.2197%" y="357" width="0.6462%" height="15" fill="rgb(232,48,33)" fg:x="696" fg:w="8"/><text x="56.4697%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="56.4620%" y="341" width="0.4039%" height="15" fill="rgb(211,9,35)" fg:x="699" fg:w="5"/><text x="56.7120%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="56.7851%" y="325" width="0.0808%" height="15" fill="rgb(205,152,21)" fg:x="703" fg:w="1"/><text x="57.0351%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.4313%" y="373" width="0.1616%" height="15" fill="rgb(249,21,27)" fg:x="711" fg:w="2"/><text x="57.6813%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="57.5929%" y="373" width="0.3231%" height="15" fill="rgb(252,29,24)" fg:x="713" fg:w="4"/><text x="57.8429%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8352%" y="357" width="0.0808%" height="15" fill="rgb(230,130,50)" fg:x="716" fg:w="1"/><text x="58.0852%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="57.9160%" y="373" width="0.2423%" height="15" fill="rgb(239,144,14)" fg:x="717" fg:w="3"/><text x="58.1660%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="57.9968%" y="357" width="0.1616%" height="15" fill="rgb(227,111,50)" fg:x="718" fg:w="2"/><text x="58.2468%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="58.0775%" y="341" width="0.0808%" height="15" fill="rgb(254,84,20)" fg:x="719" fg:w="1"/><text x="58.3275%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="58.0775%" y="325" width="0.0808%" height="15" fill="rgb(232,90,48)" fg:x="719" fg:w="1"/><text x="58.3275%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1583%" y="341" width="0.0808%" height="15" fill="rgb(253,63,47)" fg:x="720" fg:w="1"/><text x="58.4083%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="58.1583%" y="373" width="0.1616%" height="15" fill="rgb(251,146,35)" fg:x="720" fg:w="2"/><text x="58.4083%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="58.1583%" y="357" width="0.1616%" height="15" fill="rgb(229,192,35)" fg:x="720" fg:w="2"/><text x="58.4083%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.2391%" y="341" width="0.0808%" height="15" fill="rgb(225,68,9)" fg:x="721" fg:w="1"/><text x="58.4891%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.2391%" y="325" width="0.0808%" height="15" fill="rgb(214,97,34)" fg:x="721" fg:w="1"/><text x="58.4891%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="58.4006%" y="357" width="0.0808%" height="15" fill="rgb(253,31,26)" fg:x="723" fg:w="1"/><text x="58.6506%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="58.4814%" y="341" width="0.0808%" height="15" fill="rgb(225,151,47)" fg:x="724" fg:w="1"/><text x="58.7314%" y="351.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="58.8853%" y="293" width="0.4039%" height="15" fill="rgb(206,185,9)" fg:x="729" fg:w="5"/><text x="59.1353%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.65%)</title><rect x="58.7237%" y="325" width="0.6462%" height="15" fill="rgb(249,65,17)" fg:x="727" fg:w="8"/><text x="58.9737%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="58.8853%" y="309" width="0.4847%" height="15" fill="rgb(220,110,10)" fg:x="729" fg:w="6"/><text x="59.1353%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="59.2892%" y="293" width="0.0808%" height="15" fill="rgb(222,198,49)" fg:x="734" fg:w="1"/><text x="59.5392%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="59.2892%" y="277" width="0.0808%" height="15" fill="rgb(239,81,13)" fg:x="734" fg:w="1"/><text x="59.5392%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.6123%" y="277" width="0.1616%" height="15" fill="rgb(216,128,11)" fg:x="738" fg:w="2"/><text x="59.8623%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.6931%" y="261" width="0.0808%" height="15" fill="rgb(247,156,8)" fg:x="739" fg:w="1"/><text x="59.9431%" y="271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.6931%" y="245" width="0.0808%" height="15" fill="rgb(219,173,1)" fg:x="739" fg:w="1"/><text x="59.9431%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="59.9354%" y="229" width="0.0808%" height="15" fill="rgb(227,42,24)" fg:x="742" fg:w="1"/><text x="60.1854%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9354%" y="213" width="0.0808%" height="15" fill="rgb(253,219,50)" fg:x="742" fg:w="1"/><text x="60.1854%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="59.6123%" y="293" width="0.5654%" height="15" fill="rgb(215,191,54)" fg:x="738" fg:w="7"/><text x="59.8623%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="59.7738%" y="277" width="0.4039%" height="15" fill="rgb(238,83,12)" fg:x="740" fg:w="5"/><text x="60.0238%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="59.8546%" y="261" width="0.3231%" height="15" fill="rgb(205,124,9)" fg:x="741" fg:w="4"/><text x="60.1046%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="59.8546%" y="245" width="0.3231%" height="15" fill="rgb(253,174,7)" fg:x="741" fg:w="4"/><text x="60.1046%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.0162%" y="229" width="0.1616%" height="15" fill="rgb(206,134,49)" fg:x="743" fg:w="2"/><text x="60.2662%" y="239.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.1777%" y="293" width="0.2423%" height="15" fill="rgb(221,89,20)" fg:x="745" fg:w="3"/><text x="60.4277%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (14 samples, 1.13%)</title><rect x="59.3700%" y="325" width="1.1309%" height="15" fill="rgb(240,205,13)" fg:x="735" fg:w="14"/><text x="59.6200%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.05%)</title><rect x="59.4507%" y="309" width="1.0501%" height="15" fill="rgb(237,174,32)" fg:x="736" fg:w="13"/><text x="59.7007%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="60.4200%" y="293" width="0.0808%" height="15" fill="rgb(226,12,15)" fg:x="748" fg:w="1"/><text x="60.6700%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="60.4200%" y="277" width="0.0808%" height="15" fill="rgb(245,160,52)" fg:x="748" fg:w="1"/><text x="60.6700%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="60.7431%" y="309" width="0.0808%" height="15" fill="rgb(253,80,21)" fg:x="752" fg:w="1"/><text x="60.9931%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="61.0662%" y="293" width="0.3231%" height="15" fill="rgb(231,225,22)" fg:x="756" fg:w="4"/><text x="61.3162%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="61.1470%" y="277" width="0.2423%" height="15" fill="rgb(253,185,12)" fg:x="757" fg:w="3"/><text x="61.3970%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.2278%" y="261" width="0.1616%" height="15" fill="rgb(234,197,21)" fg:x="758" fg:w="2"/><text x="61.4778%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="61.4701%" y="277" width="0.3231%" height="15" fill="rgb(210,47,30)" fg:x="761" fg:w="4"/><text x="61.7201%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="61.6317%" y="261" width="0.1616%" height="15" fill="rgb(246,139,27)" fg:x="763" fg:w="2"/><text x="61.8817%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.6317%" y="245" width="0.1616%" height="15" fill="rgb(226,130,16)" fg:x="763" fg:w="2"/><text x="61.8817%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="60.8239%" y="309" width="1.1309%" height="15" fill="rgb(237,208,20)" fg:x="753" fg:w="14"/><text x="61.0739%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="61.3893%" y="293" width="0.5654%" height="15" fill="rgb(245,186,28)" fg:x="760" fg:w="7"/><text x="61.6393%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.7932%" y="277" width="0.1616%" height="15" fill="rgb(238,105,39)" fg:x="765" fg:w="2"/><text x="62.0432%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (43 samples, 3.47%)</title><rect x="58.5622%" y="341" width="3.4733%" height="15" fill="rgb(253,228,11)" fg:x="725" fg:w="43"/><text x="58.8122%" y="351.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.53%)</title><rect x="60.5008%" y="325" width="1.5347%" height="15" fill="rgb(224,136,38)" fg:x="749" fg:w="19"/><text x="60.7508%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9548%" y="309" width="0.0808%" height="15" fill="rgb(211,3,25)" fg:x="767" fg:w="1"/><text x="62.2048%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (46 samples, 3.72%)</title><rect x="58.4814%" y="357" width="3.7157%" height="15" fill="rgb(238,66,34)" fg:x="724" fg:w="46"/><text x="58.7314%" y="367.50">&lt;ser..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="62.0355%" y="341" width="0.1616%" height="15" fill="rgb(223,188,11)" fg:x="768" fg:w="2"/><text x="62.2855%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1163%" y="325" width="0.0808%" height="15" fill="rgb(221,10,35)" fg:x="769" fg:w="1"/><text x="62.3663%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="62.1971%" y="357" width="0.2423%" height="15" fill="rgb(223,18,44)" fg:x="770" fg:w="3"/><text x="62.4471%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (70 samples, 5.65%)</title><rect x="56.8659%" y="405" width="5.6543%" height="15" fill="rgb(220,97,41)" fg:x="704" fg:w="70"/><text x="57.1159%" y="415.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (68 samples, 5.49%)</title><rect x="57.0275%" y="389" width="5.4927%" height="15" fill="rgb(206,95,45)" fg:x="706" fg:w="68"/><text x="57.2775%" y="399.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (52 samples, 4.20%)</title><rect x="58.3199%" y="373" width="4.2003%" height="15" fill="rgb(209,96,13)" fg:x="722" fg:w="52"/><text x="58.5699%" y="383.50">serde..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.4394%" y="357" width="0.0808%" height="15" fill="rgb(237,39,34)" fg:x="773" fg:w="1"/><text x="62.6894%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.4394%" y="341" width="0.0808%" height="15" fill="rgb(213,49,47)" fg:x="773" fg:w="1"/><text x="62.6894%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.6817%" y="325" width="0.0808%" height="15" fill="rgb(205,107,27)" fg:x="776" fg:w="1"/><text x="62.9317%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4 samples, 0.32%)</title><rect x="62.9241%" y="293" width="0.3231%" height="15" fill="rgb(212,142,9)" fg:x="779" fg:w="4"/><text x="63.1741%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.5703%" y="229" width="0.0808%" height="15" fill="rgb(226,182,0)" fg:x="787" fg:w="1"/><text x="63.8203%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.5703%" y="213" width="0.0808%" height="15" fill="rgb(231,3,53)" fg:x="787" fg:w="1"/><text x="63.8203%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.5703%" y="197" width="0.0808%" height="15" fill="rgb(246,111,28)" fg:x="787" fg:w="1"/><text x="63.8203%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.5703%" y="181" width="0.0808%" height="15" fill="rgb(254,183,7)" fg:x="787" fg:w="1"/><text x="63.8203%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.5703%" y="165" width="0.0808%" height="15" fill="rgb(247,177,28)" fg:x="787" fg:w="1"/><text x="63.8203%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="63.4087%" y="261" width="0.3231%" height="15" fill="rgb(244,43,1)" fg:x="785" fg:w="4"/><text x="63.6587%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="63.4087%" y="245" width="0.3231%" height="15" fill="rgb(207,2,35)" fg:x="785" fg:w="4"/><text x="63.6587%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.6511%" y="229" width="0.0808%" height="15" fill="rgb(213,83,22)" fg:x="788" fg:w="1"/><text x="63.9011%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7318%" y="213" width="0.0808%" height="15" fill="rgb(246,212,13)" fg:x="789" fg:w="1"/><text x="63.9818%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="63.3279%" y="277" width="0.5654%" height="15" fill="rgb(213,127,46)" fg:x="784" fg:w="7"/><text x="63.5779%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.7318%" y="261" width="0.1616%" height="15" fill="rgb(219,215,39)" fg:x="789" fg:w="2"/><text x="63.9818%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="63.7318%" y="245" width="0.1616%" height="15" fill="rgb(227,99,17)" fg:x="789" fg:w="2"/><text x="63.9818%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.7318%" y="229" width="0.1616%" height="15" fill="rgb(208,155,18)" fg:x="789" fg:w="2"/><text x="63.9818%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8126%" y="213" width="0.0808%" height="15" fill="rgb(223,204,38)" fg:x="790" fg:w="1"/><text x="64.0626%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8126%" y="197" width="0.0808%" height="15" fill="rgb(212,114,21)" fg:x="790" fg:w="1"/><text x="64.0626%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8126%" y="181" width="0.0808%" height="15" fill="rgb(250,74,13)" fg:x="790" fg:w="1"/><text x="64.0626%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="63.8934%" y="277" width="0.2423%" height="15" fill="rgb(234,7,1)" fg:x="791" fg:w="3"/><text x="64.1434%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="63.9742%" y="261" width="0.1616%" height="15" fill="rgb(207,138,31)" fg:x="792" fg:w="2"/><text x="64.2242%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.29%)</title><rect x="62.9241%" y="309" width="1.2924%" height="15" fill="rgb(215,186,42)" fg:x="779" fg:w="16"/><text x="63.1741%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="63.2472%" y="293" width="0.9693%" height="15" fill="rgb(229,205,49)" fg:x="783" fg:w="12"/><text x="63.4972%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1357%" y="277" width="0.0808%" height="15" fill="rgb(216,156,32)" fg:x="794" fg:w="1"/><text x="64.3857%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.2973%" y="293" width="0.0808%" height="15" fill="rgb(238,7,21)" fg:x="796" fg:w="1"/><text x="64.5473%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.86%)</title><rect x="62.6817%" y="341" width="1.8578%" height="15" fill="rgb(249,190,22)" fg:x="776" fg:w="23"/><text x="62.9317%" y="351.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.78%)</title><rect x="62.7625%" y="325" width="1.7771%" height="15" fill="rgb(253,51,31)" fg:x="777" fg:w="22"/><text x="63.0125%" y="335.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="64.2165%" y="309" width="0.3231%" height="15" fill="rgb(237,90,54)" fg:x="795" fg:w="4"/><text x="64.4665%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.3780%" y="293" width="0.1616%" height="15" fill="rgb(250,214,33)" fg:x="797" fg:w="2"/><text x="64.6280%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.5396%" y="341" width="0.0808%" height="15" fill="rgb(237,10,49)" fg:x="799" fg:w="1"/><text x="64.7896%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5396%" y="325" width="0.0808%" height="15" fill="rgb(241,56,36)" fg:x="799" fg:w="1"/><text x="64.7896%" y="335.50"></text></g><g><title>engine::session::state::State::close (211 samples, 17.04%)</title><rect x="47.6575%" y="501" width="17.0436%" height="15" fill="rgb(227,164,12)" fg:x="590" fg:w="211"/><text x="47.9075%" y="511.50">engine::session::state::St..</text></g><g><title>engine::session::state::State::flush_entities (211 samples, 17.04%)</title><rect x="47.6575%" y="485" width="17.0436%" height="15" fill="rgb(249,149,35)" fg:x="590" fg:w="211"/><text x="47.9075%" y="495.50">engine::session::state::St..</text></g><g><title>core::iter::adapters::try_process (209 samples, 16.88%)</title><rect x="47.8191%" y="469" width="16.8821%" height="15" fill="rgb(238,227,50)" fg:x="592" fg:w="209"/><text x="48.0691%" y="479.50">core::iter::adapters::try_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (209 samples, 16.88%)</title><rect x="47.8191%" y="453" width="16.8821%" height="15" fill="rgb(235,102,45)" fg:x="592" fg:w="209"/><text x="48.0691%" y="463.50">&lt;alloc::vec::Vec&lt;T&gt; as all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (209 samples, 16.88%)</title><rect x="47.8191%" y="437" width="16.8821%" height="15" fill="rgb(211,10,38)" fg:x="592" fg:w="209"/><text x="48.0691%" y="447.50">engine::session::state::Sa..</text></g><g><title>kernel::model::any_entity_changes (133 samples, 10.74%)</title><rect x="53.9580%" y="421" width="10.7431%" height="15" fill="rgb(219,77,48)" fg:x="668" fg:w="133"/><text x="54.2080%" y="431.50">kernel::model::a..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (27 samples, 2.18%)</title><rect x="62.5202%" y="405" width="2.1809%" height="15" fill="rgb(246,6,15)" fg:x="774" fg:w="27"/><text x="62.7702%" y="415.50">s..</text></g><g><title>serde_json::de::from_trait (27 samples, 2.18%)</title><rect x="62.5202%" y="389" width="2.1809%" height="15" fill="rgb(207,220,2)" fg:x="774" fg:w="27"/><text x="62.7702%" y="399.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (27 samples, 2.18%)</title><rect x="62.5202%" y="373" width="2.1809%" height="15" fill="rgb(242,48,14)" fg:x="774" fg:w="27"/><text x="62.7702%" y="383.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.10%)</title><rect x="62.6010%" y="357" width="2.1002%" height="15" fill="rgb(218,19,27)" fg:x="775" fg:w="26"/><text x="62.8510%" y="367.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6204%" y="341" width="0.0808%" height="15" fill="rgb(228,0,35)" fg:x="800" fg:w="1"/><text x="64.8704%" y="351.50"></text></g><g><title>engine::session::Session::close (220 samples, 17.77%)</title><rect x="47.0113%" y="517" width="17.7706%" height="15" fill="rgb(244,142,54)" fg:x="582" fg:w="220"/><text x="47.2613%" y="527.50">engine::session::Session::cl..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="64.7011%" y="501" width="0.0808%" height="15" fill="rgb(243,217,40)" fg:x="801" fg:w="1"/><text x="64.9511%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.8627%" y="341" width="0.0808%" height="15" fill="rgb(207,114,16)" fg:x="803" fg:w="1"/><text x="65.1127%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.8627%" y="325" width="0.0808%" height="15" fill="rgb(224,33,25)" fg:x="803" fg:w="1"/><text x="65.1127%" y="335.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.40%)</title><rect x="64.8627%" y="389" width="0.4039%" height="15" fill="rgb(230,93,54)" fg:x="803" fg:w="5"/><text x="65.1127%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="64.8627%" y="373" width="0.4039%" height="15" fill="rgb(224,56,24)" fg:x="803" fg:w="5"/><text x="65.1127%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="64.8627%" y="357" width="0.4039%" height="15" fill="rgb(235,189,50)" fg:x="803" fg:w="5"/><text x="65.1127%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="64.9435%" y="341" width="0.3231%" height="15" fill="rgb(242,173,8)" fg:x="804" fg:w="4"/><text x="65.1935%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.0242%" y="325" width="0.2423%" height="15" fill="rgb(209,206,10)" fg:x="805" fg:w="3"/><text x="65.2742%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="65.1858%" y="309" width="0.0808%" height="15" fill="rgb(213,182,44)" fg:x="807" fg:w="1"/><text x="65.4358%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4281%" y="261" width="0.0808%" height="15" fill="rgb(243,51,15)" fg:x="810" fg:w="1"/><text x="65.6781%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.4281%" y="277" width="0.1616%" height="15" fill="rgb(241,13,14)" fg:x="810" fg:w="2"/><text x="65.6781%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5089%" y="261" width="0.0808%" height="15" fill="rgb(239,147,24)" fg:x="811" fg:w="1"/><text x="65.7589%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5897%" y="277" width="0.0808%" height="15" fill="rgb(223,129,16)" fg:x="812" fg:w="1"/><text x="65.8397%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5897%" y="261" width="0.0808%" height="15" fill="rgb(209,169,13)" fg:x="812" fg:w="1"/><text x="65.8397%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.5897%" y="245" width="0.0808%" height="15" fill="rgb(235,159,41)" fg:x="812" fg:w="1"/><text x="65.8397%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.5897%" y="229" width="0.0808%" height="15" fill="rgb(223,219,48)" fg:x="812" fg:w="1"/><text x="65.8397%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.5897%" y="213" width="0.0808%" height="15" fill="rgb(236,80,13)" fg:x="812" fg:w="1"/><text x="65.8397%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.5897%" y="197" width="0.0808%" height="15" fill="rgb(213,5,6)" fg:x="812" fg:w="1"/><text x="65.8397%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.5897%" y="181" width="0.0808%" height="15" fill="rgb(205,59,21)" fg:x="812" fg:w="1"/><text x="65.8397%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.5897%" y="165" width="0.0808%" height="15" fill="rgb(247,137,35)" fg:x="812" fg:w="1"/><text x="65.8397%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.5897%" y="149" width="0.0808%" height="15" fill="rgb(242,208,28)" fg:x="812" fg:w="1"/><text x="65.8397%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.5897%" y="133" width="0.0808%" height="15" fill="rgb(245,62,25)" fg:x="812" fg:w="1"/><text x="65.8397%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.5897%" y="117" width="0.0808%" height="15" fill="rgb(233,99,54)" fg:x="812" fg:w="1"/><text x="65.8397%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5897%" y="101" width="0.0808%" height="15" fill="rgb(213,10,37)" fg:x="812" fg:w="1"/><text x="65.8397%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.7512%" y="229" width="0.0808%" height="15" fill="rgb(235,143,30)" fg:x="814" fg:w="1"/><text x="66.0012%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7512%" y="213" width="0.0808%" height="15" fill="rgb(250,146,33)" fg:x="814" fg:w="1"/><text x="66.0012%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7512%" y="197" width="0.0808%" height="15" fill="rgb(226,198,42)" fg:x="814" fg:w="1"/><text x="66.0012%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.7512%" y="181" width="0.0808%" height="15" fill="rgb(222,55,6)" fg:x="814" fg:w="1"/><text x="66.0012%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.7512%" y="165" width="0.0808%" height="15" fill="rgb(213,224,31)" fg:x="814" fg:w="1"/><text x="66.0012%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.7512%" y="149" width="0.0808%" height="15" fill="rgb(226,103,35)" fg:x="814" fg:w="1"/><text x="66.0012%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7512%" y="133" width="0.0808%" height="15" fill="rgb(205,66,45)" fg:x="814" fg:w="1"/><text x="66.0012%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7512%" y="117" width="0.0808%" height="15" fill="rgb(226,51,42)" fg:x="814" fg:w="1"/><text x="66.0012%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.7512%" y="101" width="0.0808%" height="15" fill="rgb(206,69,1)" fg:x="814" fg:w="1"/><text x="66.0012%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.7512%" y="85" width="0.0808%" height="15" fill="rgb(213,228,47)" fg:x="814" fg:w="1"/><text x="66.0012%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.7512%" y="69" width="0.0808%" height="15" fill="rgb(224,204,18)" fg:x="814" fg:w="1"/><text x="66.0012%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.7512%" y="53" width="0.0808%" height="15" fill="rgb(253,187,47)" fg:x="814" fg:w="1"/><text x="66.0012%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7512%" y="37" width="0.0808%" height="15" fill="rgb(232,61,2)" fg:x="814" fg:w="1"/><text x="66.0012%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8320%" y="229" width="0.0808%" height="15" fill="rgb(213,132,35)" fg:x="815" fg:w="1"/><text x="66.0820%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8320%" y="213" width="0.0808%" height="15" fill="rgb(247,33,21)" fg:x="815" fg:w="1"/><text x="66.0820%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.8320%" y="197" width="0.0808%" height="15" fill="rgb(233,71,46)" fg:x="815" fg:w="1"/><text x="66.0820%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.8320%" y="181" width="0.0808%" height="15" fill="rgb(222,173,43)" fg:x="815" fg:w="1"/><text x="66.0820%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.8320%" y="165" width="0.0808%" height="15" fill="rgb(249,218,47)" fg:x="815" fg:w="1"/><text x="66.0820%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.8320%" y="149" width="0.0808%" height="15" fill="rgb(254,185,48)" fg:x="815" fg:w="1"/><text x="66.0820%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.8320%" y="133" width="0.0808%" height="15" fill="rgb(252,165,50)" fg:x="815" fg:w="1"/><text x="66.0820%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.8320%" y="117" width="0.0808%" height="15" fill="rgb(206,219,6)" fg:x="815" fg:w="1"/><text x="66.0820%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.8320%" y="101" width="0.0808%" height="15" fill="rgb(212,212,45)" fg:x="815" fg:w="1"/><text x="66.0820%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.8320%" y="85" width="0.0808%" height="15" fill="rgb(221,31,9)" fg:x="815" fg:w="1"/><text x="66.0820%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.8320%" y="69" width="0.0808%" height="15" fill="rgb(234,198,39)" fg:x="815" fg:w="1"/><text x="66.0820%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8320%" y="53" width="0.0808%" height="15" fill="rgb(252,145,46)" fg:x="815" fg:w="1"/><text x="66.0820%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.7512%" y="261" width="0.2423%" height="15" fill="rgb(237,149,0)" fg:x="814" fg:w="3"/><text x="66.0012%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.7512%" y="245" width="0.2423%" height="15" fill="rgb(229,65,5)" fg:x="814" fg:w="3"/><text x="66.0012%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.9128%" y="229" width="0.0808%" height="15" fill="rgb(235,60,36)" fg:x="816" fg:w="1"/><text x="66.1628%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.6704%" y="277" width="0.4039%" height="15" fill="rgb(222,47,18)" fg:x="813" fg:w="5"/><text x="65.9204%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.9935%" y="261" width="0.0808%" height="15" fill="rgb(235,114,22)" fg:x="817" fg:w="1"/><text x="66.2435%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.81%)</title><rect x="65.3473%" y="325" width="0.8078%" height="15" fill="rgb(209,167,11)" fg:x="809" fg:w="10"/><text x="65.5973%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.81%)</title><rect x="65.3473%" y="309" width="0.8078%" height="15" fill="rgb(251,73,18)" fg:x="809" fg:w="10"/><text x="65.5973%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.81%)</title><rect x="65.3473%" y="293" width="0.8078%" height="15" fill="rgb(217,60,17)" fg:x="809" fg:w="10"/><text x="65.5973%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.0743%" y="277" width="0.0808%" height="15" fill="rgb(224,36,37)" fg:x="818" fg:w="1"/><text x="66.3243%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="66.1551%" y="309" width="0.0808%" height="15" fill="rgb(211,21,32)" fg:x="819" fg:w="1"/><text x="66.4051%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1551%" y="293" width="0.0808%" height="15" fill="rgb(231,55,48)" fg:x="819" fg:w="1"/><text x="66.4051%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2359%" y="229" width="0.0808%" height="15" fill="rgb(227,42,18)" fg:x="820" fg:w="1"/><text x="66.4859%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2359%" y="213" width="0.0808%" height="15" fill="rgb(217,2,27)" fg:x="820" fg:w="1"/><text x="66.4859%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.2359%" y="197" width="0.0808%" height="15" fill="rgb(251,138,23)" fg:x="820" fg:w="1"/><text x="66.4859%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.2359%" y="181" width="0.0808%" height="15" fill="rgb(226,184,11)" fg:x="820" fg:w="1"/><text x="66.4859%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.2359%" y="165" width="0.0808%" height="15" fill="rgb(242,142,12)" fg:x="820" fg:w="1"/><text x="66.4859%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.2359%" y="149" width="0.0808%" height="15" fill="rgb(234,187,18)" fg:x="820" fg:w="1"/><text x="66.4859%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.2359%" y="133" width="0.0808%" height="15" fill="rgb(237,44,42)" fg:x="820" fg:w="1"/><text x="66.4859%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.2359%" y="117" width="0.0808%" height="15" fill="rgb(211,90,23)" fg:x="820" fg:w="1"/><text x="66.4859%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.2359%" y="101" width="0.0808%" height="15" fill="rgb(207,81,18)" fg:x="820" fg:w="1"/><text x="66.4859%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.2359%" y="85" width="0.0808%" height="15" fill="rgb(222,107,28)" fg:x="820" fg:w="1"/><text x="66.4859%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.2359%" y="69" width="0.0808%" height="15" fill="rgb(237,83,52)" fg:x="820" fg:w="1"/><text x="66.4859%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2359%" y="53" width="0.0808%" height="15" fill="rgb(208,67,11)" fg:x="820" fg:w="1"/><text x="66.4859%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="66.1551%" y="325" width="0.2423%" height="15" fill="rgb(249,157,49)" fg:x="819" fg:w="3"/><text x="66.4051%" y="335.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="66.2359%" y="309" width="0.1616%" height="15" fill="rgb(243,200,1)" fg:x="820" fg:w="2"/><text x="66.4859%" y="319.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="66.2359%" y="293" width="0.1616%" height="15" fill="rgb(225,162,37)" fg:x="820" fg:w="2"/><text x="66.4859%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.2359%" y="277" width="0.1616%" height="15" fill="rgb(242,92,13)" fg:x="820" fg:w="2"/><text x="66.4859%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.2359%" y="261" width="0.1616%" height="15" fill="rgb(220,43,36)" fg:x="820" fg:w="2"/><text x="66.4859%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.2359%" y="245" width="0.1616%" height="15" fill="rgb(213,165,48)" fg:x="820" fg:w="2"/><text x="66.4859%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.3166%" y="229" width="0.0808%" height="15" fill="rgb(227,200,9)" fg:x="821" fg:w="1"/><text x="66.5666%" y="239.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="66.3974%" y="325" width="0.0808%" height="15" fill="rgb(221,222,28)" fg:x="822" fg:w="1"/><text x="66.6474%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.4782%" y="245" width="0.0808%" height="15" fill="rgb(223,142,26)" fg:x="823" fg:w="1"/><text x="66.7282%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.4782%" y="229" width="0.0808%" height="15" fill="rgb(243,46,9)" fg:x="823" fg:w="1"/><text x="66.7282%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="66.6397%" y="197" width="0.2423%" height="15" fill="rgb(250,56,11)" fg:x="825" fg:w="3"/><text x="66.8897%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.6397%" y="181" width="0.2423%" height="15" fill="rgb(229,113,5)" fg:x="825" fg:w="3"/><text x="66.8897%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="66.6397%" y="165" width="0.2423%" height="15" fill="rgb(244,108,28)" fg:x="825" fg:w="3"/><text x="66.8897%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="66.6397%" y="149" width="0.2423%" height="15" fill="rgb(242,119,50)" fg:x="825" fg:w="3"/><text x="66.8897%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.6397%" y="133" width="0.2423%" height="15" fill="rgb(224,164,23)" fg:x="825" fg:w="3"/><text x="66.8897%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="66.7205%" y="117" width="0.1616%" height="15" fill="rgb(214,227,44)" fg:x="826" fg:w="2"/><text x="66.9705%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="66.5590%" y="229" width="0.4039%" height="15" fill="rgb(238,202,4)" fg:x="824" fg:w="5"/><text x="66.8090%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="66.5590%" y="213" width="0.4039%" height="15" fill="rgb(213,190,30)" fg:x="824" fg:w="5"/><text x="66.8090%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8821%" y="197" width="0.0808%" height="15" fill="rgb(239,15,2)" fg:x="828" fg:w="1"/><text x="67.1321%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8821%" y="181" width="0.0808%" height="15" fill="rgb(249,229,4)" fg:x="828" fg:w="1"/><text x="67.1321%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.9628%" y="197" width="0.0808%" height="15" fill="rgb(239,75,44)" fg:x="829" fg:w="1"/><text x="67.2128%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="66.9628%" y="229" width="0.1616%" height="15" fill="rgb(251,206,23)" fg:x="829" fg:w="2"/><text x="67.2128%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="66.9628%" y="213" width="0.1616%" height="15" fill="rgb(215,208,0)" fg:x="829" fg:w="2"/><text x="67.2128%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.0436%" y="197" width="0.0808%" height="15" fill="rgb(230,75,50)" fg:x="830" fg:w="1"/><text x="67.2936%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.0436%" y="181" width="0.0808%" height="15" fill="rgb(246,180,39)" fg:x="830" fg:w="1"/><text x="67.2936%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.2052%" y="197" width="0.1616%" height="15" fill="rgb(249,175,24)" fg:x="832" fg:w="2"/><text x="67.4552%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.2859%" y="181" width="0.0808%" height="15" fill="rgb(247,176,22)" fg:x="833" fg:w="1"/><text x="67.5359%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.3667%" y="117" width="0.0808%" height="15" fill="rgb(241,100,24)" fg:x="834" fg:w="1"/><text x="67.6167%" y="127.50"></text></g><g><title>kernel::model::entity::Entity::from_value (13 samples, 1.05%)</title><rect x="66.4782%" y="325" width="1.0501%" height="15" fill="rgb(233,4,35)" fg:x="823" fg:w="13"/><text x="66.7282%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.05%)</title><rect x="66.4782%" y="309" width="1.0501%" height="15" fill="rgb(211,164,46)" fg:x="823" fg:w="13"/><text x="66.7282%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.05%)</title><rect x="66.4782%" y="293" width="1.0501%" height="15" fill="rgb(242,99,53)" fg:x="823" fg:w="13"/><text x="66.7282%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.05%)</title><rect x="66.4782%" y="277" width="1.0501%" height="15" fill="rgb(243,45,33)" fg:x="823" fg:w="13"/><text x="66.7282%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.05%)</title><rect x="66.4782%" y="261" width="1.0501%" height="15" fill="rgb(217,55,21)" fg:x="823" fg:w="13"/><text x="66.7282%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.97%)</title><rect x="66.5590%" y="245" width="0.9693%" height="15" fill="rgb(245,145,46)" fg:x="824" fg:w="12"/><text x="66.8090%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="67.1244%" y="229" width="0.4039%" height="15" fill="rgb(215,112,45)" fg:x="831" fg:w="5"/><text x="67.3744%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="67.1244%" y="213" width="0.4039%" height="15" fill="rgb(228,104,16)" fg:x="831" fg:w="5"/><text x="67.3744%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="67.3667%" y="197" width="0.1616%" height="15" fill="rgb(239,186,38)" fg:x="834" fg:w="2"/><text x="67.6167%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="67.3667%" y="181" width="0.1616%" height="15" fill="rgb(228,38,35)" fg:x="834" fg:w="2"/><text x="67.6167%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="67.3667%" y="165" width="0.1616%" height="15" fill="rgb(251,42,40)" fg:x="834" fg:w="2"/><text x="67.6167%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.3667%" y="149" width="0.1616%" height="15" fill="rgb(210,51,19)" fg:x="834" fg:w="2"/><text x="67.6167%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.3667%" y="133" width="0.1616%" height="15" fill="rgb(236,94,42)" fg:x="834" fg:w="2"/><text x="67.6167%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.4475%" y="117" width="0.0808%" height="15" fill="rgb(239,167,16)" fg:x="835" fg:w="1"/><text x="67.6975%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4475%" y="101" width="0.0808%" height="15" fill="rgb(252,175,31)" fg:x="835" fg:w="1"/><text x="67.6975%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.4475%" y="85" width="0.0808%" height="15" fill="rgb(206,166,30)" fg:x="835" fg:w="1"/><text x="67.6975%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.4475%" y="69" width="0.0808%" height="15" fill="rgb(206,209,37)" fg:x="835" fg:w="1"/><text x="67.6975%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4475%" y="53" width="0.0808%" height="15" fill="rgb(226,91,4)" fg:x="835" fg:w="1"/><text x="67.6975%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.4475%" y="37" width="0.0808%" height="15" fill="rgb(222,167,0)" fg:x="835" fg:w="1"/><text x="67.6975%" y="47.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.6090%" y="181" width="0.0808%" height="15" fill="rgb(211,70,14)" fg:x="837" fg:w="1"/><text x="67.8590%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.6090%" y="165" width="0.0808%" height="15" fill="rgb(214,84,42)" fg:x="837" fg:w="1"/><text x="67.8590%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.6090%" y="149" width="0.0808%" height="15" fill="rgb(235,157,37)" fg:x="837" fg:w="1"/><text x="67.8590%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.7706%" y="133" width="0.1616%" height="15" fill="rgb(225,13,6)" fg:x="839" fg:w="2"/><text x="68.0206%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.9321%" y="133" width="0.0808%" height="15" fill="rgb(205,202,1)" fg:x="841" fg:w="1"/><text x="68.1821%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9321%" y="117" width="0.0808%" height="15" fill="rgb(232,195,26)" fg:x="841" fg:w="1"/><text x="68.1821%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="67.6898%" y="165" width="0.4039%" height="15" fill="rgb(208,102,26)" fg:x="838" fg:w="5"/><text x="67.9398%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="67.6898%" y="149" width="0.4039%" height="15" fill="rgb(215,41,39)" fg:x="838" fg:w="5"/><text x="67.9398%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.0129%" y="133" width="0.0808%" height="15" fill="rgb(247,139,11)" fg:x="842" fg:w="1"/><text x="68.2629%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="67.5283%" y="197" width="0.6462%" height="15" fill="rgb(243,99,6)" fg:x="836" fg:w="8"/><text x="67.7783%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="67.6898%" y="181" width="0.4847%" height="15" fill="rgb(230,168,48)" fg:x="838" fg:w="6"/><text x="67.9398%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.0937%" y="165" width="0.0808%" height="15" fill="rgb(238,227,13)" fg:x="843" fg:w="1"/><text x="68.3437%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="68.1745%" y="197" width="0.1616%" height="15" fill="rgb(209,109,13)" fg:x="844" fg:w="2"/><text x="68.4245%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="68.1745%" y="181" width="0.1616%" height="15" fill="rgb(228,195,1)" fg:x="844" fg:w="2"/><text x="68.4245%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="67.5283%" y="245" width="0.8885%" height="15" fill="rgb(230,218,0)" fg:x="836" fg:w="11"/><text x="67.7783%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.89%)</title><rect x="67.5283%" y="229" width="0.8885%" height="15" fill="rgb(206,1,45)" fg:x="836" fg:w="11"/><text x="67.7783%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="67.5283%" y="213" width="0.8885%" height="15" fill="rgb(209,124,26)" fg:x="836" fg:w="11"/><text x="67.7783%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3360%" y="197" width="0.0808%" height="15" fill="rgb(220,59,8)" fg:x="846" fg:w="1"/><text x="68.5860%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3360%" y="181" width="0.0808%" height="15" fill="rgb(251,41,37)" fg:x="846" fg:w="1"/><text x="68.5860%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3360%" y="165" width="0.0808%" height="15" fill="rgb(239,152,21)" fg:x="846" fg:w="1"/><text x="68.5860%" y="175.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (40 samples, 3.23%)</title><rect x="65.2666%" y="389" width="3.2310%" height="15" fill="rgb(226,32,1)" fg:x="808" fg:w="40"/><text x="65.5166%" y="399.50">&lt;ke..</text></g><g><title>kernel::model::EntityPtrResolver::entity (39 samples, 3.15%)</title><rect x="65.3473%" y="373" width="3.1502%" height="15" fill="rgb(230,154,36)" fg:x="809" fg:w="39"/><text x="65.5973%" y="383.50">ker..</text></g><g><title>engine::session::Session::load_entity (39 samples, 3.15%)</title><rect x="65.3473%" y="357" width="3.1502%" height="15" fill="rgb(208,228,43)" fg:x="809" fg:w="39"/><text x="65.5973%" y="367.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (39 samples, 3.15%)</title><rect x="65.3473%" y="341" width="3.1502%" height="15" fill="rgb(214,203,3)" fg:x="809" fg:w="39"/><text x="65.5973%" y="351.50">eng..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.97%)</title><rect x="67.5283%" y="325" width="0.9693%" height="15" fill="rgb(207,149,29)" fg:x="836" fg:w="12"/><text x="67.7783%" y="335.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="67.5283%" y="309" width="0.9693%" height="15" fill="rgb(250,105,7)" fg:x="836" fg:w="12"/><text x="67.7783%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="67.5283%" y="293" width="0.9693%" height="15" fill="rgb(232,222,16)" fg:x="836" fg:w="12"/><text x="67.7783%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="67.5283%" y="277" width="0.9693%" height="15" fill="rgb(209,32,24)" fg:x="836" fg:w="12"/><text x="67.7783%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="67.5283%" y="261" width="0.9693%" height="15" fill="rgb(225,13,6)" fg:x="836" fg:w="12"/><text x="67.7783%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4168%" y="245" width="0.0808%" height="15" fill="rgb(245,226,26)" fg:x="847" fg:w="1"/><text x="68.6668%" y="255.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (46 samples, 3.72%)</title><rect x="64.8627%" y="405" width="3.7157%" height="15" fill="rgb(229,178,27)" fg:x="803" fg:w="46"/><text x="65.1127%" y="415.50">&lt;plu..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4976%" y="389" width="0.0808%" height="15" fill="rgb(205,227,28)" fg:x="848" fg:w="1"/><text x="68.7476%" y="399.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (47 samples, 3.80%)</title><rect x="64.8627%" y="421" width="3.7964%" height="15" fill="rgb(210,191,45)" fg:x="803" fg:w="47"/><text x="65.1127%" y="431.50">&lt;eng..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="68.5784%" y="405" width="0.0808%" height="15" fill="rgb(206,124,16)" fg:x="849" fg:w="1"/><text x="68.8284%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="68.5784%" y="389" width="0.0808%" height="15" fill="rgb(210,162,0)" fg:x="849" fg:w="1"/><text x="68.8284%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5784%" y="373" width="0.0808%" height="15" fill="rgb(211,54,38)" fg:x="849" fg:w="1"/><text x="68.8284%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.7399%" y="293" width="0.0808%" height="15" fill="rgb(248,192,3)" fg:x="851" fg:w="1"/><text x="68.9899%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (50 samples, 4.04%)</title><rect x="64.8627%" y="485" width="4.0388%" height="15" fill="rgb(233,187,18)" fg:x="803" fg:w="50"/><text x="65.1127%" y="495.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::apply_middleware (50 samples, 4.04%)</title><rect x="64.8627%" y="469" width="4.0388%" height="15" fill="rgb(237,208,14)" fg:x="803" fg:w="50"/><text x="65.1127%" y="479.50">kern..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (50 samples, 4.04%)</title><rect x="64.8627%" y="453" width="4.0388%" height="15" fill="rgb(212,77,1)" fg:x="803" fg:w="50"/><text x="65.1127%" y="463.50">kern..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (50 samples, 4.04%)</title><rect x="64.8627%" y="437" width="4.0388%" height="15" fill="rgb(210,163,22)" fg:x="803" fg:w="50"/><text x="65.1127%" y="447.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="68.6591%" y="421" width="0.2423%" height="15" fill="rgb(250,58,28)" fg:x="850" fg:w="3"/><text x="68.9091%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="68.6591%" y="405" width="0.2423%" height="15" fill="rgb(254,28,41)" fg:x="850" fg:w="3"/><text x="68.9091%" y="415.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="68.6591%" y="389" width="0.2423%" height="15" fill="rgb(237,162,36)" fg:x="850" fg:w="3"/><text x="68.9091%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="68.7399%" y="373" width="0.1616%" height="15" fill="rgb(232,56,6)" fg:x="851" fg:w="2"/><text x="68.9899%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="68.7399%" y="357" width="0.1616%" height="15" fill="rgb(216,127,42)" fg:x="851" fg:w="2"/><text x="68.9899%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="68.7399%" y="341" width="0.1616%" height="15" fill="rgb(241,69,15)" fg:x="851" fg:w="2"/><text x="68.9899%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="68.7399%" y="325" width="0.1616%" height="15" fill="rgb(227,180,19)" fg:x="851" fg:w="2"/><text x="68.9899%" y="335.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="68.7399%" y="309" width="0.1616%" height="15" fill="rgb(231,188,29)" fg:x="851" fg:w="2"/><text x="68.9899%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="68.8207%" y="293" width="0.0808%" height="15" fill="rgb(224,176,27)" fg:x="852" fg:w="1"/><text x="69.0707%" y="303.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="68.8207%" y="277" width="0.0808%" height="15" fill="rgb(249,214,19)" fg:x="852" fg:w="1"/><text x="69.0707%" y="287.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="68.8207%" y="261" width="0.0808%" height="15" fill="rgb(240,0,4)" fg:x="852" fg:w="1"/><text x="69.0707%" y="271.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::SimpleReply&gt;::serialize (1 samples, 0.08%)</title><rect x="68.8207%" y="245" width="0.0808%" height="15" fill="rgb(233,28,41)" fg:x="852" fg:w="1"/><text x="69.0707%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.9015%" y="469" width="0.0808%" height="15" fill="rgb(220,90,51)" fg:x="853" fg:w="1"/><text x="69.1515%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.9015%" y="453" width="0.0808%" height="15" fill="rgb(250,52,22)" fg:x="853" fg:w="1"/><text x="69.1515%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.9015%" y="437" width="0.0808%" height="15" fill="rgb(231,152,36)" fg:x="853" fg:w="1"/><text x="69.1515%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.9015%" y="421" width="0.0808%" height="15" fill="rgb(250,218,4)" fg:x="853" fg:w="1"/><text x="69.1515%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.9015%" y="405" width="0.0808%" height="15" fill="rgb(210,38,21)" fg:x="853" fg:w="1"/><text x="69.1515%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.9015%" y="389" width="0.0808%" height="15" fill="rgb(230,75,13)" fg:x="853" fg:w="1"/><text x="69.1515%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.9015%" y="373" width="0.0808%" height="15" fill="rgb(250,68,53)" fg:x="853" fg:w="1"/><text x="69.1515%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.9015%" y="357" width="0.0808%" height="15" fill="rgb(250,210,16)" fg:x="853" fg:w="1"/><text x="69.1515%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.9015%" y="341" width="0.0808%" height="15" fill="rgb(240,132,5)" fg:x="853" fg:w="1"/><text x="69.1515%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.9015%" y="325" width="0.0808%" height="15" fill="rgb(222,148,48)" fg:x="853" fg:w="1"/><text x="69.1515%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.9015%" y="309" width="0.0808%" height="15" fill="rgb(247,181,24)" fg:x="853" fg:w="1"/><text x="69.1515%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.9015%" y="293" width="0.0808%" height="15" fill="rgb(239,5,31)" fg:x="853" fg:w="1"/><text x="69.1515%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.9822%" y="469" width="0.0808%" height="15" fill="rgb(241,152,38)" fg:x="854" fg:w="1"/><text x="69.2322%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.9822%" y="453" width="0.0808%" height="15" fill="rgb(246,200,37)" fg:x="854" fg:w="1"/><text x="69.2322%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (3 samples, 0.24%)</title><rect x="68.9015%" y="485" width="0.2423%" height="15" fill="rgb(243,210,26)" fg:x="853" fg:w="3"/><text x="69.1515%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0630%" y="469" width="0.0808%" height="15" fill="rgb(222,22,22)" fg:x="855" fg:w="1"/><text x="69.3130%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.1438%" y="485" width="0.0808%" height="15" fill="rgb(208,129,28)" fg:x="856" fg:w="1"/><text x="69.3938%" y="495.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="69.2246%" y="485" width="0.0808%" height="15" fill="rgb(254,169,28)" fg:x="857" fg:w="1"/><text x="69.4746%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4669%" y="389" width="0.0808%" height="15" fill="rgb(225,45,17)" fg:x="860" fg:w="1"/><text x="69.7169%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4669%" y="373" width="0.0808%" height="15" fill="rgb(232,199,2)" fg:x="860" fg:w="1"/><text x="69.7169%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.4669%" y="357" width="0.0808%" height="15" fill="rgb(235,33,40)" fg:x="860" fg:w="1"/><text x="69.7169%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.4669%" y="341" width="0.0808%" height="15" fill="rgb(237,89,50)" fg:x="860" fg:w="1"/><text x="69.7169%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.4669%" y="325" width="0.0808%" height="15" fill="rgb(238,126,5)" fg:x="860" fg:w="1"/><text x="69.7169%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4669%" y="309" width="0.0808%" height="15" fill="rgb(247,214,42)" fg:x="860" fg:w="1"/><text x="69.7169%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4669%" y="293" width="0.0808%" height="15" fill="rgb(238,60,45)" fg:x="860" fg:w="1"/><text x="69.7169%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.4669%" y="277" width="0.0808%" height="15" fill="rgb(225,69,44)" fg:x="860" fg:w="1"/><text x="69.7169%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.4669%" y="261" width="0.0808%" height="15" fill="rgb(241,13,44)" fg:x="860" fg:w="1"/><text x="69.7169%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.4669%" y="245" width="0.0808%" height="15" fill="rgb(227,121,22)" fg:x="860" fg:w="1"/><text x="69.7169%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.4669%" y="229" width="0.0808%" height="15" fill="rgb(231,160,23)" fg:x="860" fg:w="1"/><text x="69.7169%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4669%" y="213" width="0.0808%" height="15" fill="rgb(250,179,43)" fg:x="860" fg:w="1"/><text x="69.7169%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.3861%" y="421" width="0.2423%" height="15" fill="rgb(233,54,46)" fg:x="859" fg:w="3"/><text x="69.6361%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.3861%" y="405" width="0.2423%" height="15" fill="rgb(247,120,42)" fg:x="859" fg:w="3"/><text x="69.6361%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.5477%" y="389" width="0.0808%" height="15" fill="rgb(221,219,12)" fg:x="861" fg:w="1"/><text x="69.7977%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.5477%" y="373" width="0.0808%" height="15" fill="rgb(211,126,8)" fg:x="861" fg:w="1"/><text x="69.7977%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5477%" y="357" width="0.0808%" height="15" fill="rgb(218,154,33)" fg:x="861" fg:w="1"/><text x="69.7977%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="69.3053%" y="437" width="0.4039%" height="15" fill="rgb(212,199,16)" fg:x="858" fg:w="5"/><text x="69.5553%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6284%" y="421" width="0.0808%" height="15" fill="rgb(236,215,46)" fg:x="862" fg:w="1"/><text x="69.8784%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6284%" y="405" width="0.0808%" height="15" fill="rgb(232,32,22)" fg:x="862" fg:w="1"/><text x="69.8784%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.6284%" y="389" width="0.0808%" height="15" fill="rgb(234,79,15)" fg:x="862" fg:w="1"/><text x="69.8784%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.6284%" y="373" width="0.0808%" height="15" fill="rgb(235,187,47)" fg:x="862" fg:w="1"/><text x="69.8784%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.6284%" y="357" width="0.0808%" height="15" fill="rgb(244,69,37)" fg:x="862" fg:w="1"/><text x="69.8784%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.6284%" y="341" width="0.0808%" height="15" fill="rgb(249,140,25)" fg:x="862" fg:w="1"/><text x="69.8784%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.6284%" y="325" width="0.0808%" height="15" fill="rgb(213,69,8)" fg:x="862" fg:w="1"/><text x="69.8784%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.7092%" y="389" width="0.0808%" height="15" fill="rgb(220,136,2)" fg:x="863" fg:w="1"/><text x="69.9592%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.7092%" y="373" width="0.0808%" height="15" fill="rgb(237,50,36)" fg:x="863" fg:w="1"/><text x="69.9592%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="69.7092%" y="357" width="0.0808%" height="15" fill="rgb(226,18,11)" fg:x="863" fg:w="1"/><text x="69.9592%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="69.7092%" y="341" width="0.0808%" height="15" fill="rgb(243,156,2)" fg:x="863" fg:w="1"/><text x="69.9592%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.8708%" y="325" width="0.0808%" height="15" fill="rgb(218,8,34)" fg:x="865" fg:w="1"/><text x="70.1208%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.8708%" y="309" width="0.0808%" height="15" fill="rgb(250,94,35)" fg:x="865" fg:w="1"/><text x="70.1208%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.8708%" y="293" width="0.0808%" height="15" fill="rgb(229,127,21)" fg:x="865" fg:w="1"/><text x="70.1208%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.8708%" y="277" width="0.0808%" height="15" fill="rgb(234,49,5)" fg:x="865" fg:w="1"/><text x="70.1208%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.8708%" y="261" width="0.0808%" height="15" fill="rgb(248,12,16)" fg:x="865" fg:w="1"/><text x="70.1208%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.8708%" y="245" width="0.0808%" height="15" fill="rgb(208,220,31)" fg:x="865" fg:w="1"/><text x="70.1208%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.8708%" y="229" width="0.0808%" height="15" fill="rgb(243,184,0)" fg:x="865" fg:w="1"/><text x="70.1208%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.8708%" y="213" width="0.0808%" height="15" fill="rgb(217,38,21)" fg:x="865" fg:w="1"/><text x="70.1208%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.8708%" y="197" width="0.0808%" height="15" fill="rgb(239,120,45)" fg:x="865" fg:w="1"/><text x="70.1208%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.8708%" y="181" width="0.0808%" height="15" fill="rgb(235,33,2)" fg:x="865" fg:w="1"/><text x="70.1208%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.8708%" y="165" width="0.0808%" height="15" fill="rgb(249,161,5)" fg:x="865" fg:w="1"/><text x="70.1208%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.8708%" y="149" width="0.0808%" height="15" fill="rgb(250,165,48)" fg:x="865" fg:w="1"/><text x="70.1208%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.8708%" y="133" width="0.0808%" height="15" fill="rgb(221,23,45)" fg:x="865" fg:w="1"/><text x="70.1208%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.8708%" y="341" width="0.1616%" height="15" fill="rgb(217,108,46)" fg:x="865" fg:w="2"/><text x="70.1208%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9515%" y="325" width="0.0808%" height="15" fill="rgb(254,26,35)" fg:x="866" fg:w="1"/><text x="70.2015%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9515%" y="309" width="0.0808%" height="15" fill="rgb(218,223,28)" fg:x="866" fg:w="1"/><text x="70.2015%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9515%" y="293" width="0.0808%" height="15" fill="rgb(242,27,47)" fg:x="866" fg:w="1"/><text x="70.2015%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9515%" y="277" width="0.0808%" height="15" fill="rgb(218,39,35)" fg:x="866" fg:w="1"/><text x="70.2015%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.9515%" y="261" width="0.0808%" height="15" fill="rgb(232,127,16)" fg:x="866" fg:w="1"/><text x="70.2015%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.9515%" y="245" width="0.0808%" height="15" fill="rgb(231,219,51)" fg:x="866" fg:w="1"/><text x="70.2015%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.9515%" y="229" width="0.0808%" height="15" fill="rgb(217,220,46)" fg:x="866" fg:w="1"/><text x="70.2015%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.9515%" y="213" width="0.0808%" height="15" fill="rgb(230,75,1)" fg:x="866" fg:w="1"/><text x="70.2015%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.9515%" y="197" width="0.0808%" height="15" fill="rgb(218,2,8)" fg:x="866" fg:w="1"/><text x="70.2015%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.3554%" y="293" width="0.0808%" height="15" fill="rgb(206,111,30)" fg:x="871" fg:w="1"/><text x="70.6054%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.3554%" y="277" width="0.0808%" height="15" fill="rgb(209,135,6)" fg:x="871" fg:w="1"/><text x="70.6054%" y="287.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="70.3554%" y="261" width="0.0808%" height="15" fill="rgb(205,169,10)" fg:x="871" fg:w="1"/><text x="70.6054%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3554%" y="245" width="0.0808%" height="15" fill="rgb(212,204,38)" fg:x="871" fg:w="1"/><text x="70.6054%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3554%" y="229" width="0.0808%" height="15" fill="rgb(205,199,14)" fg:x="871" fg:w="1"/><text x="70.6054%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3554%" y="213" width="0.0808%" height="15" fill="rgb(212,4,6)" fg:x="871" fg:w="1"/><text x="70.6054%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3554%" y="197" width="0.0808%" height="15" fill="rgb(250,15,10)" fg:x="871" fg:w="1"/><text x="70.6054%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3554%" y="181" width="0.0808%" height="15" fill="rgb(212,49,51)" fg:x="871" fg:w="1"/><text x="70.6054%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3554%" y="165" width="0.0808%" height="15" fill="rgb(235,21,9)" fg:x="871" fg:w="1"/><text x="70.6054%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3554%" y="149" width="0.0808%" height="15" fill="rgb(251,31,32)" fg:x="871" fg:w="1"/><text x="70.6054%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3554%" y="133" width="0.0808%" height="15" fill="rgb(246,23,9)" fg:x="871" fg:w="1"/><text x="70.6054%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.3554%" y="117" width="0.0808%" height="15" fill="rgb(225,216,14)" fg:x="871" fg:w="1"/><text x="70.6054%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.3554%" y="101" width="0.0808%" height="15" fill="rgb(215,200,26)" fg:x="871" fg:w="1"/><text x="70.6054%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.3554%" y="85" width="0.0808%" height="15" fill="rgb(237,130,47)" fg:x="871" fg:w="1"/><text x="70.6054%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.3554%" y="69" width="0.0808%" height="15" fill="rgb(247,74,14)" fg:x="871" fg:w="1"/><text x="70.6054%" y="79.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="70.3554%" y="53" width="0.0808%" height="15" fill="rgb(254,97,46)" fg:x="871" fg:w="1"/><text x="70.6054%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="70.3554%" y="37" width="0.0808%" height="15" fill="rgb(234,191,1)" fg:x="871" fg:w="1"/><text x="70.6054%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.4362%" y="261" width="0.0808%" height="15" fill="rgb(215,165,14)" fg:x="872" fg:w="1"/><text x="70.6862%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.4362%" y="245" width="0.0808%" height="15" fill="rgb(230,182,6)" fg:x="872" fg:w="1"/><text x="70.6862%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.4362%" y="229" width="0.0808%" height="15" fill="rgb(210,127,39)" fg:x="872" fg:w="1"/><text x="70.6862%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="70.6785%" y="197" width="0.0808%" height="15" fill="rgb(223,212,51)" fg:x="875" fg:w="1"/><text x="70.9285%" y="207.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.6785%" y="181" width="0.0808%" height="15" fill="rgb(226,176,43)" fg:x="875" fg:w="1"/><text x="70.9285%" y="191.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.6785%" y="165" width="0.0808%" height="15" fill="rgb(222,155,4)" fg:x="875" fg:w="1"/><text x="70.9285%" y="175.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.6785%" y="149" width="0.0808%" height="15" fill="rgb(215,149,7)" fg:x="875" fg:w="1"/><text x="70.9285%" y="159.50"></text></g><g><title>&lt;serde::de::Unexpected as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="70.6785%" y="133" width="0.0808%" height="15" fill="rgb(252,199,23)" fg:x="875" fg:w="1"/><text x="70.9285%" y="143.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (3 samples, 0.24%)</title><rect x="70.5977%" y="229" width="0.2423%" height="15" fill="rgb(245,52,29)" fg:x="874" fg:w="3"/><text x="70.8477%" y="239.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="70.6785%" y="213" width="0.1616%" height="15" fill="rgb(221,228,19)" fg:x="875" fg:w="2"/><text x="70.9285%" y="223.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="70.7593%" y="197" width="0.0808%" height="15" fill="rgb(253,101,6)" fg:x="876" fg:w="1"/><text x="71.0093%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.89%)</title><rect x="70.0323%" y="341" width="0.8885%" height="15" fill="rgb(211,130,8)" fg:x="867" fg:w="11"/><text x="70.2823%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.81%)</title><rect x="70.1131%" y="325" width="0.8078%" height="15" fill="rgb(238,37,53)" fg:x="868" fg:w="10"/><text x="70.3631%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.57%)</title><rect x="70.3554%" y="309" width="0.5654%" height="15" fill="rgb(235,145,5)" fg:x="871" fg:w="7"/><text x="70.6054%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="70.4362%" y="293" width="0.4847%" height="15" fill="rgb(244,12,43)" fg:x="872" fg:w="6"/><text x="70.6862%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="70.4362%" y="277" width="0.4847%" height="15" fill="rgb(246,195,24)" fg:x="872" fg:w="6"/><text x="70.6862%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (5 samples, 0.40%)</title><rect x="70.5170%" y="261" width="0.4039%" height="15" fill="rgb(235,163,6)" fg:x="873" fg:w="5"/><text x="70.7670%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (5 samples, 0.40%)</title><rect x="70.5170%" y="245" width="0.4039%" height="15" fill="rgb(236,218,17)" fg:x="873" fg:w="5"/><text x="70.7670%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::unexpected (1 samples, 0.08%)</title><rect x="70.8401%" y="229" width="0.0808%" height="15" fill="rgb(235,12,38)" fg:x="877" fg:w="1"/><text x="71.0901%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9208%" y="309" width="0.0808%" height="15" fill="rgb(225,195,33)" fg:x="878" fg:w="1"/><text x="71.1708%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.45%)</title><rect x="69.7900%" y="389" width="1.4540%" height="15" fill="rgb(238,54,35)" fg:x="864" fg:w="18"/><text x="70.0400%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.45%)</title><rect x="69.7900%" y="373" width="1.4540%" height="15" fill="rgb(238,33,7)" fg:x="864" fg:w="18"/><text x="70.0400%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (17 samples, 1.37%)</title><rect x="69.8708%" y="357" width="1.3732%" height="15" fill="rgb(245,5,14)" fg:x="865" fg:w="17"/><text x="70.1208%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="70.9208%" y="341" width="0.3231%" height="15" fill="rgb(251,95,31)" fg:x="878" fg:w="4"/><text x="71.1708%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="70.9208%" y="325" width="0.3231%" height="15" fill="rgb(222,15,46)" fg:x="878" fg:w="4"/><text x="71.1708%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.0016%" y="309" width="0.2423%" height="15" fill="rgb(226,182,24)" fg:x="879" fg:w="3"/><text x="71.2516%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.1632%" y="293" width="0.0808%" height="15" fill="rgb(229,105,41)" fg:x="881" fg:w="1"/><text x="71.4132%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.1632%" y="277" width="0.0808%" height="15" fill="rgb(216,99,53)" fg:x="881" fg:w="1"/><text x="71.4132%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.4055%" y="357" width="0.0808%" height="15" fill="rgb(253,26,20)" fg:x="884" fg:w="1"/><text x="71.6555%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4863%" y="325" width="0.0808%" height="15" fill="rgb(249,155,28)" fg:x="885" fg:w="1"/><text x="71.7363%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="71.5670%" y="309" width="0.0808%" height="15" fill="rgb(241,221,2)" fg:x="886" fg:w="1"/><text x="71.8170%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.5670%" y="293" width="0.0808%" height="15" fill="rgb(219,124,6)" fg:x="886" fg:w="1"/><text x="71.8170%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5670%" y="277" width="0.0808%" height="15" fill="rgb(233,37,6)" fg:x="886" fg:w="1"/><text x="71.8170%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 2.02%)</title><rect x="69.7092%" y="437" width="2.0194%" height="15" fill="rgb(238,20,14)" fg:x="863" fg:w="25"/><text x="69.9592%" y="447.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 2.02%)</title><rect x="69.7092%" y="421" width="2.0194%" height="15" fill="rgb(232,106,27)" fg:x="863" fg:w="25"/><text x="69.9592%" y="431.50">&lt;..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (25 samples, 2.02%)</title><rect x="69.7092%" y="405" width="2.0194%" height="15" fill="rgb(246,157,24)" fg:x="863" fg:w="25"/><text x="69.9592%" y="415.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="71.2439%" y="389" width="0.4847%" height="15" fill="rgb(214,153,10)" fg:x="882" fg:w="6"/><text x="71.4939%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="71.2439%" y="373" width="0.4847%" height="15" fill="rgb(212,94,6)" fg:x="882" fg:w="6"/><text x="71.4939%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.4863%" y="357" width="0.2423%" height="15" fill="rgb(254,25,27)" fg:x="885" fg:w="3"/><text x="71.7363%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="71.4863%" y="341" width="0.2423%" height="15" fill="rgb(250,43,52)" fg:x="885" fg:w="3"/><text x="71.7363%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.5670%" y="325" width="0.1616%" height="15" fill="rgb(221,226,40)" fg:x="886" fg:w="2"/><text x="71.8170%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.6478%" y="309" width="0.0808%" height="15" fill="rgb(235,162,34)" fg:x="887" fg:w="1"/><text x="71.8978%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.6478%" y="293" width="0.0808%" height="15" fill="rgb(239,24,26)" fg:x="887" fg:w="1"/><text x="71.8978%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6478%" y="277" width="0.0808%" height="15" fill="rgb(244,226,11)" fg:x="887" fg:w="1"/><text x="71.8978%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7286%" y="405" width="0.0808%" height="15" fill="rgb(225,23,10)" fg:x="888" fg:w="1"/><text x="71.9786%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9709%" y="373" width="0.0808%" height="15" fill="rgb(249,125,6)" fg:x="891" fg:w="1"/><text x="72.2209%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="72.0517%" y="373" width="0.1616%" height="15" fill="rgb(246,212,12)" fg:x="892" fg:w="2"/><text x="72.3017%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1325%" y="357" width="0.0808%" height="15" fill="rgb(230,43,32)" fg:x="893" fg:w="1"/><text x="72.3825%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2132%" y="357" width="0.0808%" height="15" fill="rgb(210,95,23)" fg:x="894" fg:w="1"/><text x="72.4632%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (39 samples, 3.15%)</title><rect x="69.3053%" y="469" width="3.1502%" height="15" fill="rgb(229,103,33)" fg:x="858" fg:w="39"/><text x="69.5553%" y="479.50">eng..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (39 samples, 3.15%)</title><rect x="69.3053%" y="453" width="3.1502%" height="15" fill="rgb(222,104,27)" fg:x="858" fg:w="39"/><text x="69.5553%" y="463.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="71.7286%" y="437" width="0.7270%" height="15" fill="rgb(239,221,23)" fg:x="888" fg:w="9"/><text x="71.9786%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="71.7286%" y="421" width="0.7270%" height="15" fill="rgb(222,98,21)" fg:x="888" fg:w="9"/><text x="71.9786%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="71.8094%" y="405" width="0.6462%" height="15" fill="rgb(231,101,20)" fg:x="889" fg:w="8"/><text x="72.0594%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="71.8094%" y="389" width="0.6462%" height="15" fill="rgb(215,150,22)" fg:x="889" fg:w="8"/><text x="72.0594%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.2132%" y="373" width="0.2423%" height="15" fill="rgb(248,3,34)" fg:x="894" fg:w="3"/><text x="72.4632%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.2940%" y="357" width="0.1616%" height="15" fill="rgb(220,141,21)" fg:x="895" fg:w="2"/><text x="72.5440%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.5363%" y="421" width="0.1616%" height="15" fill="rgb(223,41,48)" fg:x="898" fg:w="2"/><text x="72.7863%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6171%" y="405" width="0.0808%" height="15" fill="rgb(247,12,5)" fg:x="899" fg:w="1"/><text x="72.8671%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6171%" y="389" width="0.0808%" height="15" fill="rgb(206,173,10)" fg:x="899" fg:w="1"/><text x="72.8671%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6171%" y="373" width="0.0808%" height="15" fill="rgb(233,214,37)" fg:x="899" fg:w="1"/><text x="72.8671%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.6171%" y="357" width="0.0808%" height="15" fill="rgb(238,86,43)" fg:x="899" fg:w="1"/><text x="72.8671%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.6171%" y="341" width="0.0808%" height="15" fill="rgb(212,182,8)" fg:x="899" fg:w="1"/><text x="72.8671%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.6171%" y="325" width="0.0808%" height="15" fill="rgb(240,91,47)" fg:x="899" fg:w="1"/><text x="72.8671%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6171%" y="309" width="0.0808%" height="15" fill="rgb(209,138,26)" fg:x="899" fg:w="1"/><text x="72.8671%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6171%" y="293" width="0.0808%" height="15" fill="rgb(231,163,20)" fg:x="899" fg:w="1"/><text x="72.8671%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.6171%" y="277" width="0.0808%" height="15" fill="rgb(214,91,54)" fg:x="899" fg:w="1"/><text x="72.8671%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.6171%" y="261" width="0.0808%" height="15" fill="rgb(230,32,17)" fg:x="899" fg:w="1"/><text x="72.8671%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.6171%" y="245" width="0.0808%" height="15" fill="rgb(231,34,34)" fg:x="899" fg:w="1"/><text x="72.8671%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.6171%" y="229" width="0.0808%" height="15" fill="rgb(224,228,27)" fg:x="899" fg:w="1"/><text x="72.8671%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6171%" y="213" width="0.0808%" height="15" fill="rgb(219,35,40)" fg:x="899" fg:w="1"/><text x="72.8671%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="72.4556%" y="437" width="0.3231%" height="15" fill="rgb(234,42,8)" fg:x="897" fg:w="4"/><text x="72.7056%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6979%" y="421" width="0.0808%" height="15" fill="rgb(226,75,22)" fg:x="900" fg:w="1"/><text x="72.9479%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6979%" y="405" width="0.0808%" height="15" fill="rgb(242,203,28)" fg:x="900" fg:w="1"/><text x="72.9479%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.6979%" y="389" width="0.0808%" height="15" fill="rgb(221,3,9)" fg:x="900" fg:w="1"/><text x="72.9479%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.6979%" y="373" width="0.0808%" height="15" fill="rgb(214,34,31)" fg:x="900" fg:w="1"/><text x="72.9479%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.6979%" y="357" width="0.0808%" height="15" fill="rgb(252,119,15)" fg:x="900" fg:w="1"/><text x="72.9479%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6979%" y="341" width="0.0808%" height="15" fill="rgb(244,224,31)" fg:x="900" fg:w="1"/><text x="72.9479%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6979%" y="325" width="0.0808%" height="15" fill="rgb(215,8,51)" fg:x="900" fg:w="1"/><text x="72.9479%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.6979%" y="309" width="0.0808%" height="15" fill="rgb(207,24,1)" fg:x="900" fg:w="1"/><text x="72.9479%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.6979%" y="293" width="0.0808%" height="15" fill="rgb(245,90,0)" fg:x="900" fg:w="1"/><text x="72.9479%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.6979%" y="277" width="0.0808%" height="15" fill="rgb(246,43,48)" fg:x="900" fg:w="1"/><text x="72.9479%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.6979%" y="261" width="0.0808%" height="15" fill="rgb(252,218,10)" fg:x="900" fg:w="1"/><text x="72.9479%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6979%" y="245" width="0.0808%" height="15" fill="rgb(231,24,35)" fg:x="900" fg:w="1"/><text x="72.9479%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="72.4556%" y="453" width="0.4847%" height="15" fill="rgb(225,66,19)" fg:x="897" fg:w="6"/><text x="72.7056%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.7787%" y="437" width="0.1616%" height="15" fill="rgb(214,96,51)" fg:x="901" fg:w="2"/><text x="73.0287%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.7787%" y="421" width="0.1616%" height="15" fill="rgb(251,151,47)" fg:x="901" fg:w="2"/><text x="73.0287%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="72.7787%" y="405" width="0.1616%" height="15" fill="rgb(236,79,14)" fg:x="901" fg:w="2"/><text x="73.0287%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="72.7787%" y="389" width="0.1616%" height="15" fill="rgb(210,205,11)" fg:x="901" fg:w="2"/><text x="73.0287%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="72.7787%" y="373" width="0.1616%" height="15" fill="rgb(233,142,53)" fg:x="901" fg:w="2"/><text x="73.0287%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="72.7787%" y="357" width="0.1616%" height="15" fill="rgb(212,116,48)" fg:x="901" fg:w="2"/><text x="73.0287%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="72.7787%" y="341" width="0.1616%" height="15" fill="rgb(234,55,33)" fg:x="901" fg:w="2"/><text x="73.0287%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="72.7787%" y="325" width="0.1616%" height="15" fill="rgb(253,92,27)" fg:x="901" fg:w="2"/><text x="73.0287%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="72.7787%" y="309" width="0.1616%" height="15" fill="rgb(220,7,35)" fg:x="901" fg:w="2"/><text x="73.0287%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="72.7787%" y="293" width="0.1616%" height="15" fill="rgb(246,124,6)" fg:x="901" fg:w="2"/><text x="73.0287%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="72.7787%" y="277" width="0.1616%" height="15" fill="rgb(212,111,51)" fg:x="901" fg:w="2"/><text x="73.0287%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.7787%" y="261" width="0.1616%" height="15" fill="rgb(253,116,7)" fg:x="901" fg:w="2"/><text x="73.0287%" y="271.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="73.0210%" y="437" width="0.0808%" height="15" fill="rgb(213,145,18)" fg:x="904" fg:w="1"/><text x="73.2710%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="72.9402%" y="453" width="0.3231%" height="15" fill="rgb(219,149,7)" fg:x="903" fg:w="4"/><text x="73.1902%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="73.1018%" y="437" width="0.1616%" height="15" fill="rgb(225,156,20)" fg:x="905" fg:w="2"/><text x="73.3518%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="73.1018%" y="421" width="0.1616%" height="15" fill="rgb(211,98,19)" fg:x="905" fg:w="2"/><text x="73.3518%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.1826%" y="405" width="0.0808%" height="15" fill="rgb(231,192,31)" fg:x="906" fg:w="1"/><text x="73.4326%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.1826%" y="389" width="0.0808%" height="15" fill="rgb(249,95,19)" fg:x="906" fg:w="1"/><text x="73.4326%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1826%" y="373" width="0.0808%" height="15" fill="rgb(247,101,36)" fg:x="906" fg:w="1"/><text x="73.4326%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="73.2633%" y="453" width="0.0808%" height="15" fill="rgb(221,45,43)" fg:x="907" fg:w="1"/><text x="73.5133%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2633%" y="437" width="0.0808%" height="15" fill="rgb(220,42,1)" fg:x="907" fg:w="1"/><text x="73.5133%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.2633%" y="421" width="0.0808%" height="15" fill="rgb(236,19,24)" fg:x="907" fg:w="1"/><text x="73.5133%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.2633%" y="405" width="0.0808%" height="15" fill="rgb(225,192,6)" fg:x="907" fg:w="1"/><text x="73.5133%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.2633%" y="389" width="0.0808%" height="15" fill="rgb(242,30,19)" fg:x="907" fg:w="1"/><text x="73.5133%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.2633%" y="373" width="0.0808%" height="15" fill="rgb(240,36,6)" fg:x="907" fg:w="1"/><text x="73.5133%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2633%" y="357" width="0.0808%" height="15" fill="rgb(246,40,28)" fg:x="907" fg:w="1"/><text x="73.5133%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2633%" y="341" width="0.0808%" height="15" fill="rgb(225,155,33)" fg:x="907" fg:w="1"/><text x="73.5133%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.2633%" y="325" width="0.0808%" height="15" fill="rgb(240,65,18)" fg:x="907" fg:w="1"/><text x="73.5133%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.2633%" y="309" width="0.0808%" height="15" fill="rgb(217,0,48)" fg:x="907" fg:w="1"/><text x="73.5133%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.2633%" y="293" width="0.0808%" height="15" fill="rgb(217,80,15)" fg:x="907" fg:w="1"/><text x="73.5133%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.2633%" y="277" width="0.0808%" height="15" fill="rgb(253,43,51)" fg:x="907" fg:w="1"/><text x="73.5133%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.2633%" y="261" width="0.0808%" height="15" fill="rgb(246,60,4)" fg:x="907" fg:w="1"/><text x="73.5133%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.16%)</title><rect x="73.5864%" y="405" width="0.1616%" height="15" fill="rgb(230,40,54)" fg:x="911" fg:w="2"/><text x="73.8364%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.7480%" y="405" width="0.0808%" height="15" fill="rgb(208,20,44)" fg:x="913" fg:w="1"/><text x="73.9980%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8288%" y="373" width="0.0808%" height="15" fill="rgb(230,22,22)" fg:x="914" fg:w="1"/><text x="74.0788%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.8288%" y="357" width="0.0808%" height="15" fill="rgb(207,57,4)" fg:x="914" fg:w="1"/><text x="74.0788%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.9903%" y="357" width="0.1616%" height="15" fill="rgb(242,130,33)" fg:x="916" fg:w="2"/><text x="74.2403%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.9903%" y="341" width="0.1616%" height="15" fill="rgb(218,66,43)" fg:x="916" fg:w="2"/><text x="74.2403%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="73.9903%" y="325" width="0.1616%" height="15" fill="rgb(236,105,16)" fg:x="916" fg:w="2"/><text x="74.2403%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.9903%" y="309" width="0.1616%" height="15" fill="rgb(230,46,15)" fg:x="916" fg:w="2"/><text x="74.2403%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.9903%" y="293" width="0.1616%" height="15" fill="rgb(251,172,40)" fg:x="916" fg:w="2"/><text x="74.2403%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.9903%" y="277" width="0.1616%" height="15" fill="rgb(225,217,32)" fg:x="916" fg:w="2"/><text x="74.2403%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.9903%" y="261" width="0.1616%" height="15" fill="rgb(243,10,29)" fg:x="916" fg:w="2"/><text x="74.2403%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1519%" y="325" width="0.0808%" height="15" fill="rgb(207,102,10)" fg:x="918" fg:w="1"/><text x="74.4019%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2326%" y="309" width="0.0808%" height="15" fill="rgb(241,125,5)" fg:x="919" fg:w="1"/><text x="74.4826%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="74.1519%" y="357" width="0.2423%" height="15" fill="rgb(230,125,29)" fg:x="918" fg:w="3"/><text x="74.4019%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="74.1519%" y="341" width="0.2423%" height="15" fill="rgb(223,65,44)" fg:x="918" fg:w="3"/><text x="74.4019%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.2326%" y="325" width="0.1616%" height="15" fill="rgb(224,188,28)" fg:x="919" fg:w="2"/><text x="74.4826%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.3134%" y="309" width="0.0808%" height="15" fill="rgb(254,197,27)" fg:x="920" fg:w="1"/><text x="74.5634%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3134%" y="293" width="0.0808%" height="15" fill="rgb(220,200,25)" fg:x="920" fg:w="1"/><text x="74.5634%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.81%)</title><rect x="73.8288%" y="405" width="0.8078%" height="15" fill="rgb(239,225,54)" fg:x="914" fg:w="10"/><text x="74.0788%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="73.8288%" y="389" width="0.8078%" height="15" fill="rgb(211,59,40)" fg:x="914" fg:w="10"/><text x="74.0788%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.73%)</title><rect x="73.9095%" y="373" width="0.7270%" height="15" fill="rgb(213,176,46)" fg:x="915" fg:w="9"/><text x="74.1595%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.3942%" y="357" width="0.2423%" height="15" fill="rgb(226,99,4)" fg:x="921" fg:w="3"/><text x="74.6442%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.3942%" y="341" width="0.2423%" height="15" fill="rgb(239,203,43)" fg:x="921" fg:w="3"/><text x="74.6442%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="74.5557%" y="325" width="0.0808%" height="15" fill="rgb(246,1,45)" fg:x="923" fg:w="1"/><text x="74.8057%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5557%" y="309" width="0.0808%" height="15" fill="rgb(231,42,52)" fg:x="923" fg:w="1"/><text x="74.8057%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5557%" y="293" width="0.0808%" height="15" fill="rgb(240,13,50)" fg:x="923" fg:w="1"/><text x="74.8057%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (17 samples, 1.37%)</title><rect x="73.3441%" y="453" width="1.3732%" height="15" fill="rgb(225,81,14)" fg:x="908" fg:w="17"/><text x="73.5941%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.37%)</title><rect x="73.3441%" y="437" width="1.3732%" height="15" fill="rgb(216,182,23)" fg:x="908" fg:w="17"/><text x="73.5941%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.37%)</title><rect x="73.3441%" y="421" width="1.3732%" height="15" fill="rgb(233,137,19)" fg:x="908" fg:w="17"/><text x="73.5941%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6365%" y="405" width="0.0808%" height="15" fill="rgb(242,61,46)" fg:x="924" fg:w="1"/><text x="74.8865%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6365%" y="389" width="0.0808%" height="15" fill="rgb(221,168,51)" fg:x="924" fg:w="1"/><text x="74.8865%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.9596%" y="277" width="0.0808%" height="15" fill="rgb(238,48,15)" fg:x="928" fg:w="1"/><text x="75.2096%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9596%" y="261" width="0.0808%" height="15" fill="rgb(216,13,16)" fg:x="928" fg:w="1"/><text x="75.2096%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.9596%" y="309" width="0.1616%" height="15" fill="rgb(223,185,34)" fg:x="928" fg:w="2"/><text x="75.2096%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.9596%" y="293" width="0.1616%" height="15" fill="rgb(228,94,42)" fg:x="928" fg:w="2"/><text x="75.2096%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0404%" y="277" width="0.0808%" height="15" fill="rgb(218,166,43)" fg:x="929" fg:w="1"/><text x="75.2904%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.0404%" y="261" width="0.0808%" height="15" fill="rgb(232,30,50)" fg:x="929" fg:w="1"/><text x="75.2904%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.1212%" y="293" width="0.0808%" height="15" fill="rgb(245,206,45)" fg:x="930" fg:w="1"/><text x="75.3712%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.1212%" y="277" width="0.0808%" height="15" fill="rgb(220,56,22)" fg:x="930" fg:w="1"/><text x="75.3712%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="74.8788%" y="357" width="0.4039%" height="15" fill="rgb(239,129,38)" fg:x="927" fg:w="5"/><text x="75.1288%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="74.8788%" y="341" width="0.4039%" height="15" fill="rgb(207,68,41)" fg:x="927" fg:w="5"/><text x="75.1288%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="74.9596%" y="325" width="0.3231%" height="15" fill="rgb(221,21,7)" fg:x="928" fg:w="4"/><text x="75.2096%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.1212%" y="309" width="0.1616%" height="15" fill="rgb(240,33,25)" fg:x="930" fg:w="2"/><text x="75.3712%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2019%" y="293" width="0.0808%" height="15" fill="rgb(242,119,10)" fg:x="931" fg:w="1"/><text x="75.4519%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="74.7981%" y="373" width="0.5654%" height="15" fill="rgb(214,149,40)" fg:x="926" fg:w="7"/><text x="75.0481%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2827%" y="357" width="0.0808%" height="15" fill="rgb(228,25,36)" fg:x="932" fg:w="1"/><text x="75.5327%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="74.7981%" y="389" width="0.6462%" height="15" fill="rgb(222,59,15)" fg:x="926" fg:w="8"/><text x="75.0481%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3635%" y="373" width="0.0808%" height="15" fill="rgb(218,170,0)" fg:x="933" fg:w="1"/><text x="75.6135%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.4443%" y="373" width="0.0808%" height="15" fill="rgb(232,173,23)" fg:x="934" fg:w="1"/><text x="75.6943%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (78 samples, 6.30%)</title><rect x="69.3053%" y="485" width="6.3005%" height="15" fill="rgb(218,116,1)" fg:x="858" fg:w="78"/><text x="69.5553%" y="495.50">engine::..</text></g><g><title>engine::session::internal::Entities::add_persisted (39 samples, 3.15%)</title><rect x="72.4556%" y="469" width="3.1502%" height="15" fill="rgb(207,34,4)" fg:x="897" fg:w="39"/><text x="72.7056%" y="479.50">eng..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.89%)</title><rect x="74.7173%" y="453" width="0.8885%" height="15" fill="rgb(229,54,52)" fg:x="925" fg:w="11"/><text x="74.9673%" y="463.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.89%)</title><rect x="74.7173%" y="437" width="0.8885%" height="15" fill="rgb(211,86,23)" fg:x="925" fg:w="11"/><text x="74.9673%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.89%)</title><rect x="74.7173%" y="421" width="0.8885%" height="15" fill="rgb(254,153,34)" fg:x="925" fg:w="11"/><text x="74.9673%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="74.7981%" y="405" width="0.8078%" height="15" fill="rgb(219,220,14)" fg:x="926" fg:w="10"/><text x="75.0481%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="75.4443%" y="389" width="0.1616%" height="15" fill="rgb(247,8,26)" fg:x="934" fg:w="2"/><text x="75.6943%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5250%" y="373" width="0.0808%" height="15" fill="rgb(213,129,42)" fg:x="935" fg:w="1"/><text x="75.7750%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="75.6866%" y="453" width="0.0808%" height="15" fill="rgb(225,95,41)" fg:x="937" fg:w="1"/><text x="75.9366%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7674%" y="405" width="0.0808%" height="15" fill="rgb(215,134,24)" fg:x="938" fg:w="1"/><text x="76.0174%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7674%" y="389" width="0.0808%" height="15" fill="rgb(235,23,54)" fg:x="938" fg:w="1"/><text x="76.0174%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7674%" y="373" width="0.0808%" height="15" fill="rgb(229,96,31)" fg:x="938" fg:w="1"/><text x="76.0174%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.7674%" y="437" width="0.1616%" height="15" fill="rgb(206,111,12)" fg:x="938" fg:w="2"/><text x="76.0174%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.7674%" y="421" width="0.1616%" height="15" fill="rgb(222,177,8)" fg:x="938" fg:w="2"/><text x="76.0174%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8481%" y="405" width="0.0808%" height="15" fill="rgb(251,36,52)" fg:x="939" fg:w="1"/><text x="76.0981%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8481%" y="389" width="0.0808%" height="15" fill="rgb(216,182,29)" fg:x="939" fg:w="1"/><text x="76.0981%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.8481%" y="373" width="0.0808%" height="15" fill="rgb(241,145,50)" fg:x="939" fg:w="1"/><text x="76.0981%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.8481%" y="357" width="0.0808%" height="15" fill="rgb(231,71,35)" fg:x="939" fg:w="1"/><text x="76.0981%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.8481%" y="341" width="0.0808%" height="15" fill="rgb(218,22,17)" fg:x="939" fg:w="1"/><text x="76.0981%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.8481%" y="325" width="0.0808%" height="15" fill="rgb(225,227,6)" fg:x="939" fg:w="1"/><text x="76.0981%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.8481%" y="309" width="0.0808%" height="15" fill="rgb(224,204,17)" fg:x="939" fg:w="1"/><text x="76.0981%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.8481%" y="293" width="0.0808%" height="15" fill="rgb(227,61,28)" fg:x="939" fg:w="1"/><text x="76.0981%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.8481%" y="277" width="0.0808%" height="15" fill="rgb(242,148,23)" fg:x="939" fg:w="1"/><text x="76.0981%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.8481%" y="261" width="0.0808%" height="15" fill="rgb(237,105,33)" fg:x="939" fg:w="1"/><text x="76.0981%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.8481%" y="245" width="0.0808%" height="15" fill="rgb(238,218,40)" fg:x="939" fg:w="1"/><text x="76.0981%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8481%" y="229" width="0.0808%" height="15" fill="rgb(209,126,11)" fg:x="939" fg:w="1"/><text x="76.0981%" y="239.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="75.9289%" y="437" width="0.0808%" height="15" fill="rgb(245,90,11)" fg:x="940" fg:w="1"/><text x="76.1789%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9289%" y="421" width="0.0808%" height="15" fill="rgb(211,195,10)" fg:x="940" fg:w="1"/><text x="76.1789%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9289%" y="405" width="0.0808%" height="15" fill="rgb(231,45,45)" fg:x="940" fg:w="1"/><text x="76.1789%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="75.9289%" y="389" width="0.0808%" height="15" fill="rgb(246,100,43)" fg:x="940" fg:w="1"/><text x="76.1789%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="76.0097%" y="389" width="0.1616%" height="15" fill="rgb(241,193,8)" fg:x="941" fg:w="2"/><text x="76.2597%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3328%" y="357" width="0.0808%" height="15" fill="rgb(208,76,19)" fg:x="945" fg:w="1"/><text x="76.5828%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="76.3328%" y="341" width="0.0808%" height="15" fill="rgb(223,69,40)" fg:x="945" fg:w="1"/><text x="76.5828%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.4136%" y="309" width="0.0808%" height="15" fill="rgb(207,120,39)" fg:x="946" fg:w="1"/><text x="76.6636%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="76.4943%" y="309" width="0.0808%" height="15" fill="rgb(212,209,28)" fg:x="947" fg:w="1"/><text x="76.7443%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="76.4943%" y="293" width="0.0808%" height="15" fill="rgb(246,82,29)" fg:x="947" fg:w="1"/><text x="76.7443%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.4943%" y="277" width="0.0808%" height="15" fill="rgb(239,6,40)" fg:x="947" fg:w="1"/><text x="76.7443%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.4136%" y="341" width="0.2423%" height="15" fill="rgb(228,181,35)" fg:x="946" fg:w="3"/><text x="76.6636%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.4136%" y="325" width="0.2423%" height="15" fill="rgb(238,151,2)" fg:x="946" fg:w="3"/><text x="76.6636%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="76.5751%" y="309" width="0.0808%" height="15" fill="rgb(236,94,18)" fg:x="948" fg:w="1"/><text x="76.8251%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.5751%" y="293" width="0.0808%" height="15" fill="rgb(208,38,14)" fg:x="948" fg:w="1"/><text x="76.8251%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.6559%" y="341" width="0.0808%" height="15" fill="rgb(234,215,27)" fg:x="949" fg:w="1"/><text x="76.9059%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.6559%" y="325" width="0.0808%" height="15" fill="rgb(254,211,53)" fg:x="949" fg:w="1"/><text x="76.9059%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.6559%" y="309" width="0.0808%" height="15" fill="rgb(216,175,11)" fg:x="949" fg:w="1"/><text x="76.9059%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6559%" y="293" width="0.0808%" height="15" fill="rgb(246,179,26)" fg:x="949" fg:w="1"/><text x="76.9059%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="76.7367%" y="309" width="0.2423%" height="15" fill="rgb(249,19,52)" fg:x="950" fg:w="3"/><text x="76.9867%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.7367%" y="293" width="0.2423%" height="15" fill="rgb(230,42,52)" fg:x="950" fg:w="3"/><text x="76.9867%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.7367%" y="277" width="0.2423%" height="15" fill="rgb(221,171,0)" fg:x="950" fg:w="3"/><text x="76.9867%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="76.7367%" y="261" width="0.2423%" height="15" fill="rgb(222,177,40)" fg:x="950" fg:w="3"/><text x="76.9867%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.8982%" y="245" width="0.0808%" height="15" fill="rgb(247,34,16)" fg:x="952" fg:w="1"/><text x="77.1482%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.89%)</title><rect x="76.1712%" y="389" width="0.8885%" height="15" fill="rgb(213,217,37)" fg:x="943" fg:w="11"/><text x="76.4212%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="76.1712%" y="373" width="0.8885%" height="15" fill="rgb(231,189,24)" fg:x="943" fg:w="11"/><text x="76.4212%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.65%)</title><rect x="76.4136%" y="357" width="0.6462%" height="15" fill="rgb(214,22,9)" fg:x="946" fg:w="8"/><text x="76.6636%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="76.7367%" y="341" width="0.3231%" height="15" fill="rgb(212,70,22)" fg:x="950" fg:w="4"/><text x="76.9867%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.7367%" y="325" width="0.3231%" height="15" fill="rgb(249,64,51)" fg:x="950" fg:w="4"/><text x="76.9867%" y="335.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="76.9790%" y="309" width="0.0808%" height="15" fill="rgb(249,148,20)" fg:x="953" fg:w="1"/><text x="77.2290%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="77.0598%" y="389" width="0.0808%" height="15" fill="rgb(246,46,48)" fg:x="954" fg:w="1"/><text x="77.3098%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2213%" y="357" width="0.0808%" height="15" fill="rgb(217,34,48)" fg:x="956" fg:w="1"/><text x="77.4713%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (17 samples, 1.37%)</title><rect x="76.0097%" y="437" width="1.3732%" height="15" fill="rgb(222,45,26)" fg:x="941" fg:w="17"/><text x="76.2597%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.37%)</title><rect x="76.0097%" y="421" width="1.3732%" height="15" fill="rgb(230,201,36)" fg:x="941" fg:w="17"/><text x="76.2597%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.37%)</title><rect x="76.0097%" y="405" width="1.3732%" height="15" fill="rgb(217,30,43)" fg:x="941" fg:w="17"/><text x="76.2597%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.1405%" y="389" width="0.2423%" height="15" fill="rgb(230,197,40)" fg:x="955" fg:w="3"/><text x="77.3905%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.1405%" y="373" width="0.2423%" height="15" fill="rgb(239,181,18)" fg:x="955" fg:w="3"/><text x="77.3905%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3021%" y="357" width="0.0808%" height="15" fill="rgb(222,60,39)" fg:x="957" fg:w="1"/><text x="77.5521%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3021%" y="341" width="0.0808%" height="15" fill="rgb(210,60,22)" fg:x="957" fg:w="1"/><text x="77.5521%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="77.4637%" y="309" width="0.0808%" height="15" fill="rgb(239,213,48)" fg:x="959" fg:w="1"/><text x="77.7137%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.4637%" y="293" width="0.0808%" height="15" fill="rgb(253,214,23)" fg:x="959" fg:w="1"/><text x="77.7137%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="77.4637%" y="341" width="0.1616%" height="15" fill="rgb(211,98,45)" fg:x="959" fg:w="2"/><text x="77.7137%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.4637%" y="325" width="0.1616%" height="15" fill="rgb(239,130,44)" fg:x="959" fg:w="2"/><text x="77.7137%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5444%" y="309" width="0.0808%" height="15" fill="rgb(222,181,35)" fg:x="960" fg:w="1"/><text x="77.7944%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.6252%" y="341" width="0.0808%" height="15" fill="rgb(219,219,49)" fg:x="961" fg:w="1"/><text x="77.8752%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6252%" y="325" width="0.0808%" height="15" fill="rgb(227,161,51)" fg:x="961" fg:w="1"/><text x="77.8752%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="77.3829%" y="373" width="0.4039%" height="15" fill="rgb(239,112,27)" fg:x="958" fg:w="5"/><text x="77.6329%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="77.3829%" y="357" width="0.4039%" height="15" fill="rgb(248,122,18)" fg:x="958" fg:w="5"/><text x="77.6329%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7060%" y="341" width="0.0808%" height="15" fill="rgb(245,130,23)" fg:x="962" fg:w="1"/><text x="77.9560%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="77.7868%" y="373" width="0.2423%" height="15" fill="rgb(211,225,28)" fg:x="963" fg:w="3"/><text x="78.0368%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="77.8675%" y="357" width="0.1616%" height="15" fill="rgb(242,105,44)" fg:x="964" fg:w="2"/><text x="78.1175%" y="367.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (166 samples, 13.41%)</title><rect x="64.7819%" y="517" width="13.4087%" height="15" fill="rgb(216,183,46)" fg:x="802" fg:w="166"/><text x="65.0319%" y="527.50">engine::session::Ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (166 samples, 13.41%)</title><rect x="64.7819%" y="501" width="13.4087%" height="15" fill="rgb(227,112,9)" fg:x="802" fg:w="166"/><text x="65.0319%" y="511.50">engine::session::Ses..</text></g><g><title>kernel::model::EntityPtrResolver::world (32 samples, 2.58%)</title><rect x="75.6058%" y="485" width="2.5848%" height="15" fill="rgb(244,21,0)" fg:x="936" fg:w="32"/><text x="75.8558%" y="495.50">ke..</text></g><g><title>engine::session::Session::load_entity (31 samples, 2.50%)</title><rect x="75.6866%" y="469" width="2.5040%" height="15" fill="rgb(236,185,14)" fg:x="937" fg:w="31"/><text x="75.9366%" y="479.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (30 samples, 2.42%)</title><rect x="75.7674%" y="453" width="2.4233%" height="15" fill="rgb(236,170,30)" fg:x="938" fg:w="30"/><text x="76.0174%" y="463.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.81%)</title><rect x="77.3829%" y="437" width="0.8078%" height="15" fill="rgb(209,198,51)" fg:x="958" fg:w="10"/><text x="77.6329%" y="447.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.81%)</title><rect x="77.3829%" y="421" width="0.8078%" height="15" fill="rgb(205,171,26)" fg:x="958" fg:w="10"/><text x="77.6329%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="77.3829%" y="405" width="0.8078%" height="15" fill="rgb(246,41,49)" fg:x="958" fg:w="10"/><text x="77.6329%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="77.3829%" y="389" width="0.8078%" height="15" fill="rgb(240,229,12)" fg:x="958" fg:w="10"/><text x="77.6329%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="78.0291%" y="373" width="0.1616%" height="15" fill="rgb(212,8,54)" fg:x="966" fg:w="2"/><text x="78.2791%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.3522%" y="501" width="0.0808%" height="15" fill="rgb(230,114,13)" fg:x="970" fg:w="1"/><text x="78.6022%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (974 samples, 78.68%)</title><rect x="0.0000%" y="565" width="78.6753%" height="15" fill="rgb(229,130,28)" fg:x="0" fg:w="974"/><text x="0.2500%" y="575.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (974 samples, 78.68%)</title><rect x="0.0000%" y="549" width="78.6753%" height="15" fill="rgb(206,139,15)" fg:x="0" fg:w="974"/><text x="0.2500%" y="559.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (974 samples, 78.68%)</title><rect x="0.0000%" y="533" width="78.6753%" height="15" fill="rgb(241,188,35)" fg:x="0" fg:w="974"/><text x="0.2500%" y="543.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (6 samples, 0.48%)</title><rect x="78.1906%" y="517" width="0.4847%" height="15" fill="rgb(208,224,26)" fg:x="968" fg:w="6"/><text x="78.4406%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="78.4330%" y="501" width="0.2423%" height="15" fill="rgb(251,131,28)" fg:x="971" fg:w="3"/><text x="78.6830%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="78.4330%" y="485" width="0.2423%" height="15" fill="rgb(208,153,1)" fg:x="971" fg:w="3"/><text x="78.6830%" y="495.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="78.4330%" y="469" width="0.2423%" height="15" fill="rgb(234,33,36)" fg:x="971" fg:w="3"/><text x="78.6830%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8368%" y="421" width="0.0808%" height="15" fill="rgb(246,42,29)" fg:x="976" fg:w="1"/><text x="79.0868%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.9176%" y="405" width="0.1616%" height="15" fill="rgb(251,114,16)" fg:x="977" fg:w="2"/><text x="79.1676%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.0792%" y="405" width="0.0808%" height="15" fill="rgb(233,13,38)" fg:x="979" fg:w="1"/><text x="79.3292%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1599%" y="389" width="0.0808%" height="15" fill="rgb(247,120,19)" fg:x="980" fg:w="1"/><text x="79.4099%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.3215%" y="357" width="0.1616%" height="15" fill="rgb(205,11,16)" fg:x="982" fg:w="2"/><text x="79.5715%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4023%" y="341" width="0.0808%" height="15" fill="rgb(228,185,19)" fg:x="983" fg:w="1"/><text x="79.6523%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="78.7561%" y="437" width="0.8078%" height="15" fill="rgb(239,88,52)" fg:x="975" fg:w="10"/><text x="79.0061%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="78.9176%" y="421" width="0.6462%" height="15" fill="rgb(219,23,1)" fg:x="977" fg:w="8"/><text x="79.1676%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="79.1599%" y="405" width="0.4039%" height="15" fill="rgb(253,177,16)" fg:x="980" fg:w="5"/><text x="79.4099%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.2407%" y="389" width="0.3231%" height="15" fill="rgb(225,150,40)" fg:x="981" fg:w="4"/><text x="79.4907%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.3215%" y="373" width="0.2423%" height="15" fill="rgb(208,108,30)" fg:x="982" fg:w="3"/><text x="79.5715%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4830%" y="357" width="0.0808%" height="15" fill="rgb(214,122,4)" fg:x="984" fg:w="1"/><text x="79.7330%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5638%" y="405" width="0.0808%" height="15" fill="rgb(229,74,37)" fg:x="985" fg:w="1"/><text x="79.8138%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.6446%" y="405" width="0.0808%" height="15" fill="rgb(233,61,41)" fg:x="986" fg:w="1"/><text x="79.8946%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6446%" y="389" width="0.0808%" height="15" fill="rgb(238,191,5)" fg:x="986" fg:w="1"/><text x="79.8946%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.7254%" y="389" width="0.0808%" height="15" fill="rgb(233,78,24)" fg:x="987" fg:w="1"/><text x="79.9754%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.7254%" y="373" width="0.0808%" height="15" fill="rgb(211,142,8)" fg:x="987" fg:w="1"/><text x="79.9754%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.8061%" y="389" width="0.0808%" height="15" fill="rgb(253,38,53)" fg:x="988" fg:w="1"/><text x="80.0561%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8061%" y="373" width="0.0808%" height="15" fill="rgb(234,63,51)" fg:x="988" fg:w="1"/><text x="80.0561%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8869%" y="373" width="0.0808%" height="15" fill="rgb(205,23,31)" fg:x="989" fg:w="1"/><text x="80.1369%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.37%)</title><rect x="78.6753%" y="485" width="1.3732%" height="15" fill="rgb(210,184,50)" fg:x="974" fg:w="17"/><text x="78.9253%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (16 samples, 1.29%)</title><rect x="78.7561%" y="469" width="1.2924%" height="15" fill="rgb(222,112,26)" fg:x="975" fg:w="16"/><text x="79.0061%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="78.7561%" y="453" width="1.2924%" height="15" fill="rgb(250,98,18)" fg:x="975" fg:w="16"/><text x="79.0061%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.5638%" y="437" width="0.4847%" height="15" fill="rgb(250,34,12)" fg:x="985" fg:w="6"/><text x="79.8138%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.5638%" y="421" width="0.4847%" height="15" fill="rgb(236,141,30)" fg:x="985" fg:w="6"/><text x="79.8138%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.7254%" y="405" width="0.3231%" height="15" fill="rgb(246,134,38)" fg:x="987" fg:w="4"/><text x="79.9754%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.8869%" y="389" width="0.1616%" height="15" fill="rgb(240,114,4)" fg:x="989" fg:w="2"/><text x="80.1369%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.9677%" y="373" width="0.0808%" height="15" fill="rgb(243,113,39)" fg:x="990" fg:w="1"/><text x="80.2177%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.45%)</title><rect x="78.6753%" y="517" width="1.4540%" height="15" fill="rgb(239,215,4)" fg:x="974" fg:w="18"/><text x="78.9253%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (18 samples, 1.45%)</title><rect x="78.6753%" y="501" width="1.4540%" height="15" fill="rgb(236,229,45)" fg:x="974" fg:w="18"/><text x="78.9253%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0485%" y="485" width="0.0808%" height="15" fill="rgb(242,2,6)" fg:x="991" fg:w="1"/><text x="80.2985%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1292%" y="469" width="0.0808%" height="15" fill="rgb(239,108,21)" fg:x="992" fg:w="1"/><text x="80.3792%" y="479.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="80.2100%" y="405" width="0.0808%" height="15" fill="rgb(215,168,34)" fg:x="993" fg:w="1"/><text x="80.4600%" y="415.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="80.2100%" y="389" width="0.0808%" height="15" fill="rgb(238,31,17)" fg:x="993" fg:w="1"/><text x="80.4600%" y="399.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="80.2100%" y="373" width="0.0808%" height="15" fill="rgb(220,133,11)" fg:x="993" fg:w="1"/><text x="80.4600%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (8 samples, 0.65%)</title><rect x="80.2100%" y="437" width="0.6462%" height="15" fill="rgb(212,158,23)" fg:x="993" fg:w="8"/><text x="80.4600%" y="447.50"></text></g><g><title>libloading::safe::Library::new (8 samples, 0.65%)</title><rect x="80.2100%" y="421" width="0.6462%" height="15" fill="rgb(223,172,7)" fg:x="993" fg:w="8"/><text x="80.4600%" y="431.50"></text></g><g><title>dlopen (7 samples, 0.57%)</title><rect x="80.2908%" y="405" width="0.5654%" height="15" fill="rgb(244,3,52)" fg:x="994" fg:w="7"/><text x="80.5408%" y="415.50"></text></g><g><title>_dl_catch_error (7 samples, 0.57%)</title><rect x="80.2908%" y="389" width="0.5654%" height="15" fill="rgb(207,69,27)" fg:x="994" fg:w="7"/><text x="80.5408%" y="399.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.57%)</title><rect x="80.2908%" y="373" width="0.5654%" height="15" fill="rgb(213,136,45)" fg:x="994" fg:w="7"/><text x="80.5408%" y="383.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="80.4523%" y="357" width="0.4039%" height="15" fill="rgb(218,79,17)" fg:x="996" fg:w="5"/><text x="80.7023%" y="367.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="80.4523%" y="341" width="0.4039%" height="15" fill="rgb(216,106,36)" fg:x="996" fg:w="5"/><text x="80.7023%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7754%" y="325" width="0.0808%" height="15" fill="rgb(251,27,45)" fg:x="1000" fg:w="1"/><text x="81.0254%" y="335.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (10 samples, 0.81%)</title><rect x="80.2100%" y="453" width="0.8078%" height="15" fill="rgb(232,21,34)" fg:x="993" fg:w="10"/><text x="80.4600%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="80.8562%" y="437" width="0.1616%" height="15" fill="rgb(249,191,16)" fg:x="1001" fg:w="2"/><text x="81.1062%" y="447.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="80.8562%" y="421" width="0.1616%" height="15" fill="rgb(224,88,20)" fg:x="1001" fg:w="2"/><text x="81.1062%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="81.0178%" y="453" width="0.1616%" height="15" fill="rgb(237,93,27)" fg:x="1003" fg:w="2"/><text x="81.2678%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="81.0178%" y="437" width="0.1616%" height="15" fill="rgb(226,198,48)" fg:x="1003" fg:w="2"/><text x="81.2678%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="81.0178%" y="421" width="0.1616%" height="15" fill="rgb(207,162,53)" fg:x="1003" fg:w="2"/><text x="81.2678%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.0985%" y="405" width="0.0808%" height="15" fill="rgb(207,169,9)" fg:x="1004" fg:w="1"/><text x="81.3485%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.0985%" y="389" width="0.0808%" height="15" fill="rgb(224,166,46)" fg:x="1004" fg:w="1"/><text x="81.3485%" y="399.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (14 samples, 1.13%)</title><rect x="80.1292%" y="517" width="1.1309%" height="15" fill="rgb(233,26,6)" fg:x="992" fg:w="14"/><text x="80.3792%" y="527.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (14 samples, 1.13%)</title><rect x="80.1292%" y="501" width="1.1309%" height="15" fill="rgb(218,106,45)" fg:x="992" fg:w="14"/><text x="80.3792%" y="511.50"></text></g><g><title>engine::session::Session::new (14 samples, 1.13%)</title><rect x="80.1292%" y="485" width="1.1309%" height="15" fill="rgb(240,217,4)" fg:x="992" fg:w="14"/><text x="80.3792%" y="495.50"></text></g><g><title>engine::session::Session::initialize (13 samples, 1.05%)</title><rect x="80.2100%" y="469" width="1.0501%" height="15" fill="rgb(246,171,10)" fg:x="993" fg:w="13"/><text x="80.4600%" y="479.50"></text></g><g><title>kernel::session::SetSession&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="81.1793%" y="453" width="0.0808%" height="15" fill="rgb(223,197,30)" fg:x="1005" fg:w="1"/><text x="81.4293%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="81.2601%" y="485" width="0.1616%" height="15" fill="rgb(207,92,16)" fg:x="1006" fg:w="2"/><text x="81.5101%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="81.5832%" y="389" width="0.1616%" height="15" fill="rgb(211,6,44)" fg:x="1010" fg:w="2"/><text x="81.8332%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.5832%" y="373" width="0.1616%" height="15" fill="rgb(219,139,2)" fg:x="1010" fg:w="2"/><text x="81.8332%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.5832%" y="357" width="0.1616%" height="15" fill="rgb(224,103,21)" fg:x="1010" fg:w="2"/><text x="81.8332%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.6640%" y="341" width="0.0808%" height="15" fill="rgb(254,110,48)" fg:x="1011" fg:w="1"/><text x="81.9140%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.6640%" y="325" width="0.0808%" height="15" fill="rgb(212,88,19)" fg:x="1011" fg:w="1"/><text x="81.9140%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.7447%" y="373" width="0.0808%" height="15" fill="rgb(248,103,6)" fg:x="1012" fg:w="1"/><text x="81.9947%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="81.8255%" y="373" width="0.2423%" height="15" fill="rgb(214,53,46)" fg:x="1013" fg:w="3"/><text x="82.0755%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.9063%" y="357" width="0.1616%" height="15" fill="rgb(236,190,24)" fg:x="1014" fg:w="2"/><text x="82.1563%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.9063%" y="341" width="0.1616%" height="15" fill="rgb(254,58,28)" fg:x="1014" fg:w="2"/><text x="82.1563%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="81.9063%" y="325" width="0.1616%" height="15" fill="rgb(243,63,27)" fg:x="1014" fg:w="2"/><text x="82.1563%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.9871%" y="309" width="0.0808%" height="15" fill="rgb(206,81,20)" fg:x="1015" fg:w="1"/><text x="82.2371%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.9871%" y="293" width="0.0808%" height="15" fill="rgb(252,69,51)" fg:x="1015" fg:w="1"/><text x="82.2371%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.9871%" y="277" width="0.0808%" height="15" fill="rgb(222,213,4)" fg:x="1015" fg:w="1"/><text x="82.2371%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.0679%" y="325" width="0.0808%" height="15" fill="rgb(226,198,12)" fg:x="1016" fg:w="1"/><text x="82.3179%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.0679%" y="309" width="0.0808%" height="15" fill="rgb(248,115,11)" fg:x="1016" fg:w="1"/><text x="82.3179%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.0679%" y="293" width="0.0808%" height="15" fill="rgb(221,148,54)" fg:x="1016" fg:w="1"/><text x="82.3179%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="82.0679%" y="357" width="0.1616%" height="15" fill="rgb(214,209,51)" fg:x="1016" fg:w="2"/><text x="82.3179%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.0679%" y="341" width="0.1616%" height="15" fill="rgb(249,116,53)" fg:x="1016" fg:w="2"/><text x="82.3179%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1486%" y="325" width="0.0808%" height="15" fill="rgb(248,170,1)" fg:x="1017" fg:w="1"/><text x="82.3986%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1486%" y="309" width="0.0808%" height="15" fill="rgb(244,105,10)" fg:x="1017" fg:w="1"/><text x="82.3986%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.1486%" y="293" width="0.0808%" height="15" fill="rgb(229,100,5)" fg:x="1017" fg:w="1"/><text x="82.3986%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.1486%" y="277" width="0.0808%" height="15" fill="rgb(233,221,39)" fg:x="1017" fg:w="1"/><text x="82.3986%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.2294%" y="357" width="0.0808%" height="15" fill="rgb(233,88,21)" fg:x="1018" fg:w="1"/><text x="82.4794%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.3102%" y="341" width="0.0808%" height="15" fill="rgb(206,13,0)" fg:x="1019" fg:w="1"/><text x="82.5602%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3102%" y="325" width="0.0808%" height="15" fill="rgb(242,15,35)" fg:x="1019" fg:w="1"/><text x="82.5602%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.3102%" y="309" width="0.0808%" height="15" fill="rgb(247,142,41)" fg:x="1019" fg:w="1"/><text x="82.5602%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3102%" y="293" width="0.0808%" height="15" fill="rgb(245,51,29)" fg:x="1019" fg:w="1"/><text x="82.5602%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.3102%" y="277" width="0.0808%" height="15" fill="rgb(228,209,43)" fg:x="1019" fg:w="1"/><text x="82.5602%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.3102%" y="261" width="0.0808%" height="15" fill="rgb(233,185,9)" fg:x="1019" fg:w="1"/><text x="82.5602%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.3102%" y="245" width="0.0808%" height="15" fill="rgb(226,93,0)" fg:x="1019" fg:w="1"/><text x="82.5602%" y="255.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.3910%" y="325" width="0.0808%" height="15" fill="rgb(245,194,43)" fg:x="1020" fg:w="1"/><text x="82.6410%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3910%" y="309" width="0.0808%" height="15" fill="rgb(211,145,34)" fg:x="1020" fg:w="1"/><text x="82.6410%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.3910%" y="293" width="0.0808%" height="15" fill="rgb(231,228,28)" fg:x="1020" fg:w="1"/><text x="82.6410%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="82.3910%" y="277" width="0.0808%" height="15" fill="rgb(236,149,4)" fg:x="1020" fg:w="1"/><text x="82.6410%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="82.0679%" y="373" width="0.5654%" height="15" fill="rgb(234,114,38)" fg:x="1016" fg:w="7"/><text x="82.3179%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.3102%" y="357" width="0.3231%" height="15" fill="rgb(246,132,51)" fg:x="1019" fg:w="4"/><text x="82.5602%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="82.3910%" y="341" width="0.2423%" height="15" fill="rgb(251,137,22)" fg:x="1020" fg:w="3"/><text x="82.6410%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.4717%" y="325" width="0.1616%" height="15" fill="rgb(243,59,52)" fg:x="1021" fg:w="2"/><text x="82.7217%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.5525%" y="309" width="0.0808%" height="15" fill="rgb(239,56,28)" fg:x="1022" fg:w="1"/><text x="82.8025%" y="319.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.5525%" y="293" width="0.0808%" height="15" fill="rgb(218,168,27)" fg:x="1022" fg:w="1"/><text x="82.8025%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.5525%" y="277" width="0.0808%" height="15" fill="rgb(232,165,11)" fg:x="1022" fg:w="1"/><text x="82.8025%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="82.5525%" y="261" width="0.0808%" height="15" fill="rgb(253,55,41)" fg:x="1022" fg:w="1"/><text x="82.8025%" y="271.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.21%)</title><rect x="81.5832%" y="405" width="1.2116%" height="15" fill="rgb(233,206,24)" fg:x="1010" fg:w="15"/><text x="81.8332%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="81.7447%" y="389" width="1.0501%" height="15" fill="rgb(220,199,8)" fg:x="1012" fg:w="13"/><text x="81.9947%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.6333%" y="373" width="0.1616%" height="15" fill="rgb(254,65,26)" fg:x="1023" fg:w="2"/><text x="82.8833%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.6333%" y="357" width="0.1616%" height="15" fill="rgb(253,102,23)" fg:x="1023" fg:w="2"/><text x="82.8833%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.6333%" y="341" width="0.1616%" height="15" fill="rgb(231,103,35)" fg:x="1023" fg:w="2"/><text x="82.8833%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.7141%" y="325" width="0.0808%" height="15" fill="rgb(238,26,10)" fg:x="1024" fg:w="1"/><text x="82.9641%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.7141%" y="309" width="0.0808%" height="15" fill="rgb(234,191,34)" fg:x="1024" fg:w="1"/><text x="82.9641%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.7141%" y="293" width="0.0808%" height="15" fill="rgb(206,210,9)" fg:x="1024" fg:w="1"/><text x="82.9641%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="82.7948%" y="357" width="0.1616%" height="15" fill="rgb(219,155,3)" fg:x="1025" fg:w="2"/><text x="83.0448%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.7948%" y="405" width="0.2423%" height="15" fill="rgb(221,62,52)" fg:x="1025" fg:w="3"/><text x="83.0448%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="82.7948%" y="389" width="0.2423%" height="15" fill="rgb(215,197,36)" fg:x="1025" fg:w="3"/><text x="83.0448%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.7948%" y="373" width="0.2423%" height="15" fill="rgb(226,222,6)" fg:x="1025" fg:w="3"/><text x="83.0448%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9564%" y="357" width="0.0808%" height="15" fill="rgb(215,58,28)" fg:x="1027" fg:w="1"/><text x="83.2064%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9564%" y="341" width="0.0808%" height="15" fill="rgb(212,148,2)" fg:x="1027" fg:w="1"/><text x="83.2064%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9564%" y="325" width="0.0808%" height="15" fill="rgb(208,21,42)" fg:x="1027" fg:w="1"/><text x="83.2064%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9564%" y="309" width="0.0808%" height="15" fill="rgb(209,107,26)" fg:x="1027" fg:w="1"/><text x="83.2064%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="83.0372%" y="357" width="0.0808%" height="15" fill="rgb(254,60,47)" fg:x="1028" fg:w="1"/><text x="83.2872%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.0372%" y="341" width="0.0808%" height="15" fill="rgb(207,226,45)" fg:x="1028" fg:w="1"/><text x="83.2872%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0372%" y="325" width="0.0808%" height="15" fill="rgb(223,124,22)" fg:x="1028" fg:w="1"/><text x="83.2872%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="83.0372%" y="389" width="0.1616%" height="15" fill="rgb(240,162,13)" fg:x="1028" fg:w="2"/><text x="83.2872%" y="399.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="83.0372%" y="373" width="0.1616%" height="15" fill="rgb(244,199,31)" fg:x="1028" fg:w="2"/><text x="83.2872%" y="383.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="83.1179%" y="357" width="0.0808%" height="15" fill="rgb(207,92,16)" fg:x="1029" fg:w="1"/><text x="83.3679%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1987%" y="357" width="0.0808%" height="15" fill="rgb(215,31,19)" fg:x="1030" fg:w="1"/><text x="83.4487%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1987%" y="341" width="0.0808%" height="15" fill="rgb(245,118,14)" fg:x="1030" fg:w="1"/><text x="83.4487%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2795%" y="357" width="0.0808%" height="15" fill="rgb(248,12,46)" fg:x="1031" fg:w="1"/><text x="83.5295%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2795%" y="341" width="0.0808%" height="15" fill="rgb(209,119,0)" fg:x="1031" fg:w="1"/><text x="83.5295%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (1 samples, 0.08%)</title><rect x="83.2795%" y="325" width="0.0808%" height="15" fill="rgb(254,51,44)" fg:x="1031" fg:w="1"/><text x="83.5295%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.3603%" y="309" width="0.0808%" height="15" fill="rgb(253,182,35)" fg:x="1032" fg:w="1"/><text x="83.6103%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.3603%" y="293" width="0.0808%" height="15" fill="rgb(205,198,39)" fg:x="1032" fg:w="1"/><text x="83.6103%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.3603%" y="277" width="0.0808%" height="15" fill="rgb(251,175,48)" fg:x="1032" fg:w="1"/><text x="83.6103%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4410%" y="277" width="0.0808%" height="15" fill="rgb(239,38,17)" fg:x="1033" fg:w="1"/><text x="83.6910%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4410%" y="261" width="0.0808%" height="15" fill="rgb(212,101,8)" fg:x="1033" fg:w="1"/><text x="83.6910%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4410%" y="245" width="0.0808%" height="15" fill="rgb(228,35,17)" fg:x="1033" fg:w="1"/><text x="83.6910%" y="255.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.34%)</title><rect x="81.2601%" y="501" width="2.3425%" height="15" fill="rgb(214,95,8)" fg:x="1006" fg:w="29"/><text x="81.5101%" y="511.50">e..</text></g><g><title>engine::session::state::State::close (27 samples, 2.18%)</title><rect x="81.4216%" y="485" width="2.1809%" height="15" fill="rgb(210,176,35)" fg:x="1008" fg:w="27"/><text x="81.6716%" y="495.50">e..</text></g><g><title>engine::session::state::State::flush_entities (27 samples, 2.18%)</title><rect x="81.4216%" y="469" width="2.1809%" height="15" fill="rgb(226,4,3)" fg:x="1008" fg:w="27"/><text x="81.6716%" y="479.50">e..</text></g><g><title>core::iter::adapters::try_process (26 samples, 2.10%)</title><rect x="81.5024%" y="453" width="2.1002%" height="15" fill="rgb(232,133,14)" fg:x="1009" fg:w="26"/><text x="81.7524%" y="463.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 2.10%)</title><rect x="81.5024%" y="437" width="2.1002%" height="15" fill="rgb(250,191,8)" fg:x="1009" fg:w="26"/><text x="81.7524%" y="447.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (26 samples, 2.10%)</title><rect x="81.5024%" y="421" width="2.1002%" height="15" fill="rgb(213,12,45)" fg:x="1009" fg:w="26"/><text x="81.7524%" y="431.50">e..</text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.57%)</title><rect x="83.0372%" y="405" width="0.5654%" height="15" fill="rgb(233,78,26)" fg:x="1028" fg:w="7"/><text x="83.2872%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="83.1987%" y="389" width="0.4039%" height="15" fill="rgb(245,222,11)" fg:x="1030" fg:w="5"/><text x="83.4487%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="83.1987%" y="373" width="0.4039%" height="15" fill="rgb(216,174,12)" fg:x="1030" fg:w="5"/><text x="83.4487%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="83.3603%" y="357" width="0.2423%" height="15" fill="rgb(213,15,9)" fg:x="1032" fg:w="3"/><text x="83.6103%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="83.3603%" y="341" width="0.2423%" height="15" fill="rgb(238,103,32)" fg:x="1032" fg:w="3"/><text x="83.6103%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="83.3603%" y="325" width="0.2423%" height="15" fill="rgb(245,85,15)" fg:x="1032" fg:w="3"/><text x="83.6103%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="83.4410%" y="309" width="0.1616%" height="15" fill="rgb(254,204,5)" fg:x="1033" fg:w="2"/><text x="83.6910%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.4410%" y="293" width="0.1616%" height="15" fill="rgb(231,178,15)" fg:x="1033" fg:w="2"/><text x="83.6910%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5218%" y="277" width="0.0808%" height="15" fill="rgb(248,151,3)" fg:x="1034" fg:w="1"/><text x="83.7718%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.5218%" y="261" width="0.0808%" height="15" fill="rgb(250,139,13)" fg:x="1034" fg:w="1"/><text x="83.7718%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5218%" y="245" width="0.0808%" height="15" fill="rgb(243,107,53)" fg:x="1034" fg:w="1"/><text x="83.7718%" y="255.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.6026%" y="501" width="0.0808%" height="15" fill="rgb(232,81,15)" fg:x="1035" fg:w="1"/><text x="83.8526%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="83.6026%" y="485" width="0.0808%" height="15" fill="rgb(225,187,48)" fg:x="1035" fg:w="1"/><text x="83.8526%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.6026%" y="469" width="0.0808%" height="15" fill="rgb(205,116,12)" fg:x="1035" fg:w="1"/><text x="83.8526%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="83.6026%" y="453" width="0.0808%" height="15" fill="rgb(220,222,31)" fg:x="1035" fg:w="1"/><text x="83.8526%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6026%" y="437" width="0.0808%" height="15" fill="rgb(233,187,49)" fg:x="1035" fg:w="1"/><text x="83.8526%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.6834%" y="421" width="0.1616%" height="15" fill="rgb(211,168,53)" fg:x="1036" fg:w="2"/><text x="83.9334%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.6834%" y="405" width="0.1616%" height="15" fill="rgb(206,160,16)" fg:x="1036" fg:w="2"/><text x="83.9334%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="83.7641%" y="389" width="0.0808%" height="15" fill="rgb(254,164,13)" fg:x="1037" fg:w="1"/><text x="84.0141%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="83.6834%" y="469" width="0.2423%" height="15" fill="rgb(229,45,30)" fg:x="1036" fg:w="3"/><text x="83.9334%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="83.6834%" y="453" width="0.2423%" height="15" fill="rgb(237,32,10)" fg:x="1036" fg:w="3"/><text x="83.9334%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="83.6834%" y="437" width="0.2423%" height="15" fill="rgb(251,20,47)" fg:x="1036" fg:w="3"/><text x="83.9334%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.8449%" y="421" width="0.0808%" height="15" fill="rgb(251,116,12)" fg:x="1038" fg:w="1"/><text x="84.0949%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8449%" y="405" width="0.0808%" height="15" fill="rgb(214,227,27)" fg:x="1038" fg:w="1"/><text x="84.0949%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.8449%" y="389" width="0.0808%" height="15" fill="rgb(248,10,53)" fg:x="1038" fg:w="1"/><text x="84.0949%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8449%" y="373" width="0.0808%" height="15" fill="rgb(221,176,25)" fg:x="1038" fg:w="1"/><text x="84.0949%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.8449%" y="357" width="0.0808%" height="15" fill="rgb(205,70,46)" fg:x="1038" fg:w="1"/><text x="84.0949%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8449%" y="341" width="0.0808%" height="15" fill="rgb(217,45,38)" fg:x="1038" fg:w="1"/><text x="84.0949%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.8449%" y="325" width="0.0808%" height="15" fill="rgb(243,6,54)" fg:x="1038" fg:w="1"/><text x="84.0949%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="83.9257%" y="453" width="0.0808%" height="15" fill="rgb(242,76,23)" fg:x="1039" fg:w="1"/><text x="84.1757%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.9257%" y="437" width="0.0808%" height="15" fill="rgb(239,166,0)" fg:x="1039" fg:w="1"/><text x="84.1757%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.9257%" y="421" width="0.0808%" height="15" fill="rgb(238,174,32)" fg:x="1039" fg:w="1"/><text x="84.1757%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9257%" y="405" width="0.0808%" height="15" fill="rgb(238,124,44)" fg:x="1039" fg:w="1"/><text x="84.1757%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.9257%" y="389" width="0.0808%" height="15" fill="rgb(206,185,9)" fg:x="1039" fg:w="1"/><text x="84.1757%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.9257%" y="373" width="0.0808%" height="15" fill="rgb(215,157,17)" fg:x="1039" fg:w="1"/><text x="84.1757%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="84.0065%" y="453" width="0.1616%" height="15" fill="rgb(251,17,29)" fg:x="1040" fg:w="2"/><text x="84.2565%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.0065%" y="437" width="0.1616%" height="15" fill="rgb(227,113,27)" fg:x="1040" fg:w="2"/><text x="84.2565%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.0065%" y="421" width="0.1616%" height="15" fill="rgb(217,226,24)" fg:x="1040" fg:w="2"/><text x="84.2565%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="84.0065%" y="405" width="0.1616%" height="15" fill="rgb(251,99,38)" fg:x="1040" fg:w="2"/><text x="84.2565%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.0872%" y="389" width="0.0808%" height="15" fill="rgb(231,147,19)" fg:x="1041" fg:w="1"/><text x="84.3372%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.1680%" y="421" width="0.1616%" height="15" fill="rgb(230,86,8)" fg:x="1042" fg:w="2"/><text x="84.4180%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2488%" y="405" width="0.0808%" height="15" fill="rgb(237,159,39)" fg:x="1043" fg:w="1"/><text x="84.4988%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3296%" y="421" width="0.0808%" height="15" fill="rgb(247,179,47)" fg:x="1044" fg:w="1"/><text x="84.5796%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3296%" y="405" width="0.0808%" height="15" fill="rgb(253,152,26)" fg:x="1044" fg:w="1"/><text x="84.5796%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3296%" y="389" width="0.0808%" height="15" fill="rgb(222,211,15)" fg:x="1044" fg:w="1"/><text x="84.5796%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3296%" y="373" width="0.0808%" height="15" fill="rgb(236,193,6)" fg:x="1044" fg:w="1"/><text x="84.5796%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3296%" y="357" width="0.0808%" height="15" fill="rgb(226,206,10)" fg:x="1044" fg:w="1"/><text x="84.5796%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="84.4103%" y="357" width="0.0808%" height="15" fill="rgb(213,125,22)" fg:x="1045" fg:w="1"/><text x="84.6603%" y="367.50"></text></g><g><title>plugins_core::build::Build::save (11 samples, 0.89%)</title><rect x="83.6834%" y="501" width="0.8885%" height="15" fill="rgb(221,66,28)" fg:x="1036" fg:w="11"/><text x="83.9334%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="83.6834%" y="485" width="0.8885%" height="15" fill="rgb(222,84,53)" fg:x="1036" fg:w="11"/><text x="83.9334%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.65%)</title><rect x="83.9257%" y="469" width="0.6462%" height="15" fill="rgb(243,50,15)" fg:x="1039" fg:w="8"/><text x="84.1757%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="84.1680%" y="453" width="0.4039%" height="15" fill="rgb(208,184,23)" fg:x="1042" fg:w="5"/><text x="84.4180%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="84.1680%" y="437" width="0.4039%" height="15" fill="rgb(221,83,2)" fg:x="1042" fg:w="5"/><text x="84.4180%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="84.4103%" y="421" width="0.1616%" height="15" fill="rgb(236,53,24)" fg:x="1045" fg:w="2"/><text x="84.6603%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="84.4103%" y="405" width="0.1616%" height="15" fill="rgb(244,171,29)" fg:x="1045" fg:w="2"/><text x="84.6603%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="84.4103%" y="389" width="0.1616%" height="15" fill="rgb(205,19,11)" fg:x="1045" fg:w="2"/><text x="84.6603%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.4103%" y="373" width="0.1616%" height="15" fill="rgb(207,108,29)" fg:x="1045" fg:w="2"/><text x="84.6603%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.4911%" y="357" width="0.0808%" height="15" fill="rgb(236,215,43)" fg:x="1046" fg:w="1"/><text x="84.7411%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4911%" y="341" width="0.0808%" height="15" fill="rgb(213,58,35)" fg:x="1046" fg:w="1"/><text x="84.7411%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.4911%" y="325" width="0.0808%" height="15" fill="rgb(220,211,46)" fg:x="1046" fg:w="1"/><text x="84.7411%" y="335.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.08%)</title><rect x="84.5719%" y="501" width="0.0808%" height="15" fill="rgb(212,134,16)" fg:x="1047" fg:w="1"/><text x="84.8219%" y="511.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="84.5719%" y="485" width="0.0808%" height="15" fill="rgb(232,90,44)" fg:x="1047" fg:w="1"/><text x="84.8219%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.5719%" y="469" width="0.0808%" height="15" fill="rgb(212,18,36)" fg:x="1047" fg:w="1"/><text x="84.8219%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="84.5719%" y="453" width="0.0808%" height="15" fill="rgb(206,112,24)" fg:x="1047" fg:w="1"/><text x="84.8219%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5719%" y="437" width="0.0808%" height="15" fill="rgb(238,223,40)" fg:x="1047" fg:w="1"/><text x="84.8219%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="84.6527%" y="469" width="0.0808%" height="15" fill="rgb(226,169,20)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.6527%" y="453" width="0.0808%" height="15" fill="rgb(241,64,52)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.6527%" y="437" width="0.0808%" height="15" fill="rgb(228,120,25)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.6527%" y="421" width="0.0808%" height="15" fill="rgb(234,108,19)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="84.6527%" y="405" width="0.0808%" height="15" fill="rgb(236,133,29)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.6527%" y="389" width="0.0808%" height="15" fill="rgb(246,174,53)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6527%" y="373" width="0.0808%" height="15" fill="rgb(210,105,35)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.6527%" y="357" width="0.0808%" height="15" fill="rgb(225,27,26)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6527%" y="341" width="0.0808%" height="15" fill="rgb(233,2,39)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.6527%" y="325" width="0.0808%" height="15" fill="rgb(219,164,26)" fg:x="1048" fg:w="1"/><text x="84.9027%" y="335.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.7334%" y="469" width="0.0808%" height="15" fill="rgb(236,211,5)" fg:x="1049" fg:w="1"/><text x="84.9834%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7334%" y="453" width="0.0808%" height="15" fill="rgb(244,227,23)" fg:x="1049" fg:w="1"/><text x="84.9834%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.7334%" y="437" width="0.0808%" height="15" fill="rgb(230,184,8)" fg:x="1049" fg:w="1"/><text x="84.9834%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.7334%" y="421" width="0.0808%" height="15" fill="rgb(217,125,48)" fg:x="1049" fg:w="1"/><text x="84.9834%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="84.7334%" y="405" width="0.0808%" height="15" fill="rgb(223,192,47)" fg:x="1049" fg:w="1"/><text x="84.9834%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="84.8142%" y="469" width="0.0808%" height="15" fill="rgb(226,119,10)" fg:x="1050" fg:w="1"/><text x="85.0642%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="84.8142%" y="453" width="0.0808%" height="15" fill="rgb(221,49,29)" fg:x="1050" fg:w="1"/><text x="85.0642%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8142%" y="437" width="0.0808%" height="15" fill="rgb(217,205,19)" fg:x="1050" fg:w="1"/><text x="85.0642%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8142%" y="421" width="0.0808%" height="15" fill="rgb(242,104,7)" fg:x="1050" fg:w="1"/><text x="85.0642%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8142%" y="405" width="0.0808%" height="15" fill="rgb(209,154,48)" fg:x="1050" fg:w="1"/><text x="85.0642%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8142%" y="389" width="0.0808%" height="15" fill="rgb(219,213,46)" fg:x="1050" fg:w="1"/><text x="85.0642%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8142%" y="373" width="0.0808%" height="15" fill="rgb(229,105,38)" fg:x="1050" fg:w="1"/><text x="85.0642%" y="383.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (4 samples, 0.32%)</title><rect x="84.6527%" y="501" width="0.3231%" height="15" fill="rgb(205,151,5)" fg:x="1048" fg:w="4"/><text x="84.9027%" y="511.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="84.6527%" y="485" width="0.3231%" height="15" fill="rgb(248,115,40)" fg:x="1048" fg:w="4"/><text x="84.9027%" y="495.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="84.8950%" y="469" width="0.0808%" height="15" fill="rgb(206,179,2)" fg:x="1051" fg:w="1"/><text x="85.1450%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.8950%" y="453" width="0.0808%" height="15" fill="rgb(230,103,24)" fg:x="1051" fg:w="1"/><text x="85.1450%" y="463.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8950%" y="437" width="0.0808%" height="15" fill="rgb(218,152,4)" fg:x="1051" fg:w="1"/><text x="85.1450%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.8950%" y="421" width="0.0808%" height="15" fill="rgb(236,161,54)" fg:x="1051" fg:w="1"/><text x="85.1450%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.8950%" y="405" width="0.0808%" height="15" fill="rgb(226,65,17)" fg:x="1051" fg:w="1"/><text x="85.1450%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.8950%" y="389" width="0.0808%" height="15" fill="rgb(221,134,44)" fg:x="1051" fg:w="1"/><text x="85.1450%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.9758%" y="485" width="0.0808%" height="15" fill="rgb(251,129,4)" fg:x="1052" fg:w="1"/><text x="85.2258%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.9758%" y="469" width="0.0808%" height="15" fill="rgb(244,32,34)" fg:x="1052" fg:w="1"/><text x="85.2258%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.9758%" y="453" width="0.0808%" height="15" fill="rgb(251,224,37)" fg:x="1052" fg:w="1"/><text x="85.2258%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.9758%" y="437" width="0.0808%" height="15" fill="rgb(248,117,31)" fg:x="1052" fg:w="1"/><text x="85.2258%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="85.0565%" y="485" width="0.0808%" height="15" fill="rgb(222,208,37)" fg:x="1053" fg:w="1"/><text x="85.3065%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.0565%" y="469" width="0.0808%" height="15" fill="rgb(234,211,25)" fg:x="1053" fg:w="1"/><text x="85.3065%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="85.0565%" y="453" width="0.0808%" height="15" fill="rgb(211,72,6)" fg:x="1053" fg:w="1"/><text x="85.3065%" y="463.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="85.1373%" y="453" width="0.1616%" height="15" fill="rgb(249,198,38)" fg:x="1054" fg:w="2"/><text x="85.3873%" y="463.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="85.1373%" y="437" width="0.1616%" height="15" fill="rgb(221,86,51)" fg:x="1054" fg:w="2"/><text x="85.3873%" y="447.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="85.1373%" y="421" width="0.1616%" height="15" fill="rgb(226,178,43)" fg:x="1054" fg:w="2"/><text x="85.3873%" y="431.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="85.1373%" y="405" width="0.1616%" height="15" fill="rgb(215,145,7)" fg:x="1054" fg:w="2"/><text x="85.3873%" y="415.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="85.1373%" y="389" width="0.1616%" height="15" fill="rgb(250,202,36)" fg:x="1054" fg:w="2"/><text x="85.3873%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="85.1373%" y="373" width="0.1616%" height="15" fill="rgb(215,86,13)" fg:x="1054" fg:w="2"/><text x="85.3873%" y="383.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="85.2181%" y="357" width="0.0808%" height="15" fill="rgb(221,134,12)" fg:x="1055" fg:w="1"/><text x="85.4681%" y="367.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="85.2181%" y="341" width="0.0808%" height="15" fill="rgb(213,82,10)" fg:x="1055" fg:w="1"/><text x="85.4681%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.2989%" y="421" width="0.0808%" height="15" fill="rgb(214,142,0)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="85.2989%" y="405" width="0.0808%" height="15" fill="rgb(205,145,9)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="85.2989%" y="389" width="0.0808%" height="15" fill="rgb(244,214,8)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2989%" y="373" width="0.0808%" height="15" fill="rgb(224,72,51)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2989%" y="357" width="0.0808%" height="15" fill="rgb(233,137,37)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.2989%" y="341" width="0.0808%" height="15" fill="rgb(208,71,28)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.2989%" y="325" width="0.0808%" height="15" fill="rgb(226,31,7)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.2989%" y="309" width="0.0808%" height="15" fill="rgb(229,62,18)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2989%" y="293" width="0.0808%" height="15" fill="rgb(226,74,28)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2989%" y="277" width="0.0808%" height="15" fill="rgb(214,170,18)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.2989%" y="261" width="0.0808%" height="15" fill="rgb(227,229,35)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.2989%" y="245" width="0.0808%" height="15" fill="rgb(225,181,39)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.2989%" y="229" width="0.0808%" height="15" fill="rgb(253,124,44)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.2989%" y="213" width="0.0808%" height="15" fill="rgb(220,75,18)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2989%" y="197" width="0.0808%" height="15" fill="rgb(239,175,43)" fg:x="1056" fg:w="1"/><text x="85.5489%" y="207.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.3796%" y="357" width="0.0808%" height="15" fill="rgb(228,112,50)" fg:x="1057" fg:w="1"/><text x="85.6296%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.3796%" y="341" width="0.0808%" height="15" fill="rgb(232,105,36)" fg:x="1057" fg:w="1"/><text x="85.6296%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.3796%" y="325" width="0.0808%" height="15" fill="rgb(227,137,47)" fg:x="1057" fg:w="1"/><text x="85.6296%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.3796%" y="309" width="0.0808%" height="15" fill="rgb(217,51,9)" fg:x="1057" fg:w="1"/><text x="85.6296%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.3796%" y="293" width="0.0808%" height="15" fill="rgb(245,117,0)" fg:x="1057" fg:w="1"/><text x="85.6296%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.6220%" y="341" width="0.0808%" height="15" fill="rgb(252,52,30)" fg:x="1060" fg:w="1"/><text x="85.8720%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.6220%" y="325" width="0.0808%" height="15" fill="rgb(227,85,33)" fg:x="1060" fg:w="1"/><text x="85.8720%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.6220%" y="309" width="0.0808%" height="15" fill="rgb(220,157,20)" fg:x="1060" fg:w="1"/><text x="85.8720%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.7027%" y="341" width="0.0808%" height="15" fill="rgb(254,14,34)" fg:x="1061" fg:w="1"/><text x="85.9527%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.7027%" y="325" width="0.0808%" height="15" fill="rgb(216,103,41)" fg:x="1061" fg:w="1"/><text x="85.9527%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.7027%" y="309" width="0.0808%" height="15" fill="rgb(245,221,9)" fg:x="1061" fg:w="1"/><text x="85.9527%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.7027%" y="293" width="0.0808%" height="15" fill="rgb(254,136,47)" fg:x="1061" fg:w="1"/><text x="85.9527%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.0258%" y="325" width="0.0808%" height="15" fill="rgb(235,71,46)" fg:x="1065" fg:w="1"/><text x="86.2758%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.1066%" y="325" width="0.0808%" height="15" fill="rgb(242,154,29)" fg:x="1066" fg:w="1"/><text x="86.3566%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1066%" y="309" width="0.0808%" height="15" fill="rgb(210,65,31)" fg:x="1066" fg:w="1"/><text x="86.3566%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1066%" y="293" width="0.0808%" height="15" fill="rgb(244,9,50)" fg:x="1066" fg:w="1"/><text x="86.3566%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.1066%" y="277" width="0.0808%" height="15" fill="rgb(215,141,38)" fg:x="1066" fg:w="1"/><text x="86.3566%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.1066%" y="261" width="0.0808%" height="15" fill="rgb(241,129,6)" fg:x="1066" fg:w="1"/><text x="86.3566%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.1066%" y="245" width="0.0808%" height="15" fill="rgb(253,169,4)" fg:x="1066" fg:w="1"/><text x="86.3566%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.1066%" y="229" width="0.0808%" height="15" fill="rgb(237,82,36)" fg:x="1066" fg:w="1"/><text x="86.3566%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.1874%" y="309" width="0.0808%" height="15" fill="rgb(209,171,11)" fg:x="1067" fg:w="1"/><text x="86.4374%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.2682%" y="293" width="0.0808%" height="15" fill="rgb(242,19,22)" fg:x="1068" fg:w="1"/><text x="86.5182%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.2682%" y="277" width="0.0808%" height="15" fill="rgb(251,122,24)" fg:x="1068" fg:w="1"/><text x="86.5182%" y="287.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.2682%" y="261" width="0.0808%" height="15" fill="rgb(226,166,42)" fg:x="1068" fg:w="1"/><text x="86.5182%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="86.1874%" y="325" width="0.2423%" height="15" fill="rgb(244,101,48)" fg:x="1067" fg:w="3"/><text x="86.4374%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.2682%" y="309" width="0.1616%" height="15" fill="rgb(227,125,1)" fg:x="1068" fg:w="2"/><text x="86.5182%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3489%" y="293" width="0.0808%" height="15" fill="rgb(206,79,43)" fg:x="1069" fg:w="1"/><text x="86.5989%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.3489%" y="277" width="0.0808%" height="15" fill="rgb(241,109,41)" fg:x="1069" fg:w="1"/><text x="86.5989%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.3489%" y="261" width="0.0808%" height="15" fill="rgb(219,73,4)" fg:x="1069" fg:w="1"/><text x="86.5989%" y="271.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.3489%" y="245" width="0.0808%" height="15" fill="rgb(239,25,41)" fg:x="1069" fg:w="1"/><text x="86.5989%" y="255.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.13%)</title><rect x="85.3796%" y="373" width="1.1309%" height="15" fill="rgb(208,88,46)" fg:x="1057" fg:w="14"/><text x="85.6296%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="85.4604%" y="357" width="1.0501%" height="15" fill="rgb(239,184,9)" fg:x="1058" fg:w="13"/><text x="85.7104%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="85.7835%" y="341" width="0.7270%" height="15" fill="rgb(223,114,13)" fg:x="1062" fg:w="9"/><text x="86.0335%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.4297%" y="325" width="0.0808%" height="15" fill="rgb(214,28,42)" fg:x="1070" fg:w="1"/><text x="86.6797%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.4297%" y="309" width="0.0808%" height="15" fill="rgb(252,32,44)" fg:x="1070" fg:w="1"/><text x="86.6797%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="86.4297%" y="293" width="0.0808%" height="15" fill="rgb(231,159,4)" fg:x="1070" fg:w="1"/><text x="86.6797%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.5105%" y="325" width="0.0808%" height="15" fill="rgb(210,35,26)" fg:x="1071" fg:w="1"/><text x="86.7605%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5105%" y="309" width="0.0808%" height="15" fill="rgb(208,190,37)" fg:x="1071" fg:w="1"/><text x="86.7605%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5913%" y="293" width="0.0808%" height="15" fill="rgb(226,148,22)" fg:x="1072" fg:w="1"/><text x="86.8413%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="86.6721%" y="293" width="0.0808%" height="15" fill="rgb(242,153,24)" fg:x="1073" fg:w="1"/><text x="86.9221%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.6721%" y="277" width="0.0808%" height="15" fill="rgb(213,133,7)" fg:x="1073" fg:w="1"/><text x="86.9221%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6721%" y="261" width="0.0808%" height="15" fill="rgb(248,206,18)" fg:x="1073" fg:w="1"/><text x="86.9221%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7528%" y="277" width="0.0808%" height="15" fill="rgb(233,157,4)" fg:x="1074" fg:w="1"/><text x="87.0028%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="86.5105%" y="373" width="0.4039%" height="15" fill="rgb(249,179,32)" fg:x="1071" fg:w="5"/><text x="86.7605%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="86.5105%" y="357" width="0.4039%" height="15" fill="rgb(248,69,35)" fg:x="1071" fg:w="5"/><text x="86.7605%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="86.5105%" y="341" width="0.4039%" height="15" fill="rgb(249,158,38)" fg:x="1071" fg:w="5"/><text x="86.7605%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="86.5913%" y="325" width="0.3231%" height="15" fill="rgb(223,18,43)" fg:x="1072" fg:w="4"/><text x="86.8413%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="86.5913%" y="309" width="0.3231%" height="15" fill="rgb(238,42,45)" fg:x="1072" fg:w="4"/><text x="86.8413%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.7528%" y="293" width="0.1616%" height="15" fill="rgb(219,65,47)" fg:x="1074" fg:w="2"/><text x="87.0028%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="86.8336%" y="277" width="0.0808%" height="15" fill="rgb(248,153,12)" fg:x="1075" fg:w="1"/><text x="87.0836%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.9144%" y="341" width="0.0808%" height="15" fill="rgb(240,118,4)" fg:x="1076" fg:w="1"/><text x="87.1644%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="86.9144%" y="357" width="0.1616%" height="15" fill="rgb(250,96,34)" fg:x="1076" fg:w="2"/><text x="87.1644%" y="367.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="86.9952%" y="341" width="0.0808%" height="15" fill="rgb(221,15,4)" fg:x="1077" fg:w="1"/><text x="87.2452%" y="351.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="86.9952%" y="325" width="0.0808%" height="15" fill="rgb(217,149,33)" fg:x="1077" fg:w="1"/><text x="87.2452%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0759%" y="325" width="0.0808%" height="15" fill="rgb(213,58,29)" fg:x="1078" fg:w="1"/><text x="87.3259%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1567%" y="325" width="0.0808%" height="15" fill="rgb(236,218,9)" fg:x="1079" fg:w="1"/><text x="87.4067%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="87.2375%" y="277" width="0.2423%" height="15" fill="rgb(248,40,19)" fg:x="1080" fg:w="3"/><text x="87.4875%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="87.2375%" y="261" width="0.2423%" height="15" fill="rgb(212,17,6)" fg:x="1080" fg:w="3"/><text x="87.4875%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="87.3183%" y="245" width="0.1616%" height="15" fill="rgb(206,212,20)" fg:x="1081" fg:w="2"/><text x="87.5683%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="87.3183%" y="229" width="0.1616%" height="15" fill="rgb(229,80,37)" fg:x="1081" fg:w="2"/><text x="87.5683%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.3990%" y="213" width="0.0808%" height="15" fill="rgb(253,8,37)" fg:x="1082" fg:w="1"/><text x="87.6490%" y="223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3990%" y="197" width="0.0808%" height="15" fill="rgb(215,16,43)" fg:x="1082" fg:w="1"/><text x="87.6490%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.3990%" y="181" width="0.0808%" height="15" fill="rgb(236,219,16)" fg:x="1082" fg:w="1"/><text x="87.6490%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4798%" y="245" width="0.0808%" height="15" fill="rgb(251,0,3)" fg:x="1083" fg:w="1"/><text x="87.7298%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4798%" y="229" width="0.0808%" height="15" fill="rgb(207,133,37)" fg:x="1083" fg:w="1"/><text x="87.7298%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4798%" y="213" width="0.0808%" height="15" fill="rgb(250,143,20)" fg:x="1083" fg:w="1"/><text x="87.7298%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="87.2375%" y="293" width="0.4847%" height="15" fill="rgb(242,19,50)" fg:x="1080" fg:w="6"/><text x="87.4875%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="87.4798%" y="277" width="0.2423%" height="15" fill="rgb(206,124,43)" fg:x="1083" fg:w="3"/><text x="87.7298%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="87.4798%" y="261" width="0.2423%" height="15" fill="rgb(229,4,38)" fg:x="1083" fg:w="3"/><text x="87.7298%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="87.5606%" y="245" width="0.1616%" height="15" fill="rgb(247,220,45)" fg:x="1084" fg:w="2"/><text x="87.8106%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="87.5606%" y="229" width="0.1616%" height="15" fill="rgb(247,195,0)" fg:x="1084" fg:w="2"/><text x="87.8106%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.5606%" y="213" width="0.1616%" height="15" fill="rgb(252,12,19)" fg:x="1084" fg:w="2"/><text x="87.8106%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6414%" y="197" width="0.0808%" height="15" fill="rgb(222,49,50)" fg:x="1085" fg:w="1"/><text x="87.8914%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6414%" y="181" width="0.0808%" height="15" fill="rgb(209,157,28)" fg:x="1085" fg:w="1"/><text x="87.8914%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.57%)</title><rect x="87.2375%" y="309" width="0.5654%" height="15" fill="rgb(238,174,24)" fg:x="1080" fg:w="7"/><text x="87.4875%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="87.7221%" y="293" width="0.0808%" height="15" fill="rgb(224,17,28)" fg:x="1086" fg:w="1"/><text x="87.9721%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7221%" y="277" width="0.0808%" height="15" fill="rgb(249,7,29)" fg:x="1086" fg:w="1"/><text x="87.9721%" y="287.50"></text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.97%)</title><rect x="86.9144%" y="373" width="0.9693%" height="15" fill="rgb(243,178,4)" fg:x="1076" fg:w="12"/><text x="87.1644%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.81%)</title><rect x="87.0759%" y="357" width="0.8078%" height="15" fill="rgb(246,138,35)" fg:x="1078" fg:w="10"/><text x="87.3259%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.81%)</title><rect x="87.0759%" y="341" width="0.8078%" height="15" fill="rgb(251,85,18)" fg:x="1078" fg:w="10"/><text x="87.3259%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="87.2375%" y="325" width="0.6462%" height="15" fill="rgb(254,55,9)" fg:x="1080" fg:w="8"/><text x="87.4875%" y="335.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="87.8029%" y="309" width="0.0808%" height="15" fill="rgb(248,4,50)" fg:x="1087" fg:w="1"/><text x="88.0529%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.8029%" y="293" width="0.0808%" height="15" fill="rgb(215,208,14)" fg:x="1087" fg:w="1"/><text x="88.0529%" y="303.50"></text></g><g><title>engine::session::Session::flush (35 samples, 2.83%)</title><rect x="85.1373%" y="485" width="2.8271%" height="15" fill="rgb(218,37,18)" fg:x="1054" fg:w="35"/><text x="85.3873%" y="495.50">en..</text></g><g><title>engine::session::Session::save_changes (35 samples, 2.83%)</title><rect x="85.1373%" y="469" width="2.8271%" height="15" fill="rgb(206,104,13)" fg:x="1054" fg:w="35"/><text x="85.3873%" y="479.50">en..</text></g><g><title>engine::session::state::State::close (33 samples, 2.67%)</title><rect x="85.2989%" y="453" width="2.6656%" height="15" fill="rgb(248,94,22)" fg:x="1056" fg:w="33"/><text x="85.5489%" y="463.50">en..</text></g><g><title>engine::session::state::State::flush_entities (33 samples, 2.67%)</title><rect x="85.2989%" y="437" width="2.6656%" height="15" fill="rgb(235,42,46)" fg:x="1056" fg:w="33"/><text x="85.5489%" y="447.50">en..</text></g><g><title>core::iter::adapters::try_process (32 samples, 2.58%)</title><rect x="85.3796%" y="421" width="2.5848%" height="15" fill="rgb(220,228,48)" fg:x="1057" fg:w="32"/><text x="85.6296%" y="431.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 2.58%)</title><rect x="85.3796%" y="405" width="2.5848%" height="15" fill="rgb(216,58,12)" fg:x="1057" fg:w="32"/><text x="85.6296%" y="415.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (32 samples, 2.58%)</title><rect x="85.3796%" y="389" width="2.5848%" height="15" fill="rgb(223,97,52)" fg:x="1057" fg:w="32"/><text x="85.6296%" y="399.50">en..</text></g><g><title>kernel::perms::find_acls (1 samples, 0.08%)</title><rect x="87.8837%" y="373" width="0.0808%" height="15" fill="rgb(208,159,17)" fg:x="1088" fg:w="1"/><text x="88.1337%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="87.9645%" y="453" width="0.0808%" height="15" fill="rgb(215,172,9)" fg:x="1089" fg:w="1"/><text x="88.2145%" y="463.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="87.9645%" y="437" width="0.0808%" height="15" fill="rgb(252,175,30)" fg:x="1089" fg:w="1"/><text x="88.2145%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.9645%" y="421" width="0.0808%" height="15" fill="rgb(209,159,10)" fg:x="1089" fg:w="1"/><text x="88.2145%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9645%" y="405" width="0.0808%" height="15" fill="rgb(229,73,51)" fg:x="1089" fg:w="1"/><text x="88.2145%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.9645%" y="389" width="0.0808%" height="15" fill="rgb(208,212,43)" fg:x="1089" fg:w="1"/><text x="88.2145%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.0452%" y="437" width="0.0808%" height="15" fill="rgb(254,123,53)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.0452%" y="421" width="0.0808%" height="15" fill="rgb(254,128,49)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.0452%" y="405" width="0.0808%" height="15" fill="rgb(246,16,16)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="88.0452%" y="389" width="0.0808%" height="15" fill="rgb(209,200,1)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.0452%" y="373" width="0.0808%" height="15" fill="rgb(235,9,3)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0452%" y="357" width="0.0808%" height="15" fill="rgb(233,121,54)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.0452%" y="341" width="0.0808%" height="15" fill="rgb(236,80,25)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0452%" y="325" width="0.0808%" height="15" fill="rgb(220,44,24)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0452%" y="309" width="0.0808%" height="15" fill="rgb(236,225,16)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0452%" y="293" width="0.0808%" height="15" fill="rgb(237,140,0)" fg:x="1090" fg:w="1"/><text x="88.2952%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2068%" y="373" width="0.0808%" height="15" fill="rgb(243,225,53)" fg:x="1092" fg:w="1"/><text x="88.4568%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="88.1260%" y="405" width="0.2423%" height="15" fill="rgb(240,140,30)" fg:x="1091" fg:w="3"/><text x="88.3760%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="88.1260%" y="389" width="0.2423%" height="15" fill="rgb(217,51,16)" fg:x="1091" fg:w="3"/><text x="88.3760%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2876%" y="373" width="0.0808%" height="15" fill="rgb(245,75,50)" fg:x="1093" fg:w="1"/><text x="88.5376%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2876%" y="357" width="0.0808%" height="15" fill="rgb(208,174,22)" fg:x="1093" fg:w="1"/><text x="88.5376%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.2876%" y="341" width="0.0808%" height="15" fill="rgb(219,98,50)" fg:x="1093" fg:w="1"/><text x="88.5376%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="87.9645%" y="469" width="0.4847%" height="15" fill="rgb(243,138,3)" fg:x="1089" fg:w="6"/><text x="88.2145%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="88.0452%" y="453" width="0.4039%" height="15" fill="rgb(243,132,26)" fg:x="1090" fg:w="5"/><text x="88.2952%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="88.1260%" y="437" width="0.3231%" height="15" fill="rgb(250,201,8)" fg:x="1091" fg:w="4"/><text x="88.3760%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="88.1260%" y="421" width="0.3231%" height="15" fill="rgb(213,91,26)" fg:x="1091" fg:w="4"/><text x="88.3760%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.3683%" y="405" width="0.0808%" height="15" fill="rgb(229,117,1)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="88.3683%" y="389" width="0.0808%" height="15" fill="rgb(229,24,6)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="88.3683%" y="373" width="0.0808%" height="15" fill="rgb(206,69,11)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3683%" y="357" width="0.0808%" height="15" fill="rgb(234,111,34)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="88.3683%" y="341" width="0.0808%" height="15" fill="rgb(213,187,51)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3683%" y="325" width="0.0808%" height="15" fill="rgb(207,45,11)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="88.3683%" y="309" width="0.0808%" height="15" fill="rgb(225,151,47)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3683%" y="293" width="0.0808%" height="15" fill="rgb(211,226,5)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3683%" y="277" width="0.0808%" height="15" fill="rgb(214,83,52)" fg:x="1094" fg:w="1"/><text x="88.6183%" y="287.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.65%)</title><rect x="87.9645%" y="485" width="0.6462%" height="15" fill="rgb(229,49,53)" fg:x="1089" fg:w="8"/><text x="88.2145%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.4491%" y="469" width="0.1616%" height="15" fill="rgb(246,8,28)" fg:x="1095" fg:w="2"/><text x="88.6991%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.5299%" y="453" width="0.0808%" height="15" fill="rgb(207,28,41)" fg:x="1096" fg:w="1"/><text x="88.7799%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="88.5299%" y="437" width="0.0808%" height="15" fill="rgb(254,22,25)" fg:x="1096" fg:w="1"/><text x="88.7799%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.5299%" y="421" width="0.0808%" height="15" fill="rgb(209,120,42)" fg:x="1096" fg:w="1"/><text x="88.7799%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6107%" y="373" width="0.0808%" height="15" fill="rgb(216,194,18)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6107%" y="357" width="0.0808%" height="15" fill="rgb(213,70,17)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6107%" y="341" width="0.0808%" height="15" fill="rgb(228,66,19)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6107%" y="325" width="0.0808%" height="15" fill="rgb(236,221,54)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6107%" y="309" width="0.0808%" height="15" fill="rgb(207,175,15)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.6107%" y="293" width="0.0808%" height="15" fill="rgb(234,76,8)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.6107%" y="277" width="0.0808%" height="15" fill="rgb(243,106,0)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.6107%" y="261" width="0.0808%" height="15" fill="rgb(208,48,19)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6107%" y="245" width="0.0808%" height="15" fill="rgb(251,50,29)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6107%" y="229" width="0.0808%" height="15" fill="rgb(222,31,49)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.6107%" y="213" width="0.0808%" height="15" fill="rgb(232,33,18)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.6107%" y="197" width="0.0808%" height="15" fill="rgb(209,1,44)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.6107%" y="181" width="0.0808%" height="15" fill="rgb(211,7,1)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.6107%" y="165" width="0.0808%" height="15" fill="rgb(224,111,27)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6107%" y="149" width="0.0808%" height="15" fill="rgb(252,195,39)" fg:x="1097" fg:w="1"/><text x="88.8607%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.6107%" y="421" width="0.1616%" height="15" fill="rgb(237,198,5)" fg:x="1097" fg:w="2"/><text x="88.8607%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.6107%" y="405" width="0.1616%" height="15" fill="rgb(232,148,1)" fg:x="1097" fg:w="2"/><text x="88.8607%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="88.6107%" y="389" width="0.1616%" height="15" fill="rgb(249,41,3)" fg:x="1097" fg:w="2"/><text x="88.8607%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.6914%" y="373" width="0.0808%" height="15" fill="rgb(215,14,33)" fg:x="1098" fg:w="1"/><text x="88.9414%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6914%" y="357" width="0.0808%" height="15" fill="rgb(209,146,24)" fg:x="1098" fg:w="1"/><text x="88.9414%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.6914%" y="341" width="0.0808%" height="15" fill="rgb(219,51,47)" fg:x="1098" fg:w="1"/><text x="88.9414%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6914%" y="325" width="0.0808%" height="15" fill="rgb(234,217,40)" fg:x="1098" fg:w="1"/><text x="88.9414%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.6914%" y="309" width="0.0808%" height="15" fill="rgb(228,34,26)" fg:x="1098" fg:w="1"/><text x="88.9414%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6914%" y="293" width="0.0808%" height="15" fill="rgb(224,50,29)" fg:x="1098" fg:w="1"/><text x="88.9414%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7722%" y="405" width="0.0808%" height="15" fill="rgb(205,79,51)" fg:x="1099" fg:w="1"/><text x="89.0222%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="88.6107%" y="453" width="0.3231%" height="15" fill="rgb(218,136,28)" fg:x="1097" fg:w="4"/><text x="88.8607%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="88.6107%" y="437" width="0.3231%" height="15" fill="rgb(220,150,10)" fg:x="1097" fg:w="4"/><text x="88.8607%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.7722%" y="421" width="0.1616%" height="15" fill="rgb(242,158,47)" fg:x="1099" fg:w="2"/><text x="89.0222%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.8530%" y="405" width="0.0808%" height="15" fill="rgb(209,68,0)" fg:x="1100" fg:w="1"/><text x="89.1030%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="88.8530%" y="389" width="0.0808%" height="15" fill="rgb(208,13,41)" fg:x="1100" fg:w="1"/><text x="89.1030%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.8530%" y="373" width="0.0808%" height="15" fill="rgb(226,201,7)" fg:x="1100" fg:w="1"/><text x="89.1030%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8530%" y="357" width="0.0808%" height="15" fill="rgb(236,103,26)" fg:x="1100" fg:w="1"/><text x="89.1030%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.8530%" y="341" width="0.0808%" height="15" fill="rgb(243,162,8)" fg:x="1100" fg:w="1"/><text x="89.1030%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.8530%" y="325" width="0.0808%" height="15" fill="rgb(237,225,11)" fg:x="1100" fg:w="1"/><text x="89.1030%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.8530%" y="309" width="0.0808%" height="15" fill="rgb(247,186,32)" fg:x="1100" fg:w="1"/><text x="89.1030%" y="319.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="88.9338%" y="437" width="0.1616%" height="15" fill="rgb(215,26,28)" fg:x="1101" fg:w="2"/><text x="89.1838%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.9338%" y="421" width="0.1616%" height="15" fill="rgb(208,121,6)" fg:x="1101" fg:w="2"/><text x="89.1838%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.0145%" y="405" width="0.0808%" height="15" fill="rgb(225,91,3)" fg:x="1102" fg:w="1"/><text x="89.2645%" y="415.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="89.0145%" y="389" width="0.0808%" height="15" fill="rgb(246,119,36)" fg:x="1102" fg:w="1"/><text x="89.2645%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.0145%" y="373" width="0.0808%" height="15" fill="rgb(254,173,2)" fg:x="1102" fg:w="1"/><text x="89.2645%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0145%" y="357" width="0.0808%" height="15" fill="rgb(209,87,54)" fg:x="1102" fg:w="1"/><text x="89.2645%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0145%" y="341" width="0.0808%" height="15" fill="rgb(223,216,20)" fg:x="1102" fg:w="1"/><text x="89.2645%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.0145%" y="325" width="0.0808%" height="15" fill="rgb(220,31,8)" fg:x="1102" fg:w="1"/><text x="89.2645%" y="335.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (7 samples, 0.57%)</title><rect x="88.6107%" y="485" width="0.5654%" height="15" fill="rgb(220,185,15)" fg:x="1097" fg:w="7"/><text x="88.8607%" y="495.50"></text></g><g><title>plugins_core::tools::set_occupying (7 samples, 0.57%)</title><rect x="88.6107%" y="469" width="0.5654%" height="15" fill="rgb(247,190,50)" fg:x="1097" fg:w="7"/><text x="88.8607%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="88.9338%" y="453" width="0.2423%" height="15" fill="rgb(239,173,47)" fg:x="1101" fg:w="3"/><text x="89.1838%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="89.0953%" y="437" width="0.0808%" height="15" fill="rgb(218,190,42)" fg:x="1103" fg:w="1"/><text x="89.3453%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.0953%" y="421" width="0.0808%" height="15" fill="rgb(251,207,16)" fg:x="1103" fg:w="1"/><text x="89.3453%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="89.0953%" y="405" width="0.0808%" height="15" fill="rgb(222,199,47)" fg:x="1103" fg:w="1"/><text x="89.3453%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.0953%" y="389" width="0.0808%" height="15" fill="rgb(245,190,7)" fg:x="1103" fg:w="1"/><text x="89.3453%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.1761%" y="421" width="0.0808%" height="15" fill="rgb(239,85,38)" fg:x="1104" fg:w="1"/><text x="89.4261%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.1761%" y="405" width="0.0808%" height="15" fill="rgb(229,69,51)" fg:x="1104" fg:w="1"/><text x="89.4261%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="89.1761%" y="469" width="0.1616%" height="15" fill="rgb(231,104,51)" fg:x="1104" fg:w="2"/><text x="89.4261%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.1761%" y="453" width="0.1616%" height="15" fill="rgb(235,49,4)" fg:x="1104" fg:w="2"/><text x="89.4261%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.1761%" y="437" width="0.1616%" height="15" fill="rgb(246,166,20)" fg:x="1104" fg:w="2"/><text x="89.4261%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.2569%" y="421" width="0.0808%" height="15" fill="rgb(230,119,37)" fg:x="1105" fg:w="1"/><text x="89.5069%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.2569%" y="405" width="0.0808%" height="15" fill="rgb(234,77,34)" fg:x="1105" fg:w="1"/><text x="89.5069%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.2569%" y="389" width="0.0808%" height="15" fill="rgb(211,222,33)" fg:x="1105" fg:w="1"/><text x="89.5069%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="89.3376%" y="469" width="0.0808%" height="15" fill="rgb(226,45,42)" fg:x="1106" fg:w="1"/><text x="89.5876%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.3376%" y="453" width="0.0808%" height="15" fill="rgb(215,174,28)" fg:x="1106" fg:w="1"/><text x="89.5876%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3376%" y="437" width="0.0808%" height="15" fill="rgb(254,173,49)" fg:x="1106" fg:w="1"/><text x="89.5876%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (5 samples, 0.40%)</title><rect x="89.1761%" y="485" width="0.4039%" height="15" fill="rgb(229,191,6)" fg:x="1104" fg:w="5"/><text x="89.4261%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="89.4184%" y="469" width="0.1616%" height="15" fill="rgb(212,145,22)" fg:x="1107" fg:w="2"/><text x="89.6684%" y="479.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="89.4184%" y="453" width="0.1616%" height="15" fill="rgb(226,6,51)" fg:x="1107" fg:w="2"/><text x="89.6684%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.4184%" y="437" width="0.1616%" height="15" fill="rgb(227,128,8)" fg:x="1107" fg:w="2"/><text x="89.6684%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="89.4184%" y="421" width="0.1616%" height="15" fill="rgb(205,24,10)" fg:x="1107" fg:w="2"/><text x="89.6684%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.08%)</title><rect x="89.4992%" y="405" width="0.0808%" height="15" fill="rgb(217,147,27)" fg:x="1108" fg:w="1"/><text x="89.7492%" y="415.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4992%" y="389" width="0.0808%" height="15" fill="rgb(250,82,42)" fg:x="1108" fg:w="1"/><text x="89.7492%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.4992%" y="373" width="0.0808%" height="15" fill="rgb(248,93,17)" fg:x="1108" fg:w="1"/><text x="89.7492%" y="383.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4992%" y="357" width="0.0808%" height="15" fill="rgb(254,212,40)" fg:x="1108" fg:w="1"/><text x="89.7492%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.4992%" y="341" width="0.0808%" height="15" fill="rgb(229,209,2)" fg:x="1108" fg:w="1"/><text x="89.7492%" y="351.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="89.5800%" y="469" width="0.0808%" height="15" fill="rgb(211,50,43)" fg:x="1109" fg:w="1"/><text x="89.8300%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="89.5800%" y="453" width="0.0808%" height="15" fill="rgb(245,196,29)" fg:x="1109" fg:w="1"/><text x="89.8300%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.5800%" y="437" width="0.0808%" height="15" fill="rgb(216,132,13)" fg:x="1109" fg:w="1"/><text x="89.8300%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.5800%" y="421" width="0.0808%" height="15" fill="rgb(251,108,21)" fg:x="1109" fg:w="1"/><text x="89.8300%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="89.5800%" y="405" width="0.0808%" height="15" fill="rgb(229,174,54)" fg:x="1109" fg:w="1"/><text x="89.8300%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.5800%" y="389" width="0.0808%" height="15" fill="rgb(211,175,47)" fg:x="1109" fg:w="1"/><text x="89.8300%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.5800%" y="373" width="0.0808%" height="15" fill="rgb(234,5,37)" fg:x="1109" fg:w="1"/><text x="89.8300%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.5800%" y="357" width="0.0808%" height="15" fill="rgb(244,150,43)" fg:x="1109" fg:w="1"/><text x="89.8300%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.6607%" y="373" width="0.0808%" height="15" fill="rgb(242,172,38)" fg:x="1110" fg:w="1"/><text x="89.9107%" y="383.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="89.6607%" y="469" width="0.1616%" height="15" fill="rgb(205,27,8)" fg:x="1110" fg:w="2"/><text x="89.9107%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="89.6607%" y="453" width="0.1616%" height="15" fill="rgb(217,57,3)" fg:x="1110" fg:w="2"/><text x="89.9107%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.6607%" y="437" width="0.1616%" height="15" fill="rgb(242,21,38)" fg:x="1110" fg:w="2"/><text x="89.9107%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="89.6607%" y="421" width="0.1616%" height="15" fill="rgb(209,64,43)" fg:x="1110" fg:w="2"/><text x="89.9107%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="89.6607%" y="405" width="0.1616%" height="15" fill="rgb(222,2,46)" fg:x="1110" fg:w="2"/><text x="89.9107%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.6607%" y="389" width="0.1616%" height="15" fill="rgb(218,19,44)" fg:x="1110" fg:w="2"/><text x="89.9107%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7415%" y="373" width="0.0808%" height="15" fill="rgb(240,203,42)" fg:x="1111" fg:w="1"/><text x="89.9915%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7415%" y="357" width="0.0808%" height="15" fill="rgb(229,23,45)" fg:x="1111" fg:w="1"/><text x="89.9915%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.7415%" y="341" width="0.0808%" height="15" fill="rgb(205,228,51)" fg:x="1111" fg:w="1"/><text x="89.9915%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="89.8223%" y="453" width="0.0808%" height="15" fill="rgb(239,36,20)" fg:x="1112" fg:w="1"/><text x="90.0723%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8223%" y="437" width="0.0808%" height="15" fill="rgb(248,172,27)" fg:x="1112" fg:w="1"/><text x="90.0723%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8223%" y="421" width="0.0808%" height="15" fill="rgb(244,55,32)" fg:x="1112" fg:w="1"/><text x="90.0723%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9838%" y="405" width="0.0808%" height="15" fill="rgb(215,97,16)" fg:x="1114" fg:w="1"/><text x="90.2338%" y="415.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.57%)</title><rect x="89.5800%" y="485" width="0.5654%" height="15" fill="rgb(224,80,29)" fg:x="1109" fg:w="7"/><text x="89.8300%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="89.8223%" y="469" width="0.3231%" height="15" fill="rgb(216,93,47)" fg:x="1112" fg:w="4"/><text x="90.0723%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="89.9031%" y="453" width="0.2423%" height="15" fill="rgb(238,159,10)" fg:x="1113" fg:w="3"/><text x="90.1531%" y="463.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="89.9031%" y="437" width="0.2423%" height="15" fill="rgb(223,98,29)" fg:x="1113" fg:w="3"/><text x="90.1531%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="89.9838%" y="421" width="0.1616%" height="15" fill="rgb(210,176,23)" fg:x="1114" fg:w="2"/><text x="90.2338%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.0646%" y="405" width="0.0808%" height="15" fill="rgb(242,162,27)" fg:x="1115" fg:w="1"/><text x="90.3146%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.0646%" y="389" width="0.0808%" height="15" fill="rgb(245,109,32)" fg:x="1115" fg:w="1"/><text x="90.3146%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.0646%" y="373" width="0.0808%" height="15" fill="rgb(248,87,8)" fg:x="1115" fg:w="1"/><text x="90.3146%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.0646%" y="357" width="0.0808%" height="15" fill="rgb(250,160,50)" fg:x="1115" fg:w="1"/><text x="90.3146%" y="367.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="90.0646%" y="341" width="0.0808%" height="15" fill="rgb(246,165,25)" fg:x="1115" fg:w="1"/><text x="90.3146%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="90.1454%" y="453" width="0.0808%" height="15" fill="rgb(249,219,3)" fg:x="1116" fg:w="1"/><text x="90.3954%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1454%" y="437" width="0.0808%" height="15" fill="rgb(226,66,5)" fg:x="1116" fg:w="1"/><text x="90.3954%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (66 samples, 5.33%)</title><rect x="84.9758%" y="501" width="5.3312%" height="15" fill="rgb(250,220,43)" fg:x="1052" fg:w="66"/><text x="85.2258%" y="511.50">plugins..</text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="90.1454%" y="485" width="0.1616%" height="15" fill="rgb(225,111,31)" fg:x="1116" fg:w="2"/><text x="90.3954%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="90.1454%" y="469" width="0.1616%" height="15" fill="rgb(248,106,18)" fg:x="1116" fg:w="2"/><text x="90.3954%" y="479.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="90.2262%" y="453" width="0.0808%" height="15" fill="rgb(220,226,45)" fg:x="1117" fg:w="1"/><text x="90.4762%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.2262%" y="437" width="0.0808%" height="15" fill="rgb(208,58,53)" fg:x="1117" fg:w="1"/><text x="90.4762%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.2262%" y="421" width="0.0808%" height="15" fill="rgb(209,133,1)" fg:x="1117" fg:w="1"/><text x="90.4762%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.3069%" y="437" width="0.0808%" height="15" fill="rgb(228,216,27)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.3069%" y="421" width="0.0808%" height="15" fill="rgb(238,155,2)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.3069%" y="405" width="0.0808%" height="15" fill="rgb(244,99,37)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.3069%" y="389" width="0.0808%" height="15" fill="rgb(254,32,3)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3069%" y="373" width="0.0808%" height="15" fill="rgb(234,46,50)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.3069%" y="357" width="0.0808%" height="15" fill="rgb(232,118,51)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3069%" y="341" width="0.0808%" height="15" fill="rgb(207,24,32)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.3069%" y="325" width="0.0808%" height="15" fill="rgb(208,107,43)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.3069%" y="309" width="0.0808%" height="15" fill="rgb(231,28,9)" fg:x="1118" fg:w="1"/><text x="90.5569%" y="319.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="90.3877%" y="421" width="0.0808%" height="15" fill="rgb(241,204,15)" fg:x="1119" fg:w="1"/><text x="90.6377%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3877%" y="405" width="0.0808%" height="15" fill="rgb(214,54,15)" fg:x="1119" fg:w="1"/><text x="90.6377%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="90.3069%" y="501" width="0.2423%" height="15" fill="rgb(230,12,28)" fg:x="1118" fg:w="3"/><text x="90.5569%" y="511.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="90.3069%" y="485" width="0.2423%" height="15" fill="rgb(221,171,5)" fg:x="1118" fg:w="3"/><text x="90.5569%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (3 samples, 0.24%)</title><rect x="90.3069%" y="469" width="0.2423%" height="15" fill="rgb(207,72,25)" fg:x="1118" fg:w="3"/><text x="90.5569%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="90.3069%" y="453" width="0.2423%" height="15" fill="rgb(249,79,37)" fg:x="1118" fg:w="3"/><text x="90.5569%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="90.3877%" y="437" width="0.1616%" height="15" fill="rgb(209,98,49)" fg:x="1119" fg:w="2"/><text x="90.6377%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.4685%" y="421" width="0.0808%" height="15" fill="rgb(221,62,13)" fg:x="1120" fg:w="1"/><text x="90.7185%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.4685%" y="405" width="0.0808%" height="15" fill="rgb(223,39,6)" fg:x="1120" fg:w="1"/><text x="90.7185%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.4685%" y="389" width="0.0808%" height="15" fill="rgb(246,163,20)" fg:x="1120" fg:w="1"/><text x="90.7185%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.4685%" y="373" width="0.0808%" height="15" fill="rgb(211,111,29)" fg:x="1120" fg:w="1"/><text x="90.7185%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4685%" y="357" width="0.0808%" height="15" fill="rgb(243,118,5)" fg:x="1120" fg:w="1"/><text x="90.7185%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.5493%" y="485" width="0.0808%" height="15" fill="rgb(240,144,52)" fg:x="1121" fg:w="1"/><text x="90.7993%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.5493%" y="469" width="0.0808%" height="15" fill="rgb(244,158,36)" fg:x="1121" fg:w="1"/><text x="90.7993%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.5493%" y="453" width="0.0808%" height="15" fill="rgb(241,109,37)" fg:x="1121" fg:w="1"/><text x="90.7993%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="90.6300%" y="453" width="0.0808%" height="15" fill="rgb(213,95,32)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="90.6300%" y="437" width="0.0808%" height="15" fill="rgb(252,193,9)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="90.6300%" y="421" width="0.0808%" height="15" fill="rgb(225,213,21)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.6300%" y="405" width="0.0808%" height="15" fill="rgb(220,172,46)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.6300%" y="389" width="0.0808%" height="15" fill="rgb(235,75,41)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.6300%" y="373" width="0.0808%" height="15" fill="rgb(213,86,9)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.6300%" y="357" width="0.0808%" height="15" fill="rgb(238,127,51)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="90.6300%" y="341" width="0.0808%" height="15" fill="rgb(215,2,54)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="90.6300%" y="325" width="0.0808%" height="15" fill="rgb(245,80,6)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="90.6300%" y="309" width="0.0808%" height="15" fill="rgb(233,106,42)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="90.6300%" y="293" width="0.0808%" height="15" fill="rgb(244,86,38)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.6300%" y="277" width="0.0808%" height="15" fill="rgb(242,167,7)" fg:x="1122" fg:w="1"/><text x="90.8800%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7108%" y="437" width="0.0808%" height="15" fill="rgb(218,216,3)" fg:x="1123" fg:w="1"/><text x="90.9608%" y="447.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="90.6300%" y="485" width="0.2423%" height="15" fill="rgb(206,136,36)" fg:x="1122" fg:w="3"/><text x="90.8800%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="90.6300%" y="469" width="0.2423%" height="15" fill="rgb(206,206,15)" fg:x="1122" fg:w="3"/><text x="90.8800%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="90.7108%" y="453" width="0.1616%" height="15" fill="rgb(207,163,34)" fg:x="1123" fg:w="2"/><text x="90.9608%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="90.7916%" y="437" width="0.0808%" height="15" fill="rgb(240,127,22)" fg:x="1124" fg:w="1"/><text x="91.0416%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="90.7916%" y="421" width="0.0808%" height="15" fill="rgb(227,49,5)" fg:x="1124" fg:w="1"/><text x="91.0416%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.7916%" y="405" width="0.0808%" height="15" fill="rgb(231,8,6)" fg:x="1124" fg:w="1"/><text x="91.0416%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="90.8724%" y="437" width="0.0808%" height="15" fill="rgb(223,21,24)" fg:x="1125" fg:w="1"/><text x="91.1224%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8724%" y="421" width="0.0808%" height="15" fill="rgb(244,44,52)" fg:x="1125" fg:w="1"/><text x="91.1224%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="90.8724%" y="469" width="0.1616%" height="15" fill="rgb(207,73,28)" fg:x="1125" fg:w="2"/><text x="91.1224%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.8724%" y="453" width="0.1616%" height="15" fill="rgb(234,215,10)" fg:x="1125" fg:w="2"/><text x="91.1224%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.9532%" y="437" width="0.0808%" height="15" fill="rgb(236,85,3)" fg:x="1126" fg:w="1"/><text x="91.2032%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="90.9532%" y="421" width="0.0808%" height="15" fill="rgb(236,102,39)" fg:x="1126" fg:w="1"/><text x="91.2032%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9532%" y="405" width="0.0808%" height="15" fill="rgb(243,50,8)" fg:x="1126" fg:w="1"/><text x="91.2032%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0339%" y="469" width="0.0808%" height="15" fill="rgb(207,111,4)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0339%" y="453" width="0.0808%" height="15" fill="rgb(230,52,42)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0339%" y="437" width="0.0808%" height="15" fill="rgb(252,178,50)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.0339%" y="421" width="0.0808%" height="15" fill="rgb(234,46,35)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.0339%" y="405" width="0.0808%" height="15" fill="rgb(228,69,37)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.0339%" y="389" width="0.0808%" height="15" fill="rgb(221,21,11)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.0339%" y="373" width="0.0808%" height="15" fill="rgb(223,56,9)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.0339%" y="357" width="0.0808%" height="15" fill="rgb(234,30,19)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.0339%" y="341" width="0.0808%" height="15" fill="rgb(211,64,54)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.0339%" y="325" width="0.0808%" height="15" fill="rgb(250,189,5)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.0339%" y="309" width="0.0808%" height="15" fill="rgb(214,180,13)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.0339%" y="293" width="0.0808%" height="15" fill="rgb(238,40,40)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0339%" y="277" width="0.0808%" height="15" fill="rgb(214,101,38)" fg:x="1127" fg:w="1"/><text x="91.2839%" y="287.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (123 samples, 9.94%)</title><rect x="81.2601%" y="517" width="9.9354%" height="15" fill="rgb(242,65,53)" fg:x="1006" fg:w="123"/><text x="81.5101%" y="527.50">&lt;tests::Holdin..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.65%)</title><rect x="90.5493%" y="501" width="0.6462%" height="15" fill="rgb(230,22,45)" fg:x="1121" fg:w="8"/><text x="90.7993%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (4 samples, 0.32%)</title><rect x="90.8724%" y="485" width="0.3231%" height="15" fill="rgb(223,77,1)" fg:x="1125" fg:w="4"/><text x="91.1224%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.1147%" y="469" width="0.0808%" height="15" fill="rgb(227,33,37)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.1147%" y="453" width="0.0808%" height="15" fill="rgb(224,148,39)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="91.1147%" y="437" width="0.0808%" height="15" fill="rgb(232,212,39)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.1147%" y="421" width="0.0808%" height="15" fill="rgb(251,172,7)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.1147%" y="405" width="0.0808%" height="15" fill="rgb(219,39,9)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.1147%" y="389" width="0.0808%" height="15" fill="rgb(228,118,14)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.1147%" y="373" width="0.0808%" height="15" fill="rgb(207,140,10)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.1147%" y="357" width="0.0808%" height="15" fill="rgb(227,111,53)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.1147%" y="341" width="0.0808%" height="15" fill="rgb(216,165,16)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.1147%" y="325" width="0.0808%" height="15" fill="rgb(226,111,18)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1147%" y="309" width="0.0808%" height="15" fill="rgb(251,27,17)" fg:x="1128" fg:w="1"/><text x="91.3647%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="91.1955%" y="517" width="0.0808%" height="15" fill="rgb(254,69,9)" fg:x="1129" fg:w="1"/><text x="91.4455%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="91.2763%" y="501" width="0.0808%" height="15" fill="rgb(234,140,37)" fg:x="1130" fg:w="1"/><text x="91.5263%" y="511.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="91.2763%" y="485" width="0.0808%" height="15" fill="rgb(220,93,8)" fg:x="1130" fg:w="1"/><text x="91.5263%" y="495.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="91.2763%" y="469" width="0.0808%" height="15" fill="rgb(236,113,3)" fg:x="1130" fg:w="1"/><text x="91.5263%" y="479.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="91.2763%" y="453" width="0.0808%" height="15" fill="rgb(234,108,23)" fg:x="1130" fg:w="1"/><text x="91.5263%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="91.2763%" y="437" width="0.0808%" height="15" fill="rgb(205,114,34)" fg:x="1130" fg:w="1"/><text x="91.5263%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="91.2763%" y="421" width="0.0808%" height="15" fill="rgb(236,200,45)" fg:x="1130" fg:w="1"/><text x="91.5263%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="91.2763%" y="405" width="0.0808%" height="15" fill="rgb(227,194,29)" fg:x="1130" fg:w="1"/><text x="91.5263%" y="415.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="91.2763%" y="389" width="0.0808%" height="15" fill="rgb(250,76,42)" fg:x="1130" fg:w="1"/><text x="91.5263%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="91.4378%" y="405" width="0.1616%" height="15" fill="rgb(208,128,8)" fg:x="1132" fg:w="2"/><text x="91.6878%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="91.5994%" y="389" width="0.2423%" height="15" fill="rgb(229,209,35)" fg:x="1134" fg:w="3"/><text x="91.8494%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="91.5994%" y="373" width="0.2423%" height="15" fill="rgb(215,39,53)" fg:x="1134" fg:w="3"/><text x="91.8494%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="91.6801%" y="357" width="0.1616%" height="15" fill="rgb(219,123,41)" fg:x="1135" fg:w="2"/><text x="91.9301%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="91.6801%" y="341" width="0.1616%" height="15" fill="rgb(212,158,18)" fg:x="1135" fg:w="2"/><text x="91.9301%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="91.6801%" y="325" width="0.1616%" height="15" fill="rgb(234,196,53)" fg:x="1135" fg:w="2"/><text x="91.9301%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="91.6801%" y="309" width="0.1616%" height="15" fill="rgb(210,139,12)" fg:x="1135" fg:w="2"/><text x="91.9301%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="91.6801%" y="293" width="0.1616%" height="15" fill="rgb(220,116,54)" fg:x="1135" fg:w="2"/><text x="91.9301%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="91.5994%" y="405" width="0.3231%" height="15" fill="rgb(247,103,28)" fg:x="1134" fg:w="4"/><text x="91.8494%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.8417%" y="389" width="0.0808%" height="15" fill="rgb(253,156,45)" fg:x="1137" fg:w="1"/><text x="92.0917%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.0032%" y="341" width="0.0808%" height="15" fill="rgb(237,157,52)" fg:x="1139" fg:w="1"/><text x="92.2532%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.0032%" y="325" width="0.0808%" height="15" fill="rgb(253,112,16)" fg:x="1139" fg:w="1"/><text x="92.2532%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="92.0032%" y="373" width="0.1616%" height="15" fill="rgb(234,70,18)" fg:x="1139" fg:w="2"/><text x="92.2532%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.0032%" y="357" width="0.1616%" height="15" fill="rgb(247,138,19)" fg:x="1139" fg:w="2"/><text x="92.2532%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="92.0840%" y="341" width="0.0808%" height="15" fill="rgb(207,171,1)" fg:x="1140" fg:w="1"/><text x="92.3340%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.0840%" y="325" width="0.0808%" height="15" fill="rgb(239,213,3)" fg:x="1140" fg:w="1"/><text x="92.3340%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.0840%" y="309" width="0.0808%" height="15" fill="rgb(226,112,4)" fg:x="1140" fg:w="1"/><text x="92.3340%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.1648%" y="373" width="0.1616%" height="15" fill="rgb(252,170,12)" fg:x="1141" fg:w="2"/><text x="92.4148%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.2456%" y="357" width="0.0808%" height="15" fill="rgb(241,106,13)" fg:x="1142" fg:w="1"/><text x="92.4956%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.2456%" y="341" width="0.0808%" height="15" fill="rgb(225,73,23)" fg:x="1142" fg:w="1"/><text x="92.4956%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.3263%" y="357" width="0.0808%" height="15" fill="rgb(251,227,29)" fg:x="1143" fg:w="1"/><text x="92.5763%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.3263%" y="341" width="0.0808%" height="15" fill="rgb(237,144,13)" fg:x="1143" fg:w="1"/><text x="92.5763%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.3263%" y="325" width="0.0808%" height="15" fill="rgb(232,106,46)" fg:x="1143" fg:w="1"/><text x="92.5763%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.3263%" y="309" width="0.0808%" height="15" fill="rgb(245,154,53)" fg:x="1143" fg:w="1"/><text x="92.5763%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.3263%" y="293" width="0.0808%" height="15" fill="rgb(212,119,47)" fg:x="1143" fg:w="1"/><text x="92.5763%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.3263%" y="277" width="0.0808%" height="15" fill="rgb(253,135,25)" fg:x="1143" fg:w="1"/><text x="92.5763%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="92.3263%" y="261" width="0.0808%" height="15" fill="rgb(253,208,39)" fg:x="1143" fg:w="1"/><text x="92.5763%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.4879%" y="341" width="0.0808%" height="15" fill="rgb(226,64,12)" fg:x="1145" fg:w="1"/><text x="92.7379%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.5687%" y="341" width="0.1616%" height="15" fill="rgb(214,162,37)" fg:x="1146" fg:w="2"/><text x="92.8187%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.5687%" y="325" width="0.1616%" height="15" fill="rgb(250,104,5)" fg:x="1146" fg:w="2"/><text x="92.8187%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="92.5687%" y="309" width="0.1616%" height="15" fill="rgb(220,202,50)" fg:x="1146" fg:w="2"/><text x="92.8187%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.6494%" y="293" width="0.0808%" height="15" fill="rgb(248,67,38)" fg:x="1147" fg:w="1"/><text x="92.8994%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="92.4071%" y="357" width="0.4039%" height="15" fill="rgb(242,94,35)" fg:x="1144" fg:w="5"/><text x="92.6571%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.7302%" y="341" width="0.0808%" height="15" fill="rgb(209,78,37)" fg:x="1148" fg:w="1"/><text x="92.9802%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.7302%" y="325" width="0.0808%" height="15" fill="rgb(230,126,47)" fg:x="1148" fg:w="1"/><text x="92.9802%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.7302%" y="309" width="0.0808%" height="15" fill="rgb(222,110,35)" fg:x="1148" fg:w="1"/><text x="92.9802%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="92.3263%" y="373" width="0.6462%" height="15" fill="rgb(233,154,20)" fg:x="1143" fg:w="8"/><text x="92.5763%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.8110%" y="357" width="0.1616%" height="15" fill="rgb(223,53,50)" fg:x="1149" fg:w="2"/><text x="93.0610%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.8918%" y="341" width="0.0808%" height="15" fill="rgb(251,27,26)" fg:x="1150" fg:w="1"/><text x="93.1418%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.8918%" y="325" width="0.0808%" height="15" fill="rgb(223,189,16)" fg:x="1150" fg:w="1"/><text x="93.1418%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="91.9225%" y="389" width="1.2116%" height="15" fill="rgb(207,5,54)" fg:x="1138" fg:w="15"/><text x="92.1725%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.9725%" y="373" width="0.1616%" height="15" fill="rgb(254,124,50)" fg:x="1151" fg:w="2"/><text x="93.2225%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.0533%" y="357" width="0.0808%" height="15" fill="rgb(253,193,24)" fg:x="1152" fg:w="1"/><text x="93.3033%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.0533%" y="341" width="0.0808%" height="15" fill="rgb(235,170,24)" fg:x="1152" fg:w="1"/><text x="93.3033%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.94%)</title><rect x="91.4378%" y="421" width="1.9386%" height="15" fill="rgb(222,212,52)" fg:x="1132" fg:w="24"/><text x="91.6878%" y="431.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.45%)</title><rect x="91.9225%" y="405" width="1.4540%" height="15" fill="rgb(223,17,45)" fg:x="1138" fg:w="18"/><text x="92.1725%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="93.1341%" y="389" width="0.2423%" height="15" fill="rgb(227,103,26)" fg:x="1153" fg:w="3"/><text x="93.3841%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="93.2149%" y="373" width="0.1616%" height="15" fill="rgb(251,151,25)" fg:x="1154" fg:w="2"/><text x="93.4649%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="93.2149%" y="357" width="0.1616%" height="15" fill="rgb(248,144,29)" fg:x="1154" fg:w="2"/><text x="93.4649%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.3764%" y="389" width="0.0808%" height="15" fill="rgb(245,97,16)" fg:x="1156" fg:w="1"/><text x="93.6264%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.4572%" y="389" width="0.0808%" height="15" fill="rgb(220,200,29)" fg:x="1157" fg:w="1"/><text x="93.7072%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.4572%" y="373" width="0.0808%" height="15" fill="rgb(206,38,29)" fg:x="1157" fg:w="1"/><text x="93.7072%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5380%" y="341" width="0.0808%" height="15" fill="rgb(245,19,52)" fg:x="1158" fg:w="1"/><text x="93.7880%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="93.3764%" y="421" width="0.3231%" height="15" fill="rgb(205,67,43)" fg:x="1156" fg:w="4"/><text x="93.6264%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="93.3764%" y="405" width="0.3231%" height="15" fill="rgb(217,128,23)" fg:x="1156" fg:w="4"/><text x="93.6264%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.5380%" y="389" width="0.1616%" height="15" fill="rgb(210,109,28)" fg:x="1158" fg:w="2"/><text x="93.7880%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.5380%" y="373" width="0.1616%" height="15" fill="rgb(233,181,7)" fg:x="1158" fg:w="2"/><text x="93.7880%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.5380%" y="357" width="0.1616%" height="15" fill="rgb(244,11,22)" fg:x="1158" fg:w="2"/><text x="93.7880%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.6187%" y="341" width="0.0808%" height="15" fill="rgb(205,124,54)" fg:x="1159" fg:w="1"/><text x="93.8687%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.6187%" y="325" width="0.0808%" height="15" fill="rgb(218,21,27)" fg:x="1159" fg:w="1"/><text x="93.8687%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.6995%" y="357" width="0.0808%" height="15" fill="rgb(224,153,33)" fg:x="1160" fg:w="1"/><text x="93.9495%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="93.6995%" y="389" width="0.1616%" height="15" fill="rgb(240,219,28)" fg:x="1160" fg:w="2"/><text x="93.9495%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="93.6995%" y="373" width="0.1616%" height="15" fill="rgb(214,80,29)" fg:x="1160" fg:w="2"/><text x="93.9495%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.7803%" y="357" width="0.0808%" height="15" fill="rgb(247,148,44)" fg:x="1161" fg:w="1"/><text x="94.0303%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.7803%" y="341" width="0.0808%" height="15" fill="rgb(243,110,30)" fg:x="1161" fg:w="1"/><text x="94.0303%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.7803%" y="325" width="0.0808%" height="15" fill="rgb(243,173,41)" fg:x="1161" fg:w="1"/><text x="94.0303%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.7803%" y="309" width="0.0808%" height="15" fill="rgb(225,160,47)" fg:x="1161" fg:w="1"/><text x="94.0303%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.8611%" y="341" width="0.0808%" height="15" fill="rgb(215,44,21)" fg:x="1162" fg:w="1"/><text x="94.1111%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.8611%" y="325" width="0.0808%" height="15" fill="rgb(248,90,3)" fg:x="1162" fg:w="1"/><text x="94.1111%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="93.6995%" y="405" width="0.3231%" height="15" fill="rgb(220,196,49)" fg:x="1160" fg:w="4"/><text x="93.9495%" y="415.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="93.8611%" y="389" width="0.1616%" height="15" fill="rgb(217,138,14)" fg:x="1162" fg:w="2"/><text x="94.1111%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.8611%" y="373" width="0.1616%" height="15" fill="rgb(219,111,20)" fg:x="1162" fg:w="2"/><text x="94.1111%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="93.8611%" y="357" width="0.1616%" height="15" fill="rgb(218,114,4)" fg:x="1162" fg:w="2"/><text x="94.1111%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.9418%" y="341" width="0.0808%" height="15" fill="rgb(238,133,3)" fg:x="1163" fg:w="1"/><text x="94.1918%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1842%" y="373" width="0.0808%" height="15" fill="rgb(224,95,0)" fg:x="1166" fg:w="1"/><text x="94.4342%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1842%" y="357" width="0.0808%" height="15" fill="rgb(220,169,35)" fg:x="1166" fg:w="1"/><text x="94.4342%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="94.1842%" y="341" width="0.0808%" height="15" fill="rgb(242,116,47)" fg:x="1166" fg:w="1"/><text x="94.4342%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="94.2649%" y="373" width="0.0808%" height="15" fill="rgb(251,42,20)" fg:x="1167" fg:w="1"/><text x="94.5149%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="94.2649%" y="357" width="0.0808%" height="15" fill="rgb(234,7,34)" fg:x="1167" fg:w="1"/><text x="94.5149%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="94.3457%" y="373" width="0.1616%" height="15" fill="rgb(243,208,13)" fg:x="1168" fg:w="2"/><text x="94.5957%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="94.3457%" y="357" width="0.1616%" height="15" fill="rgb(227,33,28)" fg:x="1168" fg:w="2"/><text x="94.5957%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.3457%" y="341" width="0.1616%" height="15" fill="rgb(250,47,37)" fg:x="1168" fg:w="2"/><text x="94.5957%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.6688%" y="341" width="0.0808%" height="15" fill="rgb(235,111,52)" fg:x="1172" fg:w="1"/><text x="94.9188%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7496%" y="325" width="0.0808%" height="15" fill="rgb(223,64,28)" fg:x="1173" fg:w="1"/><text x="94.9996%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="94.8304%" y="309" width="0.0808%" height="15" fill="rgb(236,67,22)" fg:x="1174" fg:w="1"/><text x="95.0804%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9111%" y="277" width="0.0808%" height="15" fill="rgb(243,79,24)" fg:x="1175" fg:w="1"/><text x="95.1611%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="94.8304%" y="325" width="0.2423%" height="15" fill="rgb(241,225,22)" fg:x="1174" fg:w="3"/><text x="95.0804%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="94.9111%" y="309" width="0.1616%" height="15" fill="rgb(228,214,26)" fg:x="1175" fg:w="2"/><text x="95.1611%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="94.9111%" y="293" width="0.1616%" height="15" fill="rgb(219,84,52)" fg:x="1175" fg:w="2"/><text x="95.1611%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.9919%" y="277" width="0.0808%" height="15" fill="rgb(220,12,22)" fg:x="1176" fg:w="1"/><text x="95.2419%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="94.9919%" y="261" width="0.0808%" height="15" fill="rgb(219,9,49)" fg:x="1176" fg:w="1"/><text x="95.2419%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="94.9919%" y="245" width="0.0808%" height="15" fill="rgb(237,40,43)" fg:x="1176" fg:w="1"/><text x="95.2419%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1535%" y="293" width="0.0808%" height="15" fill="rgb(212,189,32)" fg:x="1178" fg:w="1"/><text x="95.4035%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1535%" y="277" width="0.0808%" height="15" fill="rgb(247,48,9)" fg:x="1178" fg:w="1"/><text x="95.4035%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1535%" y="261" width="0.0808%" height="15" fill="rgb(247,112,3)" fg:x="1178" fg:w="1"/><text x="95.4035%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.2342%" y="277" width="0.0808%" height="15" fill="rgb(243,110,18)" fg:x="1179" fg:w="1"/><text x="95.4842%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.3150%" y="277" width="0.0808%" height="15" fill="rgb(233,223,44)" fg:x="1180" fg:w="1"/><text x="95.5650%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.3150%" y="261" width="0.0808%" height="15" fill="rgb(245,160,20)" fg:x="1180" fg:w="1"/><text x="95.5650%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="94.7496%" y="341" width="0.7270%" height="15" fill="rgb(225,37,1)" fg:x="1173" fg:w="9"/><text x="94.9996%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="95.0727%" y="325" width="0.4039%" height="15" fill="rgb(253,227,39)" fg:x="1177" fg:w="5"/><text x="95.3227%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="95.1535%" y="309" width="0.3231%" height="15" fill="rgb(240,179,26)" fg:x="1178" fg:w="4"/><text x="95.4035%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="95.2342%" y="293" width="0.2423%" height="15" fill="rgb(237,212,23)" fg:x="1179" fg:w="3"/><text x="95.4842%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3958%" y="277" width="0.0808%" height="15" fill="rgb(221,38,11)" fg:x="1181" fg:w="1"/><text x="95.6458%" y="287.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.53%)</title><rect x="94.0226%" y="405" width="1.5347%" height="15" fill="rgb(215,85,6)" fg:x="1164" fg:w="19"/><text x="94.2726%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.53%)</title><rect x="94.0226%" y="389" width="1.5347%" height="15" fill="rgb(239,64,14)" fg:x="1164" fg:w="19"/><text x="94.2726%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="94.5073%" y="373" width="1.0501%" height="15" fill="rgb(215,150,32)" fg:x="1170" fg:w="13"/><text x="94.7573%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.89%)</title><rect x="94.6688%" y="357" width="0.8885%" height="15" fill="rgb(238,15,13)" fg:x="1172" fg:w="11"/><text x="94.9188%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="95.4766%" y="341" width="0.0808%" height="15" fill="rgb(251,87,8)" fg:x="1182" fg:w="1"/><text x="95.7266%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.5574%" y="341" width="0.2423%" height="15" fill="rgb(206,86,1)" fg:x="1183" fg:w="3"/><text x="95.8074%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.6381%" y="325" width="0.1616%" height="15" fill="rgb(208,151,45)" fg:x="1184" fg:w="2"/><text x="95.8881%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.6381%" y="309" width="0.1616%" height="15" fill="rgb(231,181,24)" fg:x="1184" fg:w="2"/><text x="95.8881%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.6381%" y="293" width="0.1616%" height="15" fill="rgb(240,106,29)" fg:x="1184" fg:w="2"/><text x="95.8881%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7189%" y="277" width="0.0808%" height="15" fill="rgb(227,166,11)" fg:x="1185" fg:w="1"/><text x="95.9689%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7189%" y="261" width="0.0808%" height="15" fill="rgb(254,14,34)" fg:x="1185" fg:w="1"/><text x="95.9689%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7189%" y="245" width="0.0808%" height="15" fill="rgb(223,222,6)" fg:x="1185" fg:w="1"/><text x="95.9689%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7189%" y="229" width="0.0808%" height="15" fill="rgb(245,69,24)" fg:x="1185" fg:w="1"/><text x="95.9689%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.7997%" y="341" width="0.0808%" height="15" fill="rgb(213,193,7)" fg:x="1186" fg:w="1"/><text x="96.0497%" y="351.50"></text></g><g><title>engine::session::state::State::close (57 samples, 4.60%)</title><rect x="91.3570%" y="501" width="4.6042%" height="15" fill="rgb(237,92,51)" fg:x="1131" fg:w="57"/><text x="91.6070%" y="511.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (57 samples, 4.60%)</title><rect x="91.3570%" y="485" width="4.6042%" height="15" fill="rgb(225,194,6)" fg:x="1131" fg:w="57"/><text x="91.6070%" y="495.50">engin..</text></g><g><title>core::iter::adapters::try_process (57 samples, 4.60%)</title><rect x="91.3570%" y="469" width="4.6042%" height="15" fill="rgb(205,159,49)" fg:x="1131" fg:w="57"/><text x="91.6070%" y="479.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (57 samples, 4.60%)</title><rect x="91.3570%" y="453" width="4.6042%" height="15" fill="rgb(219,69,2)" fg:x="1131" fg:w="57"/><text x="91.6070%" y="463.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (56 samples, 4.52%)</title><rect x="91.4378%" y="437" width="4.5234%" height="15" fill="rgb(215,107,24)" fg:x="1132" fg:w="56"/><text x="91.6878%" y="447.50">engin..</text></g><g><title>kernel::model::any_entity_changes (28 samples, 2.26%)</title><rect x="93.6995%" y="421" width="2.2617%" height="15" fill="rgb(249,208,29)" fg:x="1160" fg:w="28"/><text x="93.9495%" y="431.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="95.5574%" y="405" width="0.4039%" height="15" fill="rgb(213,147,10)" fg:x="1183" fg:w="5"/><text x="95.8074%" y="415.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="95.5574%" y="389" width="0.4039%" height="15" fill="rgb(254,140,42)" fg:x="1183" fg:w="5"/><text x="95.8074%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.5574%" y="373" width="0.4039%" height="15" fill="rgb(249,9,15)" fg:x="1183" fg:w="5"/><text x="95.8074%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.5574%" y="357" width="0.4039%" height="15" fill="rgb(210,19,33)" fg:x="1183" fg:w="5"/><text x="95.8074%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8805%" y="341" width="0.0808%" height="15" fill="rgb(241,121,22)" fg:x="1187" fg:w="1"/><text x="96.1305%" y="351.50"></text></g><g><title>engine::session::Session::close (59 samples, 4.77%)</title><rect x="91.2763%" y="517" width="4.7658%" height="15" fill="rgb(244,69,52)" fg:x="1130" fg:w="59"/><text x="91.5263%" y="527.50">engine..</text></g><g><title>engine::session::state::State::size (1 samples, 0.08%)</title><rect x="95.9612%" y="501" width="0.0808%" height="15" fill="rgb(244,191,54)" fg:x="1188" fg:w="1"/><text x="96.2112%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="96.1228%" y="373" width="0.0808%" height="15" fill="rgb(250,3,53)" fg:x="1190" fg:w="1"/><text x="96.3728%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.1228%" y="357" width="0.0808%" height="15" fill="rgb(205,77,3)" fg:x="1190" fg:w="1"/><text x="96.3728%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.1228%" y="341" width="0.0808%" height="15" fill="rgb(207,155,3)" fg:x="1190" fg:w="1"/><text x="96.3728%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="96.1228%" y="389" width="0.1616%" height="15" fill="rgb(224,79,2)" fg:x="1190" fg:w="2"/><text x="96.3728%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.2036%" y="373" width="0.0808%" height="15" fill="rgb(243,172,5)" fg:x="1191" fg:w="1"/><text x="96.4536%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2036%" y="357" width="0.0808%" height="15" fill="rgb(217,23,43)" fg:x="1191" fg:w="1"/><text x="96.4536%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.2036%" y="341" width="0.0808%" height="15" fill="rgb(223,109,20)" fg:x="1191" fg:w="1"/><text x="96.4536%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2036%" y="325" width="0.0808%" height="15" fill="rgb(232,159,21)" fg:x="1191" fg:w="1"/><text x="96.4536%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2036%" y="309" width="0.0808%" height="15" fill="rgb(219,58,2)" fg:x="1191" fg:w="1"/><text x="96.4536%" y="319.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="96.2843%" y="341" width="0.0808%" height="15" fill="rgb(241,56,8)" fg:x="1192" fg:w="1"/><text x="96.5343%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3651%" y="325" width="0.0808%" height="15" fill="rgb(249,10,27)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3651%" y="309" width="0.0808%" height="15" fill="rgb(248,177,5)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3651%" y="293" width="0.0808%" height="15" fill="rgb(239,12,30)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3651%" y="277" width="0.0808%" height="15" fill="rgb(229,164,25)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3651%" y="261" width="0.0808%" height="15" fill="rgb(231,217,50)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.3651%" y="245" width="0.0808%" height="15" fill="rgb(247,99,32)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.3651%" y="229" width="0.0808%" height="15" fill="rgb(240,74,50)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.3651%" y="213" width="0.0808%" height="15" fill="rgb(218,54,8)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3651%" y="197" width="0.0808%" height="15" fill="rgb(227,132,20)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3651%" y="181" width="0.0808%" height="15" fill="rgb(232,134,12)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.3651%" y="165" width="0.0808%" height="15" fill="rgb(250,129,18)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.3651%" y="149" width="0.0808%" height="15" fill="rgb(232,129,47)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.3651%" y="133" width="0.0808%" height="15" fill="rgb(230,31,40)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.3651%" y="117" width="0.0808%" height="15" fill="rgb(232,126,10)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3651%" y="101" width="0.0808%" height="15" fill="rgb(205,46,31)" fg:x="1193" fg:w="1"/><text x="96.6151%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.4459%" y="277" width="0.0808%" height="15" fill="rgb(232,37,37)" fg:x="1194" fg:w="1"/><text x="96.6959%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.4459%" y="261" width="0.0808%" height="15" fill="rgb(240,91,16)" fg:x="1194" fg:w="1"/><text x="96.6959%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.4459%" y="245" width="0.0808%" height="15" fill="rgb(224,160,9)" fg:x="1194" fg:w="1"/><text x="96.6959%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4459%" y="229" width="0.0808%" height="15" fill="rgb(215,116,14)" fg:x="1194" fg:w="1"/><text x="96.6959%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4459%" y="213" width="0.0808%" height="15" fill="rgb(235,46,36)" fg:x="1194" fg:w="1"/><text x="96.6959%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.4459%" y="197" width="0.0808%" height="15" fill="rgb(238,39,28)" fg:x="1194" fg:w="1"/><text x="96.6959%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.4459%" y="181" width="0.0808%" height="15" fill="rgb(242,125,29)" fg:x="1194" fg:w="1"/><text x="96.6959%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.4459%" y="165" width="0.0808%" height="15" fill="rgb(238,211,30)" fg:x="1194" fg:w="1"/><text x="96.6959%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="96.4459%" y="325" width="0.1616%" height="15" fill="rgb(227,201,28)" fg:x="1194" fg:w="2"/><text x="96.6959%" y="335.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.4459%" y="309" width="0.1616%" height="15" fill="rgb(238,77,29)" fg:x="1194" fg:w="2"/><text x="96.6959%" y="319.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="96.4459%" y="293" width="0.1616%" height="15" fill="rgb(213,221,40)" fg:x="1194" fg:w="2"/><text x="96.6959%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.5267%" y="277" width="0.0808%" height="15" fill="rgb(226,220,44)" fg:x="1195" fg:w="1"/><text x="96.7767%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.5267%" y="261" width="0.0808%" height="15" fill="rgb(228,90,23)" fg:x="1195" fg:w="1"/><text x="96.7767%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.5267%" y="245" width="0.0808%" height="15" fill="rgb(235,72,29)" fg:x="1195" fg:w="1"/><text x="96.7767%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6882%" y="197" width="0.0808%" height="15" fill="rgb(248,117,39)" fg:x="1197" fg:w="1"/><text x="96.9382%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6882%" y="181" width="0.0808%" height="15" fill="rgb(225,43,28)" fg:x="1197" fg:w="1"/><text x="96.9382%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="96.6882%" y="165" width="0.0808%" height="15" fill="rgb(240,93,4)" fg:x="1197" fg:w="1"/><text x="96.9382%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.6882%" y="229" width="0.1616%" height="15" fill="rgb(234,178,27)" fg:x="1197" fg:w="2"/><text x="96.9382%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.6882%" y="213" width="0.1616%" height="15" fill="rgb(254,88,22)" fg:x="1197" fg:w="2"/><text x="96.9382%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.7690%" y="197" width="0.0808%" height="15" fill="rgb(240,206,50)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7690%" y="181" width="0.0808%" height="15" fill="rgb(249,103,8)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7690%" y="165" width="0.0808%" height="15" fill="rgb(241,178,36)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7690%" y="149" width="0.0808%" height="15" fill="rgb(246,110,15)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7690%" y="133" width="0.0808%" height="15" fill="rgb(207,14,43)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7690%" y="117" width="0.0808%" height="15" fill="rgb(253,219,19)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.7690%" y="101" width="0.0808%" height="15" fill="rgb(216,126,5)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7690%" y="85" width="0.0808%" height="15" fill="rgb(218,78,42)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7690%" y="69" width="0.0808%" height="15" fill="rgb(215,154,40)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="79.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.7690%" y="53" width="0.0808%" height="15" fill="rgb(235,129,32)" fg:x="1198" fg:w="1"/><text x="97.0190%" y="63.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.8498%" y="181" width="0.0808%" height="15" fill="rgb(218,51,8)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.8498%" y="165" width="0.0808%" height="15" fill="rgb(245,48,4)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8498%" y="149" width="0.0808%" height="15" fill="rgb(250,175,12)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8498%" y="133" width="0.0808%" height="15" fill="rgb(237,95,40)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.8498%" y="117" width="0.0808%" height="15" fill="rgb(244,120,0)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8498%" y="101" width="0.0808%" height="15" fill="rgb(241,19,42)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8498%" y="85" width="0.0808%" height="15" fill="rgb(217,174,48)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.8498%" y="69" width="0.0808%" height="15" fill="rgb(239,36,38)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8498%" y="53" width="0.0808%" height="15" fill="rgb(220,63,49)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8498%" y="37" width="0.0808%" height="15" fill="rgb(240,101,13)" fg:x="1199" fg:w="1"/><text x="97.0998%" y="47.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="96.6882%" y="277" width="0.4039%" height="15" fill="rgb(209,184,51)" fg:x="1197" fg:w="5"/><text x="96.9382%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.6882%" y="261" width="0.4039%" height="15" fill="rgb(206,136,39)" fg:x="1197" fg:w="5"/><text x="96.9382%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="96.6882%" y="245" width="0.4039%" height="15" fill="rgb(254,47,45)" fg:x="1197" fg:w="5"/><text x="96.9382%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.8498%" y="229" width="0.2423%" height="15" fill="rgb(252,103,20)" fg:x="1199" fg:w="3"/><text x="97.0998%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.8498%" y="213" width="0.2423%" height="15" fill="rgb(230,69,12)" fg:x="1199" fg:w="3"/><text x="97.0998%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="96.8498%" y="197" width="0.2423%" height="15" fill="rgb(219,2,28)" fg:x="1199" fg:w="3"/><text x="97.0998%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9305%" y="181" width="0.1616%" height="15" fill="rgb(210,9,12)" fg:x="1200" fg:w="2"/><text x="97.1805%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.9305%" y="165" width="0.1616%" height="15" fill="rgb(235,99,33)" fg:x="1200" fg:w="2"/><text x="97.1805%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="96.9305%" y="149" width="0.1616%" height="15" fill="rgb(230,11,38)" fg:x="1200" fg:w="2"/><text x="97.1805%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9305%" y="133" width="0.1616%" height="15" fill="rgb(217,129,0)" fg:x="1200" fg:w="2"/><text x="97.1805%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.9305%" y="117" width="0.1616%" height="15" fill="rgb(222,198,4)" fg:x="1200" fg:w="2"/><text x="97.1805%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="96.9305%" y="101" width="0.1616%" height="15" fill="rgb(246,170,27)" fg:x="1200" fg:w="2"/><text x="97.1805%" y="111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.0113%" y="85" width="0.0808%" height="15" fill="rgb(229,17,28)" fg:x="1201" fg:w="1"/><text x="97.2613%" y="95.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.57%)</title><rect x="96.6074%" y="325" width="0.5654%" height="15" fill="rgb(233,198,48)" fg:x="1196" fg:w="7"/><text x="96.8574%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="96.6074%" y="309" width="0.5654%" height="15" fill="rgb(238,103,23)" fg:x="1196" fg:w="7"/><text x="96.8574%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="96.6074%" y="293" width="0.5654%" height="15" fill="rgb(206,91,41)" fg:x="1196" fg:w="7"/><text x="96.8574%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0921%" y="277" width="0.0808%" height="15" fill="rgb(227,34,25)" fg:x="1202" fg:w="1"/><text x="97.3421%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0921%" y="261" width="0.0808%" height="15" fill="rgb(210,110,44)" fg:x="1202" fg:w="1"/><text x="97.3421%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.1729%" y="181" width="0.0808%" height="15" fill="rgb(216,189,8)" fg:x="1203" fg:w="1"/><text x="97.4229%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.1729%" y="197" width="0.1616%" height="15" fill="rgb(234,9,46)" fg:x="1203" fg:w="2"/><text x="97.4229%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2536%" y="181" width="0.0808%" height="15" fill="rgb(251,200,5)" fg:x="1204" fg:w="1"/><text x="97.5036%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2536%" y="165" width="0.0808%" height="15" fill="rgb(238,165,37)" fg:x="1204" fg:w="1"/><text x="97.5036%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2536%" y="149" width="0.0808%" height="15" fill="rgb(232,77,38)" fg:x="1204" fg:w="1"/><text x="97.5036%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2536%" y="133" width="0.0808%" height="15" fill="rgb(253,179,33)" fg:x="1204" fg:w="1"/><text x="97.5036%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (16 samples, 1.29%)</title><rect x="96.1228%" y="485" width="1.2924%" height="15" fill="rgb(240,13,35)" fg:x="1190" fg:w="16"/><text x="96.3728%" y="495.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (16 samples, 1.29%)</title><rect x="96.1228%" y="469" width="1.2924%" height="15" fill="rgb(242,150,49)" fg:x="1190" fg:w="16"/><text x="96.3728%" y="479.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (16 samples, 1.29%)</title><rect x="96.1228%" y="453" width="1.2924%" height="15" fill="rgb(237,176,28)" fg:x="1190" fg:w="16"/><text x="96.3728%" y="463.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (16 samples, 1.29%)</title><rect x="96.1228%" y="437" width="1.2924%" height="15" fill="rgb(214,176,33)" fg:x="1190" fg:w="16"/><text x="96.3728%" y="447.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (16 samples, 1.29%)</title><rect x="96.1228%" y="421" width="1.2924%" height="15" fill="rgb(214,25,12)" fg:x="1190" fg:w="16"/><text x="96.3728%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (16 samples, 1.29%)</title><rect x="96.1228%" y="405" width="1.2924%" height="15" fill="rgb(238,190,20)" fg:x="1190" fg:w="16"/><text x="96.3728%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (14 samples, 1.13%)</title><rect x="96.2843%" y="389" width="1.1309%" height="15" fill="rgb(208,11,19)" fg:x="1192" fg:w="14"/><text x="96.5343%" y="399.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (14 samples, 1.13%)</title><rect x="96.2843%" y="373" width="1.1309%" height="15" fill="rgb(239,90,4)" fg:x="1192" fg:w="14"/><text x="96.5343%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (14 samples, 1.13%)</title><rect x="96.2843%" y="357" width="1.1309%" height="15" fill="rgb(248,110,3)" fg:x="1192" fg:w="14"/><text x="96.5343%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.05%)</title><rect x="96.3651%" y="341" width="1.0501%" height="15" fill="rgb(210,41,30)" fg:x="1193" fg:w="13"/><text x="96.6151%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="97.1729%" y="325" width="0.2423%" height="15" fill="rgb(239,36,8)" fg:x="1203" fg:w="3"/><text x="97.4229%" y="335.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.1729%" y="309" width="0.2423%" height="15" fill="rgb(237,201,47)" fg:x="1203" fg:w="3"/><text x="97.4229%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.1729%" y="293" width="0.2423%" height="15" fill="rgb(224,140,29)" fg:x="1203" fg:w="3"/><text x="97.4229%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.1729%" y="277" width="0.2423%" height="15" fill="rgb(231,209,17)" fg:x="1203" fg:w="3"/><text x="97.4229%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.1729%" y="261" width="0.2423%" height="15" fill="rgb(249,196,1)" fg:x="1203" fg:w="3"/><text x="97.4229%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.1729%" y="245" width="0.2423%" height="15" fill="rgb(223,207,51)" fg:x="1203" fg:w="3"/><text x="97.4229%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.1729%" y="229" width="0.2423%" height="15" fill="rgb(210,14,40)" fg:x="1203" fg:w="3"/><text x="97.4229%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.1729%" y="213" width="0.2423%" height="15" fill="rgb(250,20,52)" fg:x="1203" fg:w="3"/><text x="97.4229%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.3344%" y="197" width="0.0808%" height="15" fill="rgb(241,46,11)" fg:x="1205" fg:w="1"/><text x="97.5844%" y="207.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.4152%" y="469" width="0.0808%" height="15" fill="rgb(219,105,5)" fg:x="1206" fg:w="1"/><text x="97.6652%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4152%" y="453" width="0.0808%" height="15" fill="rgb(252,77,35)" fg:x="1206" fg:w="1"/><text x="97.6652%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4152%" y="437" width="0.0808%" height="15" fill="rgb(243,119,2)" fg:x="1206" fg:w="1"/><text x="97.6652%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.4152%" y="421" width="0.0808%" height="15" fill="rgb(206,82,28)" fg:x="1206" fg:w="1"/><text x="97.6652%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4152%" y="405" width="0.0808%" height="15" fill="rgb(227,120,12)" fg:x="1206" fg:w="1"/><text x="97.6652%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="97.4152%" y="389" width="0.0808%" height="15" fill="rgb(229,134,41)" fg:x="1206" fg:w="1"/><text x="97.6652%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (2 samples, 0.16%)</title><rect x="97.4152%" y="485" width="0.1616%" height="15" fill="rgb(239,96,32)" fg:x="1206" fg:w="2"/><text x="97.6652%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.4960%" y="469" width="0.0808%" height="15" fill="rgb(225,46,27)" fg:x="1207" fg:w="1"/><text x="97.7460%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5767%" y="373" width="0.0808%" height="15" fill="rgb(215,168,2)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5767%" y="357" width="0.0808%" height="15" fill="rgb(207,170,52)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5767%" y="341" width="0.0808%" height="15" fill="rgb(237,198,36)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.5767%" y="325" width="0.0808%" height="15" fill="rgb(213,27,14)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.5767%" y="309" width="0.0808%" height="15" fill="rgb(218,77,5)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.5767%" y="293" width="0.0808%" height="15" fill="rgb(230,219,39)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5767%" y="277" width="0.0808%" height="15" fill="rgb(245,177,7)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5767%" y="261" width="0.0808%" height="15" fill="rgb(246,44,46)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.5767%" y="245" width="0.0808%" height="15" fill="rgb(207,173,15)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.5767%" y="229" width="0.0808%" height="15" fill="rgb(245,170,50)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.5767%" y="213" width="0.0808%" height="15" fill="rgb(233,156,21)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.5767%" y="197" width="0.0808%" height="15" fill="rgb(253,146,27)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="207.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.5767%" y="181" width="0.0808%" height="15" fill="rgb(247,66,29)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.5767%" y="165" width="0.0808%" height="15" fill="rgb(218,207,26)" fg:x="1208" fg:w="1"/><text x="97.8267%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5767%" y="389" width="0.1616%" height="15" fill="rgb(234,93,26)" fg:x="1208" fg:w="2"/><text x="97.8267%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6575%" y="373" width="0.0808%" height="15" fill="rgb(214,75,48)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6575%" y="357" width="0.0808%" height="15" fill="rgb(229,119,22)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6575%" y="341" width="0.0808%" height="15" fill="rgb(226,153,19)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6575%" y="325" width="0.0808%" height="15" fill="rgb(220,204,36)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6575%" y="309" width="0.0808%" height="15" fill="rgb(253,181,43)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6575%" y="293" width="0.0808%" height="15" fill="rgb(211,41,51)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6575%" y="277" width="0.0808%" height="15" fill="rgb(207,215,0)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.6575%" y="261" width="0.0808%" height="15" fill="rgb(212,153,10)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.6575%" y="245" width="0.0808%" height="15" fill="rgb(251,171,36)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.6575%" y="229" width="0.0808%" height="15" fill="rgb(225,219,41)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.6575%" y="213" width="0.0808%" height="15" fill="rgb(208,200,1)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6575%" y="197" width="0.0808%" height="15" fill="rgb(206,75,47)" fg:x="1209" fg:w="1"/><text x="97.9075%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="97.5767%" y="437" width="0.2423%" height="15" fill="rgb(248,3,16)" fg:x="1208" fg:w="3"/><text x="97.8267%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="97.5767%" y="421" width="0.2423%" height="15" fill="rgb(242,157,36)" fg:x="1208" fg:w="3"/><text x="97.8267%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="97.5767%" y="405" width="0.2423%" height="15" fill="rgb(215,175,11)" fg:x="1208" fg:w="3"/><text x="97.8267%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7383%" y="389" width="0.0808%" height="15" fill="rgb(252,222,22)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7383%" y="373" width="0.0808%" height="15" fill="rgb(250,121,35)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.7383%" y="357" width="0.0808%" height="15" fill="rgb(233,120,49)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.7383%" y="341" width="0.0808%" height="15" fill="rgb(205,201,14)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.7383%" y="325" width="0.0808%" height="15" fill="rgb(219,58,45)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7383%" y="309" width="0.0808%" height="15" fill="rgb(251,65,12)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7383%" y="293" width="0.0808%" height="15" fill="rgb(224,47,31)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.7383%" y="277" width="0.0808%" height="15" fill="rgb(233,74,26)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.7383%" y="261" width="0.0808%" height="15" fill="rgb(231,211,31)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.7383%" y="245" width="0.0808%" height="15" fill="rgb(239,167,5)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.7383%" y="229" width="0.0808%" height="15" fill="rgb(241,85,0)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7383%" y="213" width="0.0808%" height="15" fill="rgb(229,130,21)" fg:x="1210" fg:w="1"/><text x="97.9883%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8191%" y="341" width="0.0808%" height="15" fill="rgb(254,84,49)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8191%" y="325" width="0.0808%" height="15" fill="rgb(235,85,21)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8191%" y="309" width="0.0808%" height="15" fill="rgb(246,128,52)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8191%" y="293" width="0.0808%" height="15" fill="rgb(243,114,49)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8191%" y="277" width="0.0808%" height="15" fill="rgb(240,224,22)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="97.8191%" y="261" width="0.0808%" height="15" fill="rgb(247,201,52)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="97.8191%" y="245" width="0.0808%" height="15" fill="rgb(231,70,45)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="255.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="97.8191%" y="229" width="0.0808%" height="15" fill="rgb(217,215,20)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="239.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="97.8191%" y="213" width="0.0808%" height="15" fill="rgb(226,170,30)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="223.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="97.8191%" y="197" width="0.0808%" height="15" fill="rgb(220,190,43)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="97.8191%" y="181" width="0.0808%" height="15" fill="rgb(218,20,18)" fg:x="1211" fg:w="1"/><text x="98.0691%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.8191%" y="437" width="0.1616%" height="15" fill="rgb(245,37,26)" fg:x="1211" fg:w="2"/><text x="98.0691%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.8191%" y="421" width="0.1616%" height="15" fill="rgb(241,127,29)" fg:x="1211" fg:w="2"/><text x="98.0691%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.8191%" y="405" width="0.1616%" height="15" fill="rgb(241,33,26)" fg:x="1211" fg:w="2"/><text x="98.0691%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.8191%" y="389" width="0.1616%" height="15" fill="rgb(220,106,21)" fg:x="1211" fg:w="2"/><text x="98.0691%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.8191%" y="373" width="0.1616%" height="15" fill="rgb(225,125,35)" fg:x="1211" fg:w="2"/><text x="98.0691%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.8191%" y="357" width="0.1616%" height="15" fill="rgb(248,80,22)" fg:x="1211" fg:w="2"/><text x="98.0691%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8998%" y="341" width="0.0808%" height="15" fill="rgb(231,117,39)" fg:x="1212" fg:w="1"/><text x="98.1498%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8998%" y="325" width="0.0808%" height="15" fill="rgb(239,183,16)" fg:x="1212" fg:w="1"/><text x="98.1498%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.8998%" y="309" width="0.0808%" height="15" fill="rgb(221,61,19)" fg:x="1212" fg:w="1"/><text x="98.1498%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.8998%" y="293" width="0.0808%" height="15" fill="rgb(239,196,44)" fg:x="1212" fg:w="1"/><text x="98.1498%" y="303.50"></text></g><g><title>engine::session::internal::Added::find_refs (6 samples, 0.48%)</title><rect x="97.5767%" y="469" width="0.4847%" height="15" fill="rgb(206,113,19)" fg:x="1208" fg:w="6"/><text x="97.8267%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="97.5767%" y="453" width="0.4847%" height="15" fill="rgb(245,114,12)" fg:x="1208" fg:w="6"/><text x="97.8267%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9806%" y="437" width="0.0808%" height="15" fill="rgb(247,89,39)" fg:x="1213" fg:w="1"/><text x="98.2306%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9806%" y="421" width="0.0808%" height="15" fill="rgb(213,85,14)" fg:x="1213" fg:w="1"/><text x="98.2306%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9806%" y="405" width="0.0808%" height="15" fill="rgb(249,206,33)" fg:x="1213" fg:w="1"/><text x="98.2306%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.9806%" y="389" width="0.0808%" height="15" fill="rgb(235,167,47)" fg:x="1213" fg:w="1"/><text x="98.2306%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9806%" y="373" width="0.0808%" height="15" fill="rgb(217,177,16)" fg:x="1213" fg:w="1"/><text x="98.2306%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0614%" y="453" width="0.1616%" height="15" fill="rgb(250,228,29)" fg:x="1214" fg:w="2"/><text x="98.3114%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0614%" y="437" width="0.1616%" height="15" fill="rgb(216,195,42)" fg:x="1214" fg:w="2"/><text x="98.3114%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1422%" y="421" width="0.0808%" height="15" fill="rgb(232,192,32)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1422%" y="405" width="0.0808%" height="15" fill="rgb(211,8,47)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1422%" y="389" width="0.0808%" height="15" fill="rgb(251,201,9)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.1422%" y="373" width="0.0808%" height="15" fill="rgb(206,185,47)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.1422%" y="357" width="0.0808%" height="15" fill="rgb(245,54,32)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.1422%" y="341" width="0.0808%" height="15" fill="rgb(208,1,8)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1422%" y="325" width="0.0808%" height="15" fill="rgb(228,57,24)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1422%" y="309" width="0.0808%" height="15" fill="rgb(251,24,8)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.1422%" y="293" width="0.0808%" height="15" fill="rgb(236,196,50)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.1422%" y="277" width="0.0808%" height="15" fill="rgb(246,222,29)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.1422%" y="261" width="0.0808%" height="15" fill="rgb(211,34,40)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.1422%" y="245" width="0.0808%" height="15" fill="rgb(210,66,51)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1422%" y="229" width="0.0808%" height="15" fill="rgb(250,56,43)" fg:x="1215" fg:w="1"/><text x="98.3922%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2229%" y="325" width="0.0808%" height="15" fill="rgb(240,111,50)" fg:x="1216" fg:w="1"/><text x="98.4729%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2229%" y="309" width="0.0808%" height="15" fill="rgb(209,117,13)" fg:x="1216" fg:w="1"/><text x="98.4729%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.2229%" y="357" width="0.1616%" height="15" fill="rgb(232,164,45)" fg:x="1216" fg:w="2"/><text x="98.4729%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.2229%" y="341" width="0.1616%" height="15" fill="rgb(205,69,32)" fg:x="1216" fg:w="2"/><text x="98.4729%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.3037%" y="325" width="0.0808%" height="15" fill="rgb(240,147,45)" fg:x="1217" fg:w="1"/><text x="98.5537%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3037%" y="309" width="0.0808%" height="15" fill="rgb(221,94,48)" fg:x="1217" fg:w="1"/><text x="98.5537%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3037%" y="293" width="0.0808%" height="15" fill="rgb(249,209,17)" fg:x="1217" fg:w="1"/><text x="98.5537%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3037%" y="277" width="0.0808%" height="15" fill="rgb(228,57,28)" fg:x="1217" fg:w="1"/><text x="98.5537%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.3037%" y="261" width="0.0808%" height="15" fill="rgb(250,133,26)" fg:x="1217" fg:w="1"/><text x="98.5537%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3037%" y="245" width="0.0808%" height="15" fill="rgb(254,15,16)" fg:x="1217" fg:w="1"/><text x="98.5537%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.3845%" y="357" width="0.0808%" height="15" fill="rgb(209,147,42)" fg:x="1218" fg:w="1"/><text x="98.6345%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.3845%" y="341" width="0.0808%" height="15" fill="rgb(208,5,29)" fg:x="1218" fg:w="1"/><text x="98.6345%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3845%" y="325" width="0.0808%" height="15" fill="rgb(250,73,31)" fg:x="1218" fg:w="1"/><text x="98.6345%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="98.2229%" y="453" width="0.4039%" height="15" fill="rgb(238,45,10)" fg:x="1216" fg:w="5"/><text x="98.4729%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="98.2229%" y="437" width="0.4039%" height="15" fill="rgb(214,104,5)" fg:x="1216" fg:w="5"/><text x="98.4729%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.2229%" y="421" width="0.4039%" height="15" fill="rgb(242,217,19)" fg:x="1216" fg:w="5"/><text x="98.4729%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="98.2229%" y="405" width="0.4039%" height="15" fill="rgb(246,113,27)" fg:x="1216" fg:w="5"/><text x="98.4729%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.2229%" y="389" width="0.4039%" height="15" fill="rgb(221,34,27)" fg:x="1216" fg:w="5"/><text x="98.4729%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.2229%" y="373" width="0.4039%" height="15" fill="rgb(246,109,6)" fg:x="1216" fg:w="5"/><text x="98.4729%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4653%" y="357" width="0.1616%" height="15" fill="rgb(217,12,25)" fg:x="1219" fg:w="2"/><text x="98.7153%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4653%" y="341" width="0.1616%" height="15" fill="rgb(250,195,5)" fg:x="1219" fg:w="2"/><text x="98.7153%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.5460%" y="325" width="0.0808%" height="15" fill="rgb(244,140,45)" fg:x="1220" fg:w="1"/><text x="98.7960%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.5460%" y="309" width="0.0808%" height="15" fill="rgb(230,64,14)" fg:x="1220" fg:w="1"/><text x="98.7960%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.5460%" y="293" width="0.0808%" height="15" fill="rgb(206,27,27)" fg:x="1220" fg:w="1"/><text x="98.7960%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="98.5460%" y="277" width="0.0808%" height="15" fill="rgb(230,14,50)" fg:x="1220" fg:w="1"/><text x="98.7960%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.6268%" y="261" width="0.0808%" height="15" fill="rgb(237,172,14)" fg:x="1221" fg:w="1"/><text x="98.8768%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.6268%" y="325" width="0.1616%" height="15" fill="rgb(209,25,21)" fg:x="1221" fg:w="2"/><text x="98.8768%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.6268%" y="309" width="0.1616%" height="15" fill="rgb(248,148,22)" fg:x="1221" fg:w="2"/><text x="98.8768%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6268%" y="293" width="0.1616%" height="15" fill="rgb(234,100,22)" fg:x="1221" fg:w="2"/><text x="98.8768%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.6268%" y="277" width="0.1616%" height="15" fill="rgb(210,20,30)" fg:x="1221" fg:w="2"/><text x="98.8768%" y="287.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="98.7076%" y="261" width="0.0808%" height="15" fill="rgb(232,58,0)" fg:x="1222" fg:w="1"/><text x="98.9576%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.6268%" y="357" width="0.2423%" height="15" fill="rgb(221,68,13)" fg:x="1221" fg:w="3"/><text x="98.8768%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.6268%" y="341" width="0.2423%" height="15" fill="rgb(231,194,11)" fg:x="1221" fg:w="3"/><text x="98.8768%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7884%" y="325" width="0.0808%" height="15" fill="rgb(235,51,41)" fg:x="1223" fg:w="1"/><text x="99.0384%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7884%" y="309" width="0.0808%" height="15" fill="rgb(240,50,32)" fg:x="1223" fg:w="1"/><text x="99.0384%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (17 samples, 1.37%)</title><rect x="97.5767%" y="485" width="1.3732%" height="15" fill="rgb(240,185,36)" fg:x="1208" fg:w="17"/><text x="97.8267%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.89%)</title><rect x="98.0614%" y="469" width="0.8885%" height="15" fill="rgb(211,168,15)" fg:x="1214" fg:w="11"/><text x="98.3114%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="98.6268%" y="453" width="0.3231%" height="15" fill="rgb(221,70,0)" fg:x="1221" fg:w="4"/><text x="98.8768%" y="463.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.6268%" y="437" width="0.3231%" height="15" fill="rgb(205,21,33)" fg:x="1221" fg:w="4"/><text x="98.8768%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.6268%" y="421" width="0.3231%" height="15" fill="rgb(225,106,10)" fg:x="1221" fg:w="4"/><text x="98.8768%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.6268%" y="405" width="0.3231%" height="15" fill="rgb(236,200,50)" fg:x="1221" fg:w="4"/><text x="98.8768%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.6268%" y="389" width="0.3231%" height="15" fill="rgb(249,93,23)" fg:x="1221" fg:w="4"/><text x="98.8768%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.6268%" y="373" width="0.3231%" height="15" fill="rgb(244,115,35)" fg:x="1221" fg:w="4"/><text x="98.8768%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8691%" y="357" width="0.0808%" height="15" fill="rgb(231,129,47)" fg:x="1224" fg:w="1"/><text x="99.1191%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.9499%" y="469" width="0.0808%" height="15" fill="rgb(225,160,50)" fg:x="1225" fg:w="1"/><text x="99.1999%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="99.1115%" y="405" width="0.0808%" height="15" fill="rgb(218,135,23)" fg:x="1227" fg:w="1"/><text x="99.3615%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1115%" y="389" width="0.0808%" height="15" fill="rgb(227,119,14)" fg:x="1227" fg:w="1"/><text x="99.3615%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1115%" y="373" width="0.0808%" height="15" fill="rgb(242,138,13)" fg:x="1227" fg:w="1"/><text x="99.3615%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1115%" y="357" width="0.0808%" height="15" fill="rgb(215,11,16)" fg:x="1227" fg:w="1"/><text x="99.3615%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1115%" y="341" width="0.0808%" height="15" fill="rgb(234,170,50)" fg:x="1227" fg:w="1"/><text x="99.3615%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1115%" y="325" width="0.0808%" height="15" fill="rgb(233,34,20)" fg:x="1227" fg:w="1"/><text x="99.3615%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1115%" y="309" width="0.0808%" height="15" fill="rgb(237,100,45)" fg:x="1227" fg:w="1"/><text x="99.3615%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.1115%" y="293" width="0.0808%" height="15" fill="rgb(231,184,36)" fg:x="1227" fg:w="1"/><text x="99.3615%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.1115%" y="437" width="0.1616%" height="15" fill="rgb(252,93,2)" fg:x="1227" fg:w="2"/><text x="99.3615%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.1115%" y="421" width="0.1616%" height="15" fill="rgb(248,176,47)" fg:x="1227" fg:w="2"/><text x="99.3615%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="99.1922%" y="405" width="0.0808%" height="15" fill="rgb(249,125,23)" fg:x="1228" fg:w="1"/><text x="99.4422%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.2730%" y="437" width="0.0808%" height="15" fill="rgb(239,67,42)" fg:x="1229" fg:w="1"/><text x="99.5230%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2730%" y="421" width="0.0808%" height="15" fill="rgb(244,162,4)" fg:x="1229" fg:w="1"/><text x="99.5230%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2730%" y="405" width="0.0808%" height="15" fill="rgb(214,150,38)" fg:x="1229" fg:w="1"/><text x="99.5230%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.2730%" y="389" width="0.0808%" height="15" fill="rgb(228,211,28)" fg:x="1229" fg:w="1"/><text x="99.5230%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2730%" y="373" width="0.0808%" height="15" fill="rgb(212,98,48)" fg:x="1229" fg:w="1"/><text x="99.5230%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5153%" y="277" width="0.0808%" height="15" fill="rgb(213,45,13)" fg:x="1232" fg:w="1"/><text x="99.7653%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5153%" y="261" width="0.0808%" height="15" fill="rgb(218,35,29)" fg:x="1232" fg:w="1"/><text x="99.7653%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5153%" y="245" width="0.0808%" height="15" fill="rgb(244,13,3)" fg:x="1232" fg:w="1"/><text x="99.7653%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5153%" y="229" width="0.0808%" height="15" fill="rgb(235,170,19)" fg:x="1232" fg:w="1"/><text x="99.7653%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5153%" y="213" width="0.0808%" height="15" fill="rgb(233,193,43)" fg:x="1232" fg:w="1"/><text x="99.7653%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="99.5961%" y="277" width="0.0808%" height="15" fill="rgb(228,223,20)" fg:x="1233" fg:w="1"/><text x="99.8461%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5961%" y="261" width="0.0808%" height="15" fill="rgb(208,85,54)" fg:x="1233" fg:w="1"/><text x="99.8461%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.5153%" y="309" width="0.2423%" height="15" fill="rgb(254,14,45)" fg:x="1232" fg:w="3"/><text x="99.7653%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.5153%" y="293" width="0.2423%" height="15" fill="rgb(247,99,29)" fg:x="1232" fg:w="3"/><text x="99.7653%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.6769%" y="277" width="0.0808%" height="15" fill="rgb(225,180,54)" fg:x="1234" fg:w="1"/><text x="99.9269%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6769%" y="261" width="0.0808%" height="15" fill="rgb(239,88,43)" fg:x="1234" fg:w="1"/><text x="99.9269%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.5153%" y="341" width="0.3231%" height="15" fill="rgb(209,47,11)" fg:x="1232" fg:w="4"/><text x="99.7653%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.5153%" y="325" width="0.3231%" height="15" fill="rgb(219,179,23)" fg:x="1232" fg:w="4"/><text x="99.7653%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.7577%" y="309" width="0.0808%" height="15" fill="rgb(213,183,19)" fg:x="1235" fg:w="1"/><text x="100.0077%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.7577%" y="293" width="0.0808%" height="15" fill="rgb(210,11,9)" fg:x="1235" fg:w="1"/><text x="100.0077%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.8384%" y="341" width="0.0808%" height="15" fill="rgb(239,194,16)" fg:x="1236" fg:w="1"/><text x="100.0884%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.8384%" y="325" width="0.0808%" height="15" fill="rgb(246,23,50)" fg:x="1236" fg:w="1"/><text x="100.0884%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.8384%" y="309" width="0.0808%" height="15" fill="rgb(245,10,41)" fg:x="1236" fg:w="1"/><text x="100.0884%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.8384%" y="293" width="0.0808%" height="15" fill="rgb(228,43,24)" fg:x="1236" fg:w="1"/><text x="100.0884%" y="303.50"></text></g><g><title>all (1,238 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(220,151,0)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="879.50"></text></g><g><title>simple-34ca68e0 (1,238 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(232,219,10)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="863.50">simple-34ca68e0</text></g><g><title>_start (1,238 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(227,217,48)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="847.50">_start</text></g><g><title>__libc_start_main (1,238 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(210,66,35)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="831.50">__libc_start_main</text></g><g><title>main (1,238 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(254,6,7)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (1,238 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(235,222,42)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,238 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(245,126,5)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,238 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(215,73,17)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,238 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(219,198,52)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,238 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(217,159,18)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="735.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,238 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(212,177,18)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,238 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(241,10,11)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,238 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(232,114,35)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,238 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(238,222,8)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,238 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(251,153,44)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="655.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,238 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(210,140,51)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,238 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(222,63,0)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="623.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,238 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(240,18,40)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="607.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,238 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(237,88,16)" fg:x="0" fg:w="1238"/><text x="0.2500%" y="591.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (264 samples, 21.32%)</title><rect x="78.6753%" y="565" width="21.3247%" height="15" fill="rgb(251,117,13)" fg:x="974" fg:w="264"/><text x="78.9253%" y="575.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (264 samples, 21.32%)</title><rect x="78.6753%" y="549" width="21.3247%" height="15" fill="rgb(251,228,8)" fg:x="974" fg:w="264"/><text x="78.9253%" y="559.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (264 samples, 21.32%)</title><rect x="78.6753%" y="533" width="21.3247%" height="15" fill="rgb(205,107,49)" fg:x="974" fg:w="264"/><text x="78.9253%" y="543.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (49 samples, 3.96%)</title><rect x="96.0420%" y="517" width="3.9580%" height="15" fill="rgb(238,72,41)" fg:x="1189" fg:w="49"/><text x="96.2920%" y="527.50">engi..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (48 samples, 3.88%)</title><rect x="96.1228%" y="501" width="3.8772%" height="15" fill="rgb(248,183,52)" fg:x="1190" fg:w="48"/><text x="96.3728%" y="511.50">engi..</text></g><g><title>kernel::model::EntityPtrResolver::world (13 samples, 1.05%)</title><rect x="98.9499%" y="485" width="1.0501%" height="15" fill="rgb(215,58,20)" fg:x="1225" fg:w="13"/><text x="99.1999%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (12 samples, 0.97%)</title><rect x="99.0307%" y="469" width="0.9693%" height="15" fill="rgb(209,49,13)" fg:x="1226" fg:w="12"/><text x="99.2807%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.97%)</title><rect x="99.0307%" y="453" width="0.9693%" height="15" fill="rgb(208,113,17)" fg:x="1226" fg:w="12"/><text x="99.2807%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.65%)</title><rect x="99.3538%" y="437" width="0.6462%" height="15" fill="rgb(208,14,22)" fg:x="1230" fg:w="8"/><text x="99.6038%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="99.3538%" y="421" width="0.6462%" height="15" fill="rgb(222,95,2)" fg:x="1230" fg:w="8"/><text x="99.6038%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="99.3538%" y="405" width="0.6462%" height="15" fill="rgb(253,180,37)" fg:x="1230" fg:w="8"/><text x="99.6038%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.57%)</title><rect x="99.4346%" y="389" width="0.5654%" height="15" fill="rgb(250,81,33)" fg:x="1231" fg:w="7"/><text x="99.6846%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="99.4346%" y="373" width="0.5654%" height="15" fill="rgb(251,151,41)" fg:x="1231" fg:w="7"/><text x="99.6846%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="99.5153%" y="357" width="0.4847%" height="15" fill="rgb(210,135,17)" fg:x="1232" fg:w="6"/><text x="99.7653%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9192%" y="341" width="0.0808%" height="15" fill="rgb(239,21,29)" fg:x="1237" fg:w="1"/><text x="100.1692%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.9192%" y="325" width="0.0808%" height="15" fill="rgb(231,215,16)" fg:x="1237" fg:w="1"/><text x="100.1692%" y="335.50"></text></g></svg></svg>