<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1247"><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0802%" y="533" width="0.0802%" height="15" fill="rgb(240,44,36)" fg:x="1" fg:w="1"/><text x="0.3302%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.1604%" y="533" width="0.1604%" height="15" fill="rgb(244,209,38)" fg:x="2" fg:w="2"/><text x="0.4104%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.3208%" y="533" width="0.2406%" height="15" fill="rgb(219,34,37)" fg:x="4" fg:w="3"/><text x="0.5708%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.24%)</title><rect x="0.3208%" y="517" width="0.2406%" height="15" fill="rgb(210,28,6)" fg:x="4" fg:w="3"/><text x="0.5708%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4010%" y="501" width="0.1604%" height="15" fill="rgb(244,110,52)" fg:x="5" fg:w="2"/><text x="0.6510%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.72%)</title><rect x="0.0000%" y="565" width="0.7217%" height="15" fill="rgb(254,124,47)" fg:x="0" fg:w="9"/><text x="0.2500%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="0.0000%" y="549" width="0.7217%" height="15" fill="rgb(254,110,13)" fg:x="0" fg:w="9"/><text x="0.2500%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rune::RunePlugin&gt; (2 samples, 0.16%)</title><rect x="0.5613%" y="533" width="0.1604%" height="15" fill="rgb(252,57,21)" fg:x="7" fg:w="2"/><text x="0.8113%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8821%" y="533" width="0.2406%" height="15" fill="rgb(242,60,45)" fg:x="11" fg:w="3"/><text x="1.1321%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3633%" y="453" width="0.0802%" height="15" fill="rgb(234,49,30)" fg:x="17" fg:w="1"/><text x="1.6133%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.4435%" y="453" width="0.1604%" height="15" fill="rgb(218,98,6)" fg:x="18" fg:w="2"/><text x="1.6935%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5237%" y="437" width="0.0802%" height="15" fill="rgb(220,174,29)" fg:x="19" fg:w="1"/><text x="1.7737%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.8444%" y="437" width="0.2406%" height="15" fill="rgb(236,163,23)" fg:x="23" fg:w="3"/><text x="2.0944%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.0850%" y="437" width="0.0802%" height="15" fill="rgb(242,114,45)" fg:x="26" fg:w="1"/><text x="2.3350%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.1652%" y="405" width="0.0802%" height="15" fill="rgb(232,10,53)" fg:x="27" fg:w="1"/><text x="2.4152%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1652%" y="389" width="0.0802%" height="15" fill="rgb(245,108,29)" fg:x="27" fg:w="1"/><text x="2.4152%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="2.1652%" y="437" width="0.1604%" height="15" fill="rgb(240,89,53)" fg:x="27" fg:w="2"/><text x="2.4152%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="2.1652%" y="421" width="0.1604%" height="15" fill="rgb(226,60,45)" fg:x="27" fg:w="2"/><text x="2.4152%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.2454%" y="405" width="0.0802%" height="15" fill="rgb(230,41,44)" fg:x="28" fg:w="1"/><text x="2.4954%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.4058%" y="421" width="0.1604%" height="15" fill="rgb(230,26,20)" fg:x="30" fg:w="2"/><text x="2.6558%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.44%)</title><rect x="1.2029%" y="501" width="1.4435%" height="15" fill="rgb(237,170,32)" fg:x="15" fg:w="18"/><text x="1.4529%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (18 samples, 1.44%)</title><rect x="1.2029%" y="485" width="1.4435%" height="15" fill="rgb(212,35,42)" fg:x="15" fg:w="18"/><text x="1.4529%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.36%)</title><rect x="1.2831%" y="469" width="1.3633%" height="15" fill="rgb(227,31,34)" fg:x="16" fg:w="17"/><text x="1.5331%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="1.6038%" y="453" width="1.0425%" height="15" fill="rgb(216,19,18)" fg:x="20" fg:w="13"/><text x="1.8538%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="2.3256%" y="437" width="0.3208%" height="15" fill="rgb(211,133,42)" fg:x="29" fg:w="4"/><text x="2.5756%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.5662%" y="421" width="0.0802%" height="15" fill="rgb(244,66,13)" fg:x="32" fg:w="1"/><text x="2.8162%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6464%" y="501" width="0.0802%" height="15" fill="rgb(218,185,50)" fg:x="33" fg:w="1"/><text x="2.8964%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7265%" y="485" width="0.0802%" height="15" fill="rgb(219,149,13)" fg:x="34" fg:w="1"/><text x="2.9765%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.8067%" y="485" width="0.0802%" height="15" fill="rgb(221,125,0)" fg:x="35" fg:w="1"/><text x="3.0567%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8067%" y="469" width="0.0802%" height="15" fill="rgb(247,126,27)" fg:x="35" fg:w="1"/><text x="3.0567%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.8869%" y="469" width="0.1604%" height="15" fill="rgb(250,138,30)" fg:x="36" fg:w="2"/><text x="3.1369%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="3.0473%" y="469" width="0.3208%" height="15" fill="rgb(230,151,9)" fg:x="38" fg:w="4"/><text x="3.2973%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.2077%" y="453" width="0.1604%" height="15" fill="rgb(233,80,38)" fg:x="40" fg:w="2"/><text x="3.4577%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6087%" y="453" width="0.0802%" height="15" fill="rgb(232,68,43)" fg:x="45" fg:w="1"/><text x="3.8587%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.6889%" y="453" width="0.0802%" height="15" fill="rgb(254,5,50)" fg:x="46" fg:w="1"/><text x="3.9389%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="3.7690%" y="437" width="0.1604%" height="15" fill="rgb(225,45,5)" fg:x="47" fg:w="2"/><text x="4.0190%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="3.8492%" y="421" width="0.0802%" height="15" fill="rgb(239,22,3)" fg:x="48" fg:w="1"/><text x="4.0992%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8492%" y="405" width="0.0802%" height="15" fill="rgb(243,129,0)" fg:x="48" fg:w="1"/><text x="4.0992%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 3.29%)</title><rect x="0.8019%" y="549" width="3.2879%" height="15" fill="rgb(223,164,0)" fg:x="10" fg:w="41"/><text x="1.0519%" y="559.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (37 samples, 2.97%)</title><rect x="1.1227%" y="533" width="2.9671%" height="15" fill="rgb(221,46,29)" fg:x="14" fg:w="37"/><text x="1.3727%" y="543.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 2.97%)</title><rect x="1.1227%" y="517" width="2.9671%" height="15" fill="rgb(205,97,47)" fg:x="14" fg:w="37"/><text x="1.3727%" y="527.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.36%)</title><rect x="2.7265%" y="501" width="1.3633%" height="15" fill="rgb(249,14,8)" fg:x="34" fg:w="17"/><text x="2.9765%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="2.8869%" y="485" width="1.2029%" height="15" fill="rgb(216,77,3)" fg:x="36" fg:w="15"/><text x="3.1369%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="3.3681%" y="469" width="0.7217%" height="15" fill="rgb(206,168,54)" fg:x="42" fg:w="9"/><text x="3.6181%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="3.7690%" y="453" width="0.3208%" height="15" fill="rgb(236,3,41)" fg:x="47" fg:w="4"/><text x="4.0190%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="3.9294%" y="437" width="0.1604%" height="15" fill="rgb(231,132,24)" fg:x="49" fg:w="2"/><text x="4.1794%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0096%" y="421" width="0.0802%" height="15" fill="rgb(227,221,40)" fg:x="50" fg:w="1"/><text x="4.2596%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 4.17%)</title><rect x="0.0000%" y="581" width="4.1700%" height="15" fill="rgb(233,151,11)" fg:x="0" fg:w="52"/><text x="0.2500%" y="591.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (43 samples, 3.45%)</title><rect x="0.7217%" y="565" width="3.4483%" height="15" fill="rgb(247,81,35)" fg:x="9" fg:w="43"/><text x="0.9717%" y="575.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0898%" y="549" width="0.0802%" height="15" fill="rgb(243,128,48)" fg:x="51" fg:w="1"/><text x="4.3398%" y="559.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="4.2502%" y="533" width="0.0802%" height="15" fill="rgb(253,16,10)" fg:x="53" fg:w="1"/><text x="4.5002%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.3304%" y="517" width="0.0802%" height="15" fill="rgb(228,67,27)" fg:x="54" fg:w="1"/><text x="4.5804%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.3304%" y="501" width="0.0802%" height="15" fill="rgb(231,105,25)" fg:x="54" fg:w="1"/><text x="4.5804%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.3304%" y="485" width="0.0802%" height="15" fill="rgb(213,166,47)" fg:x="54" fg:w="1"/><text x="4.5804%" y="495.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="4.7314%" y="453" width="0.0802%" height="15" fill="rgb(209,27,10)" fg:x="59" fg:w="1"/><text x="4.9814%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8115%" y="453" width="0.0802%" height="15" fill="rgb(241,44,30)" fg:x="60" fg:w="1"/><text x="5.0615%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="4.8917%" y="453" width="0.1604%" height="15" fill="rgb(223,216,15)" fg:x="61" fg:w="2"/><text x="5.1417%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.9719%" y="437" width="0.0802%" height="15" fill="rgb(227,14,7)" fg:x="62" fg:w="1"/><text x="5.2219%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="5.0521%" y="453" width="0.0802%" height="15" fill="rgb(237,14,5)" fg:x="63" fg:w="1"/><text x="5.3021%" y="463.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (8 samples, 0.64%)</title><rect x="4.7314%" y="485" width="0.6415%" height="15" fill="rgb(232,14,36)" fg:x="59" fg:w="8"/><text x="4.9814%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (8 samples, 0.64%)</title><rect x="4.7314%" y="469" width="0.6415%" height="15" fill="rgb(234,0,38)" fg:x="59" fg:w="8"/><text x="4.9814%" y="479.50"></text></g><g><title>replies::identifier_to_key (3 samples, 0.24%)</title><rect x="5.1323%" y="453" width="0.2406%" height="15" fill="rgb(207,170,14)" fg:x="64" fg:w="3"/><text x="5.3823%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2927%" y="437" width="0.0802%" height="15" fill="rgb(252,45,13)" fg:x="66" fg:w="1"/><text x="5.5427%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.2927%" y="421" width="0.0802%" height="15" fill="rgb(213,142,7)" fg:x="66" fg:w="1"/><text x="5.5427%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.2927%" y="405" width="0.0802%" height="15" fill="rgb(216,157,23)" fg:x="66" fg:w="1"/><text x="5.5427%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.2927%" y="389" width="0.0802%" height="15" fill="rgb(212,145,33)" fg:x="66" fg:w="1"/><text x="5.5427%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="5.4531%" y="453" width="0.1604%" height="15" fill="rgb(233,26,13)" fg:x="68" fg:w="2"/><text x="5.7031%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="5.4531%" y="437" width="0.1604%" height="15" fill="rgb(219,196,19)" fg:x="68" fg:w="2"/><text x="5.7031%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::actions::PutInsideAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="5.6135%" y="453" width="0.1604%" height="15" fill="rgb(246,56,21)" fg:x="70" fg:w="2"/><text x="5.8635%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="5.6135%" y="437" width="0.1604%" height="15" fill="rgb(222,28,53)" fg:x="70" fg:w="2"/><text x="5.8635%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="5.6135%" y="421" width="0.1604%" height="15" fill="rgb(224,5,27)" fg:x="70" fg:w="2"/><text x="5.8635%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.6135%" y="405" width="0.1604%" height="15" fill="rgb(220,153,33)" fg:x="70" fg:w="2"/><text x="5.8635%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="5.6135%" y="389" width="0.1604%" height="15" fill="rgb(226,58,19)" fg:x="70" fg:w="2"/><text x="5.8635%" y="399.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="5.7739%" y="453" width="0.0802%" height="15" fill="rgb(239,112,23)" fg:x="72" fg:w="1"/><text x="6.0239%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="5.7739%" y="437" width="0.0802%" height="15" fill="rgb(251,213,20)" fg:x="72" fg:w="1"/><text x="6.0239%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.7739%" y="421" width="0.0802%" height="15" fill="rgb(215,181,21)" fg:x="72" fg:w="1"/><text x="6.0239%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.8540%" y="453" width="0.0802%" height="15" fill="rgb(240,8,35)" fg:x="73" fg:w="1"/><text x="6.1040%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="5.9342%" y="453" width="0.1604%" height="15" fill="rgb(232,203,3)" fg:x="74" fg:w="2"/><text x="6.1842%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="5.9342%" y="437" width="0.1604%" height="15" fill="rgb(214,202,43)" fg:x="74" fg:w="2"/><text x="6.1842%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.9342%" y="421" width="0.1604%" height="15" fill="rgb(254,35,11)" fg:x="74" fg:w="2"/><text x="6.1842%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.0144%" y="405" width="0.0802%" height="15" fill="rgb(239,173,13)" fg:x="75" fg:w="1"/><text x="6.2644%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (10 samples, 0.80%)</title><rect x="5.3729%" y="485" width="0.8019%" height="15" fill="rgb(220,141,0)" fg:x="67" fg:w="10"/><text x="5.6229%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (10 samples, 0.80%)</title><rect x="5.3729%" y="469" width="0.8019%" height="15" fill="rgb(210,98,12)" fg:x="67" fg:w="10"/><text x="5.6229%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="6.0946%" y="453" width="0.0802%" height="15" fill="rgb(254,153,22)" fg:x="76" fg:w="1"/><text x="6.3446%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.0946%" y="437" width="0.0802%" height="15" fill="rgb(247,223,17)" fg:x="76" fg:w="1"/><text x="6.3446%" y="447.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="6.1748%" y="485" width="0.0802%" height="15" fill="rgb(246,56,7)" fg:x="77" fg:w="1"/><text x="6.4248%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="6.1748%" y="469" width="0.0802%" height="15" fill="rgb(240,226,12)" fg:x="77" fg:w="1"/><text x="6.4248%" y="479.50"></text></g><g><title>&lt;plugins_core::chat::actions::SpeakAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="6.1748%" y="453" width="0.0802%" height="15" fill="rgb(205,87,46)" fg:x="77" fg:w="1"/><text x="6.4248%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.1748%" y="437" width="0.0802%" height="15" fill="rgb(245,214,51)" fg:x="77" fg:w="1"/><text x="6.4248%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.3352%" y="421" width="0.0802%" height="15" fill="rgb(223,172,33)" fg:x="79" fg:w="1"/><text x="6.5852%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="6.2550%" y="485" width="0.2406%" height="15" fill="rgb(227,203,34)" fg:x="78" fg:w="3"/><text x="6.5050%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="6.2550%" y="469" width="0.2406%" height="15" fill="rgb(248,143,44)" fg:x="78" fg:w="3"/><text x="6.5050%" y="479.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="6.3352%" y="453" width="0.1604%" height="15" fill="rgb(226,162,5)" fg:x="79" fg:w="2"/><text x="6.5852%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="6.3352%" y="437" width="0.1604%" height="15" fill="rgb(211,143,1)" fg:x="79" fg:w="2"/><text x="6.5852%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.4154%" y="421" width="0.0802%" height="15" fill="rgb(224,96,15)" fg:x="80" fg:w="1"/><text x="6.6654%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.4154%" y="405" width="0.0802%" height="15" fill="rgb(222,4,38)" fg:x="80" fg:w="1"/><text x="6.6654%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.4154%" y="389" width="0.0802%" height="15" fill="rgb(253,228,15)" fg:x="80" fg:w="1"/><text x="6.6654%" y="399.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="6.4956%" y="485" width="0.0802%" height="15" fill="rgb(242,194,12)" fg:x="81" fg:w="1"/><text x="6.7456%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="6.4956%" y="469" width="0.0802%" height="15" fill="rgb(214,177,31)" fg:x="81" fg:w="1"/><text x="6.7456%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4956%" y="453" width="0.0802%" height="15" fill="rgb(226,58,51)" fg:x="81" fg:w="1"/><text x="6.7456%" y="463.50"></text></g><g><title>&lt;plugins_core::moving::actions::RemoveRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="6.5758%" y="453" width="0.0802%" height="15" fill="rgb(250,119,16)" fg:x="82" fg:w="1"/><text x="6.8258%" y="463.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="6.5758%" y="485" width="0.2406%" height="15" fill="rgb(223,128,53)" fg:x="82" fg:w="3"/><text x="6.8258%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="6.5758%" y="469" width="0.2406%" height="15" fill="rgb(251,199,15)" fg:x="82" fg:w="3"/><text x="6.8258%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="6.6560%" y="453" width="0.1604%" height="15" fill="rgb(235,168,42)" fg:x="83" fg:w="2"/><text x="6.9060%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.7362%" y="437" width="0.0802%" height="15" fill="rgb(250,210,17)" fg:x="84" fg:w="1"/><text x="6.9862%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.7362%" y="421" width="0.0802%" height="15" fill="rgb(226,36,41)" fg:x="84" fg:w="1"/><text x="6.9862%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.7362%" y="405" width="0.0802%" height="15" fill="rgb(225,87,10)" fg:x="84" fg:w="1"/><text x="6.9862%" y="415.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="6.8164%" y="453" width="0.0802%" height="15" fill="rgb(228,83,9)" fg:x="85" fg:w="1"/><text x="7.0664%" y="463.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="6.8164%" y="485" width="0.1604%" height="15" fill="rgb(225,16,36)" fg:x="85" fg:w="2"/><text x="7.0664%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="6.8164%" y="469" width="0.1604%" height="15" fill="rgb(242,198,13)" fg:x="85" fg:w="2"/><text x="7.0664%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="6.8966%" y="453" width="0.0802%" height="15" fill="rgb(239,25,51)" fg:x="86" fg:w="1"/><text x="7.1466%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.9767%" y="485" width="0.0802%" height="15" fill="rgb(239,28,37)" fg:x="87" fg:w="1"/><text x="7.2267%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="7.0569%" y="485" width="0.0802%" height="15" fill="rgb(234,70,17)" fg:x="88" fg:w="1"/><text x="7.3069%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="7.0569%" y="469" width="0.0802%" height="15" fill="rgb(231,215,53)" fg:x="88" fg:w="1"/><text x="7.3069%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (34 samples, 2.73%)</title><rect x="4.4908%" y="501" width="2.7265%" height="15" fill="rgb(218,140,42)" fg:x="56" fg:w="34"/><text x="4.7408%" y="511.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="7.1371%" y="485" width="0.0802%" height="15" fill="rgb(233,227,45)" fg:x="89" fg:w="1"/><text x="7.3871%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="7.3777%" y="485" width="0.1604%" height="15" fill="rgb(225,189,21)" fg:x="92" fg:w="2"/><text x="7.6277%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="7.3777%" y="469" width="0.1604%" height="15" fill="rgb(237,176,54)" fg:x="92" fg:w="2"/><text x="7.6277%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="7.3777%" y="453" width="0.1604%" height="15" fill="rgb(215,131,46)" fg:x="92" fg:w="2"/><text x="7.6277%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.4579%" y="437" width="0.0802%" height="15" fill="rgb(218,95,20)" fg:x="93" fg:w="1"/><text x="7.7079%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="7.4579%" y="421" width="0.0802%" height="15" fill="rgb(208,198,12)" fg:x="93" fg:w="1"/><text x="7.7079%" y="431.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="7.5381%" y="485" width="0.0802%" height="15" fill="rgb(239,107,50)" fg:x="94" fg:w="1"/><text x="7.7881%" y="495.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="7.6183%" y="485" width="0.0802%" height="15" fill="rgb(240,217,37)" fg:x="95" fg:w="1"/><text x="7.8683%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.6183%" y="469" width="0.0802%" height="15" fill="rgb(242,197,49)" fg:x="95" fg:w="1"/><text x="7.8683%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.88%)</title><rect x="7.2173%" y="501" width="0.8821%" height="15" fill="rgb(219,171,17)" fg:x="90" fg:w="11"/><text x="7.4673%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (5 samples, 0.40%)</title><rect x="7.6985%" y="485" width="0.4010%" height="15" fill="rgb(209,81,40)" fg:x="96" fg:w="5"/><text x="7.9485%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (5 samples, 0.40%)</title><rect x="7.6985%" y="469" width="0.4010%" height="15" fill="rgb(237,156,30)" fg:x="96" fg:w="5"/><text x="7.9485%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (5 samples, 0.40%)</title><rect x="7.6985%" y="453" width="0.4010%" height="15" fill="rgb(212,127,16)" fg:x="96" fg:w="5"/><text x="7.9485%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (5 samples, 0.40%)</title><rect x="7.6985%" y="437" width="0.4010%" height="15" fill="rgb(226,66,32)" fg:x="96" fg:w="5"/><text x="7.9485%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 0.40%)</title><rect x="7.6985%" y="421" width="0.4010%" height="15" fill="rgb(245,22,46)" fg:x="96" fg:w="5"/><text x="7.9485%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.40%)</title><rect x="7.6985%" y="405" width="0.4010%" height="15" fill="rgb(210,112,21)" fg:x="96" fg:w="5"/><text x="7.9485%" y="415.50"></text></g><g><title>statx (4 samples, 0.32%)</title><rect x="7.7787%" y="389" width="0.3208%" height="15" fill="rgb(207,118,39)" fg:x="97" fg:w="4"/><text x="8.0287%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.2598%" y="453" width="0.0802%" height="15" fill="rgb(205,206,35)" fg:x="103" fg:w="1"/><text x="8.5098%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.2598%" y="437" width="0.0802%" height="15" fill="rgb(222,120,2)" fg:x="103" fg:w="1"/><text x="8.5098%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.2598%" y="421" width="0.0802%" height="15" fill="rgb(205,38,18)" fg:x="103" fg:w="1"/><text x="8.5098%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.2598%" y="405" width="0.0802%" height="15" fill="rgb(226,61,2)" fg:x="103" fg:w="1"/><text x="8.5098%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.2598%" y="389" width="0.0802%" height="15" fill="rgb(242,161,23)" fg:x="103" fg:w="1"/><text x="8.5098%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.2598%" y="373" width="0.0802%" height="15" fill="rgb(213,13,52)" fg:x="103" fg:w="1"/><text x="8.5098%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.2598%" y="357" width="0.0802%" height="15" fill="rgb(246,209,47)" fg:x="103" fg:w="1"/><text x="8.5098%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.2598%" y="341" width="0.0802%" height="15" fill="rgb(214,41,3)" fg:x="103" fg:w="1"/><text x="8.5098%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.2598%" y="325" width="0.0802%" height="15" fill="rgb(236,119,38)" fg:x="103" fg:w="1"/><text x="8.5098%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.2598%" y="309" width="0.0802%" height="15" fill="rgb(218,50,11)" fg:x="103" fg:w="1"/><text x="8.5098%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.2598%" y="293" width="0.0802%" height="15" fill="rgb(228,38,11)" fg:x="103" fg:w="1"/><text x="8.5098%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.6608%" y="357" width="0.0802%" height="15" fill="rgb(212,13,9)" fg:x="108" fg:w="1"/><text x="8.9108%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.6608%" y="341" width="0.0802%" height="15" fill="rgb(208,211,9)" fg:x="108" fg:w="1"/><text x="8.9108%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.6608%" y="325" width="0.0802%" height="15" fill="rgb(239,39,32)" fg:x="108" fg:w="1"/><text x="8.9108%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.6608%" y="309" width="0.0802%" height="15" fill="rgb(254,179,26)" fg:x="108" fg:w="1"/><text x="8.9108%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.6608%" y="293" width="0.0802%" height="15" fill="rgb(249,165,28)" fg:x="108" fg:w="1"/><text x="8.9108%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.6608%" y="277" width="0.0802%" height="15" fill="rgb(225,59,50)" fg:x="108" fg:w="1"/><text x="8.9108%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6608%" y="261" width="0.0802%" height="15" fill="rgb(209,122,5)" fg:x="108" fg:w="1"/><text x="8.9108%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="8.5004%" y="437" width="0.3208%" height="15" fill="rgb(214,65,34)" fg:x="106" fg:w="4"/><text x="8.7504%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="8.5004%" y="421" width="0.3208%" height="15" fill="rgb(249,183,32)" fg:x="106" fg:w="4"/><text x="8.7504%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="8.5004%" y="405" width="0.3208%" height="15" fill="rgb(218,122,24)" fg:x="106" fg:w="4"/><text x="8.7504%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="8.5004%" y="389" width="0.3208%" height="15" fill="rgb(224,109,18)" fg:x="106" fg:w="4"/><text x="8.7504%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="8.5004%" y="373" width="0.3208%" height="15" fill="rgb(210,68,50)" fg:x="106" fg:w="4"/><text x="8.7504%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="8.7410%" y="357" width="0.0802%" height="15" fill="rgb(212,184,34)" fg:x="109" fg:w="1"/><text x="8.9910%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.7410%" y="341" width="0.0802%" height="15" fill="rgb(238,105,48)" fg:x="109" fg:w="1"/><text x="8.9910%" y="351.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (9 samples, 0.72%)</title><rect x="8.1796%" y="485" width="0.7217%" height="15" fill="rgb(222,134,54)" fg:x="102" fg:w="9"/><text x="8.4296%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.72%)</title><rect x="8.1796%" y="469" width="0.7217%" height="15" fill="rgb(246,24,43)" fg:x="102" fg:w="9"/><text x="8.4296%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="8.3400%" y="453" width="0.5613%" height="15" fill="rgb(227,169,22)" fg:x="104" fg:w="7"/><text x="8.5900%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8212%" y="437" width="0.0802%" height="15" fill="rgb(253,152,4)" fg:x="110" fg:w="1"/><text x="9.0712%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.9014%" y="437" width="0.0802%" height="15" fill="rgb(219,158,36)" fg:x="111" fg:w="1"/><text x="9.1514%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.9014%" y="421" width="0.0802%" height="15" fill="rgb(251,128,40)" fg:x="111" fg:w="1"/><text x="9.1514%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9014%" y="405" width="0.0802%" height="15" fill="rgb(254,101,39)" fg:x="111" fg:w="1"/><text x="9.1514%" y="415.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="8.9816%" y="341" width="0.0802%" height="15" fill="rgb(221,168,40)" fg:x="112" fg:w="1"/><text x="9.2316%" y="351.50"></text></g><g><title>glob::is_dir (6 samples, 0.48%)</title><rect x="8.9816%" y="437" width="0.4812%" height="15" fill="rgb(221,14,27)" fg:x="112" fg:w="6"/><text x="9.2316%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (6 samples, 0.48%)</title><rect x="8.9816%" y="421" width="0.4812%" height="15" fill="rgb(207,36,43)" fg:x="112" fg:w="6"/><text x="9.2316%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 0.48%)</title><rect x="8.9816%" y="405" width="0.4812%" height="15" fill="rgb(240,172,53)" fg:x="112" fg:w="6"/><text x="9.2316%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 0.48%)</title><rect x="8.9816%" y="389" width="0.4812%" height="15" fill="rgb(241,138,43)" fg:x="112" fg:w="6"/><text x="9.2316%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (6 samples, 0.48%)</title><rect x="8.9816%" y="373" width="0.4812%" height="15" fill="rgb(227,78,19)" fg:x="112" fg:w="6"/><text x="9.2316%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (6 samples, 0.48%)</title><rect x="8.9816%" y="357" width="0.4812%" height="15" fill="rgb(215,127,44)" fg:x="112" fg:w="6"/><text x="9.2316%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.40%)</title><rect x="9.0617%" y="341" width="0.4010%" height="15" fill="rgb(227,13,10)" fg:x="113" fg:w="5"/><text x="9.3117%" y="351.50"></text></g><g><title>statx (5 samples, 0.40%)</title><rect x="9.0617%" y="325" width="0.4010%" height="15" fill="rgb(249,177,6)" fg:x="113" fg:w="5"/><text x="9.3117%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.72%)</title><rect x="8.9014%" y="469" width="0.7217%" height="15" fill="rgb(215,154,26)" fg:x="111" fg:w="9"/><text x="9.1514%" y="479.50"></text></g><g><title>glob::fill_todo (9 samples, 0.72%)</title><rect x="8.9014%" y="453" width="0.7217%" height="15" fill="rgb(250,168,20)" fg:x="111" fg:w="9"/><text x="9.1514%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="9.4627%" y="437" width="0.1604%" height="15" fill="rgb(222,53,38)" fg:x="118" fg:w="2"/><text x="9.7127%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="9.4627%" y="421" width="0.1604%" height="15" fill="rgb(245,154,5)" fg:x="118" fg:w="2"/><text x="9.7127%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="9.4627%" y="405" width="0.1604%" height="15" fill="rgb(214,89,50)" fg:x="118" fg:w="2"/><text x="9.7127%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="9.4627%" y="389" width="0.1604%" height="15" fill="rgb(232,73,14)" fg:x="118" fg:w="2"/><text x="9.7127%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="9.4627%" y="373" width="0.1604%" height="15" fill="rgb(230,101,20)" fg:x="118" fg:w="2"/><text x="9.7127%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="9.4627%" y="357" width="0.1604%" height="15" fill="rgb(208,56,28)" fg:x="118" fg:w="2"/><text x="9.7127%" y="367.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="9.4627%" y="341" width="0.1604%" height="15" fill="rgb(247,205,22)" fg:x="118" fg:w="2"/><text x="9.7127%" y="351.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.6231%" y="437" width="0.0802%" height="15" fill="rgb(252,109,51)" fg:x="120" fg:w="1"/><text x="9.8731%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="9.6231%" y="421" width="0.0802%" height="15" fill="rgb(220,40,24)" fg:x="120" fg:w="1"/><text x="9.8731%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="9.6231%" y="405" width="0.0802%" height="15" fill="rgb(251,108,7)" fg:x="120" fg:w="1"/><text x="9.8731%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="9.6231%" y="389" width="0.0802%" height="15" fill="rgb(238,102,51)" fg:x="120" fg:w="1"/><text x="9.8731%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="9.6231%" y="373" width="0.0802%" height="15" fill="rgb(219,149,34)" fg:x="120" fg:w="1"/><text x="9.8731%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="9.6231%" y="357" width="0.0802%" height="15" fill="rgb(239,70,0)" fg:x="120" fg:w="1"/><text x="9.8731%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="9.6231%" y="341" width="0.0802%" height="15" fill="rgb(246,214,23)" fg:x="120" fg:w="1"/><text x="9.8731%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="9.6231%" y="325" width="0.0802%" height="15" fill="rgb(239,221,51)" fg:x="120" fg:w="1"/><text x="9.8731%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="9.6231%" y="309" width="0.0802%" height="15" fill="rgb(254,62,14)" fg:x="120" fg:w="1"/><text x="9.8731%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.6231%" y="293" width="0.0802%" height="15" fill="rgb(253,57,33)" fg:x="120" fg:w="1"/><text x="9.8731%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="9.6231%" y="277" width="0.0802%" height="15" fill="rgb(229,34,6)" fg:x="120" fg:w="1"/><text x="9.8731%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="9.6231%" y="261" width="0.0802%" height="15" fill="rgb(235,191,23)" fg:x="120" fg:w="1"/><text x="9.8731%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="9.6231%" y="245" width="0.0802%" height="15" fill="rgb(217,207,27)" fg:x="120" fg:w="1"/><text x="9.8731%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.9439%" y="389" width="0.0802%" height="15" fill="rgb(232,41,44)" fg:x="124" fg:w="1"/><text x="10.1939%" y="399.50"></text></g><g><title>glob::Pattern::new (6 samples, 0.48%)</title><rect x="9.7033%" y="437" width="0.4812%" height="15" fill="rgb(221,188,19)" fg:x="121" fg:w="6"/><text x="9.9533%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="9.9439%" y="421" width="0.2406%" height="15" fill="rgb(245,180,45)" fg:x="124" fg:w="3"/><text x="10.1939%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="9.9439%" y="405" width="0.2406%" height="15" fill="rgb(250,220,42)" fg:x="124" fg:w="3"/><text x="10.1939%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="10.0241%" y="389" width="0.1604%" height="15" fill="rgb(234,16,34)" fg:x="125" fg:w="2"/><text x="10.2741%" y="399.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (27 samples, 2.17%)</title><rect x="8.0994%" y="501" width="2.1652%" height="15" fill="rgb(233,217,23)" fg:x="101" fg:w="27"/><text x="8.3494%" y="511.50">&lt;..</text></g><g><title>plugins_rune::sources::load_directory_sources (17 samples, 1.36%)</title><rect x="8.9014%" y="485" width="1.3633%" height="15" fill="rgb(209,22,46)" fg:x="111" fg:w="17"/><text x="9.1514%" y="495.50"></text></g><g><title>glob::glob (8 samples, 0.64%)</title><rect x="9.6231%" y="469" width="0.6415%" height="15" fill="rgb(213,101,18)" fg:x="120" fg:w="8"/><text x="9.8731%" y="479.50"></text></g><g><title>glob::glob_with (8 samples, 0.64%)</title><rect x="9.6231%" y="453" width="0.6415%" height="15" fill="rgb(215,179,52)" fg:x="120" fg:w="8"/><text x="9.8731%" y="463.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="10.1844%" y="437" width="0.0802%" height="15" fill="rgb(223,50,25)" fg:x="127" fg:w="1"/><text x="10.4344%" y="447.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="10.2646%" y="501" width="0.0802%" height="15" fill="rgb(224,51,44)" fg:x="128" fg:w="1"/><text x="10.5146%" y="511.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="10.2646%" y="485" width="0.0802%" height="15" fill="rgb(224,13,54)" fg:x="128" fg:w="1"/><text x="10.5146%" y="495.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="10.2646%" y="469" width="0.0802%" height="15" fill="rgb(219,58,47)" fg:x="128" fg:w="1"/><text x="10.5146%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="10.2646%" y="453" width="0.0802%" height="15" fill="rgb(246,124,34)" fg:x="128" fg:w="1"/><text x="10.5146%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.08%)</title><rect x="10.2646%" y="437" width="0.0802%" height="15" fill="rgb(245,109,25)" fg:x="128" fg:w="1"/><text x="10.5146%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3448%" y="501" width="0.0802%" height="15" fill="rgb(235,48,23)" fg:x="129" fg:w="1"/><text x="10.5948%" y="511.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="10.5052%" y="485" width="0.3208%" height="15" fill="rgb(229,203,36)" fg:x="131" fg:w="4"/><text x="10.7552%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (6 samples, 0.48%)</title><rect x="10.4250%" y="501" width="0.4812%" height="15" fill="rgb(234,180,9)" fg:x="130" fg:w="6"/><text x="10.6750%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="10.8260%" y="485" width="0.0802%" height="15" fill="rgb(228,98,45)" fg:x="135" fg:w="1"/><text x="11.0760%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8260%" y="469" width="0.0802%" height="15" fill="rgb(240,24,36)" fg:x="135" fg:w="1"/><text x="11.0760%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (88 samples, 7.06%)</title><rect x="4.4106%" y="517" width="7.0569%" height="15" fill="rgb(227,154,19)" fg:x="55" fg:w="88"/><text x="4.6606%" y="527.50">kernel::p..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.56%)</title><rect x="10.9062%" y="501" width="0.5613%" height="15" fill="rgb(231,2,48)" fg:x="136" fg:w="7"/><text x="11.1562%" y="511.50"></text></g><g><title>clock_gettime (7 samples, 0.56%)</title><rect x="10.9062%" y="485" width="0.5613%" height="15" fill="rgb(219,216,0)" fg:x="136" fg:w="7"/><text x="11.1562%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="11.6279%" y="469" width="0.0802%" height="15" fill="rgb(251,88,0)" fg:x="145" fg:w="1"/><text x="11.8779%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="11.6279%" y="485" width="0.1604%" height="15" fill="rgb(242,45,45)" fg:x="145" fg:w="2"/><text x="11.8779%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7081%" y="469" width="0.0802%" height="15" fill="rgb(218,149,45)" fg:x="146" fg:w="1"/><text x="11.9581%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (96 samples, 7.70%)</title><rect x="4.1700%" y="581" width="7.6985%" height="15" fill="rgb(247,194,10)" fg:x="52" fg:w="96"/><text x="4.4200%" y="591.50">&lt;engine::do..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (96 samples, 7.70%)</title><rect x="4.1700%" y="565" width="7.6985%" height="15" fill="rgb(234,33,37)" fg:x="52" fg:w="96"/><text x="4.4200%" y="575.50">engine::dom..</text></g><g><title>engine::session::Session::new (95 samples, 7.62%)</title><rect x="4.2502%" y="549" width="7.6183%" height="15" fill="rgb(218,61,13)" fg:x="53" fg:w="95"/><text x="4.5002%" y="559.50">engine::se..</text></g><g><title>engine::session::Session::initialize (94 samples, 7.54%)</title><rect x="4.3304%" y="533" width="7.5381%" height="15" fill="rgb(210,80,52)" fg:x="54" fg:w="94"/><text x="4.5804%" y="543.50">engine::se..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.40%)</title><rect x="11.4675%" y="517" width="0.4010%" height="15" fill="rgb(218,203,27)" fg:x="143" fg:w="5"/><text x="11.7175%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="11.4675%" y="501" width="0.4010%" height="15" fill="rgb(209,126,33)" fg:x="143" fg:w="5"/><text x="11.7175%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7883%" y="485" width="0.0802%" height="15" fill="rgb(234,173,41)" fg:x="147" fg:w="1"/><text x="12.0383%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="11.9487%" y="565" width="0.1604%" height="15" fill="rgb(228,166,9)" fg:x="149" fg:w="2"/><text x="12.1987%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="11.9487%" y="549" width="0.1604%" height="15" fill="rgb(208,124,43)" fg:x="149" fg:w="2"/><text x="12.1987%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="11.9487%" y="533" width="0.1604%" height="15" fill="rgb(212,154,38)" fg:x="149" fg:w="2"/><text x="12.1987%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="11.9487%" y="517" width="0.1604%" height="15" fill="rgb(246,179,35)" fg:x="149" fg:w="2"/><text x="12.1987%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.0289%" y="501" width="0.0802%" height="15" fill="rgb(251,3,50)" fg:x="150" fg:w="1"/><text x="12.2789%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0289%" y="485" width="0.0802%" height="15" fill="rgb(219,96,8)" fg:x="150" fg:w="1"/><text x="12.2789%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="12.1091%" y="565" width="0.0802%" height="15" fill="rgb(251,216,33)" fg:x="151" fg:w="1"/><text x="12.3591%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1091%" y="549" width="0.0802%" height="15" fill="rgb(243,145,29)" fg:x="151" fg:w="1"/><text x="12.3591%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="12.1893%" y="549" width="0.1604%" height="15" fill="rgb(210,75,20)" fg:x="152" fg:w="2"/><text x="12.4393%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2694%" y="533" width="0.0802%" height="15" fill="rgb(235,56,8)" fg:x="153" fg:w="1"/><text x="12.5194%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2694%" y="517" width="0.0802%" height="15" fill="rgb(226,175,49)" fg:x="153" fg:w="1"/><text x="12.5194%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.2694%" y="501" width="0.0802%" height="15" fill="rgb(242,204,23)" fg:x="153" fg:w="1"/><text x="12.5194%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.2694%" y="485" width="0.0802%" height="15" fill="rgb(225,104,24)" fg:x="153" fg:w="1"/><text x="12.5194%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.2694%" y="469" width="0.0802%" height="15" fill="rgb(253,34,1)" fg:x="153" fg:w="1"/><text x="12.5194%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.2694%" y="453" width="0.0802%" height="15" fill="rgb(233,199,23)" fg:x="153" fg:w="1"/><text x="12.5194%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.2694%" y="437" width="0.0802%" height="15" fill="rgb(247,7,51)" fg:x="153" fg:w="1"/><text x="12.5194%" y="447.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="12.3496%" y="549" width="0.0802%" height="15" fill="rgb(214,146,12)" fg:x="154" fg:w="1"/><text x="12.5996%" y="559.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="12.3496%" y="533" width="0.0802%" height="15" fill="rgb(234,181,43)" fg:x="154" fg:w="1"/><text x="12.5996%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="12.3496%" y="517" width="0.0802%" height="15" fill="rgb(239,148,6)" fg:x="154" fg:w="1"/><text x="12.5996%" y="527.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="12.3496%" y="501" width="0.0802%" height="15" fill="rgb(206,151,17)" fg:x="154" fg:w="1"/><text x="12.5996%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="12.3496%" y="485" width="0.0802%" height="15" fill="rgb(213,215,10)" fg:x="154" fg:w="1"/><text x="12.5996%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="12.3496%" y="469" width="0.0802%" height="15" fill="rgb(215,220,44)" fg:x="154" fg:w="1"/><text x="12.5996%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="12.3496%" y="453" width="0.0802%" height="15" fill="rgb(245,205,37)" fg:x="154" fg:w="1"/><text x="12.5996%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="12.3496%" y="437" width="0.0802%" height="15" fill="rgb(245,130,43)" fg:x="154" fg:w="1"/><text x="12.5996%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.4298%" y="517" width="0.0802%" height="15" fill="rgb(231,227,38)" fg:x="155" fg:w="1"/><text x="12.6798%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="12.4298%" y="501" width="0.0802%" height="15" fill="rgb(233,185,4)" fg:x="155" fg:w="1"/><text x="12.6798%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4298%" y="485" width="0.0802%" height="15" fill="rgb(224,154,43)" fg:x="155" fg:w="1"/><text x="12.6798%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="12.5100%" y="469" width="0.0802%" height="15" fill="rgb(235,156,15)" fg:x="156" fg:w="1"/><text x="12.7600%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.5100%" y="453" width="0.0802%" height="15" fill="rgb(211,55,43)" fg:x="156" fg:w="1"/><text x="12.7600%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.5100%" y="437" width="0.0802%" height="15" fill="rgb(247,149,40)" fg:x="156" fg:w="1"/><text x="12.7600%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.5100%" y="421" width="0.0802%" height="15" fill="rgb(232,171,16)" fg:x="156" fg:w="1"/><text x="12.7600%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.5100%" y="405" width="0.0802%" height="15" fill="rgb(215,117,49)" fg:x="156" fg:w="1"/><text x="12.7600%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.5100%" y="389" width="0.0802%" height="15" fill="rgb(246,194,11)" fg:x="156" fg:w="1"/><text x="12.7600%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.5100%" y="373" width="0.0802%" height="15" fill="rgb(242,101,44)" fg:x="156" fg:w="1"/><text x="12.7600%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5100%" y="357" width="0.0802%" height="15" fill="rgb(226,174,6)" fg:x="156" fg:w="1"/><text x="12.7600%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="12.5902%" y="437" width="0.2406%" height="15" fill="rgb(213,150,20)" fg:x="157" fg:w="3"/><text x="12.8402%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="12.5902%" y="421" width="0.2406%" height="15" fill="rgb(222,124,42)" fg:x="157" fg:w="3"/><text x="12.8402%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="12.5902%" y="405" width="0.2406%" height="15" fill="rgb(250,19,47)" fg:x="157" fg:w="3"/><text x="12.8402%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.6704%" y="389" width="0.1604%" height="15" fill="rgb(241,217,19)" fg:x="158" fg:w="2"/><text x="12.9204%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.7506%" y="373" width="0.0802%" height="15" fill="rgb(207,210,34)" fg:x="159" fg:w="1"/><text x="13.0006%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.7506%" y="357" width="0.0802%" height="15" fill="rgb(244,45,4)" fg:x="159" fg:w="1"/><text x="13.0006%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.7506%" y="341" width="0.0802%" height="15" fill="rgb(252,134,50)" fg:x="159" fg:w="1"/><text x="13.0006%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="12.5902%" y="453" width="0.4010%" height="15" fill="rgb(238,74,2)" fg:x="157" fg:w="5"/><text x="12.8402%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="12.8308%" y="437" width="0.1604%" height="15" fill="rgb(226,58,46)" fg:x="160" fg:w="2"/><text x="13.0808%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.0714%" y="437" width="0.0802%" height="15" fill="rgb(232,83,35)" fg:x="163" fg:w="1"/><text x="13.3214%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.0714%" y="421" width="0.0802%" height="15" fill="rgb(212,148,47)" fg:x="163" fg:w="1"/><text x="13.3214%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.0714%" y="405" width="0.0802%" height="15" fill="rgb(235,29,1)" fg:x="163" fg:w="1"/><text x="13.3214%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.0714%" y="389" width="0.0802%" height="15" fill="rgb(247,55,37)" fg:x="163" fg:w="1"/><text x="13.3214%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="13.1516%" y="437" width="0.3208%" height="15" fill="rgb(222,48,3)" fg:x="164" fg:w="4"/><text x="13.4016%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="13.1516%" y="421" width="0.3208%" height="15" fill="rgb(234,21,33)" fg:x="164" fg:w="4"/><text x="13.4016%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.3921%" y="405" width="0.0802%" height="15" fill="rgb(247,178,53)" fg:x="167" fg:w="1"/><text x="13.6421%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.3921%" y="389" width="0.0802%" height="15" fill="rgb(225,75,7)" fg:x="167" fg:w="1"/><text x="13.6421%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.3921%" y="373" width="0.0802%" height="15" fill="rgb(219,199,7)" fg:x="167" fg:w="1"/><text x="13.6421%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.3921%" y="357" width="0.0802%" height="15" fill="rgb(209,93,42)" fg:x="167" fg:w="1"/><text x="13.6421%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.3921%" y="341" width="0.0802%" height="15" fill="rgb(240,175,17)" fg:x="167" fg:w="1"/><text x="13.6421%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="13.4723%" y="373" width="0.2406%" height="15" fill="rgb(232,106,7)" fg:x="168" fg:w="3"/><text x="13.7223%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="13.4723%" y="357" width="0.2406%" height="15" fill="rgb(242,106,43)" fg:x="168" fg:w="3"/><text x="13.7223%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.6327%" y="341" width="0.0802%" height="15" fill="rgb(242,61,37)" fg:x="170" fg:w="1"/><text x="13.8827%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.6327%" y="325" width="0.0802%" height="15" fill="rgb(205,72,10)" fg:x="170" fg:w="1"/><text x="13.8827%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="13.4723%" y="389" width="0.3208%" height="15" fill="rgb(214,184,36)" fg:x="168" fg:w="4"/><text x="13.7223%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7129%" y="373" width="0.0802%" height="15" fill="rgb(206,107,18)" fg:x="171" fg:w="1"/><text x="13.9629%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.7129%" y="357" width="0.0802%" height="15" fill="rgb(210,75,5)" fg:x="171" fg:w="1"/><text x="13.9629%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.7129%" y="341" width="0.0802%" height="15" fill="rgb(205,3,19)" fg:x="171" fg:w="1"/><text x="13.9629%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="13.4723%" y="421" width="0.4010%" height="15" fill="rgb(207,181,42)" fg:x="168" fg:w="5"/><text x="13.7223%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="13.4723%" y="405" width="0.4010%" height="15" fill="rgb(229,179,43)" fg:x="168" fg:w="5"/><text x="13.7223%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.7931%" y="389" width="0.0802%" height="15" fill="rgb(246,95,30)" fg:x="172" fg:w="1"/><text x="14.0431%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.1941%" y="373" width="0.0802%" height="15" fill="rgb(234,144,45)" fg:x="177" fg:w="1"/><text x="14.4441%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="13.8733%" y="421" width="0.4812%" height="15" fill="rgb(250,54,25)" fg:x="173" fg:w="6"/><text x="14.1233%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="14.0337%" y="405" width="0.3208%" height="15" fill="rgb(215,195,40)" fg:x="175" fg:w="4"/><text x="14.2837%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="14.1941%" y="389" width="0.1604%" height="15" fill="rgb(233,188,42)" fg:x="177" fg:w="2"/><text x="14.4441%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="14.2743%" y="373" width="0.0802%" height="15" fill="rgb(247,227,35)" fg:x="178" fg:w="1"/><text x="14.5243%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="14.3545%" y="405" width="0.3208%" height="15" fill="rgb(249,124,27)" fg:x="179" fg:w="4"/><text x="14.6045%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.5148%" y="389" width="0.1604%" height="15" fill="rgb(219,207,25)" fg:x="181" fg:w="2"/><text x="14.7648%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.5950%" y="373" width="0.0802%" height="15" fill="rgb(241,216,47)" fg:x="182" fg:w="1"/><text x="14.8450%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5950%" y="357" width="0.0802%" height="15" fill="rgb(233,82,50)" fg:x="182" fg:w="1"/><text x="14.8450%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.5950%" y="341" width="0.0802%" height="15" fill="rgb(232,63,2)" fg:x="182" fg:w="1"/><text x="14.8450%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.5950%" y="325" width="0.0802%" height="15" fill="rgb(236,184,28)" fg:x="182" fg:w="1"/><text x="14.8450%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.5950%" y="309" width="0.0802%" height="15" fill="rgb(254,63,27)" fg:x="182" fg:w="1"/><text x="14.8450%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="14.6752%" y="389" width="0.2406%" height="15" fill="rgb(253,106,28)" fg:x="183" fg:w="3"/><text x="14.9252%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.6752%" y="373" width="0.2406%" height="15" fill="rgb(225,141,39)" fg:x="183" fg:w="3"/><text x="14.9252%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.8356%" y="357" width="0.0802%" height="15" fill="rgb(222,157,20)" fg:x="185" fg:w="1"/><text x="15.0856%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8356%" y="341" width="0.0802%" height="15" fill="rgb(210,190,9)" fg:x="185" fg:w="1"/><text x="15.0856%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9158%" y="389" width="0.0802%" height="15" fill="rgb(242,167,7)" fg:x="186" fg:w="1"/><text x="15.1658%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.9158%" y="373" width="0.0802%" height="15" fill="rgb(227,82,41)" fg:x="186" fg:w="1"/><text x="15.1658%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.9158%" y="357" width="0.0802%" height="15" fill="rgb(222,131,13)" fg:x="186" fg:w="1"/><text x="15.1658%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.9158%" y="341" width="0.0802%" height="15" fill="rgb(221,98,26)" fg:x="186" fg:w="1"/><text x="15.1658%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="14.6752%" y="405" width="0.4812%" height="15" fill="rgb(251,63,52)" fg:x="183" fg:w="6"/><text x="14.9252%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.9960%" y="389" width="0.1604%" height="15" fill="rgb(246,25,43)" fg:x="187" fg:w="2"/><text x="15.2460%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.0762%" y="373" width="0.0802%" height="15" fill="rgb(247,167,15)" fg:x="188" fg:w="1"/><text x="15.3262%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.0762%" y="357" width="0.0802%" height="15" fill="rgb(240,104,42)" fg:x="188" fg:w="1"/><text x="15.3262%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="14.3545%" y="421" width="0.8821%" height="15" fill="rgb(224,54,6)" fg:x="179" fg:w="11"/><text x="14.6045%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.1564%" y="405" width="0.0802%" height="15" fill="rgb(244,108,35)" fg:x="189" fg:w="1"/><text x="15.4064%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.92%)</title><rect x="13.4723%" y="437" width="1.9246%" height="15" fill="rgb(216,154,2)" fg:x="168" fg:w="24"/><text x="13.7223%" y="447.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.2366%" y="421" width="0.1604%" height="15" fill="rgb(222,8,47)" fg:x="190" fg:w="2"/><text x="15.4866%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 2.97%)</title><rect x="12.5902%" y="469" width="2.9671%" height="15" fill="rgb(252,93,1)" fg:x="157" fg:w="37"/><text x="12.8402%" y="479.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.57%)</title><rect x="12.9912%" y="453" width="2.5662%" height="15" fill="rgb(223,226,51)" fg:x="162" fg:w="32"/><text x="13.2412%" y="463.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.3970%" y="437" width="0.1604%" height="15" fill="rgb(206,147,9)" fg:x="192" fg:w="2"/><text x="15.6470%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.3970%" y="421" width="0.1604%" height="15" fill="rgb(248,180,41)" fg:x="192" fg:w="2"/><text x="15.6470%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.3970%" y="405" width="0.1604%" height="15" fill="rgb(209,47,50)" fg:x="192" fg:w="2"/><text x="15.6470%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5573%" y="437" width="0.0802%" height="15" fill="rgb(243,65,31)" fg:x="194" fg:w="1"/><text x="15.8073%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.6375%" y="437" width="0.0802%" height="15" fill="rgb(228,128,1)" fg:x="195" fg:w="1"/><text x="15.8875%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6375%" y="421" width="0.0802%" height="15" fill="rgb(231,192,16)" fg:x="195" fg:w="1"/><text x="15.8875%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7979%" y="421" width="0.0802%" height="15" fill="rgb(224,26,40)" fg:x="197" fg:w="1"/><text x="16.0479%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.8781%" y="421" width="0.0802%" height="15" fill="rgb(214,192,17)" fg:x="198" fg:w="1"/><text x="16.1281%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9583%" y="405" width="0.0802%" height="15" fill="rgb(225,147,18)" fg:x="199" fg:w="1"/><text x="16.2083%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.0385%" y="405" width="0.0802%" height="15" fill="rgb(205,35,11)" fg:x="200" fg:w="1"/><text x="16.2885%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1187%" y="389" width="0.0802%" height="15" fill="rgb(242,40,42)" fg:x="201" fg:w="1"/><text x="16.3687%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="16.1989%" y="389" width="0.2406%" height="15" fill="rgb(250,170,13)" fg:x="202" fg:w="3"/><text x="16.4489%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.3593%" y="373" width="0.0802%" height="15" fill="rgb(240,161,28)" fg:x="204" fg:w="1"/><text x="16.6093%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.3593%" y="357" width="0.0802%" height="15" fill="rgb(245,179,12)" fg:x="204" fg:w="1"/><text x="16.6093%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4395%" y="373" width="0.0802%" height="15" fill="rgb(250,92,32)" fg:x="205" fg:w="1"/><text x="16.6895%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="15.5573%" y="469" width="1.1227%" height="15" fill="rgb(233,10,40)" fg:x="194" fg:w="14"/><text x="15.8073%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="15.5573%" y="453" width="1.1227%" height="15" fill="rgb(217,98,1)" fg:x="194" fg:w="14"/><text x="15.8073%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="15.7177%" y="437" width="0.9623%" height="15" fill="rgb(238,202,7)" fg:x="196" fg:w="12"/><text x="15.9677%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="15.9583%" y="421" width="0.7217%" height="15" fill="rgb(222,91,3)" fg:x="199" fg:w="9"/><text x="16.2083%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="16.1187%" y="405" width="0.5613%" height="15" fill="rgb(211,170,49)" fg:x="201" fg:w="7"/><text x="16.3687%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="16.4395%" y="389" width="0.2406%" height="15" fill="rgb(253,139,18)" fg:x="205" fg:w="3"/><text x="16.6895%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.5196%" y="373" width="0.1604%" height="15" fill="rgb(222,4,43)" fg:x="206" fg:w="2"/><text x="16.7696%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5998%" y="357" width="0.0802%" height="15" fill="rgb(207,205,12)" fg:x="207" fg:w="1"/><text x="16.8498%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6800%" y="437" width="0.0802%" height="15" fill="rgb(216,159,46)" fg:x="208" fg:w="1"/><text x="16.9300%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.7602%" y="373" width="0.0802%" height="15" fill="rgb(236,115,1)" fg:x="209" fg:w="1"/><text x="17.0102%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="16.6800%" y="453" width="0.2406%" height="15" fill="rgb(251,35,33)" fg:x="208" fg:w="3"/><text x="16.9300%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="16.7602%" y="437" width="0.1604%" height="15" fill="rgb(248,62,51)" fg:x="209" fg:w="2"/><text x="17.0102%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="16.7602%" y="421" width="0.1604%" height="15" fill="rgb(254,180,19)" fg:x="209" fg:w="2"/><text x="17.0102%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="16.7602%" y="405" width="0.1604%" height="15" fill="rgb(217,100,32)" fg:x="209" fg:w="2"/><text x="17.0102%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.16%)</title><rect x="16.7602%" y="389" width="0.1604%" height="15" fill="rgb(224,71,22)" fg:x="209" fg:w="2"/><text x="17.0102%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="16.8404%" y="373" width="0.0802%" height="15" fill="rgb(251,185,33)" fg:x="210" fg:w="1"/><text x="17.0904%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.64%)</title><rect x="17.0008%" y="421" width="0.6415%" height="15" fill="rgb(209,75,48)" fg:x="212" fg:w="8"/><text x="17.2508%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.32%)</title><rect x="17.3216%" y="405" width="0.3208%" height="15" fill="rgb(253,190,16)" fg:x="216" fg:w="4"/><text x="17.5716%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6423%" y="421" width="0.0802%" height="15" fill="rgb(226,140,1)" fg:x="220" fg:w="1"/><text x="17.8923%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6423%" y="405" width="0.0802%" height="15" fill="rgb(206,75,30)" fg:x="220" fg:w="1"/><text x="17.8923%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.6423%" y="389" width="0.0802%" height="15" fill="rgb(231,208,37)" fg:x="220" fg:w="1"/><text x="17.8923%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="17.6423%" y="373" width="0.0802%" height="15" fill="rgb(238,136,40)" fg:x="220" fg:w="1"/><text x="17.8923%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7225%" y="421" width="0.0802%" height="15" fill="rgb(247,137,17)" fg:x="221" fg:w="1"/><text x="17.9725%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="17.8027%" y="421" width="0.2406%" height="15" fill="rgb(240,60,40)" fg:x="222" fg:w="3"/><text x="18.0527%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="17.8027%" y="405" width="0.2406%" height="15" fill="rgb(236,68,50)" fg:x="222" fg:w="3"/><text x="18.0527%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="17.8027%" y="389" width="0.2406%" height="15" fill="rgb(230,42,12)" fg:x="222" fg:w="3"/><text x="18.0527%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="18.2839%" y="389" width="0.1604%" height="15" fill="rgb(219,16,16)" fg:x="228" fg:w="2"/><text x="18.5339%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="18.4443%" y="373" width="0.2406%" height="15" fill="rgb(220,38,35)" fg:x="230" fg:w="3"/><text x="18.6943%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.5245%" y="357" width="0.1604%" height="15" fill="rgb(228,33,1)" fg:x="231" fg:w="2"/><text x="18.7745%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.6848%" y="373" width="0.0802%" height="15" fill="rgb(241,46,31)" fg:x="233" fg:w="1"/><text x="18.9348%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.6848%" y="357" width="0.0802%" height="15" fill="rgb(232,58,20)" fg:x="233" fg:w="1"/><text x="18.9348%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.6848%" y="341" width="0.0802%" height="15" fill="rgb(206,228,53)" fg:x="233" fg:w="1"/><text x="18.9348%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.6848%" y="325" width="0.0802%" height="15" fill="rgb(206,88,33)" fg:x="233" fg:w="1"/><text x="18.9348%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.9254%" y="309" width="0.1604%" height="15" fill="rgb(238,69,7)" fg:x="236" fg:w="2"/><text x="19.1754%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.9254%" y="293" width="0.1604%" height="15" fill="rgb(250,21,46)" fg:x="236" fg:w="2"/><text x="19.1754%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2462%" y="293" width="0.0802%" height="15" fill="rgb(215,212,21)" fg:x="240" fg:w="1"/><text x="19.4962%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="18.9254%" y="325" width="0.4812%" height="15" fill="rgb(211,35,12)" fg:x="236" fg:w="6"/><text x="19.1754%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="19.0858%" y="309" width="0.3208%" height="15" fill="rgb(231,184,16)" fg:x="238" fg:w="4"/><text x="19.3358%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="19.3264%" y="293" width="0.0802%" height="15" fill="rgb(242,140,15)" fg:x="241" fg:w="1"/><text x="19.5764%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="19.3264%" y="277" width="0.0802%" height="15" fill="rgb(220,37,14)" fg:x="241" fg:w="1"/><text x="19.5764%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="18.8452%" y="357" width="0.6415%" height="15" fill="rgb(223,146,22)" fg:x="235" fg:w="8"/><text x="19.0952%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="18.9254%" y="341" width="0.5613%" height="15" fill="rgb(216,132,15)" fg:x="236" fg:w="7"/><text x="19.1754%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4066%" y="325" width="0.0802%" height="15" fill="rgb(248,83,5)" fg:x="242" fg:w="1"/><text x="19.6566%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (18 samples, 1.44%)</title><rect x="18.2037%" y="405" width="1.4435%" height="15" fill="rgb(231,206,48)" fg:x="227" fg:w="18"/><text x="18.4537%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="18.4443%" y="389" width="1.2029%" height="15" fill="rgb(253,185,37)" fg:x="230" fg:w="15"/><text x="18.6943%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="18.7650%" y="373" width="0.8821%" height="15" fill="rgb(208,21,44)" fg:x="234" fg:w="11"/><text x="19.0150%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.4868%" y="357" width="0.1604%" height="15" fill="rgb(236,125,4)" fg:x="243" fg:w="2"/><text x="19.7368%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6472%" y="405" width="0.0802%" height="15" fill="rgb(226,134,25)" fg:x="245" fg:w="1"/><text x="19.8972%" y="415.50"></text></g><g><title>engine::session::Session::flush (97 samples, 7.78%)</title><rect x="12.1893%" y="565" width="7.7787%" height="15" fill="rgb(250,201,12)" fg:x="152" fg:w="97"/><text x="12.4393%" y="575.50">engine::ses..</text></g><g><title>engine::session::state::State::close (94 samples, 7.54%)</title><rect x="12.4298%" y="549" width="7.5381%" height="15" fill="rgb(225,92,18)" fg:x="155" fg:w="94"/><text x="12.6798%" y="559.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (94 samples, 7.54%)</title><rect x="12.4298%" y="533" width="7.5381%" height="15" fill="rgb(227,35,22)" fg:x="155" fg:w="94"/><text x="12.6798%" y="543.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (93 samples, 7.46%)</title><rect x="12.5100%" y="517" width="7.4579%" height="15" fill="rgb(214,180,52)" fg:x="156" fg:w="93"/><text x="12.7600%" y="527.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (93 samples, 7.46%)</title><rect x="12.5100%" y="501" width="7.4579%" height="15" fill="rgb(233,55,38)" fg:x="156" fg:w="93"/><text x="12.7600%" y="511.50">&lt;alloc::ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (93 samples, 7.46%)</title><rect x="12.5100%" y="485" width="7.4579%" height="15" fill="rgb(249,171,43)" fg:x="156" fg:w="93"/><text x="12.7600%" y="495.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (41 samples, 3.29%)</title><rect x="16.6800%" y="469" width="3.2879%" height="15" fill="rgb(239,87,2)" fg:x="208" fg:w="41"/><text x="16.9300%" y="479.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (38 samples, 3.05%)</title><rect x="16.9206%" y="453" width="3.0473%" height="15" fill="rgb(248,141,5)" fg:x="211" fg:w="38"/><text x="17.1706%" y="463.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 3.05%)</title><rect x="16.9206%" y="437" width="3.0473%" height="15" fill="rgb(238,33,42)" fg:x="211" fg:w="38"/><text x="17.1706%" y="447.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.92%)</title><rect x="18.0433%" y="421" width="1.9246%" height="15" fill="rgb(231,57,19)" fg:x="225" fg:w="24"/><text x="18.2933%" y="431.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.7273%" y="405" width="0.2406%" height="15" fill="rgb(214,78,53)" fg:x="246" fg:w="3"/><text x="19.9773%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="19.9679%" y="533" width="0.0802%" height="15" fill="rgb(206,132,29)" fg:x="249" fg:w="1"/><text x="20.2179%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.9679%" y="517" width="0.0802%" height="15" fill="rgb(248,174,31)" fg:x="249" fg:w="1"/><text x="20.2179%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9679%" y="501" width="0.0802%" height="15" fill="rgb(221,87,13)" fg:x="249" fg:w="1"/><text x="20.2179%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="20.0481%" y="533" width="0.0802%" height="15" fill="rgb(223,197,17)" fg:x="250" fg:w="1"/><text x="20.2981%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="20.0481%" y="517" width="0.0802%" height="15" fill="rgb(220,144,50)" fg:x="250" fg:w="1"/><text x="20.2981%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="20.1283%" y="517" width="0.0802%" height="15" fill="rgb(244,201,11)" fg:x="251" fg:w="1"/><text x="20.3783%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.2085%" y="485" width="0.0802%" height="15" fill="rgb(249,81,34)" fg:x="252" fg:w="1"/><text x="20.4585%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.2085%" y="469" width="0.0802%" height="15" fill="rgb(205,161,12)" fg:x="252" fg:w="1"/><text x="20.4585%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.40%)</title><rect x="19.9679%" y="565" width="0.4010%" height="15" fill="rgb(252,139,50)" fg:x="249" fg:w="5"/><text x="20.2179%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.40%)</title><rect x="19.9679%" y="549" width="0.4010%" height="15" fill="rgb(205,169,14)" fg:x="249" fg:w="5"/><text x="20.2179%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="20.1283%" y="533" width="0.2406%" height="15" fill="rgb(248,198,33)" fg:x="251" fg:w="3"/><text x="20.3783%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.2085%" y="517" width="0.1604%" height="15" fill="rgb(236,23,21)" fg:x="252" fg:w="2"/><text x="20.4585%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="20.2085%" y="501" width="0.1604%" height="15" fill="rgb(231,13,38)" fg:x="252" fg:w="2"/><text x="20.4585%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2887%" y="485" width="0.0802%" height="15" fill="rgb(239,139,21)" fg:x="253" fg:w="1"/><text x="20.5387%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.2887%" y="469" width="0.0802%" height="15" fill="rgb(222,164,45)" fg:x="253" fg:w="1"/><text x="20.5387%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="20.2887%" y="453" width="0.0802%" height="15" fill="rgb(230,52,27)" fg:x="253" fg:w="1"/><text x="20.5387%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.5293%" y="485" width="0.0802%" height="15" fill="rgb(227,143,42)" fg:x="256" fg:w="1"/><text x="20.7793%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5293%" y="469" width="0.0802%" height="15" fill="rgb(249,127,1)" fg:x="256" fg:w="1"/><text x="20.7793%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="20.4491%" y="533" width="0.2406%" height="15" fill="rgb(243,107,26)" fg:x="255" fg:w="3"/><text x="20.6991%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.5293%" y="517" width="0.1604%" height="15" fill="rgb(225,7,45)" fg:x="256" fg:w="2"/><text x="20.7793%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.5293%" y="501" width="0.1604%" height="15" fill="rgb(241,88,38)" fg:x="256" fg:w="2"/><text x="20.7793%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.6095%" y="485" width="0.0802%" height="15" fill="rgb(226,121,9)" fg:x="257" fg:w="1"/><text x="20.8595%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6095%" y="469" width="0.0802%" height="15" fill="rgb(253,60,29)" fg:x="257" fg:w="1"/><text x="20.8595%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.6095%" y="453" width="0.0802%" height="15" fill="rgb(244,181,39)" fg:x="257" fg:w="1"/><text x="20.8595%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6095%" y="437" width="0.0802%" height="15" fill="rgb(252,203,31)" fg:x="257" fg:w="1"/><text x="20.8595%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6095%" y="421" width="0.0802%" height="15" fill="rgb(224,120,8)" fg:x="257" fg:w="1"/><text x="20.8595%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="20.3689%" y="549" width="0.4010%" height="15" fill="rgb(205,171,54)" fg:x="254" fg:w="5"/><text x="20.6189%" y="559.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="20.6897%" y="533" width="0.0802%" height="15" fill="rgb(235,89,11)" fg:x="258" fg:w="1"/><text x="20.9397%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.6897%" y="517" width="0.0802%" height="15" fill="rgb(212,180,28)" fg:x="258" fg:w="1"/><text x="20.9397%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.6897%" y="501" width="0.0802%" height="15" fill="rgb(247,84,49)" fg:x="258" fg:w="1"/><text x="20.9397%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.8500%" y="517" width="0.1604%" height="15" fill="rgb(236,187,52)" fg:x="260" fg:w="2"/><text x="21.1000%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.8500%" y="501" width="0.1604%" height="15" fill="rgb(227,24,15)" fg:x="260" fg:w="2"/><text x="21.1000%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9302%" y="485" width="0.0802%" height="15" fill="rgb(227,211,13)" fg:x="261" fg:w="1"/><text x="21.1802%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9302%" y="469" width="0.0802%" height="15" fill="rgb(245,52,14)" fg:x="261" fg:w="1"/><text x="21.1802%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9302%" y="453" width="0.0802%" height="15" fill="rgb(225,185,13)" fg:x="261" fg:w="1"/><text x="21.1802%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.9302%" y="437" width="0.0802%" height="15" fill="rgb(217,160,29)" fg:x="261" fg:w="1"/><text x="21.1802%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.9302%" y="421" width="0.0802%" height="15" fill="rgb(216,115,53)" fg:x="261" fg:w="1"/><text x="21.1802%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.9302%" y="405" width="0.0802%" height="15" fill="rgb(236,99,5)" fg:x="261" fg:w="1"/><text x="21.1802%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.9302%" y="389" width="0.0802%" height="15" fill="rgb(222,60,38)" fg:x="261" fg:w="1"/><text x="21.1802%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.9302%" y="373" width="0.0802%" height="15" fill="rgb(212,82,22)" fg:x="261" fg:w="1"/><text x="21.1802%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.9302%" y="357" width="0.0802%" height="15" fill="rgb(214,48,28)" fg:x="261" fg:w="1"/><text x="21.1802%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.9302%" y="341" width="0.0802%" height="15" fill="rgb(245,196,50)" fg:x="261" fg:w="1"/><text x="21.1802%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.9302%" y="325" width="0.0802%" height="15" fill="rgb(225,159,46)" fg:x="261" fg:w="1"/><text x="21.1802%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.9302%" y="309" width="0.0802%" height="15" fill="rgb(207,195,48)" fg:x="261" fg:w="1"/><text x="21.1802%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9302%" y="293" width="0.0802%" height="15" fill="rgb(240,73,3)" fg:x="261" fg:w="1"/><text x="21.1802%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="20.7698%" y="533" width="0.3208%" height="15" fill="rgb(245,57,23)" fg:x="259" fg:w="4"/><text x="21.0198%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.0104%" y="517" width="0.0802%" height="15" fill="rgb(240,75,18)" fg:x="262" fg:w="1"/><text x="21.2604%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0104%" y="501" width="0.0802%" height="15" fill="rgb(238,168,12)" fg:x="262" fg:w="1"/><text x="21.2604%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.0104%" y="485" width="0.0802%" height="15" fill="rgb(226,20,40)" fg:x="262" fg:w="1"/><text x="21.2604%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0104%" y="469" width="0.0802%" height="15" fill="rgb(224,130,35)" fg:x="262" fg:w="1"/><text x="21.2604%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.0104%" y="453" width="0.0802%" height="15" fill="rgb(225,63,41)" fg:x="262" fg:w="1"/><text x="21.2604%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.0104%" y="437" width="0.0802%" height="15" fill="rgb(219,3,3)" fg:x="262" fg:w="1"/><text x="21.2604%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.0104%" y="421" width="0.0802%" height="15" fill="rgb(218,157,4)" fg:x="262" fg:w="1"/><text x="21.2604%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0104%" y="405" width="0.0802%" height="15" fill="rgb(232,76,36)" fg:x="262" fg:w="1"/><text x="21.2604%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.0906%" y="501" width="0.0802%" height="15" fill="rgb(247,36,0)" fg:x="263" fg:w="1"/><text x="21.3406%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0906%" y="485" width="0.0802%" height="15" fill="rgb(205,2,34)" fg:x="263" fg:w="1"/><text x="21.3406%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="21.0906%" y="517" width="0.1604%" height="15" fill="rgb(239,136,13)" fg:x="263" fg:w="2"/><text x="21.3406%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.1708%" y="501" width="0.0802%" height="15" fill="rgb(253,122,12)" fg:x="264" fg:w="1"/><text x="21.4208%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1708%" y="485" width="0.0802%" height="15" fill="rgb(222,174,7)" fg:x="264" fg:w="1"/><text x="21.4208%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="21.0906%" y="533" width="0.2406%" height="15" fill="rgb(208,191,42)" fg:x="263" fg:w="3"/><text x="21.3406%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="21.2510%" y="517" width="0.0802%" height="15" fill="rgb(237,212,15)" fg:x="265" fg:w="1"/><text x="21.5010%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.2510%" y="501" width="0.0802%" height="15" fill="rgb(215,65,20)" fg:x="265" fg:w="1"/><text x="21.5010%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.2510%" y="485" width="0.0802%" height="15" fill="rgb(232,103,11)" fg:x="265" fg:w="1"/><text x="21.5010%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.2510%" y="469" width="0.0802%" height="15" fill="rgb(235,148,18)" fg:x="265" fg:w="1"/><text x="21.5010%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.3312%" y="469" width="0.1604%" height="15" fill="rgb(240,173,7)" fg:x="266" fg:w="2"/><text x="21.5812%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.3312%" y="453" width="0.1604%" height="15" fill="rgb(228,182,25)" fg:x="266" fg:w="2"/><text x="21.5812%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.3312%" y="437" width="0.1604%" height="15" fill="rgb(247,3,52)" fg:x="266" fg:w="2"/><text x="21.5812%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4114%" y="421" width="0.0802%" height="15" fill="rgb(226,155,8)" fg:x="267" fg:w="1"/><text x="21.6614%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="21.3312%" y="485" width="0.3208%" height="15" fill="rgb(243,195,38)" fg:x="266" fg:w="4"/><text x="21.5812%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.4916%" y="469" width="0.1604%" height="15" fill="rgb(254,181,33)" fg:x="268" fg:w="2"/><text x="21.7416%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.5718%" y="453" width="0.0802%" height="15" fill="rgb(232,98,23)" fg:x="269" fg:w="1"/><text x="21.8218%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.5718%" y="437" width="0.0802%" height="15" fill="rgb(205,23,10)" fg:x="269" fg:w="1"/><text x="21.8218%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.5718%" y="421" width="0.0802%" height="15" fill="rgb(212,124,38)" fg:x="269" fg:w="1"/><text x="21.8218%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.5718%" y="405" width="0.0802%" height="15" fill="rgb(228,207,2)" fg:x="269" fg:w="1"/><text x="21.8218%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.5718%" y="389" width="0.0802%" height="15" fill="rgb(215,120,22)" fg:x="269" fg:w="1"/><text x="21.8218%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="21.6520%" y="485" width="0.0802%" height="15" fill="rgb(251,172,33)" fg:x="270" fg:w="1"/><text x="21.9020%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.6520%" y="469" width="0.0802%" height="15" fill="rgb(250,83,2)" fg:x="270" fg:w="1"/><text x="21.9020%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.6520%" y="453" width="0.0802%" height="15" fill="rgb(210,132,53)" fg:x="270" fg:w="1"/><text x="21.9020%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.6520%" y="437" width="0.0802%" height="15" fill="rgb(221,208,36)" fg:x="270" fg:w="1"/><text x="21.9020%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6520%" y="421" width="0.0802%" height="15" fill="rgb(205,192,46)" fg:x="270" fg:w="1"/><text x="21.9020%" y="431.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="21.7322%" y="485" width="0.0802%" height="15" fill="rgb(223,163,14)" fg:x="271" fg:w="1"/><text x="21.9822%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7322%" y="469" width="0.0802%" height="15" fill="rgb(218,41,28)" fg:x="271" fg:w="1"/><text x="21.9822%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.7322%" y="453" width="0.0802%" height="15" fill="rgb(235,104,10)" fg:x="271" fg:w="1"/><text x="21.9822%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="21.3312%" y="517" width="0.5613%" height="15" fill="rgb(246,17,4)" fg:x="266" fg:w="7"/><text x="21.5812%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (7 samples, 0.56%)</title><rect x="21.3312%" y="501" width="0.5613%" height="15" fill="rgb(240,7,16)" fg:x="266" fg:w="7"/><text x="21.5812%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8123%" y="485" width="0.0802%" height="15" fill="rgb(213,160,23)" fg:x="272" fg:w="1"/><text x="22.0623%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="21.8925%" y="485" width="0.0802%" height="15" fill="rgb(251,179,49)" fg:x="273" fg:w="1"/><text x="22.1425%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="21.8925%" y="469" width="0.0802%" height="15" fill="rgb(247,198,10)" fg:x="273" fg:w="1"/><text x="22.1425%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.9727%" y="485" width="0.1604%" height="15" fill="rgb(220,65,29)" fg:x="274" fg:w="2"/><text x="22.2227%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="22.1331%" y="485" width="0.0802%" height="15" fill="rgb(237,171,28)" fg:x="276" fg:w="1"/><text x="22.3831%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.1331%" y="469" width="0.0802%" height="15" fill="rgb(228,44,26)" fg:x="276" fg:w="1"/><text x="22.3831%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2935%" y="453" width="0.0802%" height="15" fill="rgb(216,210,27)" fg:x="278" fg:w="1"/><text x="22.5435%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="22.2133%" y="485" width="0.3208%" height="15" fill="rgb(252,10,17)" fg:x="277" fg:w="4"/><text x="22.4633%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="22.2935%" y="469" width="0.2406%" height="15" fill="rgb(214,172,30)" fg:x="278" fg:w="3"/><text x="22.5435%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.3737%" y="453" width="0.1604%" height="15" fill="rgb(253,130,48)" fg:x="279" fg:w="2"/><text x="22.6237%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.3737%" y="437" width="0.1604%" height="15" fill="rgb(226,99,43)" fg:x="279" fg:w="2"/><text x="22.6237%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.3737%" y="421" width="0.1604%" height="15" fill="rgb(239,111,26)" fg:x="279" fg:w="2"/><text x="22.6237%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.84%)</title><rect x="20.7698%" y="549" width="1.8444%" height="15" fill="rgb(240,27,53)" fg:x="259" fg:w="23"/><text x="21.0198%" y="559.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (16 samples, 1.28%)</title><rect x="21.3312%" y="533" width="1.2831%" height="15" fill="rgb(254,163,12)" fg:x="266" fg:w="16"/><text x="21.5812%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="21.8925%" y="517" width="0.7217%" height="15" fill="rgb(225,51,48)" fg:x="273" fg:w="9"/><text x="22.1425%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="21.8925%" y="501" width="0.7217%" height="15" fill="rgb(205,19,32)" fg:x="273" fg:w="9"/><text x="22.1425%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.5341%" y="485" width="0.0802%" height="15" fill="rgb(218,119,26)" fg:x="281" fg:w="1"/><text x="22.7841%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (29 samples, 2.33%)</title><rect x="20.3689%" y="565" width="2.3256%" height="15" fill="rgb(231,173,33)" fg:x="254" fg:w="29"/><text x="20.6189%" y="575.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6143%" y="549" width="0.0802%" height="15" fill="rgb(241,100,29)" fg:x="282" fg:w="1"/><text x="22.8643%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6143%" y="533" width="0.0802%" height="15" fill="rgb(250,194,34)" fg:x="282" fg:w="1"/><text x="22.8643%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="22.8549%" y="533" width="0.0802%" height="15" fill="rgb(215,23,50)" fg:x="285" fg:w="1"/><text x="23.1049%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.9350%" y="533" width="0.1604%" height="15" fill="rgb(206,49,37)" fg:x="286" fg:w="2"/><text x="23.1850%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (6 samples, 0.48%)</title><rect x="22.6945%" y="565" width="0.4812%" height="15" fill="rgb(247,39,21)" fg:x="283" fg:w="6"/><text x="22.9445%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (6 samples, 0.48%)</title><rect x="22.6945%" y="549" width="0.4812%" height="15" fill="rgb(209,220,15)" fg:x="283" fg:w="6"/><text x="22.9445%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="23.0954%" y="533" width="0.0802%" height="15" fill="rgb(206,41,33)" fg:x="288" fg:w="1"/><text x="23.3454%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (1 samples, 0.08%)</title><rect x="23.0954%" y="517" width="0.0802%" height="15" fill="rgb(221,225,45)" fg:x="288" fg:w="1"/><text x="23.3454%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.2558%" y="501" width="0.0802%" height="15" fill="rgb(216,27,18)" fg:x="290" fg:w="1"/><text x="23.5058%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="23.2558%" y="485" width="0.0802%" height="15" fill="rgb(250,193,34)" fg:x="290" fg:w="1"/><text x="23.5058%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2558%" y="469" width="0.0802%" height="15" fill="rgb(227,215,20)" fg:x="290" fg:w="1"/><text x="23.5058%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2558%" y="453" width="0.0802%" height="15" fill="rgb(242,211,27)" fg:x="290" fg:w="1"/><text x="23.5058%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2558%" y="437" width="0.0802%" height="15" fill="rgb(229,190,30)" fg:x="290" fg:w="1"/><text x="23.5058%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2558%" y="421" width="0.0802%" height="15" fill="rgb(253,31,29)" fg:x="290" fg:w="1"/><text x="23.5058%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2558%" y="405" width="0.0802%" height="15" fill="rgb(229,177,52)" fg:x="290" fg:w="1"/><text x="23.5058%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.2558%" y="389" width="0.0802%" height="15" fill="rgb(226,88,8)" fg:x="290" fg:w="1"/><text x="23.5058%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.2558%" y="373" width="0.0802%" height="15" fill="rgb(214,55,27)" fg:x="290" fg:w="1"/><text x="23.5058%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.2558%" y="357" width="0.0802%" height="15" fill="rgb(233,202,5)" fg:x="290" fg:w="1"/><text x="23.5058%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2558%" y="341" width="0.0802%" height="15" fill="rgb(251,49,30)" fg:x="290" fg:w="1"/><text x="23.5058%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2558%" y="325" width="0.0802%" height="15" fill="rgb(235,18,52)" fg:x="290" fg:w="1"/><text x="23.5058%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.2558%" y="309" width="0.0802%" height="15" fill="rgb(250,111,51)" fg:x="290" fg:w="1"/><text x="23.5058%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.2558%" y="293" width="0.0802%" height="15" fill="rgb(218,13,25)" fg:x="290" fg:w="1"/><text x="23.5058%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.2558%" y="277" width="0.0802%" height="15" fill="rgb(248,96,7)" fg:x="290" fg:w="1"/><text x="23.5058%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.2558%" y="261" width="0.0802%" height="15" fill="rgb(217,31,15)" fg:x="290" fg:w="1"/><text x="23.5058%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2558%" y="245" width="0.0802%" height="15" fill="rgb(228,59,49)" fg:x="290" fg:w="1"/><text x="23.5058%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3360%" y="469" width="0.0802%" height="15" fill="rgb(210,152,38)" fg:x="291" fg:w="1"/><text x="23.5860%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3360%" y="453" width="0.0802%" height="15" fill="rgb(206,71,11)" fg:x="291" fg:w="1"/><text x="23.5860%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3360%" y="437" width="0.0802%" height="15" fill="rgb(244,199,5)" fg:x="291" fg:w="1"/><text x="23.5860%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3360%" y="421" width="0.0802%" height="15" fill="rgb(253,49,1)" fg:x="291" fg:w="1"/><text x="23.5860%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="23.2558%" y="533" width="0.2406%" height="15" fill="rgb(225,206,40)" fg:x="290" fg:w="3"/><text x="23.5058%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="23.2558%" y="517" width="0.2406%" height="15" fill="rgb(243,116,47)" fg:x="290" fg:w="3"/><text x="23.5058%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.3360%" y="501" width="0.1604%" height="15" fill="rgb(219,225,16)" fg:x="291" fg:w="2"/><text x="23.5860%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="23.3360%" y="485" width="0.1604%" height="15" fill="rgb(233,29,47)" fg:x="291" fg:w="2"/><text x="23.5860%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4162%" y="469" width="0.0802%" height="15" fill="rgb(250,179,18)" fg:x="292" fg:w="1"/><text x="23.6662%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4162%" y="453" width="0.0802%" height="15" fill="rgb(215,176,6)" fg:x="292" fg:w="1"/><text x="23.6662%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.4162%" y="437" width="0.0802%" height="15" fill="rgb(214,117,39)" fg:x="292" fg:w="1"/><text x="23.6662%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4162%" y="421" width="0.0802%" height="15" fill="rgb(247,183,36)" fg:x="292" fg:w="1"/><text x="23.6662%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4162%" y="405" width="0.0802%" height="15" fill="rgb(237,200,3)" fg:x="292" fg:w="1"/><text x="23.6662%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4162%" y="389" width="0.0802%" height="15" fill="rgb(212,220,24)" fg:x="292" fg:w="1"/><text x="23.6662%" y="399.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="23.4964%" y="533" width="0.0802%" height="15" fill="rgb(245,216,20)" fg:x="293" fg:w="1"/><text x="23.7464%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="23.4964%" y="517" width="0.0802%" height="15" fill="rgb(219,124,7)" fg:x="293" fg:w="1"/><text x="23.7464%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="23.4964%" y="501" width="0.0802%" height="15" fill="rgb(227,167,8)" fg:x="293" fg:w="1"/><text x="23.7464%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5766%" y="501" width="0.0802%" height="15" fill="rgb(241,37,2)" fg:x="294" fg:w="1"/><text x="23.8266%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5766%" y="485" width="0.0802%" height="15" fill="rgb(238,134,33)" fg:x="294" fg:w="1"/><text x="23.8266%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5766%" y="469" width="0.0802%" height="15" fill="rgb(248,48,27)" fg:x="294" fg:w="1"/><text x="23.8266%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.5766%" y="453" width="0.0802%" height="15" fill="rgb(212,14,16)" fg:x="294" fg:w="1"/><text x="23.8266%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.5766%" y="437" width="0.0802%" height="15" fill="rgb(217,205,37)" fg:x="294" fg:w="1"/><text x="23.8266%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.5766%" y="421" width="0.0802%" height="15" fill="rgb(233,185,47)" fg:x="294" fg:w="1"/><text x="23.8266%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.5766%" y="405" width="0.0802%" height="15" fill="rgb(244,88,8)" fg:x="294" fg:w="1"/><text x="23.8266%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.5766%" y="389" width="0.0802%" height="15" fill="rgb(213,0,20)" fg:x="294" fg:w="1"/><text x="23.8266%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.5766%" y="373" width="0.0802%" height="15" fill="rgb(238,159,36)" fg:x="294" fg:w="1"/><text x="23.8266%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.5766%" y="357" width="0.0802%" height="15" fill="rgb(253,173,17)" fg:x="294" fg:w="1"/><text x="23.8266%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.5766%" y="341" width="0.0802%" height="15" fill="rgb(221,23,28)" fg:x="294" fg:w="1"/><text x="23.8266%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.5766%" y="325" width="0.0802%" height="15" fill="rgb(218,113,15)" fg:x="294" fg:w="1"/><text x="23.8266%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.5766%" y="309" width="0.0802%" height="15" fill="rgb(233,58,3)" fg:x="294" fg:w="1"/><text x="23.8266%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.5766%" y="293" width="0.0802%" height="15" fill="rgb(250,46,35)" fg:x="294" fg:w="1"/><text x="23.8266%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5766%" y="277" width="0.0802%" height="15" fill="rgb(210,169,11)" fg:x="294" fg:w="1"/><text x="23.8266%" y="287.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="23.5766%" y="517" width="0.1604%" height="15" fill="rgb(246,88,19)" fg:x="294" fg:w="2"/><text x="23.8266%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.6568%" y="501" width="0.0802%" height="15" fill="rgb(206,81,49)" fg:x="295" fg:w="1"/><text x="23.9068%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6568%" y="485" width="0.0802%" height="15" fill="rgb(232,144,18)" fg:x="295" fg:w="1"/><text x="23.9068%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="23.8172%" y="469" width="0.0802%" height="15" fill="rgb(235,2,27)" fg:x="297" fg:w="1"/><text x="24.0672%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="23.7370%" y="485" width="0.2406%" height="15" fill="rgb(239,157,39)" fg:x="296" fg:w="3"/><text x="23.9870%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8974%" y="469" width="0.0802%" height="15" fill="rgb(220,11,17)" fg:x="298" fg:w="1"/><text x="24.1474%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="23.9775%" y="469" width="0.0802%" height="15" fill="rgb(243,94,50)" fg:x="299" fg:w="1"/><text x="24.2275%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9775%" y="453" width="0.0802%" height="15" fill="rgb(218,22,0)" fg:x="299" fg:w="1"/><text x="24.2275%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9775%" y="437" width="0.0802%" height="15" fill="rgb(249,70,21)" fg:x="299" fg:w="1"/><text x="24.2275%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.9775%" y="421" width="0.0802%" height="15" fill="rgb(245,111,46)" fg:x="299" fg:w="1"/><text x="24.2275%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9775%" y="405" width="0.0802%" height="15" fill="rgb(244,183,12)" fg:x="299" fg:w="1"/><text x="24.2275%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.9775%" y="389" width="0.0802%" height="15" fill="rgb(207,117,0)" fg:x="299" fg:w="1"/><text x="24.2275%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.9775%" y="373" width="0.0802%" height="15" fill="rgb(206,20,43)" fg:x="299" fg:w="1"/><text x="24.2275%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9775%" y="357" width="0.0802%" height="15" fill="rgb(221,104,11)" fg:x="299" fg:w="1"/><text x="24.2275%" y="367.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.9775%" y="485" width="0.1604%" height="15" fill="rgb(254,36,50)" fg:x="299" fg:w="2"/><text x="24.2275%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="24.0577%" y="469" width="0.0802%" height="15" fill="rgb(252,17,15)" fg:x="300" fg:w="1"/><text x="24.3077%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="23.5766%" y="533" width="0.6415%" height="15" fill="rgb(219,129,43)" fg:x="294" fg:w="8"/><text x="23.8266%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="23.7370%" y="517" width="0.4812%" height="15" fill="rgb(205,34,45)" fg:x="296" fg:w="6"/><text x="23.9870%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="23.7370%" y="501" width="0.4812%" height="15" fill="rgb(251,201,32)" fg:x="296" fg:w="6"/><text x="23.9870%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1379%" y="485" width="0.0802%" height="15" fill="rgb(205,56,0)" fg:x="301" fg:w="1"/><text x="24.3879%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.1379%" y="469" width="0.0802%" height="15" fill="rgb(211,193,27)" fg:x="301" fg:w="1"/><text x="24.3879%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.1379%" y="453" width="0.0802%" height="15" fill="rgb(231,100,42)" fg:x="301" fg:w="1"/><text x="24.3879%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.1379%" y="437" width="0.0802%" height="15" fill="rgb(245,85,27)" fg:x="301" fg:w="1"/><text x="24.3879%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.1379%" y="421" width="0.0802%" height="15" fill="rgb(241,76,24)" fg:x="301" fg:w="1"/><text x="24.3879%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1379%" y="405" width="0.0802%" height="15" fill="rgb(249,157,15)" fg:x="301" fg:w="1"/><text x="24.3879%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.1379%" y="389" width="0.0802%" height="15" fill="rgb(222,218,25)" fg:x="301" fg:w="1"/><text x="24.3879%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.1379%" y="373" width="0.0802%" height="15" fill="rgb(252,156,52)" fg:x="301" fg:w="1"/><text x="24.3879%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.1379%" y="357" width="0.0802%" height="15" fill="rgb(211,185,7)" fg:x="301" fg:w="1"/><text x="24.3879%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.1379%" y="341" width="0.0802%" height="15" fill="rgb(234,108,24)" fg:x="301" fg:w="1"/><text x="24.3879%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.1379%" y="325" width="0.0802%" height="15" fill="rgb(227,218,2)" fg:x="301" fg:w="1"/><text x="24.3879%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1379%" y="309" width="0.0802%" height="15" fill="rgb(224,0,36)" fg:x="301" fg:w="1"/><text x="24.3879%" y="319.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="24.2181%" y="517" width="0.0802%" height="15" fill="rgb(233,201,10)" fg:x="302" fg:w="1"/><text x="24.4681%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="24.2181%" y="501" width="0.0802%" height="15" fill="rgb(252,209,14)" fg:x="302" fg:w="1"/><text x="24.4681%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.2181%" y="485" width="0.0802%" height="15" fill="rgb(205,93,49)" fg:x="302" fg:w="1"/><text x="24.4681%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.2181%" y="469" width="0.0802%" height="15" fill="rgb(234,116,45)" fg:x="302" fg:w="1"/><text x="24.4681%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="24.2983%" y="453" width="0.0802%" height="15" fill="rgb(248,89,35)" fg:x="303" fg:w="1"/><text x="24.5483%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (16 samples, 1.28%)</title><rect x="23.1756%" y="565" width="1.2831%" height="15" fill="rgb(233,167,45)" fg:x="289" fg:w="16"/><text x="23.4256%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (15 samples, 1.20%)</title><rect x="23.2558%" y="549" width="1.2029%" height="15" fill="rgb(248,228,14)" fg:x="290" fg:w="15"/><text x="23.5058%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (3 samples, 0.24%)</title><rect x="24.2181%" y="533" width="0.2406%" height="15" fill="rgb(246,91,14)" fg:x="302" fg:w="3"/><text x="24.4681%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="24.2983%" y="517" width="0.1604%" height="15" fill="rgb(227,142,5)" fg:x="303" fg:w="2"/><text x="24.5483%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="24.2983%" y="501" width="0.1604%" height="15" fill="rgb(221,63,33)" fg:x="303" fg:w="2"/><text x="24.5483%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.2983%" y="485" width="0.1604%" height="15" fill="rgb(233,49,0)" fg:x="303" fg:w="2"/><text x="24.5483%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="24.2983%" y="469" width="0.1604%" height="15" fill="rgb(251,115,38)" fg:x="303" fg:w="2"/><text x="24.5483%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.3785%" y="453" width="0.0802%" height="15" fill="rgb(231,214,32)" fg:x="304" fg:w="1"/><text x="24.6285%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3785%" y="437" width="0.0802%" height="15" fill="rgb(248,73,46)" fg:x="304" fg:w="1"/><text x="24.6285%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="24.5389%" y="549" width="0.1604%" height="15" fill="rgb(237,156,4)" fg:x="306" fg:w="2"/><text x="24.7889%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="24.6191%" y="533" width="0.0802%" height="15" fill="rgb(227,132,2)" fg:x="307" fg:w="1"/><text x="24.8691%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.6191%" y="517" width="0.0802%" height="15" fill="rgb(248,161,9)" fg:x="307" fg:w="1"/><text x="24.8691%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6191%" y="501" width="0.0802%" height="15" fill="rgb(238,77,38)" fg:x="307" fg:w="1"/><text x="24.8691%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.6191%" y="485" width="0.0802%" height="15" fill="rgb(222,166,40)" fg:x="307" fg:w="1"/><text x="24.8691%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6191%" y="469" width="0.0802%" height="15" fill="rgb(214,168,45)" fg:x="307" fg:w="1"/><text x="24.8691%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.6191%" y="453" width="0.0802%" height="15" fill="rgb(226,64,37)" fg:x="307" fg:w="1"/><text x="24.8691%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.6191%" y="437" width="0.0802%" height="15" fill="rgb(232,210,43)" fg:x="307" fg:w="1"/><text x="24.8691%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="24.6993%" y="533" width="0.0802%" height="15" fill="rgb(214,76,33)" fg:x="308" fg:w="1"/><text x="24.9493%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="24.6993%" y="549" width="0.1604%" height="15" fill="rgb(210,78,5)" fg:x="308" fg:w="2"/><text x="24.9493%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="24.7795%" y="533" width="0.0802%" height="15" fill="rgb(211,107,37)" fg:x="309" fg:w="1"/><text x="25.0295%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8597%" y="517" width="0.0802%" height="15" fill="rgb(249,67,16)" fg:x="310" fg:w="1"/><text x="25.1097%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="24.8597%" y="549" width="0.1604%" height="15" fill="rgb(222,114,31)" fg:x="310" fg:w="2"/><text x="25.1097%" y="559.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="24.8597%" y="533" width="0.1604%" height="15" fill="rgb(242,118,19)" fg:x="310" fg:w="2"/><text x="25.1097%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="24.9399%" y="517" width="0.0802%" height="15" fill="rgb(223,115,1)" fg:x="311" fg:w="1"/><text x="25.1899%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="24.9399%" y="501" width="0.0802%" height="15" fill="rgb(241,182,54)" fg:x="311" fg:w="1"/><text x="25.1899%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="24.9399%" y="485" width="0.0802%" height="15" fill="rgb(244,166,36)" fg:x="311" fg:w="1"/><text x="25.1899%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0200%" y="437" width="0.0802%" height="15" fill="rgb(241,52,43)" fg:x="312" fg:w="1"/><text x="25.2700%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0200%" y="421" width="0.0802%" height="15" fill="rgb(236,82,9)" fg:x="312" fg:w="1"/><text x="25.2700%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0200%" y="405" width="0.0802%" height="15" fill="rgb(241,119,0)" fg:x="312" fg:w="1"/><text x="25.2700%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0200%" y="389" width="0.0802%" height="15" fill="rgb(221,19,22)" fg:x="312" fg:w="1"/><text x="25.2700%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0200%" y="373" width="0.0802%" height="15" fill="rgb(254,144,35)" fg:x="312" fg:w="1"/><text x="25.2700%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.0200%" y="357" width="0.0802%" height="15" fill="rgb(246,132,30)" fg:x="312" fg:w="1"/><text x="25.2700%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.0200%" y="341" width="0.0802%" height="15" fill="rgb(234,69,28)" fg:x="312" fg:w="1"/><text x="25.2700%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.0200%" y="325" width="0.0802%" height="15" fill="rgb(219,106,47)" fg:x="312" fg:w="1"/><text x="25.2700%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0200%" y="309" width="0.0802%" height="15" fill="rgb(218,79,24)" fg:x="312" fg:w="1"/><text x="25.2700%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0200%" y="293" width="0.0802%" height="15" fill="rgb(225,26,21)" fg:x="312" fg:w="1"/><text x="25.2700%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.0200%" y="277" width="0.0802%" height="15" fill="rgb(217,68,49)" fg:x="312" fg:w="1"/><text x="25.2700%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.0200%" y="261" width="0.0802%" height="15" fill="rgb(220,204,28)" fg:x="312" fg:w="1"/><text x="25.2700%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.0200%" y="245" width="0.0802%" height="15" fill="rgb(237,208,43)" fg:x="312" fg:w="1"/><text x="25.2700%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.0200%" y="229" width="0.0802%" height="15" fill="rgb(213,97,42)" fg:x="312" fg:w="1"/><text x="25.2700%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0200%" y="213" width="0.0802%" height="15" fill="rgb(238,96,52)" fg:x="312" fg:w="1"/><text x="25.2700%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1002%" y="373" width="0.0802%" height="15" fill="rgb(228,14,13)" fg:x="313" fg:w="1"/><text x="25.3502%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="25.0200%" y="453" width="0.2406%" height="15" fill="rgb(219,123,13)" fg:x="312" fg:w="3"/><text x="25.2700%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.1002%" y="437" width="0.1604%" height="15" fill="rgb(216,144,17)" fg:x="313" fg:w="2"/><text x="25.3502%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.1002%" y="421" width="0.1604%" height="15" fill="rgb(230,228,29)" fg:x="313" fg:w="2"/><text x="25.3502%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.1002%" y="405" width="0.1604%" height="15" fill="rgb(233,18,5)" fg:x="313" fg:w="2"/><text x="25.3502%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.1002%" y="389" width="0.1604%" height="15" fill="rgb(233,197,12)" fg:x="313" fg:w="2"/><text x="25.3502%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.1804%" y="373" width="0.0802%" height="15" fill="rgb(234,140,29)" fg:x="314" fg:w="1"/><text x="25.4304%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1804%" y="357" width="0.0802%" height="15" fill="rgb(233,113,19)" fg:x="314" fg:w="1"/><text x="25.4304%" y="367.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="25.0200%" y="469" width="0.3208%" height="15" fill="rgb(246,209,13)" fg:x="312" fg:w="4"/><text x="25.2700%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="25.2606%" y="453" width="0.0802%" height="15" fill="rgb(242,79,54)" fg:x="315" fg:w="1"/><text x="25.5106%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.2606%" y="437" width="0.0802%" height="15" fill="rgb(219,73,16)" fg:x="315" fg:w="1"/><text x="25.5106%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="25.3408%" y="437" width="0.0802%" height="15" fill="rgb(224,52,10)" fg:x="316" fg:w="1"/><text x="25.5908%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3408%" y="421" width="0.0802%" height="15" fill="rgb(237,179,5)" fg:x="316" fg:w="1"/><text x="25.5908%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="25.3408%" y="453" width="0.1604%" height="15" fill="rgb(231,20,6)" fg:x="316" fg:w="2"/><text x="25.5908%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4210%" y="437" width="0.0802%" height="15" fill="rgb(253,171,45)" fg:x="317" fg:w="1"/><text x="25.6710%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4210%" y="421" width="0.0802%" height="15" fill="rgb(230,75,49)" fg:x="317" fg:w="1"/><text x="25.6710%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.4210%" y="405" width="0.0802%" height="15" fill="rgb(216,83,46)" fg:x="317" fg:w="1"/><text x="25.6710%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4210%" y="389" width="0.0802%" height="15" fill="rgb(236,56,9)" fg:x="317" fg:w="1"/><text x="25.6710%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.4210%" y="373" width="0.0802%" height="15" fill="rgb(215,28,34)" fg:x="317" fg:w="1"/><text x="25.6710%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="25.0200%" y="549" width="0.5613%" height="15" fill="rgb(230,222,20)" fg:x="312" fg:w="7"/><text x="25.2700%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="25.0200%" y="533" width="0.5613%" height="15" fill="rgb(235,209,51)" fg:x="312" fg:w="7"/><text x="25.2700%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.56%)</title><rect x="25.0200%" y="517" width="0.5613%" height="15" fill="rgb(235,167,1)" fg:x="312" fg:w="7"/><text x="25.2700%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (7 samples, 0.56%)</title><rect x="25.0200%" y="501" width="0.5613%" height="15" fill="rgb(248,220,0)" fg:x="312" fg:w="7"/><text x="25.2700%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="25.0200%" y="485" width="0.5613%" height="15" fill="rgb(239,0,18)" fg:x="312" fg:w="7"/><text x="25.2700%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="25.3408%" y="469" width="0.2406%" height="15" fill="rgb(229,179,11)" fg:x="316" fg:w="3"/><text x="25.5908%" y="479.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="25.5012%" y="453" width="0.0802%" height="15" fill="rgb(226,116,53)" fg:x="318" fg:w="1"/><text x="25.7512%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="25.5814%" y="533" width="0.0802%" height="15" fill="rgb(218,1,49)" fg:x="319" fg:w="1"/><text x="25.8314%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.5814%" y="517" width="0.0802%" height="15" fill="rgb(208,184,47)" fg:x="319" fg:w="1"/><text x="25.8314%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="25.5814%" y="501" width="0.0802%" height="15" fill="rgb(238,174,3)" fg:x="319" fg:w="1"/><text x="25.8314%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="25.7418%" y="453" width="0.1604%" height="15" fill="rgb(247,188,6)" fg:x="321" fg:w="2"/><text x="25.9918%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="25.6616%" y="485" width="0.3208%" height="15" fill="rgb(211,165,46)" fg:x="320" fg:w="4"/><text x="25.9116%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="25.7418%" y="469" width="0.2406%" height="15" fill="rgb(222,190,10)" fg:x="321" fg:w="3"/><text x="25.9918%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9022%" y="453" width="0.0802%" height="15" fill="rgb(206,185,3)" fg:x="323" fg:w="1"/><text x="26.1522%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="25.9824%" y="437" width="0.0802%" height="15" fill="rgb(244,125,37)" fg:x="324" fg:w="1"/><text x="26.2324%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.9824%" y="421" width="0.0802%" height="15" fill="rgb(211,43,7)" fg:x="324" fg:w="1"/><text x="26.2324%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.9824%" y="405" width="0.0802%" height="15" fill="rgb(250,41,42)" fg:x="324" fg:w="1"/><text x="26.2324%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.9824%" y="389" width="0.0802%" height="15" fill="rgb(254,54,42)" fg:x="324" fg:w="1"/><text x="26.2324%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9824%" y="373" width="0.0802%" height="15" fill="rgb(213,71,43)" fg:x="324" fg:w="1"/><text x="26.2324%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.9824%" y="357" width="0.0802%" height="15" fill="rgb(249,3,44)" fg:x="324" fg:w="1"/><text x="26.2324%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.9824%" y="341" width="0.0802%" height="15" fill="rgb(229,80,41)" fg:x="324" fg:w="1"/><text x="26.2324%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.9824%" y="325" width="0.0802%" height="15" fill="rgb(231,25,28)" fg:x="324" fg:w="1"/><text x="26.2324%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.1427%" y="421" width="0.0802%" height="15" fill="rgb(208,79,48)" fg:x="326" fg:w="1"/><text x="26.3927%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="26.3031%" y="405" width="0.2406%" height="15" fill="rgb(207,196,38)" fg:x="328" fg:w="3"/><text x="26.5531%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="26.3031%" y="389" width="0.2406%" height="15" fill="rgb(228,105,49)" fg:x="328" fg:w="3"/><text x="26.5531%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.3031%" y="373" width="0.2406%" height="15" fill="rgb(237,99,15)" fg:x="328" fg:w="3"/><text x="26.5531%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="26.3031%" y="357" width="0.2406%" height="15" fill="rgb(224,207,46)" fg:x="328" fg:w="3"/><text x="26.5531%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.4635%" y="341" width="0.0802%" height="15" fill="rgb(249,117,50)" fg:x="330" fg:w="1"/><text x="26.7135%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.4635%" y="325" width="0.0802%" height="15" fill="rgb(248,17,13)" fg:x="330" fg:w="1"/><text x="26.7135%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="26.2229%" y="421" width="0.4010%" height="15" fill="rgb(228,187,36)" fg:x="327" fg:w="5"/><text x="26.4729%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.5437%" y="405" width="0.0802%" height="15" fill="rgb(234,132,20)" fg:x="331" fg:w="1"/><text x="26.7937%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.5437%" y="389" width="0.0802%" height="15" fill="rgb(209,170,46)" fg:x="331" fg:w="1"/><text x="26.7937%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.5437%" y="373" width="0.0802%" height="15" fill="rgb(237,23,19)" fg:x="331" fg:w="1"/><text x="26.7937%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.7041%" y="405" width="0.0802%" height="15" fill="rgb(227,21,26)" fg:x="333" fg:w="1"/><text x="26.9541%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="26.7843%" y="405" width="0.4812%" height="15" fill="rgb(222,220,48)" fg:x="334" fg:w="6"/><text x="27.0343%" y="415.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="26.7843%" y="389" width="0.4812%" height="15" fill="rgb(214,9,16)" fg:x="334" fg:w="6"/><text x="27.0343%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.0249%" y="373" width="0.2406%" height="15" fill="rgb(209,73,30)" fg:x="337" fg:w="3"/><text x="27.2749%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.1051%" y="357" width="0.1604%" height="15" fill="rgb(207,20,33)" fg:x="338" fg:w="2"/><text x="27.3551%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.1852%" y="341" width="0.0802%" height="15" fill="rgb(219,153,12)" fg:x="339" fg:w="1"/><text x="27.4352%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.1852%" y="325" width="0.0802%" height="15" fill="rgb(235,97,25)" fg:x="339" fg:w="1"/><text x="27.4352%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.1852%" y="309" width="0.0802%" height="15" fill="rgb(244,30,34)" fg:x="339" fg:w="1"/><text x="27.4352%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.3456%" y="389" width="0.0802%" height="15" fill="rgb(214,106,45)" fg:x="341" fg:w="1"/><text x="27.5956%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="27.4258%" y="389" width="0.4010%" height="15" fill="rgb(226,41,9)" fg:x="342" fg:w="5"/><text x="27.6758%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="27.5862%" y="373" width="0.2406%" height="15" fill="rgb(253,139,29)" fg:x="344" fg:w="3"/><text x="27.8362%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="27.5862%" y="357" width="0.2406%" height="15" fill="rgb(213,205,39)" fg:x="344" fg:w="3"/><text x="27.8362%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.5862%" y="341" width="0.2406%" height="15" fill="rgb(209,27,10)" fg:x="344" fg:w="3"/><text x="27.8362%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.6664%" y="325" width="0.1604%" height="15" fill="rgb(249,142,16)" fg:x="345" fg:w="2"/><text x="27.9164%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.7466%" y="309" width="0.0802%" height="15" fill="rgb(242,65,12)" fg:x="346" fg:w="1"/><text x="27.9966%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.7466%" y="293" width="0.0802%" height="15" fill="rgb(232,48,10)" fg:x="346" fg:w="1"/><text x="27.9966%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.7466%" y="277" width="0.0802%" height="15" fill="rgb(253,67,19)" fg:x="346" fg:w="1"/><text x="27.9966%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.7466%" y="261" width="0.0802%" height="15" fill="rgb(227,93,29)" fg:x="346" fg:w="1"/><text x="27.9966%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="27.8268%" y="389" width="0.0802%" height="15" fill="rgb(226,189,53)" fg:x="347" fg:w="1"/><text x="28.0768%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="28.0674%" y="373" width="0.1604%" height="15" fill="rgb(223,224,1)" fg:x="350" fg:w="2"/><text x="28.3174%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="28.2277%" y="373" width="0.4010%" height="15" fill="rgb(221,84,32)" fg:x="352" fg:w="5"/><text x="28.4777%" y="383.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="28.2277%" y="357" width="0.4010%" height="15" fill="rgb(214,189,28)" fg:x="352" fg:w="5"/><text x="28.4777%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="28.2277%" y="341" width="0.4010%" height="15" fill="rgb(234,7,52)" fg:x="352" fg:w="5"/><text x="28.4777%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="28.2277%" y="325" width="0.4010%" height="15" fill="rgb(249,73,31)" fg:x="352" fg:w="5"/><text x="28.4777%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.4683%" y="309" width="0.1604%" height="15" fill="rgb(253,153,41)" fg:x="355" fg:w="2"/><text x="28.7183%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.4683%" y="293" width="0.1604%" height="15" fill="rgb(249,52,34)" fg:x="355" fg:w="2"/><text x="28.7183%" y="303.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.4683%" y="277" width="0.1604%" height="15" fill="rgb(236,177,47)" fg:x="355" fg:w="2"/><text x="28.7183%" y="287.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.7089%" y="357" width="0.1604%" height="15" fill="rgb(252,185,45)" fg:x="358" fg:w="2"/><text x="28.9589%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.7089%" y="341" width="0.1604%" height="15" fill="rgb(251,15,30)" fg:x="358" fg:w="2"/><text x="28.9589%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.7089%" y="325" width="0.1604%" height="15" fill="rgb(233,31,4)" fg:x="358" fg:w="2"/><text x="28.9589%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.7089%" y="309" width="0.1604%" height="15" fill="rgb(254,44,24)" fg:x="358" fg:w="2"/><text x="28.9589%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.7891%" y="293" width="0.0802%" height="15" fill="rgb(218,54,1)" fg:x="359" fg:w="1"/><text x="29.0391%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.7891%" y="277" width="0.0802%" height="15" fill="rgb(243,209,39)" fg:x="359" fg:w="1"/><text x="29.0391%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.7891%" y="261" width="0.0802%" height="15" fill="rgb(206,75,33)" fg:x="359" fg:w="1"/><text x="29.0391%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="28.8693%" y="357" width="0.1604%" height="15" fill="rgb(223,108,18)" fg:x="360" fg:w="2"/><text x="29.1193%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.9495%" y="341" width="0.0802%" height="15" fill="rgb(244,89,31)" fg:x="361" fg:w="1"/><text x="29.1995%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.9495%" y="325" width="0.0802%" height="15" fill="rgb(222,167,27)" fg:x="361" fg:w="1"/><text x="29.1995%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="28.6287%" y="373" width="0.6415%" height="15" fill="rgb(247,41,16)" fg:x="357" fg:w="8"/><text x="28.8787%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.0297%" y="357" width="0.2406%" height="15" fill="rgb(233,168,40)" fg:x="362" fg:w="3"/><text x="29.2797%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.0297%" y="341" width="0.2406%" height="15" fill="rgb(205,211,8)" fg:x="362" fg:w="3"/><text x="29.2797%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="27.9070%" y="389" width="1.4435%" height="15" fill="rgb(238,105,11)" fg:x="348" fg:w="18"/><text x="28.1570%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.2702%" y="373" width="0.0802%" height="15" fill="rgb(223,142,52)" fg:x="365" fg:w="1"/><text x="29.5202%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.2702%" y="357" width="0.0802%" height="15" fill="rgb(238,51,33)" fg:x="365" fg:w="1"/><text x="29.5202%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.25%)</title><rect x="27.2654%" y="405" width="2.2454%" height="15" fill="rgb(231,188,43)" fg:x="340" fg:w="28"/><text x="27.5154%" y="415.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.3504%" y="389" width="0.1604%" height="15" fill="rgb(216,92,17)" fg:x="366" fg:w="2"/><text x="29.6004%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.3504%" y="373" width="0.1604%" height="15" fill="rgb(228,2,40)" fg:x="366" fg:w="2"/><text x="29.6004%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.3504%" y="357" width="0.1604%" height="15" fill="rgb(226,73,15)" fg:x="366" fg:w="2"/><text x="29.6004%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (45 samples, 3.61%)</title><rect x="26.0626%" y="437" width="3.6087%" height="15" fill="rgb(227,66,46)" fg:x="325" fg:w="45"/><text x="26.3126%" y="447.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.05%)</title><rect x="26.6239%" y="421" width="3.0473%" height="15" fill="rgb(209,71,6)" fg:x="332" fg:w="38"/><text x="26.8739%" y="431.50">ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.5108%" y="405" width="0.1604%" height="15" fill="rgb(246,100,25)" fg:x="368" fg:w="2"/><text x="29.7608%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.5910%" y="389" width="0.0802%" height="15" fill="rgb(248,185,27)" fg:x="369" fg:w="1"/><text x="29.8410%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.6712%" y="405" width="0.0802%" height="15" fill="rgb(225,118,47)" fg:x="370" fg:w="1"/><text x="29.9212%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.7514%" y="389" width="0.1604%" height="15" fill="rgb(220,185,44)" fg:x="371" fg:w="2"/><text x="30.0014%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.9920%" y="357" width="0.1604%" height="15" fill="rgb(227,95,24)" fg:x="374" fg:w="2"/><text x="30.2420%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1524%" y="357" width="0.0802%" height="15" fill="rgb(252,84,24)" fg:x="376" fg:w="1"/><text x="30.4024%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1524%" y="341" width="0.0802%" height="15" fill="rgb(240,34,44)" fg:x="376" fg:w="1"/><text x="30.4024%" y="351.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="30.2326%" y="325" width="0.2406%" height="15" fill="rgb(209,72,54)" fg:x="377" fg:w="3"/><text x="30.4826%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="29.6712%" y="437" width="0.8821%" height="15" fill="rgb(226,19,45)" fg:x="370" fg:w="11"/><text x="29.9212%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="29.6712%" y="421" width="0.8821%" height="15" fill="rgb(246,7,45)" fg:x="370" fg:w="11"/><text x="29.9212%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="29.7514%" y="405" width="0.8019%" height="15" fill="rgb(225,45,2)" fg:x="371" fg:w="10"/><text x="30.0014%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="29.9118%" y="389" width="0.6415%" height="15" fill="rgb(221,80,29)" fg:x="373" fg:w="8"/><text x="30.1618%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="29.9920%" y="373" width="0.5613%" height="15" fill="rgb(228,11,19)" fg:x="374" fg:w="7"/><text x="30.2420%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="30.2326%" y="357" width="0.3208%" height="15" fill="rgb(243,17,21)" fg:x="377" fg:w="4"/><text x="30.4826%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="30.2326%" y="341" width="0.3208%" height="15" fill="rgb(243,88,8)" fg:x="377" fg:w="4"/><text x="30.4826%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.4731%" y="325" width="0.0802%" height="15" fill="rgb(214,17,9)" fg:x="380" fg:w="1"/><text x="30.7231%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5533%" y="405" width="0.0802%" height="15" fill="rgb(232,169,15)" fg:x="381" fg:w="1"/><text x="30.8033%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.6335%" y="389" width="0.0802%" height="15" fill="rgb(232,86,53)" fg:x="382" fg:w="1"/><text x="30.8835%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="30.6335%" y="405" width="0.1604%" height="15" fill="rgb(222,100,4)" fg:x="382" fg:w="2"/><text x="30.8835%" y="415.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPath as core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::from (1 samples, 0.08%)</title><rect x="30.7137%" y="389" width="0.0802%" height="15" fill="rgb(253,151,38)" fg:x="383" fg:w="1"/><text x="30.9637%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7939%" y="405" width="0.0802%" height="15" fill="rgb(238,215,29)" fg:x="384" fg:w="1"/><text x="31.0439%" y="415.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (3 samples, 0.24%)</title><rect x="30.8741%" y="405" width="0.2406%" height="15" fill="rgb(205,128,53)" fg:x="385" fg:w="3"/><text x="31.1241%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="30.8741%" y="389" width="0.2406%" height="15" fill="rgb(248,183,14)" fg:x="385" fg:w="3"/><text x="31.1241%" y="399.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="30.8741%" y="373" width="0.2406%" height="15" fill="rgb(244,172,35)" fg:x="385" fg:w="3"/><text x="31.1241%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.24%)</title><rect x="30.8741%" y="357" width="0.2406%" height="15" fill="rgb(234,93,19)" fg:x="385" fg:w="3"/><text x="31.1241%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="31.0345%" y="341" width="0.0802%" height="15" fill="rgb(227,109,7)" fg:x="387" fg:w="1"/><text x="31.2845%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="30.5533%" y="421" width="0.7217%" height="15" fill="rgb(233,136,54)" fg:x="381" fg:w="9"/><text x="30.8033%" y="431.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="31.1147%" y="405" width="0.1604%" height="15" fill="rgb(233,19,40)" fg:x="388" fg:w="2"/><text x="31.3647%" y="415.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="31.1949%" y="389" width="0.0802%" height="15" fill="rgb(247,41,18)" fg:x="389" fg:w="1"/><text x="31.4449%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1949%" y="373" width="0.0802%" height="15" fill="rgb(220,34,34)" fg:x="389" fg:w="1"/><text x="31.4449%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2751%" y="389" width="0.0802%" height="15" fill="rgb(222,135,32)" fg:x="390" fg:w="1"/><text x="31.5251%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="31.3553%" y="389" width="0.3208%" height="15" fill="rgb(214,80,19)" fg:x="391" fg:w="4"/><text x="31.6053%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.5958%" y="373" width="0.0802%" height="15" fill="rgb(234,54,46)" fg:x="394" fg:w="1"/><text x="31.8458%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6760%" y="357" width="0.0802%" height="15" fill="rgb(251,48,23)" fg:x="395" fg:w="1"/><text x="31.9260%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6760%" y="341" width="0.0802%" height="15" fill="rgb(254,109,52)" fg:x="395" fg:w="1"/><text x="31.9260%" y="351.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="31.6760%" y="389" width="0.1604%" height="15" fill="rgb(240,186,19)" fg:x="395" fg:w="2"/><text x="31.9260%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.6760%" y="373" width="0.1604%" height="15" fill="rgb(246,187,17)" fg:x="395" fg:w="2"/><text x="31.9260%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="31.7562%" y="357" width="0.0802%" height="15" fill="rgb(212,21,5)" fg:x="396" fg:w="1"/><text x="32.0062%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="31.7562%" y="341" width="0.0802%" height="15" fill="rgb(225,185,18)" fg:x="396" fg:w="1"/><text x="32.0062%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8364%" y="357" width="0.0802%" height="15" fill="rgb(245,114,17)" fg:x="397" fg:w="1"/><text x="32.0864%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="31.8364%" y="389" width="0.1604%" height="15" fill="rgb(223,164,24)" fg:x="397" fg:w="2"/><text x="32.0864%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.8364%" y="373" width="0.1604%" height="15" fill="rgb(211,228,3)" fg:x="397" fg:w="2"/><text x="32.0864%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9166%" y="357" width="0.0802%" height="15" fill="rgb(223,16,38)" fg:x="398" fg:w="1"/><text x="32.1666%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="32.0770%" y="373" width="0.0802%" height="15" fill="rgb(207,31,54)" fg:x="400" fg:w="1"/><text x="32.3270%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.2374%" y="357" width="0.0802%" height="15" fill="rgb(220,39,11)" fg:x="402" fg:w="1"/><text x="32.4874%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.3978%" y="341" width="0.2406%" height="15" fill="rgb(235,185,0)" fg:x="404" fg:w="3"/><text x="32.6478%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5581%" y="325" width="0.0802%" height="15" fill="rgb(249,39,18)" fg:x="406" fg:w="1"/><text x="32.8081%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="32.6383%" y="245" width="0.0802%" height="15" fill="rgb(240,110,33)" fg:x="407" fg:w="1"/><text x="32.8883%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.6383%" y="229" width="0.0802%" height="15" fill="rgb(210,92,42)" fg:x="407" fg:w="1"/><text x="32.8883%" y="239.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="32.6383%" y="341" width="0.1604%" height="15" fill="rgb(218,215,28)" fg:x="407" fg:w="2"/><text x="32.8883%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.6383%" y="325" width="0.1604%" height="15" fill="rgb(238,215,36)" fg:x="407" fg:w="2"/><text x="32.8883%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.6383%" y="309" width="0.1604%" height="15" fill="rgb(220,31,10)" fg:x="407" fg:w="2"/><text x="32.8883%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.6383%" y="293" width="0.1604%" height="15" fill="rgb(212,93,14)" fg:x="407" fg:w="2"/><text x="32.8883%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.6383%" y="277" width="0.1604%" height="15" fill="rgb(254,207,2)" fg:x="407" fg:w="2"/><text x="32.8883%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.6383%" y="261" width="0.1604%" height="15" fill="rgb(205,57,44)" fg:x="407" fg:w="2"/><text x="32.8883%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.7185%" y="245" width="0.0802%" height="15" fill="rgb(226,151,19)" fg:x="408" fg:w="1"/><text x="32.9685%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="33.0393%" y="277" width="0.3208%" height="15" fill="rgb(230,72,30)" fg:x="412" fg:w="4"/><text x="33.2893%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2799%" y="261" width="0.0802%" height="15" fill="rgb(244,0,8)" fg:x="415" fg:w="1"/><text x="33.5299%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="33.0393%" y="293" width="0.4010%" height="15" fill="rgb(230,192,6)" fg:x="412" fg:w="5"/><text x="33.2893%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3601%" y="277" width="0.0802%" height="15" fill="rgb(233,207,13)" fg:x="416" fg:w="1"/><text x="33.6101%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="32.3176%" y="357" width="1.2029%" height="15" fill="rgb(206,227,7)" fg:x="403" fg:w="15"/><text x="32.5676%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="32.7987%" y="341" width="0.7217%" height="15" fill="rgb(213,217,25)" fg:x="409" fg:w="9"/><text x="33.0487%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="32.9591%" y="325" width="0.5613%" height="15" fill="rgb(249,75,4)" fg:x="411" fg:w="7"/><text x="33.2091%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="32.9591%" y="309" width="0.5613%" height="15" fill="rgb(225,114,18)" fg:x="411" fg:w="7"/><text x="33.2091%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4403%" y="293" width="0.0802%" height="15" fill="rgb(211,162,40)" fg:x="417" fg:w="1"/><text x="33.6903%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 1.60%)</title><rect x="32.1572%" y="373" width="1.6038%" height="15" fill="rgb(206,49,29)" fg:x="401" fg:w="20"/><text x="32.4072%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="33.5204%" y="357" width="0.2406%" height="15" fill="rgb(244,8,6)" fg:x="418" fg:w="3"/><text x="33.7704%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6808%" y="341" width="0.0802%" height="15" fill="rgb(231,194,28)" fg:x="420" fg:w="1"/><text x="33.9308%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7610%" y="373" width="0.0802%" height="15" fill="rgb(210,69,5)" fg:x="421" fg:w="1"/><text x="34.0110%" y="383.50"></text></g><g><title>engine::session::Session::flush (105 samples, 8.42%)</title><rect x="25.5814%" y="549" width="8.4202%" height="15" fill="rgb(216,186,12)" fg:x="319" fg:w="105"/><text x="25.8314%" y="559.50">engine::sess..</text></g><g><title>engine::session::Session::save_changes (104 samples, 8.34%)</title><rect x="25.6616%" y="533" width="8.3400%" height="15" fill="rgb(238,61,15)" fg:x="320" fg:w="104"/><text x="25.9116%" y="543.50">engine::sess..</text></g><g><title>engine::session::state::State::close (104 samples, 8.34%)</title><rect x="25.6616%" y="517" width="8.3400%" height="15" fill="rgb(226,104,1)" fg:x="320" fg:w="104"/><text x="25.9116%" y="527.50">engine::sess..</text></g><g><title>engine::session::state::State::flush_entities (104 samples, 8.34%)</title><rect x="25.6616%" y="501" width="8.3400%" height="15" fill="rgb(229,128,15)" fg:x="320" fg:w="104"/><text x="25.9116%" y="511.50">engine::sess..</text></g><g><title>core::iter::adapters::try_process (100 samples, 8.02%)</title><rect x="25.9824%" y="485" width="8.0192%" height="15" fill="rgb(247,110,15)" fg:x="324" fg:w="100"/><text x="26.2324%" y="495.50">core::iter:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 8.02%)</title><rect x="25.9824%" y="469" width="8.0192%" height="15" fill="rgb(210,74,48)" fg:x="324" fg:w="100"/><text x="26.2324%" y="479.50">&lt;alloc::vec..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (100 samples, 8.02%)</title><rect x="25.9824%" y="453" width="8.0192%" height="15" fill="rgb(246,121,10)" fg:x="324" fg:w="100"/><text x="26.2324%" y="463.50">engine::ses..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.45%)</title><rect x="30.5533%" y="437" width="3.4483%" height="15" fill="rgb(214,156,37)" fg:x="381" fg:w="43"/><text x="30.8033%" y="447.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (34 samples, 2.73%)</title><rect x="31.2751%" y="421" width="2.7265%" height="15" fill="rgb(214,210,34)" fg:x="390" fg:w="34"/><text x="31.5251%" y="431.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (34 samples, 2.73%)</title><rect x="31.2751%" y="405" width="2.7265%" height="15" fill="rgb(237,93,35)" fg:x="390" fg:w="34"/><text x="31.5251%" y="415.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (25 samples, 2.00%)</title><rect x="31.9968%" y="389" width="2.0048%" height="15" fill="rgb(206,36,8)" fg:x="399" fg:w="25"/><text x="32.2468%" y="399.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.8412%" y="373" width="0.1604%" height="15" fill="rgb(208,151,12)" fg:x="422" fg:w="2"/><text x="34.0912%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.9214%" y="357" width="0.0802%" height="15" fill="rgb(225,133,52)" fg:x="423" fg:w="1"/><text x="34.1714%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="34.0016%" y="517" width="0.0802%" height="15" fill="rgb(231,71,53)" fg:x="424" fg:w="1"/><text x="34.2516%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.0016%" y="501" width="0.0802%" height="15" fill="rgb(243,76,21)" fg:x="424" fg:w="1"/><text x="34.2516%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="34.0016%" y="549" width="0.1604%" height="15" fill="rgb(252,144,3)" fg:x="424" fg:w="2"/><text x="34.2516%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="34.0016%" y="533" width="0.1604%" height="15" fill="rgb(231,199,10)" fg:x="424" fg:w="2"/><text x="34.2516%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="34.0818%" y="517" width="0.0802%" height="15" fill="rgb(215,18,11)" fg:x="425" fg:w="1"/><text x="34.3318%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.0818%" y="501" width="0.0802%" height="15" fill="rgb(241,65,24)" fg:x="425" fg:w="1"/><text x="34.3318%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="34.0818%" y="485" width="0.0802%" height="15" fill="rgb(251,192,38)" fg:x="425" fg:w="1"/><text x="34.3318%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="34.0818%" y="469" width="0.0802%" height="15" fill="rgb(205,9,35)" fg:x="425" fg:w="1"/><text x="34.3318%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.0818%" y="453" width="0.0802%" height="15" fill="rgb(229,225,49)" fg:x="425" fg:w="1"/><text x="34.3318%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0818%" y="437" width="0.0802%" height="15" fill="rgb(207,125,39)" fg:x="425" fg:w="1"/><text x="34.3318%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="34.1620%" y="533" width="0.0802%" height="15" fill="rgb(222,78,19)" fg:x="426" fg:w="1"/><text x="34.4120%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.1620%" y="517" width="0.0802%" height="15" fill="rgb(248,207,20)" fg:x="426" fg:w="1"/><text x="34.4120%" y="527.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="34.2422%" y="469" width="0.0802%" height="15" fill="rgb(205,103,49)" fg:x="427" fg:w="1"/><text x="34.4922%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="34.2422%" y="453" width="0.0802%" height="15" fill="rgb(216,42,28)" fg:x="427" fg:w="1"/><text x="34.4922%" y="463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="34.2422%" y="437" width="0.0802%" height="15" fill="rgb(213,205,53)" fg:x="427" fg:w="1"/><text x="34.4922%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="34.2422%" y="421" width="0.0802%" height="15" fill="rgb(239,140,53)" fg:x="427" fg:w="1"/><text x="34.4922%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="34.2422%" y="405" width="0.0802%" height="15" fill="rgb(248,95,9)" fg:x="427" fg:w="1"/><text x="34.4922%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="34.2422%" y="389" width="0.0802%" height="15" fill="rgb(254,58,47)" fg:x="427" fg:w="1"/><text x="34.4922%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="34.2422%" y="373" width="0.0802%" height="15" fill="rgb(234,227,14)" fg:x="427" fg:w="1"/><text x="34.4922%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="34.2422%" y="517" width="0.1604%" height="15" fill="rgb(205,192,45)" fg:x="427" fg:w="2"/><text x="34.4922%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="34.2422%" y="501" width="0.1604%" height="15" fill="rgb(253,187,31)" fg:x="427" fg:w="2"/><text x="34.4922%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="34.2422%" y="485" width="0.1604%" height="15" fill="rgb(222,6,32)" fg:x="427" fg:w="2"/><text x="34.4922%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.3224%" y="469" width="0.0802%" height="15" fill="rgb(249,190,19)" fg:x="428" fg:w="1"/><text x="34.5724%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.3224%" y="453" width="0.0802%" height="15" fill="rgb(251,28,20)" fg:x="428" fg:w="1"/><text x="34.5724%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.3224%" y="437" width="0.0802%" height="15" fill="rgb(210,223,40)" fg:x="428" fg:w="1"/><text x="34.5724%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="34.3224%" y="421" width="0.0802%" height="15" fill="rgb(216,137,22)" fg:x="428" fg:w="1"/><text x="34.5724%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="34.3224%" y="405" width="0.0802%" height="15" fill="rgb(247,39,34)" fg:x="428" fg:w="1"/><text x="34.5724%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.3224%" y="389" width="0.0802%" height="15" fill="rgb(239,43,50)" fg:x="428" fg:w="1"/><text x="34.5724%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.3224%" y="373" width="0.0802%" height="15" fill="rgb(241,212,9)" fg:x="428" fg:w="1"/><text x="34.5724%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="34.3224%" y="357" width="0.0802%" height="15" fill="rgb(205,8,2)" fg:x="428" fg:w="1"/><text x="34.5724%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="34.3224%" y="341" width="0.0802%" height="15" fill="rgb(217,173,54)" fg:x="428" fg:w="1"/><text x="34.5724%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="34.3224%" y="325" width="0.0802%" height="15" fill="rgb(208,149,52)" fg:x="428" fg:w="1"/><text x="34.5724%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="34.3224%" y="309" width="0.0802%" height="15" fill="rgb(239,99,40)" fg:x="428" fg:w="1"/><text x="34.5724%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.3224%" y="293" width="0.0802%" height="15" fill="rgb(233,214,26)" fg:x="428" fg:w="1"/><text x="34.5724%" y="303.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="34.2422%" y="533" width="0.2406%" height="15" fill="rgb(231,225,37)" fg:x="427" fg:w="3"/><text x="34.4922%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="34.4026%" y="517" width="0.0802%" height="15" fill="rgb(252,55,35)" fg:x="429" fg:w="1"/><text x="34.6526%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (5 samples, 0.40%)</title><rect x="34.1620%" y="549" width="0.4010%" height="15" fill="rgb(239,43,18)" fg:x="426" fg:w="5"/><text x="34.4120%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="34.4828%" y="533" width="0.0802%" height="15" fill="rgb(251,125,49)" fg:x="430" fg:w="1"/><text x="34.7328%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="34.4828%" y="517" width="0.0802%" height="15" fill="rgb(212,83,54)" fg:x="430" fg:w="1"/><text x="34.7328%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4828%" y="501" width="0.0802%" height="15" fill="rgb(250,75,6)" fg:x="430" fg:w="1"/><text x="34.7328%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5630%" y="501" width="0.0802%" height="15" fill="rgb(252,36,40)" fg:x="431" fg:w="1"/><text x="34.8130%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5630%" y="485" width="0.0802%" height="15" fill="rgb(230,91,51)" fg:x="431" fg:w="1"/><text x="34.8130%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5630%" y="469" width="0.0802%" height="15" fill="rgb(212,92,28)" fg:x="431" fg:w="1"/><text x="34.8130%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5630%" y="453" width="0.0802%" height="15" fill="rgb(227,13,22)" fg:x="431" fg:w="1"/><text x="34.8130%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5630%" y="437" width="0.0802%" height="15" fill="rgb(239,204,32)" fg:x="431" fg:w="1"/><text x="34.8130%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.5630%" y="421" width="0.0802%" height="15" fill="rgb(228,49,41)" fg:x="431" fg:w="1"/><text x="34.8130%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.5630%" y="405" width="0.0802%" height="15" fill="rgb(206,95,6)" fg:x="431" fg:w="1"/><text x="34.8130%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.5630%" y="389" width="0.0802%" height="15" fill="rgb(251,20,14)" fg:x="431" fg:w="1"/><text x="34.8130%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5630%" y="373" width="0.0802%" height="15" fill="rgb(214,99,28)" fg:x="431" fg:w="1"/><text x="34.8130%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5630%" y="357" width="0.0802%" height="15" fill="rgb(239,122,54)" fg:x="431" fg:w="1"/><text x="34.8130%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.5630%" y="341" width="0.0802%" height="15" fill="rgb(218,217,46)" fg:x="431" fg:w="1"/><text x="34.8130%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.5630%" y="325" width="0.0802%" height="15" fill="rgb(249,106,28)" fg:x="431" fg:w="1"/><text x="34.8130%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.5630%" y="309" width="0.0802%" height="15" fill="rgb(250,158,18)" fg:x="431" fg:w="1"/><text x="34.8130%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.5630%" y="293" width="0.0802%" height="15" fill="rgb(226,137,29)" fg:x="431" fg:w="1"/><text x="34.8130%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5630%" y="277" width="0.0802%" height="15" fill="rgb(210,188,1)" fg:x="431" fg:w="1"/><text x="34.8130%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="34.6431%" y="501" width="0.0802%" height="15" fill="rgb(227,84,42)" fg:x="432" fg:w="1"/><text x="34.8931%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6431%" y="485" width="0.0802%" height="15" fill="rgb(222,147,48)" fg:x="432" fg:w="1"/><text x="34.8931%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="34.5630%" y="517" width="0.2406%" height="15" fill="rgb(241,150,43)" fg:x="431" fg:w="3"/><text x="34.8130%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.7233%" y="501" width="0.0802%" height="15" fill="rgb(206,139,52)" fg:x="433" fg:w="1"/><text x="34.9733%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.7233%" y="485" width="0.0802%" height="15" fill="rgb(230,63,14)" fg:x="433" fg:w="1"/><text x="34.9733%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.7233%" y="469" width="0.0802%" height="15" fill="rgb(247,8,20)" fg:x="433" fg:w="1"/><text x="34.9733%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.7233%" y="453" width="0.0802%" height="15" fill="rgb(213,115,4)" fg:x="433" fg:w="1"/><text x="34.9733%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="34.5630%" y="533" width="0.3208%" height="15" fill="rgb(241,79,49)" fg:x="431" fg:w="4"/><text x="34.8130%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.8035%" y="517" width="0.0802%" height="15" fill="rgb(222,42,35)" fg:x="434" fg:w="1"/><text x="35.0535%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8837%" y="533" width="0.0802%" height="15" fill="rgb(247,59,23)" fg:x="435" fg:w="1"/><text x="35.1337%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8837%" y="517" width="0.0802%" height="15" fill="rgb(247,93,18)" fg:x="435" fg:w="1"/><text x="35.1337%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8837%" y="501" width="0.0802%" height="15" fill="rgb(249,107,47)" fg:x="435" fg:w="1"/><text x="35.1337%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8837%" y="485" width="0.0802%" height="15" fill="rgb(219,27,1)" fg:x="435" fg:w="1"/><text x="35.1337%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8837%" y="469" width="0.0802%" height="15" fill="rgb(217,82,32)" fg:x="435" fg:w="1"/><text x="35.1337%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.8837%" y="453" width="0.0802%" height="15" fill="rgb(250,129,47)" fg:x="435" fg:w="1"/><text x="35.1337%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.8837%" y="437" width="0.0802%" height="15" fill="rgb(253,88,35)" fg:x="435" fg:w="1"/><text x="35.1337%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.9639%" y="501" width="0.0802%" height="15" fill="rgb(245,221,14)" fg:x="436" fg:w="1"/><text x="35.2139%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.9639%" y="485" width="0.0802%" height="15" fill="rgb(217,119,54)" fg:x="436" fg:w="1"/><text x="35.2139%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9639%" y="469" width="0.0802%" height="15" fill="rgb(247,128,31)" fg:x="436" fg:w="1"/><text x="35.2139%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="34.9639%" y="517" width="0.2406%" height="15" fill="rgb(211,99,22)" fg:x="436" fg:w="3"/><text x="35.2139%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.0441%" y="501" width="0.1604%" height="15" fill="rgb(212,20,17)" fg:x="437" fg:w="2"/><text x="35.2941%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.0441%" y="485" width="0.1604%" height="15" fill="rgb(209,159,29)" fg:x="437" fg:w="2"/><text x="35.2941%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.1243%" y="469" width="0.0802%" height="15" fill="rgb(222,177,53)" fg:x="438" fg:w="1"/><text x="35.3743%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1243%" y="453" width="0.0802%" height="15" fill="rgb(234,46,43)" fg:x="438" fg:w="1"/><text x="35.3743%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.1243%" y="437" width="0.0802%" height="15" fill="rgb(208,108,14)" fg:x="438" fg:w="1"/><text x="35.3743%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="35.2045%" y="501" width="0.0802%" height="15" fill="rgb(226,78,53)" fg:x="439" fg:w="1"/><text x="35.4545%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.2045%" y="485" width="0.0802%" height="15" fill="rgb(230,20,41)" fg:x="439" fg:w="1"/><text x="35.4545%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.2045%" y="469" width="0.0802%" height="15" fill="rgb(213,195,35)" fg:x="439" fg:w="1"/><text x="35.4545%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="35.2045%" y="453" width="0.0802%" height="15" fill="rgb(242,62,36)" fg:x="439" fg:w="1"/><text x="35.4545%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="35.2847%" y="485" width="0.0802%" height="15" fill="rgb(222,210,37)" fg:x="440" fg:w="1"/><text x="35.5347%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="35.2847%" y="469" width="0.0802%" height="15" fill="rgb(232,107,19)" fg:x="440" fg:w="1"/><text x="35.5347%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="35.2045%" y="517" width="0.3208%" height="15" fill="rgb(235,85,17)" fg:x="439" fg:w="4"/><text x="35.4545%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="35.2847%" y="501" width="0.2406%" height="15" fill="rgb(219,195,31)" fg:x="440" fg:w="3"/><text x="35.5347%" y="511.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="35.3649%" y="485" width="0.1604%" height="15" fill="rgb(231,183,30)" fg:x="441" fg:w="2"/><text x="35.6149%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.4451%" y="469" width="0.0802%" height="15" fill="rgb(212,0,11)" fg:x="442" fg:w="1"/><text x="35.6951%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.4451%" y="453" width="0.0802%" height="15" fill="rgb(249,53,54)" fg:x="442" fg:w="1"/><text x="35.6951%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="35.5253%" y="469" width="0.0802%" height="15" fill="rgb(211,118,13)" fg:x="443" fg:w="1"/><text x="35.7753%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.5253%" y="453" width="0.0802%" height="15" fill="rgb(237,42,9)" fg:x="443" fg:w="1"/><text x="35.7753%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5253%" y="437" width="0.0802%" height="15" fill="rgb(227,68,32)" fg:x="443" fg:w="1"/><text x="35.7753%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.5253%" y="421" width="0.0802%" height="15" fill="rgb(238,10,7)" fg:x="443" fg:w="1"/><text x="35.7753%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5253%" y="405" width="0.0802%" height="15" fill="rgb(224,42,12)" fg:x="443" fg:w="1"/><text x="35.7753%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.5253%" y="389" width="0.0802%" height="15" fill="rgb(252,190,5)" fg:x="443" fg:w="1"/><text x="35.7753%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5253%" y="373" width="0.0802%" height="15" fill="rgb(220,214,39)" fg:x="443" fg:w="1"/><text x="35.7753%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5253%" y="357" width="0.0802%" height="15" fill="rgb(247,98,4)" fg:x="443" fg:w="1"/><text x="35.7753%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="35.5253%" y="501" width="0.2406%" height="15" fill="rgb(211,60,12)" fg:x="443" fg:w="3"/><text x="35.7753%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="35.5253%" y="485" width="0.2406%" height="15" fill="rgb(224,42,10)" fg:x="443" fg:w="3"/><text x="35.7753%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="35.6055%" y="469" width="0.1604%" height="15" fill="rgb(217,167,4)" fg:x="444" fg:w="2"/><text x="35.8555%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="35.6055%" y="453" width="0.1604%" height="15" fill="rgb(253,18,17)" fg:x="444" fg:w="2"/><text x="35.8555%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="35.6055%" y="437" width="0.1604%" height="15" fill="rgb(249,186,44)" fg:x="444" fg:w="2"/><text x="35.8555%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="35.6055%" y="421" width="0.1604%" height="15" fill="rgb(254,124,54)" fg:x="444" fg:w="2"/><text x="35.8555%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.6856%" y="405" width="0.0802%" height="15" fill="rgb(220,124,39)" fg:x="445" fg:w="1"/><text x="35.9356%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.7658%" y="469" width="0.0802%" height="15" fill="rgb(225,96,46)" fg:x="446" fg:w="1"/><text x="36.0158%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.7658%" y="453" width="0.0802%" height="15" fill="rgb(221,106,12)" fg:x="446" fg:w="1"/><text x="36.0158%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="35.8460%" y="469" width="0.0802%" height="15" fill="rgb(227,133,23)" fg:x="447" fg:w="1"/><text x="36.0960%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.8460%" y="453" width="0.0802%" height="15" fill="rgb(216,44,52)" fg:x="447" fg:w="1"/><text x="36.0960%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8460%" y="437" width="0.0802%" height="15" fill="rgb(239,149,7)" fg:x="447" fg:w="1"/><text x="36.0960%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="35.5253%" y="517" width="0.4812%" height="15" fill="rgb(211,157,31)" fg:x="443" fg:w="6"/><text x="35.7753%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="35.7658%" y="501" width="0.2406%" height="15" fill="rgb(206,215,22)" fg:x="446" fg:w="3"/><text x="36.0158%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="35.7658%" y="485" width="0.2406%" height="15" fill="rgb(208,113,15)" fg:x="446" fg:w="3"/><text x="36.0158%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.9262%" y="469" width="0.0802%" height="15" fill="rgb(207,189,15)" fg:x="448" fg:w="1"/><text x="36.1762%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9262%" y="453" width="0.0802%" height="15" fill="rgb(231,115,4)" fg:x="448" fg:w="1"/><text x="36.1762%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9262%" y="437" width="0.0802%" height="15" fill="rgb(253,117,2)" fg:x="448" fg:w="1"/><text x="36.1762%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9262%" y="421" width="0.0802%" height="15" fill="rgb(248,48,24)" fg:x="448" fg:w="1"/><text x="36.1762%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="34.9639%" y="533" width="1.1227%" height="15" fill="rgb(241,28,46)" fg:x="436" fg:w="14"/><text x="35.2139%" y="543.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="36.0064%" y="517" width="0.0802%" height="15" fill="rgb(216,165,52)" fg:x="449" fg:w="1"/><text x="36.2564%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="36.0064%" y="501" width="0.0802%" height="15" fill="rgb(220,222,34)" fg:x="449" fg:w="1"/><text x="36.2564%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="36.0064%" y="485" width="0.0802%" height="15" fill="rgb(247,222,49)" fg:x="449" fg:w="1"/><text x="36.2564%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.0866%" y="501" width="0.0802%" height="15" fill="rgb(240,10,31)" fg:x="450" fg:w="1"/><text x="36.3366%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.0866%" y="485" width="0.0802%" height="15" fill="rgb(221,199,35)" fg:x="450" fg:w="1"/><text x="36.3366%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.0866%" y="517" width="0.1604%" height="15" fill="rgb(230,223,11)" fg:x="450" fg:w="2"/><text x="36.3366%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1668%" y="501" width="0.0802%" height="15" fill="rgb(218,82,45)" fg:x="451" fg:w="1"/><text x="36.4168%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (22 samples, 1.76%)</title><rect x="34.5630%" y="549" width="1.7642%" height="15" fill="rgb(233,213,33)" fg:x="431" fg:w="22"/><text x="34.8130%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="36.0866%" y="533" width="0.2406%" height="15" fill="rgb(210,143,52)" fg:x="450" fg:w="3"/><text x="36.3366%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2470%" y="517" width="0.0802%" height="15" fill="rgb(206,95,4)" fg:x="452" fg:w="1"/><text x="36.4970%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2470%" y="501" width="0.0802%" height="15" fill="rgb(246,164,46)" fg:x="452" fg:w="1"/><text x="36.4970%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.2470%" y="485" width="0.0802%" height="15" fill="rgb(213,210,47)" fg:x="452" fg:w="1"/><text x="36.4970%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.2470%" y="469" width="0.0802%" height="15" fill="rgb(210,12,38)" fg:x="452" fg:w="1"/><text x="36.4970%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.2470%" y="453" width="0.0802%" height="15" fill="rgb(252,192,54)" fg:x="452" fg:w="1"/><text x="36.4970%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.2470%" y="437" width="0.0802%" height="15" fill="rgb(242,92,6)" fg:x="452" fg:w="1"/><text x="36.4970%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.2470%" y="421" width="0.0802%" height="15" fill="rgb(253,154,15)" fg:x="452" fg:w="1"/><text x="36.4970%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.2470%" y="405" width="0.0802%" height="15" fill="rgb(209,20,43)" fg:x="452" fg:w="1"/><text x="36.4970%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.2470%" y="389" width="0.0802%" height="15" fill="rgb(232,28,49)" fg:x="452" fg:w="1"/><text x="36.4970%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.2470%" y="373" width="0.0802%" height="15" fill="rgb(248,131,53)" fg:x="452" fg:w="1"/><text x="36.4970%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.2470%" y="357" width="0.0802%" height="15" fill="rgb(214,16,30)" fg:x="452" fg:w="1"/><text x="36.4970%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2470%" y="341" width="0.0802%" height="15" fill="rgb(245,16,0)" fg:x="452" fg:w="1"/><text x="36.4970%" y="351.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="36.3272%" y="549" width="0.0802%" height="15" fill="rgb(245,17,35)" fg:x="453" fg:w="1"/><text x="36.5772%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="36.3272%" y="533" width="0.0802%" height="15" fill="rgb(249,27,53)" fg:x="453" fg:w="1"/><text x="36.5772%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="36.3272%" y="517" width="0.0802%" height="15" fill="rgb(214,73,24)" fg:x="453" fg:w="1"/><text x="36.5772%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="36.3272%" y="501" width="0.0802%" height="15" fill="rgb(223,84,37)" fg:x="453" fg:w="1"/><text x="36.5772%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.3272%" y="485" width="0.0802%" height="15" fill="rgb(210,109,28)" fg:x="453" fg:w="1"/><text x="36.5772%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3272%" y="469" width="0.0802%" height="15" fill="rgb(208,186,6)" fg:x="453" fg:w="1"/><text x="36.5772%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.4876%" y="389" width="0.0802%" height="15" fill="rgb(235,201,30)" fg:x="455" fg:w="1"/><text x="36.7376%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.4876%" y="373" width="0.0802%" height="15" fill="rgb(216,198,48)" fg:x="455" fg:w="1"/><text x="36.7376%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5678%" y="389" width="0.0802%" height="15" fill="rgb(254,186,25)" fg:x="456" fg:w="1"/><text x="36.8178%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="36.4074%" y="485" width="0.3208%" height="15" fill="rgb(227,87,5)" fg:x="454" fg:w="4"/><text x="36.6574%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="36.4074%" y="469" width="0.3208%" height="15" fill="rgb(236,205,25)" fg:x="454" fg:w="4"/><text x="36.6574%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="36.4074%" y="453" width="0.3208%" height="15" fill="rgb(229,99,32)" fg:x="454" fg:w="4"/><text x="36.6574%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.4074%" y="437" width="0.3208%" height="15" fill="rgb(231,177,31)" fg:x="454" fg:w="4"/><text x="36.6574%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="36.4074%" y="421" width="0.3208%" height="15" fill="rgb(246,15,2)" fg:x="454" fg:w="4"/><text x="36.6574%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="36.4074%" y="405" width="0.3208%" height="15" fill="rgb(207,39,15)" fg:x="454" fg:w="4"/><text x="36.6574%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.6480%" y="389" width="0.0802%" height="15" fill="rgb(207,44,9)" fg:x="457" fg:w="1"/><text x="36.8980%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.6480%" y="373" width="0.0802%" height="15" fill="rgb(225,224,33)" fg:x="457" fg:w="1"/><text x="36.8980%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="36.7281%" y="469" width="0.0802%" height="15" fill="rgb(252,151,3)" fg:x="458" fg:w="1"/><text x="36.9781%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7281%" y="453" width="0.0802%" height="15" fill="rgb(211,140,13)" fg:x="458" fg:w="1"/><text x="36.9781%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7281%" y="437" width="0.0802%" height="15" fill="rgb(239,225,17)" fg:x="458" fg:w="1"/><text x="36.9781%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.7281%" y="421" width="0.0802%" height="15" fill="rgb(223,170,52)" fg:x="458" fg:w="1"/><text x="36.9781%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7281%" y="405" width="0.0802%" height="15" fill="rgb(212,64,21)" fg:x="458" fg:w="1"/><text x="36.9781%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7281%" y="389" width="0.0802%" height="15" fill="rgb(236,126,48)" fg:x="458" fg:w="1"/><text x="36.9781%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7281%" y="373" width="0.0802%" height="15" fill="rgb(209,135,11)" fg:x="458" fg:w="1"/><text x="36.9781%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="36.4074%" y="517" width="0.4812%" height="15" fill="rgb(228,126,40)" fg:x="454" fg:w="6"/><text x="36.6574%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="36.4074%" y="501" width="0.4812%" height="15" fill="rgb(205,196,36)" fg:x="454" fg:w="6"/><text x="36.6574%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="36.7281%" y="485" width="0.1604%" height="15" fill="rgb(243,160,33)" fg:x="458" fg:w="2"/><text x="36.9781%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.8083%" y="469" width="0.0802%" height="15" fill="rgb(210,84,20)" fg:x="459" fg:w="1"/><text x="37.0583%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="36.8885%" y="501" width="0.0802%" height="15" fill="rgb(228,213,30)" fg:x="460" fg:w="1"/><text x="37.1385%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8885%" y="485" width="0.0802%" height="15" fill="rgb(252,33,45)" fg:x="460" fg:w="1"/><text x="37.1385%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="36.8885%" y="469" width="0.0802%" height="15" fill="rgb(254,227,20)" fg:x="460" fg:w="1"/><text x="37.1385%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.8885%" y="453" width="0.0802%" height="15" fill="rgb(228,192,2)" fg:x="460" fg:w="1"/><text x="37.1385%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="36.9687%" y="453" width="0.0802%" height="15" fill="rgb(233,32,8)" fg:x="461" fg:w="1"/><text x="37.2187%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="36.9687%" y="501" width="0.2406%" height="15" fill="rgb(220,146,47)" fg:x="461" fg:w="3"/><text x="37.2187%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="36.9687%" y="485" width="0.2406%" height="15" fill="rgb(246,194,1)" fg:x="461" fg:w="3"/><text x="37.2187%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="36.9687%" y="469" width="0.2406%" height="15" fill="rgb(218,203,9)" fg:x="461" fg:w="3"/><text x="37.2187%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="37.0489%" y="453" width="0.1604%" height="15" fill="rgb(237,97,14)" fg:x="462" fg:w="2"/><text x="37.2989%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.1291%" y="437" width="0.0802%" height="15" fill="rgb(239,76,15)" fg:x="463" fg:w="1"/><text x="37.3791%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (11 samples, 0.88%)</title><rect x="36.4074%" y="549" width="0.8821%" height="15" fill="rgb(222,53,45)" fg:x="454" fg:w="11"/><text x="36.6574%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (11 samples, 0.88%)</title><rect x="36.4074%" y="533" width="0.8821%" height="15" fill="rgb(237,88,5)" fg:x="454" fg:w="11"/><text x="36.6574%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.40%)</title><rect x="36.8885%" y="517" width="0.4010%" height="15" fill="rgb(218,223,35)" fg:x="460" fg:w="5"/><text x="37.1385%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2093%" y="501" width="0.0802%" height="15" fill="rgb(243,229,38)" fg:x="464" fg:w="1"/><text x="37.4593%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.2093%" y="485" width="0.0802%" height="15" fill="rgb(240,75,41)" fg:x="464" fg:w="1"/><text x="37.4593%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2093%" y="469" width="0.0802%" height="15" fill="rgb(209,110,37)" fg:x="464" fg:w="1"/><text x="37.4593%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.2093%" y="453" width="0.0802%" height="15" fill="rgb(221,130,46)" fg:x="464" fg:w="1"/><text x="37.4593%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2093%" y="437" width="0.0802%" height="15" fill="rgb(237,160,20)" fg:x="464" fg:w="1"/><text x="37.4593%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.2895%" y="517" width="0.0802%" height="15" fill="rgb(234,126,24)" fg:x="465" fg:w="1"/><text x="37.5395%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.2895%" y="501" width="0.0802%" height="15" fill="rgb(207,177,9)" fg:x="465" fg:w="1"/><text x="37.5395%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.2895%" y="485" width="0.0802%" height="15" fill="rgb(231,191,33)" fg:x="465" fg:w="1"/><text x="37.5395%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.2895%" y="469" width="0.0802%" height="15" fill="rgb(207,42,1)" fg:x="465" fg:w="1"/><text x="37.5395%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.2895%" y="453" width="0.0802%" height="15" fill="rgb(218,34,50)" fg:x="465" fg:w="1"/><text x="37.5395%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.2895%" y="437" width="0.0802%" height="15" fill="rgb(254,126,39)" fg:x="465" fg:w="1"/><text x="37.5395%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.2895%" y="421" width="0.0802%" height="15" fill="rgb(251,17,26)" fg:x="465" fg:w="1"/><text x="37.5395%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.2895%" y="405" width="0.0802%" height="15" fill="rgb(252,215,34)" fg:x="465" fg:w="1"/><text x="37.5395%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.2895%" y="389" width="0.0802%" height="15" fill="rgb(217,120,44)" fg:x="465" fg:w="1"/><text x="37.5395%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.2895%" y="373" width="0.0802%" height="15" fill="rgb(211,31,11)" fg:x="465" fg:w="1"/><text x="37.5395%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.5301%" y="485" width="0.0802%" height="15" fill="rgb(222,69,51)" fg:x="468" fg:w="1"/><text x="37.7801%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="37.6103%" y="485" width="0.2406%" height="15" fill="rgb(215,229,42)" fg:x="469" fg:w="3"/><text x="37.8603%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="37.6103%" y="469" width="0.2406%" height="15" fill="rgb(212,102,15)" fg:x="469" fg:w="3"/><text x="37.8603%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="37.6103%" y="453" width="0.2406%" height="15" fill="rgb(205,179,41)" fg:x="469" fg:w="3"/><text x="37.8603%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="37.6103%" y="437" width="0.2406%" height="15" fill="rgb(219,148,46)" fg:x="469" fg:w="3"/><text x="37.8603%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="37.6103%" y="421" width="0.2406%" height="15" fill="rgb(243,40,19)" fg:x="469" fg:w="3"/><text x="37.8603%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7706%" y="405" width="0.0802%" height="15" fill="rgb(208,206,34)" fg:x="471" fg:w="1"/><text x="38.0206%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (8 samples, 0.64%)</title><rect x="37.2895%" y="533" width="0.6415%" height="15" fill="rgb(244,184,38)" fg:x="465" fg:w="8"/><text x="37.5395%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="37.3697%" y="517" width="0.5613%" height="15" fill="rgb(244,151,47)" fg:x="466" fg:w="7"/><text x="37.6197%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="37.3697%" y="501" width="0.5613%" height="15" fill="rgb(236,134,42)" fg:x="466" fg:w="7"/><text x="37.6197%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.8508%" y="485" width="0.0802%" height="15" fill="rgb(233,93,22)" fg:x="472" fg:w="1"/><text x="38.1008%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.8508%" y="469" width="0.0802%" height="15" fill="rgb(211,202,10)" fg:x="472" fg:w="1"/><text x="38.1008%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="37.8508%" y="453" width="0.0802%" height="15" fill="rgb(240,63,8)" fg:x="472" fg:w="1"/><text x="38.1008%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="37.8508%" y="437" width="0.0802%" height="15" fill="rgb(214,9,4)" fg:x="472" fg:w="1"/><text x="38.1008%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.8508%" y="421" width="0.0802%" height="15" fill="rgb(243,66,45)" fg:x="472" fg:w="1"/><text x="38.1008%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="37.9310%" y="533" width="0.0802%" height="15" fill="rgb(220,50,42)" fg:x="473" fg:w="1"/><text x="38.1810%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0112%" y="485" width="0.0802%" height="15" fill="rgb(220,134,27)" fg:x="474" fg:w="1"/><text x="38.2612%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0112%" y="469" width="0.0802%" height="15" fill="rgb(246,151,50)" fg:x="474" fg:w="1"/><text x="38.2612%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.0112%" y="453" width="0.0802%" height="15" fill="rgb(238,216,27)" fg:x="474" fg:w="1"/><text x="38.2612%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (13 samples, 1.04%)</title><rect x="37.2895%" y="549" width="1.0425%" height="15" fill="rgb(250,92,11)" fg:x="465" fg:w="13"/><text x="37.5395%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="38.0112%" y="533" width="0.3208%" height="15" fill="rgb(248,183,6)" fg:x="474" fg:w="4"/><text x="38.2612%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (4 samples, 0.32%)</title><rect x="38.0112%" y="517" width="0.3208%" height="15" fill="rgb(211,204,50)" fg:x="474" fg:w="4"/><text x="38.2612%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="38.0112%" y="501" width="0.3208%" height="15" fill="rgb(252,55,47)" fg:x="474" fg:w="4"/><text x="38.2612%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="38.0914%" y="485" width="0.2406%" height="15" fill="rgb(240,198,32)" fg:x="475" fg:w="3"/><text x="38.3414%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (3 samples, 0.24%)</title><rect x="38.0914%" y="469" width="0.2406%" height="15" fill="rgb(224,203,19)" fg:x="475" fg:w="3"/><text x="38.3414%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (3 samples, 0.24%)</title><rect x="38.0914%" y="453" width="0.2406%" height="15" fill="rgb(205,27,16)" fg:x="475" fg:w="3"/><text x="38.3414%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (3 samples, 0.24%)</title><rect x="38.0914%" y="437" width="0.2406%" height="15" fill="rgb(224,226,17)" fg:x="475" fg:w="3"/><text x="38.3414%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.0914%" y="421" width="0.2406%" height="15" fill="rgb(205,216,54)" fg:x="475" fg:w="3"/><text x="38.3414%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="38.1716%" y="405" width="0.1604%" height="15" fill="rgb(248,168,46)" fg:x="476" fg:w="2"/><text x="38.4216%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="38.1716%" y="389" width="0.1604%" height="15" fill="rgb(226,111,45)" fg:x="476" fg:w="2"/><text x="38.4216%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.1716%" y="373" width="0.1604%" height="15" fill="rgb(231,15,9)" fg:x="476" fg:w="2"/><text x="38.4216%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.1716%" y="357" width="0.1604%" height="15" fill="rgb(243,168,3)" fg:x="476" fg:w="2"/><text x="38.4216%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2518%" y="341" width="0.0802%" height="15" fill="rgb(221,220,54)" fg:x="477" fg:w="1"/><text x="38.5018%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3320%" y="469" width="0.0802%" height="15" fill="rgb(232,174,38)" fg:x="478" fg:w="1"/><text x="38.5820%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.3320%" y="453" width="0.0802%" height="15" fill="rgb(205,14,38)" fg:x="478" fg:w="1"/><text x="38.5820%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.4122%" y="405" width="0.0802%" height="15" fill="rgb(234,89,19)" fg:x="479" fg:w="1"/><text x="38.6622%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.4122%" y="389" width="0.0802%" height="15" fill="rgb(216,68,51)" fg:x="479" fg:w="1"/><text x="38.6622%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4122%" y="373" width="0.0802%" height="15" fill="rgb(213,49,2)" fg:x="479" fg:w="1"/><text x="38.6622%" y="383.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="38.3320%" y="501" width="0.2406%" height="15" fill="rgb(242,146,30)" fg:x="478" fg:w="3"/><text x="38.5820%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="38.3320%" y="485" width="0.2406%" height="15" fill="rgb(224,188,11)" fg:x="478" fg:w="3"/><text x="38.5820%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.4122%" y="469" width="0.1604%" height="15" fill="rgb(213,159,11)" fg:x="479" fg:w="2"/><text x="38.6622%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.4122%" y="453" width="0.1604%" height="15" fill="rgb(229,13,31)" fg:x="479" fg:w="2"/><text x="38.6622%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="38.4122%" y="437" width="0.1604%" height="15" fill="rgb(209,103,11)" fg:x="479" fg:w="2"/><text x="38.6622%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.4122%" y="421" width="0.1604%" height="15" fill="rgb(206,3,4)" fg:x="479" fg:w="2"/><text x="38.6622%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.4924%" y="405" width="0.0802%" height="15" fill="rgb(252,10,49)" fg:x="480" fg:w="1"/><text x="38.7424%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.4924%" y="389" width="0.0802%" height="15" fill="rgb(217,160,32)" fg:x="480" fg:w="1"/><text x="38.7424%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="38.4924%" y="373" width="0.0802%" height="15" fill="rgb(249,196,0)" fg:x="480" fg:w="1"/><text x="38.7424%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.5726%" y="469" width="0.0802%" height="15" fill="rgb(213,17,48)" fg:x="481" fg:w="1"/><text x="38.8226%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.5726%" y="453" width="0.0802%" height="15" fill="rgb(206,42,46)" fg:x="481" fg:w="1"/><text x="38.8226%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.6528%" y="405" width="0.0802%" height="15" fill="rgb(212,105,24)" fg:x="482" fg:w="1"/><text x="38.9028%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.6528%" y="389" width="0.0802%" height="15" fill="rgb(243,216,30)" fg:x="482" fg:w="1"/><text x="38.9028%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="38.6528%" y="373" width="0.0802%" height="15" fill="rgb(207,121,3)" fg:x="482" fg:w="1"/><text x="38.9028%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.48%)</title><rect x="38.3320%" y="533" width="0.4812%" height="15" fill="rgb(249,78,0)" fg:x="478" fg:w="6"/><text x="38.5820%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="38.3320%" y="517" width="0.4812%" height="15" fill="rgb(244,151,32)" fg:x="478" fg:w="6"/><text x="38.5820%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="38.5726%" y="501" width="0.2406%" height="15" fill="rgb(228,63,25)" fg:x="481" fg:w="3"/><text x="38.8226%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="38.5726%" y="485" width="0.2406%" height="15" fill="rgb(231,158,23)" fg:x="481" fg:w="3"/><text x="38.8226%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.6528%" y="469" width="0.1604%" height="15" fill="rgb(248,107,23)" fg:x="482" fg:w="2"/><text x="38.9028%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.6528%" y="453" width="0.1604%" height="15" fill="rgb(215,168,21)" fg:x="482" fg:w="2"/><text x="38.9028%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="38.6528%" y="437" width="0.1604%" height="15" fill="rgb(227,83,22)" fg:x="482" fg:w="2"/><text x="38.9028%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.6528%" y="421" width="0.1604%" height="15" fill="rgb(217,118,43)" fg:x="482" fg:w="2"/><text x="38.9028%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.7330%" y="405" width="0.0802%" height="15" fill="rgb(229,220,41)" fg:x="483" fg:w="1"/><text x="38.9830%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.7330%" y="389" width="0.0802%" height="15" fill="rgb(254,146,46)" fg:x="483" fg:w="1"/><text x="38.9830%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="38.8132%" y="485" width="0.0802%" height="15" fill="rgb(233,208,31)" fg:x="484" fg:w="1"/><text x="39.0632%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="38.8132%" y="469" width="0.0802%" height="15" fill="rgb(222,162,7)" fg:x="484" fg:w="1"/><text x="39.0632%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.8132%" y="453" width="0.0802%" height="15" fill="rgb(230,117,45)" fg:x="484" fg:w="1"/><text x="39.0632%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8132%" y="437" width="0.0802%" height="15" fill="rgb(239,163,6)" fg:x="484" fg:w="1"/><text x="39.0632%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.8132%" y="421" width="0.0802%" height="15" fill="rgb(246,130,17)" fg:x="484" fg:w="1"/><text x="39.0632%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.8132%" y="405" width="0.0802%" height="15" fill="rgb(216,84,5)" fg:x="484" fg:w="1"/><text x="39.0632%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8132%" y="389" width="0.0802%" height="15" fill="rgb(230,200,21)" fg:x="484" fg:w="1"/><text x="39.0632%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8933%" y="453" width="0.0802%" height="15" fill="rgb(224,2,8)" fg:x="485" fg:w="1"/><text x="39.1433%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8933%" y="437" width="0.0802%" height="15" fill="rgb(238,178,10)" fg:x="485" fg:w="1"/><text x="39.1433%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8933%" y="421" width="0.0802%" height="15" fill="rgb(242,153,24)" fg:x="485" fg:w="1"/><text x="39.1433%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8933%" y="405" width="0.0802%" height="15" fill="rgb(242,32,48)" fg:x="485" fg:w="1"/><text x="39.1433%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8933%" y="389" width="0.0802%" height="15" fill="rgb(227,36,0)" fg:x="485" fg:w="1"/><text x="39.1433%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.8933%" y="373" width="0.0802%" height="15" fill="rgb(251,33,35)" fg:x="485" fg:w="1"/><text x="39.1433%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.8933%" y="357" width="0.0802%" height="15" fill="rgb(232,168,51)" fg:x="485" fg:w="1"/><text x="39.1433%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.8933%" y="341" width="0.0802%" height="15" fill="rgb(228,56,10)" fg:x="485" fg:w="1"/><text x="39.1433%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8933%" y="325" width="0.0802%" height="15" fill="rgb(231,10,26)" fg:x="485" fg:w="1"/><text x="39.1433%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.8933%" y="309" width="0.0802%" height="15" fill="rgb(226,202,12)" fg:x="485" fg:w="1"/><text x="39.1433%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.8933%" y="293" width="0.0802%" height="15" fill="rgb(251,49,21)" fg:x="485" fg:w="1"/><text x="39.1433%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.8933%" y="277" width="0.0802%" height="15" fill="rgb(206,228,28)" fg:x="485" fg:w="1"/><text x="39.1433%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.8933%" y="261" width="0.0802%" height="15" fill="rgb(205,198,31)" fg:x="485" fg:w="1"/><text x="39.1433%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.8933%" y="245" width="0.0802%" height="15" fill="rgb(213,69,1)" fg:x="485" fg:w="1"/><text x="39.1433%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8933%" y="229" width="0.0802%" height="15" fill="rgb(209,177,9)" fg:x="485" fg:w="1"/><text x="39.1433%" y="239.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="38.8132%" y="533" width="0.2406%" height="15" fill="rgb(227,119,30)" fg:x="484" fg:w="3"/><text x="39.0632%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="38.8132%" y="517" width="0.2406%" height="15" fill="rgb(234,106,41)" fg:x="484" fg:w="3"/><text x="39.0632%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="38.8132%" y="501" width="0.2406%" height="15" fill="rgb(244,103,47)" fg:x="484" fg:w="3"/><text x="39.0632%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="38.8933%" y="485" width="0.1604%" height="15" fill="rgb(212,211,25)" fg:x="485" fg:w="2"/><text x="39.1433%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="38.8933%" y="469" width="0.1604%" height="15" fill="rgb(208,63,53)" fg:x="485" fg:w="2"/><text x="39.1433%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.9735%" y="453" width="0.0802%" height="15" fill="rgb(213,176,21)" fg:x="486" fg:w="1"/><text x="39.2235%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.9735%" y="437" width="0.0802%" height="15" fill="rgb(243,124,12)" fg:x="486" fg:w="1"/><text x="39.2235%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.9735%" y="421" width="0.0802%" height="15" fill="rgb(239,2,35)" fg:x="486" fg:w="1"/><text x="39.2235%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.9735%" y="405" width="0.0802%" height="15" fill="rgb(253,169,22)" fg:x="486" fg:w="1"/><text x="39.2235%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.9735%" y="389" width="0.0802%" height="15" fill="rgb(254,51,12)" fg:x="486" fg:w="1"/><text x="39.2235%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.9735%" y="373" width="0.0802%" height="15" fill="rgb(244,17,47)" fg:x="486" fg:w="1"/><text x="39.2235%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.9735%" y="357" width="0.0802%" height="15" fill="rgb(251,45,46)" fg:x="486" fg:w="1"/><text x="39.2235%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (183 samples, 14.68%)</title><rect x="24.4587%" y="565" width="14.6752%" height="15" fill="rgb(223,87,43)" fg:x="305" fg:w="183"/><text x="24.7087%" y="575.50">plugins_core::build::B..</text></g><g><title>plugins_core::tools::set_container (10 samples, 0.80%)</title><rect x="38.3320%" y="549" width="0.8019%" height="15" fill="rgb(230,132,31)" fg:x="478" fg:w="10"/><text x="38.5820%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="39.0537%" y="533" width="0.0802%" height="15" fill="rgb(206,99,1)" fg:x="487" fg:w="1"/><text x="39.3037%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="39.0537%" y="517" width="0.0802%" height="15" fill="rgb(227,110,25)" fg:x="487" fg:w="1"/><text x="39.3037%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0537%" y="501" width="0.0802%" height="15" fill="rgb(217,182,7)" fg:x="487" fg:w="1"/><text x="39.3037%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.0537%" y="485" width="0.0802%" height="15" fill="rgb(250,176,4)" fg:x="487" fg:w="1"/><text x="39.3037%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0537%" y="469" width="0.0802%" height="15" fill="rgb(244,98,30)" fg:x="487" fg:w="1"/><text x="39.3037%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.0537%" y="453" width="0.0802%" height="15" fill="rgb(228,150,42)" fg:x="487" fg:w="1"/><text x="39.3037%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.2943%" y="533" width="0.0802%" height="15" fill="rgb(231,91,46)" fg:x="490" fg:w="1"/><text x="39.5443%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.3745%" y="517" width="0.0802%" height="15" fill="rgb(252,161,32)" fg:x="491" fg:w="1"/><text x="39.6245%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="39.3745%" y="501" width="0.0802%" height="15" fill="rgb(236,69,41)" fg:x="491" fg:w="1"/><text x="39.6245%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3745%" y="485" width="0.0802%" height="15" fill="rgb(212,160,3)" fg:x="491" fg:w="1"/><text x="39.6245%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.3745%" y="469" width="0.0802%" height="15" fill="rgb(216,5,50)" fg:x="491" fg:w="1"/><text x="39.6245%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3745%" y="453" width="0.0802%" height="15" fill="rgb(241,138,25)" fg:x="491" fg:w="1"/><text x="39.6245%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3745%" y="437" width="0.0802%" height="15" fill="rgb(239,42,18)" fg:x="491" fg:w="1"/><text x="39.6245%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.3745%" y="421" width="0.0802%" height="15" fill="rgb(239,40,7)" fg:x="491" fg:w="1"/><text x="39.6245%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.3745%" y="405" width="0.0802%" height="15" fill="rgb(239,11,31)" fg:x="491" fg:w="1"/><text x="39.6245%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.3745%" y="389" width="0.0802%" height="15" fill="rgb(224,77,40)" fg:x="491" fg:w="1"/><text x="39.6245%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.3745%" y="373" width="0.0802%" height="15" fill="rgb(226,15,5)" fg:x="491" fg:w="1"/><text x="39.6245%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.3745%" y="357" width="0.0802%" height="15" fill="rgb(254,188,5)" fg:x="491" fg:w="1"/><text x="39.6245%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="39.4547%" y="501" width="0.0802%" height="15" fill="rgb(241,148,52)" fg:x="492" fg:w="1"/><text x="39.7047%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="39.4547%" y="485" width="0.0802%" height="15" fill="rgb(251,48,36)" fg:x="492" fg:w="1"/><text x="39.7047%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="39.4547%" y="469" width="0.0802%" height="15" fill="rgb(243,83,13)" fg:x="492" fg:w="1"/><text x="39.7047%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.4547%" y="453" width="0.0802%" height="15" fill="rgb(210,105,0)" fg:x="492" fg:w="1"/><text x="39.7047%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.4547%" y="437" width="0.0802%" height="15" fill="rgb(239,60,36)" fg:x="492" fg:w="1"/><text x="39.7047%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.4547%" y="421" width="0.0802%" height="15" fill="rgb(210,20,0)" fg:x="492" fg:w="1"/><text x="39.7047%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4547%" y="405" width="0.0802%" height="15" fill="rgb(244,26,53)" fg:x="492" fg:w="1"/><text x="39.7047%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.5349%" y="405" width="0.0802%" height="15" fill="rgb(240,100,49)" fg:x="493" fg:w="1"/><text x="39.7849%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.5349%" y="389" width="0.0802%" height="15" fill="rgb(250,46,45)" fg:x="493" fg:w="1"/><text x="39.7849%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="39.5349%" y="453" width="0.1604%" height="15" fill="rgb(220,181,29)" fg:x="493" fg:w="2"/><text x="39.7849%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.5349%" y="437" width="0.1604%" height="15" fill="rgb(213,137,33)" fg:x="493" fg:w="2"/><text x="39.7849%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5349%" y="421" width="0.1604%" height="15" fill="rgb(213,27,48)" fg:x="493" fg:w="2"/><text x="39.7849%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.6151%" y="405" width="0.0802%" height="15" fill="rgb(245,180,39)" fg:x="494" fg:w="1"/><text x="39.8651%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.6151%" y="389" width="0.0802%" height="15" fill="rgb(212,158,42)" fg:x="494" fg:w="1"/><text x="39.8651%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.6151%" y="373" width="0.0802%" height="15" fill="rgb(228,193,18)" fg:x="494" fg:w="1"/><text x="39.8651%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.6151%" y="357" width="0.0802%" height="15" fill="rgb(245,172,29)" fg:x="494" fg:w="1"/><text x="39.8651%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.6151%" y="341" width="0.0802%" height="15" fill="rgb(207,98,24)" fg:x="494" fg:w="1"/><text x="39.8651%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="39.6953%" y="405" width="0.1604%" height="15" fill="rgb(249,92,26)" fg:x="495" fg:w="2"/><text x="39.9453%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.7755%" y="389" width="0.0802%" height="15" fill="rgb(217,176,26)" fg:x="496" fg:w="1"/><text x="40.0255%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (5 samples, 0.40%)</title><rect x="39.5349%" y="469" width="0.4010%" height="15" fill="rgb(221,8,39)" fg:x="493" fg:w="5"/><text x="39.7849%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="39.6953%" y="453" width="0.2406%" height="15" fill="rgb(208,90,18)" fg:x="495" fg:w="3"/><text x="39.9453%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="39.6953%" y="437" width="0.2406%" height="15" fill="rgb(207,202,30)" fg:x="495" fg:w="3"/><text x="39.9453%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="39.6953%" y="421" width="0.2406%" height="15" fill="rgb(231,124,22)" fg:x="495" fg:w="3"/><text x="39.9453%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8557%" y="405" width="0.0802%" height="15" fill="rgb(206,15,5)" fg:x="497" fg:w="1"/><text x="40.1057%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8557%" y="389" width="0.0802%" height="15" fill="rgb(239,16,52)" fg:x="497" fg:w="1"/><text x="40.1057%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8557%" y="373" width="0.0802%" height="15" fill="rgb(245,213,29)" fg:x="497" fg:w="1"/><text x="40.1057%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="39.5349%" y="485" width="0.4812%" height="15" fill="rgb(213,203,36)" fg:x="493" fg:w="6"/><text x="39.7849%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9358%" y="469" width="0.0802%" height="15" fill="rgb(209,55,18)" fg:x="498" fg:w="1"/><text x="40.1858%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9358%" y="453" width="0.0802%" height="15" fill="rgb(207,133,49)" fg:x="498" fg:w="1"/><text x="40.1858%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.9358%" y="437" width="0.0802%" height="15" fill="rgb(240,33,46)" fg:x="498" fg:w="1"/><text x="40.1858%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.9358%" y="421" width="0.0802%" height="15" fill="rgb(212,35,2)" fg:x="498" fg:w="1"/><text x="40.1858%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.9358%" y="405" width="0.0802%" height="15" fill="rgb(231,119,28)" fg:x="498" fg:w="1"/><text x="40.1858%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.9358%" y="389" width="0.0802%" height="15" fill="rgb(252,178,7)" fg:x="498" fg:w="1"/><text x="40.1858%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.9358%" y="373" width="0.0802%" height="15" fill="rgb(251,91,4)" fg:x="498" fg:w="1"/><text x="40.1858%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.9358%" y="357" width="0.0802%" height="15" fill="rgb(233,122,19)" fg:x="498" fg:w="1"/><text x="40.1858%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.9358%" y="341" width="0.0802%" height="15" fill="rgb(231,208,46)" fg:x="498" fg:w="1"/><text x="40.1858%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.9358%" y="325" width="0.0802%" height="15" fill="rgb(243,15,41)" fg:x="498" fg:w="1"/><text x="40.1858%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.9358%" y="309" width="0.0802%" height="15" fill="rgb(210,32,43)" fg:x="498" fg:w="1"/><text x="40.1858%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9358%" y="293" width="0.0802%" height="15" fill="rgb(222,177,15)" fg:x="498" fg:w="1"/><text x="40.1858%" y="303.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="40.0160%" y="485" width="0.0802%" height="15" fill="rgb(244,121,34)" fg:x="499" fg:w="1"/><text x="40.2660%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.0160%" y="469" width="0.0802%" height="15" fill="rgb(234,138,4)" fg:x="499" fg:w="1"/><text x="40.2660%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.0962%" y="453" width="0.0802%" height="15" fill="rgb(240,97,48)" fg:x="500" fg:w="1"/><text x="40.3462%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1764%" y="453" width="0.0802%" height="15" fill="rgb(237,65,54)" fg:x="501" fg:w="1"/><text x="40.4264%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1764%" y="437" width="0.0802%" height="15" fill="rgb(214,25,24)" fg:x="501" fg:w="1"/><text x="40.4264%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="40.1764%" y="421" width="0.0802%" height="15" fill="rgb(213,5,3)" fg:x="501" fg:w="1"/><text x="40.4264%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="39.4547%" y="517" width="0.8821%" height="15" fill="rgb(219,81,29)" fg:x="492" fg:w="11"/><text x="39.7047%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="39.5349%" y="501" width="0.8019%" height="15" fill="rgb(220,43,48)" fg:x="493" fg:w="10"/><text x="39.7849%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="40.0962%" y="485" width="0.2406%" height="15" fill="rgb(239,157,2)" fg:x="500" fg:w="3"/><text x="40.3462%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="40.0962%" y="469" width="0.2406%" height="15" fill="rgb(213,104,43)" fg:x="500" fg:w="3"/><text x="40.3462%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="40.2566%" y="453" width="0.0802%" height="15" fill="rgb(237,84,9)" fg:x="502" fg:w="1"/><text x="40.5066%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="40.2566%" y="437" width="0.0802%" height="15" fill="rgb(252,6,33)" fg:x="502" fg:w="1"/><text x="40.5066%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="40.2566%" y="421" width="0.0802%" height="15" fill="rgb(251,172,22)" fg:x="502" fg:w="1"/><text x="40.5066%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.2566%" y="405" width="0.0802%" height="15" fill="rgb(244,91,53)" fg:x="502" fg:w="1"/><text x="40.5066%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="40.2566%" y="389" width="0.0802%" height="15" fill="rgb(219,29,30)" fg:x="502" fg:w="1"/><text x="40.5066%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.2566%" y="373" width="0.0802%" height="15" fill="rgb(213,3,15)" fg:x="502" fg:w="1"/><text x="40.5066%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="40.2566%" y="357" width="0.0802%" height="15" fill="rgb(208,25,28)" fg:x="502" fg:w="1"/><text x="40.5066%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.2566%" y="341" width="0.0802%" height="15" fill="rgb(252,144,25)" fg:x="502" fg:w="1"/><text x="40.5066%" y="351.50"></text></g><g><title>plugins_core::build::Build::save (13 samples, 1.04%)</title><rect x="39.3745%" y="533" width="1.0425%" height="15" fill="rgb(226,220,25)" fg:x="491" fg:w="13"/><text x="39.6245%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3368%" y="517" width="0.0802%" height="15" fill="rgb(212,131,28)" fg:x="503" fg:w="1"/><text x="40.5868%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.3368%" y="501" width="0.0802%" height="15" fill="rgb(219,143,52)" fg:x="503" fg:w="1"/><text x="40.5868%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3368%" y="485" width="0.0802%" height="15" fill="rgb(215,56,7)" fg:x="503" fg:w="1"/><text x="40.5868%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.3368%" y="469" width="0.0802%" height="15" fill="rgb(239,59,51)" fg:x="503" fg:w="1"/><text x="40.5868%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.3368%" y="453" width="0.0802%" height="15" fill="rgb(209,215,4)" fg:x="503" fg:w="1"/><text x="40.5868%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.3368%" y="437" width="0.0802%" height="15" fill="rgb(221,118,39)" fg:x="503" fg:w="1"/><text x="40.5868%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.3368%" y="421" width="0.0802%" height="15" fill="rgb(236,6,44)" fg:x="503" fg:w="1"/><text x="40.5868%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3368%" y="405" width="0.0802%" height="15" fill="rgb(216,122,9)" fg:x="503" fg:w="1"/><text x="40.5868%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.3368%" y="389" width="0.0802%" height="15" fill="rgb(244,134,42)" fg:x="503" fg:w="1"/><text x="40.5868%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.3368%" y="373" width="0.0802%" height="15" fill="rgb(209,189,35)" fg:x="503" fg:w="1"/><text x="40.5868%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.3368%" y="357" width="0.0802%" height="15" fill="rgb(250,47,36)" fg:x="503" fg:w="1"/><text x="40.5868%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.3368%" y="341" width="0.0802%" height="15" fill="rgb(252,112,4)" fg:x="503" fg:w="1"/><text x="40.5868%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.3368%" y="325" width="0.0802%" height="15" fill="rgb(221,79,51)" fg:x="503" fg:w="1"/><text x="40.5868%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3368%" y="309" width="0.0802%" height="15" fill="rgb(232,65,53)" fg:x="503" fg:w="1"/><text x="40.5868%" y="319.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (18 samples, 1.44%)</title><rect x="39.1339%" y="565" width="1.4435%" height="15" fill="rgb(211,37,7)" fg:x="488" fg:w="18"/><text x="39.3839%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.36%)</title><rect x="39.2141%" y="549" width="1.3633%" height="15" fill="rgb(234,221,18)" fg:x="489" fg:w="17"/><text x="39.4641%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (2 samples, 0.16%)</title><rect x="40.4170%" y="533" width="0.1604%" height="15" fill="rgb(220,158,26)" fg:x="504" fg:w="2"/><text x="40.6670%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="40.4170%" y="517" width="0.1604%" height="15" fill="rgb(220,70,6)" fg:x="504" fg:w="2"/><text x="40.6670%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="40.4170%" y="501" width="0.1604%" height="15" fill="rgb(250,39,48)" fg:x="504" fg:w="2"/><text x="40.6670%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.4972%" y="485" width="0.0802%" height="15" fill="rgb(206,40,27)" fg:x="505" fg:w="1"/><text x="40.7472%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="40.5774%" y="549" width="0.0802%" height="15" fill="rgb(247,80,36)" fg:x="506" fg:w="1"/><text x="40.8274%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="40.5774%" y="533" width="0.0802%" height="15" fill="rgb(222,9,20)" fg:x="506" fg:w="1"/><text x="40.8274%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.6576%" y="549" width="0.0802%" height="15" fill="rgb(217,26,45)" fg:x="507" fg:w="1"/><text x="40.9076%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.6576%" y="533" width="0.0802%" height="15" fill="rgb(221,67,14)" fg:x="507" fg:w="1"/><text x="40.9076%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.6576%" y="517" width="0.0802%" height="15" fill="rgb(248,100,24)" fg:x="507" fg:w="1"/><text x="40.9076%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.6576%" y="501" width="0.0802%" height="15" fill="rgb(230,187,16)" fg:x="507" fg:w="1"/><text x="40.9076%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.6576%" y="485" width="0.0802%" height="15" fill="rgb(205,108,13)" fg:x="507" fg:w="1"/><text x="40.9076%" y="495.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="40.7378%" y="549" width="0.1604%" height="15" fill="rgb(235,71,51)" fg:x="508" fg:w="2"/><text x="40.9878%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="40.7378%" y="533" width="0.1604%" height="15" fill="rgb(251,172,48)" fg:x="508" fg:w="2"/><text x="40.9878%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9783%" y="501" width="0.0802%" height="15" fill="rgb(240,96,49)" fg:x="511" fg:w="1"/><text x="41.2283%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9783%" y="485" width="0.0802%" height="15" fill="rgb(235,46,36)" fg:x="511" fg:w="1"/><text x="41.2283%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9783%" y="469" width="0.0802%" height="15" fill="rgb(244,3,49)" fg:x="511" fg:w="1"/><text x="41.2283%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="40.9783%" y="517" width="0.1604%" height="15" fill="rgb(206,78,54)" fg:x="511" fg:w="2"/><text x="41.2283%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.0585%" y="501" width="0.0802%" height="15" fill="rgb(208,85,42)" fg:x="512" fg:w="1"/><text x="41.3085%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.0585%" y="485" width="0.0802%" height="15" fill="rgb(219,196,21)" fg:x="512" fg:w="1"/><text x="41.3085%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.0585%" y="469" width="0.0802%" height="15" fill="rgb(238,19,9)" fg:x="512" fg:w="1"/><text x="41.3085%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.0585%" y="453" width="0.0802%" height="15" fill="rgb(206,86,13)" fg:x="512" fg:w="1"/><text x="41.3085%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0585%" y="437" width="0.0802%" height="15" fill="rgb(214,123,40)" fg:x="512" fg:w="1"/><text x="41.3085%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.2189%" y="389" width="0.0802%" height="15" fill="rgb(243,53,5)" fg:x="514" fg:w="1"/><text x="41.4689%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="41.1387%" y="469" width="0.3208%" height="15" fill="rgb(254,186,31)" fg:x="513" fg:w="4"/><text x="41.3887%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="41.2189%" y="453" width="0.2406%" height="15" fill="rgb(221,216,25)" fg:x="514" fg:w="3"/><text x="41.4689%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.2189%" y="437" width="0.2406%" height="15" fill="rgb(248,107,42)" fg:x="514" fg:w="3"/><text x="41.4689%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="41.2189%" y="421" width="0.2406%" height="15" fill="rgb(221,85,43)" fg:x="514" fg:w="3"/><text x="41.4689%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.2189%" y="405" width="0.2406%" height="15" fill="rgb(225,34,24)" fg:x="514" fg:w="3"/><text x="41.4689%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.2991%" y="389" width="0.1604%" height="15" fill="rgb(211,119,1)" fg:x="515" fg:w="2"/><text x="41.5491%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3793%" y="373" width="0.0802%" height="15" fill="rgb(254,216,46)" fg:x="516" fg:w="1"/><text x="41.6293%" y="383.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="41.4595%" y="469" width="0.0802%" height="15" fill="rgb(238,11,38)" fg:x="517" fg:w="1"/><text x="41.7095%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5397%" y="437" width="0.0802%" height="15" fill="rgb(233,50,15)" fg:x="518" fg:w="1"/><text x="41.7897%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5397%" y="421" width="0.0802%" height="15" fill="rgb(217,181,29)" fg:x="518" fg:w="1"/><text x="41.7897%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.5397%" y="405" width="0.0802%" height="15" fill="rgb(214,56,3)" fg:x="518" fg:w="1"/><text x="41.7897%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="41.1387%" y="501" width="0.5613%" height="15" fill="rgb(230,69,45)" fg:x="513" fg:w="7"/><text x="41.3887%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (7 samples, 0.56%)</title><rect x="41.1387%" y="485" width="0.5613%" height="15" fill="rgb(224,201,50)" fg:x="513" fg:w="7"/><text x="41.3887%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="41.5397%" y="469" width="0.1604%" height="15" fill="rgb(217,228,18)" fg:x="518" fg:w="2"/><text x="41.7897%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="41.5397%" y="453" width="0.1604%" height="15" fill="rgb(239,33,44)" fg:x="518" fg:w="2"/><text x="41.7897%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="41.6199%" y="437" width="0.0802%" height="15" fill="rgb(248,210,23)" fg:x="519" fg:w="1"/><text x="41.8699%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="41.7001%" y="501" width="0.1604%" height="15" fill="rgb(253,135,8)" fg:x="520" fg:w="2"/><text x="41.9501%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.7001%" y="485" width="0.1604%" height="15" fill="rgb(217,98,21)" fg:x="520" fg:w="2"/><text x="41.9501%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="41.7001%" y="469" width="0.1604%" height="15" fill="rgb(253,130,21)" fg:x="520" fg:w="2"/><text x="41.9501%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="41.7001%" y="453" width="0.1604%" height="15" fill="rgb(207,81,54)" fg:x="520" fg:w="2"/><text x="41.9501%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.9407%" y="469" width="0.2406%" height="15" fill="rgb(232,48,33)" fg:x="523" fg:w="3"/><text x="42.1907%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.0209%" y="453" width="0.1604%" height="15" fill="rgb(211,9,35)" fg:x="524" fg:w="2"/><text x="42.2709%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="42.0209%" y="437" width="0.1604%" height="15" fill="rgb(205,152,21)" fg:x="524" fg:w="2"/><text x="42.2709%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="42.1812%" y="469" width="0.0802%" height="15" fill="rgb(249,21,27)" fg:x="526" fg:w="1"/><text x="42.4312%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.1812%" y="453" width="0.0802%" height="15" fill="rgb(252,29,24)" fg:x="526" fg:w="1"/><text x="42.4312%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.1812%" y="437" width="0.0802%" height="15" fill="rgb(230,130,50)" fg:x="526" fg:w="1"/><text x="42.4312%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="42.2614%" y="469" width="0.0802%" height="15" fill="rgb(239,144,14)" fg:x="527" fg:w="1"/><text x="42.5114%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.2614%" y="453" width="0.0802%" height="15" fill="rgb(227,111,50)" fg:x="527" fg:w="1"/><text x="42.5114%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2614%" y="437" width="0.0802%" height="15" fill="rgb(254,84,20)" fg:x="527" fg:w="1"/><text x="42.5114%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.3416%" y="373" width="0.0802%" height="15" fill="rgb(232,90,48)" fg:x="528" fg:w="1"/><text x="42.5916%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3416%" y="357" width="0.0802%" height="15" fill="rgb(253,63,47)" fg:x="528" fg:w="1"/><text x="42.5916%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3416%" y="341" width="0.0802%" height="15" fill="rgb(251,146,35)" fg:x="528" fg:w="1"/><text x="42.5916%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="42.3416%" y="453" width="0.1604%" height="15" fill="rgb(229,192,35)" fg:x="528" fg:w="2"/><text x="42.5916%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="42.3416%" y="437" width="0.1604%" height="15" fill="rgb(225,68,9)" fg:x="528" fg:w="2"/><text x="42.5916%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="42.3416%" y="421" width="0.1604%" height="15" fill="rgb(214,97,34)" fg:x="528" fg:w="2"/><text x="42.5916%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="42.3416%" y="405" width="0.1604%" height="15" fill="rgb(253,31,26)" fg:x="528" fg:w="2"/><text x="42.5916%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="42.3416%" y="389" width="0.1604%" height="15" fill="rgb(225,151,47)" fg:x="528" fg:w="2"/><text x="42.5916%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4218%" y="373" width="0.0802%" height="15" fill="rgb(206,185,9)" fg:x="529" fg:w="1"/><text x="42.6718%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_entity (18 samples, 1.44%)</title><rect x="41.1387%" y="517" width="1.4435%" height="15" fill="rgb(249,65,17)" fg:x="513" fg:w="18"/><text x="41.3887%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="41.8605%" y="501" width="0.7217%" height="15" fill="rgb(220,110,10)" fg:x="522" fg:w="9"/><text x="42.1105%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="41.8605%" y="485" width="0.7217%" height="15" fill="rgb(222,198,49)" fg:x="522" fg:w="9"/><text x="42.1105%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="42.3416%" y="469" width="0.2406%" height="15" fill="rgb(239,81,13)" fg:x="528" fg:w="3"/><text x="42.5916%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5020%" y="453" width="0.0802%" height="15" fill="rgb(216,128,11)" fg:x="530" fg:w="1"/><text x="42.7520%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5020%" y="437" width="0.0802%" height="15" fill="rgb(247,156,8)" fg:x="530" fg:w="1"/><text x="42.7520%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6624%" y="501" width="0.0802%" height="15" fill="rgb(219,173,1)" fg:x="532" fg:w="1"/><text x="42.9124%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (24 samples, 1.92%)</title><rect x="40.8982%" y="533" width="1.9246%" height="15" fill="rgb(227,42,24)" fg:x="510" fg:w="24"/><text x="41.1482%" y="543.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::world (3 samples, 0.24%)</title><rect x="42.5822%" y="517" width="0.2406%" height="15" fill="rgb(253,219,50)" fg:x="531" fg:w="3"/><text x="42.8322%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="42.7426%" y="501" width="0.0802%" height="15" fill="rgb(215,191,54)" fg:x="533" fg:w="1"/><text x="42.9926%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.8228%" y="517" width="0.0802%" height="15" fill="rgb(238,83,12)" fg:x="534" fg:w="1"/><text x="43.0728%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8228%" y="501" width="0.0802%" height="15" fill="rgb(205,124,9)" fg:x="534" fg:w="1"/><text x="43.0728%" y="511.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (388 samples, 31.11%)</title><rect x="11.8685%" y="581" width="31.1147%" height="15" fill="rgb(253,174,7)" fg:x="148" fg:w="388"/><text x="12.1185%" y="591.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (30 samples, 2.41%)</title><rect x="40.5774%" y="565" width="2.4058%" height="15" fill="rgb(206,134,49)" fg:x="506" fg:w="30"/><text x="40.8274%" y="575.50">pl..</text></g><g><title>plugins_core::build::Build::save (26 samples, 2.09%)</title><rect x="40.8982%" y="549" width="2.0850%" height="15" fill="rgb(221,89,20)" fg:x="510" fg:w="26"/><text x="41.1482%" y="559.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.8228%" y="533" width="0.1604%" height="15" fill="rgb(240,205,13)" fg:x="534" fg:w="2"/><text x="43.0728%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.9030%" y="517" width="0.0802%" height="15" fill="rgb(237,174,32)" fg:x="535" fg:w="1"/><text x="43.1530%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="42.9832%" y="581" width="0.0802%" height="15" fill="rgb(226,12,15)" fg:x="536" fg:w="1"/><text x="43.2332%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="42.9832%" y="565" width="0.0802%" height="15" fill="rgb(245,160,52)" fg:x="536" fg:w="1"/><text x="43.2332%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="42.9832%" y="549" width="0.0802%" height="15" fill="rgb(253,80,21)" fg:x="536" fg:w="1"/><text x="43.2332%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.9832%" y="533" width="0.0802%" height="15" fill="rgb(231,225,22)" fg:x="536" fg:w="1"/><text x="43.2332%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.9832%" y="517" width="0.0802%" height="15" fill="rgb(253,185,12)" fg:x="536" fg:w="1"/><text x="43.2332%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="43.2237%" y="565" width="0.1604%" height="15" fill="rgb(234,197,21)" fg:x="539" fg:w="2"/><text x="43.4737%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3039%" y="549" width="0.0802%" height="15" fill="rgb(210,47,30)" fg:x="540" fg:w="1"/><text x="43.5539%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3039%" y="533" width="0.0802%" height="15" fill="rgb(246,139,27)" fg:x="540" fg:w="1"/><text x="43.5539%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.3039%" y="517" width="0.0802%" height="15" fill="rgb(226,130,16)" fg:x="540" fg:w="1"/><text x="43.5539%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.3039%" y="501" width="0.0802%" height="15" fill="rgb(237,208,20)" fg:x="540" fg:w="1"/><text x="43.5539%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.3039%" y="485" width="0.0802%" height="15" fill="rgb(245,186,28)" fg:x="540" fg:w="1"/><text x="43.5539%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.3039%" y="469" width="0.0802%" height="15" fill="rgb(238,105,39)" fg:x="540" fg:w="1"/><text x="43.5539%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.3039%" y="453" width="0.0802%" height="15" fill="rgb(253,228,11)" fg:x="540" fg:w="1"/><text x="43.5539%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="43.3841%" y="565" width="0.0802%" height="15" fill="rgb(224,136,38)" fg:x="541" fg:w="1"/><text x="43.6341%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.3841%" y="549" width="0.0802%" height="15" fill="rgb(211,3,25)" fg:x="541" fg:w="1"/><text x="43.6341%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.3841%" y="533" width="0.0802%" height="15" fill="rgb(238,66,34)" fg:x="541" fg:w="1"/><text x="43.6341%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.3841%" y="517" width="0.0802%" height="15" fill="rgb(223,188,11)" fg:x="541" fg:w="1"/><text x="43.6341%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="43.3841%" y="501" width="0.0802%" height="15" fill="rgb(221,10,35)" fg:x="541" fg:w="1"/><text x="43.6341%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="43.3841%" y="485" width="0.0802%" height="15" fill="rgb(223,18,44)" fg:x="541" fg:w="1"/><text x="43.6341%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="43.3841%" y="469" width="0.0802%" height="15" fill="rgb(220,97,41)" fg:x="541" fg:w="1"/><text x="43.6341%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.3841%" y="453" width="0.0802%" height="15" fill="rgb(206,95,45)" fg:x="541" fg:w="1"/><text x="43.6341%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.3841%" y="437" width="0.0802%" height="15" fill="rgb(209,96,13)" fg:x="541" fg:w="1"/><text x="43.6341%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.3841%" y="421" width="0.0802%" height="15" fill="rgb(237,39,34)" fg:x="541" fg:w="1"/><text x="43.6341%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.3841%" y="405" width="0.0802%" height="15" fill="rgb(213,49,47)" fg:x="541" fg:w="1"/><text x="43.6341%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="43.3841%" y="389" width="0.0802%" height="15" fill="rgb(205,107,27)" fg:x="541" fg:w="1"/><text x="43.6341%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="43.3841%" y="373" width="0.0802%" height="15" fill="rgb(212,142,9)" fg:x="541" fg:w="1"/><text x="43.6341%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="43.3841%" y="357" width="0.0802%" height="15" fill="rgb(226,182,0)" fg:x="541" fg:w="1"/><text x="43.6341%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="43.3841%" y="341" width="0.0802%" height="15" fill="rgb(231,3,53)" fg:x="541" fg:w="1"/><text x="43.6341%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.3841%" y="325" width="0.0802%" height="15" fill="rgb(246,111,28)" fg:x="541" fg:w="1"/><text x="43.6341%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="43.4643%" y="533" width="0.1604%" height="15" fill="rgb(254,183,7)" fg:x="542" fg:w="2"/><text x="43.7143%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="43.5445%" y="517" width="0.0802%" height="15" fill="rgb(247,177,28)" fg:x="543" fg:w="1"/><text x="43.7945%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.6247%" y="501" width="0.0802%" height="15" fill="rgb(244,43,1)" fg:x="544" fg:w="1"/><text x="43.8747%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="43.6247%" y="533" width="0.1604%" height="15" fill="rgb(207,2,35)" fg:x="544" fg:w="2"/><text x="43.8747%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="43.6247%" y="517" width="0.1604%" height="15" fill="rgb(213,83,22)" fg:x="544" fg:w="2"/><text x="43.8747%" y="527.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="43.7049%" y="501" width="0.0802%" height="15" fill="rgb(246,212,13)" fg:x="545" fg:w="1"/><text x="43.9549%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.7851%" y="501" width="0.0802%" height="15" fill="rgb(213,127,46)" fg:x="546" fg:w="1"/><text x="44.0351%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.7851%" y="485" width="0.0802%" height="15" fill="rgb(219,215,39)" fg:x="546" fg:w="1"/><text x="44.0351%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.7851%" y="469" width="0.0802%" height="15" fill="rgb(227,99,17)" fg:x="546" fg:w="1"/><text x="44.0351%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="43.8653%" y="485" width="0.1604%" height="15" fill="rgb(208,155,18)" fg:x="547" fg:w="2"/><text x="44.1153%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="43.8653%" y="469" width="0.1604%" height="15" fill="rgb(223,204,38)" fg:x="547" fg:w="2"/><text x="44.1153%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.9455%" y="453" width="0.0802%" height="15" fill="rgb(212,114,21)" fg:x="548" fg:w="1"/><text x="44.1955%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.9455%" y="437" width="0.0802%" height="15" fill="rgb(250,74,13)" fg:x="548" fg:w="1"/><text x="44.1955%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.9455%" y="421" width="0.0802%" height="15" fill="rgb(234,7,1)" fg:x="548" fg:w="1"/><text x="44.1955%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.9455%" y="405" width="0.0802%" height="15" fill="rgb(207,138,31)" fg:x="548" fg:w="1"/><text x="44.1955%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.9455%" y="389" width="0.0802%" height="15" fill="rgb(215,186,42)" fg:x="548" fg:w="1"/><text x="44.1955%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9455%" y="373" width="0.0802%" height="15" fill="rgb(229,205,49)" fg:x="548" fg:w="1"/><text x="44.1955%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="44.0257%" y="453" width="0.7217%" height="15" fill="rgb(216,156,32)" fg:x="549" fg:w="9"/><text x="44.2757%" y="463.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.72%)</title><rect x="44.0257%" y="437" width="0.7217%" height="15" fill="rgb(238,7,21)" fg:x="549" fg:w="9"/><text x="44.2757%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="44.3464%" y="421" width="0.4010%" height="15" fill="rgb(249,190,22)" fg:x="553" fg:w="5"/><text x="44.5964%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="44.3464%" y="405" width="0.4010%" height="15" fill="rgb(253,51,31)" fg:x="553" fg:w="5"/><text x="44.5964%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.6672%" y="389" width="0.0802%" height="15" fill="rgb(237,90,54)" fg:x="557" fg:w="1"/><text x="44.9172%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.6672%" y="373" width="0.0802%" height="15" fill="rgb(250,214,33)" fg:x="557" fg:w="1"/><text x="44.9172%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.6672%" y="357" width="0.0802%" height="15" fill="rgb(237,10,49)" fg:x="557" fg:w="1"/><text x="44.9172%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.80%)</title><rect x="44.0257%" y="469" width="0.8019%" height="15" fill="rgb(241,56,36)" fg:x="549" fg:w="10"/><text x="44.2757%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.7474%" y="453" width="0.0802%" height="15" fill="rgb(227,164,12)" fg:x="558" fg:w="1"/><text x="44.9974%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.7474%" y="437" width="0.0802%" height="15" fill="rgb(249,149,35)" fg:x="558" fg:w="1"/><text x="44.9974%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="44.8276%" y="453" width="0.5613%" height="15" fill="rgb(238,227,50)" fg:x="559" fg:w="7"/><text x="45.0776%" y="463.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="44.9880%" y="437" width="0.4010%" height="15" fill="rgb(235,102,45)" fg:x="561" fg:w="5"/><text x="45.2380%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="45.2285%" y="421" width="0.1604%" height="15" fill="rgb(211,10,38)" fg:x="564" fg:w="2"/><text x="45.4785%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="45.3087%" y="405" width="0.0802%" height="15" fill="rgb(219,77,48)" fg:x="565" fg:w="1"/><text x="45.5587%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.6295%" y="437" width="0.0802%" height="15" fill="rgb(246,6,15)" fg:x="569" fg:w="1"/><text x="45.8795%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.7899%" y="405" width="0.0802%" height="15" fill="rgb(207,220,2)" fg:x="571" fg:w="1"/><text x="46.0399%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="45.8701%" y="389" width="0.0802%" height="15" fill="rgb(242,48,14)" fg:x="572" fg:w="1"/><text x="46.1201%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="45.8701%" y="405" width="0.1604%" height="15" fill="rgb(218,19,27)" fg:x="572" fg:w="2"/><text x="46.1201%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="45.9503%" y="389" width="0.0802%" height="15" fill="rgb(228,0,35)" fg:x="573" fg:w="1"/><text x="46.2003%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.9503%" y="373" width="0.0802%" height="15" fill="rgb(244,142,54)" fg:x="573" fg:w="1"/><text x="46.2003%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.9503%" y="357" width="0.0802%" height="15" fill="rgb(243,217,40)" fg:x="573" fg:w="1"/><text x="46.2003%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.9503%" y="341" width="0.0802%" height="15" fill="rgb(207,114,16)" fg:x="573" fg:w="1"/><text x="46.2003%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="45.7097%" y="437" width="0.4010%" height="15" fill="rgb(224,33,25)" fg:x="570" fg:w="5"/><text x="45.9597%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="45.7899%" y="421" width="0.3208%" height="15" fill="rgb(230,93,54)" fg:x="571" fg:w="4"/><text x="46.0399%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.0305%" y="405" width="0.0802%" height="15" fill="rgb(224,56,24)" fg:x="574" fg:w="1"/><text x="46.2805%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.0305%" y="389" width="0.0802%" height="15" fill="rgb(235,189,50)" fg:x="574" fg:w="1"/><text x="46.2805%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="46.1107%" y="437" width="0.4812%" height="15" fill="rgb(242,173,8)" fg:x="575" fg:w="6"/><text x="46.3607%" y="447.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="46.1909%" y="421" width="0.4010%" height="15" fill="rgb(209,206,10)" fg:x="576" fg:w="5"/><text x="46.4409%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="46.4314%" y="405" width="0.1604%" height="15" fill="rgb(213,182,44)" fg:x="579" fg:w="2"/><text x="46.6814%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.5116%" y="389" width="0.0802%" height="15" fill="rgb(243,51,15)" fg:x="580" fg:w="1"/><text x="46.7616%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.5116%" y="373" width="0.0802%" height="15" fill="rgb(241,13,14)" fg:x="580" fg:w="1"/><text x="46.7616%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.5116%" y="357" width="0.0802%" height="15" fill="rgb(239,147,24)" fg:x="580" fg:w="1"/><text x="46.7616%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.5116%" y="341" width="0.0802%" height="15" fill="rgb(223,129,16)" fg:x="580" fg:w="1"/><text x="46.7616%" y="351.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="46.7522%" y="421" width="0.0802%" height="15" fill="rgb(209,169,13)" fg:x="583" fg:w="1"/><text x="47.0022%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="46.8324%" y="421" width="0.1604%" height="15" fill="rgb(235,159,41)" fg:x="584" fg:w="2"/><text x="47.0824%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="46.8324%" y="405" width="0.1604%" height="15" fill="rgb(223,219,48)" fg:x="584" fg:w="2"/><text x="47.0824%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="46.8324%" y="389" width="0.1604%" height="15" fill="rgb(236,80,13)" fg:x="584" fg:w="2"/><text x="47.0824%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="46.8324%" y="373" width="0.1604%" height="15" fill="rgb(213,5,6)" fg:x="584" fg:w="2"/><text x="47.0824%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="46.8324%" y="357" width="0.1604%" height="15" fill="rgb(205,59,21)" fg:x="584" fg:w="2"/><text x="47.0824%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="46.8324%" y="341" width="0.1604%" height="15" fill="rgb(247,137,35)" fg:x="584" fg:w="2"/><text x="47.0824%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="46.8324%" y="325" width="0.1604%" height="15" fill="rgb(242,208,28)" fg:x="584" fg:w="2"/><text x="47.0824%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="47.0730%" y="405" width="0.0802%" height="15" fill="rgb(245,62,25)" fg:x="587" fg:w="1"/><text x="47.3230%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.0730%" y="389" width="0.0802%" height="15" fill="rgb(233,99,54)" fg:x="587" fg:w="1"/><text x="47.3230%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="47.1532%" y="389" width="0.1604%" height="15" fill="rgb(213,10,37)" fg:x="588" fg:w="2"/><text x="47.4032%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.1532%" y="373" width="0.1604%" height="15" fill="rgb(235,143,30)" fg:x="588" fg:w="2"/><text x="47.4032%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.1532%" y="357" width="0.1604%" height="15" fill="rgb(250,146,33)" fg:x="588" fg:w="2"/><text x="47.4032%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.2334%" y="341" width="0.0802%" height="15" fill="rgb(226,198,42)" fg:x="589" fg:w="1"/><text x="47.4834%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="47.1532%" y="405" width="0.2406%" height="15" fill="rgb(222,55,6)" fg:x="588" fg:w="3"/><text x="47.4032%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.3136%" y="389" width="0.0802%" height="15" fill="rgb(213,224,31)" fg:x="590" fg:w="1"/><text x="47.5636%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="46.9928%" y="421" width="0.5613%" height="15" fill="rgb(226,103,35)" fg:x="586" fg:w="7"/><text x="47.2428%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.3937%" y="405" width="0.1604%" height="15" fill="rgb(205,66,45)" fg:x="591" fg:w="2"/><text x="47.6437%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="46.5918%" y="437" width="1.1227%" height="15" fill="rgb(226,51,42)" fg:x="581" fg:w="14"/><text x="46.8418%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.5541%" y="421" width="0.1604%" height="15" fill="rgb(206,69,1)" fg:x="593" fg:w="2"/><text x="47.8041%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.5541%" y="405" width="0.1604%" height="15" fill="rgb(213,228,47)" fg:x="593" fg:w="2"/><text x="47.8041%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="47.5541%" y="389" width="0.1604%" height="15" fill="rgb(224,204,18)" fg:x="593" fg:w="2"/><text x="47.8041%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.57%)</title><rect x="45.3889%" y="453" width="2.5662%" height="15" fill="rgb(253,187,47)" fg:x="566" fg:w="32"/><text x="45.6389%" y="463.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="47.7145%" y="437" width="0.2406%" height="15" fill="rgb(232,61,2)" fg:x="595" fg:w="3"/><text x="47.9645%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="47.7947%" y="421" width="0.1604%" height="15" fill="rgb(213,132,35)" fg:x="596" fg:w="2"/><text x="48.0447%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.8749%" y="405" width="0.0802%" height="15" fill="rgb(247,33,21)" fg:x="597" fg:w="1"/><text x="48.1249%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 3.29%)</title><rect x="44.8276%" y="469" width="3.2879%" height="15" fill="rgb(233,71,46)" fg:x="559" fg:w="41"/><text x="45.0776%" y="479.50">ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="47.9551%" y="453" width="0.1604%" height="15" fill="rgb(222,173,43)" fg:x="598" fg:w="2"/><text x="48.2051%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.0353%" y="437" width="0.0802%" height="15" fill="rgb(249,218,47)" fg:x="599" fg:w="1"/><text x="48.2853%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.0353%" y="421" width="0.0802%" height="15" fill="rgb(254,185,48)" fg:x="599" fg:w="1"/><text x="48.2853%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (52 samples, 4.17%)</title><rect x="44.0257%" y="485" width="4.1700%" height="15" fill="rgb(252,165,50)" fg:x="549" fg:w="52"/><text x="44.2757%" y="495.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="48.1155%" y="469" width="0.0802%" height="15" fill="rgb(206,219,6)" fg:x="600" fg:w="1"/><text x="48.3655%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.1957%" y="453" width="0.0802%" height="15" fill="rgb(212,212,45)" fg:x="601" fg:w="1"/><text x="48.4457%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.2759%" y="453" width="0.0802%" height="15" fill="rgb(221,31,9)" fg:x="602" fg:w="1"/><text x="48.5259%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5966%" y="437" width="0.0802%" height="15" fill="rgb(234,198,39)" fg:x="606" fg:w="1"/><text x="48.8466%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.6768%" y="437" width="0.0802%" height="15" fill="rgb(252,145,46)" fg:x="607" fg:w="1"/><text x="48.9268%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.6768%" y="421" width="0.0802%" height="15" fill="rgb(237,149,0)" fg:x="607" fg:w="1"/><text x="48.9268%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9174%" y="341" width="0.0802%" height="15" fill="rgb(229,65,5)" fg:x="610" fg:w="1"/><text x="49.1674%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="48.9174%" y="405" width="0.1604%" height="15" fill="rgb(235,60,36)" fg:x="610" fg:w="2"/><text x="49.1674%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="48.9174%" y="389" width="0.1604%" height="15" fill="rgb(222,47,18)" fg:x="610" fg:w="2"/><text x="49.1674%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="48.9174%" y="373" width="0.1604%" height="15" fill="rgb(235,114,22)" fg:x="610" fg:w="2"/><text x="49.1674%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="48.9174%" y="357" width="0.1604%" height="15" fill="rgb(209,167,11)" fg:x="610" fg:w="2"/><text x="49.1674%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.9976%" y="341" width="0.0802%" height="15" fill="rgb(251,73,18)" fg:x="611" fg:w="1"/><text x="49.2476%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="48.1957%" y="485" width="1.1227%" height="15" fill="rgb(217,60,17)" fg:x="601" fg:w="14"/><text x="48.4457%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="48.1957%" y="469" width="1.1227%" height="15" fill="rgb(224,36,37)" fg:x="601" fg:w="14"/><text x="48.4457%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="48.3561%" y="453" width="0.9623%" height="15" fill="rgb(211,21,32)" fg:x="603" fg:w="12"/><text x="48.6061%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="48.7570%" y="437" width="0.5613%" height="15" fill="rgb(231,55,48)" fg:x="608" fg:w="7"/><text x="49.0070%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="48.8372%" y="421" width="0.4812%" height="15" fill="rgb(227,42,18)" fg:x="609" fg:w="6"/><text x="49.0872%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="49.0778%" y="405" width="0.2406%" height="15" fill="rgb(217,2,27)" fg:x="612" fg:w="3"/><text x="49.3278%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="49.2382%" y="389" width="0.0802%" height="15" fill="rgb(251,138,23)" fg:x="614" fg:w="1"/><text x="49.4882%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="49.5589%" y="421" width="0.2406%" height="15" fill="rgb(226,184,11)" fg:x="618" fg:w="3"/><text x="49.8089%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.7995%" y="421" width="0.0802%" height="15" fill="rgb(242,142,12)" fg:x="621" fg:w="1"/><text x="50.0495%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8797%" y="405" width="0.0802%" height="15" fill="rgb(234,187,18)" fg:x="622" fg:w="1"/><text x="50.1297%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="49.9599%" y="389" width="0.3208%" height="15" fill="rgb(237,44,42)" fg:x="623" fg:w="4"/><text x="50.2099%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.0401%" y="373" width="0.2406%" height="15" fill="rgb(211,90,23)" fg:x="624" fg:w="3"/><text x="50.2901%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="50.2807%" y="373" width="0.2406%" height="15" fill="rgb(207,81,18)" fg:x="627" fg:w="3"/><text x="50.5307%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="50.5213%" y="373" width="0.0802%" height="15" fill="rgb(222,107,28)" fg:x="630" fg:w="1"/><text x="50.7713%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.5213%" y="357" width="0.0802%" height="15" fill="rgb(237,83,52)" fg:x="630" fg:w="1"/><text x="50.7713%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.5213%" y="341" width="0.0802%" height="15" fill="rgb(208,67,11)" fg:x="630" fg:w="1"/><text x="50.7713%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.5213%" y="325" width="0.0802%" height="15" fill="rgb(249,157,49)" fg:x="630" fg:w="1"/><text x="50.7713%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5213%" y="309" width="0.0802%" height="15" fill="rgb(243,200,1)" fg:x="630" fg:w="1"/><text x="50.7713%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.6816%" y="357" width="0.1604%" height="15" fill="rgb(225,162,37)" fg:x="632" fg:w="2"/><text x="50.9316%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="50.8420%" y="357" width="0.2406%" height="15" fill="rgb(242,92,13)" fg:x="634" fg:w="3"/><text x="51.0920%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.9222%" y="341" width="0.1604%" height="15" fill="rgb(220,43,36)" fg:x="635" fg:w="2"/><text x="51.1722%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.60%)</title><rect x="49.5589%" y="453" width="1.6038%" height="15" fill="rgb(213,165,48)" fg:x="618" fg:w="20"/><text x="49.8089%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.60%)</title><rect x="49.5589%" y="437" width="1.6038%" height="15" fill="rgb(227,200,9)" fg:x="618" fg:w="20"/><text x="49.8089%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="49.8797%" y="421" width="1.2831%" height="15" fill="rgb(221,222,28)" fg:x="622" fg:w="16"/><text x="50.1297%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="49.9599%" y="405" width="1.2029%" height="15" fill="rgb(223,142,26)" fg:x="623" fg:w="15"/><text x="50.2099%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="50.2807%" y="389" width="0.8821%" height="15" fill="rgb(243,46,9)" fg:x="627" fg:w="11"/><text x="50.5307%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="50.6014%" y="373" width="0.5613%" height="15" fill="rgb(250,56,11)" fg:x="631" fg:w="7"/><text x="50.8514%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.0826%" y="357" width="0.0802%" height="15" fill="rgb(229,113,5)" fg:x="637" fg:w="1"/><text x="51.3326%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="51.1628%" y="453" width="0.1604%" height="15" fill="rgb(244,108,28)" fg:x="638" fg:w="2"/><text x="51.4128%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2430%" y="437" width="0.0802%" height="15" fill="rgb(242,119,50)" fg:x="639" fg:w="1"/><text x="51.4930%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.3232%" y="453" width="0.1604%" height="15" fill="rgb(224,164,23)" fg:x="640" fg:w="2"/><text x="51.5732%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="51.4836%" y="453" width="0.0802%" height="15" fill="rgb(214,227,44)" fg:x="642" fg:w="1"/><text x="51.7336%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="51.4836%" y="437" width="0.0802%" height="15" fill="rgb(238,202,4)" fg:x="642" fg:w="1"/><text x="51.7336%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.4836%" y="421" width="0.0802%" height="15" fill="rgb(213,190,30)" fg:x="642" fg:w="1"/><text x="51.7336%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="51.5638%" y="389" width="0.2406%" height="15" fill="rgb(239,15,2)" fg:x="643" fg:w="3"/><text x="51.8138%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="51.6439%" y="373" width="0.1604%" height="15" fill="rgb(249,229,4)" fg:x="644" fg:w="2"/><text x="51.8939%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="51.7241%" y="357" width="0.0802%" height="15" fill="rgb(239,75,44)" fg:x="645" fg:w="1"/><text x="51.9741%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="51.5638%" y="405" width="0.3208%" height="15" fill="rgb(251,206,23)" fg:x="643" fg:w="4"/><text x="51.8138%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="51.8043%" y="389" width="0.0802%" height="15" fill="rgb(215,208,0)" fg:x="646" fg:w="1"/><text x="52.0543%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="51.5638%" y="421" width="0.4010%" height="15" fill="rgb(230,75,50)" fg:x="643" fg:w="5"/><text x="51.8138%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="51.8845%" y="405" width="0.0802%" height="15" fill="rgb(246,180,39)" fg:x="647" fg:w="1"/><text x="52.1345%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="51.5638%" y="437" width="0.5613%" height="15" fill="rgb(249,175,24)" fg:x="643" fg:w="7"/><text x="51.8138%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="51.9647%" y="421" width="0.1604%" height="15" fill="rgb(247,176,22)" fg:x="648" fg:w="2"/><text x="52.2147%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (35 samples, 2.81%)</title><rect x="49.3986%" y="469" width="2.8067%" height="15" fill="rgb(241,100,24)" fg:x="616" fg:w="35"/><text x="49.6486%" y="479.50">&lt;k..</text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="51.5638%" y="453" width="0.6415%" height="15" fill="rgb(233,4,35)" fg:x="643" fg:w="8"/><text x="51.8138%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="52.1251%" y="437" width="0.0802%" height="15" fill="rgb(211,164,46)" fg:x="650" fg:w="1"/><text x="52.3751%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.1251%" y="421" width="0.0802%" height="15" fill="rgb(242,99,53)" fg:x="650" fg:w="1"/><text x="52.3751%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="52.2855%" y="453" width="0.0802%" height="15" fill="rgb(243,45,33)" fg:x="652" fg:w="1"/><text x="52.5355%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3657%" y="437" width="0.0802%" height="15" fill="rgb(217,55,21)" fg:x="653" fg:w="1"/><text x="52.6157%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.4459%" y="437" width="0.0802%" height="15" fill="rgb(245,145,46)" fg:x="654" fg:w="1"/><text x="52.6959%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="52.5261%" y="437" width="0.0802%" height="15" fill="rgb(215,112,45)" fg:x="655" fg:w="1"/><text x="52.7761%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="52.6063%" y="437" width="0.0802%" height="15" fill="rgb(228,104,16)" fg:x="656" fg:w="1"/><text x="52.8563%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="52.6063%" y="421" width="0.0802%" height="15" fill="rgb(239,186,38)" fg:x="656" fg:w="1"/><text x="52.8563%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.8468%" y="405" width="0.1604%" height="15" fill="rgb(228,38,35)" fg:x="659" fg:w="2"/><text x="53.0968%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="52.6864%" y="437" width="0.4010%" height="15" fill="rgb(251,42,40)" fg:x="657" fg:w="5"/><text x="52.9364%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="52.6864%" y="421" width="0.4010%" height="15" fill="rgb(210,51,19)" fg:x="657" fg:w="5"/><text x="52.9364%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.0072%" y="405" width="0.0802%" height="15" fill="rgb(236,94,42)" fg:x="661" fg:w="1"/><text x="53.2572%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.0072%" y="389" width="0.0802%" height="15" fill="rgb(239,167,16)" fg:x="661" fg:w="1"/><text x="53.2572%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.4884%" y="389" width="0.1604%" height="15" fill="rgb(252,175,31)" fg:x="667" fg:w="2"/><text x="53.7384%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="53.6488%" y="389" width="0.2406%" height="15" fill="rgb(206,166,30)" fg:x="669" fg:w="3"/><text x="53.8988%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="53.7289%" y="373" width="0.1604%" height="15" fill="rgb(206,209,37)" fg:x="670" fg:w="2"/><text x="53.9789%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="53.8091%" y="357" width="0.0802%" height="15" fill="rgb(226,91,4)" fg:x="671" fg:w="1"/><text x="54.0591%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.8091%" y="341" width="0.0802%" height="15" fill="rgb(222,167,0)" fg:x="671" fg:w="1"/><text x="54.0591%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.8091%" y="325" width="0.0802%" height="15" fill="rgb(211,70,14)" fg:x="671" fg:w="1"/><text x="54.0591%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.0497%" y="373" width="0.0802%" height="15" fill="rgb(214,84,42)" fg:x="674" fg:w="1"/><text x="54.2997%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="54.3705%" y="357" width="0.4812%" height="15" fill="rgb(235,157,37)" fg:x="678" fg:w="6"/><text x="54.6205%" y="367.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="54.4507%" y="341" width="0.4010%" height="15" fill="rgb(225,13,6)" fg:x="679" fg:w="5"/><text x="54.7007%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="54.9318%" y="341" width="0.0802%" height="15" fill="rgb(205,202,1)" fg:x="685" fg:w="1"/><text x="55.1818%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="54.1299%" y="373" width="1.2029%" height="15" fill="rgb(232,195,26)" fg:x="675" fg:w="15"/><text x="54.3799%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="54.8516%" y="357" width="0.4812%" height="15" fill="rgb(208,102,26)" fg:x="684" fg:w="6"/><text x="55.1016%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="55.0120%" y="341" width="0.3208%" height="15" fill="rgb(215,41,39)" fg:x="686" fg:w="4"/><text x="55.2620%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.0922%" y="325" width="0.2406%" height="15" fill="rgb(247,139,11)" fg:x="687" fg:w="3"/><text x="55.3422%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2526%" y="309" width="0.0802%" height="15" fill="rgb(243,99,6)" fg:x="689" fg:w="1"/><text x="55.5026%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3328%" y="373" width="0.0802%" height="15" fill="rgb(230,168,48)" fg:x="690" fg:w="1"/><text x="55.5828%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (25 samples, 2.00%)</title><rect x="53.4884%" y="405" width="2.0048%" height="15" fill="rgb(238,227,13)" fg:x="667" fg:w="25"/><text x="53.7384%" y="415.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="53.8893%" y="389" width="1.6038%" height="15" fill="rgb(209,109,13)" fg:x="672" fg:w="20"/><text x="54.1393%" y="399.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;f64&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="55.4130%" y="373" width="0.0802%" height="15" fill="rgb(228,195,1)" fg:x="691" fg:w="1"/><text x="55.6630%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.4130%" y="357" width="0.0802%" height="15" fill="rgb(230,218,0)" fg:x="691" fg:w="1"/><text x="55.6630%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 2.17%)</title><rect x="53.4082%" y="421" width="2.1652%" height="15" fill="rgb(206,1,45)" fg:x="666" fg:w="27"/><text x="53.6582%" y="431.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="55.4932%" y="405" width="0.0802%" height="15" fill="rgb(209,124,26)" fg:x="692" fg:w="1"/><text x="55.7432%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (47 samples, 3.77%)</title><rect x="52.2053%" y="469" width="3.7690%" height="15" fill="rgb(220,59,8)" fg:x="651" fg:w="47"/><text x="52.4553%" y="479.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (45 samples, 3.61%)</title><rect x="52.3657%" y="453" width="3.6087%" height="15" fill="rgb(251,41,37)" fg:x="653" fg:w="45"/><text x="52.6157%" y="463.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.89%)</title><rect x="53.0874%" y="437" width="2.8869%" height="15" fill="rgb(239,152,21)" fg:x="662" fg:w="36"/><text x="53.3374%" y="447.50">se..</text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="55.5734%" y="421" width="0.4010%" height="15" fill="rgb(226,32,1)" fg:x="693" fg:w="5"/><text x="55.8234%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.2149%" y="293" width="0.1604%" height="15" fill="rgb(230,154,36)" fg:x="701" fg:w="2"/><text x="56.4649%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.2951%" y="277" width="0.0802%" height="15" fill="rgb(208,228,43)" fg:x="702" fg:w="1"/><text x="56.5451%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="56.2149%" y="325" width="0.2406%" height="15" fill="rgb(214,203,3)" fg:x="701" fg:w="3"/><text x="56.4649%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.2149%" y="309" width="0.2406%" height="15" fill="rgb(207,149,29)" fg:x="701" fg:w="3"/><text x="56.4649%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3753%" y="293" width="0.0802%" height="15" fill="rgb(250,105,7)" fg:x="703" fg:w="1"/><text x="56.6253%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3753%" y="277" width="0.0802%" height="15" fill="rgb(232,222,16)" fg:x="703" fg:w="1"/><text x="56.6253%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="56.3753%" y="261" width="0.0802%" height="15" fill="rgb(209,32,24)" fg:x="703" fg:w="1"/><text x="56.6253%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="56.6159%" y="293" width="0.3208%" height="15" fill="rgb(225,13,6)" fg:x="706" fg:w="4"/><text x="56.8659%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.7763%" y="277" width="0.1604%" height="15" fill="rgb(245,226,26)" fg:x="708" fg:w="2"/><text x="57.0263%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8565%" y="261" width="0.0802%" height="15" fill="rgb(229,178,27)" fg:x="709" fg:w="1"/><text x="57.1065%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8565%" y="245" width="0.0802%" height="15" fill="rgb(205,227,28)" fg:x="709" fg:w="1"/><text x="57.1065%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="56.6159%" y="309" width="0.4812%" height="15" fill="rgb(210,191,45)" fg:x="706" fg:w="6"/><text x="56.8659%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.9366%" y="293" width="0.1604%" height="15" fill="rgb(206,124,16)" fg:x="710" fg:w="2"/><text x="57.1866%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="57.0970%" y="293" width="0.1604%" height="15" fill="rgb(210,162,0)" fg:x="712" fg:w="2"/><text x="57.3470%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="57.0970%" y="309" width="0.2406%" height="15" fill="rgb(211,54,38)" fg:x="712" fg:w="3"/><text x="57.3470%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2574%" y="293" width="0.0802%" height="15" fill="rgb(248,192,3)" fg:x="714" fg:w="1"/><text x="57.5074%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="56.4555%" y="325" width="1.0425%" height="15" fill="rgb(233,187,18)" fg:x="704" fg:w="13"/><text x="56.7055%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.3376%" y="309" width="0.1604%" height="15" fill="rgb(237,208,14)" fg:x="715" fg:w="2"/><text x="57.5876%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.3376%" y="293" width="0.1604%" height="15" fill="rgb(212,77,1)" fg:x="715" fg:w="2"/><text x="57.5876%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.3376%" y="277" width="0.1604%" height="15" fill="rgb(210,163,22)" fg:x="715" fg:w="2"/><text x="57.5876%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="56.1347%" y="341" width="1.4435%" height="15" fill="rgb(250,58,28)" fg:x="700" fg:w="18"/><text x="56.3847%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="57.4980%" y="325" width="0.0802%" height="15" fill="rgb(254,28,41)" fg:x="717" fg:w="1"/><text x="57.7480%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.4980%" y="309" width="0.0802%" height="15" fill="rgb(237,162,36)" fg:x="717" fg:w="1"/><text x="57.7480%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4980%" y="293" width="0.0802%" height="15" fill="rgb(232,56,6)" fg:x="717" fg:w="1"/><text x="57.7480%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="57.5782%" y="341" width="0.2406%" height="15" fill="rgb(216,127,42)" fg:x="718" fg:w="3"/><text x="57.8282%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.7386%" y="325" width="0.0802%" height="15" fill="rgb(241,69,15)" fg:x="720" fg:w="1"/><text x="57.9886%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.84%)</title><rect x="56.0545%" y="373" width="1.8444%" height="15" fill="rgb(227,180,19)" fg:x="699" fg:w="23"/><text x="56.3045%" y="383.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.84%)</title><rect x="56.0545%" y="357" width="1.8444%" height="15" fill="rgb(231,188,29)" fg:x="699" fg:w="23"/><text x="56.3045%" y="367.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8188%" y="341" width="0.0802%" height="15" fill="rgb(224,176,27)" fg:x="721" fg:w="1"/><text x="58.0688%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="57.8990%" y="373" width="0.1604%" height="15" fill="rgb(249,214,19)" fg:x="722" fg:w="2"/><text x="58.1490%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="57.8990%" y="357" width="0.1604%" height="15" fill="rgb(240,0,4)" fg:x="722" fg:w="2"/><text x="58.1490%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.0593%" y="341" width="0.1604%" height="15" fill="rgb(233,28,41)" fg:x="724" fg:w="2"/><text x="58.3093%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.33%)</title><rect x="55.9743%" y="405" width="2.3256%" height="15" fill="rgb(220,90,51)" fg:x="698" fg:w="29"/><text x="56.2243%" y="415.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.25%)</title><rect x="56.0545%" y="389" width="2.2454%" height="15" fill="rgb(250,52,22)" fg:x="699" fg:w="28"/><text x="56.3045%" y="399.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.0593%" y="373" width="0.2406%" height="15" fill="rgb(231,152,36)" fg:x="724" fg:w="3"/><text x="58.3093%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.0593%" y="357" width="0.2406%" height="15" fill="rgb(250,218,4)" fg:x="724" fg:w="3"/><text x="58.3093%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.2197%" y="341" width="0.0802%" height="15" fill="rgb(210,38,21)" fg:x="726" fg:w="1"/><text x="58.4697%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.2999%" y="405" width="0.0802%" height="15" fill="rgb(230,75,13)" fg:x="727" fg:w="1"/><text x="58.5499%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2999%" y="389" width="0.0802%" height="15" fill="rgb(250,68,53)" fg:x="727" fg:w="1"/><text x="58.5499%" y="399.50"></text></g><g><title>engine::session::state::State::close (189 samples, 15.16%)</title><rect x="43.4643%" y="565" width="15.1564%" height="15" fill="rgb(250,210,16)" fg:x="542" fg:w="189"/><text x="43.7143%" y="575.50">engine::session::state:..</text></g><g><title>engine::session::state::State::flush_entities (189 samples, 15.16%)</title><rect x="43.4643%" y="549" width="15.1564%" height="15" fill="rgb(240,132,5)" fg:x="542" fg:w="189"/><text x="43.7143%" y="559.50">engine::session::state:..</text></g><g><title>core::iter::adapters::try_process (185 samples, 14.84%)</title><rect x="43.7851%" y="533" width="14.8356%" height="15" fill="rgb(222,148,48)" fg:x="546" fg:w="185"/><text x="44.0351%" y="543.50">core::iter::adapters::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (185 samples, 14.84%)</title><rect x="43.7851%" y="517" width="14.8356%" height="15" fill="rgb(247,181,24)" fg:x="546" fg:w="185"/><text x="44.0351%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (184 samples, 14.76%)</title><rect x="43.8653%" y="501" width="14.7554%" height="15" fill="rgb(239,5,31)" fg:x="547" fg:w="184"/><text x="44.1153%" y="511.50">engine::session::state:..</text></g><g><title>kernel::model::any_entity_changes (116 samples, 9.30%)</title><rect x="49.3184%" y="485" width="9.3023%" height="15" fill="rgb(241,152,38)" fg:x="615" fg:w="116"/><text x="49.5684%" y="495.50">kernel::model..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (33 samples, 2.65%)</title><rect x="55.9743%" y="469" width="2.6464%" height="15" fill="rgb(246,200,37)" fg:x="698" fg:w="33"/><text x="56.2243%" y="479.50">se..</text></g><g><title>serde_json::de::from_trait (33 samples, 2.65%)</title><rect x="55.9743%" y="453" width="2.6464%" height="15" fill="rgb(243,210,26)" fg:x="698" fg:w="33"/><text x="56.2243%" y="463.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 2.65%)</title><rect x="55.9743%" y="437" width="2.6464%" height="15" fill="rgb(222,22,22)" fg:x="698" fg:w="33"/><text x="56.2243%" y="447.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (33 samples, 2.65%)</title><rect x="55.9743%" y="421" width="2.6464%" height="15" fill="rgb(208,129,28)" fg:x="698" fg:w="33"/><text x="56.2243%" y="431.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.3801%" y="405" width="0.2406%" height="15" fill="rgb(254,169,28)" fg:x="728" fg:w="3"/><text x="58.6301%" y="415.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.16%)</title><rect x="58.6207%" y="565" width="0.1604%" height="15" fill="rgb(225,45,17)" fg:x="731" fg:w="2"/><text x="58.8707%" y="575.50"></text></g><g><title>engine::session::Session::close (199 samples, 15.96%)</title><rect x="43.0634%" y="581" width="15.9583%" height="15" fill="rgb(232,199,2)" fg:x="537" fg:w="199"/><text x="43.3134%" y="591.50">engine::session::Session:..</text></g><g><title>std::time::Instant::elapsed (3 samples, 0.24%)</title><rect x="58.7811%" y="565" width="0.2406%" height="15" fill="rgb(235,33,40)" fg:x="733" fg:w="3"/><text x="59.0311%" y="575.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.24%)</title><rect x="58.7811%" y="549" width="0.2406%" height="15" fill="rgb(237,89,50)" fg:x="733" fg:w="3"/><text x="59.0311%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.24%)</title><rect x="58.7811%" y="533" width="0.2406%" height="15" fill="rgb(238,126,5)" fg:x="733" fg:w="3"/><text x="59.0311%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.24%)</title><rect x="58.7811%" y="517" width="0.2406%" height="15" fill="rgb(247,214,42)" fg:x="733" fg:w="3"/><text x="59.0311%" y="527.50"></text></g><g><title>clock_gettime (3 samples, 0.24%)</title><rect x="58.7811%" y="501" width="0.2406%" height="15" fill="rgb(238,60,45)" fg:x="733" fg:w="3"/><text x="59.0311%" y="511.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="59.1018%" y="549" width="0.0802%" height="15" fill="rgb(225,69,44)" fg:x="737" fg:w="1"/><text x="59.3518%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="59.1018%" y="533" width="0.0802%" height="15" fill="rgb(241,13,44)" fg:x="737" fg:w="1"/><text x="59.3518%" y="543.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::sources (1 samples, 0.08%)</title><rect x="59.1018%" y="517" width="0.0802%" height="15" fill="rgb(227,121,22)" fg:x="737" fg:w="1"/><text x="59.3518%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="59.3424%" y="277" width="0.0802%" height="15" fill="rgb(231,160,23)" fg:x="740" fg:w="1"/><text x="59.5924%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="59.3424%" y="261" width="0.0802%" height="15" fill="rgb(250,179,43)" fg:x="740" fg:w="1"/><text x="59.5924%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="59.3424%" y="309" width="0.1604%" height="15" fill="rgb(233,54,46)" fg:x="740" fg:w="2"/><text x="59.5924%" y="319.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (2 samples, 0.16%)</title><rect x="59.3424%" y="293" width="0.1604%" height="15" fill="rgb(247,120,42)" fg:x="740" fg:w="2"/><text x="59.5924%" y="303.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="59.4226%" y="277" width="0.0802%" height="15" fill="rgb(221,219,12)" fg:x="741" fg:w="1"/><text x="59.6726%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="59.4226%" y="261" width="0.0802%" height="15" fill="rgb(211,126,8)" fg:x="741" fg:w="1"/><text x="59.6726%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.4226%" y="245" width="0.0802%" height="15" fill="rgb(218,154,33)" fg:x="741" fg:w="1"/><text x="59.6726%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.4226%" y="229" width="0.0802%" height="15" fill="rgb(212,199,16)" fg:x="741" fg:w="1"/><text x="59.6726%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.4226%" y="213" width="0.0802%" height="15" fill="rgb(236,215,46)" fg:x="741" fg:w="1"/><text x="59.6726%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.4226%" y="197" width="0.0802%" height="15" fill="rgb(232,32,22)" fg:x="741" fg:w="1"/><text x="59.6726%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.4226%" y="181" width="0.0802%" height="15" fill="rgb(234,79,15)" fg:x="741" fg:w="1"/><text x="59.6726%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.4226%" y="165" width="0.0802%" height="15" fill="rgb(235,187,47)" fg:x="741" fg:w="1"/><text x="59.6726%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.4226%" y="149" width="0.0802%" height="15" fill="rgb(244,69,37)" fg:x="741" fg:w="1"/><text x="59.6726%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.4226%" y="133" width="0.0802%" height="15" fill="rgb(249,140,25)" fg:x="741" fg:w="1"/><text x="59.6726%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="59.4226%" y="117" width="0.0802%" height="15" fill="rgb(213,69,8)" fg:x="741" fg:w="1"/><text x="59.6726%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="59.4226%" y="101" width="0.0802%" height="15" fill="rgb(220,136,2)" fg:x="741" fg:w="1"/><text x="59.6726%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="59.4226%" y="85" width="0.0802%" height="15" fill="rgb(237,50,36)" fg:x="741" fg:w="1"/><text x="59.6726%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="59.4226%" y="69" width="0.0802%" height="15" fill="rgb(226,18,11)" fg:x="741" fg:w="1"/><text x="59.6726%" y="79.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="59.4226%" y="53" width="0.0802%" height="15" fill="rgb(243,156,2)" fg:x="741" fg:w="1"/><text x="59.6726%" y="63.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="59.4226%" y="37" width="0.0802%" height="15" fill="rgb(218,8,34)" fg:x="741" fg:w="1"/><text x="59.6726%" y="47.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (3 samples, 0.24%)</title><rect x="59.3424%" y="357" width="0.2406%" height="15" fill="rgb(250,94,35)" fg:x="740" fg:w="3"/><text x="59.5924%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.24%)</title><rect x="59.3424%" y="341" width="0.2406%" height="15" fill="rgb(229,127,21)" fg:x="740" fg:w="3"/><text x="59.5924%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (3 samples, 0.24%)</title><rect x="59.3424%" y="325" width="0.2406%" height="15" fill="rgb(234,49,5)" fg:x="740" fg:w="3"/><text x="59.5924%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="59.5028%" y="309" width="0.0802%" height="15" fill="rgb(248,12,16)" fg:x="742" fg:w="1"/><text x="59.7528%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.5028%" y="293" width="0.0802%" height="15" fill="rgb(208,220,31)" fg:x="742" fg:w="1"/><text x="59.7528%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="59.3424%" y="389" width="0.3208%" height="15" fill="rgb(243,184,0)" fg:x="740" fg:w="4"/><text x="59.5924%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (4 samples, 0.32%)</title><rect x="59.3424%" y="373" width="0.3208%" height="15" fill="rgb(217,38,21)" fg:x="740" fg:w="4"/><text x="59.5924%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (1 samples, 0.08%)</title><rect x="59.5830%" y="357" width="0.0802%" height="15" fill="rgb(239,120,45)" fg:x="743" fg:w="1"/><text x="59.8330%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="59.5830%" y="341" width="0.0802%" height="15" fill="rgb(235,33,2)" fg:x="743" fg:w="1"/><text x="59.8330%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (1 samples, 0.08%)</title><rect x="59.5830%" y="325" width="0.0802%" height="15" fill="rgb(249,161,5)" fg:x="743" fg:w="1"/><text x="59.8330%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="59.5830%" y="309" width="0.0802%" height="15" fill="rgb(250,165,48)" fg:x="743" fg:w="1"/><text x="59.8330%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.5830%" y="293" width="0.0802%" height="15" fill="rgb(221,23,45)" fg:x="743" fg:w="1"/><text x="59.8330%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.5830%" y="277" width="0.0802%" height="15" fill="rgb(217,108,46)" fg:x="743" fg:w="1"/><text x="59.8330%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.5830%" y="261" width="0.0802%" height="15" fill="rgb(254,26,35)" fg:x="743" fg:w="1"/><text x="59.8330%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.5830%" y="245" width="0.0802%" height="15" fill="rgb(218,223,28)" fg:x="743" fg:w="1"/><text x="59.8330%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.5830%" y="229" width="0.0802%" height="15" fill="rgb(242,27,47)" fg:x="743" fg:w="1"/><text x="59.8330%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.5830%" y="213" width="0.0802%" height="15" fill="rgb(218,39,35)" fg:x="743" fg:w="1"/><text x="59.8330%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.48%)</title><rect x="59.2622%" y="533" width="0.4812%" height="15" fill="rgb(232,127,16)" fg:x="739" fg:w="6"/><text x="59.5122%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="59.3424%" y="517" width="0.4010%" height="15" fill="rgb(231,219,51)" fg:x="740" fg:w="5"/><text x="59.5924%" y="527.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="59.3424%" y="501" width="0.4010%" height="15" fill="rgb(217,220,46)" fg:x="740" fg:w="5"/><text x="59.5924%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="59.3424%" y="485" width="0.4010%" height="15" fill="rgb(230,75,1)" fg:x="740" fg:w="5"/><text x="59.5924%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="59.3424%" y="469" width="0.4010%" height="15" fill="rgb(218,2,8)" fg:x="740" fg:w="5"/><text x="59.5924%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (5 samples, 0.40%)</title><rect x="59.3424%" y="453" width="0.4010%" height="15" fill="rgb(206,111,30)" fg:x="740" fg:w="5"/><text x="59.5924%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (5 samples, 0.40%)</title><rect x="59.3424%" y="437" width="0.4010%" height="15" fill="rgb(209,135,6)" fg:x="740" fg:w="5"/><text x="59.5924%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.40%)</title><rect x="59.3424%" y="421" width="0.4010%" height="15" fill="rgb(205,169,10)" fg:x="740" fg:w="5"/><text x="59.5924%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (5 samples, 0.40%)</title><rect x="59.3424%" y="405" width="0.4010%" height="15" fill="rgb(212,204,38)" fg:x="740" fg:w="5"/><text x="59.5924%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="59.6632%" y="389" width="0.0802%" height="15" fill="rgb(205,199,14)" fg:x="744" fg:w="1"/><text x="59.9132%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="59.6632%" y="373" width="0.0802%" height="15" fill="rgb(212,4,6)" fg:x="744" fg:w="1"/><text x="59.9132%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="59.6632%" y="357" width="0.0802%" height="15" fill="rgb(250,15,10)" fg:x="744" fg:w="1"/><text x="59.9132%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="59.6632%" y="341" width="0.0802%" height="15" fill="rgb(212,49,51)" fg:x="744" fg:w="1"/><text x="59.9132%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="59.6632%" y="325" width="0.0802%" height="15" fill="rgb(235,21,9)" fg:x="744" fg:w="1"/><text x="59.9132%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="59.6632%" y="309" width="0.0802%" height="15" fill="rgb(251,31,32)" fg:x="744" fg:w="1"/><text x="59.9132%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="59.6632%" y="293" width="0.0802%" height="15" fill="rgb(246,23,9)" fg:x="744" fg:w="1"/><text x="59.9132%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="59.6632%" y="277" width="0.0802%" height="15" fill="rgb(225,216,14)" fg:x="744" fg:w="1"/><text x="59.9132%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.6632%" y="261" width="0.0802%" height="15" fill="rgb(215,200,26)" fg:x="744" fg:w="1"/><text x="59.9132%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.6632%" y="245" width="0.0802%" height="15" fill="rgb(237,130,47)" fg:x="744" fg:w="1"/><text x="59.9132%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.6632%" y="229" width="0.0802%" height="15" fill="rgb(247,74,14)" fg:x="744" fg:w="1"/><text x="59.9132%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.6632%" y="213" width="0.0802%" height="15" fill="rgb(254,97,46)" fg:x="744" fg:w="1"/><text x="59.9132%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.6632%" y="197" width="0.0802%" height="15" fill="rgb(234,191,1)" fg:x="744" fg:w="1"/><text x="59.9132%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.6632%" y="181" width="0.0802%" height="15" fill="rgb(215,165,14)" fg:x="744" fg:w="1"/><text x="59.9132%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.6632%" y="165" width="0.0802%" height="15" fill="rgb(230,182,6)" fg:x="744" fg:w="1"/><text x="59.9132%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.6632%" y="149" width="0.0802%" height="15" fill="rgb(210,127,39)" fg:x="744" fg:w="1"/><text x="59.9132%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="59.6632%" y="133" width="0.0802%" height="15" fill="rgb(223,212,51)" fg:x="744" fg:w="1"/><text x="59.9132%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="59.6632%" y="117" width="0.0802%" height="15" fill="rgb(226,176,43)" fg:x="744" fg:w="1"/><text x="59.9132%" y="127.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.7434%" y="517" width="0.1604%" height="15" fill="rgb(222,155,4)" fg:x="745" fg:w="2"/><text x="59.9934%" y="527.50"></text></g><g><title>chrono::offset::utc::Utc::now (1 samples, 0.08%)</title><rect x="59.9038%" y="517" width="0.0802%" height="15" fill="rgb(215,149,7)" fg:x="747" fg:w="1"/><text x="60.1538%" y="527.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (5 samples, 0.40%)</title><rect x="59.9840%" y="485" width="0.4010%" height="15" fill="rgb(252,199,23)" fg:x="748" fg:w="5"/><text x="60.2340%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (3 samples, 0.24%)</title><rect x="60.1443%" y="469" width="0.2406%" height="15" fill="rgb(245,52,29)" fg:x="750" fg:w="3"/><text x="60.3943%" y="479.50"></text></g><g><title>tracing_core::subscriber::Subscriber::register_callsite (2 samples, 0.16%)</title><rect x="60.2245%" y="453" width="0.1604%" height="15" fill="rgb(221,228,19)" fg:x="751" fg:w="2"/><text x="60.4745%" y="463.50"></text></g><g><title>&lt;engine::session::logs::SessionSubscriber as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.08%)</title><rect x="60.3047%" y="437" width="0.0802%" height="15" fill="rgb(253,101,6)" fg:x="752" fg:w="1"/><text x="60.5547%" y="447.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (7 samples, 0.56%)</title><rect x="59.9840%" y="517" width="0.5613%" height="15" fill="rgb(211,130,8)" fg:x="748" fg:w="7"/><text x="60.2340%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (7 samples, 0.56%)</title><rect x="59.9840%" y="501" width="0.5613%" height="15" fill="rgb(238,37,53)" fg:x="748" fg:w="7"/><text x="60.2340%" y="511.50"></text></g><g><title>tracing_core::callsite::dispatchers::Dispatchers::register_dispatch (2 samples, 0.16%)</title><rect x="60.3849%" y="485" width="0.1604%" height="15" fill="rgb(235,145,5)" fg:x="753" fg:w="2"/><text x="60.6349%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (2 samples, 0.16%)</title><rect x="60.3849%" y="469" width="0.1604%" height="15" fill="rgb(244,12,43)" fg:x="753" fg:w="2"/><text x="60.6349%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4651%" y="453" width="0.0802%" height="15" fill="rgb(246,195,24)" fg:x="754" fg:w="1"/><text x="60.7151%" y="463.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.08%)</title><rect x="60.5453%" y="517" width="0.0802%" height="15" fill="rgb(235,163,6)" fg:x="755" fg:w="1"/><text x="60.7953%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8661%" y="389" width="0.0802%" height="15" fill="rgb(236,218,17)" fg:x="759" fg:w="1"/><text x="61.1161%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.8661%" y="373" width="0.0802%" height="15" fill="rgb(235,12,38)" fg:x="759" fg:w="1"/><text x="61.1161%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="60.7859%" y="405" width="0.2406%" height="15" fill="rgb(225,195,33)" fg:x="758" fg:w="3"/><text x="61.0359%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9463%" y="389" width="0.0802%" height="15" fill="rgb(238,54,35)" fg:x="760" fg:w="1"/><text x="61.1963%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9463%" y="373" width="0.0802%" height="15" fill="rgb(238,33,7)" fg:x="760" fg:w="1"/><text x="61.1963%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1067%" y="293" width="0.0802%" height="15" fill="rgb(245,5,14)" fg:x="762" fg:w="1"/><text x="61.3567%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1067%" y="277" width="0.0802%" height="15" fill="rgb(251,95,31)" fg:x="762" fg:w="1"/><text x="61.3567%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1067%" y="261" width="0.0802%" height="15" fill="rgb(222,15,46)" fg:x="762" fg:w="1"/><text x="61.3567%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1067%" y="245" width="0.0802%" height="15" fill="rgb(226,182,24)" fg:x="762" fg:w="1"/><text x="61.3567%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.1067%" y="229" width="0.0802%" height="15" fill="rgb(229,105,41)" fg:x="762" fg:w="1"/><text x="61.3567%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.1067%" y="213" width="0.0802%" height="15" fill="rgb(216,99,53)" fg:x="762" fg:w="1"/><text x="61.3567%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.1067%" y="197" width="0.0802%" height="15" fill="rgb(253,26,20)" fg:x="762" fg:w="1"/><text x="61.3567%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.1067%" y="181" width="0.0802%" height="15" fill="rgb(249,155,28)" fg:x="762" fg:w="1"/><text x="61.3567%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.1067%" y="165" width="0.0802%" height="15" fill="rgb(241,221,2)" fg:x="762" fg:w="1"/><text x="61.3567%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.1067%" y="149" width="0.0802%" height="15" fill="rgb(219,124,6)" fg:x="762" fg:w="1"/><text x="61.3567%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.1067%" y="133" width="0.0802%" height="15" fill="rgb(233,37,6)" fg:x="762" fg:w="1"/><text x="61.3567%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.1067%" y="117" width="0.0802%" height="15" fill="rgb(238,20,14)" fg:x="762" fg:w="1"/><text x="61.3567%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.1067%" y="101" width="0.0802%" height="15" fill="rgb(232,106,27)" fg:x="762" fg:w="1"/><text x="61.3567%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1067%" y="85" width="0.0802%" height="15" fill="rgb(246,157,24)" fg:x="762" fg:w="1"/><text x="61.3567%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.1067%" y="341" width="0.1604%" height="15" fill="rgb(214,153,10)" fg:x="762" fg:w="2"/><text x="61.3567%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.1067%" y="325" width="0.1604%" height="15" fill="rgb(212,94,6)" fg:x="762" fg:w="2"/><text x="61.3567%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.1067%" y="309" width="0.1604%" height="15" fill="rgb(254,25,27)" fg:x="762" fg:w="2"/><text x="61.3567%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1868%" y="293" width="0.0802%" height="15" fill="rgb(250,43,52)" fg:x="763" fg:w="1"/><text x="61.4368%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1868%" y="277" width="0.0802%" height="15" fill="rgb(221,226,40)" fg:x="763" fg:w="1"/><text x="61.4368%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4274%" y="325" width="0.0802%" height="15" fill="rgb(235,162,34)" fg:x="766" fg:w="1"/><text x="61.6774%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4274%" y="309" width="0.0802%" height="15" fill="rgb(239,24,26)" fg:x="766" fg:w="1"/><text x="61.6774%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4274%" y="293" width="0.0802%" height="15" fill="rgb(244,226,11)" fg:x="766" fg:w="1"/><text x="61.6774%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4274%" y="277" width="0.0802%" height="15" fill="rgb(225,23,10)" fg:x="766" fg:w="1"/><text x="61.6774%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="61.2670%" y="341" width="0.4010%" height="15" fill="rgb(249,125,6)" fg:x="764" fg:w="5"/><text x="61.5170%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.5076%" y="325" width="0.1604%" height="15" fill="rgb(246,212,12)" fg:x="767" fg:w="2"/><text x="61.7576%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.5076%" y="309" width="0.1604%" height="15" fill="rgb(230,43,32)" fg:x="767" fg:w="2"/><text x="61.7576%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="61.5076%" y="293" width="0.1604%" height="15" fill="rgb(210,95,23)" fg:x="767" fg:w="2"/><text x="61.7576%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.5076%" y="277" width="0.1604%" height="15" fill="rgb(229,103,33)" fg:x="767" fg:w="2"/><text x="61.7576%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.5878%" y="261" width="0.0802%" height="15" fill="rgb(222,104,27)" fg:x="768" fg:w="1"/><text x="61.8378%" y="271.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="61.6680%" y="341" width="0.0802%" height="15" fill="rgb(239,221,23)" fg:x="769" fg:w="1"/><text x="61.9180%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6680%" y="325" width="0.0802%" height="15" fill="rgb(222,98,21)" fg:x="769" fg:w="1"/><text x="61.9180%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6680%" y="309" width="0.0802%" height="15" fill="rgb(231,101,20)" fg:x="769" fg:w="1"/><text x="61.9180%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.6680%" y="293" width="0.0802%" height="15" fill="rgb(215,150,22)" fg:x="769" fg:w="1"/><text x="61.9180%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.6680%" y="277" width="0.0802%" height="15" fill="rgb(248,3,34)" fg:x="769" fg:w="1"/><text x="61.9180%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.6680%" y="261" width="0.0802%" height="15" fill="rgb(220,141,21)" fg:x="769" fg:w="1"/><text x="61.9180%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.6680%" y="245" width="0.0802%" height="15" fill="rgb(223,41,48)" fg:x="769" fg:w="1"/><text x="61.9180%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.6680%" y="229" width="0.0802%" height="15" fill="rgb(247,12,5)" fg:x="769" fg:w="1"/><text x="61.9180%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.7482%" y="293" width="0.0802%" height="15" fill="rgb(206,173,10)" fg:x="770" fg:w="1"/><text x="61.9982%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.9086%" y="181" width="0.0802%" height="15" fill="rgb(233,214,37)" fg:x="772" fg:w="1"/><text x="62.1586%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9086%" y="165" width="0.0802%" height="15" fill="rgb(238,86,43)" fg:x="772" fg:w="1"/><text x="62.1586%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="61.8284%" y="213" width="0.3208%" height="15" fill="rgb(212,182,8)" fg:x="771" fg:w="4"/><text x="62.0784%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.8284%" y="197" width="0.3208%" height="15" fill="rgb(240,91,47)" fg:x="771" fg:w="4"/><text x="62.0784%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="61.9888%" y="181" width="0.1604%" height="15" fill="rgb(209,138,26)" fg:x="773" fg:w="2"/><text x="62.2388%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.0690%" y="165" width="0.0802%" height="15" fill="rgb(231,163,20)" fg:x="774" fg:w="1"/><text x="62.3190%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.0690%" y="149" width="0.0802%" height="15" fill="rgb(214,91,54)" fg:x="774" fg:w="1"/><text x="62.3190%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.0690%" y="133" width="0.0802%" height="15" fill="rgb(230,32,17)" fg:x="774" fg:w="1"/><text x="62.3190%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.0690%" y="117" width="0.0802%" height="15" fill="rgb(231,34,34)" fg:x="774" fg:w="1"/><text x="62.3190%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0690%" y="101" width="0.0802%" height="15" fill="rgb(224,228,27)" fg:x="774" fg:w="1"/><text x="62.3190%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="61.8284%" y="245" width="0.4010%" height="15" fill="rgb(219,35,40)" fg:x="771" fg:w="5"/><text x="62.0784%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="61.8284%" y="229" width="0.4010%" height="15" fill="rgb(234,42,8)" fg:x="771" fg:w="5"/><text x="62.0784%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.1492%" y="213" width="0.0802%" height="15" fill="rgb(226,75,22)" fg:x="775" fg:w="1"/><text x="62.3992%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="62.1492%" y="197" width="0.0802%" height="15" fill="rgb(242,203,28)" fg:x="775" fg:w="1"/><text x="62.3992%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2294%" y="213" width="0.0802%" height="15" fill="rgb(221,3,9)" fg:x="776" fg:w="1"/><text x="62.4794%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="62.2294%" y="245" width="0.2406%" height="15" fill="rgb(214,34,31)" fg:x="776" fg:w="3"/><text x="62.4794%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="62.2294%" y="229" width="0.2406%" height="15" fill="rgb(252,119,15)" fg:x="776" fg:w="3"/><text x="62.4794%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="62.3095%" y="213" width="0.1604%" height="15" fill="rgb(244,224,31)" fg:x="777" fg:w="2"/><text x="62.5595%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="62.3095%" y="197" width="0.1604%" height="15" fill="rgb(215,8,51)" fg:x="777" fg:w="2"/><text x="62.5595%" y="207.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.3095%" y="181" width="0.1604%" height="15" fill="rgb(207,24,1)" fg:x="777" fg:w="2"/><text x="62.5595%" y="191.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.80%)</title><rect x="61.7482%" y="341" width="0.8019%" height="15" fill="rgb(245,90,0)" fg:x="770" fg:w="10"/><text x="61.9982%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="61.7482%" y="325" width="0.8019%" height="15" fill="rgb(246,43,48)" fg:x="770" fg:w="10"/><text x="61.9982%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="61.7482%" y="309" width="0.8019%" height="15" fill="rgb(252,218,10)" fg:x="770" fg:w="10"/><text x="61.9982%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="61.8284%" y="293" width="0.7217%" height="15" fill="rgb(231,24,35)" fg:x="771" fg:w="9"/><text x="62.0784%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="61.8284%" y="277" width="0.7217%" height="15" fill="rgb(225,66,19)" fg:x="771" fg:w="9"/><text x="62.0784%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="61.8284%" y="261" width="0.7217%" height="15" fill="rgb(214,96,51)" fg:x="771" fg:w="9"/><text x="62.0784%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.4699%" y="245" width="0.0802%" height="15" fill="rgb(251,151,47)" fg:x="779" fg:w="1"/><text x="62.7199%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.4699%" y="229" width="0.0802%" height="15" fill="rgb(236,79,14)" fg:x="779" fg:w="1"/><text x="62.7199%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="62.4699%" y="213" width="0.0802%" height="15" fill="rgb(210,205,11)" fg:x="779" fg:w="1"/><text x="62.7199%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.4699%" y="197" width="0.0802%" height="15" fill="rgb(233,142,53)" fg:x="779" fg:w="1"/><text x="62.7199%" y="207.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="62.4699%" y="181" width="0.0802%" height="15" fill="rgb(212,116,48)" fg:x="779" fg:w="1"/><text x="62.7199%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.5501%" y="165" width="0.2406%" height="15" fill="rgb(234,55,33)" fg:x="780" fg:w="3"/><text x="62.8001%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.6303%" y="149" width="0.1604%" height="15" fill="rgb(253,92,27)" fg:x="781" fg:w="2"/><text x="62.8803%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="62.6303%" y="133" width="0.1604%" height="15" fill="rgb(220,7,35)" fg:x="781" fg:w="2"/><text x="62.8803%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.7105%" y="117" width="0.0802%" height="15" fill="rgb(246,124,6)" fg:x="782" fg:w="1"/><text x="62.9605%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.7105%" y="101" width="0.0802%" height="15" fill="rgb(212,111,51)" fg:x="782" fg:w="1"/><text x="62.9605%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.7105%" y="85" width="0.0802%" height="15" fill="rgb(253,116,7)" fg:x="782" fg:w="1"/><text x="62.9605%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="62.5501%" y="245" width="0.3208%" height="15" fill="rgb(213,145,18)" fg:x="780" fg:w="4"/><text x="62.8001%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="62.5501%" y="229" width="0.3208%" height="15" fill="rgb(219,149,7)" fg:x="780" fg:w="4"/><text x="62.8001%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="62.5501%" y="213" width="0.3208%" height="15" fill="rgb(225,156,20)" fg:x="780" fg:w="4"/><text x="62.8001%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="62.5501%" y="197" width="0.3208%" height="15" fill="rgb(211,98,19)" fg:x="780" fg:w="4"/><text x="62.8001%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="62.5501%" y="181" width="0.3208%" height="15" fill="rgb(231,192,31)" fg:x="780" fg:w="4"/><text x="62.8001%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.7907%" y="165" width="0.0802%" height="15" fill="rgb(249,95,19)" fg:x="783" fg:w="1"/><text x="63.0407%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7907%" y="149" width="0.0802%" height="15" fill="rgb(247,101,36)" fg:x="783" fg:w="1"/><text x="63.0407%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="62.5501%" y="277" width="0.4010%" height="15" fill="rgb(221,45,43)" fg:x="780" fg:w="5"/><text x="62.8001%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="62.5501%" y="261" width="0.4010%" height="15" fill="rgb(220,42,1)" fg:x="780" fg:w="5"/><text x="62.8001%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.8709%" y="245" width="0.0802%" height="15" fill="rgb(236,19,24)" fg:x="784" fg:w="1"/><text x="63.1209%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8709%" y="229" width="0.0802%" height="15" fill="rgb(225,192,6)" fg:x="784" fg:w="1"/><text x="63.1209%" y="239.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (29 samples, 2.33%)</title><rect x="60.7057%" y="421" width="2.3256%" height="15" fill="rgb(242,30,19)" fg:x="757" fg:w="29"/><text x="60.9557%" y="431.50">&lt;..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (25 samples, 2.00%)</title><rect x="61.0265%" y="405" width="2.0048%" height="15" fill="rgb(240,36,6)" fg:x="761" fg:w="25"/><text x="61.2765%" y="415.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (25 samples, 2.00%)</title><rect x="61.0265%" y="389" width="2.0048%" height="15" fill="rgb(246,40,28)" fg:x="761" fg:w="25"/><text x="61.2765%" y="399.50">k..</text></g><g><title>engine::session::Session::load_entity (25 samples, 2.00%)</title><rect x="61.0265%" y="373" width="2.0048%" height="15" fill="rgb(225,155,33)" fg:x="761" fg:w="25"/><text x="61.2765%" y="383.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 2.00%)</title><rect x="61.0265%" y="357" width="2.0048%" height="15" fill="rgb(240,65,18)" fg:x="761" fg:w="25"/><text x="61.2765%" y="367.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="62.5501%" y="341" width="0.4812%" height="15" fill="rgb(217,0,48)" fg:x="780" fg:w="6"/><text x="62.8001%" y="351.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="62.5501%" y="325" width="0.4812%" height="15" fill="rgb(217,80,15)" fg:x="780" fg:w="6"/><text x="62.8001%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="62.5501%" y="309" width="0.4812%" height="15" fill="rgb(253,43,51)" fg:x="780" fg:w="6"/><text x="62.8001%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="62.5501%" y="293" width="0.4812%" height="15" fill="rgb(246,60,4)" fg:x="780" fg:w="6"/><text x="62.8001%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.9511%" y="277" width="0.0802%" height="15" fill="rgb(230,40,54)" fg:x="785" fg:w="1"/><text x="63.2011%" y="287.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="63.1115%" y="389" width="0.0802%" height="15" fill="rgb(208,20,44)" fg:x="787" fg:w="1"/><text x="63.3615%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="63.1115%" y="373" width="0.0802%" height="15" fill="rgb(230,22,22)" fg:x="787" fg:w="1"/><text x="63.3615%" y="383.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (32 samples, 2.57%)</title><rect x="60.7057%" y="437" width="2.5662%" height="15" fill="rgb(207,57,4)" fg:x="757" fg:w="32"/><text x="60.9557%" y="447.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="63.0313%" y="421" width="0.2406%" height="15" fill="rgb(242,130,33)" fg:x="786" fg:w="3"/><text x="63.2813%" y="431.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (2 samples, 0.16%)</title><rect x="63.1115%" y="405" width="0.1604%" height="15" fill="rgb(218,66,43)" fg:x="787" fg:w="2"/><text x="63.3615%" y="415.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="63.1917%" y="389" width="0.0802%" height="15" fill="rgb(236,105,16)" fg:x="788" fg:w="1"/><text x="63.4417%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="63.2719%" y="421" width="0.0802%" height="15" fill="rgb(230,46,15)" fg:x="789" fg:w="1"/><text x="63.5219%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.5926%" y="261" width="0.0802%" height="15" fill="rgb(251,172,40)" fg:x="793" fg:w="1"/><text x="63.8426%" y="271.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (6 samples, 0.48%)</title><rect x="63.5124%" y="405" width="0.4812%" height="15" fill="rgb(225,217,32)" fg:x="792" fg:w="6"/><text x="63.7624%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (6 samples, 0.48%)</title><rect x="63.5124%" y="389" width="0.4812%" height="15" fill="rgb(243,10,29)" fg:x="792" fg:w="6"/><text x="63.7624%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="63.5926%" y="373" width="0.4010%" height="15" fill="rgb(207,102,10)" fg:x="793" fg:w="5"/><text x="63.8426%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.40%)</title><rect x="63.5926%" y="357" width="0.4010%" height="15" fill="rgb(241,125,5)" fg:x="793" fg:w="5"/><text x="63.8426%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="63.5926%" y="341" width="0.4010%" height="15" fill="rgb(230,125,29)" fg:x="793" fg:w="5"/><text x="63.8426%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.40%)</title><rect x="63.5926%" y="325" width="0.4010%" height="15" fill="rgb(223,65,44)" fg:x="793" fg:w="5"/><text x="63.8426%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.40%)</title><rect x="63.5926%" y="309" width="0.4010%" height="15" fill="rgb(224,188,28)" fg:x="793" fg:w="5"/><text x="63.8426%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (5 samples, 0.40%)</title><rect x="63.5926%" y="293" width="0.4010%" height="15" fill="rgb(254,197,27)" fg:x="793" fg:w="5"/><text x="63.8426%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (5 samples, 0.40%)</title><rect x="63.5926%" y="277" width="0.4010%" height="15" fill="rgb(220,200,25)" fg:x="793" fg:w="5"/><text x="63.8426%" y="287.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (4 samples, 0.32%)</title><rect x="63.6728%" y="261" width="0.3208%" height="15" fill="rgb(239,225,54)" fg:x="794" fg:w="4"/><text x="63.9228%" y="271.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (4 samples, 0.32%)</title><rect x="63.6728%" y="245" width="0.3208%" height="15" fill="rgb(211,59,40)" fg:x="794" fg:w="4"/><text x="63.9228%" y="255.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="63.8332%" y="229" width="0.1604%" height="15" fill="rgb(213,176,46)" fg:x="796" fg:w="2"/><text x="64.0832%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="63.9134%" y="213" width="0.0802%" height="15" fill="rgb(226,99,4)" fg:x="797" fg:w="1"/><text x="64.1634%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.9134%" y="197" width="0.0802%" height="15" fill="rgb(239,203,43)" fg:x="797" fg:w="1"/><text x="64.1634%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="63.9134%" y="181" width="0.0802%" height="15" fill="rgb(246,1,45)" fg:x="797" fg:w="1"/><text x="64.1634%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0738%" y="389" width="0.0802%" height="15" fill="rgb(231,42,52)" fg:x="799" fg:w="1"/><text x="64.3238%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="64.2342%" y="373" width="0.0802%" height="15" fill="rgb(240,13,50)" fg:x="801" fg:w="1"/><text x="64.4842%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.4747%" y="341" width="0.0802%" height="15" fill="rgb(225,81,14)" fg:x="804" fg:w="1"/><text x="64.7247%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4747%" y="325" width="0.0802%" height="15" fill="rgb(216,182,23)" fg:x="804" fg:w="1"/><text x="64.7247%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.4747%" y="309" width="0.0802%" height="15" fill="rgb(233,137,19)" fg:x="804" fg:w="1"/><text x="64.7247%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4747%" y="293" width="0.0802%" height="15" fill="rgb(242,61,46)" fg:x="804" fg:w="1"/><text x="64.7247%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4747%" y="277" width="0.0802%" height="15" fill="rgb(221,168,51)" fg:x="804" fg:w="1"/><text x="64.7247%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.4747%" y="261" width="0.0802%" height="15" fill="rgb(238,48,15)" fg:x="804" fg:w="1"/><text x="64.7247%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.4747%" y="245" width="0.0802%" height="15" fill="rgb(216,13,16)" fg:x="804" fg:w="1"/><text x="64.7247%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.4747%" y="229" width="0.0802%" height="15" fill="rgb(223,185,34)" fg:x="804" fg:w="1"/><text x="64.7247%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.4747%" y="213" width="0.0802%" height="15" fill="rgb(228,94,42)" fg:x="804" fg:w="1"/><text x="64.7247%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.4747%" y="197" width="0.0802%" height="15" fill="rgb(218,166,43)" fg:x="804" fg:w="1"/><text x="64.7247%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="64.5549%" y="341" width="0.0802%" height="15" fill="rgb(232,30,50)" fg:x="805" fg:w="1"/><text x="64.8049%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="64.3945%" y="357" width="0.3208%" height="15" fill="rgb(245,206,45)" fg:x="803" fg:w="4"/><text x="64.6445%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.6351%" y="341" width="0.0802%" height="15" fill="rgb(220,56,22)" fg:x="806" fg:w="1"/><text x="64.8851%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6351%" y="325" width="0.0802%" height="15" fill="rgb(239,129,38)" fg:x="806" fg:w="1"/><text x="64.8851%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="64.6351%" y="309" width="0.0802%" height="15" fill="rgb(207,68,41)" fg:x="806" fg:w="1"/><text x="64.8851%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="64.6351%" y="293" width="0.0802%" height="15" fill="rgb(221,21,7)" fg:x="806" fg:w="1"/><text x="64.8851%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="64.7153%" y="309" width="0.0802%" height="15" fill="rgb(240,33,25)" fg:x="807" fg:w="1"/><text x="64.9653%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.8757%" y="101" width="0.0802%" height="15" fill="rgb(242,119,10)" fg:x="809" fg:w="1"/><text x="65.1257%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.8757%" y="85" width="0.0802%" height="15" fill="rgb(214,149,40)" fg:x="809" fg:w="1"/><text x="65.1257%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.8757%" y="69" width="0.0802%" height="15" fill="rgb(228,25,36)" fg:x="809" fg:w="1"/><text x="65.1257%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8757%" y="53" width="0.0802%" height="15" fill="rgb(222,59,15)" fg:x="809" fg:w="1"/><text x="65.1257%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.8757%" y="245" width="0.1604%" height="15" fill="rgb(218,170,0)" fg:x="809" fg:w="2"/><text x="65.1257%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.8757%" y="229" width="0.1604%" height="15" fill="rgb(232,173,23)" fg:x="809" fg:w="2"/><text x="65.1257%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.8757%" y="213" width="0.1604%" height="15" fill="rgb(218,116,1)" fg:x="809" fg:w="2"/><text x="65.1257%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.8757%" y="197" width="0.1604%" height="15" fill="rgb(207,34,4)" fg:x="809" fg:w="2"/><text x="65.1257%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.8757%" y="181" width="0.1604%" height="15" fill="rgb(229,54,52)" fg:x="809" fg:w="2"/><text x="65.1257%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.8757%" y="165" width="0.1604%" height="15" fill="rgb(211,86,23)" fg:x="809" fg:w="2"/><text x="65.1257%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.8757%" y="149" width="0.1604%" height="15" fill="rgb(254,153,34)" fg:x="809" fg:w="2"/><text x="65.1257%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.8757%" y="133" width="0.1604%" height="15" fill="rgb(219,220,14)" fg:x="809" fg:w="2"/><text x="65.1257%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.8757%" y="117" width="0.1604%" height="15" fill="rgb(247,8,26)" fg:x="809" fg:w="2"/><text x="65.1257%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="64.9559%" y="101" width="0.0802%" height="15" fill="rgb(213,129,42)" fg:x="810" fg:w="1"/><text x="65.2059%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="64.9559%" y="85" width="0.0802%" height="15" fill="rgb(225,95,41)" fg:x="810" fg:w="1"/><text x="65.2059%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.8757%" y="261" width="0.2406%" height="15" fill="rgb(215,134,24)" fg:x="809" fg:w="3"/><text x="65.1257%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0361%" y="245" width="0.0802%" height="15" fill="rgb(235,23,54)" fg:x="811" fg:w="1"/><text x="65.2861%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0361%" y="229" width="0.0802%" height="15" fill="rgb(229,96,31)" fg:x="811" fg:w="1"/><text x="65.2861%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0361%" y="213" width="0.0802%" height="15" fill="rgb(206,111,12)" fg:x="811" fg:w="1"/><text x="65.2861%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0361%" y="197" width="0.0802%" height="15" fill="rgb(222,177,8)" fg:x="811" fg:w="1"/><text x="65.2861%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.0361%" y="181" width="0.0802%" height="15" fill="rgb(251,36,52)" fg:x="811" fg:w="1"/><text x="65.2861%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.0361%" y="165" width="0.0802%" height="15" fill="rgb(216,182,29)" fg:x="811" fg:w="1"/><text x="65.2861%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.0361%" y="149" width="0.0802%" height="15" fill="rgb(241,145,50)" fg:x="811" fg:w="1"/><text x="65.2861%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0361%" y="133" width="0.0802%" height="15" fill="rgb(231,71,35)" fg:x="811" fg:w="1"/><text x="65.2861%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0361%" y="117" width="0.0802%" height="15" fill="rgb(218,22,17)" fg:x="811" fg:w="1"/><text x="65.2861%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.0361%" y="101" width="0.0802%" height="15" fill="rgb(225,227,6)" fg:x="811" fg:w="1"/><text x="65.2861%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.0361%" y="85" width="0.0802%" height="15" fill="rgb(224,204,17)" fg:x="811" fg:w="1"/><text x="65.2861%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.0361%" y="69" width="0.0802%" height="15" fill="rgb(227,61,28)" fg:x="811" fg:w="1"/><text x="65.2861%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.0361%" y="53" width="0.0802%" height="15" fill="rgb(242,148,23)" fg:x="811" fg:w="1"/><text x="65.2861%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0361%" y="37" width="0.0802%" height="15" fill="rgb(237,105,33)" fg:x="811" fg:w="1"/><text x="65.2861%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="64.7955%" y="293" width="0.4010%" height="15" fill="rgb(238,218,40)" fg:x="808" fg:w="5"/><text x="65.0455%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="64.7955%" y="277" width="0.4010%" height="15" fill="rgb(209,126,11)" fg:x="808" fg:w="5"/><text x="65.0455%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1163%" y="261" width="0.0802%" height="15" fill="rgb(245,90,11)" fg:x="812" fg:w="1"/><text x="65.3663%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1163%" y="245" width="0.0802%" height="15" fill="rgb(211,195,10)" fg:x="812" fg:w="1"/><text x="65.3663%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.1163%" y="229" width="0.0802%" height="15" fill="rgb(231,45,45)" fg:x="812" fg:w="1"/><text x="65.3663%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.1163%" y="213" width="0.0802%" height="15" fill="rgb(246,100,43)" fg:x="812" fg:w="1"/><text x="65.3663%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.1163%" y="197" width="0.0802%" height="15" fill="rgb(241,193,8)" fg:x="812" fg:w="1"/><text x="65.3663%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1163%" y="181" width="0.0802%" height="15" fill="rgb(208,76,19)" fg:x="812" fg:w="1"/><text x="65.3663%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1163%" y="165" width="0.0802%" height="15" fill="rgb(223,69,40)" fg:x="812" fg:w="1"/><text x="65.3663%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.1163%" y="149" width="0.0802%" height="15" fill="rgb(207,120,39)" fg:x="812" fg:w="1"/><text x="65.3663%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.1163%" y="133" width="0.0802%" height="15" fill="rgb(212,209,28)" fg:x="812" fg:w="1"/><text x="65.3663%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.1163%" y="117" width="0.0802%" height="15" fill="rgb(246,82,29)" fg:x="812" fg:w="1"/><text x="65.3663%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.1163%" y="101" width="0.0802%" height="15" fill="rgb(239,6,40)" fg:x="812" fg:w="1"/><text x="65.3663%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1163%" y="85" width="0.0802%" height="15" fill="rgb(228,181,35)" fg:x="812" fg:w="1"/><text x="65.3663%" y="95.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.1965%" y="293" width="0.0802%" height="15" fill="rgb(238,151,2)" fg:x="813" fg:w="1"/><text x="65.4465%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.1965%" y="277" width="0.0802%" height="15" fill="rgb(236,94,18)" fg:x="813" fg:w="1"/><text x="65.4465%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="65.2767%" y="293" width="0.0802%" height="15" fill="rgb(208,38,14)" fg:x="814" fg:w="1"/><text x="65.5267%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2767%" y="277" width="0.0802%" height="15" fill="rgb(234,215,27)" fg:x="814" fg:w="1"/><text x="65.5267%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2767%" y="261" width="0.0802%" height="15" fill="rgb(254,211,53)" fg:x="814" fg:w="1"/><text x="65.5267%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.3569%" y="261" width="0.0802%" height="15" fill="rgb(216,175,11)" fg:x="815" fg:w="1"/><text x="65.6069%" y="271.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="65.3569%" y="293" width="0.1604%" height="15" fill="rgb(246,179,26)" fg:x="815" fg:w="2"/><text x="65.6069%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.3569%" y="277" width="0.1604%" height="15" fill="rgb(249,19,52)" fg:x="815" fg:w="2"/><text x="65.6069%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="65.4370%" y="261" width="0.0802%" height="15" fill="rgb(230,42,52)" fg:x="816" fg:w="1"/><text x="65.6870%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.5974%" y="213" width="0.0802%" height="15" fill="rgb(221,171,0)" fg:x="818" fg:w="1"/><text x="65.8474%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.8380%" y="133" width="0.1604%" height="15" fill="rgb(222,177,40)" fg:x="821" fg:w="2"/><text x="66.0880%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.9182%" y="117" width="0.0802%" height="15" fill="rgb(247,34,16)" fg:x="822" fg:w="1"/><text x="66.1682%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9182%" y="101" width="0.0802%" height="15" fill="rgb(213,217,37)" fg:x="822" fg:w="1"/><text x="66.1682%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.9984%" y="133" width="0.0802%" height="15" fill="rgb(231,189,24)" fg:x="823" fg:w="1"/><text x="66.2484%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.9984%" y="117" width="0.0802%" height="15" fill="rgb(214,22,9)" fg:x="823" fg:w="1"/><text x="66.2484%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.9984%" y="101" width="0.0802%" height="15" fill="rgb(212,70,22)" fg:x="823" fg:w="1"/><text x="66.2484%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="65.9984%" y="85" width="0.0802%" height="15" fill="rgb(249,64,51)" fg:x="823" fg:w="1"/><text x="66.2484%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.9984%" y="69" width="0.0802%" height="15" fill="rgb(249,148,20)" fg:x="823" fg:w="1"/><text x="66.2484%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.9984%" y="53" width="0.0802%" height="15" fill="rgb(246,46,48)" fg:x="823" fg:w="1"/><text x="66.2484%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="65.7578%" y="165" width="0.4010%" height="15" fill="rgb(217,34,48)" fg:x="820" fg:w="5"/><text x="66.0078%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="65.7578%" y="149" width="0.4010%" height="15" fill="rgb(222,45,26)" fg:x="820" fg:w="5"/><text x="66.0078%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0786%" y="133" width="0.0802%" height="15" fill="rgb(230,201,36)" fg:x="824" fg:w="1"/><text x="66.3286%" y="143.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="66.0786%" y="117" width="0.0802%" height="15" fill="rgb(217,30,43)" fg:x="824" fg:w="1"/><text x="66.3286%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="66.2390%" y="101" width="0.0802%" height="15" fill="rgb(230,197,40)" fg:x="826" fg:w="1"/><text x="66.4890%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.2390%" y="85" width="0.0802%" height="15" fill="rgb(239,181,18)" fg:x="826" fg:w="1"/><text x="66.4890%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2390%" y="69" width="0.0802%" height="15" fill="rgb(222,60,39)" fg:x="826" fg:w="1"/><text x="66.4890%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="65.6776%" y="197" width="0.7217%" height="15" fill="rgb(210,60,22)" fg:x="819" fg:w="9"/><text x="65.9276%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="65.7578%" y="181" width="0.6415%" height="15" fill="rgb(239,213,48)" fg:x="820" fg:w="8"/><text x="66.0078%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="66.1588%" y="165" width="0.2406%" height="15" fill="rgb(253,214,23)" fg:x="825" fg:w="3"/><text x="66.4088%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="66.1588%" y="149" width="0.2406%" height="15" fill="rgb(211,98,45)" fg:x="825" fg:w="3"/><text x="66.4088%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.2390%" y="133" width="0.1604%" height="15" fill="rgb(239,130,44)" fg:x="826" fg:w="2"/><text x="66.4890%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.2390%" y="117" width="0.1604%" height="15" fill="rgb(222,181,35)" fg:x="826" fg:w="2"/><text x="66.4890%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3192%" y="101" width="0.0802%" height="15" fill="rgb(219,219,49)" fg:x="827" fg:w="1"/><text x="66.5692%" y="111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="66.3192%" y="85" width="0.0802%" height="15" fill="rgb(227,161,51)" fg:x="827" fg:w="1"/><text x="66.5692%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.3994%" y="197" width="0.0802%" height="15" fill="rgb(239,112,27)" fg:x="828" fg:w="1"/><text x="66.6494%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.3994%" y="181" width="0.0802%" height="15" fill="rgb(248,122,18)" fg:x="828" fg:w="1"/><text x="66.6494%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.3994%" y="165" width="0.0802%" height="15" fill="rgb(245,130,23)" fg:x="828" fg:w="1"/><text x="66.6494%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.3994%" y="149" width="0.0802%" height="15" fill="rgb(211,225,28)" fg:x="828" fg:w="1"/><text x="66.6494%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="66.3994%" y="133" width="0.0802%" height="15" fill="rgb(242,105,44)" fg:x="828" fg:w="1"/><text x="66.6494%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.5597%" y="117" width="0.0802%" height="15" fill="rgb(216,183,46)" fg:x="830" fg:w="1"/><text x="66.8097%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.5597%" y="101" width="0.0802%" height="15" fill="rgb(227,112,9)" fg:x="830" fg:w="1"/><text x="66.8097%" y="111.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.12%)</title><rect x="65.5974%" y="245" width="1.1227%" height="15" fill="rgb(244,21,0)" fg:x="818" fg:w="14"/><text x="65.8474%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="65.5974%" y="229" width="1.1227%" height="15" fill="rgb(236,185,14)" fg:x="818" fg:w="14"/><text x="65.8474%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.04%)</title><rect x="65.6776%" y="213" width="1.0425%" height="15" fill="rgb(236,170,30)" fg:x="819" fg:w="13"/><text x="65.9276%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.4796%" y="197" width="0.2406%" height="15" fill="rgb(209,198,51)" fg:x="829" fg:w="3"/><text x="66.7296%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="66.4796%" y="181" width="0.2406%" height="15" fill="rgb(205,171,26)" fg:x="829" fg:w="3"/><text x="66.7296%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="66.5597%" y="165" width="0.1604%" height="15" fill="rgb(246,41,49)" fg:x="830" fg:w="2"/><text x="66.8097%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.5597%" y="149" width="0.1604%" height="15" fill="rgb(240,229,12)" fg:x="830" fg:w="2"/><text x="66.8097%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.5597%" y="133" width="0.1604%" height="15" fill="rgb(212,8,54)" fg:x="830" fg:w="2"/><text x="66.8097%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="66.6399%" y="117" width="0.0802%" height="15" fill="rgb(230,114,13)" fg:x="831" fg:w="1"/><text x="66.8899%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.6399%" y="101" width="0.0802%" height="15" fill="rgb(229,130,28)" fg:x="831" fg:w="1"/><text x="66.8899%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.6399%" y="85" width="0.0802%" height="15" fill="rgb(206,139,15)" fg:x="831" fg:w="1"/><text x="66.8899%" y="95.50"></text></g><g><title>kernel::model::entity::Entity::from_value (17 samples, 1.36%)</title><rect x="65.5172%" y="293" width="1.3633%" height="15" fill="rgb(241,188,35)" fg:x="817" fg:w="17"/><text x="65.7672%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.36%)</title><rect x="65.5172%" y="277" width="1.3633%" height="15" fill="rgb(208,224,26)" fg:x="817" fg:w="17"/><text x="65.7672%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.36%)</title><rect x="65.5172%" y="261" width="1.3633%" height="15" fill="rgb(251,131,28)" fg:x="817" fg:w="17"/><text x="65.7672%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.7201%" y="245" width="0.1604%" height="15" fill="rgb(208,153,1)" fg:x="832" fg:w="2"/><text x="66.9701%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.7201%" y="229" width="0.1604%" height="15" fill="rgb(234,33,36)" fg:x="832" fg:w="2"/><text x="66.9701%" y="239.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="66.8003%" y="213" width="0.0802%" height="15" fill="rgb(246,42,29)" fg:x="833" fg:w="1"/><text x="67.0503%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0409%" y="149" width="0.0802%" height="15" fill="rgb(251,114,16)" fg:x="836" fg:w="1"/><text x="67.2909%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0409%" y="133" width="0.0802%" height="15" fill="rgb(233,13,38)" fg:x="836" fg:w="1"/><text x="67.2909%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.0409%" y="117" width="0.0802%" height="15" fill="rgb(247,120,19)" fg:x="836" fg:w="1"/><text x="67.2909%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.1211%" y="101" width="0.0802%" height="15" fill="rgb(205,11,16)" fg:x="837" fg:w="1"/><text x="67.3711%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1211%" y="85" width="0.0802%" height="15" fill="rgb(228,185,19)" fg:x="837" fg:w="1"/><text x="67.3711%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="67.0409%" y="165" width="0.2406%" height="15" fill="rgb(239,88,52)" fg:x="836" fg:w="3"/><text x="67.2909%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.1211%" y="149" width="0.1604%" height="15" fill="rgb(219,23,1)" fg:x="837" fg:w="2"/><text x="67.3711%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.1211%" y="133" width="0.1604%" height="15" fill="rgb(253,177,16)" fg:x="837" fg:w="2"/><text x="67.3711%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.1211%" y="117" width="0.1604%" height="15" fill="rgb(225,150,40)" fg:x="837" fg:w="2"/><text x="67.3711%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2013%" y="101" width="0.0802%" height="15" fill="rgb(208,108,30)" fg:x="838" fg:w="1"/><text x="67.4513%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="67.2815%" y="149" width="0.0802%" height="15" fill="rgb(214,122,4)" fg:x="839" fg:w="1"/><text x="67.5315%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.2815%" y="165" width="0.1604%" height="15" fill="rgb(229,74,37)" fg:x="839" fg:w="2"/><text x="67.5315%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3617%" y="149" width="0.0802%" height="15" fill="rgb(233,61,41)" fg:x="840" fg:w="1"/><text x="67.6117%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="66.8805%" y="197" width="0.6415%" height="15" fill="rgb(238,191,5)" fg:x="834" fg:w="8"/><text x="67.1305%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="66.9607%" y="181" width="0.5613%" height="15" fill="rgb(233,78,24)" fg:x="835" fg:w="7"/><text x="67.2107%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4419%" y="165" width="0.0802%" height="15" fill="rgb(211,142,8)" fg:x="841" fg:w="1"/><text x="67.6919%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4419%" y="149" width="0.0802%" height="15" fill="rgb(253,38,53)" fg:x="841" fg:w="1"/><text x="67.6919%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4419%" y="133" width="0.0802%" height="15" fill="rgb(234,63,51)" fg:x="841" fg:w="1"/><text x="67.6919%" y="143.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (36 samples, 2.89%)</title><rect x="64.7153%" y="357" width="2.8869%" height="15" fill="rgb(205,23,31)" fg:x="807" fg:w="36"/><text x="64.9653%" y="367.50">&lt;k..</text></g><g><title>kernel::model::EntityPtrResolver::entity (36 samples, 2.89%)</title><rect x="64.7153%" y="341" width="2.8869%" height="15" fill="rgb(210,184,50)" fg:x="807" fg:w="36"/><text x="64.9653%" y="351.50">ke..</text></g><g><title>engine::session::Session::load_entity (36 samples, 2.89%)</title><rect x="64.7153%" y="325" width="2.8869%" height="15" fill="rgb(222,112,26)" fg:x="807" fg:w="36"/><text x="64.9653%" y="335.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (35 samples, 2.81%)</title><rect x="64.7955%" y="309" width="2.8067%" height="15" fill="rgb(250,98,18)" fg:x="808" fg:w="35"/><text x="65.0455%" y="319.50">en..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="66.8805%" y="293" width="0.7217%" height="15" fill="rgb(250,34,12)" fg:x="834" fg:w="9"/><text x="67.1305%" y="303.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="66.8805%" y="277" width="0.7217%" height="15" fill="rgb(236,141,30)" fg:x="834" fg:w="9"/><text x="67.1305%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="66.8805%" y="261" width="0.7217%" height="15" fill="rgb(246,134,38)" fg:x="834" fg:w="9"/><text x="67.1305%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="66.8805%" y="245" width="0.7217%" height="15" fill="rgb(240,114,4)" fg:x="834" fg:w="9"/><text x="67.1305%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="66.8805%" y="229" width="0.7217%" height="15" fill="rgb(243,113,39)" fg:x="834" fg:w="9"/><text x="67.1305%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="66.8805%" y="213" width="0.7217%" height="15" fill="rgb(239,215,4)" fg:x="834" fg:w="9"/><text x="67.1305%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.5221%" y="197" width="0.0802%" height="15" fill="rgb(236,229,45)" fg:x="842" fg:w="1"/><text x="67.7721%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5221%" y="181" width="0.0802%" height="15" fill="rgb(242,2,6)" fg:x="842" fg:w="1"/><text x="67.7721%" y="191.50"></text></g><g><title>plugins_core::tools::contained_by (43 samples, 3.45%)</title><rect x="64.3144%" y="373" width="3.4483%" height="15" fill="rgb(239,108,21)" fg:x="802" fg:w="43"/><text x="64.5644%" y="383.50">plu..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.6022%" y="357" width="0.1604%" height="15" fill="rgb(215,168,34)" fg:x="843" fg:w="2"/><text x="67.8522%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8428%" y="293" width="0.0802%" height="15" fill="rgb(238,31,17)" fg:x="846" fg:w="1"/><text x="68.0928%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8428%" y="277" width="0.0802%" height="15" fill="rgb(220,133,11)" fg:x="846" fg:w="1"/><text x="68.0928%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.8428%" y="341" width="0.2406%" height="15" fill="rgb(212,158,23)" fg:x="846" fg:w="3"/><text x="68.0928%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="67.8428%" y="325" width="0.2406%" height="15" fill="rgb(223,172,7)" fg:x="846" fg:w="3"/><text x="68.0928%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.8428%" y="309" width="0.2406%" height="15" fill="rgb(244,3,52)" fg:x="846" fg:w="3"/><text x="68.0928%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.9230%" y="293" width="0.1604%" height="15" fill="rgb(207,69,27)" fg:x="847" fg:w="2"/><text x="68.1730%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.9230%" y="277" width="0.1604%" height="15" fill="rgb(213,136,45)" fg:x="847" fg:w="2"/><text x="68.1730%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.9230%" y="261" width="0.1604%" height="15" fill="rgb(218,79,17)" fg:x="847" fg:w="2"/><text x="68.1730%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.9230%" y="245" width="0.1604%" height="15" fill="rgb(216,106,36)" fg:x="847" fg:w="2"/><text x="68.1730%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.9230%" y="229" width="0.1604%" height="15" fill="rgb(251,27,45)" fg:x="847" fg:w="2"/><text x="68.1730%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="67.9230%" y="213" width="0.1604%" height="15" fill="rgb(232,21,34)" fg:x="847" fg:w="2"/><text x="68.1730%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="67.9230%" y="197" width="0.1604%" height="15" fill="rgb(249,191,16)" fg:x="847" fg:w="2"/><text x="68.1730%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.0834%" y="309" width="0.0802%" height="15" fill="rgb(224,88,20)" fg:x="849" fg:w="1"/><text x="68.3334%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.40%)</title><rect x="68.1636%" y="309" width="0.4010%" height="15" fill="rgb(237,93,27)" fg:x="850" fg:w="5"/><text x="68.4136%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="68.3240%" y="293" width="0.2406%" height="15" fill="rgb(226,198,48)" fg:x="852" fg:w="3"/><text x="68.5740%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="68.4042%" y="277" width="0.1604%" height="15" fill="rgb(207,162,53)" fg:x="853" fg:w="2"/><text x="68.6542%" y="287.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.4042%" y="261" width="0.1604%" height="15" fill="rgb(207,169,9)" fg:x="853" fg:w="2"/><text x="68.6542%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.4042%" y="245" width="0.1604%" height="15" fill="rgb(224,166,46)" fg:x="853" fg:w="2"/><text x="68.6542%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4844%" y="229" width="0.0802%" height="15" fill="rgb(233,26,6)" fg:x="854" fg:w="1"/><text x="68.7344%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4844%" y="213" width="0.0802%" height="15" fill="rgb(218,106,45)" fg:x="854" fg:w="1"/><text x="68.7344%" y="223.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (10 samples, 0.80%)</title><rect x="67.8428%" y="357" width="0.8019%" height="15" fill="rgb(240,217,4)" fg:x="846" fg:w="10"/><text x="68.0928%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="68.0834%" y="341" width="0.5613%" height="15" fill="rgb(246,171,10)" fg:x="849" fg:w="7"/><text x="68.3334%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="68.0834%" y="325" width="0.5613%" height="15" fill="rgb(223,197,30)" fg:x="849" fg:w="7"/><text x="68.3334%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.5646%" y="309" width="0.0802%" height="15" fill="rgb(207,92,16)" fg:x="855" fg:w="1"/><text x="68.8146%" y="319.50"></text></g><g><title>plugins_core::tools::occupied_by (13 samples, 1.04%)</title><rect x="67.7626%" y="373" width="1.0425%" height="15" fill="rgb(211,6,44)" fg:x="845" fg:w="13"/><text x="68.0126%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="68.6447%" y="357" width="0.1604%" height="15" fill="rgb(219,139,2)" fg:x="856" fg:w="2"/><text x="68.8947%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="68.6447%" y="341" width="0.1604%" height="15" fill="rgb(224,103,21)" fg:x="856" fg:w="2"/><text x="68.8947%" y="351.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (1 samples, 0.08%)</title><rect x="68.7249%" y="325" width="0.0802%" height="15" fill="rgb(254,110,48)" fg:x="857" fg:w="1"/><text x="68.9749%" y="335.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (1 samples, 0.08%)</title><rect x="68.7249%" y="309" width="0.0802%" height="15" fill="rgb(212,88,19)" fg:x="857" fg:w="1"/><text x="68.9749%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="68.7249%" y="293" width="0.0802%" height="15" fill="rgb(248,103,6)" fg:x="857" fg:w="1"/><text x="68.9749%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.8051%" y="341" width="0.0802%" height="15" fill="rgb(214,53,46)" fg:x="858" fg:w="1"/><text x="69.0551%" y="351.50"></text></g><g><title>kernel::model::scopes::OpenedScope&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="68.8853%" y="341" width="0.0802%" height="15" fill="rgb(236,190,24)" fg:x="859" fg:w="1"/><text x="69.1353%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (62 samples, 4.97%)</title><rect x="64.1540%" y="389" width="4.9719%" height="15" fill="rgb(254,58,28)" fg:x="800" fg:w="62"/><text x="64.4040%" y="399.50">plugin..</text></g><g><title>plugins_core::tools::worn_by (4 samples, 0.32%)</title><rect x="68.8051%" y="373" width="0.3208%" height="15" fill="rgb(243,63,27)" fg:x="858" fg:w="4"/><text x="69.0551%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="68.8051%" y="357" width="0.3208%" height="15" fill="rgb(206,81,20)" fg:x="858" fg:w="4"/><text x="69.0551%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.9655%" y="341" width="0.1604%" height="15" fill="rgb(252,69,51)" fg:x="860" fg:w="2"/><text x="69.2155%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.9655%" y="325" width="0.1604%" height="15" fill="rgb(222,213,4)" fg:x="860" fg:w="2"/><text x="69.2155%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="68.9655%" y="309" width="0.1604%" height="15" fill="rgb(226,198,12)" fg:x="860" fg:w="2"/><text x="69.2155%" y="319.50"></text></g><g><title>engine::session::logs::capture (118 samples, 9.46%)</title><rect x="59.7434%" y="533" width="9.4627%" height="15" fill="rgb(248,115,11)" fg:x="745" fg:w="118"/><text x="59.9934%" y="543.50">engine::sessio..</text></g><g><title>tracing_core::dispatcher::with_default (107 samples, 8.58%)</title><rect x="60.6255%" y="517" width="8.5806%" height="15" fill="rgb(221,148,54)" fg:x="756" fg:w="107"/><text x="60.8755%" y="527.50">tracing_core..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (107 samples, 8.58%)</title><rect x="60.6255%" y="501" width="8.5806%" height="15" fill="rgb(214,209,51)" fg:x="756" fg:w="107"/><text x="60.8755%" y="511.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::apply_middleware (107 samples, 8.58%)</title><rect x="60.6255%" y="485" width="8.5806%" height="15" fill="rgb(249,116,53)" fg:x="756" fg:w="107"/><text x="60.8755%" y="495.50">kernel::plug..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (107 samples, 8.58%)</title><rect x="60.6255%" y="469" width="8.5806%" height="15" fill="rgb(248,170,1)" fg:x="756" fg:w="107"/><text x="60.8755%" y="479.50">kernel::plug..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (106 samples, 8.50%)</title><rect x="60.7057%" y="453" width="8.5004%" height="15" fill="rgb(244,105,10)" fg:x="757" fg:w="106"/><text x="60.9557%" y="463.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (74 samples, 5.93%)</title><rect x="63.2719%" y="437" width="5.9342%" height="15" fill="rgb(229,100,5)" fg:x="789" fg:w="74"/><text x="63.5219%" y="447.50">kernel::..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (73 samples, 5.85%)</title><rect x="63.3520%" y="421" width="5.8540%" height="15" fill="rgb(233,221,39)" fg:x="790" fg:w="73"/><text x="63.6020%" y="431.50">&lt;plugin..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (65 samples, 5.21%)</title><rect x="63.9936%" y="405" width="5.2125%" height="15" fill="rgb(233,88,21)" fg:x="798" fg:w="65"/><text x="64.2436%" y="415.50">plugin..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="69.1259%" y="389" width="0.0802%" height="15" fill="rgb(206,13,0)" fg:x="862" fg:w="1"/><text x="69.3759%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.1259%" y="373" width="0.0802%" height="15" fill="rgb(242,15,35)" fg:x="862" fg:w="1"/><text x="69.3759%" y="383.50"></text></g><g><title>engine::session::Session::captured (126 samples, 10.10%)</title><rect x="59.1820%" y="549" width="10.1043%" height="15" fill="rgb(247,142,41)" fg:x="738" fg:w="126"/><text x="59.4320%" y="559.50">engine::session..</text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="69.2061%" y="533" width="0.0802%" height="15" fill="rgb(245,51,29)" fg:x="863" fg:w="1"/><text x="69.4561%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.2061%" y="517" width="0.0802%" height="15" fill="rgb(228,209,43)" fg:x="863" fg:w="1"/><text x="69.4561%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3665%" y="453" width="0.0802%" height="15" fill="rgb(233,185,9)" fg:x="865" fg:w="1"/><text x="69.6165%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3665%" y="437" width="0.0802%" height="15" fill="rgb(226,93,0)" fg:x="865" fg:w="1"/><text x="69.6165%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.3665%" y="421" width="0.0802%" height="15" fill="rgb(245,194,43)" fg:x="865" fg:w="1"/><text x="69.6165%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.3665%" y="405" width="0.0802%" height="15" fill="rgb(211,145,34)" fg:x="865" fg:w="1"/><text x="69.6165%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.3665%" y="389" width="0.0802%" height="15" fill="rgb(231,228,28)" fg:x="865" fg:w="1"/><text x="69.6165%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3665%" y="373" width="0.0802%" height="15" fill="rgb(236,149,4)" fg:x="865" fg:w="1"/><text x="69.6165%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3665%" y="357" width="0.0802%" height="15" fill="rgb(234,114,38)" fg:x="865" fg:w="1"/><text x="69.6165%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.3665%" y="341" width="0.0802%" height="15" fill="rgb(246,132,51)" fg:x="865" fg:w="1"/><text x="69.6165%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.3665%" y="325" width="0.0802%" height="15" fill="rgb(251,137,22)" fg:x="865" fg:w="1"/><text x="69.6165%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.3665%" y="309" width="0.0802%" height="15" fill="rgb(243,59,52)" fg:x="865" fg:w="1"/><text x="69.6165%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.3665%" y="293" width="0.0802%" height="15" fill="rgb(239,56,28)" fg:x="865" fg:w="1"/><text x="69.6165%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3665%" y="277" width="0.0802%" height="15" fill="rgb(218,168,27)" fg:x="865" fg:w="1"/><text x="69.6165%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.2863%" y="501" width="0.2406%" height="15" fill="rgb(232,165,11)" fg:x="864" fg:w="3"/><text x="69.5363%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.2863%" y="485" width="0.2406%" height="15" fill="rgb(253,55,41)" fg:x="864" fg:w="3"/><text x="69.5363%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.3665%" y="469" width="0.1604%" height="15" fill="rgb(233,206,24)" fg:x="865" fg:w="2"/><text x="69.6165%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4467%" y="453" width="0.0802%" height="15" fill="rgb(220,199,8)" fg:x="866" fg:w="1"/><text x="69.6967%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4467%" y="437" width="0.0802%" height="15" fill="rgb(254,65,26)" fg:x="866" fg:w="1"/><text x="69.6967%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4467%" y="421" width="0.0802%" height="15" fill="rgb(253,102,23)" fg:x="866" fg:w="1"/><text x="69.6967%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4467%" y="405" width="0.0802%" height="15" fill="rgb(231,103,35)" fg:x="866" fg:w="1"/><text x="69.6967%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.4467%" y="389" width="0.0802%" height="15" fill="rgb(238,26,10)" fg:x="866" fg:w="1"/><text x="69.6967%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.4467%" y="373" width="0.0802%" height="15" fill="rgb(234,191,34)" fg:x="866" fg:w="1"/><text x="69.6967%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.4467%" y="357" width="0.0802%" height="15" fill="rgb(206,210,9)" fg:x="866" fg:w="1"/><text x="69.6967%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4467%" y="341" width="0.0802%" height="15" fill="rgb(219,155,3)" fg:x="866" fg:w="1"/><text x="69.6967%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4467%" y="325" width="0.0802%" height="15" fill="rgb(221,62,52)" fg:x="866" fg:w="1"/><text x="69.6967%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.4467%" y="309" width="0.0802%" height="15" fill="rgb(215,197,36)" fg:x="866" fg:w="1"/><text x="69.6967%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.4467%" y="293" width="0.0802%" height="15" fill="rgb(226,222,6)" fg:x="866" fg:w="1"/><text x="69.6967%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.4467%" y="277" width="0.0802%" height="15" fill="rgb(215,58,28)" fg:x="866" fg:w="1"/><text x="69.6967%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.4467%" y="261" width="0.0802%" height="15" fill="rgb(212,148,2)" fg:x="866" fg:w="1"/><text x="69.6967%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6071%" y="453" width="0.0802%" height="15" fill="rgb(208,21,42)" fg:x="868" fg:w="1"/><text x="69.8571%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6071%" y="437" width="0.0802%" height="15" fill="rgb(209,107,26)" fg:x="868" fg:w="1"/><text x="69.8571%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6071%" y="421" width="0.0802%" height="15" fill="rgb(254,60,47)" fg:x="868" fg:w="1"/><text x="69.8571%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6071%" y="405" width="0.0802%" height="15" fill="rgb(207,226,45)" fg:x="868" fg:w="1"/><text x="69.8571%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6071%" y="389" width="0.0802%" height="15" fill="rgb(223,124,22)" fg:x="868" fg:w="1"/><text x="69.8571%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6071%" y="373" width="0.0802%" height="15" fill="rgb(240,162,13)" fg:x="868" fg:w="1"/><text x="69.8571%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.6071%" y="357" width="0.0802%" height="15" fill="rgb(244,199,31)" fg:x="868" fg:w="1"/><text x="69.8571%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.6071%" y="341" width="0.0802%" height="15" fill="rgb(207,92,16)" fg:x="868" fg:w="1"/><text x="69.8571%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.6071%" y="325" width="0.0802%" height="15" fill="rgb(215,31,19)" fg:x="868" fg:w="1"/><text x="69.8571%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6071%" y="309" width="0.0802%" height="15" fill="rgb(245,118,14)" fg:x="868" fg:w="1"/><text x="69.8571%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6071%" y="293" width="0.0802%" height="15" fill="rgb(248,12,46)" fg:x="868" fg:w="1"/><text x="69.8571%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.6071%" y="277" width="0.0802%" height="15" fill="rgb(209,119,0)" fg:x="868" fg:w="1"/><text x="69.8571%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.6071%" y="261" width="0.0802%" height="15" fill="rgb(254,51,44)" fg:x="868" fg:w="1"/><text x="69.8571%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.6071%" y="245" width="0.0802%" height="15" fill="rgb(253,182,35)" fg:x="868" fg:w="1"/><text x="69.8571%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.6071%" y="229" width="0.0802%" height="15" fill="rgb(205,198,39)" fg:x="868" fg:w="1"/><text x="69.8571%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6071%" y="213" width="0.0802%" height="15" fill="rgb(251,175,48)" fg:x="868" fg:w="1"/><text x="69.8571%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6872%" y="373" width="0.0802%" height="15" fill="rgb(239,38,17)" fg:x="869" fg:w="1"/><text x="69.9372%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6872%" y="357" width="0.0802%" height="15" fill="rgb(212,101,8)" fg:x="869" fg:w="1"/><text x="69.9372%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6872%" y="341" width="0.0802%" height="15" fill="rgb(228,35,17)" fg:x="869" fg:w="1"/><text x="69.9372%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.6872%" y="325" width="0.0802%" height="15" fill="rgb(214,95,8)" fg:x="869" fg:w="1"/><text x="69.9372%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.6872%" y="309" width="0.0802%" height="15" fill="rgb(210,176,35)" fg:x="869" fg:w="1"/><text x="69.9372%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.6872%" y="293" width="0.0802%" height="15" fill="rgb(226,4,3)" fg:x="869" fg:w="1"/><text x="69.9372%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6872%" y="277" width="0.0802%" height="15" fill="rgb(232,133,14)" fg:x="869" fg:w="1"/><text x="69.9372%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6872%" y="261" width="0.0802%" height="15" fill="rgb(250,191,8)" fg:x="869" fg:w="1"/><text x="69.9372%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.6872%" y="245" width="0.0802%" height="15" fill="rgb(213,12,45)" fg:x="869" fg:w="1"/><text x="69.9372%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.6872%" y="229" width="0.0802%" height="15" fill="rgb(233,78,26)" fg:x="869" fg:w="1"/><text x="69.9372%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.6872%" y="213" width="0.0802%" height="15" fill="rgb(245,222,11)" fg:x="869" fg:w="1"/><text x="69.9372%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.6872%" y="197" width="0.0802%" height="15" fill="rgb(216,174,12)" fg:x="869" fg:w="1"/><text x="69.9372%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6872%" y="181" width="0.0802%" height="15" fill="rgb(213,15,9)" fg:x="869" fg:w="1"/><text x="69.9372%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6872%" y="405" width="0.1604%" height="15" fill="rgb(238,103,32)" fg:x="869" fg:w="2"/><text x="69.9372%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6872%" y="389" width="0.1604%" height="15" fill="rgb(245,85,15)" fg:x="869" fg:w="2"/><text x="69.9372%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7674%" y="373" width="0.0802%" height="15" fill="rgb(254,204,5)" fg:x="870" fg:w="1"/><text x="70.0174%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7674%" y="357" width="0.0802%" height="15" fill="rgb(231,178,15)" fg:x="870" fg:w="1"/><text x="70.0174%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.7674%" y="341" width="0.0802%" height="15" fill="rgb(248,151,3)" fg:x="870" fg:w="1"/><text x="70.0174%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.7674%" y="325" width="0.0802%" height="15" fill="rgb(250,139,13)" fg:x="870" fg:w="1"/><text x="70.0174%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.7674%" y="309" width="0.0802%" height="15" fill="rgb(243,107,53)" fg:x="870" fg:w="1"/><text x="70.0174%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7674%" y="293" width="0.0802%" height="15" fill="rgb(232,81,15)" fg:x="870" fg:w="1"/><text x="70.0174%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7674%" y="277" width="0.0802%" height="15" fill="rgb(225,187,48)" fg:x="870" fg:w="1"/><text x="70.0174%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.7674%" y="261" width="0.0802%" height="15" fill="rgb(205,116,12)" fg:x="870" fg:w="1"/><text x="70.0174%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.7674%" y="245" width="0.0802%" height="15" fill="rgb(220,222,31)" fg:x="870" fg:w="1"/><text x="70.0174%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.7674%" y="229" width="0.0802%" height="15" fill="rgb(233,187,49)" fg:x="870" fg:w="1"/><text x="70.0174%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.7674%" y="213" width="0.0802%" height="15" fill="rgb(211,168,53)" fg:x="870" fg:w="1"/><text x="70.0174%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7674%" y="197" width="0.0802%" height="15" fill="rgb(206,160,16)" fg:x="870" fg:w="1"/><text x="70.0174%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.9278%" y="373" width="0.0802%" height="15" fill="rgb(254,164,13)" fg:x="872" fg:w="1"/><text x="70.1778%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="70.0080%" y="357" width="0.1604%" height="15" fill="rgb(229,45,30)" fg:x="873" fg:w="2"/><text x="70.2580%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="70.0080%" y="341" width="0.1604%" height="15" fill="rgb(237,32,10)" fg:x="873" fg:w="2"/><text x="70.2580%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="70.0882%" y="325" width="0.0802%" height="15" fill="rgb(251,20,47)" fg:x="874" fg:w="1"/><text x="70.3382%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="70.1684%" y="325" width="0.0802%" height="15" fill="rgb(251,116,12)" fg:x="875" fg:w="1"/><text x="70.4184%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="69.8476%" y="405" width="0.4812%" height="15" fill="rgb(214,227,27)" fg:x="871" fg:w="6"/><text x="70.0976%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="69.8476%" y="389" width="0.4812%" height="15" fill="rgb(248,10,53)" fg:x="871" fg:w="6"/><text x="70.0976%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="70.0080%" y="373" width="0.3208%" height="15" fill="rgb(221,176,25)" fg:x="873" fg:w="4"/><text x="70.2580%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.1684%" y="357" width="0.1604%" height="15" fill="rgb(205,70,46)" fg:x="875" fg:w="2"/><text x="70.4184%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1684%" y="341" width="0.1604%" height="15" fill="rgb(217,45,38)" fg:x="875" fg:w="2"/><text x="70.4184%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="70.2486%" y="325" width="0.0802%" height="15" fill="rgb(243,6,54)" fg:x="876" fg:w="1"/><text x="70.4986%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.2486%" y="309" width="0.0802%" height="15" fill="rgb(242,76,23)" fg:x="876" fg:w="1"/><text x="70.4986%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.2486%" y="293" width="0.0802%" height="15" fill="rgb(239,166,0)" fg:x="876" fg:w="1"/><text x="70.4986%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.2486%" y="277" width="0.0802%" height="15" fill="rgb(238,174,32)" fg:x="876" fg:w="1"/><text x="70.4986%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="69.6872%" y="453" width="0.8821%" height="15" fill="rgb(238,124,44)" fg:x="869" fg:w="11"/><text x="69.9372%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="69.6872%" y="437" width="0.8821%" height="15" fill="rgb(206,185,9)" fg:x="869" fg:w="11"/><text x="69.9372%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (11 samples, 0.88%)</title><rect x="69.6872%" y="421" width="0.8821%" height="15" fill="rgb(215,157,17)" fg:x="869" fg:w="11"/><text x="69.9372%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.3288%" y="405" width="0.2406%" height="15" fill="rgb(251,17,29)" fg:x="877" fg:w="3"/><text x="70.5788%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.3288%" y="389" width="0.2406%" height="15" fill="rgb(227,113,27)" fg:x="877" fg:w="3"/><text x="70.5788%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="70.4090%" y="373" width="0.1604%" height="15" fill="rgb(217,226,24)" fg:x="878" fg:w="2"/><text x="70.6590%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.4892%" y="357" width="0.0802%" height="15" fill="rgb(251,99,38)" fg:x="879" fg:w="1"/><text x="70.7392%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4892%" y="341" width="0.0802%" height="15" fill="rgb(231,147,19)" fg:x="879" fg:w="1"/><text x="70.7392%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.5694%" y="389" width="0.0802%" height="15" fill="rgb(230,86,8)" fg:x="880" fg:w="1"/><text x="70.8194%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.6496%" y="389" width="0.0802%" height="15" fill="rgb(237,159,39)" fg:x="881" fg:w="1"/><text x="70.8996%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6496%" y="373" width="0.0802%" height="15" fill="rgb(247,179,47)" fg:x="881" fg:w="1"/><text x="70.8996%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="70.5694%" y="421" width="0.4010%" height="15" fill="rgb(253,152,26)" fg:x="880" fg:w="5"/><text x="70.8194%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="70.5694%" y="405" width="0.4010%" height="15" fill="rgb(222,211,15)" fg:x="880" fg:w="5"/><text x="70.8194%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="70.7298%" y="389" width="0.2406%" height="15" fill="rgb(236,193,6)" fg:x="882" fg:w="3"/><text x="70.9798%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="70.8099%" y="373" width="0.1604%" height="15" fill="rgb(226,206,10)" fg:x="883" fg:w="2"/><text x="71.0599%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="70.8099%" y="357" width="0.1604%" height="15" fill="rgb(213,125,22)" fg:x="883" fg:w="2"/><text x="71.0599%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.8099%" y="341" width="0.1604%" height="15" fill="rgb(221,66,28)" fg:x="883" fg:w="2"/><text x="71.0599%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.52%)</title><rect x="69.5269%" y="501" width="1.5237%" height="15" fill="rgb(222,84,53)" fg:x="867" fg:w="19"/><text x="69.7769%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.52%)</title><rect x="69.5269%" y="485" width="1.5237%" height="15" fill="rgb(243,50,15)" fg:x="867" fg:w="19"/><text x="69.7769%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (18 samples, 1.44%)</title><rect x="69.6071%" y="469" width="1.4435%" height="15" fill="rgb(208,184,23)" fg:x="868" fg:w="18"/><text x="69.8571%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="70.5694%" y="453" width="0.4812%" height="15" fill="rgb(221,83,2)" fg:x="880" fg:w="6"/><text x="70.8194%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="70.5694%" y="437" width="0.4812%" height="15" fill="rgb(236,53,24)" fg:x="880" fg:w="6"/><text x="70.8194%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9703%" y="421" width="0.0802%" height="15" fill="rgb(244,171,29)" fg:x="885" fg:w="1"/><text x="71.2203%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.0505%" y="437" width="0.0802%" height="15" fill="rgb(205,19,11)" fg:x="886" fg:w="1"/><text x="71.3005%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.2109%" y="421" width="0.0802%" height="15" fill="rgb(207,108,29)" fg:x="888" fg:w="1"/><text x="71.4609%" y="431.50"></text></g><g><title>engine::session::internal::Added::find_refs (26 samples, 2.09%)</title><rect x="69.2863%" y="533" width="2.0850%" height="15" fill="rgb(236,215,43)" fg:x="864" fg:w="26"/><text x="69.5363%" y="543.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (26 samples, 2.09%)</title><rect x="69.2863%" y="517" width="2.0850%" height="15" fill="rgb(213,58,35)" fg:x="864" fg:w="26"/><text x="69.5363%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="71.0505%" y="501" width="0.3208%" height="15" fill="rgb(220,211,46)" fg:x="886" fg:w="4"/><text x="71.3005%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="71.0505%" y="485" width="0.3208%" height="15" fill="rgb(212,134,16)" fg:x="886" fg:w="4"/><text x="71.3005%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="71.0505%" y="469" width="0.3208%" height="15" fill="rgb(232,90,44)" fg:x="886" fg:w="4"/><text x="71.3005%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="71.0505%" y="453" width="0.3208%" height="15" fill="rgb(212,18,36)" fg:x="886" fg:w="4"/><text x="71.3005%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.1307%" y="437" width="0.2406%" height="15" fill="rgb(206,112,24)" fg:x="887" fg:w="3"/><text x="71.3807%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.2911%" y="421" width="0.0802%" height="15" fill="rgb(238,223,40)" fg:x="889" fg:w="1"/><text x="71.5411%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4515%" y="469" width="0.0802%" height="15" fill="rgb(226,169,20)" fg:x="891" fg:w="1"/><text x="71.7015%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4515%" y="453" width="0.0802%" height="15" fill="rgb(241,64,52)" fg:x="891" fg:w="1"/><text x="71.7015%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4515%" y="437" width="0.0802%" height="15" fill="rgb(228,120,25)" fg:x="891" fg:w="1"/><text x="71.7015%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4515%" y="421" width="0.0802%" height="15" fill="rgb(234,108,19)" fg:x="891" fg:w="1"/><text x="71.7015%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.4515%" y="405" width="0.0802%" height="15" fill="rgb(236,133,29)" fg:x="891" fg:w="1"/><text x="71.7015%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.4515%" y="389" width="0.0802%" height="15" fill="rgb(246,174,53)" fg:x="891" fg:w="1"/><text x="71.7015%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.4515%" y="373" width="0.0802%" height="15" fill="rgb(210,105,35)" fg:x="891" fg:w="1"/><text x="71.7015%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.4515%" y="357" width="0.0802%" height="15" fill="rgb(225,27,26)" fg:x="891" fg:w="1"/><text x="71.7015%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.4515%" y="341" width="0.0802%" height="15" fill="rgb(233,2,39)" fg:x="891" fg:w="1"/><text x="71.7015%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.3713%" y="517" width="0.2406%" height="15" fill="rgb(219,164,26)" fg:x="890" fg:w="3"/><text x="71.6213%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.3713%" y="501" width="0.2406%" height="15" fill="rgb(236,211,5)" fg:x="890" fg:w="3"/><text x="71.6213%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.3713%" y="485" width="0.2406%" height="15" fill="rgb(244,227,23)" fg:x="890" fg:w="3"/><text x="71.6213%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5317%" y="469" width="0.0802%" height="15" fill="rgb(230,184,8)" fg:x="892" fg:w="1"/><text x="71.7817%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5317%" y="453" width="0.0802%" height="15" fill="rgb(217,125,48)" fg:x="892" fg:w="1"/><text x="71.7817%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5317%" y="437" width="0.0802%" height="15" fill="rgb(223,192,47)" fg:x="892" fg:w="1"/><text x="71.7817%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.5317%" y="421" width="0.0802%" height="15" fill="rgb(226,119,10)" fg:x="892" fg:w="1"/><text x="71.7817%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.5317%" y="405" width="0.0802%" height="15" fill="rgb(221,49,29)" fg:x="892" fg:w="1"/><text x="71.7817%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.5317%" y="389" width="0.0802%" height="15" fill="rgb(217,205,19)" fg:x="892" fg:w="1"/><text x="71.7817%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.5317%" y="373" width="0.0802%" height="15" fill="rgb(242,104,7)" fg:x="892" fg:w="1"/><text x="71.7817%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.5317%" y="357" width="0.0802%" height="15" fill="rgb(209,154,48)" fg:x="892" fg:w="1"/><text x="71.7817%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.5317%" y="341" width="0.0802%" height="15" fill="rgb(219,213,46)" fg:x="892" fg:w="1"/><text x="71.7817%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.5317%" y="325" width="0.0802%" height="15" fill="rgb(229,105,38)" fg:x="892" fg:w="1"/><text x="71.7817%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.5317%" y="309" width="0.0802%" height="15" fill="rgb(205,151,5)" fg:x="892" fg:w="1"/><text x="71.7817%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.5317%" y="293" width="0.0802%" height="15" fill="rgb(248,115,40)" fg:x="892" fg:w="1"/><text x="71.7817%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.5317%" y="277" width="0.0802%" height="15" fill="rgb(206,179,2)" fg:x="892" fg:w="1"/><text x="71.7817%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5317%" y="261" width="0.0802%" height="15" fill="rgb(230,103,24)" fg:x="892" fg:w="1"/><text x="71.7817%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="71.8524%" y="309" width="0.0802%" height="15" fill="rgb(218,152,4)" fg:x="896" fg:w="1"/><text x="72.1024%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.8524%" y="293" width="0.0802%" height="15" fill="rgb(236,161,54)" fg:x="896" fg:w="1"/><text x="72.1024%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.8524%" y="277" width="0.0802%" height="15" fill="rgb(226,65,17)" fg:x="896" fg:w="1"/><text x="72.1024%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="71.7723%" y="389" width="0.2406%" height="15" fill="rgb(221,134,44)" fg:x="895" fg:w="3"/><text x="72.0223%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.7723%" y="373" width="0.2406%" height="15" fill="rgb(251,129,4)" fg:x="895" fg:w="3"/><text x="72.0223%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="71.7723%" y="357" width="0.2406%" height="15" fill="rgb(244,32,34)" fg:x="895" fg:w="3"/><text x="72.0223%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="71.7723%" y="341" width="0.2406%" height="15" fill="rgb(251,224,37)" fg:x="895" fg:w="3"/><text x="72.0223%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.8524%" y="325" width="0.1604%" height="15" fill="rgb(248,117,31)" fg:x="896" fg:w="2"/><text x="72.1024%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9326%" y="309" width="0.0802%" height="15" fill="rgb(222,208,37)" fg:x="897" fg:w="1"/><text x="72.1826%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="71.7723%" y="421" width="0.3208%" height="15" fill="rgb(234,211,25)" fg:x="895" fg:w="4"/><text x="72.0223%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="71.7723%" y="405" width="0.3208%" height="15" fill="rgb(211,72,6)" fg:x="895" fg:w="4"/><text x="72.0223%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="72.0128%" y="389" width="0.0802%" height="15" fill="rgb(249,198,38)" fg:x="898" fg:w="1"/><text x="72.2628%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.0128%" y="373" width="0.0802%" height="15" fill="rgb(221,86,51)" fg:x="898" fg:w="1"/><text x="72.2628%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.0128%" y="357" width="0.0802%" height="15" fill="rgb(226,178,43)" fg:x="898" fg:w="1"/><text x="72.2628%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.0128%" y="341" width="0.0802%" height="15" fill="rgb(215,145,7)" fg:x="898" fg:w="1"/><text x="72.2628%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0128%" y="325" width="0.0802%" height="15" fill="rgb(250,202,36)" fg:x="898" fg:w="1"/><text x="72.2628%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0930%" y="373" width="0.0802%" height="15" fill="rgb(215,86,13)" fg:x="899" fg:w="1"/><text x="72.3430%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="72.0930%" y="421" width="0.1604%" height="15" fill="rgb(221,134,12)" fg:x="899" fg:w="2"/><text x="72.3430%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="72.0930%" y="405" width="0.1604%" height="15" fill="rgb(213,82,10)" fg:x="899" fg:w="2"/><text x="72.3430%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="72.0930%" y="389" width="0.1604%" height="15" fill="rgb(214,142,0)" fg:x="899" fg:w="2"/><text x="72.3430%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="72.1732%" y="373" width="0.0802%" height="15" fill="rgb(205,145,9)" fg:x="900" fg:w="1"/><text x="72.4232%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="72.1732%" y="357" width="0.0802%" height="15" fill="rgb(244,214,8)" fg:x="900" fg:w="1"/><text x="72.4232%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.3336%" y="389" width="0.0802%" height="15" fill="rgb(224,72,51)" fg:x="902" fg:w="1"/><text x="72.5836%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="72.4138%" y="373" width="0.0802%" height="15" fill="rgb(233,137,37)" fg:x="903" fg:w="1"/><text x="72.6638%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="72.4138%" y="357" width="0.0802%" height="15" fill="rgb(208,71,28)" fg:x="903" fg:w="1"/><text x="72.6638%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.4138%" y="341" width="0.0802%" height="15" fill="rgb(226,31,7)" fg:x="903" fg:w="1"/><text x="72.6638%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.4138%" y="325" width="0.0802%" height="15" fill="rgb(229,62,18)" fg:x="903" fg:w="1"/><text x="72.6638%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.4138%" y="309" width="0.0802%" height="15" fill="rgb(226,74,28)" fg:x="903" fg:w="1"/><text x="72.6638%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.4940%" y="341" width="0.0802%" height="15" fill="rgb(214,170,18)" fg:x="904" fg:w="1"/><text x="72.7440%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4940%" y="325" width="0.0802%" height="15" fill="rgb(227,229,35)" fg:x="904" fg:w="1"/><text x="72.7440%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::from_value (13 samples, 1.04%)</title><rect x="71.6119%" y="517" width="1.0425%" height="15" fill="rgb(225,181,39)" fg:x="893" fg:w="13"/><text x="71.8619%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.04%)</title><rect x="71.6119%" y="501" width="1.0425%" height="15" fill="rgb(253,124,44)" fg:x="893" fg:w="13"/><text x="71.8619%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="71.6119%" y="485" width="1.0425%" height="15" fill="rgb(220,75,18)" fg:x="893" fg:w="13"/><text x="71.8619%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="71.7723%" y="469" width="0.8821%" height="15" fill="rgb(239,175,43)" fg:x="895" fg:w="11"/><text x="72.0223%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="71.7723%" y="453" width="0.8821%" height="15" fill="rgb(228,112,50)" fg:x="895" fg:w="11"/><text x="72.0223%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.88%)</title><rect x="71.7723%" y="437" width="0.8821%" height="15" fill="rgb(232,105,36)" fg:x="895" fg:w="11"/><text x="72.0223%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="72.2534%" y="421" width="0.4010%" height="15" fill="rgb(227,137,47)" fg:x="901" fg:w="5"/><text x="72.5034%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="72.2534%" y="405" width="0.4010%" height="15" fill="rgb(217,51,9)" fg:x="901" fg:w="5"/><text x="72.5034%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="72.4138%" y="389" width="0.2406%" height="15" fill="rgb(245,117,0)" fg:x="903" fg:w="3"/><text x="72.6638%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.4940%" y="373" width="0.1604%" height="15" fill="rgb(252,52,30)" fg:x="904" fg:w="2"/><text x="72.7440%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.4940%" y="357" width="0.1604%" height="15" fill="rgb(227,85,33)" fg:x="904" fg:w="2"/><text x="72.7440%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="72.5742%" y="341" width="0.0802%" height="15" fill="rgb(220,157,20)" fg:x="905" fg:w="1"/><text x="72.8242%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5742%" y="325" width="0.0802%" height="15" fill="rgb(254,14,34)" fg:x="905" fg:w="1"/><text x="72.8242%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.5742%" y="309" width="0.0802%" height="15" fill="rgb(216,103,41)" fg:x="905" fg:w="1"/><text x="72.8242%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.5742%" y="293" width="0.0802%" height="15" fill="rgb(245,221,9)" fg:x="905" fg:w="1"/><text x="72.8242%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.5742%" y="277" width="0.0802%" height="15" fill="rgb(254,136,47)" fg:x="905" fg:w="1"/><text x="72.8242%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.7346%" y="421" width="0.0802%" height="15" fill="rgb(235,71,46)" fg:x="907" fg:w="1"/><text x="72.9846%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.7346%" y="405" width="0.0802%" height="15" fill="rgb(242,154,29)" fg:x="907" fg:w="1"/><text x="72.9846%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.7346%" y="389" width="0.0802%" height="15" fill="rgb(210,65,31)" fg:x="907" fg:w="1"/><text x="72.9846%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.7346%" y="373" width="0.0802%" height="15" fill="rgb(244,9,50)" fg:x="907" fg:w="1"/><text x="72.9846%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="72.7346%" y="437" width="0.1604%" height="15" fill="rgb(215,141,38)" fg:x="907" fg:w="2"/><text x="72.9846%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.8148%" y="421" width="0.0802%" height="15" fill="rgb(241,129,6)" fg:x="908" fg:w="1"/><text x="73.0648%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8148%" y="405" width="0.0802%" height="15" fill="rgb(253,169,4)" fg:x="908" fg:w="1"/><text x="73.0648%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="72.7346%" y="453" width="0.2406%" height="15" fill="rgb(237,82,36)" fg:x="907" fg:w="3"/><text x="72.9846%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8949%" y="437" width="0.0802%" height="15" fill="rgb(209,171,11)" fg:x="909" fg:w="1"/><text x="73.1449%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (48 samples, 3.85%)</title><rect x="69.2863%" y="549" width="3.8492%" height="15" fill="rgb(242,19,22)" fg:x="864" fg:w="48"/><text x="69.5363%" y="559.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (22 samples, 1.76%)</title><rect x="71.3713%" y="533" width="1.7642%" height="15" fill="rgb(251,122,24)" fg:x="890" fg:w="22"/><text x="71.6213%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="72.6544%" y="517" width="0.4812%" height="15" fill="rgb(226,166,42)" fg:x="906" fg:w="6"/><text x="72.9044%" y="527.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="72.6544%" y="501" width="0.4812%" height="15" fill="rgb(244,101,48)" fg:x="906" fg:w="6"/><text x="72.9044%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="72.7346%" y="485" width="0.4010%" height="15" fill="rgb(227,125,1)" fg:x="907" fg:w="5"/><text x="72.9846%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="72.7346%" y="469" width="0.4010%" height="15" fill="rgb(206,79,43)" fg:x="907" fg:w="5"/><text x="72.9846%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="72.9751%" y="453" width="0.1604%" height="15" fill="rgb(241,109,41)" fg:x="910" fg:w="2"/><text x="73.2251%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.0553%" y="437" width="0.0802%" height="15" fill="rgb(219,73,4)" fg:x="911" fg:w="1"/><text x="73.3053%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.2157%" y="453" width="0.0802%" height="15" fill="rgb(239,25,41)" fg:x="913" fg:w="1"/><text x="73.4657%" y="463.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="73.2157%" y="533" width="0.1604%" height="15" fill="rgb(208,88,46)" fg:x="913" fg:w="2"/><text x="73.4657%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.2157%" y="517" width="0.1604%" height="15" fill="rgb(239,184,9)" fg:x="913" fg:w="2"/><text x="73.4657%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.2157%" y="501" width="0.1604%" height="15" fill="rgb(223,114,13)" fg:x="913" fg:w="2"/><text x="73.4657%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="73.2157%" y="485" width="0.1604%" height="15" fill="rgb(214,28,42)" fg:x="913" fg:w="2"/><text x="73.4657%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.2157%" y="469" width="0.1604%" height="15" fill="rgb(252,32,44)" fg:x="913" fg:w="2"/><text x="73.4657%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.2959%" y="453" width="0.0802%" height="15" fill="rgb(231,159,4)" fg:x="914" fg:w="1"/><text x="73.5459%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.2959%" y="437" width="0.0802%" height="15" fill="rgb(210,35,26)" fg:x="914" fg:w="1"/><text x="73.5459%" y="447.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="73.1355%" y="549" width="0.3208%" height="15" fill="rgb(208,190,37)" fg:x="912" fg:w="4"/><text x="73.3855%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.3761%" y="533" width="0.0802%" height="15" fill="rgb(226,148,22)" fg:x="915" fg:w="1"/><text x="73.6261%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3761%" y="517" width="0.0802%" height="15" fill="rgb(242,153,24)" fg:x="915" fg:w="1"/><text x="73.6261%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.6969%" y="469" width="0.0802%" height="15" fill="rgb(213,133,7)" fg:x="919" fg:w="1"/><text x="73.9469%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.6969%" y="453" width="0.0802%" height="15" fill="rgb(248,206,18)" fg:x="919" fg:w="1"/><text x="73.9469%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.7771%" y="469" width="0.0802%" height="15" fill="rgb(233,157,4)" fg:x="920" fg:w="1"/><text x="74.0271%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.7771%" y="453" width="0.0802%" height="15" fill="rgb(249,179,32)" fg:x="920" fg:w="1"/><text x="74.0271%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.7771%" y="437" width="0.0802%" height="15" fill="rgb(248,69,35)" fg:x="920" fg:w="1"/><text x="74.0271%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.7771%" y="421" width="0.0802%" height="15" fill="rgb(249,158,38)" fg:x="920" fg:w="1"/><text x="74.0271%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.7771%" y="405" width="0.0802%" height="15" fill="rgb(223,18,43)" fg:x="920" fg:w="1"/><text x="74.0271%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.7771%" y="389" width="0.0802%" height="15" fill="rgb(238,42,45)" fg:x="920" fg:w="1"/><text x="74.0271%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.7771%" y="373" width="0.0802%" height="15" fill="rgb(219,65,47)" fg:x="920" fg:w="1"/><text x="74.0271%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.7771%" y="357" width="0.0802%" height="15" fill="rgb(248,153,12)" fg:x="920" fg:w="1"/><text x="74.0271%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.7771%" y="341" width="0.0802%" height="15" fill="rgb(240,118,4)" fg:x="920" fg:w="1"/><text x="74.0271%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.7771%" y="325" width="0.0802%" height="15" fill="rgb(250,96,34)" fg:x="920" fg:w="1"/><text x="74.0271%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.7771%" y="309" width="0.0802%" height="15" fill="rgb(221,15,4)" fg:x="920" fg:w="1"/><text x="74.0271%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7771%" y="293" width="0.0802%" height="15" fill="rgb(217,149,33)" fg:x="920" fg:w="1"/><text x="74.0271%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="73.6969%" y="485" width="0.2406%" height="15" fill="rgb(213,58,29)" fg:x="919" fg:w="3"/><text x="73.9469%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8573%" y="469" width="0.0802%" height="15" fill="rgb(236,218,9)" fg:x="921" fg:w="1"/><text x="74.1073%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="73.5365%" y="501" width="0.4812%" height="15" fill="rgb(248,40,19)" fg:x="917" fg:w="6"/><text x="73.7865%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.9374%" y="485" width="0.0802%" height="15" fill="rgb(212,17,6)" fg:x="922" fg:w="1"/><text x="74.1874%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.9374%" y="469" width="0.0802%" height="15" fill="rgb(206,212,20)" fg:x="922" fg:w="1"/><text x="74.1874%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.9374%" y="453" width="0.0802%" height="15" fill="rgb(229,80,37)" fg:x="922" fg:w="1"/><text x="74.1874%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.9374%" y="437" width="0.0802%" height="15" fill="rgb(253,8,37)" fg:x="922" fg:w="1"/><text x="74.1874%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.9374%" y="421" width="0.0802%" height="15" fill="rgb(215,16,43)" fg:x="922" fg:w="1"/><text x="74.1874%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.9374%" y="405" width="0.0802%" height="15" fill="rgb(236,219,16)" fg:x="922" fg:w="1"/><text x="74.1874%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.9374%" y="389" width="0.0802%" height="15" fill="rgb(251,0,3)" fg:x="922" fg:w="1"/><text x="74.1874%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.9374%" y="373" width="0.0802%" height="15" fill="rgb(207,133,37)" fg:x="922" fg:w="1"/><text x="74.1874%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.9374%" y="357" width="0.0802%" height="15" fill="rgb(250,143,20)" fg:x="922" fg:w="1"/><text x="74.1874%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.9374%" y="341" width="0.0802%" height="15" fill="rgb(242,19,50)" fg:x="922" fg:w="1"/><text x="74.1874%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.9374%" y="325" width="0.0802%" height="15" fill="rgb(206,124,43)" fg:x="922" fg:w="1"/><text x="74.1874%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9374%" y="309" width="0.0802%" height="15" fill="rgb(229,4,38)" fg:x="922" fg:w="1"/><text x="74.1874%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0978%" y="421" width="0.0802%" height="15" fill="rgb(247,220,45)" fg:x="924" fg:w="1"/><text x="74.3478%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="74.0176%" y="501" width="0.4010%" height="15" fill="rgb(247,195,0)" fg:x="923" fg:w="5"/><text x="74.2676%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="74.0176%" y="485" width="0.4010%" height="15" fill="rgb(252,12,19)" fg:x="923" fg:w="5"/><text x="74.2676%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.0176%" y="469" width="0.4010%" height="15" fill="rgb(222,49,50)" fg:x="923" fg:w="5"/><text x="74.2676%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="74.0176%" y="453" width="0.4010%" height="15" fill="rgb(209,157,28)" fg:x="923" fg:w="5"/><text x="74.2676%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.0176%" y="437" width="0.4010%" height="15" fill="rgb(238,174,24)" fg:x="923" fg:w="5"/><text x="74.2676%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.1780%" y="421" width="0.2406%" height="15" fill="rgb(224,17,28)" fg:x="925" fg:w="3"/><text x="74.4280%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1780%" y="405" width="0.2406%" height="15" fill="rgb(249,7,29)" fg:x="925" fg:w="3"/><text x="74.4280%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="74.4186%" y="501" width="0.0802%" height="15" fill="rgb(243,178,4)" fg:x="928" fg:w="1"/><text x="74.6686%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.4186%" y="485" width="0.0802%" height="15" fill="rgb(246,138,35)" fg:x="928" fg:w="1"/><text x="74.6686%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5790%" y="405" width="0.0802%" height="15" fill="rgb(251,85,18)" fg:x="930" fg:w="1"/><text x="74.8290%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5790%" y="389" width="0.0802%" height="15" fill="rgb(254,55,9)" fg:x="930" fg:w="1"/><text x="74.8290%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5790%" y="373" width="0.0802%" height="15" fill="rgb(248,4,50)" fg:x="930" fg:w="1"/><text x="74.8290%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5790%" y="357" width="0.0802%" height="15" fill="rgb(215,208,14)" fg:x="930" fg:w="1"/><text x="74.8290%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5790%" y="341" width="0.0802%" height="15" fill="rgb(218,37,18)" fg:x="930" fg:w="1"/><text x="74.8290%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5790%" y="325" width="0.0802%" height="15" fill="rgb(206,104,13)" fg:x="930" fg:w="1"/><text x="74.8290%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.5790%" y="309" width="0.0802%" height="15" fill="rgb(248,94,22)" fg:x="930" fg:w="1"/><text x="74.8290%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5790%" y="293" width="0.0802%" height="15" fill="rgb(235,42,46)" fg:x="930" fg:w="1"/><text x="74.8290%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6592%" y="373" width="0.0802%" height="15" fill="rgb(220,228,48)" fg:x="931" fg:w="1"/><text x="74.9092%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="74.4988%" y="501" width="0.3208%" height="15" fill="rgb(216,58,12)" fg:x="929" fg:w="4"/><text x="74.7488%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="74.4988%" y="485" width="0.3208%" height="15" fill="rgb(223,97,52)" fg:x="929" fg:w="4"/><text x="74.7488%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="74.4988%" y="469" width="0.3208%" height="15" fill="rgb(208,159,17)" fg:x="929" fg:w="4"/><text x="74.7488%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="74.5790%" y="453" width="0.2406%" height="15" fill="rgb(215,172,9)" fg:x="930" fg:w="3"/><text x="74.8290%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.5790%" y="437" width="0.2406%" height="15" fill="rgb(252,175,30)" fg:x="930" fg:w="3"/><text x="74.8290%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.5790%" y="421" width="0.2406%" height="15" fill="rgb(209,159,10)" fg:x="930" fg:w="3"/><text x="74.8290%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.6592%" y="405" width="0.1604%" height="15" fill="rgb(229,73,51)" fg:x="931" fg:w="2"/><text x="74.9092%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.6592%" y="389" width="0.1604%" height="15" fill="rgb(208,212,43)" fg:x="931" fg:w="2"/><text x="74.9092%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.7394%" y="373" width="0.0802%" height="15" fill="rgb(254,123,53)" fg:x="932" fg:w="1"/><text x="74.9894%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.7394%" y="357" width="0.0802%" height="15" fill="rgb(254,128,49)" fg:x="932" fg:w="1"/><text x="74.9894%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7394%" y="341" width="0.0802%" height="15" fill="rgb(246,16,16)" fg:x="932" fg:w="1"/><text x="74.9894%" y="351.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="74.8196%" y="501" width="0.0802%" height="15" fill="rgb(209,200,1)" fg:x="933" fg:w="1"/><text x="75.0696%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.8196%" y="485" width="0.0802%" height="15" fill="rgb(235,9,3)" fg:x="933" fg:w="1"/><text x="75.0696%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.8196%" y="469" width="0.0802%" height="15" fill="rgb(233,121,54)" fg:x="933" fg:w="1"/><text x="75.0696%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.0601%" y="341" width="0.1604%" height="15" fill="rgb(236,80,25)" fg:x="936" fg:w="2"/><text x="75.3101%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.1403%" y="325" width="0.0802%" height="15" fill="rgb(220,44,24)" fg:x="937" fg:w="1"/><text x="75.3903%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.1403%" y="309" width="0.0802%" height="15" fill="rgb(236,225,16)" fg:x="937" fg:w="1"/><text x="75.3903%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.3007%" y="325" width="0.0802%" height="15" fill="rgb(237,140,0)" fg:x="939" fg:w="1"/><text x="75.5507%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="75.0601%" y="373" width="0.4010%" height="15" fill="rgb(243,225,53)" fg:x="936" fg:w="5"/><text x="75.3101%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.0601%" y="357" width="0.4010%" height="15" fill="rgb(240,140,30)" fg:x="936" fg:w="5"/><text x="75.3101%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="75.2205%" y="341" width="0.2406%" height="15" fill="rgb(217,51,16)" fg:x="938" fg:w="3"/><text x="75.4705%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3809%" y="325" width="0.0802%" height="15" fill="rgb(245,75,50)" fg:x="940" fg:w="1"/><text x="75.6309%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="75.0601%" y="405" width="0.5613%" height="15" fill="rgb(208,174,22)" fg:x="936" fg:w="7"/><text x="75.3101%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="75.0601%" y="389" width="0.5613%" height="15" fill="rgb(219,98,50)" fg:x="936" fg:w="7"/><text x="75.3101%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="75.4611%" y="373" width="0.1604%" height="15" fill="rgb(243,138,3)" fg:x="941" fg:w="2"/><text x="75.7111%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.4611%" y="357" width="0.1604%" height="15" fill="rgb(243,132,26)" fg:x="941" fg:w="2"/><text x="75.7111%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.6215%" y="405" width="0.0802%" height="15" fill="rgb(250,201,8)" fg:x="943" fg:w="1"/><text x="75.8715%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="74.9800%" y="437" width="0.8019%" height="15" fill="rgb(213,91,26)" fg:x="935" fg:w="10"/><text x="75.2300%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="74.9800%" y="421" width="0.8019%" height="15" fill="rgb(229,117,1)" fg:x="935" fg:w="10"/><text x="75.2300%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7017%" y="405" width="0.0802%" height="15" fill="rgb(229,24,6)" fg:x="944" fg:w="1"/><text x="75.9517%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7017%" y="389" width="0.0802%" height="15" fill="rgb(206,69,11)" fg:x="944" fg:w="1"/><text x="75.9517%" y="399.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (210 samples, 16.84%)</title><rect x="59.0217%" y="581" width="16.8404%" height="15" fill="rgb(234,111,34)" fg:x="736" fg:w="210"/><text x="59.2717%" y="591.50">engine::session::Session::..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (210 samples, 16.84%)</title><rect x="59.0217%" y="565" width="16.8404%" height="15" fill="rgb(213,187,51)" fg:x="736" fg:w="210"/><text x="59.2717%" y="575.50">engine::session::Session::..</text></g><g><title>kernel::model::EntityPtrResolver::world (30 samples, 2.41%)</title><rect x="73.4563%" y="549" width="2.4058%" height="15" fill="rgb(207,45,11)" fg:x="916" fg:w="30"/><text x="73.7063%" y="559.50">ke..</text></g><g><title>engine::session::Session::load_entity (30 samples, 2.41%)</title><rect x="73.4563%" y="533" width="2.4058%" height="15" fill="rgb(225,151,47)" fg:x="916" fg:w="30"/><text x="73.7063%" y="543.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.33%)</title><rect x="73.5365%" y="517" width="2.3256%" height="15" fill="rgb(211,226,5)" fg:x="917" fg:w="29"/><text x="73.7865%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="74.8998%" y="501" width="0.9623%" height="15" fill="rgb(214,83,52)" fg:x="934" fg:w="12"/><text x="75.1498%" y="511.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="74.8998%" y="485" width="0.9623%" height="15" fill="rgb(229,49,53)" fg:x="934" fg:w="12"/><text x="75.1498%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="74.8998%" y="469" width="0.9623%" height="15" fill="rgb(246,8,28)" fg:x="934" fg:w="12"/><text x="75.1498%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="74.8998%" y="453" width="0.9623%" height="15" fill="rgb(207,28,41)" fg:x="934" fg:w="12"/><text x="75.1498%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.7819%" y="437" width="0.0802%" height="15" fill="rgb(254,22,25)" fg:x="945" fg:w="1"/><text x="76.0319%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7819%" y="421" width="0.0802%" height="15" fill="rgb(209,120,42)" fg:x="945" fg:w="1"/><text x="76.0319%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (947 samples, 75.94%)</title><rect x="0.0000%" y="629" width="75.9423%" height="15" fill="rgb(216,194,18)" fg:x="0" fg:w="947"/><text x="0.2500%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (947 samples, 75.94%)</title><rect x="0.0000%" y="613" width="75.9423%" height="15" fill="rgb(213,70,17)" fg:x="0" fg:w="947"/><text x="0.2500%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (947 samples, 75.94%)</title><rect x="0.0000%" y="597" width="75.9423%" height="15" fill="rgb(228,66,19)" fg:x="0" fg:w="947"/><text x="0.2500%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="75.8621%" y="581" width="0.0802%" height="15" fill="rgb(236,221,54)" fg:x="946" fg:w="1"/><text x="76.1121%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.8621%" y="565" width="0.0802%" height="15" fill="rgb(207,175,15)" fg:x="946" fg:w="1"/><text x="76.1121%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.0225%" y="565" width="0.0802%" height="15" fill="rgb(234,76,8)" fg:x="948" fg:w="1"/><text x="76.2725%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0225%" y="549" width="0.0802%" height="15" fill="rgb(243,106,0)" fg:x="948" fg:w="1"/><text x="76.2725%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1026%" y="501" width="0.0802%" height="15" fill="rgb(208,48,19)" fg:x="949" fg:w="1"/><text x="76.3526%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="76.1026%" y="565" width="0.1604%" height="15" fill="rgb(251,50,29)" fg:x="949" fg:w="2"/><text x="76.3526%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="76.1026%" y="549" width="0.1604%" height="15" fill="rgb(222,31,49)" fg:x="949" fg:w="2"/><text x="76.3526%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="76.1026%" y="533" width="0.1604%" height="15" fill="rgb(232,33,18)" fg:x="949" fg:w="2"/><text x="76.3526%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.16%)</title><rect x="76.1026%" y="517" width="0.1604%" height="15" fill="rgb(209,1,44)" fg:x="949" fg:w="2"/><text x="76.3526%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="76.1828%" y="501" width="0.0802%" height="15" fill="rgb(211,7,1)" fg:x="950" fg:w="1"/><text x="76.4328%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="76.2630%" y="501" width="0.2406%" height="15" fill="rgb(224,111,27)" fg:x="951" fg:w="3"/><text x="76.5130%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="76.3432%" y="485" width="0.1604%" height="15" fill="rgb(252,195,39)" fg:x="952" fg:w="2"/><text x="76.5932%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="76.3432%" y="469" width="0.1604%" height="15" fill="rgb(237,198,5)" fg:x="952" fg:w="2"/><text x="76.5932%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.3432%" y="453" width="0.1604%" height="15" fill="rgb(232,148,1)" fg:x="952" fg:w="2"/><text x="76.5932%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.3432%" y="437" width="0.1604%" height="15" fill="rgb(249,41,3)" fg:x="952" fg:w="2"/><text x="76.5932%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.4234%" y="421" width="0.0802%" height="15" fill="rgb(215,14,33)" fg:x="953" fg:w="1"/><text x="76.6734%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4234%" y="405" width="0.0802%" height="15" fill="rgb(209,146,24)" fg:x="953" fg:w="1"/><text x="76.6734%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5036%" y="501" width="0.0802%" height="15" fill="rgb(219,51,47)" fg:x="954" fg:w="1"/><text x="76.7536%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.6640%" y="485" width="0.0802%" height="15" fill="rgb(234,217,40)" fg:x="956" fg:w="1"/><text x="76.9140%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6640%" y="469" width="0.0802%" height="15" fill="rgb(228,34,26)" fg:x="956" fg:w="1"/><text x="76.9140%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="76.7442%" y="469" width="0.1604%" height="15" fill="rgb(224,50,29)" fg:x="957" fg:w="2"/><text x="76.9942%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="76.9046%" y="469" width="0.3208%" height="15" fill="rgb(205,79,51)" fg:x="959" fg:w="4"/><text x="77.1546%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1451%" y="453" width="0.0802%" height="15" fill="rgb(218,136,28)" fg:x="962" fg:w="1"/><text x="77.3951%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="76.2630%" y="549" width="1.0425%" height="15" fill="rgb(220,150,10)" fg:x="951" fg:w="13"/><text x="76.5130%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (13 samples, 1.04%)</title><rect x="76.2630%" y="533" width="1.0425%" height="15" fill="rgb(242,158,47)" fg:x="951" fg:w="13"/><text x="76.5130%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="76.2630%" y="517" width="1.0425%" height="15" fill="rgb(209,68,0)" fg:x="951" fg:w="13"/><text x="76.5130%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="76.5838%" y="501" width="0.7217%" height="15" fill="rgb(208,13,41)" fg:x="955" fg:w="9"/><text x="76.8338%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="76.7442%" y="485" width="0.5613%" height="15" fill="rgb(226,201,7)" fg:x="957" fg:w="7"/><text x="76.9942%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.2253%" y="469" width="0.0802%" height="15" fill="rgb(236,103,26)" fg:x="963" fg:w="1"/><text x="77.4753%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.2253%" y="453" width="0.0802%" height="15" fill="rgb(243,162,8)" fg:x="963" fg:w="1"/><text x="77.4753%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.60%)</title><rect x="75.9423%" y="581" width="1.6038%" height="15" fill="rgb(237,225,11)" fg:x="947" fg:w="20"/><text x="76.1923%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (16 samples, 1.28%)</title><rect x="76.2630%" y="565" width="1.2831%" height="15" fill="rgb(247,186,32)" fg:x="951" fg:w="16"/><text x="76.5130%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="77.3055%" y="549" width="0.2406%" height="15" fill="rgb(215,26,28)" fg:x="964" fg:w="3"/><text x="77.5555%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="77.7065%" y="453" width="0.1604%" height="15" fill="rgb(208,121,6)" fg:x="969" fg:w="2"/><text x="77.9565%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="77.7867%" y="437" width="0.0802%" height="15" fill="rgb(225,91,3)" fg:x="970" fg:w="1"/><text x="78.0367%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="77.7867%" y="421" width="0.0802%" height="15" fill="rgb(246,119,36)" fg:x="970" fg:w="1"/><text x="78.0367%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.7867%" y="405" width="0.0802%" height="15" fill="rgb(254,173,2)" fg:x="970" fg:w="1"/><text x="78.0367%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7867%" y="389" width="0.0802%" height="15" fill="rgb(209,87,54)" fg:x="970" fg:w="1"/><text x="78.0367%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="77.7065%" y="485" width="0.2406%" height="15" fill="rgb(223,216,20)" fg:x="969" fg:w="3"/><text x="77.9565%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="77.7065%" y="469" width="0.2406%" height="15" fill="rgb(220,31,8)" fg:x="969" fg:w="3"/><text x="77.9565%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="77.8669%" y="453" width="0.0802%" height="15" fill="rgb(220,185,15)" fg:x="971" fg:w="1"/><text x="78.1169%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="77.8669%" y="437" width="0.0802%" height="15" fill="rgb(247,190,50)" fg:x="971" fg:w="1"/><text x="78.1169%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.8669%" y="421" width="0.0802%" height="15" fill="rgb(239,173,47)" fg:x="971" fg:w="1"/><text x="78.1169%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8669%" y="405" width="0.0802%" height="15" fill="rgb(218,190,42)" fg:x="971" fg:w="1"/><text x="78.1169%" y="415.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="77.9471%" y="485" width="0.1604%" height="15" fill="rgb(251,207,16)" fg:x="972" fg:w="2"/><text x="78.1971%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="77.9471%" y="469" width="0.1604%" height="15" fill="rgb(222,199,47)" fg:x="972" fg:w="2"/><text x="78.1971%" y="479.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="77.9471%" y="453" width="0.1604%" height="15" fill="rgb(245,190,7)" fg:x="972" fg:w="2"/><text x="78.1971%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.0273%" y="437" width="0.0802%" height="15" fill="rgb(239,85,38)" fg:x="973" fg:w="1"/><text x="78.2773%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.0273%" y="421" width="0.0802%" height="15" fill="rgb(229,69,51)" fg:x="973" fg:w="1"/><text x="78.2773%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.0273%" y="405" width="0.0802%" height="15" fill="rgb(231,104,51)" fg:x="973" fg:w="1"/><text x="78.2773%" y="415.50"></text></g><g><title>&lt;replies::TaggedJson as kernel::plugins::HasArgumentType&gt;::argument_type (1 samples, 0.08%)</title><rect x="78.1075%" y="437" width="0.0802%" height="15" fill="rgb(235,49,4)" fg:x="974" fg:w="1"/><text x="78.3575%" y="447.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="78.1075%" y="485" width="0.1604%" height="15" fill="rgb(246,166,20)" fg:x="974" fg:w="2"/><text x="78.3575%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="78.1075%" y="469" width="0.1604%" height="15" fill="rgb(230,119,37)" fg:x="974" fg:w="2"/><text x="78.3575%" y="479.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="78.1075%" y="453" width="0.1604%" height="15" fill="rgb(234,77,34)" fg:x="974" fg:w="2"/><text x="78.3575%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="78.1877%" y="437" width="0.0802%" height="15" fill="rgb(211,222,33)" fg:x="975" fg:w="1"/><text x="78.4377%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="78.1877%" y="421" width="0.0802%" height="15" fill="rgb(226,45,42)" fg:x="975" fg:w="1"/><text x="78.4377%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.1877%" y="405" width="0.0802%" height="15" fill="rgb(215,174,28)" fg:x="975" fg:w="1"/><text x="78.4377%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.2678%" y="485" width="0.0802%" height="15" fill="rgb(254,173,49)" fg:x="976" fg:w="1"/><text x="78.5178%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="78.3480%" y="485" width="0.0802%" height="15" fill="rgb(229,191,6)" fg:x="977" fg:w="1"/><text x="78.5980%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (11 samples, 0.88%)</title><rect x="77.6263%" y="501" width="0.8821%" height="15" fill="rgb(212,145,22)" fg:x="968" fg:w="11"/><text x="77.8763%" y="511.50"></text></g><g><title>kernel::plugins::Plugin::schema (1 samples, 0.08%)</title><rect x="78.4282%" y="485" width="0.0802%" height="15" fill="rgb(226,6,51)" fg:x="978" fg:w="1"/><text x="78.6782%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (1 samples, 0.08%)</title><rect x="78.5084%" y="501" width="0.0802%" height="15" fill="rgb(227,128,8)" fg:x="979" fg:w="1"/><text x="78.7584%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="78.5084%" y="485" width="0.0802%" height="15" fill="rgb(205,24,10)" fg:x="979" fg:w="1"/><text x="78.7584%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="78.5084%" y="469" width="0.0802%" height="15" fill="rgb(217,147,27)" fg:x="979" fg:w="1"/><text x="78.7584%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="78.5084%" y="453" width="0.0802%" height="15" fill="rgb(250,82,42)" fg:x="979" fg:w="1"/><text x="78.7584%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="78.5084%" y="437" width="0.0802%" height="15" fill="rgb(248,93,17)" fg:x="979" fg:w="1"/><text x="78.7584%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="78.5084%" y="421" width="0.0802%" height="15" fill="rgb(254,212,40)" fg:x="979" fg:w="1"/><text x="78.7584%" y="431.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="78.5084%" y="405" width="0.0802%" height="15" fill="rgb(229,209,2)" fg:x="979" fg:w="1"/><text x="78.7584%" y="415.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.08%)</title><rect x="78.5084%" y="389" width="0.0802%" height="15" fill="rgb(211,50,43)" fg:x="979" fg:w="1"/><text x="78.7584%" y="399.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="78.5084%" y="373" width="0.0802%" height="15" fill="rgb(245,196,29)" fg:x="979" fg:w="1"/><text x="78.7584%" y="383.50"></text></g><g><title>__errno_location (1 samples, 0.08%)</title><rect x="78.5084%" y="357" width="0.0802%" height="15" fill="rgb(216,132,13)" fg:x="979" fg:w="1"/><text x="78.7584%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5886%" y="453" width="0.0802%" height="15" fill="rgb(251,108,21)" fg:x="980" fg:w="1"/><text x="78.8386%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5886%" y="437" width="0.0802%" height="15" fill="rgb(229,174,54)" fg:x="980" fg:w="1"/><text x="78.8386%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.5886%" y="421" width="0.0802%" height="15" fill="rgb(211,175,47)" fg:x="980" fg:w="1"/><text x="78.8386%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.5886%" y="405" width="0.0802%" height="15" fill="rgb(234,5,37)" fg:x="980" fg:w="1"/><text x="78.8386%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.5886%" y="389" width="0.0802%" height="15" fill="rgb(244,150,43)" fg:x="980" fg:w="1"/><text x="78.8386%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5886%" y="373" width="0.0802%" height="15" fill="rgb(242,172,38)" fg:x="980" fg:w="1"/><text x="78.8386%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5886%" y="357" width="0.0802%" height="15" fill="rgb(205,27,8)" fg:x="980" fg:w="1"/><text x="78.8386%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.5886%" y="341" width="0.0802%" height="15" fill="rgb(217,57,3)" fg:x="980" fg:w="1"/><text x="78.8386%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.5886%" y="325" width="0.0802%" height="15" fill="rgb(242,21,38)" fg:x="980" fg:w="1"/><text x="78.8386%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.5886%" y="309" width="0.0802%" height="15" fill="rgb(209,64,43)" fg:x="980" fg:w="1"/><text x="78.8386%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.5886%" y="293" width="0.0802%" height="15" fill="rgb(222,2,46)" fg:x="980" fg:w="1"/><text x="78.8386%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="78.9094%" y="437" width="0.1604%" height="15" fill="rgb(218,19,44)" fg:x="984" fg:w="2"/><text x="79.1594%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="78.9094%" y="421" width="0.1604%" height="15" fill="rgb(240,203,42)" fg:x="984" fg:w="2"/><text x="79.1594%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="78.9094%" y="405" width="0.1604%" height="15" fill="rgb(229,23,45)" fg:x="984" fg:w="2"/><text x="79.1594%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="78.9094%" y="389" width="0.1604%" height="15" fill="rgb(205,228,51)" fg:x="984" fg:w="2"/><text x="79.1594%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="78.9094%" y="373" width="0.1604%" height="15" fill="rgb(239,36,20)" fg:x="984" fg:w="2"/><text x="79.1594%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="78.9094%" y="357" width="0.1604%" height="15" fill="rgb(248,172,27)" fg:x="984" fg:w="2"/><text x="79.1594%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="78.9094%" y="341" width="0.1604%" height="15" fill="rgb(244,55,32)" fg:x="984" fg:w="2"/><text x="79.1594%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="78.9094%" y="325" width="0.1604%" height="15" fill="rgb(215,97,16)" fg:x="984" fg:w="2"/><text x="79.1594%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="78.9094%" y="309" width="0.1604%" height="15" fill="rgb(224,80,29)" fg:x="984" fg:w="2"/><text x="79.1594%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="78.9094%" y="293" width="0.1604%" height="15" fill="rgb(216,93,47)" fg:x="984" fg:w="2"/><text x="79.1594%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="78.9094%" y="277" width="0.1604%" height="15" fill="rgb(238,159,10)" fg:x="984" fg:w="2"/><text x="79.1594%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="78.9094%" y="261" width="0.1604%" height="15" fill="rgb(223,98,29)" fg:x="984" fg:w="2"/><text x="79.1594%" y="271.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (7 samples, 0.56%)</title><rect x="78.5886%" y="485" width="0.5613%" height="15" fill="rgb(210,176,23)" fg:x="980" fg:w="7"/><text x="78.8386%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="78.5886%" y="469" width="0.5613%" height="15" fill="rgb(242,162,27)" fg:x="980" fg:w="7"/><text x="78.8386%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="78.6688%" y="453" width="0.4812%" height="15" fill="rgb(245,109,32)" fg:x="981" fg:w="6"/><text x="78.9188%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.0698%" y="437" width="0.0802%" height="15" fill="rgb(248,87,8)" fg:x="986" fg:w="1"/><text x="79.3198%" y="447.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="79.1500%" y="469" width="0.2406%" height="15" fill="rgb(250,160,50)" fg:x="987" fg:w="3"/><text x="79.4000%" y="479.50"></text></g><g><title>glob::fill_todo (3 samples, 0.24%)</title><rect x="79.1500%" y="453" width="0.2406%" height="15" fill="rgb(246,165,25)" fg:x="987" fg:w="3"/><text x="79.4000%" y="463.50"></text></g><g><title>glob::is_dir (2 samples, 0.16%)</title><rect x="79.2302%" y="437" width="0.1604%" height="15" fill="rgb(249,219,3)" fg:x="988" fg:w="2"/><text x="79.4802%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="79.2302%" y="421" width="0.1604%" height="15" fill="rgb(226,66,5)" fg:x="988" fg:w="2"/><text x="79.4802%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="79.2302%" y="405" width="0.1604%" height="15" fill="rgb(250,220,43)" fg:x="988" fg:w="2"/><text x="79.4802%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="79.2302%" y="389" width="0.1604%" height="15" fill="rgb(225,111,31)" fg:x="988" fg:w="2"/><text x="79.4802%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="79.2302%" y="373" width="0.1604%" height="15" fill="rgb(248,106,18)" fg:x="988" fg:w="2"/><text x="79.4802%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="79.2302%" y="357" width="0.1604%" height="15" fill="rgb(220,226,45)" fg:x="988" fg:w="2"/><text x="79.4802%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.16%)</title><rect x="79.2302%" y="341" width="0.1604%" height="15" fill="rgb(208,58,53)" fg:x="988" fg:w="2"/><text x="79.4802%" y="351.50"></text></g><g><title>statx (2 samples, 0.16%)</title><rect x="79.2302%" y="325" width="0.1604%" height="15" fill="rgb(209,133,1)" fg:x="988" fg:w="2"/><text x="79.4802%" y="335.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.88%)</title><rect x="78.5886%" y="501" width="0.8821%" height="15" fill="rgb(228,216,27)" fg:x="980" fg:w="11"/><text x="78.8386%" y="511.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (4 samples, 0.32%)</title><rect x="79.1500%" y="485" width="0.3208%" height="15" fill="rgb(238,155,2)" fg:x="987" fg:w="4"/><text x="79.4000%" y="495.50"></text></g><g><title>glob::glob (1 samples, 0.08%)</title><rect x="79.3905%" y="469" width="0.0802%" height="15" fill="rgb(244,99,37)" fg:x="990" fg:w="1"/><text x="79.6405%" y="479.50"></text></g><g><title>glob::glob_with (1 samples, 0.08%)</title><rect x="79.3905%" y="453" width="0.0802%" height="15" fill="rgb(254,32,3)" fg:x="990" fg:w="1"/><text x="79.6405%" y="463.50"></text></g><g><title>glob::Pattern::new (1 samples, 0.08%)</title><rect x="79.3905%" y="437" width="0.0802%" height="15" fill="rgb(234,46,50)" fg:x="990" fg:w="1"/><text x="79.6405%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.3905%" y="421" width="0.0802%" height="15" fill="rgb(232,118,51)" fg:x="990" fg:w="1"/><text x="79.6405%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.3905%" y="405" width="0.0802%" height="15" fill="rgb(207,24,32)" fg:x="990" fg:w="1"/><text x="79.6405%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.3905%" y="389" width="0.0802%" height="15" fill="rgb(208,107,43)" fg:x="990" fg:w="1"/><text x="79.6405%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.3905%" y="373" width="0.0802%" height="15" fill="rgb(231,28,9)" fg:x="990" fg:w="1"/><text x="79.6405%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5509%" y="485" width="0.0802%" height="15" fill="rgb(241,204,15)" fg:x="992" fg:w="1"/><text x="79.8009%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (4 samples, 0.32%)</title><rect x="79.4707%" y="501" width="0.3208%" height="15" fill="rgb(214,54,15)" fg:x="991" fg:w="4"/><text x="79.7207%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.16%)</title><rect x="79.6311%" y="485" width="0.1604%" height="15" fill="rgb(230,12,28)" fg:x="993" fg:w="2"/><text x="79.8811%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7113%" y="469" width="0.0802%" height="15" fill="rgb(221,171,5)" fg:x="994" fg:w="1"/><text x="79.9613%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (29 samples, 2.33%)</title><rect x="77.5461%" y="517" width="2.3256%" height="15" fill="rgb(207,72,25)" fg:x="967" fg:w="29"/><text x="77.7961%" y="527.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="79.7915%" y="501" width="0.0802%" height="15" fill="rgb(249,79,37)" fg:x="995" fg:w="1"/><text x="80.0415%" y="511.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="79.7915%" y="485" width="0.0802%" height="15" fill="rgb(209,98,49)" fg:x="995" fg:w="1"/><text x="80.0415%" y="495.50"></text></g><g><title>engine::session::Session::initialize (30 samples, 2.41%)</title><rect x="77.5461%" y="533" width="2.4058%" height="15" fill="rgb(221,62,13)" fg:x="967" fg:w="30"/><text x="77.7961%" y="543.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="79.8717%" y="517" width="0.0802%" height="15" fill="rgb(223,39,6)" fg:x="996" fg:w="1"/><text x="80.1217%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.8717%" y="501" width="0.0802%" height="15" fill="rgb(246,163,20)" fg:x="996" fg:w="1"/><text x="80.1217%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.8717%" y="485" width="0.0802%" height="15" fill="rgb(211,111,29)" fg:x="996" fg:w="1"/><text x="80.1217%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.8717%" y="469" width="0.0802%" height="15" fill="rgb(243,118,5)" fg:x="996" fg:w="1"/><text x="80.1217%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (33 samples, 2.65%)</title><rect x="77.5461%" y="581" width="2.6464%" height="15" fill="rgb(240,144,52)" fg:x="967" fg:w="33"/><text x="77.7961%" y="591.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (33 samples, 2.65%)</title><rect x="77.5461%" y="565" width="2.6464%" height="15" fill="rgb(244,158,36)" fg:x="967" fg:w="33"/><text x="77.7961%" y="575.50">en..</text></g><g><title>engine::session::Session::new (33 samples, 2.65%)</title><rect x="77.5461%" y="549" width="2.6464%" height="15" fill="rgb(241,109,37)" fg:x="967" fg:w="33"/><text x="77.7961%" y="559.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="79.9519%" y="533" width="0.2406%" height="15" fill="rgb(213,95,32)" fg:x="997" fg:w="3"/><text x="80.2019%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="79.9519%" y="517" width="0.2406%" height="15" fill="rgb(252,193,9)" fg:x="997" fg:w="3"/><text x="80.2019%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="80.0321%" y="501" width="0.1604%" height="15" fill="rgb(225,213,21)" fg:x="998" fg:w="2"/><text x="80.2821%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.1123%" y="485" width="0.0802%" height="15" fill="rgb(220,172,46)" fg:x="999" fg:w="1"/><text x="80.3623%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.1123%" y="469" width="0.0802%" height="15" fill="rgb(235,75,41)" fg:x="999" fg:w="1"/><text x="80.3623%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.08%)</title><rect x="80.1925%" y="565" width="0.0802%" height="15" fill="rgb(213,86,9)" fg:x="1000" fg:w="1"/><text x="80.4425%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1925%" y="549" width="0.0802%" height="15" fill="rgb(238,127,51)" fg:x="1000" fg:w="1"/><text x="80.4425%" y="559.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.2727%" y="549" width="0.0802%" height="15" fill="rgb(215,2,54)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.3528%" y="453" width="0.0802%" height="15" fill="rgb(245,80,6)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3528%" y="437" width="0.0802%" height="15" fill="rgb(233,106,42)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.3528%" y="421" width="0.0802%" height="15" fill="rgb(244,86,38)" fg:x="1002" fg:w="1"/><text x="80.6028%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.4330%" y="437" width="0.0802%" height="15" fill="rgb(242,167,7)" fg:x="1003" fg:w="1"/><text x="80.6830%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.5132%" y="437" width="0.0802%" height="15" fill="rgb(218,216,3)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.5132%" y="421" width="0.0802%" height="15" fill="rgb(206,136,36)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.5132%" y="405" width="0.0802%" height="15" fill="rgb(206,206,15)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.5132%" y="389" width="0.0802%" height="15" fill="rgb(207,163,34)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="80.5934%" y="421" width="0.1604%" height="15" fill="rgb(240,127,22)" fg:x="1005" fg:w="2"/><text x="80.8434%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.5934%" y="405" width="0.1604%" height="15" fill="rgb(227,49,5)" fg:x="1005" fg:w="2"/><text x="80.8434%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.5934%" y="389" width="0.1604%" height="15" fill="rgb(231,8,6)" fg:x="1005" fg:w="2"/><text x="80.8434%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.5934%" y="373" width="0.1604%" height="15" fill="rgb(223,21,24)" fg:x="1005" fg:w="2"/><text x="80.8434%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.5934%" y="357" width="0.1604%" height="15" fill="rgb(244,44,52)" fg:x="1005" fg:w="2"/><text x="80.8434%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="80.5934%" y="341" width="0.1604%" height="15" fill="rgb(207,73,28)" fg:x="1005" fg:w="2"/><text x="80.8434%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.6736%" y="325" width="0.0802%" height="15" fill="rgb(234,215,10)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7538%" y="421" width="0.0802%" height="15" fill="rgb(236,85,3)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7538%" y="405" width="0.0802%" height="15" fill="rgb(236,102,39)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7538%" y="389" width="0.0802%" height="15" fill="rgb(243,50,8)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7538%" y="373" width="0.0802%" height="15" fill="rgb(207,111,4)" fg:x="1007" fg:w="1"/><text x="81.0038%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.5934%" y="437" width="0.3208%" height="15" fill="rgb(230,52,42)" fg:x="1005" fg:w="4"/><text x="80.8434%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8340%" y="421" width="0.0802%" height="15" fill="rgb(252,178,50)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8340%" y="405" width="0.0802%" height="15" fill="rgb(234,46,35)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8340%" y="389" width="0.0802%" height="15" fill="rgb(228,69,37)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="80.4330%" y="453" width="0.5613%" height="15" fill="rgb(221,21,11)" fg:x="1003" fg:w="7"/><text x="80.6830%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9142%" y="437" width="0.0802%" height="15" fill="rgb(223,56,9)" fg:x="1009" fg:w="1"/><text x="81.1642%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.72%)</title><rect x="80.3528%" y="469" width="0.7217%" height="15" fill="rgb(234,30,19)" fg:x="1002" fg:w="9"/><text x="80.6028%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9944%" y="453" width="0.0802%" height="15" fill="rgb(211,64,54)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9944%" y="437" width="0.0802%" height="15" fill="rgb(250,189,5)" fg:x="1010" fg:w="1"/><text x="81.2444%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.0746%" y="437" width="0.0802%" height="15" fill="rgb(214,180,13)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.1548%" y="437" width="0.0802%" height="15" fill="rgb(238,40,40)" fg:x="1012" fg:w="1"/><text x="81.4048%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="81.3953%" y="389" width="0.0802%" height="15" fill="rgb(214,101,38)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.3953%" y="373" width="0.0802%" height="15" fill="rgb(242,65,53)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3953%" y="357" width="0.0802%" height="15" fill="rgb(230,22,45)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3953%" y="341" width="0.0802%" height="15" fill="rgb(223,77,1)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="81.0746%" y="469" width="0.4812%" height="15" fill="rgb(227,33,37)" fg:x="1011" fg:w="6"/><text x="81.3246%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="81.0746%" y="453" width="0.4812%" height="15" fill="rgb(224,148,39)" fg:x="1011" fg:w="6"/><text x="81.3246%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="81.2350%" y="437" width="0.3208%" height="15" fill="rgb(232,212,39)" fg:x="1013" fg:w="4"/><text x="81.4850%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3953%" y="421" width="0.1604%" height="15" fill="rgb(251,172,7)" fg:x="1015" fg:w="2"/><text x="81.6453%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3953%" y="405" width="0.1604%" height="15" fill="rgb(219,39,9)" fg:x="1015" fg:w="2"/><text x="81.6453%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.4755%" y="389" width="0.0802%" height="15" fill="rgb(228,118,14)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4755%" y="373" width="0.0802%" height="15" fill="rgb(207,140,10)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="81.5557%" y="453" width="0.0802%" height="15" fill="rgb(227,111,53)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="81.5557%" y="437" width="0.0802%" height="15" fill="rgb(216,165,16)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.5557%" y="421" width="0.0802%" height="15" fill="rgb(226,111,18)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5557%" y="405" width="0.0802%" height="15" fill="rgb(251,27,17)" fg:x="1017" fg:w="1"/><text x="81.8057%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6359%" y="421" width="0.0802%" height="15" fill="rgb(254,69,9)" fg:x="1018" fg:w="1"/><text x="81.8859%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7963%" y="373" width="0.0802%" height="15" fill="rgb(234,140,37)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7963%" y="357" width="0.0802%" height="15" fill="rgb(220,93,8)" fg:x="1020" fg:w="1"/><text x="82.0463%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.8765%" y="277" width="0.0802%" height="15" fill="rgb(236,113,3)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="81.8765%" y="373" width="0.1604%" height="15" fill="rgb(234,108,23)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.8765%" y="357" width="0.1604%" height="15" fill="rgb(205,114,34)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.8765%" y="341" width="0.1604%" height="15" fill="rgb(236,200,45)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.8765%" y="325" width="0.1604%" height="15" fill="rgb(227,194,29)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.8765%" y="309" width="0.1604%" height="15" fill="rgb(250,76,42)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.8765%" y="293" width="0.1604%" height="15" fill="rgb(208,128,8)" fg:x="1021" fg:w="2"/><text x="82.1265%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.9567%" y="277" width="0.0802%" height="15" fill="rgb(229,209,35)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9567%" y="261" width="0.0802%" height="15" fill="rgb(215,39,53)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9567%" y="245" width="0.0802%" height="15" fill="rgb(219,123,41)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.1973%" y="341" width="0.1604%" height="15" fill="rgb(212,158,18)" fg:x="1025" fg:w="2"/><text x="82.4473%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2775%" y="325" width="0.0802%" height="15" fill="rgb(234,196,53)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="82.1973%" y="357" width="0.2406%" height="15" fill="rgb(210,139,12)" fg:x="1025" fg:w="3"/><text x="82.4473%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3577%" y="341" width="0.0802%" height="15" fill="rgb(220,116,54)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3577%" y="325" width="0.0802%" height="15" fill="rgb(247,103,28)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="81.7161%" y="389" width="0.8019%" height="15" fill="rgb(253,156,45)" fg:x="1019" fg:w="10"/><text x="81.9661%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="82.0369%" y="373" width="0.4812%" height="15" fill="rgb(237,157,52)" fg:x="1023" fg:w="6"/><text x="82.2869%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4379%" y="357" width="0.0802%" height="15" fill="rgb(253,112,16)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="367.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.33%)</title><rect x="80.2727%" y="565" width="2.3256%" height="15" fill="rgb(234,70,18)" fg:x="1001" fg:w="29"/><text x="80.5227%" y="575.50">e..</text></g><g><title>engine::session::state::State::close (28 samples, 2.25%)</title><rect x="80.3528%" y="549" width="2.2454%" height="15" fill="rgb(247,138,19)" fg:x="1002" fg:w="28"/><text x="80.6028%" y="559.50">e..</text></g><g><title>engine::session::state::State::flush_entities (28 samples, 2.25%)</title><rect x="80.3528%" y="533" width="2.2454%" height="15" fill="rgb(207,171,1)" fg:x="1002" fg:w="28"/><text x="80.6028%" y="543.50">e..</text></g><g><title>core::iter::adapters::try_process (28 samples, 2.25%)</title><rect x="80.3528%" y="517" width="2.2454%" height="15" fill="rgb(239,213,3)" fg:x="1002" fg:w="28"/><text x="80.6028%" y="527.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.25%)</title><rect x="80.3528%" y="501" width="2.2454%" height="15" fill="rgb(226,112,4)" fg:x="1002" fg:w="28"/><text x="80.6028%" y="511.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (28 samples, 2.25%)</title><rect x="80.3528%" y="485" width="2.2454%" height="15" fill="rgb(252,170,12)" fg:x="1002" fg:w="28"/><text x="80.6028%" y="495.50">e..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.04%)</title><rect x="81.5557%" y="469" width="1.0425%" height="15" fill="rgb(241,106,13)" fg:x="1017" fg:w="13"/><text x="81.8057%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="81.6359%" y="453" width="0.9623%" height="15" fill="rgb(225,73,23)" fg:x="1018" fg:w="12"/><text x="81.8859%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="81.6359%" y="437" width="0.9623%" height="15" fill="rgb(251,227,29)" fg:x="1018" fg:w="12"/><text x="81.8859%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="81.7161%" y="421" width="0.8821%" height="15" fill="rgb(237,144,13)" fg:x="1019" fg:w="11"/><text x="81.9661%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="81.7161%" y="405" width="0.8821%" height="15" fill="rgb(232,106,46)" fg:x="1019" fg:w="11"/><text x="81.9661%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.5180%" y="389" width="0.0802%" height="15" fill="rgb(245,154,53)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5180%" y="373" width="0.0802%" height="15" fill="rgb(212,119,47)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="82.5982%" y="517" width="0.0802%" height="15" fill="rgb(253,135,25)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.5982%" y="501" width="0.0802%" height="15" fill="rgb(253,208,39)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.5982%" y="485" width="0.0802%" height="15" fill="rgb(226,64,12)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="82.5982%" y="533" width="0.1604%" height="15" fill="rgb(214,162,37)" fg:x="1030" fg:w="2"/><text x="82.8482%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.6784%" y="517" width="0.0802%" height="15" fill="rgb(250,104,5)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6784%" y="501" width="0.0802%" height="15" fill="rgb(220,202,50)" fg:x="1031" fg:w="1"/><text x="82.9284%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="82.5982%" y="565" width="0.2406%" height="15" fill="rgb(248,67,38)" fg:x="1030" fg:w="3"/><text x="82.8482%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="82.5982%" y="549" width="0.2406%" height="15" fill="rgb(242,94,35)" fg:x="1030" fg:w="3"/><text x="82.8482%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.7586%" y="533" width="0.0802%" height="15" fill="rgb(209,78,37)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.7586%" y="517" width="0.0802%" height="15" fill="rgb(230,126,47)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.7586%" y="501" width="0.0802%" height="15" fill="rgb(222,110,35)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="82.7586%" y="485" width="0.0802%" height="15" fill="rgb(233,154,20)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.7586%" y="469" width="0.0802%" height="15" fill="rgb(223,53,50)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7586%" y="453" width="0.0802%" height="15" fill="rgb(251,27,26)" fg:x="1032" fg:w="1"/><text x="83.0086%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="82.8388%" y="501" width="0.0802%" height="15" fill="rgb(223,189,16)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.8388%" y="485" width="0.0802%" height="15" fill="rgb(207,5,54)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.8388%" y="469" width="0.0802%" height="15" fill="rgb(254,124,50)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8388%" y="453" width="0.0802%" height="15" fill="rgb(253,193,24)" fg:x="1033" fg:w="1"/><text x="83.0888%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="82.8388%" y="533" width="0.1604%" height="15" fill="rgb(235,170,24)" fg:x="1033" fg:w="2"/><text x="83.0888%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="82.8388%" y="517" width="0.1604%" height="15" fill="rgb(222,212,52)" fg:x="1033" fg:w="2"/><text x="83.0888%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="82.9190%" y="501" width="0.0802%" height="15" fill="rgb(223,17,45)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.9190%" y="485" width="0.0802%" height="15" fill="rgb(227,103,26)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9190%" y="469" width="0.0802%" height="15" fill="rgb(251,151,25)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.9190%" y="453" width="0.0802%" height="15" fill="rgb(248,144,29)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9190%" y="437" width="0.0802%" height="15" fill="rgb(245,97,16)" fg:x="1034" fg:w="1"/><text x="83.1690%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.9992%" y="517" width="0.0802%" height="15" fill="rgb(220,200,29)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.9992%" y="501" width="0.0802%" height="15" fill="rgb(206,38,29)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="82.9992%" y="485" width="0.0802%" height="15" fill="rgb(245,19,52)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.9992%" y="469" width="0.0802%" height="15" fill="rgb(205,67,43)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9992%" y="453" width="0.0802%" height="15" fill="rgb(217,128,23)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.9992%" y="437" width="0.0802%" height="15" fill="rgb(210,109,28)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9992%" y="421" width="0.0802%" height="15" fill="rgb(233,181,7)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.9992%" y="405" width="0.0802%" height="15" fill="rgb(244,11,22)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="82.9992%" y="533" width="0.2406%" height="15" fill="rgb(205,124,54)" fg:x="1035" fg:w="3"/><text x="83.2492%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="83.0794%" y="517" width="0.1604%" height="15" fill="rgb(218,21,27)" fg:x="1036" fg:w="2"/><text x="83.3294%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.0794%" y="501" width="0.1604%" height="15" fill="rgb(224,153,33)" fg:x="1036" fg:w="2"/><text x="83.3294%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1596%" y="485" width="0.0802%" height="15" fill="rgb(240,219,28)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1596%" y="469" width="0.0802%" height="15" fill="rgb(214,80,29)" fg:x="1037" fg:w="1"/><text x="83.4096%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="82.8388%" y="549" width="0.4812%" height="15" fill="rgb(247,148,44)" fg:x="1033" fg:w="6"/><text x="83.0888%" y="559.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="83.2398%" y="533" width="0.0802%" height="15" fill="rgb(243,110,30)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="83.2398%" y="517" width="0.0802%" height="15" fill="rgb(243,173,41)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="83.2398%" y="501" width="0.0802%" height="15" fill="rgb(225,160,47)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.2398%" y="485" width="0.0802%" height="15" fill="rgb(215,44,21)" fg:x="1038" fg:w="1"/><text x="83.4898%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3200%" y="533" width="0.0802%" height="15" fill="rgb(248,90,3)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3200%" y="517" width="0.0802%" height="15" fill="rgb(220,196,49)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3200%" y="501" width="0.0802%" height="15" fill="rgb(217,138,14)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3200%" y="485" width="0.0802%" height="15" fill="rgb(219,111,20)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.3200%" y="469" width="0.0802%" height="15" fill="rgb(218,114,4)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.3200%" y="453" width="0.0802%" height="15" fill="rgb(238,133,3)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.3200%" y="437" width="0.0802%" height="15" fill="rgb(224,95,0)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3200%" y="421" width="0.0802%" height="15" fill="rgb(220,169,35)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3200%" y="405" width="0.0802%" height="15" fill="rgb(242,116,47)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.3200%" y="389" width="0.0802%" height="15" fill="rgb(251,42,20)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.3200%" y="373" width="0.0802%" height="15" fill="rgb(234,7,34)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.3200%" y="357" width="0.0802%" height="15" fill="rgb(243,208,13)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.3200%" y="341" width="0.0802%" height="15" fill="rgb(227,33,28)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3200%" y="325" width="0.0802%" height="15" fill="rgb(250,47,37)" fg:x="1039" fg:w="1"/><text x="83.5700%" y="335.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.64%)</title><rect x="82.8388%" y="565" width="0.6415%" height="15" fill="rgb(235,111,52)" fg:x="1033" fg:w="8"/><text x="83.0888%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.3200%" y="549" width="0.1604%" height="15" fill="rgb(223,64,28)" fg:x="1039" fg:w="2"/><text x="83.5700%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.4002%" y="533" width="0.0802%" height="15" fill="rgb(236,67,22)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.4002%" y="517" width="0.0802%" height="15" fill="rgb(243,79,24)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.4002%" y="501" width="0.0802%" height="15" fill="rgb(241,225,22)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.4002%" y="485" width="0.0802%" height="15" fill="rgb(228,214,26)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.4002%" y="469" width="0.0802%" height="15" fill="rgb(219,84,52)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.4002%" y="453" width="0.0802%" height="15" fill="rgb(220,12,22)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.4002%" y="437" width="0.0802%" height="15" fill="rgb(219,9,49)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.4002%" y="421" width="0.0802%" height="15" fill="rgb(237,40,43)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.4002%" y="405" width="0.0802%" height="15" fill="rgb(212,189,32)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.4002%" y="389" width="0.0802%" height="15" fill="rgb(247,48,9)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.4002%" y="373" width="0.0802%" height="15" fill="rgb(247,112,3)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4002%" y="357" width="0.0802%" height="15" fill="rgb(243,110,18)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4804%" y="485" width="0.0802%" height="15" fill="rgb(233,223,44)" fg:x="1041" fg:w="1"/><text x="83.7304%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="83.5605%" y="437" width="0.0802%" height="15" fill="rgb(245,160,20)" fg:x="1042" fg:w="1"/><text x="83.8105%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (3 samples, 0.24%)</title><rect x="83.4804%" y="565" width="0.2406%" height="15" fill="rgb(225,37,1)" fg:x="1041" fg:w="3"/><text x="83.7304%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (3 samples, 0.24%)</title><rect x="83.4804%" y="549" width="0.2406%" height="15" fill="rgb(253,227,39)" fg:x="1041" fg:w="3"/><text x="83.7304%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="83.4804%" y="533" width="0.2406%" height="15" fill="rgb(240,179,26)" fg:x="1041" fg:w="3"/><text x="83.7304%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (3 samples, 0.24%)</title><rect x="83.4804%" y="517" width="0.2406%" height="15" fill="rgb(237,212,23)" fg:x="1041" fg:w="3"/><text x="83.7304%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="83.4804%" y="501" width="0.2406%" height="15" fill="rgb(221,38,11)" fg:x="1041" fg:w="3"/><text x="83.7304%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (2 samples, 0.16%)</title><rect x="83.5605%" y="485" width="0.1604%" height="15" fill="rgb(215,85,6)" fg:x="1042" fg:w="2"/><text x="83.8105%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.5605%" y="469" width="0.1604%" height="15" fill="rgb(239,64,14)" fg:x="1042" fg:w="2"/><text x="83.8105%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="83.5605%" y="453" width="0.1604%" height="15" fill="rgb(215,150,32)" fg:x="1042" fg:w="2"/><text x="83.8105%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6407%" y="437" width="0.0802%" height="15" fill="rgb(238,15,13)" fg:x="1043" fg:w="1"/><text x="83.8907%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::OpenedScopeRefMut&lt;plugins_core::carrying::model::Containing,kernel::model::entity::Entity&gt;&gt; (1 samples, 0.08%)</title><rect x="83.7209%" y="533" width="0.0802%" height="15" fill="rgb(251,87,8)" fg:x="1044" fg:w="1"/><text x="83.9709%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="83.7209%" y="517" width="0.0802%" height="15" fill="rgb(206,86,1)" fg:x="1044" fg:w="1"/><text x="83.9709%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="83.8011%" y="533" width="0.0802%" height="15" fill="rgb(208,151,45)" fg:x="1045" fg:w="1"/><text x="84.0511%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="83.8011%" y="517" width="0.0802%" height="15" fill="rgb(231,181,24)" fg:x="1045" fg:w="1"/><text x="84.0511%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.8011%" y="501" width="0.0802%" height="15" fill="rgb(240,106,29)" fg:x="1045" fg:w="1"/><text x="84.0511%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="83.8813%" y="501" width="0.0802%" height="15" fill="rgb(227,166,11)" fg:x="1046" fg:w="1"/><text x="84.1313%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8813%" y="485" width="0.0802%" height="15" fill="rgb(254,14,34)" fg:x="1046" fg:w="1"/><text x="84.1313%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (4 samples, 0.32%)</title><rect x="83.7209%" y="565" width="0.3208%" height="15" fill="rgb(223,222,6)" fg:x="1044" fg:w="4"/><text x="83.9709%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="83.7209%" y="549" width="0.3208%" height="15" fill="rgb(245,69,24)" fg:x="1044" fg:w="4"/><text x="83.9709%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="83.8813%" y="533" width="0.1604%" height="15" fill="rgb(213,193,7)" fg:x="1046" fg:w="2"/><text x="84.1313%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="83.8813%" y="517" width="0.1604%" height="15" fill="rgb(237,92,51)" fg:x="1046" fg:w="2"/><text x="84.1313%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9615%" y="501" width="0.0802%" height="15" fill="rgb(225,194,6)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.9615%" y="485" width="0.0802%" height="15" fill="rgb(205,159,49)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9615%" y="469" width="0.0802%" height="15" fill="rgb(219,69,2)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.9615%" y="453" width="0.0802%" height="15" fill="rgb(215,107,24)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.9615%" y="437" width="0.0802%" height="15" fill="rgb(249,208,29)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.9615%" y="421" width="0.0802%" height="15" fill="rgb(213,147,10)" fg:x="1047" fg:w="1"/><text x="84.2115%" y="431.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="84.0417%" y="533" width="0.0802%" height="15" fill="rgb(254,140,42)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0417%" y="517" width="0.0802%" height="15" fill="rgb(249,9,15)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0417%" y="501" width="0.0802%" height="15" fill="rgb(210,19,33)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0417%" y="485" width="0.0802%" height="15" fill="rgb(241,121,22)" fg:x="1048" fg:w="1"/><text x="84.2917%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="84.0417%" y="549" width="0.1604%" height="15" fill="rgb(244,69,52)" fg:x="1048" fg:w="2"/><text x="84.2917%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="84.1219%" y="533" width="0.0802%" height="15" fill="rgb(244,191,54)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1219%" y="517" width="0.0802%" height="15" fill="rgb(250,3,53)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="84.1219%" y="501" width="0.0802%" height="15" fill="rgb(205,77,3)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.2021%" y="501" width="0.0802%" height="15" fill="rgb(207,155,3)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2021%" y="485" width="0.0802%" height="15" fill="rgb(224,79,2)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="84.2021%" y="549" width="0.1604%" height="15" fill="rgb(243,172,5)" fg:x="1050" fg:w="2"/><text x="84.4521%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="84.2021%" y="533" width="0.1604%" height="15" fill="rgb(217,23,43)" fg:x="1050" fg:w="2"/><text x="84.4521%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.2021%" y="517" width="0.1604%" height="15" fill="rgb(223,109,20)" fg:x="1050" fg:w="2"/><text x="84.4521%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2823%" y="501" width="0.0802%" height="15" fill="rgb(232,159,21)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2823%" y="485" width="0.0802%" height="15" fill="rgb(219,58,2)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.2823%" y="469" width="0.0802%" height="15" fill="rgb(241,56,8)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2823%" y="453" width="0.0802%" height="15" fill="rgb(249,10,27)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="84.3625%" y="533" width="0.0802%" height="15" fill="rgb(248,177,5)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3625%" y="517" width="0.0802%" height="15" fill="rgb(239,12,30)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.3625%" y="501" width="0.0802%" height="15" fill="rgb(229,164,25)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.3625%" y="485" width="0.0802%" height="15" fill="rgb(231,217,50)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.3625%" y="469" width="0.0802%" height="15" fill="rgb(247,99,32)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.3625%" y="453" width="0.0802%" height="15" fill="rgb(240,74,50)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3625%" y="437" width="0.0802%" height="15" fill="rgb(218,54,8)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.3625%" y="421" width="0.0802%" height="15" fill="rgb(227,132,20)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.3625%" y="405" width="0.0802%" height="15" fill="rgb(232,134,12)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.3625%" y="389" width="0.0802%" height="15" fill="rgb(250,129,18)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.3625%" y="373" width="0.0802%" height="15" fill="rgb(232,129,47)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.3625%" y="357" width="0.0802%" height="15" fill="rgb(230,31,40)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3625%" y="341" width="0.0802%" height="15" fill="rgb(232,126,10)" fg:x="1052" fg:w="1"/><text x="84.6125%" y="351.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="84.4427%" y="517" width="0.0802%" height="15" fill="rgb(205,46,31)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="527.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="84.4427%" y="501" width="0.0802%" height="15" fill="rgb(232,37,37)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="511.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="84.4427%" y="485" width="0.0802%" height="15" fill="rgb(240,91,16)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="495.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="84.4427%" y="469" width="0.0802%" height="15" fill="rgb(224,160,9)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="84.4427%" y="453" width="0.0802%" height="15" fill="rgb(215,116,14)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="84.4427%" y="437" width="0.0802%" height="15" fill="rgb(235,46,36)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="447.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="84.4427%" y="421" width="0.0802%" height="15" fill="rgb(238,39,28)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="431.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="84.4427%" y="405" width="0.0802%" height="15" fill="rgb(242,125,29)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="84.5229%" y="453" width="0.0802%" height="15" fill="rgb(238,211,30)" fg:x="1054" fg:w="1"/><text x="84.7729%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="84.5229%" y="485" width="0.1604%" height="15" fill="rgb(227,201,28)" fg:x="1054" fg:w="2"/><text x="84.7729%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="84.5229%" y="469" width="0.1604%" height="15" fill="rgb(238,77,29)" fg:x="1054" fg:w="2"/><text x="84.7729%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6030%" y="453" width="0.0802%" height="15" fill="rgb(213,221,40)" fg:x="1055" fg:w="1"/><text x="84.8530%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="84.7634%" y="405" width="0.4812%" height="15" fill="rgb(226,220,44)" fg:x="1057" fg:w="6"/><text x="85.0134%" y="415.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="84.8436%" y="389" width="0.4010%" height="15" fill="rgb(228,90,23)" fg:x="1058" fg:w="5"/><text x="85.0936%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="85.0040%" y="373" width="0.2406%" height="15" fill="rgb(235,72,29)" fg:x="1060" fg:w="3"/><text x="85.2540%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="85.0040%" y="357" width="0.2406%" height="15" fill="rgb(248,117,39)" fg:x="1060" fg:w="3"/><text x="85.2540%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.1644%" y="341" width="0.0802%" height="15" fill="rgb(225,43,28)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.1644%" y="325" width="0.0802%" height="15" fill="rgb(240,93,4)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.1644%" y="309" width="0.0802%" height="15" fill="rgb(234,178,27)" fg:x="1062" fg:w="1"/><text x="85.4144%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="84.7634%" y="421" width="0.5613%" height="15" fill="rgb(254,88,22)" fg:x="1057" fg:w="7"/><text x="85.0134%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.2446%" y="405" width="0.0802%" height="15" fill="rgb(240,206,50)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.2446%" y="389" width="0.0802%" height="15" fill="rgb(249,103,8)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.2446%" y="373" width="0.0802%" height="15" fill="rgb(241,178,36)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.3248%" y="405" width="0.0802%" height="15" fill="rgb(246,110,15)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.3248%" y="389" width="0.0802%" height="15" fill="rgb(207,14,43)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.4852%" y="389" width="0.1604%" height="15" fill="rgb(253,219,19)" fg:x="1066" fg:w="2"/><text x="85.7352%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="84.7634%" y="437" width="0.9623%" height="15" fill="rgb(216,126,5)" fg:x="1057" fg:w="12"/><text x="85.0134%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="85.3248%" y="421" width="0.4010%" height="15" fill="rgb(218,78,42)" fg:x="1064" fg:w="5"/><text x="85.5748%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="85.4050%" y="405" width="0.3208%" height="15" fill="rgb(215,154,40)" fg:x="1065" fg:w="4"/><text x="85.6550%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6455%" y="389" width="0.0802%" height="15" fill="rgb(235,129,32)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.6455%" y="373" width="0.0802%" height="15" fill="rgb(218,51,8)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.6455%" y="357" width="0.0802%" height="15" fill="rgb(245,48,4)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7257%" y="389" width="0.0802%" height="15" fill="rgb(250,175,12)" fg:x="1069" fg:w="1"/><text x="85.9757%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.8059%" y="373" width="0.0802%" height="15" fill="rgb(237,95,40)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.8861%" y="373" width="0.0802%" height="15" fill="rgb(244,120,0)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.8861%" y="357" width="0.0802%" height="15" fill="rgb(241,19,42)" fg:x="1071" fg:w="1"/><text x="86.1361%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="85.7257%" y="437" width="0.4010%" height="15" fill="rgb(217,174,48)" fg:x="1069" fg:w="5"/><text x="85.9757%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="85.7257%" y="421" width="0.4010%" height="15" fill="rgb(239,36,38)" fg:x="1069" fg:w="5"/><text x="85.9757%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="85.7257%" y="405" width="0.4010%" height="15" fill="rgb(220,63,49)" fg:x="1069" fg:w="5"/><text x="85.9757%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="85.8059%" y="389" width="0.3208%" height="15" fill="rgb(240,101,13)" fg:x="1070" fg:w="4"/><text x="86.0559%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.9663%" y="373" width="0.1604%" height="15" fill="rgb(209,184,51)" fg:x="1072" fg:w="2"/><text x="86.2163%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0465%" y="357" width="0.0802%" height="15" fill="rgb(206,136,39)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.0465%" y="341" width="0.0802%" height="15" fill="rgb(254,47,45)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="86.1267%" y="421" width="0.1604%" height="15" fill="rgb(252,103,20)" fg:x="1074" fg:w="2"/><text x="86.3767%" y="431.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="86.1267%" y="405" width="0.1604%" height="15" fill="rgb(230,69,12)" fg:x="1074" fg:w="2"/><text x="86.3767%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="86.1267%" y="389" width="0.1604%" height="15" fill="rgb(219,2,28)" fg:x="1074" fg:w="2"/><text x="86.3767%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2069%" y="373" width="0.0802%" height="15" fill="rgb(210,9,12)" fg:x="1075" fg:w="1"/><text x="86.4569%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.5277%" y="341" width="0.1604%" height="15" fill="rgb(235,99,33)" fg:x="1079" fg:w="2"/><text x="86.7777%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6079%" y="325" width="0.0802%" height="15" fill="rgb(230,11,38)" fg:x="1080" fg:w="1"/><text x="86.8579%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="86.6881%" y="325" width="0.0802%" height="15" fill="rgb(217,129,0)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.7682%" y="309" width="0.0802%" height="15" fill="rgb(222,198,4)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="86.6881%" y="341" width="0.3208%" height="15" fill="rgb(246,170,27)" fg:x="1081" fg:w="4"/><text x="86.9381%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="86.7682%" y="325" width="0.2406%" height="15" fill="rgb(229,17,28)" fg:x="1082" fg:w="3"/><text x="87.0182%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="86.8484%" y="309" width="0.1604%" height="15" fill="rgb(233,198,48)" fg:x="1083" fg:w="2"/><text x="87.0984%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9286%" y="293" width="0.0802%" height="15" fill="rgb(238,103,23)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.9286%" y="277" width="0.0802%" height="15" fill="rgb(206,91,41)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9286%" y="261" width="0.0802%" height="15" fill="rgb(227,34,25)" fg:x="1084" fg:w="1"/><text x="87.1786%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="87.0890%" y="325" width="0.0802%" height="15" fill="rgb(210,110,44)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="335.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.89%)</title><rect x="84.3625%" y="549" width="2.8869%" height="15" fill="rgb(216,189,8)" fg:x="1052" fg:w="36"/><text x="84.6125%" y="559.50">en..</text></g><g><title>engine::session::Session::save_changes (35 samples, 2.81%)</title><rect x="84.4427%" y="533" width="2.8067%" height="15" fill="rgb(234,9,46)" fg:x="1053" fg:w="35"/><text x="84.6927%" y="543.50">en..</text></g><g><title>engine::session::state::State::close (34 samples, 2.73%)</title><rect x="84.5229%" y="517" width="2.7265%" height="15" fill="rgb(251,200,5)" fg:x="1054" fg:w="34"/><text x="84.7729%" y="527.50">en..</text></g><g><title>engine::session::state::State::flush_entities (34 samples, 2.73%)</title><rect x="84.5229%" y="501" width="2.7265%" height="15" fill="rgb(238,165,37)" fg:x="1054" fg:w="34"/><text x="84.7729%" y="511.50">en..</text></g><g><title>core::iter::adapters::try_process (32 samples, 2.57%)</title><rect x="84.6832%" y="485" width="2.5662%" height="15" fill="rgb(232,77,38)" fg:x="1056" fg:w="32"/><text x="84.9332%" y="495.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 2.57%)</title><rect x="84.6832%" y="469" width="2.5662%" height="15" fill="rgb(253,179,33)" fg:x="1056" fg:w="32"/><text x="84.9332%" y="479.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (32 samples, 2.57%)</title><rect x="84.6832%" y="453" width="2.5662%" height="15" fill="rgb(240,13,35)" fg:x="1056" fg:w="32"/><text x="84.9332%" y="463.50">en..</text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.12%)</title><rect x="86.1267%" y="437" width="1.1227%" height="15" fill="rgb(242,150,49)" fg:x="1074" fg:w="14"/><text x="86.3767%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="86.2871%" y="421" width="0.9623%" height="15" fill="rgb(237,176,28)" fg:x="1076" fg:w="12"/><text x="86.5371%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="86.2871%" y="405" width="0.9623%" height="15" fill="rgb(214,176,33)" fg:x="1076" fg:w="12"/><text x="86.5371%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="86.2871%" y="389" width="0.9623%" height="15" fill="rgb(214,25,12)" fg:x="1076" fg:w="12"/><text x="86.5371%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.96%)</title><rect x="86.2871%" y="373" width="0.9623%" height="15" fill="rgb(238,190,20)" fg:x="1076" fg:w="12"/><text x="86.5371%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="86.4475%" y="357" width="0.8019%" height="15" fill="rgb(208,11,19)" fg:x="1078" fg:w="10"/><text x="86.6975%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="87.0088%" y="341" width="0.2406%" height="15" fill="rgb(239,90,4)" fg:x="1085" fg:w="3"/><text x="87.2588%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.1692%" y="325" width="0.0802%" height="15" fill="rgb(248,110,3)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1692%" y="309" width="0.0802%" height="15" fill="rgb(210,41,30)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1692%" y="293" width="0.0802%" height="15" fill="rgb(239,36,8)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="303.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="87.2494%" y="549" width="0.0802%" height="15" fill="rgb(237,201,47)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2494%" y="533" width="0.0802%" height="15" fill="rgb(224,140,29)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2494%" y="517" width="0.0802%" height="15" fill="rgb(231,209,17)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.2494%" y="501" width="0.0802%" height="15" fill="rgb(249,196,1)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.2494%" y="485" width="0.0802%" height="15" fill="rgb(223,207,51)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.2494%" y="469" width="0.0802%" height="15" fill="rgb(210,14,40)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.2494%" y="453" width="0.0802%" height="15" fill="rgb(250,20,52)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.2494%" y="437" width="0.0802%" height="15" fill="rgb(241,46,11)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.2494%" y="421" width="0.0802%" height="15" fill="rgb(219,105,5)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.2494%" y="405" width="0.0802%" height="15" fill="rgb(252,77,35)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.2494%" y="389" width="0.0802%" height="15" fill="rgb(243,119,2)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.2494%" y="373" width="0.0802%" height="15" fill="rgb(206,82,28)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2494%" y="357" width="0.0802%" height="15" fill="rgb(227,120,12)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.3296%" y="549" width="0.0802%" height="15" fill="rgb(229,134,41)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="87.3296%" y="533" width="0.0802%" height="15" fill="rgb(239,96,32)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3296%" y="517" width="0.0802%" height="15" fill="rgb(225,46,27)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.3296%" y="501" width="0.0802%" height="15" fill="rgb(215,168,2)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3296%" y="485" width="0.0802%" height="15" fill="rgb(207,170,52)" fg:x="1089" fg:w="1"/><text x="87.5796%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="87.4098%" y="517" width="0.0802%" height="15" fill="rgb(237,198,36)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.4098%" y="501" width="0.0802%" height="15" fill="rgb(213,27,14)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.4098%" y="485" width="0.0802%" height="15" fill="rgb(218,77,5)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="495.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="87.4098%" y="549" width="0.1604%" height="15" fill="rgb(230,219,39)" fg:x="1090" fg:w="2"/><text x="87.6598%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="87.4098%" y="533" width="0.1604%" height="15" fill="rgb(245,177,7)" fg:x="1090" fg:w="2"/><text x="87.6598%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="87.4900%" y="517" width="0.0802%" height="15" fill="rgb(246,44,46)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4900%" y="501" width="0.0802%" height="15" fill="rgb(207,173,15)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.5702%" y="533" width="0.0802%" height="15" fill="rgb(245,170,50)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="87.5702%" y="517" width="0.0802%" height="15" fill="rgb(233,156,21)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5702%" y="501" width="0.0802%" height="15" fill="rgb(253,146,27)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="87.6504%" y="517" width="0.0802%" height="15" fill="rgb(247,66,29)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6504%" y="501" width="0.0802%" height="15" fill="rgb(218,207,26)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6504%" y="485" width="0.0802%" height="15" fill="rgb(234,93,26)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.6504%" y="469" width="0.0802%" height="15" fill="rgb(214,75,48)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="87.7306%" y="501" width="0.0802%" height="15" fill="rgb(229,119,22)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="87.7306%" y="485" width="0.0802%" height="15" fill="rgb(226,153,19)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7306%" y="469" width="0.0802%" height="15" fill="rgb(220,204,36)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7306%" y="453" width="0.0802%" height="15" fill="rgb(253,181,43)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7306%" y="437" width="0.0802%" height="15" fill="rgb(211,41,51)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.7306%" y="421" width="0.0802%" height="15" fill="rgb(207,215,0)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.7306%" y="405" width="0.0802%" height="15" fill="rgb(212,153,10)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="87.6504%" y="533" width="0.2406%" height="15" fill="rgb(251,171,36)" fg:x="1093" fg:w="3"/><text x="87.9004%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="87.7306%" y="517" width="0.1604%" height="15" fill="rgb(225,219,41)" fg:x="1094" fg:w="2"/><text x="87.9806%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="87.8107%" y="501" width="0.0802%" height="15" fill="rgb(208,200,1)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (6 samples, 0.48%)</title><rect x="87.5702%" y="549" width="0.4812%" height="15" fill="rgb(206,75,47)" fg:x="1092" fg:w="6"/><text x="87.8202%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.8909%" y="533" width="0.1604%" height="15" fill="rgb(248,3,16)" fg:x="1096" fg:w="2"/><text x="88.1409%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.8909%" y="517" width="0.1604%" height="15" fill="rgb(242,157,36)" fg:x="1096" fg:w="2"/><text x="88.1409%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.8909%" y="501" width="0.1604%" height="15" fill="rgb(215,175,11)" fg:x="1096" fg:w="2"/><text x="88.1409%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="87.8909%" y="485" width="0.1604%" height="15" fill="rgb(252,222,22)" fg:x="1096" fg:w="2"/><text x="88.1409%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="88.0513%" y="549" width="0.0802%" height="15" fill="rgb(250,121,35)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="88.0513%" y="533" width="0.0802%" height="15" fill="rgb(233,120,49)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="88.0513%" y="517" width="0.0802%" height="15" fill="rgb(205,201,14)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="88.0513%" y="501" width="0.0802%" height="15" fill="rgb(219,58,45)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.0513%" y="485" width="0.0802%" height="15" fill="rgb(251,65,12)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.0513%" y="469" width="0.0802%" height="15" fill="rgb(224,47,31)" fg:x="1098" fg:w="1"/><text x="88.3013%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.1315%" y="389" width="0.0802%" height="15" fill="rgb(233,74,26)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="88.1315%" y="517" width="0.1604%" height="15" fill="rgb(231,211,31)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.1315%" y="501" width="0.1604%" height="15" fill="rgb(239,167,5)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.1315%" y="485" width="0.1604%" height="15" fill="rgb(241,85,0)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="88.1315%" y="469" width="0.1604%" height="15" fill="rgb(229,130,21)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.1315%" y="453" width="0.1604%" height="15" fill="rgb(254,84,49)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.1315%" y="437" width="0.1604%" height="15" fill="rgb(235,85,21)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="88.1315%" y="421" width="0.1604%" height="15" fill="rgb(246,128,52)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.1315%" y="405" width="0.1604%" height="15" fill="rgb(243,114,49)" fg:x="1099" fg:w="2"/><text x="88.3815%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.2117%" y="389" width="0.0802%" height="15" fill="rgb(240,224,22)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="88.2117%" y="373" width="0.0802%" height="15" fill="rgb(247,201,52)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="88.2117%" y="357" width="0.0802%" height="15" fill="rgb(231,70,45)" fg:x="1100" fg:w="1"/><text x="88.4617%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="88.2919%" y="501" width="0.0802%" height="15" fill="rgb(217,215,20)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2919%" y="485" width="0.0802%" height="15" fill="rgb(226,170,30)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.2919%" y="469" width="0.0802%" height="15" fill="rgb(220,190,43)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="88.2919%" y="453" width="0.0802%" height="15" fill="rgb(218,20,18)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (4 samples, 0.32%)</title><rect x="88.1315%" y="549" width="0.3208%" height="15" fill="rgb(245,37,26)" fg:x="1099" fg:w="4"/><text x="88.3815%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.32%)</title><rect x="88.1315%" y="533" width="0.3208%" height="15" fill="rgb(241,127,29)" fg:x="1099" fg:w="4"/><text x="88.3815%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="88.2919%" y="517" width="0.1604%" height="15" fill="rgb(241,33,26)" fg:x="1101" fg:w="2"/><text x="88.5419%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3721%" y="501" width="0.0802%" height="15" fill="rgb(220,106,21)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.3721%" y="485" width="0.0802%" height="15" fill="rgb(225,125,35)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.3721%" y="469" width="0.0802%" height="15" fill="rgb(248,80,22)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3721%" y="453" width="0.0802%" height="15" fill="rgb(231,117,39)" fg:x="1102" fg:w="1"/><text x="88.6221%" y="463.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="88.4523%" y="533" width="0.0802%" height="15" fill="rgb(239,183,16)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4523%" y="517" width="0.0802%" height="15" fill="rgb(221,61,19)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4523%" y="501" width="0.0802%" height="15" fill="rgb(239,196,44)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4523%" y="485" width="0.0802%" height="15" fill="rgb(206,113,19)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4523%" y="469" width="0.0802%" height="15" fill="rgb(245,114,12)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4523%" y="453" width="0.0802%" height="15" fill="rgb(247,89,39)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.4523%" y="437" width="0.0802%" height="15" fill="rgb(213,85,14)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.4523%" y="421" width="0.0802%" height="15" fill="rgb(249,206,33)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.4523%" y="405" width="0.0802%" height="15" fill="rgb(235,167,47)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4523%" y="389" width="0.0802%" height="15" fill="rgb(217,177,16)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4523%" y="373" width="0.0802%" height="15" fill="rgb(250,228,29)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.4523%" y="357" width="0.0802%" height="15" fill="rgb(216,195,42)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.4523%" y="341" width="0.0802%" height="15" fill="rgb(232,192,32)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.4523%" y="325" width="0.0802%" height="15" fill="rgb(211,8,47)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.4523%" y="309" width="0.0802%" height="15" fill="rgb(251,201,9)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="88.4523%" y="293" width="0.0802%" height="15" fill="rgb(206,185,47)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="88.4523%" y="277" width="0.0802%" height="15" fill="rgb(245,54,32)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="287.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (2 samples, 0.16%)</title><rect x="88.4523%" y="549" width="0.1604%" height="15" fill="rgb(208,1,8)" fg:x="1103" fg:w="2"/><text x="88.7023%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="88.5325%" y="533" width="0.0802%" height="15" fill="rgb(228,57,24)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="88.5325%" y="517" width="0.0802%" height="15" fill="rgb(251,24,8)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.5325%" y="501" width="0.0802%" height="15" fill="rgb(236,196,50)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.5325%" y="485" width="0.0802%" height="15" fill="rgb(246,222,29)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (1 samples, 0.08%)</title><rect x="88.5325%" y="469" width="0.0802%" height="15" fill="rgb(211,34,40)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (1 samples, 0.08%)</title><rect x="88.5325%" y="453" width="0.0802%" height="15" fill="rgb(210,66,51)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="88.5325%" y="437" width="0.0802%" height="15" fill="rgb(250,56,43)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.5325%" y="421" width="0.0802%" height="15" fill="rgb(240,111,50)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="431.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.6127%" y="501" width="0.0802%" height="15" fill="rgb(209,117,13)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="88.6127%" y="485" width="0.0802%" height="15" fill="rgb(232,164,45)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.6127%" y="469" width="0.0802%" height="15" fill="rgb(205,69,32)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6127%" y="453" width="0.0802%" height="15" fill="rgb(240,147,45)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.6127%" y="437" width="0.0802%" height="15" fill="rgb(221,94,48)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6127%" y="421" width="0.0802%" height="15" fill="rgb(249,209,17)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.6127%" y="405" width="0.0802%" height="15" fill="rgb(228,57,28)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6127%" y="389" width="0.0802%" height="15" fill="rgb(250,133,26)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6127%" y="373" width="0.0802%" height="15" fill="rgb(254,15,16)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="88.6127%" y="533" width="0.1604%" height="15" fill="rgb(209,147,42)" fg:x="1105" fg:w="2"/><text x="88.8627%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.6127%" y="517" width="0.1604%" height="15" fill="rgb(208,5,29)" fg:x="1105" fg:w="2"/><text x="88.8627%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.6929%" y="501" width="0.0802%" height="15" fill="rgb(250,73,31)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="88.6929%" y="485" width="0.0802%" height="15" fill="rgb(238,45,10)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.6929%" y="469" width="0.0802%" height="15" fill="rgb(214,104,5)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6929%" y="453" width="0.0802%" height="15" fill="rgb(242,217,19)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (60 samples, 4.81%)</title><rect x="84.0417%" y="565" width="4.8115%" height="15" fill="rgb(246,113,27)" fg:x="1048" fg:w="60"/><text x="84.2917%" y="575.50">plugin..</text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="88.6127%" y="549" width="0.2406%" height="15" fill="rgb(221,34,27)" fg:x="1105" fg:w="3"/><text x="88.8627%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="88.7731%" y="533" width="0.0802%" height="15" fill="rgb(246,109,6)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="88.7731%" y="517" width="0.0802%" height="15" fill="rgb(217,12,25)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="88.7731%" y="501" width="0.0802%" height="15" fill="rgb(250,195,5)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.7731%" y="485" width="0.0802%" height="15" fill="rgb(244,140,45)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="88.7731%" y="469" width="0.0802%" height="15" fill="rgb(230,64,14)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="88.8532%" y="565" width="0.0802%" height="15" fill="rgb(206,27,27)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="88.8532%" y="549" width="0.0802%" height="15" fill="rgb(230,14,50)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="88.8532%" y="533" width="0.0802%" height="15" fill="rgb(237,172,14)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.9334%" y="533" width="0.0802%" height="15" fill="rgb(209,25,21)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.9334%" y="517" width="0.0802%" height="15" fill="rgb(248,148,22)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.9334%" y="501" width="0.0802%" height="15" fill="rgb(234,100,22)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.9334%" y="485" width="0.0802%" height="15" fill="rgb(210,20,30)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9334%" y="469" width="0.0802%" height="15" fill="rgb(232,58,0)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="89.0136%" y="453" width="0.0802%" height="15" fill="rgb(221,68,13)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="89.0136%" y="437" width="0.0802%" height="15" fill="rgb(231,194,11)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.0136%" y="421" width="0.0802%" height="15" fill="rgb(235,51,41)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="89.0136%" y="405" width="0.0802%" height="15" fill="rgb(240,50,32)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0938%" y="421" width="0.0802%" height="15" fill="rgb(240,185,36)" fg:x="1111" fg:w="1"/><text x="89.3438%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="89.0136%" y="485" width="0.2406%" height="15" fill="rgb(211,168,15)" fg:x="1110" fg:w="3"/><text x="89.2636%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.24%)</title><rect x="89.0136%" y="469" width="0.2406%" height="15" fill="rgb(221,70,0)" fg:x="1110" fg:w="3"/><text x="89.2636%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="89.0938%" y="453" width="0.1604%" height="15" fill="rgb(205,21,33)" fg:x="1111" fg:w="2"/><text x="89.3438%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="89.0938%" y="437" width="0.1604%" height="15" fill="rgb(225,106,10)" fg:x="1111" fg:w="2"/><text x="89.3438%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="89.1740%" y="421" width="0.0802%" height="15" fill="rgb(236,200,50)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1740%" y="405" width="0.0802%" height="15" fill="rgb(249,93,23)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="89.0136%" y="517" width="0.3208%" height="15" fill="rgb(244,115,35)" fg:x="1110" fg:w="4"/><text x="89.2636%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="89.0136%" y="501" width="0.3208%" height="15" fill="rgb(231,129,47)" fg:x="1110" fg:w="4"/><text x="89.2636%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="89.2542%" y="485" width="0.0802%" height="15" fill="rgb(225,160,50)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.2542%" y="469" width="0.0802%" height="15" fill="rgb(218,135,23)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="88.9334%" y="565" width="0.4812%" height="15" fill="rgb(227,119,14)" fg:x="1109" fg:w="6"/><text x="89.1834%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="88.9334%" y="549" width="0.4812%" height="15" fill="rgb(242,138,13)" fg:x="1109" fg:w="6"/><text x="89.1834%" y="559.50"></text></g><g><title>plugins_core::build::Build::save (5 samples, 0.40%)</title><rect x="89.0136%" y="533" width="0.4010%" height="15" fill="rgb(215,11,16)" fg:x="1110" fg:w="5"/><text x="89.2636%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3344%" y="517" width="0.0802%" height="15" fill="rgb(234,170,50)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3344%" y="501" width="0.0802%" height="15" fill="rgb(233,34,20)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3344%" y="485" width="0.0802%" height="15" fill="rgb(237,100,45)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.3344%" y="469" width="0.0802%" height="15" fill="rgb(231,184,36)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.3344%" y="453" width="0.0802%" height="15" fill="rgb(252,93,2)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.3344%" y="437" width="0.0802%" height="15" fill="rgb(248,176,47)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3344%" y="421" width="0.0802%" height="15" fill="rgb(249,125,23)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3344%" y="405" width="0.0802%" height="15" fill="rgb(239,67,42)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.3344%" y="389" width="0.0802%" height="15" fill="rgb(244,162,4)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.3344%" y="373" width="0.0802%" height="15" fill="rgb(214,150,38)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.3344%" y="357" width="0.0802%" height="15" fill="rgb(228,211,28)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.3344%" y="341" width="0.0802%" height="15" fill="rgb(212,98,48)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3344%" y="325" width="0.0802%" height="15" fill="rgb(213,45,13)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="89.4146%" y="501" width="0.0802%" height="15" fill="rgb(218,35,29)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="89.4146%" y="485" width="0.0802%" height="15" fill="rgb(244,13,3)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="89.4146%" y="469" width="0.0802%" height="15" fill="rgb(235,170,19)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.4146%" y="453" width="0.0802%" height="15" fill="rgb(233,193,43)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4146%" y="437" width="0.0802%" height="15" fill="rgb(228,223,20)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.4146%" y="421" width="0.0802%" height="15" fill="rgb(208,85,54)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4146%" y="405" width="0.0802%" height="15" fill="rgb(254,14,45)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.4146%" y="389" width="0.0802%" height="15" fill="rgb(247,99,29)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4146%" y="373" width="0.0802%" height="15" fill="rgb(225,180,54)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="89.4948%" y="501" width="0.1604%" height="15" fill="rgb(239,88,43)" fg:x="1116" fg:w="2"/><text x="89.7448%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5750%" y="485" width="0.0802%" height="15" fill="rgb(209,47,11)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="89.5750%" y="469" width="0.0802%" height="15" fill="rgb(219,179,23)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="89.6552%" y="469" width="0.0802%" height="15" fill="rgb(213,183,19)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="89.6552%" y="453" width="0.0802%" height="15" fill="rgb(210,11,9)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="89.4146%" y="517" width="0.4010%" height="15" fill="rgb(239,194,16)" fg:x="1115" fg:w="5"/><text x="89.6646%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="89.6552%" y="501" width="0.1604%" height="15" fill="rgb(246,23,50)" fg:x="1118" fg:w="2"/><text x="89.9052%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.6552%" y="485" width="0.1604%" height="15" fill="rgb(245,10,41)" fg:x="1118" fg:w="2"/><text x="89.9052%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.7354%" y="469" width="0.0802%" height="15" fill="rgb(228,43,24)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="89.7354%" y="453" width="0.0802%" height="15" fill="rgb(220,151,0)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.7354%" y="437" width="0.0802%" height="15" fill="rgb(232,219,10)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.7354%" y="421" width="0.0802%" height="15" fill="rgb(227,217,48)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.7354%" y="405" width="0.0802%" height="15" fill="rgb(210,66,35)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.7354%" y="389" width="0.0802%" height="15" fill="rgb(254,6,7)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7354%" y="373" width="0.0802%" height="15" fill="rgb(235,222,42)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="383.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (121 samples, 9.70%)</title><rect x="80.1925%" y="581" width="9.7033%" height="15" fill="rgb(245,126,5)" fg:x="1000" fg:w="121"/><text x="80.4425%" y="591.50">&lt;tests::Holdin..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (6 samples, 0.48%)</title><rect x="89.4146%" y="565" width="0.4812%" height="15" fill="rgb(215,73,17)" fg:x="1115" fg:w="6"/><text x="89.6646%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (6 samples, 0.48%)</title><rect x="89.4146%" y="549" width="0.4812%" height="15" fill="rgb(219,198,52)" fg:x="1115" fg:w="6"/><text x="89.6646%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="89.4146%" y="533" width="0.4812%" height="15" fill="rgb(217,159,18)" fg:x="1115" fg:w="6"/><text x="89.6646%" y="543.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="89.8156%" y="517" width="0.0802%" height="15" fill="rgb(212,177,18)" fg:x="1120" fg:w="1"/><text x="90.0656%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="89.8957%" y="565" width="0.0802%" height="15" fill="rgb(241,10,11)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8957%" y="549" width="0.0802%" height="15" fill="rgb(232,114,35)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8957%" y="533" width="0.0802%" height="15" fill="rgb(238,222,8)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.8957%" y="517" width="0.0802%" height="15" fill="rgb(251,153,44)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.8957%" y="501" width="0.0802%" height="15" fill="rgb(210,140,51)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.8957%" y="485" width="0.0802%" height="15" fill="rgb(222,63,0)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.8957%" y="469" width="0.0802%" height="15" fill="rgb(240,18,40)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.8957%" y="453" width="0.0802%" height="15" fill="rgb(237,88,16)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.8957%" y="437" width="0.0802%" height="15" fill="rgb(251,117,13)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.8957%" y="421" width="0.0802%" height="15" fill="rgb(251,228,8)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.8957%" y="405" width="0.0802%" height="15" fill="rgb(205,107,49)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.8957%" y="389" width="0.0802%" height="15" fill="rgb(238,72,41)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8957%" y="373" width="0.0802%" height="15" fill="rgb(248,183,52)" fg:x="1121" fg:w="1"/><text x="90.1457%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.9759%" y="533" width="0.0802%" height="15" fill="rgb(215,58,20)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.9759%" y="517" width="0.0802%" height="15" fill="rgb(209,49,13)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.9759%" y="501" width="0.0802%" height="15" fill="rgb(208,113,17)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.9759%" y="485" width="0.0802%" height="15" fill="rgb(208,14,22)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.0561%" y="453" width="0.0802%" height="15" fill="rgb(222,95,2)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.0561%" y="437" width="0.0802%" height="15" fill="rgb(253,180,37)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.0561%" y="421" width="0.0802%" height="15" fill="rgb(250,81,33)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.0561%" y="405" width="0.0802%" height="15" fill="rgb(251,151,41)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="90.0561%" y="469" width="0.1604%" height="15" fill="rgb(210,135,17)" fg:x="1123" fg:w="2"/><text x="90.3061%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.1363%" y="453" width="0.0802%" height="15" fill="rgb(239,21,29)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.2165%" y="453" width="0.1604%" height="15" fill="rgb(231,215,16)" fg:x="1125" fg:w="2"/><text x="90.4665%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.2967%" y="437" width="0.0802%" height="15" fill="rgb(239,151,54)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.2967%" y="421" width="0.0802%" height="15" fill="rgb(222,122,38)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.2967%" y="405" width="0.0802%" height="15" fill="rgb(243,128,1)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.2967%" y="389" width="0.0802%" height="15" fill="rgb(225,74,21)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.2967%" y="373" width="0.0802%" height="15" fill="rgb(216,210,10)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.2967%" y="357" width="0.0802%" height="15" fill="rgb(228,76,19)" fg:x="1126" fg:w="1"/><text x="90.5467%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.3769%" y="437" width="0.0802%" height="15" fill="rgb(236,80,34)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3769%" y="421" width="0.0802%" height="15" fill="rgb(225,173,23)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3769%" y="405" width="0.0802%" height="15" fill="rgb(253,38,1)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3769%" y="389" width="0.0802%" height="15" fill="rgb(206,155,35)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3769%" y="373" width="0.0802%" height="15" fill="rgb(254,27,53)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.4571%" y="437" width="0.1604%" height="15" fill="rgb(225,52,41)" fg:x="1128" fg:w="2"/><text x="90.7071%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.4571%" y="421" width="0.1604%" height="15" fill="rgb(244,53,18)" fg:x="1128" fg:w="2"/><text x="90.7071%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="90.4571%" y="405" width="0.1604%" height="15" fill="rgb(254,206,48)" fg:x="1128" fg:w="2"/><text x="90.7071%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.4571%" y="389" width="0.1604%" height="15" fill="rgb(236,182,23)" fg:x="1128" fg:w="2"/><text x="90.7071%" y="399.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="90.6175%" y="421" width="0.0802%" height="15" fill="rgb(236,191,37)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.6977%" y="421" width="0.1604%" height="15" fill="rgb(245,53,8)" fg:x="1131" fg:w="2"/><text x="90.9477%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.6977%" y="405" width="0.1604%" height="15" fill="rgb(245,147,9)" fg:x="1131" fg:w="2"/><text x="90.9477%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.7779%" y="389" width="0.0802%" height="15" fill="rgb(218,24,48)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.7779%" y="373" width="0.0802%" height="15" fill="rgb(254,23,9)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.7779%" y="357" width="0.0802%" height="15" fill="rgb(244,105,9)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.7779%" y="341" width="0.0802%" height="15" fill="rgb(212,142,22)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.7779%" y="325" width="0.0802%" height="15" fill="rgb(221,114,49)" fg:x="1132" fg:w="1"/><text x="91.0279%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="90.2165%" y="469" width="0.8019%" height="15" fill="rgb(223,210,25)" fg:x="1125" fg:w="10"/><text x="90.4665%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="90.3769%" y="453" width="0.6415%" height="15" fill="rgb(235,162,44)" fg:x="1127" fg:w="8"/><text x="90.6269%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="90.6175%" y="437" width="0.4010%" height="15" fill="rgb(237,65,45)" fg:x="1130" fg:w="5"/><text x="90.8675%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="90.8581%" y="421" width="0.1604%" height="15" fill="rgb(208,79,9)" fg:x="1133" fg:w="2"/><text x="91.1081%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.8581%" y="405" width="0.1604%" height="15" fill="rgb(215,228,8)" fg:x="1133" fg:w="2"/><text x="91.1081%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.9383%" y="389" width="0.0802%" height="15" fill="rgb(205,185,17)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.9383%" y="373" width="0.0802%" height="15" fill="rgb(213,62,36)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.04%)</title><rect x="90.0561%" y="485" width="1.0425%" height="15" fill="rgb(209,34,9)" fg:x="1123" fg:w="13"/><text x="90.3061%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.0184%" y="469" width="0.0802%" height="15" fill="rgb(246,151,27)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="91.0184%" y="453" width="0.0802%" height="15" fill="rgb(218,206,3)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.0184%" y="437" width="0.0802%" height="15" fill="rgb(242,202,1)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.0184%" y="421" width="0.0802%" height="15" fill="rgb(227,185,16)" fg:x="1135" fg:w="1"/><text x="91.2684%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.0986%" y="453" width="0.0802%" height="15" fill="rgb(241,1,14)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1788%" y="421" width="0.0802%" height="15" fill="rgb(212,113,25)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.2590%" y="421" width="0.0802%" height="15" fill="rgb(247,37,43)" fg:x="1138" fg:w="1"/><text x="91.5090%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.2590%" y="405" width="0.0802%" height="15" fill="rgb(226,54,8)" fg:x="1138" fg:w="1"/><text x="91.5090%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3392%" y="405" width="0.0802%" height="15" fill="rgb(251,205,25)" fg:x="1139" fg:w="1"/><text x="91.5892%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="91.0986%" y="485" width="0.4010%" height="15" fill="rgb(246,87,35)" fg:x="1136" fg:w="5"/><text x="91.3486%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="91.0986%" y="469" width="0.4010%" height="15" fill="rgb(251,145,46)" fg:x="1136" fg:w="5"/><text x="91.3486%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="91.1788%" y="453" width="0.3208%" height="15" fill="rgb(210,210,33)" fg:x="1137" fg:w="4"/><text x="91.4288%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="91.1788%" y="437" width="0.3208%" height="15" fill="rgb(221,151,11)" fg:x="1137" fg:w="4"/><text x="91.4288%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.3392%" y="421" width="0.1604%" height="15" fill="rgb(208,160,28)" fg:x="1139" fg:w="2"/><text x="91.5892%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="91.4194%" y="405" width="0.0802%" height="15" fill="rgb(243,69,29)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.4194%" y="389" width="0.0802%" height="15" fill="rgb(224,144,4)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4194%" y="373" width="0.0802%" height="15" fill="rgb(211,140,38)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4194%" y="357" width="0.0802%" height="15" fill="rgb(252,189,15)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.4194%" y="341" width="0.0802%" height="15" fill="rgb(251,175,23)" fg:x="1140" fg:w="1"/><text x="91.6694%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="91.5798%" y="405" width="0.1604%" height="15" fill="rgb(212,184,11)" fg:x="1142" fg:w="2"/><text x="91.8298%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.6600%" y="389" width="0.0802%" height="15" fill="rgb(217,205,6)" fg:x="1143" fg:w="1"/><text x="91.9100%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.7402%" y="389" width="0.1604%" height="15" fill="rgb(235,45,45)" fg:x="1144" fg:w="2"/><text x="91.9902%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="91.4996%" y="453" width="0.4812%" height="15" fill="rgb(211,157,53)" fg:x="1141" fg:w="6"/><text x="91.7496%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="91.4996%" y="437" width="0.4812%" height="15" fill="rgb(212,13,8)" fg:x="1141" fg:w="6"/><text x="91.7496%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="91.4996%" y="421" width="0.4812%" height="15" fill="rgb(218,80,36)" fg:x="1141" fg:w="6"/><text x="91.7496%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="91.7402%" y="405" width="0.2406%" height="15" fill="rgb(211,123,43)" fg:x="1144" fg:w="3"/><text x="91.9902%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.9006%" y="389" width="0.0802%" height="15" fill="rgb(206,165,2)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.9006%" y="373" width="0.0802%" height="15" fill="rgb(248,63,35)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.9006%" y="357" width="0.0802%" height="15" fill="rgb(219,133,41)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="367.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="91.9808%" y="453" width="0.0802%" height="15" fill="rgb(206,175,46)" fg:x="1147" fg:w="1"/><text x="92.2308%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.9808%" y="437" width="0.0802%" height="15" fill="rgb(224,41,35)" fg:x="1147" fg:w="1"/><text x="92.2308%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.9808%" y="421" width="0.0802%" height="15" fill="rgb(226,113,24)" fg:x="1147" fg:w="1"/><text x="92.2308%" y="431.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="92.0609%" y="453" width="0.0802%" height="15" fill="rgb(219,51,41)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.0609%" y="437" width="0.0802%" height="15" fill="rgb(220,145,47)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0609%" y="421" width="0.0802%" height="15" fill="rgb(239,121,47)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.88%)</title><rect x="91.4996%" y="469" width="0.8821%" height="15" fill="rgb(207,60,40)" fg:x="1141" fg:w="11"/><text x="91.7496%" y="479.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="92.1411%" y="453" width="0.2406%" height="15" fill="rgb(224,229,11)" fg:x="1149" fg:w="3"/><text x="92.3911%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="92.1411%" y="437" width="0.2406%" height="15" fill="rgb(252,28,32)" fg:x="1149" fg:w="3"/><text x="92.3911%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="92.2213%" y="421" width="0.1604%" height="15" fill="rgb(207,52,49)" fg:x="1150" fg:w="2"/><text x="92.4713%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="92.3015%" y="405" width="0.0802%" height="15" fill="rgb(243,51,50)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="92.3015%" y="389" width="0.0802%" height="15" fill="rgb(212,92,21)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.3015%" y="373" width="0.0802%" height="15" fill="rgb(230,183,50)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6223%" y="437" width="0.0802%" height="15" fill="rgb(225,48,9)" fg:x="1155" fg:w="1"/><text x="92.8723%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="92.7025%" y="437" width="0.0802%" height="15" fill="rgb(254,44,4)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.7025%" y="421" width="0.0802%" height="15" fill="rgb(252,128,37)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7025%" y="405" width="0.0802%" height="15" fill="rgb(227,178,8)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="92.9431%" y="389" width="0.2406%" height="15" fill="rgb(205,206,32)" fg:x="1159" fg:w="3"/><text x="93.1931%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1034%" y="373" width="0.0802%" height="15" fill="rgb(220,218,22)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="93.1836%" y="389" width="0.0802%" height="15" fill="rgb(236,41,28)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="93.1836%" y="373" width="0.0802%" height="15" fill="rgb(219,37,7)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="93.1836%" y="357" width="0.0802%" height="15" fill="rgb(206,160,15)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1836%" y="341" width="0.0802%" height="15" fill="rgb(208,82,21)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="92.8629%" y="405" width="0.8019%" height="15" fill="rgb(226,130,25)" fg:x="1158" fg:w="10"/><text x="93.1129%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="93.2638%" y="389" width="0.4010%" height="15" fill="rgb(212,72,24)" fg:x="1163" fg:w="5"/><text x="93.5138%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="93.4242%" y="373" width="0.2406%" height="15" fill="rgb(206,28,16)" fg:x="1165" fg:w="3"/><text x="93.6742%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="93.5044%" y="357" width="0.1604%" height="15" fill="rgb(249,41,5)" fg:x="1166" fg:w="2"/><text x="93.7544%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="93.5846%" y="341" width="0.0802%" height="15" fill="rgb(233,96,48)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5846%" y="325" width="0.0802%" height="15" fill="rgb(240,198,11)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="335.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.44%)</title><rect x="92.3817%" y="469" width="1.4435%" height="15" fill="rgb(209,175,35)" fg:x="1152" fg:w="18"/><text x="92.6317%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="92.5421%" y="453" width="1.2831%" height="15" fill="rgb(214,40,51)" fg:x="1154" fg:w="16"/><text x="92.7921%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="92.7827%" y="437" width="1.0425%" height="15" fill="rgb(252,56,4)" fg:x="1157" fg:w="13"/><text x="93.0327%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.96%)</title><rect x="92.8629%" y="421" width="0.9623%" height="15" fill="rgb(219,131,5)" fg:x="1158" fg:w="12"/><text x="93.1129%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="93.6648%" y="405" width="0.1604%" height="15" fill="rgb(223,67,53)" fg:x="1168" fg:w="2"/><text x="93.9148%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7450%" y="389" width="0.0802%" height="15" fill="rgb(227,154,8)" fg:x="1169" fg:w="1"/><text x="93.9950%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.9856%" y="293" width="0.0802%" height="15" fill="rgb(216,174,51)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.9856%" y="277" width="0.0802%" height="15" fill="rgb(239,60,34)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.9856%" y="261" width="0.0802%" height="15" fill="rgb(236,165,48)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9856%" y="245" width="0.0802%" height="15" fill="rgb(210,37,26)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="93.9054%" y="325" width="0.2406%" height="15" fill="rgb(211,3,17)" fg:x="1171" fg:w="3"/><text x="94.1554%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.9054%" y="309" width="0.2406%" height="15" fill="rgb(234,88,49)" fg:x="1171" fg:w="3"/><text x="94.1554%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.0658%" y="293" width="0.0802%" height="15" fill="rgb(233,40,17)" fg:x="1173" fg:w="1"/><text x="94.3158%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.1460%" y="261" width="0.0802%" height="15" fill="rgb(235,127,31)" fg:x="1174" fg:w="1"/><text x="94.3960%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.1460%" y="293" width="0.1604%" height="15" fill="rgb(248,167,17)" fg:x="1174" fg:w="2"/><text x="94.3960%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="94.1460%" y="277" width="0.1604%" height="15" fill="rgb(218,179,8)" fg:x="1174" fg:w="2"/><text x="94.3960%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2261%" y="261" width="0.0802%" height="15" fill="rgb(216,92,14)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="93.9054%" y="341" width="0.4812%" height="15" fill="rgb(221,198,46)" fg:x="1171" fg:w="6"/><text x="94.1554%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.1460%" y="325" width="0.2406%" height="15" fill="rgb(244,7,25)" fg:x="1174" fg:w="3"/><text x="94.3960%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.1460%" y="309" width="0.2406%" height="15" fill="rgb(233,75,6)" fg:x="1174" fg:w="3"/><text x="94.3960%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3063%" y="293" width="0.0802%" height="15" fill="rgb(240,189,41)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.4667%" y="325" width="0.0802%" height="15" fill="rgb(237,157,21)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="93.8252%" y="373" width="0.8019%" height="15" fill="rgb(210,136,49)" fg:x="1170" fg:w="10"/><text x="94.0752%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="93.9054%" y="357" width="0.7217%" height="15" fill="rgb(210,68,29)" fg:x="1171" fg:w="9"/><text x="94.1554%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="94.3865%" y="341" width="0.2406%" height="15" fill="rgb(247,207,20)" fg:x="1177" fg:w="3"/><text x="94.6365%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5469%" y="325" width="0.0802%" height="15" fill="rgb(224,73,48)" fg:x="1179" fg:w="1"/><text x="94.7969%" y="335.50"></text></g><g><title>engine::session::Session::close (60 samples, 4.81%)</title><rect x="89.8957%" y="581" width="4.8115%" height="15" fill="rgb(215,136,47)" fg:x="1121" fg:w="60"/><text x="90.1457%" y="591.50">engine..</text></g><g><title>engine::session::state::State::close (59 samples, 4.73%)</title><rect x="89.9759%" y="565" width="4.7314%" height="15" fill="rgb(232,222,16)" fg:x="1122" fg:w="59"/><text x="90.2259%" y="575.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (59 samples, 4.73%)</title><rect x="89.9759%" y="549" width="4.7314%" height="15" fill="rgb(249,202,47)" fg:x="1122" fg:w="59"/><text x="90.2259%" y="559.50">engine..</text></g><g><title>core::iter::adapters::try_process (58 samples, 4.65%)</title><rect x="90.0561%" y="533" width="4.6512%" height="15" fill="rgb(236,56,8)" fg:x="1123" fg:w="58"/><text x="90.3061%" y="543.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (58 samples, 4.65%)</title><rect x="90.0561%" y="517" width="4.6512%" height="15" fill="rgb(222,6,3)" fg:x="1123" fg:w="58"/><text x="90.3061%" y="527.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (58 samples, 4.65%)</title><rect x="90.0561%" y="501" width="4.6512%" height="15" fill="rgb(254,222,28)" fg:x="1123" fg:w="58"/><text x="90.3061%" y="511.50">engin..</text></g><g><title>kernel::model::any_entity_changes (40 samples, 3.21%)</title><rect x="91.4996%" y="485" width="3.2077%" height="15" fill="rgb(219,57,23)" fg:x="1141" fg:w="40"/><text x="91.7496%" y="495.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.88%)</title><rect x="93.8252%" y="469" width="0.8821%" height="15" fill="rgb(251,106,48)" fg:x="1170" fg:w="11"/><text x="94.0752%" y="479.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="93.8252%" y="453" width="0.8821%" height="15" fill="rgb(242,2,23)" fg:x="1170" fg:w="11"/><text x="94.0752%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="93.8252%" y="437" width="0.8821%" height="15" fill="rgb(212,109,31)" fg:x="1170" fg:w="11"/><text x="94.0752%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="93.8252%" y="421" width="0.8821%" height="15" fill="rgb(241,9,22)" fg:x="1170" fg:w="11"/><text x="94.0752%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="93.8252%" y="405" width="0.8821%" height="15" fill="rgb(209,64,27)" fg:x="1170" fg:w="11"/><text x="94.0752%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="93.8252%" y="389" width="0.8821%" height="15" fill="rgb(248,13,44)" fg:x="1170" fg:w="11"/><text x="94.0752%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6271%" y="373" width="0.0802%" height="15" fill="rgb(213,86,6)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6271%" y="357" width="0.0802%" height="15" fill="rgb(247,11,18)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6271%" y="341" width="0.0802%" height="15" fill="rgb(252,31,11)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="351.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="94.7073%" y="549" width="0.1604%" height="15" fill="rgb(215,63,51)" fg:x="1181" fg:w="2"/><text x="94.9573%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="94.7875%" y="533" width="0.0802%" height="15" fill="rgb(222,180,4)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="543.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="94.7875%" y="517" width="0.0802%" height="15" fill="rgb(233,4,23)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="527.50"></text></g><g><title>&lt;plugins_rune::parser::RegisterActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="94.7875%" y="501" width="0.0802%" height="15" fill="rgb(230,116,22)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="94.7875%" y="485" width="0.0802%" height="15" fill="rgb(222,20,14)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="94.8677%" y="533" width="0.0802%" height="15" fill="rgb(210,176,43)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.8677%" y="517" width="0.0802%" height="15" fill="rgb(219,67,32)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.8677%" y="501" width="0.0802%" height="15" fill="rgb(228,91,39)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.8677%" y="485" width="0.0802%" height="15" fill="rgb(254,63,14)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="94.8677%" y="469" width="0.0802%" height="15" fill="rgb(216,171,39)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (1 samples, 0.08%)</title><rect x="94.8677%" y="453" width="0.0802%" height="15" fill="rgb(248,68,25)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="463.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="94.8677%" y="437" width="0.0802%" height="15" fill="rgb(239,63,16)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="94.8677%" y="421" width="0.0802%" height="15" fill="rgb(225,111,43)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.8677%" y="405" width="0.0802%" height="15" fill="rgb(246,165,17)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.8677%" y="389" width="0.0802%" height="15" fill="rgb(208,124,1)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="94.8677%" y="373" width="0.0802%" height="15" fill="rgb(234,147,33)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="94.8677%" y="357" width="0.0802%" height="15" fill="rgb(240,86,30)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="94.8677%" y="341" width="0.0802%" height="15" fill="rgb(237,34,51)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="94.8677%" y="325" width="0.0802%" height="15" fill="rgb(232,131,41)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="94.8677%" y="309" width="0.0802%" height="15" fill="rgb(227,129,53)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="94.8677%" y="293" width="0.0802%" height="15" fill="rgb(230,90,35)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="94.8677%" y="277" width="0.0802%" height="15" fill="rgb(248,88,27)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="287.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (3 samples, 0.24%)</title><rect x="94.9479%" y="517" width="0.2406%" height="15" fill="rgb(223,18,17)" fg:x="1184" fg:w="3"/><text x="95.1979%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (2 samples, 0.16%)</title><rect x="95.0281%" y="501" width="0.1604%" height="15" fill="rgb(241,11,10)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (2 samples, 0.16%)</title><rect x="95.0281%" y="485" width="0.1604%" height="15" fill="rgb(232,111,52)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (2 samples, 0.16%)</title><rect x="95.0281%" y="469" width="0.1604%" height="15" fill="rgb(228,67,8)" fg:x="1185" fg:w="2"/><text x="95.2781%" y="479.50"></text></g><g><title>tracing_core::subscriber::Subscriber::register_callsite (1 samples, 0.08%)</title><rect x="95.1083%" y="453" width="0.0802%" height="15" fill="rgb(251,168,31)" fg:x="1186" fg:w="1"/><text x="95.3583%" y="463.50"></text></g><g><title>&lt;engine::session::logs::SessionSubscriber as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.08%)</title><rect x="95.1083%" y="437" width="0.0802%" height="15" fill="rgb(249,164,11)" fg:x="1186" fg:w="1"/><text x="95.3583%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3488%" y="293" width="0.0802%" height="15" fill="rgb(239,81,9)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.3488%" y="309" width="0.2406%" height="15" fill="rgb(222,145,38)" fg:x="1189" fg:w="3"/><text x="95.5988%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.4290%" y="293" width="0.1604%" height="15" fill="rgb(238,80,54)" fg:x="1190" fg:w="2"/><text x="95.6790%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5092%" y="277" width="0.0802%" height="15" fill="rgb(237,116,16)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5092%" y="261" width="0.0802%" height="15" fill="rgb(218,135,19)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5092%" y="245" width="0.0802%" height="15" fill="rgb(216,207,44)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5092%" y="229" width="0.0802%" height="15" fill="rgb(226,152,40)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5092%" y="213" width="0.0802%" height="15" fill="rgb(219,98,35)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5092%" y="197" width="0.0802%" height="15" fill="rgb(222,136,46)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5092%" y="181" width="0.0802%" height="15" fill="rgb(222,71,8)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5092%" y="165" width="0.0802%" height="15" fill="rgb(209,89,53)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5092%" y="149" width="0.0802%" height="15" fill="rgb(210,97,51)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5092%" y="133" width="0.0802%" height="15" fill="rgb(248,65,21)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5092%" y="117" width="0.0802%" height="15" fill="rgb(222,5,31)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5092%" y="101" width="0.0802%" height="15" fill="rgb(241,16,30)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5092%" y="85" width="0.0802%" height="15" fill="rgb(215,86,30)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5092%" y="69" width="0.0802%" height="15" fill="rgb(235,26,44)" fg:x="1191" fg:w="1"/><text x="95.7592%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="95.2686%" y="341" width="0.4010%" height="15" fill="rgb(228,147,14)" fg:x="1188" fg:w="5"/><text x="95.5186%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="95.2686%" y="325" width="0.4010%" height="15" fill="rgb(253,38,50)" fg:x="1188" fg:w="5"/><text x="95.5186%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5894%" y="309" width="0.0802%" height="15" fill="rgb(251,151,16)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5894%" y="293" width="0.0802%" height="15" fill="rgb(224,64,19)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5894%" y="277" width="0.0802%" height="15" fill="rgb(235,214,47)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5894%" y="261" width="0.0802%" height="15" fill="rgb(218,15,19)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5894%" y="245" width="0.0802%" height="15" fill="rgb(247,209,3)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5894%" y="229" width="0.0802%" height="15" fill="rgb(217,29,2)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5894%" y="213" width="0.0802%" height="15" fill="rgb(234,9,9)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5894%" y="197" width="0.0802%" height="15" fill="rgb(207,43,14)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5894%" y="181" width="0.0802%" height="15" fill="rgb(216,219,36)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5894%" y="165" width="0.0802%" height="15" fill="rgb(238,12,26)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5894%" y="149" width="0.0802%" height="15" fill="rgb(226,67,30)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5894%" y="133" width="0.0802%" height="15" fill="rgb(229,154,7)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="95.6696%" y="341" width="0.0802%" height="15" fill="rgb(249,90,18)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6696%" y="325" width="0.0802%" height="15" fill="rgb(223,53,15)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6696%" y="309" width="0.0802%" height="15" fill="rgb(253,86,38)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6696%" y="293" width="0.0802%" height="15" fill="rgb(222,198,9)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6696%" y="277" width="0.0802%" height="15" fill="rgb(240,146,25)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="287.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="95.7498%" y="341" width="0.0802%" height="15" fill="rgb(225,38,10)" fg:x="1194" fg:w="1"/><text x="95.9998%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8300%" y="261" width="0.0802%" height="15" fill="rgb(246,93,4)" fg:x="1195" fg:w="1"/><text x="96.0800%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.8300%" y="245" width="0.0802%" height="15" fill="rgb(222,55,18)" fg:x="1195" fg:w="1"/><text x="96.0800%" y="255.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="95.8300%" y="341" width="0.1604%" height="15" fill="rgb(233,137,48)" fg:x="1195" fg:w="2"/><text x="96.0800%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.8300%" y="325" width="0.1604%" height="15" fill="rgb(214,8,54)" fg:x="1195" fg:w="2"/><text x="96.0800%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8300%" y="309" width="0.1604%" height="15" fill="rgb(206,75,4)" fg:x="1195" fg:w="2"/><text x="96.0800%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="95.8300%" y="293" width="0.1604%" height="15" fill="rgb(238,171,14)" fg:x="1195" fg:w="2"/><text x="96.0800%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8300%" y="277" width="0.1604%" height="15" fill="rgb(233,70,41)" fg:x="1195" fg:w="2"/><text x="96.0800%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.9102%" y="261" width="0.0802%" height="15" fill="rgb(214,68,36)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9102%" y="245" width="0.0802%" height="15" fill="rgb(223,29,5)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9102%" y="229" width="0.0802%" height="15" fill="rgb(251,22,40)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.9102%" y="213" width="0.0802%" height="15" fill="rgb(210,67,41)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9904%" y="197" width="0.0802%" height="15" fill="rgb(225,177,31)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9904%" y="181" width="0.0802%" height="15" fill="rgb(221,229,11)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9904%" y="165" width="0.0802%" height="15" fill="rgb(247,172,52)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9904%" y="149" width="0.0802%" height="15" fill="rgb(212,73,19)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9904%" y="133" width="0.0802%" height="15" fill="rgb(244,7,46)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9904%" y="117" width="0.0802%" height="15" fill="rgb(230,113,20)" fg:x="1197" fg:w="1"/><text x="96.2404%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.9904%" y="213" width="0.1604%" height="15" fill="rgb(209,97,30)" fg:x="1197" fg:w="2"/><text x="96.2404%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0706%" y="197" width="0.0802%" height="15" fill="rgb(243,89,12)" fg:x="1198" fg:w="1"/><text x="96.3206%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.0706%" y="181" width="0.0802%" height="15" fill="rgb(228,32,19)" fg:x="1198" fg:w="1"/><text x="96.3206%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0706%" y="165" width="0.0802%" height="15" fill="rgb(248,25,17)" fg:x="1198" fg:w="1"/><text x="96.3206%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.0706%" y="149" width="0.0802%" height="15" fill="rgb(232,161,29)" fg:x="1198" fg:w="1"/><text x="96.3206%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.0706%" y="133" width="0.0802%" height="15" fill="rgb(251,192,11)" fg:x="1198" fg:w="1"/><text x="96.3206%" y="143.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (13 samples, 1.04%)</title><rect x="95.1885%" y="437" width="1.0425%" height="15" fill="rgb(240,47,32)" fg:x="1187" fg:w="13"/><text x="95.4385%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (13 samples, 1.04%)</title><rect x="95.1885%" y="421" width="1.0425%" height="15" fill="rgb(250,16,45)" fg:x="1187" fg:w="13"/><text x="95.4385%" y="431.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (13 samples, 1.04%)</title><rect x="95.1885%" y="405" width="1.0425%" height="15" fill="rgb(227,217,42)" fg:x="1187" fg:w="13"/><text x="95.4385%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (13 samples, 1.04%)</title><rect x="95.1885%" y="389" width="1.0425%" height="15" fill="rgb(206,82,54)" fg:x="1187" fg:w="13"/><text x="95.4385%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (13 samples, 1.04%)</title><rect x="95.1885%" y="373" width="1.0425%" height="15" fill="rgb(243,145,25)" fg:x="1187" fg:w="13"/><text x="95.4385%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="95.1885%" y="357" width="1.0425%" height="15" fill="rgb(207,166,24)" fg:x="1187" fg:w="13"/><text x="95.4385%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="95.9904%" y="341" width="0.2406%" height="15" fill="rgb(215,191,44)" fg:x="1197" fg:w="3"/><text x="96.2404%" y="351.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="95.9904%" y="325" width="0.2406%" height="15" fill="rgb(234,218,51)" fg:x="1197" fg:w="3"/><text x="96.2404%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.9904%" y="309" width="0.2406%" height="15" fill="rgb(245,133,21)" fg:x="1197" fg:w="3"/><text x="96.2404%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.9904%" y="293" width="0.2406%" height="15" fill="rgb(230,136,45)" fg:x="1197" fg:w="3"/><text x="96.2404%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.9904%" y="277" width="0.2406%" height="15" fill="rgb(247,63,43)" fg:x="1197" fg:w="3"/><text x="96.2404%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.9904%" y="261" width="0.2406%" height="15" fill="rgb(254,223,31)" fg:x="1197" fg:w="3"/><text x="96.2404%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.9904%" y="245" width="0.2406%" height="15" fill="rgb(236,185,0)" fg:x="1197" fg:w="3"/><text x="96.2404%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.9904%" y="229" width="0.2406%" height="15" fill="rgb(231,139,46)" fg:x="1197" fg:w="3"/><text x="96.2404%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.1508%" y="213" width="0.0802%" height="15" fill="rgb(236,147,31)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1508%" y="197" width="0.0802%" height="15" fill="rgb(225,222,22)" fg:x="1199" fg:w="1"/><text x="96.4008%" y="207.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.3111%" y="373" width="0.0802%" height="15" fill="rgb(225,193,14)" fg:x="1201" fg:w="1"/><text x="96.5611%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="96.5517%" y="197" width="0.1604%" height="15" fill="rgb(253,193,46)" fg:x="1204" fg:w="2"/><text x="96.8017%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="96.5517%" y="181" width="0.1604%" height="15" fill="rgb(218,187,39)" fg:x="1204" fg:w="2"/><text x="96.8017%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="96.5517%" y="165" width="0.1604%" height="15" fill="rgb(227,162,48)" fg:x="1204" fg:w="2"/><text x="96.8017%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.5517%" y="149" width="0.1604%" height="15" fill="rgb(222,25,5)" fg:x="1204" fg:w="2"/><text x="96.8017%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.5517%" y="341" width="0.2406%" height="15" fill="rgb(211,205,16)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="96.5517%" y="325" width="0.2406%" height="15" fill="rgb(244,191,2)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="96.5517%" y="309" width="0.2406%" height="15" fill="rgb(248,159,12)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="96.5517%" y="293" width="0.2406%" height="15" fill="rgb(235,204,17)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="96.5517%" y="277" width="0.2406%" height="15" fill="rgb(240,21,27)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="96.5517%" y="261" width="0.2406%" height="15" fill="rgb(224,170,31)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="96.5517%" y="245" width="0.2406%" height="15" fill="rgb(223,145,32)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="96.5517%" y="229" width="0.2406%" height="15" fill="rgb(243,100,5)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="96.5517%" y="213" width="0.2406%" height="15" fill="rgb(242,131,51)" fg:x="1204" fg:w="3"/><text x="96.8017%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="96.7121%" y="197" width="0.0802%" height="15" fill="rgb(223,156,46)" fg:x="1206" fg:w="1"/><text x="96.9621%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="96.7121%" y="181" width="0.0802%" height="15" fill="rgb(215,10,40)" fg:x="1206" fg:w="1"/><text x="96.9621%" y="191.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.48%)</title><rect x="96.3913%" y="357" width="0.4812%" height="15" fill="rgb(233,155,0)" fg:x="1202" fg:w="6"/><text x="96.6413%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7923%" y="341" width="0.0802%" height="15" fill="rgb(247,78,6)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7923%" y="325" width="0.0802%" height="15" fill="rgb(237,217,21)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.7923%" y="309" width="0.0802%" height="15" fill="rgb(212,1,21)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.7923%" y="293" width="0.0802%" height="15" fill="rgb(213,7,14)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8725%" y="293" width="0.0802%" height="15" fill="rgb(225,84,14)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8725%" y="277" width="0.0802%" height="15" fill="rgb(239,216,39)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8725%" y="261" width="0.0802%" height="15" fill="rgb(253,29,23)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8725%" y="245" width="0.0802%" height="15" fill="rgb(220,167,50)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8725%" y="229" width="0.0802%" height="15" fill="rgb(232,141,1)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8725%" y="213" width="0.0802%" height="15" fill="rgb(222,210,1)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.8725%" y="197" width="0.0802%" height="15" fill="rgb(219,84,10)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.8725%" y="181" width="0.0802%" height="15" fill="rgb(245,188,6)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.8725%" y="165" width="0.0802%" height="15" fill="rgb(252,139,39)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.8725%" y="149" width="0.0802%" height="15" fill="rgb(218,42,26)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.8725%" y="133" width="0.0802%" height="15" fill="rgb(237,226,51)" fg:x="1208" fg:w="1"/><text x="97.1225%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="96.9527%" y="293" width="0.0802%" height="15" fill="rgb(246,15,17)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9527%" y="277" width="0.0802%" height="15" fill="rgb(228,170,42)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9527%" y="261" width="0.0802%" height="15" fill="rgb(248,118,53)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9527%" y="245" width="0.0802%" height="15" fill="rgb(207,30,10)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9527%" y="229" width="0.0802%" height="15" fill="rgb(217,104,38)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9527%" y="213" width="0.0802%" height="15" fill="rgb(211,165,26)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.9527%" y="197" width="0.0802%" height="15" fill="rgb(247,38,9)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.9527%" y="181" width="0.0802%" height="15" fill="rgb(218,187,8)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.9527%" y="165" width="0.0802%" height="15" fill="rgb(247,94,28)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9527%" y="149" width="0.0802%" height="15" fill="rgb(218,173,30)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9527%" y="133" width="0.0802%" height="15" fill="rgb(245,45,36)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.9527%" y="117" width="0.0802%" height="15" fill="rgb(221,172,44)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.9527%" y="101" width="0.0802%" height="15" fill="rgb(222,45,12)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.9527%" y="85" width="0.0802%" height="15" fill="rgb(250,10,22)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.9527%" y="69" width="0.0802%" height="15" fill="rgb(239,27,0)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9527%" y="53" width="0.0802%" height="15" fill="rgb(223,118,22)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="63.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1131%" y="133" width="0.0802%" height="15" fill="rgb(251,81,25)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="97.0329%" y="245" width="0.2406%" height="15" fill="rgb(237,225,53)" fg:x="1210" fg:w="3"/><text x="97.2829%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.0329%" y="229" width="0.2406%" height="15" fill="rgb(237,186,51)" fg:x="1210" fg:w="3"/><text x="97.2829%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.0329%" y="213" width="0.2406%" height="15" fill="rgb(247,209,11)" fg:x="1210" fg:w="3"/><text x="97.2829%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="97.0329%" y="197" width="0.2406%" height="15" fill="rgb(223,109,27)" fg:x="1210" fg:w="3"/><text x="97.2829%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="97.1131%" y="181" width="0.1604%" height="15" fill="rgb(246,181,13)" fg:x="1211" fg:w="2"/><text x="97.3631%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.1131%" y="165" width="0.1604%" height="15" fill="rgb(234,57,44)" fg:x="1211" fg:w="2"/><text x="97.3631%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.1131%" y="149" width="0.1604%" height="15" fill="rgb(211,227,50)" fg:x="1211" fg:w="2"/><text x="97.3631%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.1933%" y="133" width="0.0802%" height="15" fill="rgb(254,57,34)" fg:x="1212" fg:w="1"/><text x="97.4433%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="97.0329%" y="293" width="0.3208%" height="15" fill="rgb(227,212,26)" fg:x="1210" fg:w="4"/><text x="97.2829%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="97.0329%" y="277" width="0.3208%" height="15" fill="rgb(244,169,44)" fg:x="1210" fg:w="4"/><text x="97.2829%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.0329%" y="261" width="0.3208%" height="15" fill="rgb(236,135,50)" fg:x="1210" fg:w="4"/><text x="97.2829%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2735%" y="245" width="0.0802%" height="15" fill="rgb(241,89,30)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2735%" y="229" width="0.0802%" height="15" fill="rgb(206,113,34)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="239.50"></text></g><g><title>plugins_core::tools::contained_by (14 samples, 1.12%)</title><rect x="96.3913%" y="373" width="1.1227%" height="15" fill="rgb(218,104,52)" fg:x="1202" fg:w="14"/><text x="96.6413%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (8 samples, 0.64%)</title><rect x="96.8725%" y="357" width="0.6415%" height="15" fill="rgb(223,82,32)" fg:x="1208" fg:w="8"/><text x="97.1225%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (8 samples, 0.64%)</title><rect x="96.8725%" y="341" width="0.6415%" height="15" fill="rgb(249,219,30)" fg:x="1208" fg:w="8"/><text x="97.1225%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.64%)</title><rect x="96.8725%" y="325" width="0.6415%" height="15" fill="rgb(233,141,21)" fg:x="1208" fg:w="8"/><text x="97.1225%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="96.8725%" y="309" width="0.6415%" height="15" fill="rgb(252,87,44)" fg:x="1208" fg:w="8"/><text x="97.1225%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="97.3536%" y="293" width="0.1604%" height="15" fill="rgb(229,48,33)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="303.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="97.3536%" y="277" width="0.1604%" height="15" fill="rgb(229,23,22)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3536%" y="261" width="0.1604%" height="15" fill="rgb(244,116,16)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3536%" y="245" width="0.1604%" height="15" fill="rgb(247,45,10)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3536%" y="229" width="0.1604%" height="15" fill="rgb(228,60,29)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3536%" y="213" width="0.1604%" height="15" fill="rgb(205,129,15)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3536%" y="197" width="0.1604%" height="15" fill="rgb(206,229,4)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3536%" y="181" width="0.1604%" height="15" fill="rgb(249,191,30)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.4338%" y="165" width="0.0802%" height="15" fill="rgb(250,84,54)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.4338%" y="149" width="0.0802%" height="15" fill="rgb(207,25,53)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.4338%" y="133" width="0.0802%" height="15" fill="rgb(235,40,8)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="97.4338%" y="117" width="0.0802%" height="15" fill="rgb(226,169,33)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5942%" y="341" width="0.0802%" height="15" fill="rgb(238,110,8)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.6744%" y="309" width="0.0802%" height="15" fill="rgb(251,206,12)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.6744%" y="293" width="0.0802%" height="15" fill="rgb(248,171,18)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.6744%" y="277" width="0.0802%" height="15" fill="rgb(213,65,46)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="287.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.6744%" y="261" width="0.0802%" height="15" fill="rgb(211,154,15)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6744%" y="245" width="0.0802%" height="15" fill="rgb(217,75,43)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6744%" y="229" width="0.0802%" height="15" fill="rgb(230,32,33)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.6744%" y="213" width="0.0802%" height="15" fill="rgb(221,100,16)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="223.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="97.5140%" y="357" width="0.3208%" height="15" fill="rgb(212,129,47)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.6744%" y="341" width="0.1604%" height="15" fill="rgb(239,217,47)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6744%" y="325" width="0.1604%" height="15" fill="rgb(230,84,24)" fg:x="1218" fg:w="2"/><text x="97.9244%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7546%" y="309" width="0.0802%" height="15" fill="rgb(214,153,51)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7546%" y="293" width="0.0802%" height="15" fill="rgb(231,6,35)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.7546%" y="277" width="0.0802%" height="15" fill="rgb(229,122,30)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="287.50"></text></g><g><title>plugins_core::tools::occupied_by (5 samples, 0.40%)</title><rect x="97.5140%" y="373" width="0.4010%" height="15" fill="rgb(234,71,10)" fg:x="1216" fg:w="5"/><text x="97.7640%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="97.8348%" y="357" width="0.0802%" height="15" fill="rgb(215,173,26)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Route&gt; (1 samples, 0.08%)</title><rect x="97.8348%" y="341" width="0.0802%" height="15" fill="rgb(248,118,52)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.8348%" y="325" width="0.0802%" height="15" fill="rgb(237,55,46)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="335.50"></text></g><g><title>engine::session::Session::captured (39 samples, 3.13%)</title><rect x="94.8677%" y="549" width="3.1275%" height="15" fill="rgb(243,214,43)" fg:x="1183" fg:w="39"/><text x="95.1177%" y="559.50">eng..</text></g><g><title>engine::session::logs::capture (38 samples, 3.05%)</title><rect x="94.9479%" y="533" width="3.0473%" height="15" fill="rgb(252,123,30)" fg:x="1184" fg:w="38"/><text x="95.1979%" y="543.50">eng..</text></g><g><title>tracing_core::dispatcher::with_default (35 samples, 2.81%)</title><rect x="95.1885%" y="517" width="2.8067%" height="15" fill="rgb(215,73,39)" fg:x="1187" fg:w="35"/><text x="95.4385%" y="527.50">tr..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (35 samples, 2.81%)</title><rect x="95.1885%" y="501" width="2.8067%" height="15" fill="rgb(251,194,29)" fg:x="1187" fg:w="35"/><text x="95.4385%" y="511.50">&lt;e..</text></g><g><title>kernel::plugins::mw::apply_middleware (35 samples, 2.81%)</title><rect x="95.1885%" y="485" width="2.8067%" height="15" fill="rgb(224,58,52)" fg:x="1187" fg:w="35"/><text x="95.4385%" y="495.50">ke..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (35 samples, 2.81%)</title><rect x="95.1885%" y="469" width="2.8067%" height="15" fill="rgb(248,106,46)" fg:x="1187" fg:w="35"/><text x="95.4385%" y="479.50">ke..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (35 samples, 2.81%)</title><rect x="95.1885%" y="453" width="2.8067%" height="15" fill="rgb(223,80,29)" fg:x="1187" fg:w="35"/><text x="95.4385%" y="463.50">&lt;e..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (22 samples, 1.76%)</title><rect x="96.2310%" y="437" width="1.7642%" height="15" fill="rgb(243,137,9)" fg:x="1200" fg:w="22"/><text x="96.4810%" y="447.50"></text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (22 samples, 1.76%)</title><rect x="96.2310%" y="421" width="1.7642%" height="15" fill="rgb(235,121,28)" fg:x="1200" fg:w="22"/><text x="96.4810%" y="431.50"></text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (21 samples, 1.68%)</title><rect x="96.3111%" y="405" width="1.6840%" height="15" fill="rgb(219,121,41)" fg:x="1201" fg:w="21"/><text x="96.5611%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (21 samples, 1.68%)</title><rect x="96.3111%" y="389" width="1.6840%" height="15" fill="rgb(251,60,6)" fg:x="1201" fg:w="21"/><text x="96.5611%" y="399.50"></text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="97.9150%" y="373" width="0.0802%" height="15" fill="rgb(208,12,30)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.9150%" y="357" width="0.0802%" height="15" fill="rgb(207,176,36)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="97.9150%" y="341" width="0.0802%" height="15" fill="rgb(211,188,29)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.9150%" y="325" width="0.0802%" height="15" fill="rgb(220,184,37)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.9150%" y="309" width="0.0802%" height="15" fill="rgb(239,87,37)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.9952%" y="517" width="0.0802%" height="15" fill="rgb(232,113,44)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="97.9952%" y="501" width="0.0802%" height="15" fill="rgb(246,25,39)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.9952%" y="485" width="0.0802%" height="15" fill="rgb(247,30,13)" fg:x="1222" fg:w="1"/><text x="98.2452%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0754%" y="469" width="0.0802%" height="15" fill="rgb(230,176,35)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0754%" y="453" width="0.0802%" height="15" fill="rgb(222,23,18)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0754%" y="437" width="0.0802%" height="15" fill="rgb(234,86,8)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0754%" y="421" width="0.0802%" height="15" fill="rgb(206,218,47)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0754%" y="405" width="0.0802%" height="15" fill="rgb(229,35,31)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0754%" y="389" width="0.0802%" height="15" fill="rgb(242,81,7)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0754%" y="373" width="0.0802%" height="15" fill="rgb(231,11,35)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0754%" y="357" width="0.0802%" height="15" fill="rgb(219,218,17)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0754%" y="341" width="0.0802%" height="15" fill="rgb(221,83,32)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0754%" y="325" width="0.0802%" height="15" fill="rgb(233,49,54)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0754%" y="309" width="0.0802%" height="15" fill="rgb(206,18,51)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0754%" y="501" width="0.1604%" height="15" fill="rgb(249,193,15)" fg:x="1223" fg:w="2"/><text x="98.3254%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.0754%" y="485" width="0.1604%" height="15" fill="rgb(245,186,19)" fg:x="1223" fg:w="2"/><text x="98.3254%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1556%" y="469" width="0.0802%" height="15" fill="rgb(230,4,24)" fg:x="1224" fg:w="1"/><text x="98.4056%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.2358%" y="469" width="0.0802%" height="15" fill="rgb(234,75,27)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3160%" y="453" width="0.0802%" height="15" fill="rgb(244,187,35)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3160%" y="437" width="0.0802%" height="15" fill="rgb(241,97,43)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3160%" y="421" width="0.0802%" height="15" fill="rgb(236,94,2)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3160%" y="405" width="0.0802%" height="15" fill="rgb(231,175,7)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3160%" y="389" width="0.0802%" height="15" fill="rgb(236,89,47)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3160%" y="373" width="0.0802%" height="15" fill="rgb(213,191,37)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.3160%" y="357" width="0.0802%" height="15" fill="rgb(252,0,34)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.3160%" y="341" width="0.0802%" height="15" fill="rgb(208,145,44)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.3160%" y="325" width="0.0802%" height="15" fill="rgb(227,95,50)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3160%" y="309" width="0.0802%" height="15" fill="rgb(222,136,24)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3160%" y="293" width="0.0802%" height="15" fill="rgb(218,105,10)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.3160%" y="277" width="0.0802%" height="15" fill="rgb(216,65,28)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.3160%" y="261" width="0.0802%" height="15" fill="rgb(229,6,28)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.3160%" y="245" width="0.0802%" height="15" fill="rgb(222,160,42)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.3160%" y="229" width="0.0802%" height="15" fill="rgb(235,83,49)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3160%" y="213" width="0.0802%" height="15" fill="rgb(236,86,36)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4763%" y="405" width="0.0802%" height="15" fill="rgb(236,19,41)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="415.50"></text></g><g><title>engine::session::internal::Added::find_refs (8 samples, 0.64%)</title><rect x="97.9952%" y="533" width="0.6415%" height="15" fill="rgb(217,71,31)" fg:x="1222" fg:w="8"/><text x="98.2452%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="98.0754%" y="517" width="0.5613%" height="15" fill="rgb(236,209,25)" fg:x="1223" fg:w="7"/><text x="98.3254%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="98.2358%" y="501" width="0.4010%" height="15" fill="rgb(247,104,21)" fg:x="1225" fg:w="5"/><text x="98.4858%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="98.2358%" y="485" width="0.4010%" height="15" fill="rgb(243,80,38)" fg:x="1225" fg:w="5"/><text x="98.4858%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="98.3160%" y="469" width="0.3208%" height="15" fill="rgb(232,109,38)" fg:x="1226" fg:w="4"/><text x="98.5660%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="98.3962%" y="453" width="0.2406%" height="15" fill="rgb(212,177,53)" fg:x="1227" fg:w="3"/><text x="98.6462%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="98.3962%" y="437" width="0.2406%" height="15" fill="rgb(227,30,34)" fg:x="1227" fg:w="3"/><text x="98.6462%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="98.3962%" y="421" width="0.2406%" height="15" fill="rgb(205,175,25)" fg:x="1227" fg:w="3"/><text x="98.6462%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="98.5565%" y="405" width="0.0802%" height="15" fill="rgb(249,39,54)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.5565%" y="389" width="0.0802%" height="15" fill="rgb(215,54,37)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="98.5565%" y="373" width="0.0802%" height="15" fill="rgb(205,60,46)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.5565%" y="357" width="0.0802%" height="15" fill="rgb(238,89,29)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5565%" y="341" width="0.0802%" height="15" fill="rgb(212,48,10)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="98.5565%" y="325" width="0.0802%" height="15" fill="rgb(237,186,28)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="98.5565%" y="309" width="0.0802%" height="15" fill="rgb(237,204,4)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::unexpected (1 samples, 0.08%)</title><rect x="98.5565%" y="293" width="0.0802%" height="15" fill="rgb(237,15,47)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="98.6367%" y="517" width="0.0802%" height="15" fill="rgb(244,110,25)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6367%" y="501" width="0.0802%" height="15" fill="rgb(241,12,16)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6367%" y="485" width="0.0802%" height="15" fill="rgb(235,25,9)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.6367%" y="469" width="0.0802%" height="15" fill="rgb(245,159,19)" fg:x="1230" fg:w="1"/><text x="98.8867%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.7169%" y="389" width="0.1604%" height="15" fill="rgb(236,63,32)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7169%" y="373" width="0.1604%" height="15" fill="rgb(235,32,52)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="98.7169%" y="357" width="0.1604%" height="15" fill="rgb(209,176,21)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7971%" y="341" width="0.0802%" height="15" fill="rgb(205,90,42)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7971%" y="325" width="0.0802%" height="15" fill="rgb(213,132,16)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.7971%" y="309" width="0.0802%" height="15" fill="rgb(232,11,22)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="98.7169%" y="517" width="0.2406%" height="15" fill="rgb(248,167,41)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.7169%" y="501" width="0.2406%" height="15" fill="rgb(209,127,6)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.7169%" y="485" width="0.2406%" height="15" fill="rgb(246,210,34)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="98.7169%" y="469" width="0.2406%" height="15" fill="rgb(238,165,13)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.7169%" y="453" width="0.2406%" height="15" fill="rgb(233,98,15)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.7169%" y="437" width="0.2406%" height="15" fill="rgb(215,215,51)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="98.7169%" y="421" width="0.2406%" height="15" fill="rgb(217,161,25)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.7169%" y="405" width="0.2406%" height="15" fill="rgb(217,167,48)" fg:x="1231" fg:w="3"/><text x="98.9669%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.8773%" y="389" width="0.0802%" height="15" fill="rgb(205,163,34)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8773%" y="373" width="0.0802%" height="15" fill="rgb(241,197,31)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8773%" y="357" width="0.0802%" height="15" fill="rgb(225,123,11)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8773%" y="341" width="0.0802%" height="15" fill="rgb(217,4,20)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.8773%" y="325" width="0.0802%" height="15" fill="rgb(215,55,9)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9575%" y="453" width="0.0802%" height="15" fill="rgb(218,165,5)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9575%" y="437" width="0.0802%" height="15" fill="rgb(222,175,15)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (14 samples, 1.12%)</title><rect x="97.9952%" y="549" width="1.1227%" height="15" fill="rgb(223,85,34)" fg:x="1222" fg:w="14"/><text x="98.2452%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="98.6367%" y="533" width="0.4812%" height="15" fill="rgb(234,228,29)" fg:x="1230" fg:w="6"/><text x="98.8867%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="98.9575%" y="517" width="0.1604%" height="15" fill="rgb(239,7,28)" fg:x="1234" fg:w="2"/><text x="99.2075%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.9575%" y="501" width="0.1604%" height="15" fill="rgb(252,222,53)" fg:x="1234" fg:w="2"/><text x="99.2075%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.9575%" y="485" width="0.1604%" height="15" fill="rgb(232,146,44)" fg:x="1234" fg:w="2"/><text x="99.2075%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9575%" y="469" width="0.1604%" height="15" fill="rgb(243,223,53)" fg:x="1234" fg:w="2"/><text x="99.2075%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0377%" y="453" width="0.0802%" height="15" fill="rgb(219,128,25)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1179%" y="501" width="0.0802%" height="15" fill="rgb(223,56,32)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1179%" y="485" width="0.0802%" height="15" fill="rgb(237,41,3)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1981%" y="501" width="0.0802%" height="15" fill="rgb(235,138,9)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.4387%" y="453" width="0.0802%" height="15" fill="rgb(214,131,10)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5188%" y="405" width="0.0802%" height="15" fill="rgb(229,89,7)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5188%" y="389" width="0.0802%" height="15" fill="rgb(240,24,42)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5188%" y="373" width="0.0802%" height="15" fill="rgb(243,188,54)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.5188%" y="357" width="0.0802%" height="15" fill="rgb(246,92,22)" fg:x="1241" fg:w="1"/><text x="99.7688%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="99.2783%" y="501" width="0.4010%" height="15" fill="rgb(211,176,51)" fg:x="1238" fg:w="5"/><text x="99.5283%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="99.2783%" y="485" width="0.4010%" height="15" fill="rgb(246,207,34)" fg:x="1238" fg:w="5"/><text x="99.5283%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.2783%" y="469" width="0.4010%" height="15" fill="rgb(239,95,2)" fg:x="1238" fg:w="5"/><text x="99.5283%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.5188%" y="453" width="0.1604%" height="15" fill="rgb(211,124,25)" fg:x="1241" fg:w="2"/><text x="99.7688%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5188%" y="437" width="0.1604%" height="15" fill="rgb(231,221,19)" fg:x="1241" fg:w="2"/><text x="99.7688%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.5188%" y="421" width="0.1604%" height="15" fill="rgb(239,183,19)" fg:x="1241" fg:w="2"/><text x="99.7688%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5990%" y="405" width="0.0802%" height="15" fill="rgb(221,130,29)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5990%" y="389" width="0.0802%" height="15" fill="rgb(206,130,36)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5990%" y="373" width="0.0802%" height="15" fill="rgb(215,70,19)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5990%" y="357" width="0.0802%" height="15" fill="rgb(244,16,43)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5990%" y="341" width="0.0802%" height="15" fill="rgb(222,115,32)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5990%" y="325" width="0.0802%" height="15" fill="rgb(247,48,25)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.5990%" y="309" width="0.0802%" height="15" fill="rgb(226,180,51)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6792%" y="373" width="0.0802%" height="15" fill="rgb(217,142,42)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6792%" y="357" width="0.0802%" height="15" fill="rgb(220,178,3)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6792%" y="341" width="0.0802%" height="15" fill="rgb(217,221,4)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6792%" y="325" width="0.0802%" height="15" fill="rgb(237,63,43)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6792%" y="309" width="0.0802%" height="15" fill="rgb(220,57,8)" fg:x="1243" fg:w="1"/><text x="99.9292%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6792%" y="389" width="0.1604%" height="15" fill="rgb(254,186,27)" fg:x="1243" fg:w="2"/><text x="99.9292%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.7594%" y="373" width="0.0802%" height="15" fill="rgb(251,57,28)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.7594%" y="357" width="0.0802%" height="15" fill="rgb(215,228,0)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.6792%" y="405" width="0.2406%" height="15" fill="rgb(237,218,39)" fg:x="1243" fg:w="3"/><text x="99.9292%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8396%" y="389" width="0.0802%" height="15" fill="rgb(207,2,54)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="399.50"></text></g><g><title>all (1,247 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(232,76,50)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="943.50"></text></g><g><title>simple-a3fc65a7 (1,247 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(211,85,31)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="927.50">simple-a3fc65a7</text></g><g><title>_start (1,247 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(223,210,27)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="911.50">_start</text></g><g><title>__libc_start_main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(254,36,8)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="895.50">__libc_start_main</text></g><g><title>main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(213,4,25)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (1,247 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(224,2,39)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(208,8,39)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(216,226,3)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(249,139,31)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(242,170,35)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(238,14,9)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(251,81,46)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(230,23,4)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,247 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(211,85,25)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(252,23,31)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,247 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(234,163,38)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(210,190,50)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="687.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,247 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(228,158,3)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,247 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(216,130,0)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="655.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (300 samples, 24.06%)</title><rect x="75.9423%" y="629" width="24.0577%" height="15" fill="rgb(224,184,10)" fg:x="947" fg:w="300"/><text x="76.1923%" y="639.50">&lt;criterion::routine::Function&lt;M,F,T&gt; a..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (300 samples, 24.06%)</title><rect x="75.9423%" y="613" width="24.0577%" height="15" fill="rgb(214,202,18)" fg:x="947" fg:w="300"/><text x="76.1923%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (300 samples, 24.06%)</title><rect x="75.9423%" y="597" width="24.0577%" height="15" fill="rgb(213,229,54)" fg:x="947" fg:w="300"/><text x="76.1923%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (66 samples, 5.29%)</title><rect x="94.7073%" y="581" width="5.2927%" height="15" fill="rgb(246,120,0)" fg:x="1181" fg:w="66"/><text x="94.9573%" y="591.50">engine..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (66 samples, 5.29%)</title><rect x="94.7073%" y="565" width="5.2927%" height="15" fill="rgb(237,6,15)" fg:x="1181" fg:w="66"/><text x="94.9573%" y="575.50">engine..</text></g><g><title>kernel::model::EntityPtrResolver::world (11 samples, 0.88%)</title><rect x="99.1179%" y="549" width="0.8821%" height="15" fill="rgb(252,156,15)" fg:x="1236" fg:w="11"/><text x="99.3679%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (11 samples, 0.88%)</title><rect x="99.1179%" y="533" width="0.8821%" height="15" fill="rgb(249,78,18)" fg:x="1236" fg:w="11"/><text x="99.3679%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="99.1179%" y="517" width="0.8821%" height="15" fill="rgb(230,223,44)" fg:x="1236" fg:w="11"/><text x="99.3679%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="99.6792%" y="501" width="0.3208%" height="15" fill="rgb(230,222,32)" fg:x="1243" fg:w="4"/><text x="99.9292%" y="511.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="99.6792%" y="485" width="0.3208%" height="15" fill="rgb(247,54,6)" fg:x="1243" fg:w="4"/><text x="99.9292%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.6792%" y="469" width="0.3208%" height="15" fill="rgb(247,115,45)" fg:x="1243" fg:w="4"/><text x="99.9292%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.6792%" y="453" width="0.3208%" height="15" fill="rgb(213,203,37)" fg:x="1243" fg:w="4"/><text x="99.9292%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.6792%" y="437" width="0.3208%" height="15" fill="rgb(248,188,18)" fg:x="1243" fg:w="4"/><text x="99.9292%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.6792%" y="421" width="0.3208%" height="15" fill="rgb(206,80,8)" fg:x="1243" fg:w="4"/><text x="99.9292%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9198%" y="405" width="0.0802%" height="15" fill="rgb(245,217,31)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9198%" y="389" width="0.0802%" height="15" fill="rgb(220,193,15)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="399.50"></text></g></svg></svg>