<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1213"><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.2473%" y="533" width="0.0824%" height="15" fill="rgb(250,177,4)" fg:x="3" fg:w="1"/><text x="0.4973%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3298%" y="517" width="0.0824%" height="15" fill="rgb(240,188,47)" fg:x="4" fg:w="1"/><text x="0.5798%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.66%)</title><rect x="0.0000%" y="549" width="0.6595%" height="15" fill="rgb(215,92,12)" fg:x="0" fg:w="8"/><text x="0.2500%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.33%)</title><rect x="0.3298%" y="533" width="0.3298%" height="15" fill="rgb(242,110,29)" fg:x="4" fg:w="4"/><text x="0.5798%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.25%)</title><rect x="0.4122%" y="517" width="0.2473%" height="15" fill="rgb(208,211,26)" fg:x="5" fg:w="3"/><text x="0.6622%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.16%)</title><rect x="0.4946%" y="501" width="0.1649%" height="15" fill="rgb(244,147,6)" fg:x="6" fg:w="2"/><text x="0.7446%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5771%" y="485" width="0.0824%" height="15" fill="rgb(211,130,42)" fg:x="7" fg:w="1"/><text x="0.8271%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.74%)</title><rect x="0.0000%" y="565" width="0.7420%" height="15" fill="rgb(220,63,1)" fg:x="0" fg:w="9"/><text x="0.2500%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6595%" y="549" width="0.0824%" height="15" fill="rgb(241,212,30)" fg:x="8" fg:w="1"/><text x="0.9095%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="1.1542%" y="485" width="0.2473%" height="15" fill="rgb(233,153,17)" fg:x="14" fg:w="3"/><text x="1.4042%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.4015%" y="485" width="0.0824%" height="15" fill="rgb(236,3,10)" fg:x="17" fg:w="1"/><text x="1.6515%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4015%" y="469" width="0.0824%" height="15" fill="rgb(232,41,21)" fg:x="17" fg:w="1"/><text x="1.6515%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4839%" y="469" width="0.0824%" height="15" fill="rgb(206,63,51)" fg:x="18" fg:w="1"/><text x="1.7339%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.5664%" y="453" width="0.0824%" height="15" fill="rgb(250,214,3)" fg:x="19" fg:w="1"/><text x="1.8164%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.5664%" y="437" width="0.0824%" height="15" fill="rgb(254,89,27)" fg:x="19" fg:w="1"/><text x="1.8164%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.5664%" y="421" width="0.0824%" height="15" fill="rgb(249,41,14)" fg:x="19" fg:w="1"/><text x="1.8164%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6488%" y="453" width="0.0824%" height="15" fill="rgb(221,196,51)" fg:x="20" fg:w="1"/><text x="1.8988%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7312%" y="453" width="0.0824%" height="15" fill="rgb(214,116,26)" fg:x="21" fg:w="1"/><text x="1.9812%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7312%" y="437" width="0.0824%" height="15" fill="rgb(236,67,7)" fg:x="21" fg:w="1"/><text x="1.9812%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.91%)</title><rect x="0.9893%" y="517" width="0.9068%" height="15" fill="rgb(253,179,32)" fg:x="12" fg:w="11"/><text x="1.2393%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.91%)</title><rect x="0.9893%" y="501" width="0.9068%" height="15" fill="rgb(218,33,15)" fg:x="12" fg:w="11"/><text x="1.2393%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="1.4839%" y="485" width="0.4122%" height="15" fill="rgb(217,202,41)" fg:x="18" fg:w="5"/><text x="1.7339%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="1.5664%" y="469" width="0.3298%" height="15" fill="rgb(234,133,5)" fg:x="19" fg:w="4"/><text x="1.8164%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.8137%" y="453" width="0.0824%" height="15" fill="rgb(240,47,40)" fg:x="22" fg:w="1"/><text x="2.0637%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8137%" y="437" width="0.0824%" height="15" fill="rgb(234,166,26)" fg:x="22" fg:w="1"/><text x="2.0637%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="2.1434%" y="469" width="0.2473%" height="15" fill="rgb(244,125,51)" fg:x="26" fg:w="3"/><text x="2.3934%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="2.5556%" y="453" width="0.1649%" height="15" fill="rgb(229,171,11)" fg:x="31" fg:w="2"/><text x="2.8056%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="2.5556%" y="437" width="0.1649%" height="15" fill="rgb(224,38,45)" fg:x="31" fg:w="2"/><text x="2.8056%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.5556%" y="421" width="0.1649%" height="15" fill="rgb(237,27,7)" fg:x="31" fg:w="2"/><text x="2.8056%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="2.7205%" y="453" width="0.2473%" height="15" fill="rgb(216,52,7)" fg:x="33" fg:w="3"/><text x="2.9705%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.9678%" y="453" width="0.1649%" height="15" fill="rgb(243,11,11)" fg:x="36" fg:w="2"/><text x="3.2178%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.1327%" y="437" width="0.1649%" height="15" fill="rgb(253,167,20)" fg:x="38" fg:w="2"/><text x="3.3827%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.48%)</title><rect x="1.8961%" y="501" width="1.4839%" height="15" fill="rgb(215,207,5)" fg:x="23" fg:w="18"/><text x="2.1461%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.48%)</title><rect x="1.8961%" y="485" width="1.4839%" height="15" fill="rgb(252,127,31)" fg:x="23" fg:w="18"/><text x="2.1461%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.99%)</title><rect x="2.3908%" y="469" width="0.9893%" height="15" fill="rgb(209,106,27)" fg:x="29" fg:w="12"/><text x="2.6408%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="3.1327%" y="453" width="0.2473%" height="15" fill="rgb(214,220,18)" fg:x="38" fg:w="3"/><text x="3.3827%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.2976%" y="437" width="0.0824%" height="15" fill="rgb(237,89,12)" fg:x="40" fg:w="1"/><text x="3.5476%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 3.54%)</title><rect x="0.0000%" y="581" width="3.5449%" height="15" fill="rgb(209,167,36)" fg:x="0" fg:w="43"/><text x="0.2500%" y="591.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (34 samples, 2.80%)</title><rect x="0.7420%" y="565" width="2.8030%" height="15" fill="rgb(243,45,22)" fg:x="9" fg:w="34"/><text x="0.9920%" y="575.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 2.64%)</title><rect x="0.9068%" y="549" width="2.6381%" height="15" fill="rgb(239,2,46)" fg:x="11" fg:w="32"/><text x="1.1568%" y="559.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (32 samples, 2.64%)</title><rect x="0.9068%" y="533" width="2.6381%" height="15" fill="rgb(241,101,0)" fg:x="11" fg:w="32"/><text x="1.1568%" y="543.50">co..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.65%)</title><rect x="1.8961%" y="517" width="1.6488%" height="15" fill="rgb(244,34,31)" fg:x="23" fg:w="20"/><text x="2.1461%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.3800%" y="501" width="0.1649%" height="15" fill="rgb(248,23,22)" fg:x="41" fg:w="2"/><text x="3.6300%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.6274%" y="533" width="0.0824%" height="15" fill="rgb(218,27,48)" fg:x="44" fg:w="1"/><text x="3.8774%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="3.7098%" y="533" width="0.1649%" height="15" fill="rgb(232,78,1)" fg:x="45" fg:w="2"/><text x="3.9598%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="3.7923%" y="517" width="0.0824%" height="15" fill="rgb(233,169,12)" fg:x="46" fg:w="1"/><text x="4.0423%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.8747%" y="533" width="0.0824%" height="15" fill="rgb(225,222,54)" fg:x="47" fg:w="1"/><text x="4.1247%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.8747%" y="517" width="0.0824%" height="15" fill="rgb(245,126,29)" fg:x="47" fg:w="1"/><text x="4.1247%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9571%" y="517" width="0.0824%" height="15" fill="rgb(241,63,48)" fg:x="48" fg:w="1"/><text x="4.2071%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="4.4518%" y="261" width="0.0824%" height="15" fill="rgb(235,126,38)" fg:x="54" fg:w="1"/><text x="4.7018%" y="271.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.49%)</title><rect x="4.2869%" y="485" width="0.4946%" height="15" fill="rgb(232,96,49)" fg:x="52" fg:w="6"/><text x="4.5369%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.49%)</title><rect x="4.2869%" y="469" width="0.4946%" height="15" fill="rgb(211,146,40)" fg:x="52" fg:w="6"/><text x="4.5369%" y="479.50"></text></g><g><title>core::fmt::write (6 samples, 0.49%)</title><rect x="4.2869%" y="453" width="0.4946%" height="15" fill="rgb(247,93,44)" fg:x="52" fg:w="6"/><text x="4.5369%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.41%)</title><rect x="4.3693%" y="437" width="0.4122%" height="15" fill="rgb(251,41,49)" fg:x="53" fg:w="5"/><text x="4.6193%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.41%)</title><rect x="4.3693%" y="421" width="0.4122%" height="15" fill="rgb(218,155,12)" fg:x="53" fg:w="5"/><text x="4.6193%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.33%)</title><rect x="4.4518%" y="405" width="0.3298%" height="15" fill="rgb(221,161,30)" fg:x="54" fg:w="4"/><text x="4.7018%" y="415.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.33%)</title><rect x="4.4518%" y="389" width="0.3298%" height="15" fill="rgb(221,179,11)" fg:x="54" fg:w="4"/><text x="4.7018%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.33%)</title><rect x="4.4518%" y="373" width="0.3298%" height="15" fill="rgb(224,170,48)" fg:x="54" fg:w="4"/><text x="4.7018%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.33%)</title><rect x="4.4518%" y="357" width="0.3298%" height="15" fill="rgb(223,117,5)" fg:x="54" fg:w="4"/><text x="4.7018%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.33%)</title><rect x="4.4518%" y="341" width="0.3298%" height="15" fill="rgb(209,52,20)" fg:x="54" fg:w="4"/><text x="4.7018%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.33%)</title><rect x="4.4518%" y="325" width="0.3298%" height="15" fill="rgb(209,19,41)" fg:x="54" fg:w="4"/><text x="4.7018%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.33%)</title><rect x="4.4518%" y="309" width="0.3298%" height="15" fill="rgb(210,177,12)" fg:x="54" fg:w="4"/><text x="4.7018%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.33%)</title><rect x="4.4518%" y="293" width="0.3298%" height="15" fill="rgb(211,159,37)" fg:x="54" fg:w="4"/><text x="4.7018%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.33%)</title><rect x="4.4518%" y="277" width="0.3298%" height="15" fill="rgb(209,20,2)" fg:x="54" fg:w="4"/><text x="4.7018%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.25%)</title><rect x="4.5342%" y="261" width="0.2473%" height="15" fill="rgb(244,3,46)" fg:x="55" fg:w="3"/><text x="4.7842%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.25%)</title><rect x="4.5342%" y="245" width="0.2473%" height="15" fill="rgb(220,94,38)" fg:x="55" fg:w="3"/><text x="4.7842%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.25%)</title><rect x="4.5342%" y="229" width="0.2473%" height="15" fill="rgb(253,14,31)" fg:x="55" fg:w="3"/><text x="4.7842%" y="239.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.25%)</title><rect x="4.5342%" y="213" width="0.2473%" height="15" fill="rgb(234,176,13)" fg:x="55" fg:w="3"/><text x="4.7842%" y="223.50"></text></g><g><title>realloc (3 samples, 0.25%)</title><rect x="4.5342%" y="197" width="0.2473%" height="15" fill="rgb(218,62,25)" fg:x="55" fg:w="3"/><text x="4.7842%" y="207.50"></text></g><g><title>dlerror (3 samples, 0.25%)</title><rect x="4.7815%" y="469" width="0.2473%" height="15" fill="rgb(216,124,40)" fg:x="58" fg:w="3"/><text x="5.0315%" y="479.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="4.9464%" y="453" width="0.0824%" height="15" fill="rgb(228,170,12)" fg:x="60" fg:w="1"/><text x="5.1964%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9464%" y="437" width="0.0824%" height="15" fill="rgb(231,226,5)" fg:x="60" fg:w="1"/><text x="5.1964%" y="447.50"></text></g><g><title>dlopen (12 samples, 0.99%)</title><rect x="5.0289%" y="469" width="0.9893%" height="15" fill="rgb(237,122,22)" fg:x="61" fg:w="12"/><text x="5.2789%" y="479.50"></text></g><g><title>_dl_catch_error (11 samples, 0.91%)</title><rect x="5.1113%" y="453" width="0.9068%" height="15" fill="rgb(209,185,25)" fg:x="62" fg:w="11"/><text x="5.3613%" y="463.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.91%)</title><rect x="5.1113%" y="437" width="0.9068%" height="15" fill="rgb(228,200,32)" fg:x="62" fg:w="11"/><text x="5.3613%" y="447.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.91%)</title><rect x="5.1113%" y="421" width="0.9068%" height="15" fill="rgb(217,140,10)" fg:x="62" fg:w="11"/><text x="5.3613%" y="431.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.91%)</title><rect x="5.1113%" y="405" width="0.9068%" height="15" fill="rgb(253,17,24)" fg:x="62" fg:w="11"/><text x="5.3613%" y="415.50"></text></g><g><title>libloading::os::unix::Library::open (17 samples, 1.40%)</title><rect x="4.7815%" y="485" width="1.4015%" height="15" fill="rgb(212,61,6)" fg:x="58" fg:w="17"/><text x="5.0315%" y="495.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (2 samples, 0.16%)</title><rect x="6.0181%" y="469" width="0.1649%" height="15" fill="rgb(205,14,25)" fg:x="73" fg:w="2"/><text x="6.2681%" y="479.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.16%)</title><rect x="6.0181%" y="453" width="0.1649%" height="15" fill="rgb(232,69,41)" fg:x="73" fg:w="2"/><text x="6.2681%" y="463.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (2 samples, 0.16%)</title><rect x="6.0181%" y="437" width="0.1649%" height="15" fill="rgb(241,106,47)" fg:x="73" fg:w="2"/><text x="6.2681%" y="447.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.16%)</title><rect x="6.0181%" y="421" width="0.1649%" height="15" fill="rgb(210,213,53)" fg:x="73" fg:w="2"/><text x="6.2681%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (25 samples, 2.06%)</title><rect x="4.2045%" y="501" width="2.0610%" height="15" fill="rgb(253,175,27)" fg:x="51" fg:w="25"/><text x="4.4545%" y="511.50">&lt;..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="6.1830%" y="485" width="0.0824%" height="15" fill="rgb(211,171,24)" fg:x="75" fg:w="1"/><text x="6.4330%" y="495.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="6.1830%" y="469" width="0.0824%" height="15" fill="rgb(229,80,7)" fg:x="75" fg:w="1"/><text x="6.4330%" y="479.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.1830%" y="453" width="0.0824%" height="15" fill="rgb(212,46,39)" fg:x="75" fg:w="1"/><text x="6.4330%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.4303%" y="453" width="0.0824%" height="15" fill="rgb(240,80,45)" fg:x="78" fg:w="1"/><text x="6.6803%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.4303%" y="437" width="0.0824%" height="15" fill="rgb(253,177,40)" fg:x="78" fg:w="1"/><text x="6.6803%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.4303%" y="421" width="0.0824%" height="15" fill="rgb(249,200,15)" fg:x="78" fg:w="1"/><text x="6.6803%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.4303%" y="405" width="0.0824%" height="15" fill="rgb(217,78,26)" fg:x="78" fg:w="1"/><text x="6.6803%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.4303%" y="389" width="0.0824%" height="15" fill="rgb(254,151,32)" fg:x="78" fg:w="1"/><text x="6.6803%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="6.4303%" y="373" width="0.0824%" height="15" fill="rgb(226,165,27)" fg:x="78" fg:w="1"/><text x="6.6803%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="6.4303%" y="357" width="0.0824%" height="15" fill="rgb(250,206,4)" fg:x="78" fg:w="1"/><text x="6.6803%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.33%)</title><rect x="6.9250%" y="357" width="0.3298%" height="15" fill="rgb(231,229,27)" fg:x="84" fg:w="4"/><text x="7.1750%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.33%)</title><rect x="6.9250%" y="341" width="0.3298%" height="15" fill="rgb(239,217,8)" fg:x="84" fg:w="4"/><text x="7.1750%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.33%)</title><rect x="6.9250%" y="325" width="0.3298%" height="15" fill="rgb(225,204,27)" fg:x="84" fg:w="4"/><text x="7.1750%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.33%)</title><rect x="6.9250%" y="309" width="0.3298%" height="15" fill="rgb(230,56,32)" fg:x="84" fg:w="4"/><text x="7.1750%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.33%)</title><rect x="6.9250%" y="293" width="0.3298%" height="15" fill="rgb(222,56,27)" fg:x="84" fg:w="4"/><text x="7.1750%" y="303.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.33%)</title><rect x="6.9250%" y="277" width="0.3298%" height="15" fill="rgb(253,108,27)" fg:x="84" fg:w="4"/><text x="7.1750%" y="287.50"></text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="6.9250%" y="261" width="0.3298%" height="15" fill="rgb(212,87,36)" fg:x="84" fg:w="4"/><text x="7.1750%" y="271.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (14 samples, 1.15%)</title><rect x="6.2655%" y="485" width="1.1542%" height="15" fill="rgb(247,82,36)" fg:x="76" fg:w="14"/><text x="6.5155%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 1.07%)</title><rect x="6.3479%" y="469" width="1.0717%" height="15" fill="rgb(222,143,9)" fg:x="77" fg:w="13"/><text x="6.5979%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.91%)</title><rect x="6.5128%" y="453" width="0.9068%" height="15" fill="rgb(238,162,48)" fg:x="79" fg:w="11"/><text x="6.7628%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.58%)</title><rect x="6.8425%" y="437" width="0.5771%" height="15" fill="rgb(221,59,43)" fg:x="83" fg:w="7"/><text x="7.0925%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.49%)</title><rect x="6.9250%" y="421" width="0.4946%" height="15" fill="rgb(205,166,41)" fg:x="84" fg:w="6"/><text x="7.1750%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.49%)</title><rect x="6.9250%" y="405" width="0.4946%" height="15" fill="rgb(241,186,40)" fg:x="84" fg:w="6"/><text x="7.1750%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.49%)</title><rect x="6.9250%" y="389" width="0.4946%" height="15" fill="rgb(216,119,35)" fg:x="84" fg:w="6"/><text x="7.1750%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.49%)</title><rect x="6.9250%" y="373" width="0.4946%" height="15" fill="rgb(208,68,38)" fg:x="84" fg:w="6"/><text x="7.1750%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="7.2547%" y="357" width="0.1649%" height="15" fill="rgb(217,113,1)" fg:x="88" fg:w="2"/><text x="7.5047%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="7.2547%" y="341" width="0.1649%" height="15" fill="rgb(242,153,3)" fg:x="88" fg:w="2"/><text x="7.5047%" y="351.50"></text></g><g><title>glob::is_dir (11 samples, 0.91%)</title><rect x="7.5021%" y="437" width="0.9068%" height="15" fill="rgb(229,76,35)" fg:x="91" fg:w="11"/><text x="7.7521%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (11 samples, 0.91%)</title><rect x="7.5021%" y="421" width="0.9068%" height="15" fill="rgb(229,125,34)" fg:x="91" fg:w="11"/><text x="7.7521%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (11 samples, 0.91%)</title><rect x="7.5021%" y="405" width="0.9068%" height="15" fill="rgb(238,179,36)" fg:x="91" fg:w="11"/><text x="7.7521%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (11 samples, 0.91%)</title><rect x="7.5021%" y="389" width="0.9068%" height="15" fill="rgb(244,183,19)" fg:x="91" fg:w="11"/><text x="7.7521%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (11 samples, 0.91%)</title><rect x="7.5021%" y="373" width="0.9068%" height="15" fill="rgb(216,85,49)" fg:x="91" fg:w="11"/><text x="7.7521%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (11 samples, 0.91%)</title><rect x="7.5021%" y="357" width="0.9068%" height="15" fill="rgb(208,161,47)" fg:x="91" fg:w="11"/><text x="7.7521%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (11 samples, 0.91%)</title><rect x="7.5021%" y="341" width="0.9068%" height="15" fill="rgb(233,210,18)" fg:x="91" fg:w="11"/><text x="7.7521%" y="351.50"></text></g><g><title>statx (11 samples, 0.91%)</title><rect x="7.5021%" y="325" width="0.9068%" height="15" fill="rgb(205,104,42)" fg:x="91" fg:w="11"/><text x="7.7521%" y="335.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="8.4089%" y="357" width="0.0824%" height="15" fill="rgb(248,90,43)" fg:x="102" fg:w="1"/><text x="8.6589%" y="367.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.08%)</title><rect x="8.4089%" y="341" width="0.0824%" height="15" fill="rgb(206,198,11)" fg:x="102" fg:w="1"/><text x="8.6589%" y="351.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="8.4089%" y="325" width="0.0824%" height="15" fill="rgb(239,165,27)" fg:x="102" fg:w="1"/><text x="8.6589%" y="335.50"></text></g><g><title>__errno_location (1 samples, 0.08%)</title><rect x="8.4089%" y="309" width="0.0824%" height="15" fill="rgb(246,44,32)" fg:x="102" fg:w="1"/><text x="8.6589%" y="319.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.32%)</title><rect x="7.4196%" y="469" width="1.3190%" height="15" fill="rgb(252,65,42)" fg:x="90" fg:w="16"/><text x="7.6696%" y="479.50"></text></g><g><title>glob::fill_todo (16 samples, 1.32%)</title><rect x="7.4196%" y="453" width="1.3190%" height="15" fill="rgb(246,197,18)" fg:x="90" fg:w="16"/><text x="7.6696%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (4 samples, 0.33%)</title><rect x="8.4089%" y="437" width="0.3298%" height="15" fill="rgb(216,192,4)" fg:x="102" fg:w="4"/><text x="8.6589%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (4 samples, 0.33%)</title><rect x="8.4089%" y="421" width="0.3298%" height="15" fill="rgb(208,117,10)" fg:x="102" fg:w="4"/><text x="8.6589%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (4 samples, 0.33%)</title><rect x="8.4089%" y="405" width="0.3298%" height="15" fill="rgb(240,61,47)" fg:x="102" fg:w="4"/><text x="8.6589%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (4 samples, 0.33%)</title><rect x="8.4089%" y="389" width="0.3298%" height="15" fill="rgb(228,178,21)" fg:x="102" fg:w="4"/><text x="8.6589%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (4 samples, 0.33%)</title><rect x="8.4089%" y="373" width="0.3298%" height="15" fill="rgb(219,96,54)" fg:x="102" fg:w="4"/><text x="8.6589%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.25%)</title><rect x="8.4913%" y="357" width="0.2473%" height="15" fill="rgb(250,177,24)" fg:x="103" fg:w="3"/><text x="8.7413%" y="367.50"></text></g><g><title>statx (3 samples, 0.25%)</title><rect x="8.4913%" y="341" width="0.2473%" height="15" fill="rgb(242,154,46)" fg:x="103" fg:w="3"/><text x="8.7413%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="8.8211%" y="245" width="0.0824%" height="15" fill="rgb(226,176,29)" fg:x="107" fg:w="1"/><text x="9.0711%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="8.8211%" y="229" width="0.0824%" height="15" fill="rgb(226,29,2)" fg:x="107" fg:w="1"/><text x="9.0711%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="8.8211%" y="213" width="0.0824%" height="15" fill="rgb(237,104,14)" fg:x="107" fg:w="1"/><text x="9.0711%" y="223.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (33 samples, 2.72%)</title><rect x="6.2655%" y="501" width="2.7205%" height="15" fill="rgb(245,207,31)" fg:x="76" fg:w="33"/><text x="6.5155%" y="511.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_directory_sources (19 samples, 1.57%)</title><rect x="7.4196%" y="485" width="1.5664%" height="15" fill="rgb(229,211,45)" fg:x="90" fg:w="19"/><text x="7.6696%" y="495.50"></text></g><g><title>glob::glob (3 samples, 0.25%)</title><rect x="8.7387%" y="469" width="0.2473%" height="15" fill="rgb(229,113,15)" fg:x="106" fg:w="3"/><text x="8.9887%" y="479.50"></text></g><g><title>glob::glob_with (3 samples, 0.25%)</title><rect x="8.7387%" y="453" width="0.2473%" height="15" fill="rgb(237,147,15)" fg:x="106" fg:w="3"/><text x="8.9887%" y="463.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="8.8211%" y="437" width="0.1649%" height="15" fill="rgb(244,120,12)" fg:x="107" fg:w="2"/><text x="9.0711%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (2 samples, 0.16%)</title><rect x="8.8211%" y="421" width="0.1649%" height="15" fill="rgb(205,120,12)" fg:x="107" fg:w="2"/><text x="9.0711%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (2 samples, 0.16%)</title><rect x="8.8211%" y="405" width="0.1649%" height="15" fill="rgb(231,26,45)" fg:x="107" fg:w="2"/><text x="9.0711%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (2 samples, 0.16%)</title><rect x="8.8211%" y="389" width="0.1649%" height="15" fill="rgb(246,98,1)" fg:x="107" fg:w="2"/><text x="9.0711%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="8.8211%" y="373" width="0.1649%" height="15" fill="rgb(207,68,45)" fg:x="107" fg:w="2"/><text x="9.0711%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="8.8211%" y="357" width="0.1649%" height="15" fill="rgb(231,27,38)" fg:x="107" fg:w="2"/><text x="9.0711%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="8.8211%" y="341" width="0.1649%" height="15" fill="rgb(214,223,3)" fg:x="107" fg:w="2"/><text x="9.0711%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="8.8211%" y="325" width="0.1649%" height="15" fill="rgb(228,195,46)" fg:x="107" fg:w="2"/><text x="9.0711%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="8.8211%" y="309" width="0.1649%" height="15" fill="rgb(231,100,42)" fg:x="107" fg:w="2"/><text x="9.0711%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.8211%" y="293" width="0.1649%" height="15" fill="rgb(236,53,4)" fg:x="107" fg:w="2"/><text x="9.0711%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="8.8211%" y="277" width="0.1649%" height="15" fill="rgb(230,152,12)" fg:x="107" fg:w="2"/><text x="9.0711%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="8.8211%" y="261" width="0.1649%" height="15" fill="rgb(226,101,19)" fg:x="107" fg:w="2"/><text x="9.0711%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9035%" y="245" width="0.0824%" height="15" fill="rgb(250,149,32)" fg:x="108" fg:w="1"/><text x="9.1535%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.9860%" y="485" width="0.0824%" height="15" fill="rgb(232,178,12)" fg:x="109" fg:w="1"/><text x="9.2360%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (7 samples, 0.58%)</title><rect x="8.9860%" y="501" width="0.5771%" height="15" fill="rgb(246,151,17)" fg:x="109" fg:w="7"/><text x="9.2360%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (6 samples, 0.49%)</title><rect x="9.0684%" y="485" width="0.4946%" height="15" fill="rgb(252,17,51)" fg:x="110" fg:w="6"/><text x="9.3184%" y="495.50"></text></g><g><title>__libc_free (4 samples, 0.33%)</title><rect x="9.2333%" y="469" width="0.3298%" height="15" fill="rgb(250,207,23)" fg:x="112" fg:w="4"/><text x="9.4833%" y="479.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="9.7279%" y="469" width="0.1649%" height="15" fill="rgb(205,27,5)" fg:x="118" fg:w="2"/><text x="9.9779%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="9.7279%" y="453" width="0.1649%" height="15" fill="rgb(224,32,19)" fg:x="118" fg:w="2"/><text x="9.9779%" y="463.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="9.7279%" y="437" width="0.1649%" height="15" fill="rgb(247,214,40)" fg:x="118" fg:w="2"/><text x="9.9779%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.8104%" y="421" width="0.0824%" height="15" fill="rgb(239,199,17)" fg:x="119" fg:w="1"/><text x="10.0604%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="9.8928%" y="437" width="0.1649%" height="15" fill="rgb(251,159,9)" fg:x="120" fg:w="2"/><text x="10.1428%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.9753%" y="421" width="0.0824%" height="15" fill="rgb(225,78,32)" fg:x="121" fg:w="1"/><text x="10.2253%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.0577%" y="437" width="0.0824%" height="15" fill="rgb(206,97,47)" fg:x="122" fg:w="1"/><text x="10.3077%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="10.1401%" y="437" width="0.0824%" height="15" fill="rgb(227,107,4)" fg:x="123" fg:w="1"/><text x="10.3901%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1401%" y="421" width="0.0824%" height="15" fill="rgb(241,146,50)" fg:x="123" fg:w="1"/><text x="10.3901%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.41%)</title><rect x="9.8928%" y="469" width="0.4122%" height="15" fill="rgb(232,92,30)" fg:x="120" fg:w="5"/><text x="10.1428%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.41%)</title><rect x="9.8928%" y="453" width="0.4122%" height="15" fill="rgb(222,0,40)" fg:x="120" fg:w="5"/><text x="10.1428%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="10.2226%" y="437" width="0.0824%" height="15" fill="rgb(219,54,33)" fg:x="124" fg:w="1"/><text x="10.4726%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.2226%" y="421" width="0.0824%" height="15" fill="rgb(226,209,28)" fg:x="124" fg:w="1"/><text x="10.4726%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.2226%" y="405" width="0.0824%" height="15" fill="rgb(254,205,35)" fg:x="124" fg:w="1"/><text x="10.4726%" y="415.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="10.3050%" y="437" width="0.0824%" height="15" fill="rgb(230,159,3)" fg:x="125" fg:w="1"/><text x="10.5550%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="10.3050%" y="421" width="0.0824%" height="15" fill="rgb(232,190,24)" fg:x="125" fg:w="1"/><text x="10.5550%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="10.3050%" y="469" width="0.1649%" height="15" fill="rgb(217,227,44)" fg:x="125" fg:w="2"/><text x="10.5550%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="10.3050%" y="453" width="0.1649%" height="15" fill="rgb(236,211,1)" fg:x="125" fg:w="2"/><text x="10.5550%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="10.3875%" y="437" width="0.0824%" height="15" fill="rgb(250,127,46)" fg:x="126" fg:w="1"/><text x="10.6375%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="10.3875%" y="421" width="0.0824%" height="15" fill="rgb(229,213,6)" fg:x="126" fg:w="1"/><text x="10.6375%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.3875%" y="405" width="0.0824%" height="15" fill="rgb(237,15,36)" fg:x="126" fg:w="1"/><text x="10.6375%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.3875%" y="389" width="0.0824%" height="15" fill="rgb(213,131,41)" fg:x="126" fg:w="1"/><text x="10.6375%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.3875%" y="373" width="0.0824%" height="15" fill="rgb(225,82,44)" fg:x="126" fg:w="1"/><text x="10.6375%" y="383.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="10.4699%" y="469" width="0.1649%" height="15" fill="rgb(249,42,11)" fg:x="127" fg:w="2"/><text x="10.7199%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="10.5523%" y="453" width="0.0824%" height="15" fill="rgb(253,11,29)" fg:x="128" fg:w="1"/><text x="10.8023%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5523%" y="437" width="0.0824%" height="15" fill="rgb(206,8,54)" fg:x="128" fg:w="1"/><text x="10.8023%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="10.6348%" y="469" width="0.0824%" height="15" fill="rgb(222,186,2)" fg:x="129" fg:w="1"/><text x="10.8848%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="10.6348%" y="453" width="0.0824%" height="15" fill="rgb(221,206,53)" fg:x="129" fg:w="1"/><text x="10.8848%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="10.6348%" y="437" width="0.0824%" height="15" fill="rgb(230,150,21)" fg:x="129" fg:w="1"/><text x="10.8848%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6348%" y="421" width="0.0824%" height="15" fill="rgb(253,202,10)" fg:x="129" fg:w="1"/><text x="10.8848%" y="431.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.25%)</title><rect x="10.7172%" y="469" width="0.2473%" height="15" fill="rgb(238,109,40)" fg:x="130" fg:w="3"/><text x="10.9672%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.25%)</title><rect x="10.7172%" y="453" width="0.2473%" height="15" fill="rgb(247,120,22)" fg:x="130" fg:w="3"/><text x="10.9672%" y="463.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="10.7997%" y="437" width="0.1649%" height="15" fill="rgb(207,43,30)" fg:x="131" fg:w="2"/><text x="11.0497%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="10.7997%" y="421" width="0.1649%" height="15" fill="rgb(213,211,24)" fg:x="131" fg:w="2"/><text x="11.0497%" y="431.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.8821%" y="405" width="0.0824%" height="15" fill="rgb(239,73,39)" fg:x="132" fg:w="1"/><text x="11.1321%" y="415.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.8821%" y="389" width="0.0824%" height="15" fill="rgb(245,182,19)" fg:x="132" fg:w="1"/><text x="11.1321%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.9646%" y="469" width="0.0824%" height="15" fill="rgb(247,143,26)" fg:x="133" fg:w="1"/><text x="11.2146%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.57%)</title><rect x="9.5631%" y="485" width="1.5664%" height="15" fill="rgb(228,191,23)" fg:x="116" fg:w="19"/><text x="9.8131%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0470%" y="469" width="0.0824%" height="15" fill="rgb(253,165,31)" fg:x="134" fg:w="1"/><text x="11.2970%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::schema (20 samples, 1.65%)</title><rect x="9.5631%" y="501" width="1.6488%" height="15" fill="rgb(234,138,20)" fg:x="116" fg:w="20"/><text x="9.8131%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="11.1294%" y="485" width="0.0824%" height="15" fill="rgb(218,191,29)" fg:x="135" fg:w="1"/><text x="11.3794%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (90 samples, 7.42%)</title><rect x="4.0396%" y="517" width="7.4196%" height="15" fill="rgb(221,157,19)" fg:x="49" fg:w="90"/><text x="4.2896%" y="527.50">kernel::pl..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.25%)</title><rect x="11.2119%" y="501" width="0.2473%" height="15" fill="rgb(237,26,42)" fg:x="136" fg:w="3"/><text x="11.4619%" y="511.50"></text></g><g><title>clock_gettime (3 samples, 0.25%)</title><rect x="11.2119%" y="485" width="0.2473%" height="15" fill="rgb(220,163,24)" fg:x="136" fg:w="3"/><text x="11.4619%" y="495.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="11.6241%" y="437" width="0.0824%" height="15" fill="rgb(242,115,20)" fg:x="141" fg:w="1"/><text x="11.8741%" y="447.50"></text></g><g><title>engine::session::Session::initialize (96 samples, 7.91%)</title><rect x="3.9571%" y="533" width="7.9143%" height="15" fill="rgb(210,206,9)" fg:x="48" fg:w="96"/><text x="4.2071%" y="543.50">engine::ses..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.41%)</title><rect x="11.4592%" y="517" width="0.4122%" height="15" fill="rgb(208,71,17)" fg:x="139" fg:w="5"/><text x="11.7092%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.41%)</title><rect x="11.4592%" y="501" width="0.4122%" height="15" fill="rgb(233,7,5)" fg:x="139" fg:w="5"/><text x="11.7092%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="11.4592%" y="485" width="0.4122%" height="15" fill="rgb(207,92,33)" fg:x="139" fg:w="5"/><text x="11.7092%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.25%)</title><rect x="11.6241%" y="469" width="0.2473%" height="15" fill="rgb(218,87,9)" fg:x="141" fg:w="3"/><text x="11.8741%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.25%)</title><rect x="11.6241%" y="453" width="0.2473%" height="15" fill="rgb(219,47,37)" fg:x="141" fg:w="3"/><text x="11.8741%" y="463.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="11.7065%" y="437" width="0.1649%" height="15" fill="rgb(221,152,34)" fg:x="142" fg:w="2"/><text x="11.9565%" y="447.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (102 samples, 8.41%)</title><rect x="3.5449%" y="581" width="8.4089%" height="15" fill="rgb(235,176,21)" fg:x="43" fg:w="102"/><text x="3.7949%" y="591.50">&lt;engine::dom..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (102 samples, 8.41%)</title><rect x="3.5449%" y="565" width="8.4089%" height="15" fill="rgb(232,212,21)" fg:x="43" fg:w="102"/><text x="3.7949%" y="575.50">engine::doma..</text></g><g><title>engine::session::Session::new (101 samples, 8.33%)</title><rect x="3.6274%" y="549" width="8.3265%" height="15" fill="rgb(245,82,39)" fg:x="44" fg:w="101"/><text x="3.8774%" y="559.50">engine::sess..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="11.8714%" y="533" width="0.0824%" height="15" fill="rgb(241,52,51)" fg:x="144" fg:w="1"/><text x="12.1214%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="11.8714%" y="517" width="0.0824%" height="15" fill="rgb(219,91,24)" fg:x="144" fg:w="1"/><text x="12.1214%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="11.8714%" y="501" width="0.0824%" height="15" fill="rgb(241,142,12)" fg:x="144" fg:w="1"/><text x="12.1214%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.8714%" y="485" width="0.0824%" height="15" fill="rgb(230,27,9)" fg:x="144" fg:w="1"/><text x="12.1214%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.8714%" y="469" width="0.0824%" height="15" fill="rgb(249,181,32)" fg:x="144" fg:w="1"/><text x="12.1214%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.8714%" y="453" width="0.0824%" height="15" fill="rgb(230,107,3)" fg:x="144" fg:w="1"/><text x="12.1214%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.1187%" y="565" width="0.0824%" height="15" fill="rgb(246,204,14)" fg:x="147" fg:w="1"/><text x="12.3687%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="12.1187%" y="549" width="0.0824%" height="15" fill="rgb(213,192,47)" fg:x="147" fg:w="1"/><text x="12.3687%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1187%" y="533" width="0.0824%" height="15" fill="rgb(240,44,36)" fg:x="147" fg:w="1"/><text x="12.3687%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.1187%" y="517" width="0.0824%" height="15" fill="rgb(244,209,38)" fg:x="147" fg:w="1"/><text x="12.3687%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1187%" y="501" width="0.0824%" height="15" fill="rgb(219,34,37)" fg:x="147" fg:w="1"/><text x="12.3687%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::EntityPtr&gt;&gt; (1 samples, 0.08%)</title><rect x="12.2012%" y="565" width="0.0824%" height="15" fill="rgb(210,28,6)" fg:x="148" fg:w="1"/><text x="12.4512%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="12.2836%" y="549" width="0.1649%" height="15" fill="rgb(244,110,52)" fg:x="149" fg:w="2"/><text x="12.5336%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3660%" y="533" width="0.0824%" height="15" fill="rgb(254,124,47)" fg:x="150" fg:w="1"/><text x="12.6160%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.3660%" y="517" width="0.0824%" height="15" fill="rgb(254,110,13)" fg:x="150" fg:w="1"/><text x="12.6160%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="12.3660%" y="501" width="0.0824%" height="15" fill="rgb(252,57,21)" fg:x="150" fg:w="1"/><text x="12.6160%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.5309%" y="453" width="0.0824%" height="15" fill="rgb(242,60,45)" fg:x="152" fg:w="1"/><text x="12.7809%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="12.6134%" y="437" width="0.0824%" height="15" fill="rgb(234,49,30)" fg:x="153" fg:w="1"/><text x="12.8634%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="12.6134%" y="453" width="0.1649%" height="15" fill="rgb(218,98,6)" fg:x="153" fg:w="2"/><text x="12.8634%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.6958%" y="437" width="0.0824%" height="15" fill="rgb(220,174,29)" fg:x="154" fg:w="1"/><text x="12.9458%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.6958%" y="421" width="0.0824%" height="15" fill="rgb(236,163,23)" fg:x="154" fg:w="1"/><text x="12.9458%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.6958%" y="405" width="0.0824%" height="15" fill="rgb(242,114,45)" fg:x="154" fg:w="1"/><text x="12.9458%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.8607%" y="437" width="0.0824%" height="15" fill="rgb(232,10,53)" fg:x="156" fg:w="1"/><text x="13.1107%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.8607%" y="421" width="0.0824%" height="15" fill="rgb(245,108,29)" fg:x="156" fg:w="1"/><text x="13.1107%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.8607%" y="405" width="0.0824%" height="15" fill="rgb(240,89,53)" fg:x="156" fg:w="1"/><text x="13.1107%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="12.9431%" y="437" width="0.4122%" height="15" fill="rgb(226,60,45)" fg:x="157" fg:w="5"/><text x="13.1931%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="13.0256%" y="421" width="0.3298%" height="15" fill="rgb(230,41,44)" fg:x="158" fg:w="4"/><text x="13.2756%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="13.0256%" y="405" width="0.3298%" height="15" fill="rgb(230,26,20)" fg:x="158" fg:w="4"/><text x="13.2756%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="13.1080%" y="389" width="0.2473%" height="15" fill="rgb(237,170,32)" fg:x="159" fg:w="3"/><text x="13.3580%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.2729%" y="373" width="0.0824%" height="15" fill="rgb(212,35,42)" fg:x="161" fg:w="1"/><text x="13.5229%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.2729%" y="357" width="0.0824%" height="15" fill="rgb(227,31,34)" fg:x="161" fg:w="1"/><text x="13.5229%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="13.4378%" y="389" width="0.2473%" height="15" fill="rgb(216,19,18)" fg:x="163" fg:w="3"/><text x="13.6878%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.5202%" y="373" width="0.1649%" height="15" fill="rgb(211,133,42)" fg:x="164" fg:w="2"/><text x="13.7702%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.5202%" y="357" width="0.1649%" height="15" fill="rgb(244,66,13)" fg:x="164" fg:w="2"/><text x="13.7702%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.6851%" y="373" width="0.0824%" height="15" fill="rgb(218,185,50)" fg:x="166" fg:w="1"/><text x="13.9351%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.6851%" y="357" width="0.0824%" height="15" fill="rgb(219,149,13)" fg:x="166" fg:w="1"/><text x="13.9351%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="13.6851%" y="389" width="0.1649%" height="15" fill="rgb(221,125,0)" fg:x="166" fg:w="2"/><text x="13.9351%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7675%" y="373" width="0.0824%" height="15" fill="rgb(247,126,27)" fg:x="167" fg:w="1"/><text x="14.0175%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7675%" y="357" width="0.0824%" height="15" fill="rgb(250,138,30)" fg:x="167" fg:w="1"/><text x="14.0175%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.7675%" y="341" width="0.0824%" height="15" fill="rgb(230,151,9)" fg:x="167" fg:w="1"/><text x="14.0175%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.7675%" y="325" width="0.0824%" height="15" fill="rgb(233,80,38)" fg:x="167" fg:w="1"/><text x="14.0175%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.7675%" y="309" width="0.0824%" height="15" fill="rgb(232,68,43)" fg:x="167" fg:w="1"/><text x="14.0175%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.49%)</title><rect x="13.4378%" y="421" width="0.4946%" height="15" fill="rgb(254,5,50)" fg:x="163" fg:w="6"/><text x="13.6878%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="13.4378%" y="405" width="0.4946%" height="15" fill="rgb(225,45,5)" fg:x="163" fg:w="6"/><text x="13.6878%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.8500%" y="389" width="0.0824%" height="15" fill="rgb(239,22,3)" fg:x="168" fg:w="1"/><text x="14.1000%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.8500%" y="373" width="0.0824%" height="15" fill="rgb(243,129,0)" fg:x="168" fg:w="1"/><text x="14.1000%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="13.9324%" y="421" width="0.4122%" height="15" fill="rgb(223,164,0)" fg:x="169" fg:w="5"/><text x="14.1824%" y="431.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="13.9324%" y="405" width="0.4122%" height="15" fill="rgb(221,46,29)" fg:x="169" fg:w="5"/><text x="14.1824%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="14.0973%" y="389" width="0.2473%" height="15" fill="rgb(205,97,47)" fg:x="171" fg:w="3"/><text x="14.3473%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="14.0973%" y="373" width="0.2473%" height="15" fill="rgb(249,14,8)" fg:x="171" fg:w="3"/><text x="14.3473%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="14.3446%" y="405" width="0.2473%" height="15" fill="rgb(216,77,3)" fg:x="174" fg:w="3"/><text x="14.5946%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.4270%" y="389" width="0.1649%" height="15" fill="rgb(206,168,54)" fg:x="175" fg:w="2"/><text x="14.6770%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="14.6744%" y="389" width="0.1649%" height="15" fill="rgb(236,3,41)" fg:x="178" fg:w="2"/><text x="14.9244%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.6744%" y="373" width="0.1649%" height="15" fill="rgb(231,132,24)" fg:x="178" fg:w="2"/><text x="14.9244%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.7568%" y="357" width="0.0824%" height="15" fill="rgb(227,221,40)" fg:x="179" fg:w="1"/><text x="15.0068%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7568%" y="341" width="0.0824%" height="15" fill="rgb(233,151,11)" fg:x="179" fg:w="1"/><text x="15.0068%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.7568%" y="325" width="0.0824%" height="15" fill="rgb(247,81,35)" fg:x="179" fg:w="1"/><text x="15.0068%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.7568%" y="309" width="0.0824%" height="15" fill="rgb(243,128,48)" fg:x="179" fg:w="1"/><text x="15.0068%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.7568%" y="293" width="0.0824%" height="15" fill="rgb(253,16,10)" fg:x="179" fg:w="1"/><text x="15.0068%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.8392%" y="373" width="0.0824%" height="15" fill="rgb(228,67,27)" fg:x="180" fg:w="1"/><text x="15.0892%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.8392%" y="357" width="0.0824%" height="15" fill="rgb(231,105,25)" fg:x="180" fg:w="1"/><text x="15.0892%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="14.8392%" y="389" width="0.1649%" height="15" fill="rgb(213,166,47)" fg:x="180" fg:w="2"/><text x="15.0892%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.9217%" y="373" width="0.0824%" height="15" fill="rgb(209,27,10)" fg:x="181" fg:w="1"/><text x="15.1717%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.9217%" y="357" width="0.0824%" height="15" fill="rgb(241,44,30)" fg:x="181" fg:w="1"/><text x="15.1717%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="14.5919%" y="405" width="0.4946%" height="15" fill="rgb(223,216,15)" fg:x="177" fg:w="6"/><text x="14.8419%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.0041%" y="389" width="0.0824%" height="15" fill="rgb(227,14,7)" fg:x="182" fg:w="1"/><text x="15.2541%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.0866%" y="373" width="0.0824%" height="15" fill="rgb(237,14,5)" fg:x="183" fg:w="1"/><text x="15.3366%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.91%)</title><rect x="14.3446%" y="421" width="0.9068%" height="15" fill="rgb(232,14,36)" fg:x="174" fg:w="11"/><text x="14.5946%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.0866%" y="405" width="0.1649%" height="15" fill="rgb(234,0,38)" fg:x="183" fg:w="2"/><text x="15.3366%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.0866%" y="389" width="0.1649%" height="15" fill="rgb(207,170,14)" fg:x="183" fg:w="2"/><text x="15.3366%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="15.1690%" y="373" width="0.0824%" height="15" fill="rgb(252,45,13)" fg:x="184" fg:w="1"/><text x="15.4190%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.98%)</title><rect x="13.3553%" y="437" width="1.9786%" height="15" fill="rgb(213,142,7)" fg:x="162" fg:w="24"/><text x="13.6053%" y="447.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.2514%" y="421" width="0.0824%" height="15" fill="rgb(216,157,23)" fg:x="185" fg:w="1"/><text x="15.5014%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.2514%" y="405" width="0.0824%" height="15" fill="rgb(212,145,33)" fg:x="185" fg:w="1"/><text x="15.5014%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.2514%" y="389" width="0.0824%" height="15" fill="rgb(233,26,13)" fg:x="185" fg:w="1"/><text x="15.5014%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.64%)</title><rect x="12.7782%" y="453" width="2.6381%" height="15" fill="rgb(219,196,19)" fg:x="155" fg:w="32"/><text x="13.0282%" y="463.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.3339%" y="437" width="0.0824%" height="15" fill="rgb(246,56,21)" fg:x="186" fg:w="1"/><text x="15.5839%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.3339%" y="421" width="0.0824%" height="15" fill="rgb(222,28,53)" fg:x="186" fg:w="1"/><text x="15.5839%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3339%" y="405" width="0.0824%" height="15" fill="rgb(224,5,27)" fg:x="186" fg:w="1"/><text x="15.5839%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.3339%" y="389" width="0.0824%" height="15" fill="rgb(220,153,33)" fg:x="186" fg:w="1"/><text x="15.5839%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.3339%" y="373" width="0.0824%" height="15" fill="rgb(226,58,19)" fg:x="186" fg:w="1"/><text x="15.5839%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.3339%" y="357" width="0.0824%" height="15" fill="rgb(239,112,23)" fg:x="186" fg:w="1"/><text x="15.5839%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.97%)</title><rect x="12.5309%" y="469" width="2.9678%" height="15" fill="rgb(251,213,20)" fg:x="152" fg:w="36"/><text x="12.7809%" y="479.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.4163%" y="453" width="0.0824%" height="15" fill="rgb(215,181,21)" fg:x="187" fg:w="1"/><text x="15.6663%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.4163%" y="437" width="0.0824%" height="15" fill="rgb(240,8,35)" fg:x="187" fg:w="1"/><text x="15.6663%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="15.4988%" y="437" width="0.1649%" height="15" fill="rgb(232,203,3)" fg:x="188" fg:w="2"/><text x="15.7488%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="15.6636%" y="389" width="0.1649%" height="15" fill="rgb(214,202,43)" fg:x="190" fg:w="2"/><text x="15.9136%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7461%" y="373" width="0.0824%" height="15" fill="rgb(254,35,11)" fg:x="191" fg:w="1"/><text x="15.9961%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="15.4988%" y="469" width="0.4946%" height="15" fill="rgb(239,173,13)" fg:x="188" fg:w="6"/><text x="15.7488%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.49%)</title><rect x="15.4988%" y="453" width="0.4946%" height="15" fill="rgb(220,141,0)" fg:x="188" fg:w="6"/><text x="15.7488%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="15.6636%" y="437" width="0.3298%" height="15" fill="rgb(210,98,12)" fg:x="190" fg:w="4"/><text x="15.9136%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="15.6636%" y="421" width="0.3298%" height="15" fill="rgb(254,153,22)" fg:x="190" fg:w="4"/><text x="15.9136%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="15.6636%" y="405" width="0.3298%" height="15" fill="rgb(247,223,17)" fg:x="190" fg:w="4"/><text x="15.9136%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.8285%" y="389" width="0.1649%" height="15" fill="rgb(246,56,7)" fg:x="192" fg:w="2"/><text x="16.0785%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9110%" y="373" width="0.0824%" height="15" fill="rgb(240,226,12)" fg:x="193" fg:w="1"/><text x="16.1610%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.0758%" y="421" width="0.1649%" height="15" fill="rgb(205,87,46)" fg:x="195" fg:w="2"/><text x="16.3258%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.2407%" y="421" width="0.0824%" height="15" fill="rgb(245,214,51)" fg:x="197" fg:w="1"/><text x="16.4907%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="16.2407%" y="405" width="0.0824%" height="15" fill="rgb(223,172,33)" fg:x="197" fg:w="1"/><text x="16.4907%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3232%" y="421" width="0.0824%" height="15" fill="rgb(227,203,34)" fg:x="198" fg:w="1"/><text x="16.5732%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3232%" y="405" width="0.0824%" height="15" fill="rgb(248,143,44)" fg:x="198" fg:w="1"/><text x="16.5732%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3232%" y="389" width="0.0824%" height="15" fill="rgb(226,162,5)" fg:x="198" fg:w="1"/><text x="16.5732%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="16.4056%" y="421" width="0.0824%" height="15" fill="rgb(211,143,1)" fg:x="199" fg:w="1"/><text x="16.6556%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.4056%" y="405" width="0.0824%" height="15" fill="rgb(224,96,15)" fg:x="199" fg:w="1"/><text x="16.6556%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4056%" y="389" width="0.0824%" height="15" fill="rgb(222,4,38)" fg:x="199" fg:w="1"/><text x="16.6556%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.4880%" y="373" width="0.0824%" height="15" fill="rgb(253,228,15)" fg:x="200" fg:w="1"/><text x="16.7380%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="16.4880%" y="357" width="0.0824%" height="15" fill="rgb(242,194,12)" fg:x="200" fg:w="1"/><text x="16.7380%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="16.4880%" y="341" width="0.0824%" height="15" fill="rgb(214,177,31)" fg:x="200" fg:w="1"/><text x="16.7380%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="16.6529%" y="325" width="0.0824%" height="15" fill="rgb(226,58,51)" fg:x="202" fg:w="1"/><text x="16.9029%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="16.9827%" y="293" width="0.1649%" height="15" fill="rgb(250,119,16)" fg:x="206" fg:w="2"/><text x="17.2327%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.74%)</title><rect x="16.4880%" y="389" width="0.7420%" height="15" fill="rgb(223,128,53)" fg:x="200" fg:w="9"/><text x="16.7380%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.66%)</title><rect x="16.5705%" y="373" width="0.6595%" height="15" fill="rgb(251,199,15)" fg:x="201" fg:w="8"/><text x="16.8205%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.66%)</title><rect x="16.5705%" y="357" width="0.6595%" height="15" fill="rgb(235,168,42)" fg:x="201" fg:w="8"/><text x="16.8205%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.66%)</title><rect x="16.5705%" y="341" width="0.6595%" height="15" fill="rgb(250,210,17)" fg:x="201" fg:w="8"/><text x="16.8205%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="16.7354%" y="325" width="0.4946%" height="15" fill="rgb(226,36,41)" fg:x="203" fg:w="6"/><text x="16.9854%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="16.8178%" y="309" width="0.4122%" height="15" fill="rgb(225,87,10)" fg:x="204" fg:w="5"/><text x="17.0678%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.1476%" y="293" width="0.0824%" height="15" fill="rgb(228,83,9)" fg:x="208" fg:w="1"/><text x="17.3976%" y="303.50"></text></g><g><title>engine::session::Session::flush (62 samples, 5.11%)</title><rect x="12.2836%" y="565" width="5.1113%" height="15" fill="rgb(225,16,36)" fg:x="149" fg:w="62"/><text x="12.5336%" y="575.50">engine..</text></g><g><title>engine::session::state::State::close (60 samples, 4.95%)</title><rect x="12.4485%" y="549" width="4.9464%" height="15" fill="rgb(242,198,13)" fg:x="151" fg:w="60"/><text x="12.6985%" y="559.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (59 samples, 4.86%)</title><rect x="12.5309%" y="533" width="4.8640%" height="15" fill="rgb(239,25,51)" fg:x="152" fg:w="59"/><text x="12.7809%" y="543.50">engine..</text></g><g><title>core::iter::adapters::try_process (59 samples, 4.86%)</title><rect x="12.5309%" y="517" width="4.8640%" height="15" fill="rgb(239,28,37)" fg:x="152" fg:w="59"/><text x="12.7809%" y="527.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (59 samples, 4.86%)</title><rect x="12.5309%" y="501" width="4.8640%" height="15" fill="rgb(234,70,17)" fg:x="152" fg:w="59"/><text x="12.7809%" y="511.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (59 samples, 4.86%)</title><rect x="12.5309%" y="485" width="4.8640%" height="15" fill="rgb(231,215,53)" fg:x="152" fg:w="59"/><text x="12.7809%" y="495.50">engine..</text></g><g><title>kernel::model::any_entity_changes (17 samples, 1.40%)</title><rect x="15.9934%" y="469" width="1.4015%" height="15" fill="rgb(218,140,42)" fg:x="194" fg:w="17"/><text x="16.2434%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.40%)</title><rect x="15.9934%" y="453" width="1.4015%" height="15" fill="rgb(233,227,45)" fg:x="194" fg:w="17"/><text x="16.2434%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.40%)</title><rect x="15.9934%" y="437" width="1.4015%" height="15" fill="rgb(225,189,21)" fg:x="194" fg:w="17"/><text x="16.2434%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.91%)</title><rect x="16.4880%" y="421" width="0.9068%" height="15" fill="rgb(237,176,54)" fg:x="200" fg:w="11"/><text x="16.7380%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.91%)</title><rect x="16.4880%" y="405" width="0.9068%" height="15" fill="rgb(215,131,46)" fg:x="200" fg:w="11"/><text x="16.7380%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="17.2300%" y="389" width="0.1649%" height="15" fill="rgb(218,95,20)" fg:x="209" fg:w="2"/><text x="17.4800%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3124%" y="373" width="0.0824%" height="15" fill="rgb(208,198,12)" fg:x="210" fg:w="1"/><text x="17.5624%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="17.3949%" y="565" width="0.0824%" height="15" fill="rgb(239,107,50)" fg:x="211" fg:w="1"/><text x="17.6449%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="17.3949%" y="549" width="0.0824%" height="15" fill="rgb(240,217,37)" fg:x="211" fg:w="1"/><text x="17.6449%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="17.3949%" y="533" width="0.0824%" height="15" fill="rgb(242,197,49)" fg:x="211" fg:w="1"/><text x="17.6449%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.3949%" y="517" width="0.0824%" height="15" fill="rgb(219,171,17)" fg:x="211" fg:w="1"/><text x="17.6449%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3949%" y="501" width="0.0824%" height="15" fill="rgb(209,81,40)" fg:x="211" fg:w="1"/><text x="17.6449%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3949%" y="485" width="0.0824%" height="15" fill="rgb(237,156,30)" fg:x="211" fg:w="1"/><text x="17.6449%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="17.4773%" y="533" width="0.0824%" height="15" fill="rgb(212,127,16)" fg:x="212" fg:w="1"/><text x="17.7273%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.4773%" y="517" width="0.0824%" height="15" fill="rgb(226,66,32)" fg:x="212" fg:w="1"/><text x="17.7273%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4773%" y="501" width="0.0824%" height="15" fill="rgb(245,22,46)" fg:x="212" fg:w="1"/><text x="17.7273%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.4773%" y="485" width="0.0824%" height="15" fill="rgb(210,112,21)" fg:x="212" fg:w="1"/><text x="17.7273%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4773%" y="469" width="0.0824%" height="15" fill="rgb(207,118,39)" fg:x="212" fg:w="1"/><text x="17.7273%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.5598%" y="437" width="0.0824%" height="15" fill="rgb(205,206,35)" fg:x="213" fg:w="1"/><text x="17.8098%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="17.5598%" y="533" width="0.1649%" height="15" fill="rgb(222,120,2)" fg:x="213" fg:w="2"/><text x="17.8098%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="17.5598%" y="517" width="0.1649%" height="15" fill="rgb(205,38,18)" fg:x="213" fg:w="2"/><text x="17.8098%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.5598%" y="501" width="0.1649%" height="15" fill="rgb(226,61,2)" fg:x="213" fg:w="2"/><text x="17.8098%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.5598%" y="485" width="0.1649%" height="15" fill="rgb(242,161,23)" fg:x="213" fg:w="2"/><text x="17.8098%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.5598%" y="469" width="0.1649%" height="15" fill="rgb(213,13,52)" fg:x="213" fg:w="2"/><text x="17.8098%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.5598%" y="453" width="0.1649%" height="15" fill="rgb(246,209,47)" fg:x="213" fg:w="2"/><text x="17.8098%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="17.6422%" y="437" width="0.0824%" height="15" fill="rgb(214,41,3)" fg:x="214" fg:w="1"/><text x="17.8922%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="17.6422%" y="421" width="0.0824%" height="15" fill="rgb(236,119,38)" fg:x="214" fg:w="1"/><text x="17.8922%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="17.7246%" y="501" width="0.0824%" height="15" fill="rgb(218,50,11)" fg:x="215" fg:w="1"/><text x="17.9746%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7246%" y="485" width="0.0824%" height="15" fill="rgb(228,38,11)" fg:x="215" fg:w="1"/><text x="17.9746%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7246%" y="469" width="0.0824%" height="15" fill="rgb(212,13,9)" fg:x="215" fg:w="1"/><text x="17.9746%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7246%" y="453" width="0.0824%" height="15" fill="rgb(208,211,9)" fg:x="215" fg:w="1"/><text x="17.9746%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.7246%" y="437" width="0.0824%" height="15" fill="rgb(239,39,32)" fg:x="215" fg:w="1"/><text x="17.9746%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8071%" y="501" width="0.0824%" height="15" fill="rgb(254,179,26)" fg:x="216" fg:w="1"/><text x="18.0571%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="17.7246%" y="517" width="0.2473%" height="15" fill="rgb(249,165,28)" fg:x="215" fg:w="3"/><text x="17.9746%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8895%" y="501" width="0.0824%" height="15" fill="rgb(225,59,50)" fg:x="217" fg:w="1"/><text x="18.1395%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.8895%" y="485" width="0.0824%" height="15" fill="rgb(209,122,5)" fg:x="217" fg:w="1"/><text x="18.1395%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.8895%" y="469" width="0.0824%" height="15" fill="rgb(214,65,34)" fg:x="217" fg:w="1"/><text x="18.1395%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8895%" y="453" width="0.0824%" height="15" fill="rgb(249,183,32)" fg:x="217" fg:w="1"/><text x="18.1395%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="17.8895%" y="437" width="0.0824%" height="15" fill="rgb(218,122,24)" fg:x="217" fg:w="1"/><text x="18.1395%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8895%" y="421" width="0.0824%" height="15" fill="rgb(224,109,18)" fg:x="217" fg:w="1"/><text x="18.1395%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="17.9720%" y="517" width="0.0824%" height="15" fill="rgb(210,68,50)" fg:x="218" fg:w="1"/><text x="18.2220%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.9720%" y="501" width="0.0824%" height="15" fill="rgb(212,184,34)" fg:x="218" fg:w="1"/><text x="18.2220%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="17.9720%" y="485" width="0.0824%" height="15" fill="rgb(238,105,48)" fg:x="218" fg:w="1"/><text x="18.2220%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.0544%" y="485" width="0.0824%" height="15" fill="rgb(222,134,54)" fg:x="219" fg:w="1"/><text x="18.3044%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0544%" y="469" width="0.0824%" height="15" fill="rgb(246,24,43)" fg:x="219" fg:w="1"/><text x="18.3044%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0544%" y="453" width="0.0824%" height="15" fill="rgb(227,169,22)" fg:x="219" fg:w="1"/><text x="18.3044%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0544%" y="437" width="0.0824%" height="15" fill="rgb(253,152,4)" fg:x="219" fg:w="1"/><text x="18.3044%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1369%" y="389" width="0.0824%" height="15" fill="rgb(219,158,36)" fg:x="220" fg:w="1"/><text x="18.3869%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1369%" y="373" width="0.0824%" height="15" fill="rgb(251,128,40)" fg:x="220" fg:w="1"/><text x="18.3869%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.82%)</title><rect x="17.4773%" y="549" width="0.8244%" height="15" fill="rgb(254,101,39)" fg:x="212" fg:w="10"/><text x="17.7273%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.58%)</title><rect x="17.7246%" y="533" width="0.5771%" height="15" fill="rgb(221,168,40)" fg:x="215" fg:w="7"/><text x="17.9746%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.25%)</title><rect x="18.0544%" y="517" width="0.2473%" height="15" fill="rgb(221,14,27)" fg:x="219" fg:w="3"/><text x="18.3044%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="18.0544%" y="501" width="0.2473%" height="15" fill="rgb(207,36,43)" fg:x="219" fg:w="3"/><text x="18.3044%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="18.1369%" y="485" width="0.1649%" height="15" fill="rgb(240,172,53)" fg:x="220" fg:w="2"/><text x="18.3869%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="18.1369%" y="469" width="0.1649%" height="15" fill="rgb(241,138,43)" fg:x="220" fg:w="2"/><text x="18.3869%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="18.1369%" y="453" width="0.1649%" height="15" fill="rgb(227,78,19)" fg:x="220" fg:w="2"/><text x="18.3869%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="18.1369%" y="437" width="0.1649%" height="15" fill="rgb(215,127,44)" fg:x="220" fg:w="2"/><text x="18.3869%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="18.1369%" y="421" width="0.1649%" height="15" fill="rgb(227,13,10)" fg:x="220" fg:w="2"/><text x="18.3869%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="18.1369%" y="405" width="0.1649%" height="15" fill="rgb(249,177,6)" fg:x="220" fg:w="2"/><text x="18.3869%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.2193%" y="389" width="0.0824%" height="15" fill="rgb(215,154,26)" fg:x="221" fg:w="1"/><text x="18.4693%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2193%" y="373" width="0.0824%" height="15" fill="rgb(250,168,20)" fg:x="221" fg:w="1"/><text x="18.4693%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.3017%" y="533" width="0.1649%" height="15" fill="rgb(222,53,38)" fg:x="222" fg:w="2"/><text x="18.5517%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.3017%" y="517" width="0.1649%" height="15" fill="rgb(245,154,5)" fg:x="222" fg:w="2"/><text x="18.5517%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.3842%" y="501" width="0.0824%" height="15" fill="rgb(214,89,50)" fg:x="223" fg:w="1"/><text x="18.6342%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3842%" y="485" width="0.0824%" height="15" fill="rgb(232,73,14)" fg:x="223" fg:w="1"/><text x="18.6342%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3842%" y="469" width="0.0824%" height="15" fill="rgb(230,101,20)" fg:x="223" fg:w="1"/><text x="18.6342%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.3842%" y="453" width="0.0824%" height="15" fill="rgb(208,56,28)" fg:x="223" fg:w="1"/><text x="18.6342%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.3842%" y="437" width="0.0824%" height="15" fill="rgb(247,205,22)" fg:x="223" fg:w="1"/><text x="18.6342%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.3842%" y="421" width="0.0824%" height="15" fill="rgb(252,109,51)" fg:x="223" fg:w="1"/><text x="18.6342%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3842%" y="405" width="0.0824%" height="15" fill="rgb(220,40,24)" fg:x="223" fg:w="1"/><text x="18.6342%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3842%" y="389" width="0.0824%" height="15" fill="rgb(251,108,7)" fg:x="223" fg:w="1"/><text x="18.6342%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.3842%" y="373" width="0.0824%" height="15" fill="rgb(238,102,51)" fg:x="223" fg:w="1"/><text x="18.6342%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.3842%" y="357" width="0.0824%" height="15" fill="rgb(219,149,34)" fg:x="223" fg:w="1"/><text x="18.6342%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.3842%" y="341" width="0.0824%" height="15" fill="rgb(239,70,0)" fg:x="223" fg:w="1"/><text x="18.6342%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.3842%" y="325" width="0.0824%" height="15" fill="rgb(246,214,23)" fg:x="223" fg:w="1"/><text x="18.6342%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="18.4666%" y="533" width="0.0824%" height="15" fill="rgb(239,221,51)" fg:x="224" fg:w="1"/><text x="18.7166%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4666%" y="517" width="0.0824%" height="15" fill="rgb(254,62,14)" fg:x="224" fg:w="1"/><text x="18.7166%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.33%)</title><rect x="18.3017%" y="549" width="0.3298%" height="15" fill="rgb(253,57,33)" fg:x="222" fg:w="4"/><text x="18.5517%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5491%" y="533" width="0.0824%" height="15" fill="rgb(229,34,6)" fg:x="225" fg:w="1"/><text x="18.7991%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5491%" y="517" width="0.0824%" height="15" fill="rgb(235,191,23)" fg:x="225" fg:w="1"/><text x="18.7991%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.5491%" y="501" width="0.0824%" height="15" fill="rgb(217,207,27)" fg:x="225" fg:w="1"/><text x="18.7991%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5491%" y="485" width="0.0824%" height="15" fill="rgb(232,41,44)" fg:x="225" fg:w="1"/><text x="18.7991%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5491%" y="469" width="0.0824%" height="15" fill="rgb(221,188,19)" fg:x="225" fg:w="1"/><text x="18.7991%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5491%" y="453" width="0.0824%" height="15" fill="rgb(245,180,45)" fg:x="225" fg:w="1"/><text x="18.7991%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5491%" y="437" width="0.0824%" height="15" fill="rgb(250,220,42)" fg:x="225" fg:w="1"/><text x="18.7991%" y="447.50"></text></g><g><title>plugins_core::build::Build::save (15 samples, 1.24%)</title><rect x="17.4773%" y="565" width="1.2366%" height="15" fill="rgb(234,16,34)" fg:x="212" fg:w="15"/><text x="17.7273%" y="575.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="18.6315%" y="549" width="0.0824%" height="15" fill="rgb(233,217,23)" fg:x="226" fg:w="1"/><text x="18.8815%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.6315%" y="533" width="0.0824%" height="15" fill="rgb(209,22,46)" fg:x="226" fg:w="1"/><text x="18.8815%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.6315%" y="517" width="0.0824%" height="15" fill="rgb(213,101,18)" fg:x="226" fg:w="1"/><text x="18.8815%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (2 samples, 0.16%)</title><rect x="18.7139%" y="565" width="0.1649%" height="15" fill="rgb(215,179,52)" fg:x="227" fg:w="2"/><text x="18.9639%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (2 samples, 0.16%)</title><rect x="18.7139%" y="549" width="0.1649%" height="15" fill="rgb(223,50,25)" fg:x="227" fg:w="2"/><text x="18.9639%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="18.7139%" y="533" width="0.1649%" height="15" fill="rgb(224,51,44)" fg:x="227" fg:w="2"/><text x="18.9639%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (2 samples, 0.16%)</title><rect x="18.7139%" y="517" width="0.1649%" height="15" fill="rgb(224,13,54)" fg:x="227" fg:w="2"/><text x="18.9639%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.7139%" y="501" width="0.1649%" height="15" fill="rgb(219,58,47)" fg:x="227" fg:w="2"/><text x="18.9639%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7964%" y="485" width="0.0824%" height="15" fill="rgb(246,124,34)" fg:x="228" fg:w="1"/><text x="19.0464%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.9613%" y="485" width="0.1649%" height="15" fill="rgb(245,109,25)" fg:x="230" fg:w="2"/><text x="19.2113%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.9613%" y="469" width="0.1649%" height="15" fill="rgb(235,48,23)" fg:x="230" fg:w="2"/><text x="19.2113%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.0437%" y="453" width="0.0824%" height="15" fill="rgb(229,203,36)" fg:x="231" fg:w="1"/><text x="19.2937%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0437%" y="437" width="0.0824%" height="15" fill="rgb(234,180,9)" fg:x="231" fg:w="1"/><text x="19.2937%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0437%" y="421" width="0.0824%" height="15" fill="rgb(228,98,45)" fg:x="231" fg:w="1"/><text x="19.2937%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.0437%" y="405" width="0.0824%" height="15" fill="rgb(240,24,36)" fg:x="231" fg:w="1"/><text x="19.2937%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.0437%" y="389" width="0.0824%" height="15" fill="rgb(227,154,19)" fg:x="231" fg:w="1"/><text x="19.2937%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.0437%" y="373" width="0.0824%" height="15" fill="rgb(231,2,48)" fg:x="231" fg:w="1"/><text x="19.2937%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0437%" y="357" width="0.0824%" height="15" fill="rgb(219,216,0)" fg:x="231" fg:w="1"/><text x="19.2937%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0437%" y="341" width="0.0824%" height="15" fill="rgb(251,88,0)" fg:x="231" fg:w="1"/><text x="19.2937%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.0437%" y="325" width="0.0824%" height="15" fill="rgb(242,45,45)" fg:x="231" fg:w="1"/><text x="19.2937%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.0437%" y="309" width="0.0824%" height="15" fill="rgb(218,149,45)" fg:x="231" fg:w="1"/><text x="19.2937%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.0437%" y="293" width="0.0824%" height="15" fill="rgb(247,194,10)" fg:x="231" fg:w="1"/><text x="19.2937%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.0437%" y="277" width="0.0824%" height="15" fill="rgb(234,33,37)" fg:x="231" fg:w="1"/><text x="19.2937%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0437%" y="261" width="0.0824%" height="15" fill="rgb(218,61,13)" fg:x="231" fg:w="1"/><text x="19.2937%" y="271.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.33%)</title><rect x="18.9613%" y="533" width="0.3298%" height="15" fill="rgb(210,80,52)" fg:x="230" fg:w="4"/><text x="19.2113%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="18.9613%" y="517" width="0.3298%" height="15" fill="rgb(218,203,27)" fg:x="230" fg:w="4"/><text x="19.2113%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.33%)</title><rect x="18.9613%" y="501" width="0.3298%" height="15" fill="rgb(209,126,33)" fg:x="230" fg:w="4"/><text x="19.2113%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.1261%" y="485" width="0.1649%" height="15" fill="rgb(234,173,41)" fg:x="232" fg:w="2"/><text x="19.3761%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1261%" y="469" width="0.1649%" height="15" fill="rgb(228,166,9)" fg:x="232" fg:w="2"/><text x="19.3761%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.2086%" y="453" width="0.0824%" height="15" fill="rgb(208,124,43)" fg:x="233" fg:w="1"/><text x="19.4586%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2086%" y="437" width="0.0824%" height="15" fill="rgb(212,154,38)" fg:x="233" fg:w="1"/><text x="19.4586%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2086%" y="421" width="0.0824%" height="15" fill="rgb(246,179,35)" fg:x="233" fg:w="1"/><text x="19.4586%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2086%" y="405" width="0.0824%" height="15" fill="rgb(251,3,50)" fg:x="233" fg:w="1"/><text x="19.4586%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.2086%" y="389" width="0.0824%" height="15" fill="rgb(219,96,8)" fg:x="233" fg:w="1"/><text x="19.4586%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="19.2910%" y="469" width="0.0824%" height="15" fill="rgb(251,216,33)" fg:x="234" fg:w="1"/><text x="19.5410%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="19.2910%" y="517" width="0.1649%" height="15" fill="rgb(243,145,29)" fg:x="234" fg:w="2"/><text x="19.5410%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.2910%" y="501" width="0.1649%" height="15" fill="rgb(210,75,20)" fg:x="234" fg:w="2"/><text x="19.5410%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.2910%" y="485" width="0.1649%" height="15" fill="rgb(235,56,8)" fg:x="234" fg:w="2"/><text x="19.5410%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Kind&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.3735%" y="469" width="0.0824%" height="15" fill="rgb(226,175,49)" fg:x="235" fg:w="1"/><text x="19.6235%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3735%" y="453" width="0.0824%" height="15" fill="rgb(242,204,23)" fg:x="235" fg:w="1"/><text x="19.6235%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3735%" y="437" width="0.0824%" height="15" fill="rgb(225,104,24)" fg:x="235" fg:w="1"/><text x="19.6235%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4559%" y="485" width="0.0824%" height="15" fill="rgb(253,34,1)" fg:x="236" fg:w="1"/><text x="19.7059%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4559%" y="469" width="0.0824%" height="15" fill="rgb(233,199,23)" fg:x="236" fg:w="1"/><text x="19.7059%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.4559%" y="453" width="0.0824%" height="15" fill="rgb(247,7,51)" fg:x="236" fg:w="1"/><text x="19.7059%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.4559%" y="437" width="0.0824%" height="15" fill="rgb(214,146,12)" fg:x="236" fg:w="1"/><text x="19.7059%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.4559%" y="421" width="0.0824%" height="15" fill="rgb(234,181,43)" fg:x="236" fg:w="1"/><text x="19.7059%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.4559%" y="405" width="0.0824%" height="15" fill="rgb(239,148,6)" fg:x="236" fg:w="1"/><text x="19.7059%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.4559%" y="389" width="0.0824%" height="15" fill="rgb(206,151,17)" fg:x="236" fg:w="1"/><text x="19.7059%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5383%" y="469" width="0.0824%" height="15" fill="rgb(213,215,10)" fg:x="237" fg:w="1"/><text x="19.7883%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5383%" y="453" width="0.0824%" height="15" fill="rgb(215,220,44)" fg:x="237" fg:w="1"/><text x="19.7883%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5383%" y="437" width="0.0824%" height="15" fill="rgb(245,205,37)" fg:x="237" fg:w="1"/><text x="19.7883%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5383%" y="421" width="0.0824%" height="15" fill="rgb(245,130,43)" fg:x="237" fg:w="1"/><text x="19.7883%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5383%" y="405" width="0.0824%" height="15" fill="rgb(231,227,38)" fg:x="237" fg:w="1"/><text x="19.7883%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.5383%" y="389" width="0.0824%" height="15" fill="rgb(233,185,4)" fg:x="237" fg:w="1"/><text x="19.7883%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.5383%" y="373" width="0.0824%" height="15" fill="rgb(224,154,43)" fg:x="237" fg:w="1"/><text x="19.7883%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.5383%" y="357" width="0.0824%" height="15" fill="rgb(235,156,15)" fg:x="237" fg:w="1"/><text x="19.7883%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5383%" y="341" width="0.0824%" height="15" fill="rgb(211,55,43)" fg:x="237" fg:w="1"/><text x="19.7883%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5383%" y="325" width="0.0824%" height="15" fill="rgb(247,149,40)" fg:x="237" fg:w="1"/><text x="19.7883%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.5383%" y="309" width="0.0824%" height="15" fill="rgb(232,171,16)" fg:x="237" fg:w="1"/><text x="19.7883%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.5383%" y="293" width="0.0824%" height="15" fill="rgb(215,117,49)" fg:x="237" fg:w="1"/><text x="19.7883%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.5383%" y="277" width="0.0824%" height="15" fill="rgb(246,194,11)" fg:x="237" fg:w="1"/><text x="19.7883%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.5383%" y="261" width="0.0824%" height="15" fill="rgb(242,101,44)" fg:x="237" fg:w="1"/><text x="19.7883%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5383%" y="245" width="0.0824%" height="15" fill="rgb(226,174,6)" fg:x="237" fg:w="1"/><text x="19.7883%" y="255.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.41%)</title><rect x="19.2910%" y="533" width="0.4122%" height="15" fill="rgb(213,150,20)" fg:x="234" fg:w="5"/><text x="19.5410%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.25%)</title><rect x="19.4559%" y="517" width="0.2473%" height="15" fill="rgb(222,124,42)" fg:x="236" fg:w="3"/><text x="19.7059%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="19.4559%" y="501" width="0.2473%" height="15" fill="rgb(250,19,47)" fg:x="236" fg:w="3"/><text x="19.7059%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="19.5383%" y="485" width="0.1649%" height="15" fill="rgb(241,217,19)" fg:x="237" fg:w="2"/><text x="19.7883%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6208%" y="469" width="0.0824%" height="15" fill="rgb(207,210,34)" fg:x="238" fg:w="1"/><text x="19.8708%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="19.7032%" y="517" width="0.0824%" height="15" fill="rgb(244,45,4)" fg:x="239" fg:w="1"/><text x="19.9532%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (12 samples, 0.99%)</title><rect x="18.8788%" y="565" width="0.9893%" height="15" fill="rgb(252,134,50)" fg:x="229" fg:w="12"/><text x="19.1288%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (12 samples, 0.99%)</title><rect x="18.8788%" y="549" width="0.9893%" height="15" fill="rgb(238,74,2)" fg:x="229" fg:w="12"/><text x="19.1288%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="19.7032%" y="533" width="0.1649%" height="15" fill="rgb(226,58,46)" fg:x="239" fg:w="2"/><text x="19.9532%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="19.7857%" y="517" width="0.0824%" height="15" fill="rgb(232,83,35)" fg:x="240" fg:w="1"/><text x="20.0357%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="19.7857%" y="501" width="0.0824%" height="15" fill="rgb(212,148,47)" fg:x="240" fg:w="1"/><text x="20.0357%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.7857%" y="485" width="0.0824%" height="15" fill="rgb(235,29,1)" fg:x="240" fg:w="1"/><text x="20.0357%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.7857%" y="469" width="0.0824%" height="15" fill="rgb(247,55,37)" fg:x="240" fg:w="1"/><text x="20.0357%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="19.8681%" y="533" width="0.0824%" height="15" fill="rgb(222,48,3)" fg:x="241" fg:w="1"/><text x="20.1181%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="19.8681%" y="549" width="0.1649%" height="15" fill="rgb(234,21,33)" fg:x="241" fg:w="2"/><text x="20.1181%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9505%" y="533" width="0.0824%" height="15" fill="rgb(247,178,53)" fg:x="242" fg:w="1"/><text x="20.2005%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9505%" y="517" width="0.0824%" height="15" fill="rgb(225,75,7)" fg:x="242" fg:w="1"/><text x="20.2005%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.9505%" y="501" width="0.0824%" height="15" fill="rgb(219,199,7)" fg:x="242" fg:w="1"/><text x="20.2005%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9505%" y="485" width="0.0824%" height="15" fill="rgb(209,93,42)" fg:x="242" fg:w="1"/><text x="20.2005%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.9505%" y="469" width="0.0824%" height="15" fill="rgb(240,175,17)" fg:x="242" fg:w="1"/><text x="20.2005%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="20.0330%" y="549" width="0.0824%" height="15" fill="rgb(232,106,7)" fg:x="243" fg:w="1"/><text x="20.2830%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0330%" y="533" width="0.0824%" height="15" fill="rgb(242,106,43)" fg:x="243" fg:w="1"/><text x="20.2830%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.0330%" y="517" width="0.0824%" height="15" fill="rgb(242,61,37)" fg:x="243" fg:w="1"/><text x="20.2830%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0330%" y="501" width="0.0824%" height="15" fill="rgb(205,72,10)" fg:x="243" fg:w="1"/><text x="20.2830%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0330%" y="485" width="0.0824%" height="15" fill="rgb(214,184,36)" fg:x="243" fg:w="1"/><text x="20.2830%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.0330%" y="469" width="0.0824%" height="15" fill="rgb(206,107,18)" fg:x="243" fg:w="1"/><text x="20.2830%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.1979%" y="533" width="0.1649%" height="15" fill="rgb(210,75,5)" fg:x="245" fg:w="2"/><text x="20.4479%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="20.1979%" y="517" width="0.1649%" height="15" fill="rgb(205,3,19)" fg:x="245" fg:w="2"/><text x="20.4479%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (4 samples, 0.33%)</title><rect x="20.1154%" y="549" width="0.3298%" height="15" fill="rgb(207,181,42)" fg:x="244" fg:w="4"/><text x="20.3654%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="20.3627%" y="533" width="0.0824%" height="15" fill="rgb(229,179,43)" fg:x="247" fg:w="1"/><text x="20.6127%" y="543.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="20.3627%" y="517" width="0.0824%" height="15" fill="rgb(246,95,30)" fg:x="247" fg:w="1"/><text x="20.6127%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.3627%" y="501" width="0.0824%" height="15" fill="rgb(234,144,45)" fg:x="247" fg:w="1"/><text x="20.6127%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="20.4452%" y="517" width="0.1649%" height="15" fill="rgb(250,54,25)" fg:x="248" fg:w="2"/><text x="20.6952%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="20.4452%" y="501" width="0.1649%" height="15" fill="rgb(215,195,40)" fg:x="248" fg:w="2"/><text x="20.6952%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="20.4452%" y="485" width="0.1649%" height="15" fill="rgb(233,188,42)" fg:x="248" fg:w="2"/><text x="20.6952%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="20.4452%" y="469" width="0.1649%" height="15" fill="rgb(247,227,35)" fg:x="248" fg:w="2"/><text x="20.6952%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.4452%" y="453" width="0.1649%" height="15" fill="rgb(249,124,27)" fg:x="248" fg:w="2"/><text x="20.6952%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5276%" y="437" width="0.0824%" height="15" fill="rgb(219,207,25)" fg:x="249" fg:w="1"/><text x="20.7776%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.25%)</title><rect x="20.4452%" y="549" width="0.2473%" height="15" fill="rgb(241,216,47)" fg:x="248" fg:w="3"/><text x="20.6952%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="20.4452%" y="533" width="0.2473%" height="15" fill="rgb(233,82,50)" fg:x="248" fg:w="3"/><text x="20.6952%" y="543.50"></text></g><g><title>plugins_core::build::Build::save (1 samples, 0.08%)</title><rect x="20.6101%" y="517" width="0.0824%" height="15" fill="rgb(232,63,2)" fg:x="250" fg:w="1"/><text x="20.8601%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="20.6925%" y="533" width="0.0824%" height="15" fill="rgb(236,184,28)" fg:x="251" fg:w="1"/><text x="20.9425%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6925%" y="517" width="0.0824%" height="15" fill="rgb(254,63,27)" fg:x="251" fg:w="1"/><text x="20.9425%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7749%" y="437" width="0.0824%" height="15" fill="rgb(253,106,28)" fg:x="252" fg:w="1"/><text x="21.0249%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7749%" y="421" width="0.0824%" height="15" fill="rgb(225,141,39)" fg:x="252" fg:w="1"/><text x="21.0249%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.7749%" y="405" width="0.0824%" height="15" fill="rgb(222,157,20)" fg:x="252" fg:w="1"/><text x="21.0249%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.7749%" y="389" width="0.0824%" height="15" fill="rgb(210,190,9)" fg:x="252" fg:w="1"/><text x="21.0249%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.7749%" y="373" width="0.0824%" height="15" fill="rgb(242,167,7)" fg:x="252" fg:w="1"/><text x="21.0249%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7749%" y="357" width="0.0824%" height="15" fill="rgb(227,82,41)" fg:x="252" fg:w="1"/><text x="21.0249%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7749%" y="341" width="0.0824%" height="15" fill="rgb(222,131,13)" fg:x="252" fg:w="1"/><text x="21.0249%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.7749%" y="325" width="0.0824%" height="15" fill="rgb(221,98,26)" fg:x="252" fg:w="1"/><text x="21.0249%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.7749%" y="309" width="0.0824%" height="15" fill="rgb(251,63,52)" fg:x="252" fg:w="1"/><text x="21.0249%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.7749%" y="293" width="0.0824%" height="15" fill="rgb(246,25,43)" fg:x="252" fg:w="1"/><text x="21.0249%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.7749%" y="277" width="0.0824%" height="15" fill="rgb(247,167,15)" fg:x="252" fg:w="1"/><text x="21.0249%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7749%" y="261" width="0.0824%" height="15" fill="rgb(240,104,42)" fg:x="252" fg:w="1"/><text x="21.0249%" y="271.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="20.7749%" y="485" width="0.1649%" height="15" fill="rgb(224,54,6)" fg:x="252" fg:w="2"/><text x="21.0249%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="20.7749%" y="469" width="0.1649%" height="15" fill="rgb(244,108,35)" fg:x="252" fg:w="2"/><text x="21.0249%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="20.7749%" y="453" width="0.1649%" height="15" fill="rgb(216,154,2)" fg:x="252" fg:w="2"/><text x="21.0249%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="20.8574%" y="437" width="0.0824%" height="15" fill="rgb(222,8,47)" fg:x="253" fg:w="1"/><text x="21.1074%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.8574%" y="421" width="0.0824%" height="15" fill="rgb(252,93,1)" fg:x="253" fg:w="1"/><text x="21.1074%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.8574%" y="405" width="0.0824%" height="15" fill="rgb(223,226,51)" fg:x="253" fg:w="1"/><text x="21.1074%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="20.9398%" y="437" width="0.0824%" height="15" fill="rgb(206,147,9)" fg:x="254" fg:w="1"/><text x="21.1898%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="20.9398%" y="421" width="0.0824%" height="15" fill="rgb(248,180,41)" fg:x="254" fg:w="1"/><text x="21.1898%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.9398%" y="405" width="0.0824%" height="15" fill="rgb(209,47,50)" fg:x="254" fg:w="1"/><text x="21.1898%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.9398%" y="389" width="0.0824%" height="15" fill="rgb(243,65,31)" fg:x="254" fg:w="1"/><text x="21.1898%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.9398%" y="373" width="0.0824%" height="15" fill="rgb(228,128,1)" fg:x="254" fg:w="1"/><text x="21.1898%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.9398%" y="357" width="0.0824%" height="15" fill="rgb(231,192,16)" fg:x="254" fg:w="1"/><text x="21.1898%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="21.1871%" y="421" width="0.3298%" height="15" fill="rgb(224,26,40)" fg:x="257" fg:w="4"/><text x="21.4371%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="21.1871%" y="405" width="0.3298%" height="15" fill="rgb(214,192,17)" fg:x="257" fg:w="4"/><text x="21.4371%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="21.1871%" y="389" width="0.3298%" height="15" fill="rgb(225,147,18)" fg:x="257" fg:w="4"/><text x="21.4371%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="21.2696%" y="373" width="0.2473%" height="15" fill="rgb(205,35,11)" fg:x="258" fg:w="3"/><text x="21.5196%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="21.2696%" y="357" width="0.2473%" height="15" fill="rgb(242,40,42)" fg:x="258" fg:w="3"/><text x="21.5196%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="21.3520%" y="341" width="0.1649%" height="15" fill="rgb(250,170,13)" fg:x="259" fg:w="2"/><text x="21.6020%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="21.3520%" y="325" width="0.1649%" height="15" fill="rgb(240,161,28)" fg:x="259" fg:w="2"/><text x="21.6020%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="21.3520%" y="309" width="0.1649%" height="15" fill="rgb(245,179,12)" fg:x="259" fg:w="2"/><text x="21.6020%" y="319.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="22.0940%" y="309" width="0.0824%" height="15" fill="rgb(250,92,32)" fg:x="268" fg:w="1"/><text x="22.3440%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.58%)</title><rect x="21.6818%" y="405" width="0.5771%" height="15" fill="rgb(233,10,40)" fg:x="263" fg:w="7"/><text x="21.9318%" y="415.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="21.8467%" y="389" width="0.4122%" height="15" fill="rgb(217,98,1)" fg:x="265" fg:w="5"/><text x="22.0967%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="22.0115%" y="373" width="0.2473%" height="15" fill="rgb(238,202,7)" fg:x="267" fg:w="3"/><text x="22.2615%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="22.0115%" y="357" width="0.2473%" height="15" fill="rgb(222,91,3)" fg:x="267" fg:w="3"/><text x="22.2615%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="22.0940%" y="341" width="0.1649%" height="15" fill="rgb(211,170,49)" fg:x="268" fg:w="2"/><text x="22.3440%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="22.0940%" y="325" width="0.1649%" height="15" fill="rgb(253,139,18)" fg:x="268" fg:w="2"/><text x="22.3440%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.1764%" y="309" width="0.0824%" height="15" fill="rgb(222,4,43)" fg:x="269" fg:w="1"/><text x="22.4264%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="22.3413%" y="341" width="0.2473%" height="15" fill="rgb(207,205,12)" fg:x="271" fg:w="3"/><text x="22.5913%" y="351.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="22.3413%" y="325" width="0.2473%" height="15" fill="rgb(216,159,46)" fg:x="271" fg:w="3"/><text x="22.5913%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="22.3413%" y="309" width="0.2473%" height="15" fill="rgb(236,115,1)" fg:x="271" fg:w="3"/><text x="22.5913%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="22.4237%" y="293" width="0.1649%" height="15" fill="rgb(251,35,33)" fg:x="272" fg:w="2"/><text x="22.6737%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="22.3413%" y="389" width="0.3298%" height="15" fill="rgb(248,62,51)" fg:x="271" fg:w="4"/><text x="22.5913%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="22.3413%" y="373" width="0.3298%" height="15" fill="rgb(254,180,19)" fg:x="271" fg:w="4"/><text x="22.5913%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="22.3413%" y="357" width="0.3298%" height="15" fill="rgb(217,100,32)" fg:x="271" fg:w="4"/><text x="22.5913%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="22.5886%" y="341" width="0.0824%" height="15" fill="rgb(224,71,22)" fg:x="274" fg:w="1"/><text x="22.8386%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="22.5886%" y="325" width="0.0824%" height="15" fill="rgb(251,185,33)" fg:x="274" fg:w="1"/><text x="22.8386%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="22.5886%" y="309" width="0.0824%" height="15" fill="rgb(209,75,48)" fg:x="274" fg:w="1"/><text x="22.8386%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="22.6711%" y="389" width="0.4122%" height="15" fill="rgb(253,190,16)" fg:x="275" fg:w="5"/><text x="22.9211%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.0008%" y="373" width="0.0824%" height="15" fill="rgb(226,140,1)" fg:x="279" fg:w="1"/><text x="23.2508%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="23.4130%" y="357" width="0.2473%" height="15" fill="rgb(206,75,30)" fg:x="284" fg:w="3"/><text x="23.6630%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.5779%" y="341" width="0.0824%" height="15" fill="rgb(231,208,37)" fg:x="286" fg:w="1"/><text x="23.8279%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.5779%" y="325" width="0.0824%" height="15" fill="rgb(238,136,40)" fg:x="286" fg:w="1"/><text x="23.8279%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.5779%" y="309" width="0.0824%" height="15" fill="rgb(247,137,17)" fg:x="286" fg:w="1"/><text x="23.8279%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.66%)</title><rect x="23.0833%" y="389" width="0.6595%" height="15" fill="rgb(240,60,40)" fg:x="280" fg:w="8"/><text x="23.3333%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.58%)</title><rect x="23.1657%" y="373" width="0.5771%" height="15" fill="rgb(236,68,50)" fg:x="281" fg:w="7"/><text x="23.4157%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="23.6603%" y="357" width="0.0824%" height="15" fill="rgb(230,42,12)" fg:x="287" fg:w="1"/><text x="23.9103%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.57%)</title><rect x="22.2589%" y="405" width="1.5664%" height="15" fill="rgb(219,16,16)" fg:x="270" fg:w="19"/><text x="22.5089%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.7428%" y="389" width="0.0824%" height="15" fill="rgb(220,38,35)" fg:x="288" fg:w="1"/><text x="23.9928%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.7428%" y="373" width="0.0824%" height="15" fill="rgb(228,33,1)" fg:x="288" fg:w="1"/><text x="23.9928%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (39 samples, 3.22%)</title><rect x="21.0223%" y="437" width="3.2152%" height="15" fill="rgb(241,46,31)" fg:x="255" fg:w="39"/><text x="21.2723%" y="447.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.72%)</title><rect x="21.5169%" y="421" width="2.7205%" height="15" fill="rgb(232,58,20)" fg:x="261" fg:w="33"/><text x="21.7669%" y="431.50">se..</text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="23.8252%" y="405" width="0.4122%" height="15" fill="rgb(206,228,53)" fg:x="289" fg:w="5"/><text x="24.0752%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="24.0725%" y="389" width="0.1649%" height="15" fill="rgb(206,88,33)" fg:x="292" fg:w="2"/><text x="24.3225%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.1550%" y="373" width="0.0824%" height="15" fill="rgb(238,69,7)" fg:x="293" fg:w="1"/><text x="24.4050%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.1550%" y="357" width="0.0824%" height="15" fill="rgb(250,21,46)" fg:x="293" fg:w="1"/><text x="24.4050%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.1550%" y="341" width="0.0824%" height="15" fill="rgb(215,212,21)" fg:x="293" fg:w="1"/><text x="24.4050%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.1550%" y="325" width="0.0824%" height="15" fill="rgb(211,35,12)" fg:x="293" fg:w="1"/><text x="24.4050%" y="335.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="24.3199%" y="405" width="0.2473%" height="15" fill="rgb(231,184,16)" fg:x="295" fg:w="3"/><text x="24.5699%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="24.5672%" y="405" width="0.1649%" height="15" fill="rgb(242,140,15)" fg:x="298" fg:w="2"/><text x="24.8172%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="24.5672%" y="389" width="0.1649%" height="15" fill="rgb(220,37,14)" fg:x="298" fg:w="2"/><text x="24.8172%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="24.7321%" y="389" width="0.2473%" height="15" fill="rgb(223,146,22)" fg:x="300" fg:w="3"/><text x="24.9821%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="24.9794%" y="389" width="0.1649%" height="15" fill="rgb(216,132,15)" fg:x="303" fg:w="2"/><text x="25.2294%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="24.9794%" y="373" width="0.1649%" height="15" fill="rgb(248,83,5)" fg:x="303" fg:w="2"/><text x="25.2294%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.2267%" y="373" width="0.1649%" height="15" fill="rgb(231,206,48)" fg:x="306" fg:w="2"/><text x="25.4767%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.3916%" y="373" width="0.0824%" height="15" fill="rgb(253,185,37)" fg:x="308" fg:w="1"/><text x="25.6416%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.5565%" y="325" width="0.0824%" height="15" fill="rgb(208,21,44)" fg:x="310" fg:w="1"/><text x="25.8065%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.5565%" y="309" width="0.0824%" height="15" fill="rgb(236,125,4)" fg:x="310" fg:w="1"/><text x="25.8065%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.25%)</title><rect x="25.4740%" y="357" width="0.2473%" height="15" fill="rgb(226,134,25)" fg:x="309" fg:w="3"/><text x="25.7240%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="25.5565%" y="341" width="0.1649%" height="15" fill="rgb(250,201,12)" fg:x="310" fg:w="2"/><text x="25.8065%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.6389%" y="325" width="0.0824%" height="15" fill="rgb(225,92,18)" fg:x="311" fg:w="1"/><text x="25.8889%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.6389%" y="309" width="0.0824%" height="15" fill="rgb(227,35,22)" fg:x="311" fg:w="1"/><text x="25.8889%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.6389%" y="293" width="0.0824%" height="15" fill="rgb(214,180,52)" fg:x="311" fg:w="1"/><text x="25.8889%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.57%)</title><rect x="24.2374%" y="437" width="1.5664%" height="15" fill="rgb(233,55,38)" fg:x="294" fg:w="19"/><text x="24.4874%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.57%)</title><rect x="24.2374%" y="421" width="1.5664%" height="15" fill="rgb(249,171,43)" fg:x="294" fg:w="19"/><text x="24.4874%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.07%)</title><rect x="24.7321%" y="405" width="1.0717%" height="15" fill="rgb(239,87,2)" fg:x="300" fg:w="13"/><text x="24.9821%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="25.1443%" y="389" width="0.6595%" height="15" fill="rgb(248,141,5)" fg:x="305" fg:w="8"/><text x="25.3943%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="25.4740%" y="373" width="0.3298%" height="15" fill="rgb(238,33,42)" fg:x="309" fg:w="4"/><text x="25.7240%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.7214%" y="357" width="0.0824%" height="15" fill="rgb(231,57,19)" fg:x="312" fg:w="1"/><text x="25.9714%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.7214%" y="341" width="0.0824%" height="15" fill="rgb(214,78,53)" fg:x="312" fg:w="1"/><text x="25.9714%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.7214%" y="325" width="0.0824%" height="15" fill="rgb(206,132,29)" fg:x="312" fg:w="1"/><text x="25.9714%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="25.8038%" y="437" width="0.0824%" height="15" fill="rgb(248,174,31)" fg:x="313" fg:w="1"/><text x="26.0538%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8862%" y="405" width="0.0824%" height="15" fill="rgb(221,87,13)" fg:x="314" fg:w="1"/><text x="26.1362%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.25%)</title><rect x="25.8862%" y="421" width="0.2473%" height="15" fill="rgb(223,197,17)" fg:x="314" fg:w="3"/><text x="26.1362%" y="431.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="25.9687%" y="405" width="0.1649%" height="15" fill="rgb(220,144,50)" fg:x="315" fg:w="2"/><text x="26.2187%" y="415.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="26.0511%" y="389" width="0.0824%" height="15" fill="rgb(244,201,11)" fg:x="316" fg:w="1"/><text x="26.3011%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="26.2984%" y="389" width="0.2473%" height="15" fill="rgb(249,81,34)" fg:x="319" fg:w="3"/><text x="26.5484%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="26.5458%" y="389" width="0.0824%" height="15" fill="rgb(205,161,12)" fg:x="322" fg:w="1"/><text x="26.7958%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.5458%" y="373" width="0.0824%" height="15" fill="rgb(252,139,50)" fg:x="322" fg:w="1"/><text x="26.7958%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.5458%" y="357" width="0.0824%" height="15" fill="rgb(205,169,14)" fg:x="322" fg:w="1"/><text x="26.7958%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.7931%" y="325" width="0.1649%" height="15" fill="rgb(248,198,33)" fg:x="325" fg:w="2"/><text x="27.0431%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="26.9580%" y="325" width="0.0824%" height="15" fill="rgb(236,23,21)" fg:x="327" fg:w="1"/><text x="27.2080%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="26.9580%" y="309" width="0.0824%" height="15" fill="rgb(231,13,38)" fg:x="327" fg:w="1"/><text x="27.2080%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="26.7931%" y="341" width="0.3298%" height="15" fill="rgb(239,139,21)" fg:x="325" fg:w="4"/><text x="27.0431%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="27.0404%" y="325" width="0.0824%" height="15" fill="rgb(222,164,45)" fg:x="328" fg:w="1"/><text x="27.2904%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.2053%" y="309" width="0.0824%" height="15" fill="rgb(230,52,27)" fg:x="330" fg:w="1"/><text x="27.4553%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2877%" y="293" width="0.0824%" height="15" fill="rgb(227,143,42)" fg:x="331" fg:w="1"/><text x="27.5377%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3702%" y="261" width="0.0824%" height="15" fill="rgb(249,127,1)" fg:x="332" fg:w="1"/><text x="27.6202%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.3702%" y="245" width="0.0824%" height="15" fill="rgb(243,107,26)" fg:x="332" fg:w="1"/><text x="27.6202%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="27.1228%" y="341" width="0.4122%" height="15" fill="rgb(225,7,45)" fg:x="329" fg:w="5"/><text x="27.3728%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="27.1228%" y="325" width="0.4122%" height="15" fill="rgb(241,88,38)" fg:x="329" fg:w="5"/><text x="27.3728%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="27.2877%" y="309" width="0.2473%" height="15" fill="rgb(226,121,9)" fg:x="331" fg:w="3"/><text x="27.5377%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="27.3702%" y="293" width="0.1649%" height="15" fill="rgb(253,60,29)" fg:x="332" fg:w="2"/><text x="27.6202%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="27.3702%" y="277" width="0.1649%" height="15" fill="rgb(244,181,39)" fg:x="332" fg:w="2"/><text x="27.6202%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="27.4526%" y="261" width="0.0824%" height="15" fill="rgb(252,203,31)" fg:x="333" fg:w="1"/><text x="27.7026%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.6175%" y="325" width="0.0824%" height="15" fill="rgb(224,120,8)" fg:x="335" fg:w="1"/><text x="27.8675%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.6999%" y="309" width="0.0824%" height="15" fill="rgb(205,171,54)" fg:x="336" fg:w="1"/><text x="27.9499%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6999%" y="293" width="0.0824%" height="15" fill="rgb(235,89,11)" fg:x="336" fg:w="1"/><text x="27.9499%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="27.8648%" y="293" width="0.0824%" height="15" fill="rgb(212,180,28)" fg:x="338" fg:w="1"/><text x="28.1148%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.9472%" y="277" width="0.1649%" height="15" fill="rgb(247,84,49)" fg:x="339" fg:w="2"/><text x="28.1972%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.0297%" y="261" width="0.0824%" height="15" fill="rgb(236,187,52)" fg:x="340" fg:w="1"/><text x="28.2797%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="27.9472%" y="293" width="0.2473%" height="15" fill="rgb(227,24,15)" fg:x="339" fg:w="3"/><text x="28.1972%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="28.1121%" y="277" width="0.0824%" height="15" fill="rgb(227,211,13)" fg:x="341" fg:w="1"/><text x="28.3621%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.1121%" y="261" width="0.0824%" height="15" fill="rgb(245,52,14)" fg:x="341" fg:w="1"/><text x="28.3621%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 1.65%)</title><rect x="26.6282%" y="373" width="1.6488%" height="15" fill="rgb(225,185,13)" fg:x="323" fg:w="20"/><text x="26.8782%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.57%)</title><rect x="26.7106%" y="357" width="1.5664%" height="15" fill="rgb(217,160,29)" fg:x="324" fg:w="19"/><text x="26.9606%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.74%)</title><rect x="27.5350%" y="341" width="0.7420%" height="15" fill="rgb(216,115,53)" fg:x="334" fg:w="9"/><text x="27.7850%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.58%)</title><rect x="27.6999%" y="325" width="0.5771%" height="15" fill="rgb(236,99,5)" fg:x="336" fg:w="7"/><text x="27.9499%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="27.7824%" y="309" width="0.4946%" height="15" fill="rgb(222,60,38)" fg:x="337" fg:w="6"/><text x="28.0324%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.1946%" y="293" width="0.0824%" height="15" fill="rgb(212,82,22)" fg:x="342" fg:w="1"/><text x="28.4446%" y="303.50"></text></g><g><title>engine::session::state::State::flush_entities (93 samples, 7.67%)</title><rect x="20.7749%" y="501" width="7.6669%" height="15" fill="rgb(214,48,28)" fg:x="252" fg:w="93"/><text x="21.0249%" y="511.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (91 samples, 7.50%)</title><rect x="20.9398%" y="485" width="7.5021%" height="15" fill="rgb(245,196,50)" fg:x="254" fg:w="91"/><text x="21.1898%" y="495.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (91 samples, 7.50%)</title><rect x="20.9398%" y="469" width="7.5021%" height="15" fill="rgb(225,159,46)" fg:x="254" fg:w="91"/><text x="21.1898%" y="479.50">&lt;alloc::ve..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (91 samples, 7.50%)</title><rect x="20.9398%" y="453" width="7.5021%" height="15" fill="rgb(207,195,48)" fg:x="254" fg:w="91"/><text x="21.1898%" y="463.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (31 samples, 2.56%)</title><rect x="25.8862%" y="437" width="2.5556%" height="15" fill="rgb(240,73,3)" fg:x="314" fg:w="31"/><text x="26.1362%" y="447.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.31%)</title><rect x="26.1336%" y="421" width="2.3083%" height="15" fill="rgb(245,57,23)" fg:x="317" fg:w="28"/><text x="26.3836%" y="431.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.31%)</title><rect x="26.1336%" y="405" width="2.3083%" height="15" fill="rgb(240,75,18)" fg:x="317" fg:w="28"/><text x="26.3836%" y="415.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.81%)</title><rect x="26.6282%" y="389" width="1.8137%" height="15" fill="rgb(238,168,12)" fg:x="323" fg:w="22"/><text x="26.8782%" y="399.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.2770%" y="373" width="0.1649%" height="15" fill="rgb(226,20,40)" fg:x="343" fg:w="2"/><text x="28.5270%" y="383.50"></text></g><g><title>engine::session::Session::flush (95 samples, 7.83%)</title><rect x="20.6925%" y="549" width="7.8318%" height="15" fill="rgb(224,130,35)" fg:x="251" fg:w="95"/><text x="20.9425%" y="559.50">engine::ses..</text></g><g><title>engine::session::Session::save_changes (94 samples, 7.75%)</title><rect x="20.7749%" y="533" width="7.7494%" height="15" fill="rgb(225,63,41)" fg:x="252" fg:w="94"/><text x="21.0249%" y="543.50">engine::ses..</text></g><g><title>engine::session::state::State::close (94 samples, 7.75%)</title><rect x="20.7749%" y="517" width="7.7494%" height="15" fill="rgb(219,3,3)" fg:x="252" fg:w="94"/><text x="21.0249%" y="527.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="28.4419%" y="501" width="0.0824%" height="15" fill="rgb(218,157,4)" fg:x="345" fg:w="1"/><text x="28.6919%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="28.5243%" y="517" width="0.0824%" height="15" fill="rgb(232,76,36)" fg:x="346" fg:w="1"/><text x="28.7743%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5243%" y="501" width="0.0824%" height="15" fill="rgb(247,36,0)" fg:x="346" fg:w="1"/><text x="28.7743%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="28.5243%" y="549" width="0.1649%" height="15" fill="rgb(205,2,34)" fg:x="346" fg:w="2"/><text x="28.7743%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="28.5243%" y="533" width="0.1649%" height="15" fill="rgb(239,136,13)" fg:x="346" fg:w="2"/><text x="28.7743%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="28.6068%" y="517" width="0.0824%" height="15" fill="rgb(253,122,12)" fg:x="347" fg:w="1"/><text x="28.8568%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.6068%" y="501" width="0.0824%" height="15" fill="rgb(222,174,7)" fg:x="347" fg:w="1"/><text x="28.8568%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.6068%" y="485" width="0.0824%" height="15" fill="rgb(208,191,42)" fg:x="347" fg:w="1"/><text x="28.8568%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="28.6892%" y="533" width="0.0824%" height="15" fill="rgb(237,212,15)" fg:x="348" fg:w="1"/><text x="28.9392%" y="543.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.25%)</title><rect x="28.6892%" y="549" width="0.2473%" height="15" fill="rgb(215,65,20)" fg:x="348" fg:w="3"/><text x="28.9392%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="28.7716%" y="533" width="0.1649%" height="15" fill="rgb(232,103,11)" fg:x="349" fg:w="2"/><text x="29.0216%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="28.8541%" y="517" width="0.0824%" height="15" fill="rgb(235,148,18)" fg:x="350" fg:w="1"/><text x="29.1041%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="28.9365%" y="501" width="0.0824%" height="15" fill="rgb(240,173,7)" fg:x="351" fg:w="1"/><text x="29.1865%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.9365%" y="485" width="0.0824%" height="15" fill="rgb(228,182,25)" fg:x="351" fg:w="1"/><text x="29.1865%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.0190%" y="453" width="0.0824%" height="15" fill="rgb(247,3,52)" fg:x="352" fg:w="1"/><text x="29.2690%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.25%)</title><rect x="28.9365%" y="517" width="0.2473%" height="15" fill="rgb(226,155,8)" fg:x="351" fg:w="3"/><text x="29.1865%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="29.0190%" y="501" width="0.1649%" height="15" fill="rgb(243,195,38)" fg:x="352" fg:w="2"/><text x="29.2690%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="29.0190%" y="485" width="0.1649%" height="15" fill="rgb(254,181,33)" fg:x="352" fg:w="2"/><text x="29.2690%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.0190%" y="469" width="0.1649%" height="15" fill="rgb(232,98,23)" fg:x="352" fg:w="2"/><text x="29.2690%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.1014%" y="453" width="0.0824%" height="15" fill="rgb(205,23,10)" fg:x="353" fg:w="1"/><text x="29.3514%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.1014%" y="437" width="0.0824%" height="15" fill="rgb(212,124,38)" fg:x="353" fg:w="1"/><text x="29.3514%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1014%" y="421" width="0.0824%" height="15" fill="rgb(228,207,2)" fg:x="353" fg:w="1"/><text x="29.3514%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1014%" y="405" width="0.0824%" height="15" fill="rgb(215,120,22)" fg:x="353" fg:w="1"/><text x="29.3514%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.1014%" y="389" width="0.0824%" height="15" fill="rgb(251,172,33)" fg:x="353" fg:w="1"/><text x="29.3514%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="29.1838%" y="485" width="0.0824%" height="15" fill="rgb(250,83,2)" fg:x="354" fg:w="1"/><text x="29.4338%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.1838%" y="469" width="0.0824%" height="15" fill="rgb(210,132,53)" fg:x="354" fg:w="1"/><text x="29.4338%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1838%" y="453" width="0.0824%" height="15" fill="rgb(221,208,36)" fg:x="354" fg:w="1"/><text x="29.4338%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.1838%" y="437" width="0.0824%" height="15" fill="rgb(205,192,46)" fg:x="354" fg:w="1"/><text x="29.4338%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1838%" y="421" width="0.0824%" height="15" fill="rgb(223,163,14)" fg:x="354" fg:w="1"/><text x="29.4338%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.1838%" y="405" width="0.0824%" height="15" fill="rgb(218,41,28)" fg:x="354" fg:w="1"/><text x="29.4338%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1838%" y="389" width="0.0824%" height="15" fill="rgb(235,104,10)" fg:x="354" fg:w="1"/><text x="29.4338%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="29.2663%" y="485" width="0.0824%" height="15" fill="rgb(246,17,4)" fg:x="355" fg:w="1"/><text x="29.5163%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.2663%" y="469" width="0.0824%" height="15" fill="rgb(240,7,16)" fg:x="355" fg:w="1"/><text x="29.5163%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="29.1838%" y="501" width="0.3298%" height="15" fill="rgb(213,160,23)" fg:x="354" fg:w="4"/><text x="29.4338%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="29.3487%" y="485" width="0.1649%" height="15" fill="rgb(251,179,49)" fg:x="356" fg:w="2"/><text x="29.5987%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.3487%" y="469" width="0.1649%" height="15" fill="rgb(247,198,10)" fg:x="356" fg:w="2"/><text x="29.5987%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="29.3487%" y="453" width="0.1649%" height="15" fill="rgb(220,65,29)" fg:x="356" fg:w="2"/><text x="29.5987%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="29.4312%" y="437" width="0.0824%" height="15" fill="rgb(237,171,28)" fg:x="357" fg:w="1"/><text x="29.6812%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4312%" y="421" width="0.0824%" height="15" fill="rgb(228,44,26)" fg:x="357" fg:w="1"/><text x="29.6812%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="29.5136%" y="453" width="0.0824%" height="15" fill="rgb(216,210,27)" fg:x="358" fg:w="1"/><text x="29.7636%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="29.5136%" y="437" width="0.0824%" height="15" fill="rgb(252,10,17)" fg:x="358" fg:w="1"/><text x="29.7636%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="29.5136%" y="421" width="0.0824%" height="15" fill="rgb(214,172,30)" fg:x="358" fg:w="1"/><text x="29.7636%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.5136%" y="405" width="0.0824%" height="15" fill="rgb(253,130,48)" fg:x="358" fg:w="1"/><text x="29.7636%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.5136%" y="389" width="0.0824%" height="15" fill="rgb(226,99,43)" fg:x="358" fg:w="1"/><text x="29.7636%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="29.5136%" y="469" width="0.1649%" height="15" fill="rgb(239,111,26)" fg:x="358" fg:w="2"/><text x="29.7636%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="29.5960%" y="453" width="0.0824%" height="15" fill="rgb(240,27,53)" fg:x="359" fg:w="1"/><text x="29.8460%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.82%)</title><rect x="28.9365%" y="533" width="0.8244%" height="15" fill="rgb(254,163,12)" fg:x="351" fg:w="10"/><text x="29.1865%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.58%)</title><rect x="29.1838%" y="517" width="0.5771%" height="15" fill="rgb(225,51,48)" fg:x="354" fg:w="7"/><text x="29.4338%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.25%)</title><rect x="29.5136%" y="501" width="0.2473%" height="15" fill="rgb(205,19,32)" fg:x="358" fg:w="3"/><text x="29.7636%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="29.5136%" y="485" width="0.2473%" height="15" fill="rgb(218,119,26)" fg:x="358" fg:w="3"/><text x="29.7636%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.6785%" y="469" width="0.0824%" height="15" fill="rgb(231,173,33)" fg:x="360" fg:w="1"/><text x="29.9285%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8434%" y="501" width="0.0824%" height="15" fill="rgb(241,100,29)" fg:x="362" fg:w="1"/><text x="30.0934%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8434%" y="485" width="0.0824%" height="15" fill="rgb(250,194,34)" fg:x="362" fg:w="1"/><text x="30.0934%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8434%" y="469" width="0.0824%" height="15" fill="rgb(215,23,50)" fg:x="362" fg:w="1"/><text x="30.0934%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8434%" y="453" width="0.0824%" height="15" fill="rgb(206,49,37)" fg:x="362" fg:w="1"/><text x="30.0934%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.8434%" y="437" width="0.0824%" height="15" fill="rgb(247,39,21)" fg:x="362" fg:w="1"/><text x="30.0934%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.8434%" y="421" width="0.0824%" height="15" fill="rgb(209,220,15)" fg:x="362" fg:w="1"/><text x="30.0934%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.8434%" y="405" width="0.0824%" height="15" fill="rgb(206,41,33)" fg:x="362" fg:w="1"/><text x="30.0934%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.8434%" y="389" width="0.0824%" height="15" fill="rgb(221,225,45)" fg:x="362" fg:w="1"/><text x="30.0934%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.8434%" y="373" width="0.0824%" height="15" fill="rgb(216,27,18)" fg:x="362" fg:w="1"/><text x="30.0934%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.8434%" y="357" width="0.0824%" height="15" fill="rgb(250,193,34)" fg:x="362" fg:w="1"/><text x="30.0934%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.8434%" y="341" width="0.0824%" height="15" fill="rgb(227,215,20)" fg:x="362" fg:w="1"/><text x="30.0934%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.8434%" y="325" width="0.0824%" height="15" fill="rgb(242,211,27)" fg:x="362" fg:w="1"/><text x="30.0934%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.8434%" y="309" width="0.0824%" height="15" fill="rgb(229,190,30)" fg:x="362" fg:w="1"/><text x="30.0934%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.8434%" y="293" width="0.0824%" height="15" fill="rgb(253,31,29)" fg:x="362" fg:w="1"/><text x="30.0934%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.8434%" y="517" width="0.1649%" height="15" fill="rgb(229,177,52)" fg:x="362" fg:w="2"/><text x="30.0934%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9258%" y="501" width="0.0824%" height="15" fill="rgb(226,88,8)" fg:x="363" fg:w="1"/><text x="30.1758%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.33%)</title><rect x="29.7609%" y="533" width="0.3298%" height="15" fill="rgb(214,55,27)" fg:x="361" fg:w="4"/><text x="30.0109%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0082%" y="517" width="0.0824%" height="15" fill="rgb(233,202,5)" fg:x="364" fg:w="1"/><text x="30.2582%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0082%" y="501" width="0.0824%" height="15" fill="rgb(251,49,30)" fg:x="364" fg:w="1"/><text x="30.2582%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.0082%" y="485" width="0.0824%" height="15" fill="rgb(235,18,52)" fg:x="364" fg:w="1"/><text x="30.2582%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.0082%" y="469" width="0.0824%" height="15" fill="rgb(250,111,51)" fg:x="364" fg:w="1"/><text x="30.2582%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.0082%" y="453" width="0.0824%" height="15" fill="rgb(218,13,25)" fg:x="364" fg:w="1"/><text x="30.2582%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.0082%" y="437" width="0.0824%" height="15" fill="rgb(248,96,7)" fg:x="364" fg:w="1"/><text x="30.2582%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.0082%" y="421" width="0.0824%" height="15" fill="rgb(217,31,15)" fg:x="364" fg:w="1"/><text x="30.2582%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.0082%" y="405" width="0.0824%" height="15" fill="rgb(228,59,49)" fg:x="364" fg:w="1"/><text x="30.2582%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.0082%" y="389" width="0.0824%" height="15" fill="rgb(210,152,38)" fg:x="364" fg:w="1"/><text x="30.2582%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.0082%" y="373" width="0.0824%" height="15" fill="rgb(206,71,11)" fg:x="364" fg:w="1"/><text x="30.2582%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.0082%" y="357" width="0.0824%" height="15" fill="rgb(244,199,5)" fg:x="364" fg:w="1"/><text x="30.2582%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.0082%" y="341" width="0.0824%" height="15" fill="rgb(253,49,1)" fg:x="364" fg:w="1"/><text x="30.2582%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.0907%" y="501" width="0.1649%" height="15" fill="rgb(225,206,40)" fg:x="365" fg:w="2"/><text x="30.3407%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.0907%" y="485" width="0.1649%" height="15" fill="rgb(243,116,47)" fg:x="365" fg:w="2"/><text x="30.3407%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1731%" y="469" width="0.0824%" height="15" fill="rgb(219,225,16)" fg:x="366" fg:w="1"/><text x="30.4231%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1731%" y="453" width="0.0824%" height="15" fill="rgb(233,29,47)" fg:x="366" fg:w="1"/><text x="30.4231%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.1731%" y="437" width="0.0824%" height="15" fill="rgb(250,179,18)" fg:x="366" fg:w="1"/><text x="30.4231%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.1731%" y="421" width="0.0824%" height="15" fill="rgb(215,176,6)" fg:x="366" fg:w="1"/><text x="30.4231%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.1731%" y="405" width="0.0824%" height="15" fill="rgb(214,117,39)" fg:x="366" fg:w="1"/><text x="30.4231%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1731%" y="389" width="0.0824%" height="15" fill="rgb(247,183,36)" fg:x="366" fg:w="1"/><text x="30.4231%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1731%" y="373" width="0.0824%" height="15" fill="rgb(237,200,3)" fg:x="366" fg:w="1"/><text x="30.4231%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.1731%" y="357" width="0.0824%" height="15" fill="rgb(212,220,24)" fg:x="366" fg:w="1"/><text x="30.4231%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.1731%" y="341" width="0.0824%" height="15" fill="rgb(245,216,20)" fg:x="366" fg:w="1"/><text x="30.4231%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.1731%" y="325" width="0.0824%" height="15" fill="rgb(219,124,7)" fg:x="366" fg:w="1"/><text x="30.4231%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.1731%" y="309" width="0.0824%" height="15" fill="rgb(227,167,8)" fg:x="366" fg:w="1"/><text x="30.4231%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1731%" y="293" width="0.0824%" height="15" fill="rgb(241,37,2)" fg:x="366" fg:w="1"/><text x="30.4231%" y="303.50"></text></g><g><title>plugins_core::build::Build::save (17 samples, 1.40%)</title><rect x="28.9365%" y="549" width="1.4015%" height="15" fill="rgb(238,134,33)" fg:x="351" fg:w="17"/><text x="29.1865%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.25%)</title><rect x="30.0907%" y="533" width="0.2473%" height="15" fill="rgb(248,48,27)" fg:x="365" fg:w="3"/><text x="30.3407%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="30.0907%" y="517" width="0.2473%" height="15" fill="rgb(212,14,16)" fg:x="365" fg:w="3"/><text x="30.3407%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2556%" y="501" width="0.0824%" height="15" fill="rgb(217,205,37)" fg:x="367" fg:w="1"/><text x="30.5056%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3380%" y="469" width="0.0824%" height="15" fill="rgb(233,185,47)" fg:x="368" fg:w="1"/><text x="30.5880%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (2 samples, 0.16%)</title><rect x="30.3380%" y="549" width="0.1649%" height="15" fill="rgb(244,88,8)" fg:x="368" fg:w="2"/><text x="30.5880%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="30.3380%" y="533" width="0.1649%" height="15" fill="rgb(213,0,20)" fg:x="368" fg:w="2"/><text x="30.5880%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="30.3380%" y="517" width="0.1649%" height="15" fill="rgb(238,159,36)" fg:x="368" fg:w="2"/><text x="30.5880%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="30.3380%" y="501" width="0.1649%" height="15" fill="rgb(253,173,17)" fg:x="368" fg:w="2"/><text x="30.5880%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.3380%" y="485" width="0.1649%" height="15" fill="rgb(221,23,28)" fg:x="368" fg:w="2"/><text x="30.5880%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.4204%" y="469" width="0.0824%" height="15" fill="rgb(218,113,15)" fg:x="369" fg:w="1"/><text x="30.6704%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.4204%" y="453" width="0.0824%" height="15" fill="rgb(233,58,3)" fg:x="369" fg:w="1"/><text x="30.6704%" y="463.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="30.5853%" y="517" width="0.0824%" height="15" fill="rgb(250,46,35)" fg:x="371" fg:w="1"/><text x="30.8353%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="30.5853%" y="501" width="0.0824%" height="15" fill="rgb(210,169,11)" fg:x="371" fg:w="1"/><text x="30.8353%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="30.6678%" y="517" width="0.0824%" height="15" fill="rgb(246,88,19)" fg:x="372" fg:w="1"/><text x="30.9178%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="30.6678%" y="501" width="0.0824%" height="15" fill="rgb(206,81,49)" fg:x="372" fg:w="1"/><text x="30.9178%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="30.6678%" y="485" width="0.0824%" height="15" fill="rgb(232,144,18)" fg:x="372" fg:w="1"/><text x="30.9178%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.6678%" y="469" width="0.0824%" height="15" fill="rgb(235,2,27)" fg:x="372" fg:w="1"/><text x="30.9178%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6678%" y="453" width="0.0824%" height="15" fill="rgb(239,157,39)" fg:x="372" fg:w="1"/><text x="30.9178%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.6678%" y="437" width="0.0824%" height="15" fill="rgb(220,11,17)" fg:x="372" fg:w="1"/><text x="30.9178%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6678%" y="421" width="0.0824%" height="15" fill="rgb(243,94,50)" fg:x="372" fg:w="1"/><text x="30.9178%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6678%" y="405" width="0.0824%" height="15" fill="rgb(218,22,0)" fg:x="372" fg:w="1"/><text x="30.9178%" y="415.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (4 samples, 0.33%)</title><rect x="30.5029%" y="549" width="0.3298%" height="15" fill="rgb(249,70,21)" fg:x="370" fg:w="4"/><text x="30.7529%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.33%)</title><rect x="30.5029%" y="533" width="0.3298%" height="15" fill="rgb(245,111,46)" fg:x="370" fg:w="4"/><text x="30.7529%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="30.7502%" y="517" width="0.0824%" height="15" fill="rgb(244,183,12)" fg:x="373" fg:w="1"/><text x="31.0002%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7502%" y="501" width="0.0824%" height="15" fill="rgb(207,117,0)" fg:x="373" fg:w="1"/><text x="31.0002%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.7502%" y="485" width="0.0824%" height="15" fill="rgb(206,20,43)" fg:x="373" fg:w="1"/><text x="31.0002%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.7502%" y="469" width="0.0824%" height="15" fill="rgb(221,104,11)" fg:x="373" fg:w="1"/><text x="31.0002%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7502%" y="453" width="0.0824%" height="15" fill="rgb(254,36,50)" fg:x="373" fg:w="1"/><text x="31.0002%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.7502%" y="437" width="0.0824%" height="15" fill="rgb(252,17,15)" fg:x="373" fg:w="1"/><text x="31.0002%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8326%" y="501" width="0.0824%" height="15" fill="rgb(219,129,43)" fg:x="374" fg:w="1"/><text x="31.0826%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.8326%" y="517" width="0.1649%" height="15" fill="rgb(205,34,45)" fg:x="374" fg:w="2"/><text x="31.0826%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9151%" y="501" width="0.0824%" height="15" fill="rgb(251,201,32)" fg:x="375" fg:w="1"/><text x="31.1651%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9151%" y="485" width="0.0824%" height="15" fill="rgb(205,56,0)" fg:x="375" fg:w="1"/><text x="31.1651%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9151%" y="469" width="0.0824%" height="15" fill="rgb(211,193,27)" fg:x="375" fg:w="1"/><text x="31.1651%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9151%" y="453" width="0.0824%" height="15" fill="rgb(231,100,42)" fg:x="375" fg:w="1"/><text x="31.1651%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.9151%" y="437" width="0.0824%" height="15" fill="rgb(245,85,27)" fg:x="375" fg:w="1"/><text x="31.1651%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.9151%" y="421" width="0.0824%" height="15" fill="rgb(241,76,24)" fg:x="375" fg:w="1"/><text x="31.1651%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.9151%" y="405" width="0.0824%" height="15" fill="rgb(249,157,15)" fg:x="375" fg:w="1"/><text x="31.1651%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.9151%" y="389" width="0.0824%" height="15" fill="rgb(222,218,25)" fg:x="375" fg:w="1"/><text x="31.1651%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.9151%" y="373" width="0.0824%" height="15" fill="rgb(252,156,52)" fg:x="375" fg:w="1"/><text x="31.1651%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.9151%" y="357" width="0.0824%" height="15" fill="rgb(211,185,7)" fg:x="375" fg:w="1"/><text x="31.1651%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.9151%" y="341" width="0.0824%" height="15" fill="rgb(234,108,24)" fg:x="375" fg:w="1"/><text x="31.1651%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.9151%" y="325" width="0.0824%" height="15" fill="rgb(227,218,2)" fg:x="375" fg:w="1"/><text x="31.1651%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.9151%" y="309" width="0.0824%" height="15" fill="rgb(224,0,36)" fg:x="375" fg:w="1"/><text x="31.1651%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9151%" y="293" width="0.0824%" height="15" fill="rgb(233,201,10)" fg:x="375" fg:w="1"/><text x="31.1651%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.9975%" y="485" width="0.0824%" height="15" fill="rgb(252,209,14)" fg:x="376" fg:w="1"/><text x="31.2475%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.33%)</title><rect x="30.8326%" y="533" width="0.3298%" height="15" fill="rgb(205,93,49)" fg:x="374" fg:w="4"/><text x="31.0826%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.9975%" y="517" width="0.1649%" height="15" fill="rgb(234,116,45)" fg:x="376" fg:w="2"/><text x="31.2475%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.9975%" y="501" width="0.1649%" height="15" fill="rgb(248,89,35)" fg:x="376" fg:w="2"/><text x="31.2475%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.0800%" y="485" width="0.0824%" height="15" fill="rgb(233,167,45)" fg:x="377" fg:w="1"/><text x="31.3300%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0800%" y="469" width="0.0824%" height="15" fill="rgb(248,228,14)" fg:x="377" fg:w="1"/><text x="31.3300%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="31.0800%" y="453" width="0.0824%" height="15" fill="rgb(246,91,14)" fg:x="377" fg:w="1"/><text x="31.3300%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="31.0800%" y="437" width="0.0824%" height="15" fill="rgb(227,142,5)" fg:x="377" fg:w="1"/><text x="31.3300%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="31.1624%" y="517" width="0.0824%" height="15" fill="rgb(221,63,33)" fg:x="378" fg:w="1"/><text x="31.4124%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.1624%" y="501" width="0.0824%" height="15" fill="rgb(233,49,0)" fg:x="378" fg:w="1"/><text x="31.4124%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2448%" y="485" width="0.0824%" height="15" fill="rgb(251,115,38)" fg:x="379" fg:w="1"/><text x="31.4948%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2448%" y="469" width="0.0824%" height="15" fill="rgb(231,214,32)" fg:x="379" fg:w="1"/><text x="31.4948%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.2448%" y="453" width="0.0824%" height="15" fill="rgb(248,73,46)" fg:x="379" fg:w="1"/><text x="31.4948%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="31.3273%" y="469" width="0.0824%" height="15" fill="rgb(237,156,4)" fg:x="380" fg:w="1"/><text x="31.5773%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.3273%" y="453" width="0.0824%" height="15" fill="rgb(227,132,2)" fg:x="380" fg:w="1"/><text x="31.5773%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3273%" y="437" width="0.0824%" height="15" fill="rgb(248,161,9)" fg:x="380" fg:w="1"/><text x="31.5773%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.4097%" y="437" width="0.0824%" height="15" fill="rgb(238,77,38)" fg:x="381" fg:w="1"/><text x="31.6597%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.4097%" y="421" width="0.0824%" height="15" fill="rgb(222,166,40)" fg:x="381" fg:w="1"/><text x="31.6597%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4097%" y="405" width="0.0824%" height="15" fill="rgb(214,168,45)" fg:x="381" fg:w="1"/><text x="31.6597%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4922%" y="405" width="0.0824%" height="15" fill="rgb(226,64,37)" fg:x="382" fg:w="1"/><text x="31.7422%" y="415.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (11 samples, 0.91%)</title><rect x="30.8326%" y="549" width="0.9068%" height="15" fill="rgb(232,210,43)" fg:x="374" fg:w="11"/><text x="31.0826%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (7 samples, 0.58%)</title><rect x="31.1624%" y="533" width="0.5771%" height="15" fill="rgb(214,76,33)" fg:x="378" fg:w="7"/><text x="31.4124%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (6 samples, 0.49%)</title><rect x="31.2448%" y="517" width="0.4946%" height="15" fill="rgb(210,78,5)" fg:x="379" fg:w="6"/><text x="31.4948%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="31.2448%" y="501" width="0.4946%" height="15" fill="rgb(211,107,37)" fg:x="379" fg:w="6"/><text x="31.4948%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="31.3273%" y="485" width="0.4122%" height="15" fill="rgb(249,67,16)" fg:x="380" fg:w="5"/><text x="31.5773%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (4 samples, 0.33%)</title><rect x="31.4097%" y="469" width="0.3298%" height="15" fill="rgb(222,114,31)" fg:x="381" fg:w="4"/><text x="31.6597%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.33%)</title><rect x="31.4097%" y="453" width="0.3298%" height="15" fill="rgb(242,118,19)" fg:x="381" fg:w="4"/><text x="31.6597%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (3 samples, 0.25%)</title><rect x="31.4922%" y="437" width="0.2473%" height="15" fill="rgb(223,115,1)" fg:x="382" fg:w="3"/><text x="31.7422%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="31.4922%" y="421" width="0.2473%" height="15" fill="rgb(241,182,54)" fg:x="382" fg:w="3"/><text x="31.7422%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="31.5746%" y="405" width="0.1649%" height="15" fill="rgb(244,166,36)" fg:x="383" fg:w="2"/><text x="31.8246%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.5746%" y="389" width="0.1649%" height="15" fill="rgb(241,52,43)" fg:x="383" fg:w="2"/><text x="31.8246%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.5746%" y="373" width="0.1649%" height="15" fill="rgb(236,82,9)" fg:x="383" fg:w="2"/><text x="31.8246%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6570%" y="357" width="0.0824%" height="15" fill="rgb(241,119,0)" fg:x="384" fg:w="1"/><text x="31.9070%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6570%" y="341" width="0.0824%" height="15" fill="rgb(221,19,22)" fg:x="384" fg:w="1"/><text x="31.9070%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.7395%" y="485" width="0.0824%" height="15" fill="rgb(254,144,35)" fg:x="385" fg:w="1"/><text x="31.9895%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.7395%" y="469" width="0.0824%" height="15" fill="rgb(246,132,30)" fg:x="385" fg:w="1"/><text x="31.9895%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7395%" y="453" width="0.0824%" height="15" fill="rgb(234,69,28)" fg:x="385" fg:w="1"/><text x="31.9895%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7395%" y="437" width="0.0824%" height="15" fill="rgb(219,106,47)" fg:x="385" fg:w="1"/><text x="31.9895%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.7395%" y="421" width="0.0824%" height="15" fill="rgb(218,79,24)" fg:x="385" fg:w="1"/><text x="31.9895%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.7395%" y="405" width="0.0824%" height="15" fill="rgb(225,26,21)" fg:x="385" fg:w="1"/><text x="31.9895%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.7395%" y="389" width="0.0824%" height="15" fill="rgb(217,68,49)" fg:x="385" fg:w="1"/><text x="31.9895%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.7395%" y="373" width="0.0824%" height="15" fill="rgb(220,204,28)" fg:x="385" fg:w="1"/><text x="31.9895%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.7395%" y="357" width="0.0824%" height="15" fill="rgb(237,208,43)" fg:x="385" fg:w="1"/><text x="31.9895%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.7395%" y="341" width="0.0824%" height="15" fill="rgb(213,97,42)" fg:x="385" fg:w="1"/><text x="31.9895%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="31.7395%" y="325" width="0.0824%" height="15" fill="rgb(238,96,52)" fg:x="385" fg:w="1"/><text x="31.9895%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="31.7395%" y="309" width="0.0824%" height="15" fill="rgb(228,14,13)" fg:x="385" fg:w="1"/><text x="31.9895%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.25%)</title><rect x="31.7395%" y="533" width="0.2473%" height="15" fill="rgb(219,123,13)" fg:x="385" fg:w="3"/><text x="31.9895%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.25%)</title><rect x="31.7395%" y="517" width="0.2473%" height="15" fill="rgb(216,144,17)" fg:x="385" fg:w="3"/><text x="31.9895%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.25%)</title><rect x="31.7395%" y="501" width="0.2473%" height="15" fill="rgb(230,228,29)" fg:x="385" fg:w="3"/><text x="31.9895%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.8219%" y="485" width="0.1649%" height="15" fill="rgb(233,18,5)" fg:x="386" fg:w="2"/><text x="32.0719%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.8219%" y="469" width="0.1649%" height="15" fill="rgb(233,197,12)" fg:x="386" fg:w="2"/><text x="32.0719%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.8219%" y="453" width="0.1649%" height="15" fill="rgb(234,140,29)" fg:x="386" fg:w="2"/><text x="32.0719%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.9044%" y="437" width="0.0824%" height="15" fill="rgb(233,113,19)" fg:x="387" fg:w="1"/><text x="32.1544%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.9044%" y="421" width="0.0824%" height="15" fill="rgb(246,209,13)" fg:x="387" fg:w="1"/><text x="32.1544%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.9044%" y="405" width="0.0824%" height="15" fill="rgb(242,79,54)" fg:x="387" fg:w="1"/><text x="32.1544%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="31.9868%" y="517" width="0.0824%" height="15" fill="rgb(219,73,16)" fg:x="388" fg:w="1"/><text x="32.2368%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.9868%" y="501" width="0.0824%" height="15" fill="rgb(224,52,10)" fg:x="388" fg:w="1"/><text x="32.2368%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.9868%" y="485" width="0.0824%" height="15" fill="rgb(237,179,5)" fg:x="388" fg:w="1"/><text x="32.2368%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.9868%" y="469" width="0.0824%" height="15" fill="rgb(231,20,6)" fg:x="388" fg:w="1"/><text x="32.2368%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9868%" y="453" width="0.0824%" height="15" fill="rgb(253,171,45)" fg:x="388" fg:w="1"/><text x="32.2368%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.9868%" y="437" width="0.0824%" height="15" fill="rgb(230,75,49)" fg:x="388" fg:w="1"/><text x="32.2368%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.9868%" y="421" width="0.0824%" height="15" fill="rgb(216,83,46)" fg:x="388" fg:w="1"/><text x="32.2368%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.9868%" y="405" width="0.0824%" height="15" fill="rgb(236,56,9)" fg:x="388" fg:w="1"/><text x="32.2368%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.9868%" y="389" width="0.0824%" height="15" fill="rgb(215,28,34)" fg:x="388" fg:w="1"/><text x="32.2368%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.9868%" y="373" width="0.0824%" height="15" fill="rgb(230,222,20)" fg:x="388" fg:w="1"/><text x="32.2368%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.9868%" y="357" width="0.0824%" height="15" fill="rgb(235,209,51)" fg:x="388" fg:w="1"/><text x="32.2368%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.9868%" y="341" width="0.0824%" height="15" fill="rgb(235,167,1)" fg:x="388" fg:w="1"/><text x="32.2368%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.9868%" y="325" width="0.0824%" height="15" fill="rgb(248,220,0)" fg:x="388" fg:w="1"/><text x="32.2368%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.9868%" y="309" width="0.0824%" height="15" fill="rgb(239,0,18)" fg:x="388" fg:w="1"/><text x="32.2368%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.9868%" y="293" width="0.0824%" height="15" fill="rgb(229,179,11)" fg:x="388" fg:w="1"/><text x="32.2368%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9868%" y="277" width="0.0824%" height="15" fill="rgb(226,116,53)" fg:x="388" fg:w="1"/><text x="32.2368%" y="287.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.25%)</title><rect x="31.9868%" y="533" width="0.2473%" height="15" fill="rgb(218,1,49)" fg:x="388" fg:w="3"/><text x="32.2368%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="32.0692%" y="517" width="0.1649%" height="15" fill="rgb(208,184,47)" fg:x="389" fg:w="2"/><text x="32.3192%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="32.0692%" y="501" width="0.1649%" height="15" fill="rgb(238,174,3)" fg:x="389" fg:w="2"/><text x="32.3192%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="32.0692%" y="485" width="0.1649%" height="15" fill="rgb(247,188,6)" fg:x="389" fg:w="2"/><text x="32.3192%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.0692%" y="469" width="0.1649%" height="15" fill="rgb(211,165,46)" fg:x="389" fg:w="2"/><text x="32.3192%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.0692%" y="453" width="0.1649%" height="15" fill="rgb(222,190,10)" fg:x="389" fg:w="2"/><text x="32.3192%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.0692%" y="437" width="0.1649%" height="15" fill="rgb(206,185,3)" fg:x="389" fg:w="2"/><text x="32.3192%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.0692%" y="421" width="0.1649%" height="15" fill="rgb(244,125,37)" fg:x="389" fg:w="2"/><text x="32.3192%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.0692%" y="405" width="0.1649%" height="15" fill="rgb(211,43,7)" fg:x="389" fg:w="2"/><text x="32.3192%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.0692%" y="389" width="0.1649%" height="15" fill="rgb(250,41,42)" fg:x="389" fg:w="2"/><text x="32.3192%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3166%" y="437" width="0.0824%" height="15" fill="rgb(254,54,42)" fg:x="392" fg:w="1"/><text x="32.5666%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (153 samples, 12.61%)</title><rect x="19.8681%" y="565" width="12.6134%" height="15" fill="rgb(213,71,43)" fg:x="241" fg:w="153"/><text x="20.1181%" y="575.50">plugins_core::build..</text></g><g><title>plugins_core::tools::set_container (9 samples, 0.74%)</title><rect x="31.7395%" y="549" width="0.7420%" height="15" fill="rgb(249,3,44)" fg:x="385" fg:w="9"/><text x="31.9895%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (3 samples, 0.25%)</title><rect x="32.2341%" y="533" width="0.2473%" height="15" fill="rgb(229,80,41)" fg:x="391" fg:w="3"/><text x="32.4841%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.25%)</title><rect x="32.2341%" y="517" width="0.2473%" height="15" fill="rgb(231,25,28)" fg:x="391" fg:w="3"/><text x="32.4841%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (3 samples, 0.25%)</title><rect x="32.2341%" y="501" width="0.2473%" height="15" fill="rgb(208,79,48)" fg:x="391" fg:w="3"/><text x="32.4841%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="32.2341%" y="485" width="0.2473%" height="15" fill="rgb(207,196,38)" fg:x="391" fg:w="3"/><text x="32.4841%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="32.3166%" y="469" width="0.1649%" height="15" fill="rgb(228,105,49)" fg:x="392" fg:w="2"/><text x="32.5666%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.3166%" y="453" width="0.1649%" height="15" fill="rgb(237,99,15)" fg:x="392" fg:w="2"/><text x="32.5666%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.3990%" y="437" width="0.0824%" height="15" fill="rgb(224,207,46)" fg:x="393" fg:w="1"/><text x="32.6490%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.3990%" y="421" width="0.0824%" height="15" fill="rgb(249,117,50)" fg:x="393" fg:w="1"/><text x="32.6490%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="32.3990%" y="405" width="0.0824%" height="15" fill="rgb(248,17,13)" fg:x="393" fg:w="1"/><text x="32.6490%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="32.4815%" y="565" width="0.0824%" height="15" fill="rgb(228,187,36)" fg:x="394" fg:w="1"/><text x="32.7315%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="32.4815%" y="549" width="0.0824%" height="15" fill="rgb(234,132,20)" fg:x="394" fg:w="1"/><text x="32.7315%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="32.4815%" y="533" width="0.0824%" height="15" fill="rgb(209,170,46)" fg:x="394" fg:w="1"/><text x="32.7315%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="32.4815%" y="517" width="0.0824%" height="15" fill="rgb(237,23,19)" fg:x="394" fg:w="1"/><text x="32.7315%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="32.4815%" y="501" width="0.0824%" height="15" fill="rgb(227,21,26)" fg:x="394" fg:w="1"/><text x="32.7315%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="32.5639%" y="517" width="0.0824%" height="15" fill="rgb(222,220,48)" fg:x="395" fg:w="1"/><text x="32.8139%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.5639%" y="501" width="0.0824%" height="15" fill="rgb(214,9,16)" fg:x="395" fg:w="1"/><text x="32.8139%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="32.5639%" y="533" width="0.1649%" height="15" fill="rgb(209,73,30)" fg:x="395" fg:w="2"/><text x="32.8139%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.6463%" y="517" width="0.0824%" height="15" fill="rgb(207,20,33)" fg:x="396" fg:w="1"/><text x="32.8963%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.6463%" y="501" width="0.0824%" height="15" fill="rgb(219,153,12)" fg:x="396" fg:w="1"/><text x="32.8963%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.6463%" y="485" width="0.0824%" height="15" fill="rgb(235,97,25)" fg:x="396" fg:w="1"/><text x="32.8963%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="32.6463%" y="469" width="0.0824%" height="15" fill="rgb(244,30,34)" fg:x="396" fg:w="1"/><text x="32.8963%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="32.7288%" y="533" width="0.1649%" height="15" fill="rgb(214,106,45)" fg:x="397" fg:w="2"/><text x="32.9788%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.7288%" y="517" width="0.1649%" height="15" fill="rgb(226,41,9)" fg:x="397" fg:w="2"/><text x="32.9788%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="32.7288%" y="501" width="0.1649%" height="15" fill="rgb(253,139,29)" fg:x="397" fg:w="2"/><text x="32.9788%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.8112%" y="485" width="0.0824%" height="15" fill="rgb(213,205,39)" fg:x="398" fg:w="1"/><text x="33.0612%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="32.9761%" y="501" width="0.0824%" height="15" fill="rgb(209,27,10)" fg:x="400" fg:w="1"/><text x="33.2261%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.9761%" y="485" width="0.0824%" height="15" fill="rgb(249,142,16)" fg:x="400" fg:w="1"/><text x="33.2261%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9761%" y="469" width="0.0824%" height="15" fill="rgb(242,65,12)" fg:x="400" fg:w="1"/><text x="33.2261%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.9761%" y="453" width="0.0824%" height="15" fill="rgb(232,48,10)" fg:x="400" fg:w="1"/><text x="33.2261%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9761%" y="437" width="0.0824%" height="15" fill="rgb(253,67,19)" fg:x="400" fg:w="1"/><text x="33.2261%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.9761%" y="421" width="0.0824%" height="15" fill="rgb(227,93,29)" fg:x="400" fg:w="1"/><text x="33.2261%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.9761%" y="405" width="0.0824%" height="15" fill="rgb(226,189,53)" fg:x="400" fg:w="1"/><text x="33.2261%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="33.1410%" y="469" width="0.0824%" height="15" fill="rgb(223,224,1)" fg:x="402" fg:w="1"/><text x="33.3910%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.1410%" y="453" width="0.0824%" height="15" fill="rgb(221,84,32)" fg:x="402" fg:w="1"/><text x="33.3910%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="33.1410%" y="437" width="0.0824%" height="15" fill="rgb(214,189,28)" fg:x="402" fg:w="1"/><text x="33.3910%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.25%)</title><rect x="33.0585%" y="501" width="0.2473%" height="15" fill="rgb(234,7,52)" fg:x="401" fg:w="3"/><text x="33.3085%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="33.1410%" y="485" width="0.1649%" height="15" fill="rgb(249,73,31)" fg:x="402" fg:w="2"/><text x="33.3910%" y="495.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="33.2234%" y="469" width="0.0824%" height="15" fill="rgb(253,153,41)" fg:x="403" fg:w="1"/><text x="33.4734%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.2234%" y="453" width="0.0824%" height="15" fill="rgb(249,52,34)" fg:x="403" fg:w="1"/><text x="33.4734%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="33.3059%" y="469" width="0.0824%" height="15" fill="rgb(236,177,47)" fg:x="404" fg:w="1"/><text x="33.5559%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3059%" y="453" width="0.0824%" height="15" fill="rgb(252,185,45)" fg:x="404" fg:w="1"/><text x="33.5559%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3059%" y="437" width="0.0824%" height="15" fill="rgb(251,15,30)" fg:x="404" fg:w="1"/><text x="33.5559%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.3059%" y="421" width="0.0824%" height="15" fill="rgb(233,31,4)" fg:x="404" fg:w="1"/><text x="33.5559%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3059%" y="405" width="0.0824%" height="15" fill="rgb(254,44,24)" fg:x="404" fg:w="1"/><text x="33.5559%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3059%" y="389" width="0.0824%" height="15" fill="rgb(218,54,1)" fg:x="404" fg:w="1"/><text x="33.5559%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3059%" y="373" width="0.0824%" height="15" fill="rgb(243,209,39)" fg:x="404" fg:w="1"/><text x="33.5559%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.3059%" y="357" width="0.0824%" height="15" fill="rgb(206,75,33)" fg:x="404" fg:w="1"/><text x="33.5559%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="33.3059%" y="485" width="0.1649%" height="15" fill="rgb(223,108,18)" fg:x="404" fg:w="2"/><text x="33.5559%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3883%" y="469" width="0.0824%" height="15" fill="rgb(244,89,31)" fg:x="405" fg:w="1"/><text x="33.6383%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.3883%" y="453" width="0.0824%" height="15" fill="rgb(222,167,27)" fg:x="405" fg:w="1"/><text x="33.6383%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="33.3883%" y="437" width="0.0824%" height="15" fill="rgb(247,41,16)" fg:x="405" fg:w="1"/><text x="33.6383%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.3883%" y="421" width="0.0824%" height="15" fill="rgb(233,168,40)" fg:x="405" fg:w="1"/><text x="33.6383%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="33.3059%" y="501" width="0.4122%" height="15" fill="rgb(205,211,8)" fg:x="404" fg:w="5"/><text x="33.5559%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.25%)</title><rect x="33.4707%" y="485" width="0.2473%" height="15" fill="rgb(238,105,11)" fg:x="406" fg:w="3"/><text x="33.7207%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="33.4707%" y="469" width="0.2473%" height="15" fill="rgb(223,142,52)" fg:x="406" fg:w="3"/><text x="33.7207%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="33.5532%" y="453" width="0.1649%" height="15" fill="rgb(238,51,33)" fg:x="407" fg:w="2"/><text x="33.8032%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.5532%" y="437" width="0.1649%" height="15" fill="rgb(231,188,43)" fg:x="407" fg:w="2"/><text x="33.8032%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.5532%" y="421" width="0.1649%" height="15" fill="rgb(216,92,17)" fg:x="407" fg:w="2"/><text x="33.8032%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.5532%" y="405" width="0.1649%" height="15" fill="rgb(228,2,40)" fg:x="407" fg:w="2"/><text x="33.8032%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.5532%" y="389" width="0.1649%" height="15" fill="rgb(226,73,15)" fg:x="407" fg:w="2"/><text x="33.8032%" y="399.50"></text></g><g><title>plugins_core::build::Build::save (11 samples, 0.91%)</title><rect x="32.8937%" y="533" width="0.9068%" height="15" fill="rgb(227,66,46)" fg:x="399" fg:w="11"/><text x="33.1437%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.82%)</title><rect x="32.9761%" y="517" width="0.8244%" height="15" fill="rgb(209,71,6)" fg:x="400" fg:w="10"/><text x="33.2261%" y="527.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="33.7181%" y="501" width="0.0824%" height="15" fill="rgb(246,100,25)" fg:x="409" fg:w="1"/><text x="33.9681%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="33.8005%" y="501" width="0.0824%" height="15" fill="rgb(248,185,27)" fg:x="410" fg:w="1"/><text x="34.0505%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.8005%" y="485" width="0.0824%" height="15" fill="rgb(225,118,47)" fg:x="410" fg:w="1"/><text x="34.0505%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="33.8005%" y="469" width="0.0824%" height="15" fill="rgb(220,185,44)" fg:x="410" fg:w="1"/><text x="34.0505%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0478%" y="469" width="0.0824%" height="15" fill="rgb(227,95,24)" fg:x="413" fg:w="1"/><text x="34.2978%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (20 samples, 1.65%)</title><rect x="32.5639%" y="565" width="1.6488%" height="15" fill="rgb(252,84,24)" fg:x="395" fg:w="20"/><text x="32.8139%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.65%)</title><rect x="32.5639%" y="549" width="1.6488%" height="15" fill="rgb(240,34,44)" fg:x="395" fg:w="20"/><text x="32.8139%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (5 samples, 0.41%)</title><rect x="33.8005%" y="533" width="0.4122%" height="15" fill="rgb(209,72,54)" fg:x="410" fg:w="5"/><text x="34.0505%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (5 samples, 0.41%)</title><rect x="33.8005%" y="517" width="0.4122%" height="15" fill="rgb(226,19,45)" fg:x="410" fg:w="5"/><text x="34.0505%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (4 samples, 0.33%)</title><rect x="33.8829%" y="501" width="0.3298%" height="15" fill="rgb(246,7,45)" fg:x="411" fg:w="4"/><text x="34.1329%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="33.8829%" y="485" width="0.3298%" height="15" fill="rgb(225,45,2)" fg:x="411" fg:w="4"/><text x="34.1329%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.1303%" y="469" width="0.0824%" height="15" fill="rgb(221,80,29)" fg:x="414" fg:w="1"/><text x="34.3803%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="34.1303%" y="453" width="0.0824%" height="15" fill="rgb(228,11,19)" fg:x="414" fg:w="1"/><text x="34.3803%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="34.2951%" y="533" width="0.0824%" height="15" fill="rgb(243,17,21)" fg:x="416" fg:w="1"/><text x="34.5451%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.2951%" y="517" width="0.0824%" height="15" fill="rgb(243,88,8)" fg:x="416" fg:w="1"/><text x="34.5451%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2951%" y="501" width="0.0824%" height="15" fill="rgb(214,17,9)" fg:x="416" fg:w="1"/><text x="34.5451%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="34.3776%" y="533" width="0.0824%" height="15" fill="rgb(232,169,15)" fg:x="417" fg:w="1"/><text x="34.6276%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="34.3776%" y="517" width="0.0824%" height="15" fill="rgb(232,86,53)" fg:x="417" fg:w="1"/><text x="34.6276%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="34.4600%" y="533" width="0.0824%" height="15" fill="rgb(222,100,4)" fg:x="418" fg:w="1"/><text x="34.7100%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4600%" y="517" width="0.0824%" height="15" fill="rgb(253,151,38)" fg:x="418" fg:w="1"/><text x="34.7100%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (5 samples, 0.41%)</title><rect x="34.2127%" y="549" width="0.4122%" height="15" fill="rgb(238,215,29)" fg:x="415" fg:w="5"/><text x="34.4627%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="34.5425%" y="533" width="0.0824%" height="15" fill="rgb(205,128,53)" fg:x="419" fg:w="1"/><text x="34.7925%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.5425%" y="517" width="0.0824%" height="15" fill="rgb(248,183,14)" fg:x="419" fg:w="1"/><text x="34.7925%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="34.5425%" y="501" width="0.0824%" height="15" fill="rgb(244,172,35)" fg:x="419" fg:w="1"/><text x="34.7925%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="34.5425%" y="485" width="0.0824%" height="15" fill="rgb(234,93,19)" fg:x="419" fg:w="1"/><text x="34.7925%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.6249%" y="549" width="0.0824%" height="15" fill="rgb(227,109,7)" fg:x="420" fg:w="1"/><text x="34.8749%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="34.7073%" y="533" width="0.0824%" height="15" fill="rgb(233,136,54)" fg:x="421" fg:w="1"/><text x="34.9573%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="34.7073%" y="517" width="0.0824%" height="15" fill="rgb(233,19,40)" fg:x="421" fg:w="1"/><text x="34.9573%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.7073%" y="501" width="0.0824%" height="15" fill="rgb(247,41,18)" fg:x="421" fg:w="1"/><text x="34.9573%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.7073%" y="485" width="0.0824%" height="15" fill="rgb(220,34,34)" fg:x="421" fg:w="1"/><text x="34.9573%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.7073%" y="469" width="0.0824%" height="15" fill="rgb(222,135,32)" fg:x="421" fg:w="1"/><text x="34.9573%" y="479.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="34.7073%" y="549" width="0.1649%" height="15" fill="rgb(214,80,19)" fg:x="421" fg:w="2"/><text x="34.9573%" y="559.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="34.7898%" y="533" width="0.0824%" height="15" fill="rgb(234,54,46)" fg:x="422" fg:w="1"/><text x="35.0398%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="34.8722%" y="485" width="0.0824%" height="15" fill="rgb(251,48,23)" fg:x="423" fg:w="1"/><text x="35.1222%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.8722%" y="469" width="0.0824%" height="15" fill="rgb(254,109,52)" fg:x="423" fg:w="1"/><text x="35.1222%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.8722%" y="453" width="0.0824%" height="15" fill="rgb(240,186,19)" fg:x="423" fg:w="1"/><text x="35.1222%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.8722%" y="437" width="0.0824%" height="15" fill="rgb(246,187,17)" fg:x="423" fg:w="1"/><text x="35.1222%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="34.9547%" y="485" width="0.0824%" height="15" fill="rgb(212,21,5)" fg:x="424" fg:w="1"/><text x="35.2047%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.9547%" y="469" width="0.0824%" height="15" fill="rgb(225,185,18)" fg:x="424" fg:w="1"/><text x="35.2047%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.9547%" y="453" width="0.0824%" height="15" fill="rgb(245,114,17)" fg:x="424" fg:w="1"/><text x="35.2047%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2020%" y="437" width="0.0824%" height="15" fill="rgb(223,164,24)" fg:x="427" fg:w="1"/><text x="35.4520%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="34.8722%" y="501" width="0.4946%" height="15" fill="rgb(211,228,3)" fg:x="423" fg:w="6"/><text x="35.1222%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.33%)</title><rect x="35.0371%" y="485" width="0.3298%" height="15" fill="rgb(223,16,38)" fg:x="425" fg:w="4"/><text x="35.2871%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="35.0371%" y="469" width="0.3298%" height="15" fill="rgb(207,31,54)" fg:x="425" fg:w="4"/><text x="35.2871%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.33%)</title><rect x="35.0371%" y="453" width="0.3298%" height="15" fill="rgb(220,39,11)" fg:x="425" fg:w="4"/><text x="35.2871%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="35.2844%" y="437" width="0.0824%" height="15" fill="rgb(235,185,0)" fg:x="428" fg:w="1"/><text x="35.5344%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="35.2844%" y="421" width="0.0824%" height="15" fill="rgb(249,39,18)" fg:x="428" fg:w="1"/><text x="35.5344%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::new_from_entity (2 samples, 0.16%)</title><rect x="35.3669%" y="501" width="0.1649%" height="15" fill="rgb(240,110,33)" fg:x="429" fg:w="2"/><text x="35.6169%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.4493%" y="485" width="0.0824%" height="15" fill="rgb(210,92,42)" fg:x="430" fg:w="1"/><text x="35.6993%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="35.6142%" y="469" width="0.0824%" height="15" fill="rgb(218,215,28)" fg:x="432" fg:w="1"/><text x="35.8642%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.91%)</title><rect x="34.8722%" y="533" width="0.9068%" height="15" fill="rgb(238,215,36)" fg:x="423" fg:w="11"/><text x="35.1222%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.91%)</title><rect x="34.8722%" y="517" width="0.9068%" height="15" fill="rgb(220,31,10)" fg:x="423" fg:w="11"/><text x="35.1222%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.25%)</title><rect x="35.5317%" y="501" width="0.2473%" height="15" fill="rgb(212,93,14)" fg:x="431" fg:w="3"/><text x="35.7817%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.6142%" y="485" width="0.1649%" height="15" fill="rgb(254,207,2)" fg:x="432" fg:w="2"/><text x="35.8642%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="35.6966%" y="469" width="0.0824%" height="15" fill="rgb(205,57,44)" fg:x="433" fg:w="1"/><text x="35.9466%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.6966%" y="453" width="0.0824%" height="15" fill="rgb(226,151,19)" fg:x="433" fg:w="1"/><text x="35.9466%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6966%" y="437" width="0.0824%" height="15" fill="rgb(230,72,30)" fg:x="433" fg:w="1"/><text x="35.9466%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.6966%" y="421" width="0.0824%" height="15" fill="rgb(244,0,8)" fg:x="433" fg:w="1"/><text x="35.9466%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6966%" y="405" width="0.0824%" height="15" fill="rgb(230,192,6)" fg:x="433" fg:w="1"/><text x="35.9466%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.7791%" y="517" width="0.0824%" height="15" fill="rgb(233,207,13)" fg:x="434" fg:w="1"/><text x="36.0291%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.7791%" y="501" width="0.0824%" height="15" fill="rgb(206,227,7)" fg:x="434" fg:w="1"/><text x="36.0291%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.7791%" y="485" width="0.0824%" height="15" fill="rgb(213,217,25)" fg:x="434" fg:w="1"/><text x="36.0291%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7791%" y="469" width="0.0824%" height="15" fill="rgb(249,75,4)" fg:x="434" fg:w="1"/><text x="36.0291%" y="479.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (291 samples, 23.99%)</title><rect x="11.9538%" y="581" width="23.9901%" height="15" fill="rgb(225,114,18)" fg:x="145" fg:w="291"/><text x="12.2038%" y="591.50">&lt;tests::HoldingKeyInVessel as tests::W..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (21 samples, 1.73%)</title><rect x="34.2127%" y="565" width="1.7312%" height="15" fill="rgb(211,162,40)" fg:x="415" fg:w="21"/><text x="34.4627%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (13 samples, 1.07%)</title><rect x="34.8722%" y="549" width="1.0717%" height="15" fill="rgb(206,49,29)" fg:x="423" fg:w="13"/><text x="35.1222%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="35.7791%" y="533" width="0.1649%" height="15" fill="rgb(244,8,6)" fg:x="434" fg:w="2"/><text x="36.0291%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.8615%" y="517" width="0.0824%" height="15" fill="rgb(231,194,28)" fg:x="435" fg:w="1"/><text x="36.1115%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.8615%" y="501" width="0.0824%" height="15" fill="rgb(210,69,5)" fg:x="435" fg:w="1"/><text x="36.1115%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.8615%" y="485" width="0.0824%" height="15" fill="rgb(216,186,12)" fg:x="435" fg:w="1"/><text x="36.1115%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.8615%" y="469" width="0.0824%" height="15" fill="rgb(238,61,15)" fg:x="435" fg:w="1"/><text x="36.1115%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="35.8615%" y="453" width="0.0824%" height="15" fill="rgb(226,104,1)" fg:x="435" fg:w="1"/><text x="36.1115%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.8615%" y="437" width="0.0824%" height="15" fill="rgb(229,128,15)" fg:x="435" fg:w="1"/><text x="36.1115%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8615%" y="421" width="0.0824%" height="15" fill="rgb(247,110,15)" fg:x="435" fg:w="1"/><text x="36.1115%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="36.0264%" y="565" width="0.0824%" height="15" fill="rgb(210,74,48)" fg:x="437" fg:w="1"/><text x="36.2764%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.0264%" y="549" width="0.0824%" height="15" fill="rgb(246,121,10)" fg:x="437" fg:w="1"/><text x="36.2764%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="36.1088%" y="565" width="0.1649%" height="15" fill="rgb(214,156,37)" fg:x="438" fg:w="2"/><text x="36.3588%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="36.1088%" y="549" width="0.1649%" height="15" fill="rgb(214,210,34)" fg:x="438" fg:w="2"/><text x="36.3588%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="36.1088%" y="533" width="0.1649%" height="15" fill="rgb(237,93,35)" fg:x="438" fg:w="2"/><text x="36.3588%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="36.1088%" y="517" width="0.1649%" height="15" fill="rgb(206,36,8)" fg:x="438" fg:w="2"/><text x="36.3588%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="36.1088%" y="501" width="0.1649%" height="15" fill="rgb(208,151,12)" fg:x="438" fg:w="2"/><text x="36.3588%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="36.1088%" y="485" width="0.1649%" height="15" fill="rgb(225,133,52)" fg:x="438" fg:w="2"/><text x="36.3588%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="36.1913%" y="469" width="0.0824%" height="15" fill="rgb(231,71,53)" fg:x="439" fg:w="1"/><text x="36.4413%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.1913%" y="453" width="0.0824%" height="15" fill="rgb(243,76,21)" fg:x="439" fg:w="1"/><text x="36.4413%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.1913%" y="437" width="0.0824%" height="15" fill="rgb(252,144,3)" fg:x="439" fg:w="1"/><text x="36.4413%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="36.1913%" y="421" width="0.0824%" height="15" fill="rgb(231,199,10)" fg:x="439" fg:w="1"/><text x="36.4413%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="36.1913%" y="405" width="0.0824%" height="15" fill="rgb(215,18,11)" fg:x="439" fg:w="1"/><text x="36.4413%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="36.1913%" y="389" width="0.0824%" height="15" fill="rgb(241,65,24)" fg:x="439" fg:w="1"/><text x="36.4413%" y="399.50"></text></g><g><title>engine::session::Session::save_logs (1 samples, 0.08%)</title><rect x="36.2737%" y="565" width="0.0824%" height="15" fill="rgb(251,192,38)" fg:x="440" fg:w="1"/><text x="36.5237%" y="575.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="36.3561%" y="565" width="0.0824%" height="15" fill="rgb(205,9,35)" fg:x="441" fg:w="1"/><text x="36.6061%" y="575.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="36.4386%" y="565" width="0.0824%" height="15" fill="rgb(229,225,49)" fg:x="442" fg:w="1"/><text x="36.6886%" y="575.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="36.4386%" y="549" width="0.0824%" height="15" fill="rgb(207,125,39)" fg:x="442" fg:w="1"/><text x="36.6886%" y="559.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="36.4386%" y="533" width="0.0824%" height="15" fill="rgb(222,78,19)" fg:x="442" fg:w="1"/><text x="36.6886%" y="543.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="36.4386%" y="517" width="0.0824%" height="15" fill="rgb(248,207,20)" fg:x="442" fg:w="1"/><text x="36.6886%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="36.4386%" y="501" width="0.0824%" height="15" fill="rgb(205,103,49)" fg:x="442" fg:w="1"/><text x="36.6886%" y="511.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="36.4386%" y="485" width="0.0824%" height="15" fill="rgb(216,42,28)" fg:x="442" fg:w="1"/><text x="36.6886%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="36.4386%" y="469" width="0.0824%" height="15" fill="rgb(213,205,53)" fg:x="442" fg:w="1"/><text x="36.6886%" y="479.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="36.4386%" y="453" width="0.0824%" height="15" fill="rgb(239,140,53)" fg:x="442" fg:w="1"/><text x="36.6886%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="36.6035%" y="533" width="0.0824%" height="15" fill="rgb(248,95,9)" fg:x="444" fg:w="1"/><text x="36.8535%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.6035%" y="517" width="0.0824%" height="15" fill="rgb(254,58,47)" fg:x="444" fg:w="1"/><text x="36.8535%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.6035%" y="501" width="0.0824%" height="15" fill="rgb(234,227,14)" fg:x="444" fg:w="1"/><text x="36.8535%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.6035%" y="485" width="0.0824%" height="15" fill="rgb(205,192,45)" fg:x="444" fg:w="1"/><text x="36.8535%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.41%)</title><rect x="37.0981%" y="469" width="0.4122%" height="15" fill="rgb(253,187,31)" fg:x="450" fg:w="5"/><text x="37.3481%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="37.0981%" y="453" width="0.4122%" height="15" fill="rgb(222,6,32)" fg:x="450" fg:w="5"/><text x="37.3481%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="37.1805%" y="437" width="0.3298%" height="15" fill="rgb(249,190,19)" fg:x="451" fg:w="4"/><text x="37.4305%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="37.2630%" y="421" width="0.2473%" height="15" fill="rgb(251,28,20)" fg:x="452" fg:w="3"/><text x="37.5130%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="37.2630%" y="405" width="0.2473%" height="15" fill="rgb(210,223,40)" fg:x="452" fg:w="3"/><text x="37.5130%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.4279%" y="389" width="0.0824%" height="15" fill="rgb(216,137,22)" fg:x="454" fg:w="1"/><text x="37.6779%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.4279%" y="373" width="0.0824%" height="15" fill="rgb(247,39,34)" fg:x="454" fg:w="1"/><text x="37.6779%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.4279%" y="357" width="0.0824%" height="15" fill="rgb(239,43,50)" fg:x="454" fg:w="1"/><text x="37.6779%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.7576%" y="405" width="0.0824%" height="15" fill="rgb(241,212,9)" fg:x="458" fg:w="1"/><text x="38.0076%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.7576%" y="389" width="0.0824%" height="15" fill="rgb(205,8,2)" fg:x="458" fg:w="1"/><text x="38.0076%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="37.5103%" y="453" width="0.4122%" height="15" fill="rgb(217,173,54)" fg:x="455" fg:w="5"/><text x="37.7603%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="37.5927%" y="437" width="0.3298%" height="15" fill="rgb(208,149,52)" fg:x="456" fg:w="4"/><text x="37.8427%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="37.6752%" y="421" width="0.2473%" height="15" fill="rgb(239,99,40)" fg:x="457" fg:w="3"/><text x="37.9252%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="37.8401%" y="405" width="0.0824%" height="15" fill="rgb(233,214,26)" fg:x="459" fg:w="1"/><text x="38.0901%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="37.9225%" y="405" width="0.2473%" height="15" fill="rgb(231,225,37)" fg:x="460" fg:w="3"/><text x="38.1725%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.0049%" y="389" width="0.1649%" height="15" fill="rgb(252,55,35)" fg:x="461" fg:w="2"/><text x="38.2549%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.0049%" y="373" width="0.1649%" height="15" fill="rgb(239,43,18)" fg:x="461" fg:w="2"/><text x="38.2549%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.0874%" y="357" width="0.0824%" height="15" fill="rgb(251,125,49)" fg:x="462" fg:w="1"/><text x="38.3374%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.0874%" y="341" width="0.0824%" height="15" fill="rgb(212,83,54)" fg:x="462" fg:w="1"/><text x="38.3374%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.0874%" y="325" width="0.0824%" height="15" fill="rgb(250,75,6)" fg:x="462" fg:w="1"/><text x="38.3374%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="38.0874%" y="309" width="0.0824%" height="15" fill="rgb(252,36,40)" fg:x="462" fg:w="1"/><text x="38.3374%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="37.9225%" y="437" width="0.3298%" height="15" fill="rgb(230,91,51)" fg:x="460" fg:w="4"/><text x="38.1725%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="37.9225%" y="421" width="0.3298%" height="15" fill="rgb(212,92,28)" fg:x="460" fg:w="4"/><text x="38.1725%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="38.1698%" y="405" width="0.0824%" height="15" fill="rgb(227,13,22)" fg:x="463" fg:w="1"/><text x="38.4198%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="38.1698%" y="389" width="0.0824%" height="15" fill="rgb(239,204,32)" fg:x="463" fg:w="1"/><text x="38.4198%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="38.1698%" y="373" width="0.0824%" height="15" fill="rgb(228,49,41)" fg:x="463" fg:w="1"/><text x="38.4198%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="38.1698%" y="357" width="0.0824%" height="15" fill="rgb(206,95,6)" fg:x="463" fg:w="1"/><text x="38.4198%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="38.2523%" y="437" width="0.3298%" height="15" fill="rgb(251,20,14)" fg:x="464" fg:w="4"/><text x="38.5023%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.4171%" y="421" width="0.1649%" height="15" fill="rgb(214,99,28)" fg:x="466" fg:w="2"/><text x="38.6671%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.4171%" y="405" width="0.1649%" height="15" fill="rgb(239,122,54)" fg:x="466" fg:w="2"/><text x="38.6671%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.4996%" y="389" width="0.0824%" height="15" fill="rgb(218,217,46)" fg:x="467" fg:w="1"/><text x="38.7496%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="38.5820%" y="421" width="0.1649%" height="15" fill="rgb(249,106,28)" fg:x="468" fg:w="2"/><text x="38.8320%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.5820%" y="405" width="0.1649%" height="15" fill="rgb(250,158,18)" fg:x="468" fg:w="2"/><text x="38.8320%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.6645%" y="389" width="0.0824%" height="15" fill="rgb(226,137,29)" fg:x="469" fg:w="1"/><text x="38.9145%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.6645%" y="373" width="0.0824%" height="15" fill="rgb(210,188,1)" fg:x="469" fg:w="1"/><text x="38.9145%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="38.8293%" y="405" width="0.3298%" height="15" fill="rgb(227,84,42)" fg:x="471" fg:w="4"/><text x="39.0793%" y="415.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="38.8293%" y="389" width="0.3298%" height="15" fill="rgb(222,147,48)" fg:x="471" fg:w="4"/><text x="39.0793%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.9942%" y="373" width="0.1649%" height="15" fill="rgb(241,150,43)" fg:x="473" fg:w="2"/><text x="39.2442%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.0767%" y="357" width="0.0824%" height="15" fill="rgb(206,139,52)" fg:x="474" fg:w="1"/><text x="39.3267%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.0767%" y="341" width="0.0824%" height="15" fill="rgb(230,63,14)" fg:x="474" fg:w="1"/><text x="39.3267%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.0767%" y="325" width="0.0824%" height="15" fill="rgb(247,8,20)" fg:x="474" fg:w="1"/><text x="39.3267%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.0767%" y="309" width="0.0824%" height="15" fill="rgb(213,115,4)" fg:x="474" fg:w="1"/><text x="39.3267%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="39.1591%" y="405" width="0.1649%" height="15" fill="rgb(241,79,49)" fg:x="475" fg:w="2"/><text x="39.4091%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.2415%" y="389" width="0.0824%" height="15" fill="rgb(222,42,35)" fg:x="476" fg:w="1"/><text x="39.4915%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.2415%" y="373" width="0.0824%" height="15" fill="rgb(247,59,23)" fg:x="476" fg:w="1"/><text x="39.4915%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.2415%" y="357" width="0.0824%" height="15" fill="rgb(247,93,18)" fg:x="476" fg:w="1"/><text x="39.4915%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.66%)</title><rect x="38.7469%" y="421" width="0.6595%" height="15" fill="rgb(249,107,47)" fg:x="470" fg:w="8"/><text x="38.9969%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.3240%" y="405" width="0.0824%" height="15" fill="rgb(219,27,1)" fg:x="477" fg:w="1"/><text x="39.5740%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.3240%" y="389" width="0.0824%" height="15" fill="rgb(217,82,32)" fg:x="477" fg:w="1"/><text x="39.5740%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="39.3240%" y="373" width="0.0824%" height="15" fill="rgb(250,129,47)" fg:x="477" fg:w="1"/><text x="39.5740%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.07%)</title><rect x="38.5820%" y="437" width="1.0717%" height="15" fill="rgb(253,88,35)" fg:x="468" fg:w="13"/><text x="38.8320%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="39.4064%" y="421" width="0.2473%" height="15" fill="rgb(245,221,14)" fg:x="478" fg:w="3"/><text x="39.6564%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="39.4889%" y="405" width="0.1649%" height="15" fill="rgb(217,119,54)" fg:x="479" fg:w="2"/><text x="39.7389%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.81%)</title><rect x="37.9225%" y="453" width="1.8137%" height="15" fill="rgb(247,128,31)" fg:x="460" fg:w="22"/><text x="38.1725%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.6538%" y="437" width="0.0824%" height="15" fill="rgb(211,99,22)" fg:x="481" fg:w="1"/><text x="39.9038%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (35 samples, 2.89%)</title><rect x="37.0981%" y="485" width="2.8854%" height="15" fill="rgb(212,20,17)" fg:x="450" fg:w="35"/><text x="37.3481%" y="495.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.47%)</title><rect x="37.5103%" y="469" width="2.4732%" height="15" fill="rgb(209,159,29)" fg:x="455" fg:w="30"/><text x="37.7603%" y="479.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="39.7362%" y="453" width="0.2473%" height="15" fill="rgb(222,177,53)" fg:x="482" fg:w="3"/><text x="39.9862%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="39.7362%" y="437" width="0.2473%" height="15" fill="rgb(234,46,43)" fg:x="482" fg:w="3"/><text x="39.9862%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="39.8186%" y="421" width="0.1649%" height="15" fill="rgb(208,108,14)" fg:x="483" fg:w="2"/><text x="40.0686%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.9011%" y="405" width="0.0824%" height="15" fill="rgb(226,78,53)" fg:x="484" fg:w="1"/><text x="40.1511%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.9011%" y="389" width="0.0824%" height="15" fill="rgb(230,20,41)" fg:x="484" fg:w="1"/><text x="40.1511%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.9011%" y="373" width="0.0824%" height="15" fill="rgb(213,195,35)" fg:x="484" fg:w="1"/><text x="40.1511%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.9835%" y="437" width="0.1649%" height="15" fill="rgb(242,62,36)" fg:x="485" fg:w="2"/><text x="40.2335%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0660%" y="421" width="0.0824%" height="15" fill="rgb(222,210,37)" fg:x="486" fg:w="1"/><text x="40.3160%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="40.1484%" y="421" width="0.0824%" height="15" fill="rgb(232,107,19)" fg:x="487" fg:w="1"/><text x="40.3984%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2308%" y="405" width="0.0824%" height="15" fill="rgb(235,85,17)" fg:x="488" fg:w="1"/><text x="40.4808%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3133%" y="405" width="0.0824%" height="15" fill="rgb(219,195,31)" fg:x="489" fg:w="1"/><text x="40.5633%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3133%" y="389" width="0.0824%" height="15" fill="rgb(231,183,30)" fg:x="489" fg:w="1"/><text x="40.5633%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="40.3957%" y="405" width="0.1649%" height="15" fill="rgb(212,0,11)" fg:x="490" fg:w="2"/><text x="40.6457%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="40.3957%" y="389" width="0.1649%" height="15" fill="rgb(249,53,54)" fg:x="490" fg:w="2"/><text x="40.6457%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.4782%" y="373" width="0.0824%" height="15" fill="rgb(211,118,13)" fg:x="491" fg:w="1"/><text x="40.7282%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.4782%" y="357" width="0.0824%" height="15" fill="rgb(237,42,9)" fg:x="491" fg:w="1"/><text x="40.7282%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.4782%" y="341" width="0.0824%" height="15" fill="rgb(227,68,32)" fg:x="491" fg:w="1"/><text x="40.7282%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.74%)</title><rect x="39.9835%" y="485" width="0.7420%" height="15" fill="rgb(238,10,7)" fg:x="485" fg:w="9"/><text x="40.2335%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.74%)</title><rect x="39.9835%" y="469" width="0.7420%" height="15" fill="rgb(224,42,12)" fg:x="485" fg:w="9"/><text x="40.2335%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.74%)</title><rect x="39.9835%" y="453" width="0.7420%" height="15" fill="rgb(252,190,5)" fg:x="485" fg:w="9"/><text x="40.2335%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.58%)</title><rect x="40.1484%" y="437" width="0.5771%" height="15" fill="rgb(220,214,39)" fg:x="487" fg:w="7"/><text x="40.3984%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="40.2308%" y="421" width="0.4946%" height="15" fill="rgb(247,98,4)" fg:x="488" fg:w="6"/><text x="40.4808%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.5606%" y="405" width="0.1649%" height="15" fill="rgb(211,60,12)" fg:x="492" fg:w="2"/><text x="40.8106%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.6430%" y="389" width="0.0824%" height="15" fill="rgb(224,42,10)" fg:x="493" fg:w="1"/><text x="40.8930%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.7255%" y="453" width="0.0824%" height="15" fill="rgb(217,167,4)" fg:x="494" fg:w="1"/><text x="40.9755%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8079%" y="421" width="0.0824%" height="15" fill="rgb(253,18,17)" fg:x="495" fg:w="1"/><text x="41.0579%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8904%" y="389" width="0.0824%" height="15" fill="rgb(249,186,44)" fg:x="496" fg:w="1"/><text x="41.1404%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.25%)</title><rect x="40.9728%" y="389" width="0.2473%" height="15" fill="rgb(254,124,54)" fg:x="497" fg:w="3"/><text x="41.2228%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.0552%" y="373" width="0.1649%" height="15" fill="rgb(220,124,39)" fg:x="498" fg:w="2"/><text x="41.3052%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="41.3026%" y="373" width="0.2473%" height="15" fill="rgb(225,96,46)" fg:x="501" fg:w="3"/><text x="41.5526%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="41.5499%" y="373" width="0.1649%" height="15" fill="rgb(221,106,12)" fg:x="504" fg:w="2"/><text x="41.7999%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.5499%" y="357" width="0.1649%" height="15" fill="rgb(227,133,23)" fg:x="504" fg:w="2"/><text x="41.7999%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.5499%" y="341" width="0.1649%" height="15" fill="rgb(216,44,52)" fg:x="504" fg:w="2"/><text x="41.7999%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.7972%" y="357" width="0.0824%" height="15" fill="rgb(239,149,7)" fg:x="507" fg:w="1"/><text x="42.0472%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.15%)</title><rect x="40.8079%" y="453" width="1.1542%" height="15" fill="rgb(211,157,31)" fg:x="495" fg:w="14"/><text x="41.0579%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.15%)</title><rect x="40.8079%" y="437" width="1.1542%" height="15" fill="rgb(206,215,22)" fg:x="495" fg:w="14"/><text x="41.0579%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.07%)</title><rect x="40.8904%" y="421" width="1.0717%" height="15" fill="rgb(208,113,15)" fg:x="496" fg:w="13"/><text x="41.1404%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.07%)</title><rect x="40.8904%" y="405" width="1.0717%" height="15" fill="rgb(207,189,15)" fg:x="496" fg:w="13"/><text x="41.1404%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.74%)</title><rect x="41.2201%" y="389" width="0.7420%" height="15" fill="rgb(231,115,4)" fg:x="500" fg:w="9"/><text x="41.4701%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="41.7148%" y="373" width="0.2473%" height="15" fill="rgb(253,117,2)" fg:x="506" fg:w="3"/><text x="41.9648%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.8796%" y="357" width="0.0824%" height="15" fill="rgb(248,48,24)" fg:x="508" fg:w="1"/><text x="42.1296%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8796%" y="341" width="0.0824%" height="15" fill="rgb(241,28,46)" fg:x="508" fg:w="1"/><text x="42.1296%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="42.0445%" y="373" width="0.1649%" height="15" fill="rgb(216,165,52)" fg:x="510" fg:w="2"/><text x="42.2945%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.1270%" y="357" width="0.0824%" height="15" fill="rgb(220,222,34)" fg:x="511" fg:w="1"/><text x="42.3770%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="41.9621%" y="421" width="0.3298%" height="15" fill="rgb(247,222,49)" fg:x="509" fg:w="4"/><text x="42.2121%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="42.0445%" y="405" width="0.2473%" height="15" fill="rgb(240,10,31)" fg:x="510" fg:w="3"/><text x="42.2945%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="42.0445%" y="389" width="0.2473%" height="15" fill="rgb(221,199,35)" fg:x="510" fg:w="3"/><text x="42.2945%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.2094%" y="373" width="0.0824%" height="15" fill="rgb(230,223,11)" fg:x="512" fg:w="1"/><text x="42.4594%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="41.9621%" y="437" width="0.4122%" height="15" fill="rgb(218,82,45)" fg:x="509" fg:w="5"/><text x="42.2121%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.2918%" y="421" width="0.0824%" height="15" fill="rgb(233,213,33)" fg:x="513" fg:w="1"/><text x="42.5418%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (21 samples, 1.73%)</title><rect x="40.7255%" y="469" width="1.7312%" height="15" fill="rgb(210,143,52)" fg:x="494" fg:w="21"/><text x="40.9755%" y="479.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.49%)</title><rect x="41.9621%" y="453" width="0.4946%" height="15" fill="rgb(206,95,4)" fg:x="509" fg:w="6"/><text x="42.2121%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="42.3743%" y="437" width="0.0824%" height="15" fill="rgb(246,164,46)" fg:x="514" fg:w="1"/><text x="42.6243%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.3743%" y="421" width="0.0824%" height="15" fill="rgb(213,210,47)" fg:x="514" fg:w="1"/><text x="42.6243%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7040%" y="437" width="0.0824%" height="15" fill="rgb(210,12,38)" fg:x="518" fg:w="1"/><text x="42.9540%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.25%)</title><rect x="42.7865%" y="437" width="0.2473%" height="15" fill="rgb(252,192,54)" fg:x="519" fg:w="3"/><text x="43.0365%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.8689%" y="421" width="0.1649%" height="15" fill="rgb(242,92,6)" fg:x="520" fg:w="2"/><text x="43.1189%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.9514%" y="405" width="0.0824%" height="15" fill="rgb(253,154,15)" fg:x="521" fg:w="1"/><text x="43.2014%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="43.0338%" y="437" width="0.1649%" height="15" fill="rgb(209,20,43)" fg:x="522" fg:w="2"/><text x="43.2838%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.0338%" y="421" width="0.1649%" height="15" fill="rgb(232,28,49)" fg:x="522" fg:w="2"/><text x="43.2838%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1162%" y="405" width="0.0824%" height="15" fill="rgb(248,131,53)" fg:x="523" fg:w="1"/><text x="43.3662%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7758%" y="389" width="0.0824%" height="15" fill="rgb(214,16,30)" fg:x="531" fg:w="1"/><text x="44.0258%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.7758%" y="373" width="0.0824%" height="15" fill="rgb(245,16,0)" fg:x="531" fg:w="1"/><text x="44.0258%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="43.9406%" y="373" width="0.0824%" height="15" fill="rgb(245,17,35)" fg:x="533" fg:w="1"/><text x="44.1906%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.3528%" y="341" width="0.0824%" height="15" fill="rgb(249,27,53)" fg:x="538" fg:w="1"/><text x="44.6028%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.66%)</title><rect x="43.8582%" y="389" width="0.6595%" height="15" fill="rgb(214,73,24)" fg:x="532" fg:w="8"/><text x="44.1082%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="44.0231%" y="373" width="0.4946%" height="15" fill="rgb(223,84,37)" fg:x="534" fg:w="6"/><text x="44.2731%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="44.1880%" y="357" width="0.3298%" height="15" fill="rgb(210,109,28)" fg:x="536" fg:w="4"/><text x="44.4380%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="44.4353%" y="341" width="0.0824%" height="15" fill="rgb(208,186,6)" fg:x="539" fg:w="1"/><text x="44.6853%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="44.4353%" y="325" width="0.0824%" height="15" fill="rgb(235,201,30)" fg:x="539" fg:w="1"/><text x="44.6853%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="44.8475%" y="373" width="0.0824%" height="15" fill="rgb(216,198,48)" fg:x="544" fg:w="1"/><text x="45.0975%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.9299%" y="357" width="0.1649%" height="15" fill="rgb(254,186,25)" fg:x="545" fg:w="2"/><text x="45.1799%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0124%" y="341" width="0.0824%" height="15" fill="rgb(227,87,5)" fg:x="546" fg:w="1"/><text x="45.2624%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="45.2597%" y="325" width="0.3298%" height="15" fill="rgb(236,205,25)" fg:x="549" fg:w="4"/><text x="45.5097%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="45.2597%" y="309" width="0.3298%" height="15" fill="rgb(229,99,32)" fg:x="549" fg:w="4"/><text x="45.5097%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="45.1772%" y="341" width="0.4946%" height="15" fill="rgb(231,177,31)" fg:x="548" fg:w="6"/><text x="45.4272%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="45.5894%" y="325" width="0.0824%" height="15" fill="rgb(246,15,2)" fg:x="553" fg:w="1"/><text x="45.8394%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.82%)</title><rect x="44.9299%" y="373" width="0.8244%" height="15" fill="rgb(207,39,15)" fg:x="545" fg:w="10"/><text x="45.1799%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.66%)</title><rect x="45.0948%" y="357" width="0.6595%" height="15" fill="rgb(207,44,9)" fg:x="547" fg:w="8"/><text x="45.3448%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6719%" y="341" width="0.0824%" height="15" fill="rgb(225,224,33)" fg:x="554" fg:w="1"/><text x="45.9219%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 2.31%)</title><rect x="43.6109%" y="405" width="2.3083%" height="15" fill="rgb(252,151,3)" fg:x="529" fg:w="28"/><text x="43.8609%" y="415.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.40%)</title><rect x="44.5177%" y="389" width="1.4015%" height="15" fill="rgb(211,140,13)" fg:x="540" fg:w="17"/><text x="44.7677%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.7543%" y="373" width="0.1649%" height="15" fill="rgb(239,225,17)" fg:x="555" fg:w="2"/><text x="46.0043%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.47%)</title><rect x="43.5284%" y="421" width="2.4732%" height="15" fill="rgb(223,170,52)" fg:x="528" fg:w="30"/><text x="43.7784%" y="431.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="45.9192%" y="405" width="0.0824%" height="15" fill="rgb(212,64,21)" fg:x="557" fg:w="1"/><text x="46.1692%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (47 samples, 3.87%)</title><rect x="42.4567%" y="469" width="3.8747%" height="15" fill="rgb(236,126,48)" fg:x="515" fg:w="47"/><text x="42.7067%" y="479.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 3.87%)</title><rect x="42.4567%" y="453" width="3.8747%" height="15" fill="rgb(209,135,11)" fg:x="515" fg:w="47"/><text x="42.7067%" y="463.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.13%)</title><rect x="43.1987%" y="437" width="3.1327%" height="15" fill="rgb(228,126,40)" fg:x="524" fg:w="38"/><text x="43.4487%" y="447.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="46.0016%" y="421" width="0.3298%" height="15" fill="rgb(205,196,36)" fg:x="558" fg:w="4"/><text x="46.2516%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.8261%" y="293" width="0.1649%" height="15" fill="rgb(243,160,33)" fg:x="568" fg:w="2"/><text x="47.0761%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.9085%" y="277" width="0.0824%" height="15" fill="rgb(210,84,20)" fg:x="569" fg:w="1"/><text x="47.1585%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.9085%" y="261" width="0.0824%" height="15" fill="rgb(228,213,30)" fg:x="569" fg:w="1"/><text x="47.1585%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.9085%" y="245" width="0.0824%" height="15" fill="rgb(252,33,45)" fg:x="569" fg:w="1"/><text x="47.1585%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9085%" y="229" width="0.0824%" height="15" fill="rgb(254,227,20)" fg:x="569" fg:w="1"/><text x="47.1585%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9085%" y="213" width="0.0824%" height="15" fill="rgb(228,192,2)" fg:x="569" fg:w="1"/><text x="47.1585%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9085%" y="197" width="0.0824%" height="15" fill="rgb(233,32,8)" fg:x="569" fg:w="1"/><text x="47.1585%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.9909%" y="293" width="0.0824%" height="15" fill="rgb(220,146,47)" fg:x="570" fg:w="1"/><text x="47.2409%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.9909%" y="277" width="0.0824%" height="15" fill="rgb(246,194,1)" fg:x="570" fg:w="1"/><text x="47.2409%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="46.8261%" y="325" width="0.4946%" height="15" fill="rgb(218,203,9)" fg:x="568" fg:w="6"/><text x="47.0761%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="46.8261%" y="309" width="0.4946%" height="15" fill="rgb(237,97,14)" fg:x="568" fg:w="6"/><text x="47.0761%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="47.0734%" y="293" width="0.2473%" height="15" fill="rgb(239,76,15)" fg:x="571" fg:w="3"/><text x="47.3234%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.1558%" y="277" width="0.1649%" height="15" fill="rgb(222,53,45)" fg:x="572" fg:w="2"/><text x="47.4058%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="47.2383%" y="261" width="0.0824%" height="15" fill="rgb(237,88,5)" fg:x="573" fg:w="1"/><text x="47.4883%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="47.3207%" y="277" width="0.1649%" height="15" fill="rgb(218,223,35)" fg:x="574" fg:w="2"/><text x="47.5707%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.3207%" y="261" width="0.1649%" height="15" fill="rgb(243,229,38)" fg:x="574" fg:w="2"/><text x="47.5707%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.4856%" y="261" width="0.0824%" height="15" fill="rgb(240,75,41)" fg:x="576" fg:w="1"/><text x="47.7356%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.25%)</title><rect x="47.4856%" y="277" width="0.2473%" height="15" fill="rgb(209,110,37)" fg:x="576" fg:w="3"/><text x="47.7356%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.5680%" y="261" width="0.1649%" height="15" fill="rgb(221,130,46)" fg:x="577" fg:w="2"/><text x="47.8180%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="47.3207%" y="309" width="0.4946%" height="15" fill="rgb(237,160,20)" fg:x="574" fg:w="6"/><text x="47.5707%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="47.3207%" y="293" width="0.4946%" height="15" fill="rgb(234,126,24)" fg:x="574" fg:w="6"/><text x="47.5707%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.7329%" y="277" width="0.0824%" height="15" fill="rgb(207,177,9)" fg:x="579" fg:w="1"/><text x="47.9829%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.7329%" y="261" width="0.0824%" height="15" fill="rgb(231,191,33)" fg:x="579" fg:w="1"/><text x="47.9829%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.8153%" y="293" width="0.0824%" height="15" fill="rgb(207,42,1)" fg:x="580" fg:w="1"/><text x="48.0653%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.8153%" y="309" width="0.1649%" height="15" fill="rgb(218,34,50)" fg:x="580" fg:w="2"/><text x="48.0653%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.8978%" y="293" width="0.0824%" height="15" fill="rgb(254,126,39)" fg:x="581" fg:w="1"/><text x="48.1478%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.82%)</title><rect x="47.3207%" y="325" width="0.8244%" height="15" fill="rgb(251,17,26)" fg:x="574" fg:w="10"/><text x="47.5707%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.9802%" y="309" width="0.1649%" height="15" fill="rgb(252,215,34)" fg:x="582" fg:w="2"/><text x="48.2302%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.9802%" y="293" width="0.1649%" height="15" fill="rgb(217,120,44)" fg:x="582" fg:w="2"/><text x="48.2302%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.9802%" y="277" width="0.1649%" height="15" fill="rgb(211,31,11)" fg:x="582" fg:w="2"/><text x="48.2302%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.40%)</title><rect x="46.8261%" y="341" width="1.4015%" height="15" fill="rgb(222,69,51)" fg:x="568" fg:w="17"/><text x="47.0761%" y="351.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="48.1451%" y="325" width="0.0824%" height="15" fill="rgb(215,229,42)" fg:x="584" fg:w="1"/><text x="48.3951%" y="335.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_decimal (1 samples, 0.08%)</title><rect x="48.1451%" y="309" width="0.0824%" height="15" fill="rgb(212,102,15)" fg:x="584" fg:w="1"/><text x="48.3951%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 1.73%)</title><rect x="46.5787%" y="373" width="1.7312%" height="15" fill="rgb(205,179,41)" fg:x="565" fg:w="21"/><text x="46.8287%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.73%)</title><rect x="46.5787%" y="357" width="1.7312%" height="15" fill="rgb(219,148,46)" fg:x="565" fg:w="21"/><text x="46.8287%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.2275%" y="341" width="0.0824%" height="15" fill="rgb(243,40,19)" fg:x="585" fg:w="1"/><text x="48.4775%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.2275%" y="325" width="0.0824%" height="15" fill="rgb(208,206,34)" fg:x="585" fg:w="1"/><text x="48.4775%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.06%)</title><rect x="46.4138%" y="405" width="2.0610%" height="15" fill="rgb(244,184,38)" fg:x="563" fg:w="25"/><text x="46.6638%" y="415.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.98%)</title><rect x="46.4963%" y="389" width="1.9786%" height="15" fill="rgb(244,151,47)" fg:x="564" fg:w="24"/><text x="46.7463%" y="399.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.3100%" y="373" width="0.1649%" height="15" fill="rgb(236,134,42)" fg:x="586" fg:w="2"/><text x="48.5600%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.3100%" y="357" width="0.1649%" height="15" fill="rgb(233,93,22)" fg:x="586" fg:w="2"/><text x="48.5600%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.4749%" y="405" width="0.0824%" height="15" fill="rgb(211,202,10)" fg:x="588" fg:w="1"/><text x="48.7249%" y="415.50"></text></g><g><title>engine::session::state::State::close (147 samples, 12.12%)</title><rect x="36.5210%" y="565" width="12.1187%" height="15" fill="rgb(240,63,8)" fg:x="443" fg:w="147"/><text x="36.7710%" y="575.50">engine::session::s..</text></g><g><title>engine::session::state::State::flush_entities (146 samples, 12.04%)</title><rect x="36.6035%" y="549" width="12.0363%" height="15" fill="rgb(214,9,4)" fg:x="444" fg:w="146"/><text x="36.8535%" y="559.50">engine::session::s..</text></g><g><title>core::iter::adapters::try_process (145 samples, 11.95%)</title><rect x="36.6859%" y="533" width="11.9538%" height="15" fill="rgb(243,66,45)" fg:x="445" fg:w="145"/><text x="36.9359%" y="543.50">core::iter::adapte..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (145 samples, 11.95%)</title><rect x="36.6859%" y="517" width="11.9538%" height="15" fill="rgb(220,50,42)" fg:x="445" fg:w="145"/><text x="36.9359%" y="527.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (144 samples, 11.87%)</title><rect x="36.7683%" y="501" width="11.8714%" height="15" fill="rgb(220,134,27)" fg:x="446" fg:w="144"/><text x="37.0183%" y="511.50">engine::session::s..</text></g><g><title>kernel::model::any_entity_changes (96 samples, 7.91%)</title><rect x="40.7255%" y="485" width="7.9143%" height="15" fill="rgb(246,151,50)" fg:x="494" fg:w="96"/><text x="40.9755%" y="495.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (28 samples, 2.31%)</title><rect x="46.3314%" y="469" width="2.3083%" height="15" fill="rgb(238,216,27)" fg:x="562" fg:w="28"/><text x="46.5814%" y="479.50">s..</text></g><g><title>serde_json::de::from_trait (28 samples, 2.31%)</title><rect x="46.3314%" y="453" width="2.3083%" height="15" fill="rgb(250,92,11)" fg:x="562" fg:w="28"/><text x="46.5814%" y="463.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.31%)</title><rect x="46.3314%" y="437" width="2.3083%" height="15" fill="rgb(248,183,6)" fg:x="562" fg:w="28"/><text x="46.5814%" y="447.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.31%)</title><rect x="46.3314%" y="421" width="2.3083%" height="15" fill="rgb(211,204,50)" fg:x="562" fg:w="28"/><text x="46.5814%" y="431.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5573%" y="405" width="0.0824%" height="15" fill="rgb(252,55,47)" fg:x="589" fg:w="1"/><text x="48.8073%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5573%" y="389" width="0.0824%" height="15" fill="rgb(240,198,32)" fg:x="589" fg:w="1"/><text x="48.8073%" y="399.50"></text></g><g><title>engine::session::Session::close (155 samples, 12.78%)</title><rect x="35.9439%" y="581" width="12.7782%" height="15" fill="rgb(224,203,19)" fg:x="436" fg:w="155"/><text x="36.1939%" y="591.50">engine::session::Se..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="48.6397%" y="565" width="0.0824%" height="15" fill="rgb(205,27,16)" fg:x="590" fg:w="1"/><text x="48.8897%" y="575.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="48.6397%" y="549" width="0.0824%" height="15" fill="rgb(224,226,17)" fg:x="590" fg:w="1"/><text x="48.8897%" y="559.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="48.6397%" y="533" width="0.0824%" height="15" fill="rgb(205,216,54)" fg:x="590" fg:w="1"/><text x="48.8897%" y="543.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="48.6397%" y="517" width="0.0824%" height="15" fill="rgb(248,168,46)" fg:x="590" fg:w="1"/><text x="48.8897%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="48.6397%" y="501" width="0.0824%" height="15" fill="rgb(226,111,45)" fg:x="590" fg:w="1"/><text x="48.8897%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="48.6397%" y="485" width="0.0824%" height="15" fill="rgb(231,15,9)" fg:x="590" fg:w="1"/><text x="48.8897%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.8871%" y="533" width="0.0824%" height="15" fill="rgb(243,168,3)" fg:x="593" fg:w="1"/><text x="49.1371%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.8871%" y="517" width="0.0824%" height="15" fill="rgb(221,220,54)" fg:x="593" fg:w="1"/><text x="49.1371%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.8871%" y="501" width="0.0824%" height="15" fill="rgb(232,174,38)" fg:x="593" fg:w="1"/><text x="49.1371%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.8871%" y="485" width="0.0824%" height="15" fill="rgb(205,14,38)" fg:x="593" fg:w="1"/><text x="49.1371%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.8871%" y="469" width="0.0824%" height="15" fill="rgb(234,89,19)" fg:x="593" fg:w="1"/><text x="49.1371%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.8871%" y="453" width="0.0824%" height="15" fill="rgb(216,68,51)" fg:x="593" fg:w="1"/><text x="49.1371%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.8871%" y="437" width="0.0824%" height="15" fill="rgb(213,49,2)" fg:x="593" fg:w="1"/><text x="49.1371%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.8871%" y="421" width="0.0824%" height="15" fill="rgb(242,146,30)" fg:x="593" fg:w="1"/><text x="49.1371%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.8871%" y="405" width="0.0824%" height="15" fill="rgb(224,188,11)" fg:x="593" fg:w="1"/><text x="49.1371%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.8871%" y="389" width="0.0824%" height="15" fill="rgb(213,159,11)" fg:x="593" fg:w="1"/><text x="49.1371%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.8871%" y="373" width="0.0824%" height="15" fill="rgb(229,13,31)" fg:x="593" fg:w="1"/><text x="49.1371%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8871%" y="357" width="0.0824%" height="15" fill="rgb(209,103,11)" fg:x="593" fg:w="1"/><text x="49.1371%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (6 samples, 0.49%)</title><rect x="48.7222%" y="549" width="0.4946%" height="15" fill="rgb(206,3,4)" fg:x="591" fg:w="6"/><text x="48.9722%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.25%)</title><rect x="48.9695%" y="533" width="0.2473%" height="15" fill="rgb(252,10,49)" fg:x="594" fg:w="3"/><text x="49.2195%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.0519%" y="517" width="0.1649%" height="15" fill="rgb(217,160,32)" fg:x="595" fg:w="2"/><text x="49.3019%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.0519%" y="501" width="0.1649%" height="15" fill="rgb(249,196,0)" fg:x="595" fg:w="2"/><text x="49.3019%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.1344%" y="485" width="0.0824%" height="15" fill="rgb(213,17,48)" fg:x="596" fg:w="1"/><text x="49.3844%" y="495.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::sources (1 samples, 0.08%)</title><rect x="49.2993%" y="517" width="0.0824%" height="15" fill="rgb(206,42,46)" fg:x="598" fg:w="1"/><text x="49.5493%" y="527.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.25%)</title><rect x="49.2168%" y="549" width="0.2473%" height="15" fill="rgb(212,105,24)" fg:x="597" fg:w="3"/><text x="49.4668%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="49.2168%" y="533" width="0.2473%" height="15" fill="rgb(243,216,30)" fg:x="597" fg:w="3"/><text x="49.4668%" y="543.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="49.3817%" y="517" width="0.0824%" height="15" fill="rgb(207,121,3)" fg:x="599" fg:w="1"/><text x="49.6317%" y="527.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="49.3817%" y="501" width="0.0824%" height="15" fill="rgb(249,78,0)" fg:x="599" fg:w="1"/><text x="49.6317%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.5466%" y="389" width="0.0824%" height="15" fill="rgb(244,151,32)" fg:x="601" fg:w="1"/><text x="49.7966%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.08%)</title><rect x="49.5466%" y="373" width="0.0824%" height="15" fill="rgb(228,63,25)" fg:x="601" fg:w="1"/><text x="49.7966%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.08%)</title><rect x="49.5466%" y="357" width="0.0824%" height="15" fill="rgb(231,158,23)" fg:x="601" fg:w="1"/><text x="49.7966%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="49.5466%" y="341" width="0.0824%" height="15" fill="rgb(248,107,23)" fg:x="601" fg:w="1"/><text x="49.7966%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.08%)</title><rect x="49.5466%" y="325" width="0.0824%" height="15" fill="rgb(215,168,21)" fg:x="601" fg:w="1"/><text x="49.7966%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.5466%" y="309" width="0.0824%" height="15" fill="rgb(227,83,22)" fg:x="601" fg:w="1"/><text x="49.7966%" y="319.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (1 samples, 0.08%)</title><rect x="49.5466%" y="293" width="0.0824%" height="15" fill="rgb(217,118,43)" fg:x="601" fg:w="1"/><text x="49.7966%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="49.5466%" y="277" width="0.0824%" height="15" fill="rgb(229,220,41)" fg:x="601" fg:w="1"/><text x="49.7966%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="49.5466%" y="261" width="0.0824%" height="15" fill="rgb(254,146,46)" fg:x="601" fg:w="1"/><text x="49.7966%" y="271.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="49.5466%" y="245" width="0.0824%" height="15" fill="rgb(233,208,31)" fg:x="601" fg:w="1"/><text x="49.7966%" y="255.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.08%)</title><rect x="49.6290%" y="373" width="0.0824%" height="15" fill="rgb(222,162,7)" fg:x="602" fg:w="1"/><text x="49.8790%" y="383.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="49.6290%" y="357" width="0.0824%" height="15" fill="rgb(230,117,45)" fg:x="602" fg:w="1"/><text x="49.8790%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="49.6290%" y="341" width="0.0824%" height="15" fill="rgb(239,163,6)" fg:x="602" fg:w="1"/><text x="49.8790%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.6290%" y="325" width="0.0824%" height="15" fill="rgb(246,130,17)" fg:x="602" fg:w="1"/><text x="49.8790%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.6290%" y="309" width="0.0824%" height="15" fill="rgb(216,84,5)" fg:x="602" fg:w="1"/><text x="49.8790%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.6290%" y="293" width="0.0824%" height="15" fill="rgb(230,200,21)" fg:x="602" fg:w="1"/><text x="49.8790%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.6290%" y="277" width="0.0824%" height="15" fill="rgb(224,2,8)" fg:x="602" fg:w="1"/><text x="49.8790%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.6290%" y="261" width="0.0824%" height="15" fill="rgb(238,178,10)" fg:x="602" fg:w="1"/><text x="49.8790%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.6290%" y="245" width="0.0824%" height="15" fill="rgb(242,153,24)" fg:x="602" fg:w="1"/><text x="49.8790%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.6290%" y="229" width="0.0824%" height="15" fill="rgb(242,32,48)" fg:x="602" fg:w="1"/><text x="49.8790%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.33%)</title><rect x="49.4641%" y="533" width="0.3298%" height="15" fill="rgb(227,36,0)" fg:x="600" fg:w="4"/><text x="49.7141%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.33%)</title><rect x="49.4641%" y="517" width="0.3298%" height="15" fill="rgb(251,33,35)" fg:x="600" fg:w="4"/><text x="49.7141%" y="527.50"></text></g><g><title>core::fmt::write (4 samples, 0.33%)</title><rect x="49.4641%" y="501" width="0.3298%" height="15" fill="rgb(232,168,51)" fg:x="600" fg:w="4"/><text x="49.7141%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.33%)</title><rect x="49.4641%" y="485" width="0.3298%" height="15" fill="rgb(228,56,10)" fg:x="600" fg:w="4"/><text x="49.7141%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (4 samples, 0.33%)</title><rect x="49.4641%" y="469" width="0.3298%" height="15" fill="rgb(231,10,26)" fg:x="600" fg:w="4"/><text x="49.7141%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (4 samples, 0.33%)</title><rect x="49.4641%" y="453" width="0.3298%" height="15" fill="rgb(226,202,12)" fg:x="600" fg:w="4"/><text x="49.7141%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.25%)</title><rect x="49.5466%" y="437" width="0.2473%" height="15" fill="rgb(251,49,21)" fg:x="601" fg:w="3"/><text x="49.7966%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.25%)</title><rect x="49.5466%" y="421" width="0.2473%" height="15" fill="rgb(206,228,28)" fg:x="601" fg:w="3"/><text x="49.7966%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (3 samples, 0.25%)</title><rect x="49.5466%" y="405" width="0.2473%" height="15" fill="rgb(205,198,31)" fg:x="601" fg:w="3"/><text x="49.7966%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="49.6290%" y="389" width="0.1649%" height="15" fill="rgb(213,69,1)" fg:x="602" fg:w="2"/><text x="49.8790%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="49.7115%" y="373" width="0.0824%" height="15" fill="rgb(209,177,9)" fg:x="603" fg:w="1"/><text x="49.9615%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="49.7115%" y="357" width="0.0824%" height="15" fill="rgb(227,119,30)" fg:x="603" fg:w="1"/><text x="49.9615%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="49.7115%" y="341" width="0.0824%" height="15" fill="rgb(234,106,41)" fg:x="603" fg:w="1"/><text x="49.9615%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.7115%" y="325" width="0.0824%" height="15" fill="rgb(244,103,47)" fg:x="603" fg:w="1"/><text x="49.9615%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.7115%" y="309" width="0.0824%" height="15" fill="rgb(212,211,25)" fg:x="603" fg:w="1"/><text x="49.9615%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.7115%" y="293" width="0.0824%" height="15" fill="rgb(208,63,53)" fg:x="603" fg:w="1"/><text x="49.9615%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.7115%" y="277" width="0.0824%" height="15" fill="rgb(213,176,21)" fg:x="603" fg:w="1"/><text x="49.9615%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.7115%" y="261" width="0.0824%" height="15" fill="rgb(243,124,12)" fg:x="603" fg:w="1"/><text x="49.9615%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.7115%" y="245" width="0.0824%" height="15" fill="rgb(239,2,35)" fg:x="603" fg:w="1"/><text x="49.9615%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.7115%" y="229" width="0.0824%" height="15" fill="rgb(253,169,22)" fg:x="603" fg:w="1"/><text x="49.9615%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.7115%" y="213" width="0.0824%" height="15" fill="rgb(254,51,12)" fg:x="603" fg:w="1"/><text x="49.9615%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.7115%" y="197" width="0.0824%" height="15" fill="rgb(244,17,47)" fg:x="603" fg:w="1"/><text x="49.9615%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.7115%" y="181" width="0.0824%" height="15" fill="rgb(251,45,46)" fg:x="603" fg:w="1"/><text x="49.9615%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::PerformAction&gt; (1 samples, 0.08%)</title><rect x="49.7939%" y="533" width="0.0824%" height="15" fill="rgb(223,87,43)" fg:x="604" fg:w="1"/><text x="50.0439%" y="543.50"></text></g><g><title>chrono::offset::utc::Utc::now (1 samples, 0.08%)</title><rect x="49.8763%" y="517" width="0.0824%" height="15" fill="rgb(230,132,31)" fg:x="605" fg:w="1"/><text x="50.1263%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="49.8763%" y="501" width="0.0824%" height="15" fill="rgb(206,99,1)" fg:x="605" fg:w="1"/><text x="50.1263%" y="511.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="49.8763%" y="485" width="0.0824%" height="15" fill="rgb(227,110,25)" fg:x="605" fg:w="1"/><text x="50.1263%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::logs::SessionSubscriber&gt; (1 samples, 0.08%)</title><rect x="49.9588%" y="517" width="0.0824%" height="15" fill="rgb(217,182,7)" fg:x="606" fg:w="1"/><text x="50.2088%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.9588%" y="501" width="0.0824%" height="15" fill="rgb(250,176,4)" fg:x="606" fg:w="1"/><text x="50.2088%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (4 samples, 0.33%)</title><rect x="50.0412%" y="517" width="0.3298%" height="15" fill="rgb(244,98,30)" fg:x="607" fg:w="4"/><text x="50.2912%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (4 samples, 0.33%)</title><rect x="50.0412%" y="501" width="0.3298%" height="15" fill="rgb(228,150,42)" fg:x="607" fg:w="4"/><text x="50.2912%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (3 samples, 0.25%)</title><rect x="50.1237%" y="485" width="0.2473%" height="15" fill="rgb(231,91,46)" fg:x="608" fg:w="3"/><text x="50.3737%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (1 samples, 0.08%)</title><rect x="50.2885%" y="469" width="0.0824%" height="15" fill="rgb(252,161,32)" fg:x="610" fg:w="1"/><text x="50.5385%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="50.7832%" y="389" width="0.2473%" height="15" fill="rgb(236,69,41)" fg:x="616" fg:w="3"/><text x="51.0332%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.8656%" y="373" width="0.1649%" height="15" fill="rgb(212,160,3)" fg:x="617" fg:w="2"/><text x="51.1156%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.8656%" y="357" width="0.1649%" height="15" fill="rgb(216,5,50)" fg:x="617" fg:w="2"/><text x="51.1156%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.8656%" y="341" width="0.1649%" height="15" fill="rgb(241,138,25)" fg:x="617" fg:w="2"/><text x="51.1156%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="50.8656%" y="325" width="0.1649%" height="15" fill="rgb(239,42,18)" fg:x="617" fg:w="2"/><text x="51.1156%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="50.8656%" y="309" width="0.1649%" height="15" fill="rgb(239,40,7)" fg:x="617" fg:w="2"/><text x="51.1156%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="50.8656%" y="293" width="0.1649%" height="15" fill="rgb(239,11,31)" fg:x="617" fg:w="2"/><text x="51.1156%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.8656%" y="277" width="0.1649%" height="15" fill="rgb(224,77,40)" fg:x="617" fg:w="2"/><text x="51.1156%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.8656%" y="261" width="0.1649%" height="15" fill="rgb(226,15,5)" fg:x="617" fg:w="2"/><text x="51.1156%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="50.8656%" y="245" width="0.1649%" height="15" fill="rgb(254,188,5)" fg:x="617" fg:w="2"/><text x="51.1156%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="50.8656%" y="229" width="0.1649%" height="15" fill="rgb(241,148,52)" fg:x="617" fg:w="2"/><text x="51.1156%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="50.8656%" y="213" width="0.1649%" height="15" fill="rgb(251,48,36)" fg:x="617" fg:w="2"/><text x="51.1156%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="50.8656%" y="197" width="0.1649%" height="15" fill="rgb(243,83,13)" fg:x="617" fg:w="2"/><text x="51.1156%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.8656%" y="181" width="0.1649%" height="15" fill="rgb(210,105,0)" fg:x="617" fg:w="2"/><text x="51.1156%" y="191.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.58%)</title><rect x="50.7007%" y="405" width="0.5771%" height="15" fill="rgb(239,60,36)" fg:x="615" fg:w="7"/><text x="50.9507%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="51.0305%" y="389" width="0.2473%" height="15" fill="rgb(210,20,0)" fg:x="619" fg:w="3"/><text x="51.2805%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.1129%" y="373" width="0.1649%" height="15" fill="rgb(244,26,53)" fg:x="620" fg:w="2"/><text x="51.3629%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.1129%" y="357" width="0.1649%" height="15" fill="rgb(240,100,49)" fg:x="620" fg:w="2"/><text x="51.3629%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.1129%" y="341" width="0.1649%" height="15" fill="rgb(250,46,45)" fg:x="620" fg:w="2"/><text x="51.3629%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.6076%" y="293" width="0.1649%" height="15" fill="rgb(220,181,29)" fg:x="626" fg:w="2"/><text x="51.8576%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.6900%" y="277" width="0.0824%" height="15" fill="rgb(213,137,33)" fg:x="627" fg:w="1"/><text x="51.9400%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.6900%" y="261" width="0.0824%" height="15" fill="rgb(213,27,48)" fg:x="627" fg:w="1"/><text x="51.9400%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.6900%" y="245" width="0.0824%" height="15" fill="rgb(245,180,39)" fg:x="627" fg:w="1"/><text x="51.9400%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.6900%" y="229" width="0.0824%" height="15" fill="rgb(212,158,42)" fg:x="627" fg:w="1"/><text x="51.9400%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.6900%" y="213" width="0.0824%" height="15" fill="rgb(228,193,18)" fg:x="627" fg:w="1"/><text x="51.9400%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.6900%" y="197" width="0.0824%" height="15" fill="rgb(245,172,29)" fg:x="627" fg:w="1"/><text x="51.9400%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.6900%" y="181" width="0.0824%" height="15" fill="rgb(207,98,24)" fg:x="627" fg:w="1"/><text x="51.9400%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.6900%" y="165" width="0.0824%" height="15" fill="rgb(249,92,26)" fg:x="627" fg:w="1"/><text x="51.9400%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="51.3603%" y="341" width="0.4946%" height="15" fill="rgb(217,176,26)" fg:x="623" fg:w="6"/><text x="51.6103%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="51.3603%" y="325" width="0.4946%" height="15" fill="rgb(221,8,39)" fg:x="623" fg:w="6"/><text x="51.6103%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="51.4427%" y="309" width="0.4122%" height="15" fill="rgb(208,90,18)" fg:x="624" fg:w="5"/><text x="51.6927%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7725%" y="293" width="0.0824%" height="15" fill="rgb(207,202,30)" fg:x="628" fg:w="1"/><text x="52.0225%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.7725%" y="277" width="0.0824%" height="15" fill="rgb(231,124,22)" fg:x="628" fg:w="1"/><text x="52.0225%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="51.8549%" y="341" width="0.0824%" height="15" fill="rgb(206,15,5)" fg:x="629" fg:w="1"/><text x="52.1049%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.8549%" y="325" width="0.0824%" height="15" fill="rgb(239,16,52)" fg:x="629" fg:w="1"/><text x="52.1049%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8549%" y="309" width="0.0824%" height="15" fill="rgb(245,213,29)" fg:x="629" fg:w="1"/><text x="52.1049%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.8549%" y="293" width="0.0824%" height="15" fill="rgb(213,203,36)" fg:x="629" fg:w="1"/><text x="52.1049%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8549%" y="277" width="0.0824%" height="15" fill="rgb(209,55,18)" fg:x="629" fg:w="1"/><text x="52.1049%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.8549%" y="261" width="0.0824%" height="15" fill="rgb(207,133,49)" fg:x="629" fg:w="1"/><text x="52.1049%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.8549%" y="245" width="0.0824%" height="15" fill="rgb(240,33,46)" fg:x="629" fg:w="1"/><text x="52.1049%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8549%" y="229" width="0.0824%" height="15" fill="rgb(212,35,2)" fg:x="629" fg:w="1"/><text x="52.1049%" y="239.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="51.9373%" y="341" width="0.0824%" height="15" fill="rgb(231,119,28)" fg:x="630" fg:w="1"/><text x="52.1873%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.9373%" y="325" width="0.0824%" height="15" fill="rgb(252,178,7)" fg:x="630" fg:w="1"/><text x="52.1873%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="52.1847%" y="181" width="0.0824%" height="15" fill="rgb(251,91,4)" fg:x="633" fg:w="1"/><text x="52.4347%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.1847%" y="165" width="0.0824%" height="15" fill="rgb(233,122,19)" fg:x="633" fg:w="1"/><text x="52.4347%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="52.1847%" y="149" width="0.0824%" height="15" fill="rgb(231,208,46)" fg:x="633" fg:w="1"/><text x="52.4347%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="52.1847%" y="213" width="0.1649%" height="15" fill="rgb(243,15,41)" fg:x="633" fg:w="2"/><text x="52.4347%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.1847%" y="197" width="0.1649%" height="15" fill="rgb(210,32,43)" fg:x="633" fg:w="2"/><text x="52.4347%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="52.2671%" y="181" width="0.0824%" height="15" fill="rgb(222,177,15)" fg:x="634" fg:w="1"/><text x="52.5171%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="52.3495%" y="69" width="0.0824%" height="15" fill="rgb(244,121,34)" fg:x="635" fg:w="1"/><text x="52.5995%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="52.1022%" y="245" width="0.4122%" height="15" fill="rgb(234,138,4)" fg:x="632" fg:w="5"/><text x="52.3522%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="52.1022%" y="229" width="0.4122%" height="15" fill="rgb(240,97,48)" fg:x="632" fg:w="5"/><text x="52.3522%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="52.3495%" y="213" width="0.1649%" height="15" fill="rgb(237,65,54)" fg:x="635" fg:w="2"/><text x="52.5995%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="52.3495%" y="197" width="0.1649%" height="15" fill="rgb(214,25,24)" fg:x="635" fg:w="2"/><text x="52.5995%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="52.3495%" y="181" width="0.1649%" height="15" fill="rgb(213,5,3)" fg:x="635" fg:w="2"/><text x="52.5995%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.3495%" y="165" width="0.1649%" height="15" fill="rgb(219,81,29)" fg:x="635" fg:w="2"/><text x="52.5995%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="52.3495%" y="149" width="0.1649%" height="15" fill="rgb(220,43,48)" fg:x="635" fg:w="2"/><text x="52.5995%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.3495%" y="133" width="0.1649%" height="15" fill="rgb(239,157,2)" fg:x="635" fg:w="2"/><text x="52.5995%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="52.3495%" y="117" width="0.1649%" height="15" fill="rgb(213,104,43)" fg:x="635" fg:w="2"/><text x="52.5995%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="52.3495%" y="101" width="0.1649%" height="15" fill="rgb(237,84,9)" fg:x="635" fg:w="2"/><text x="52.5995%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.3495%" y="85" width="0.1649%" height="15" fill="rgb(252,6,33)" fg:x="635" fg:w="2"/><text x="52.5995%" y="95.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.4320%" y="69" width="0.0824%" height="15" fill="rgb(251,172,22)" fg:x="636" fg:w="1"/><text x="52.6820%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="52.5144%" y="245" width="0.1649%" height="15" fill="rgb(244,91,53)" fg:x="637" fg:w="2"/><text x="52.7644%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="52.5144%" y="229" width="0.1649%" height="15" fill="rgb(219,29,30)" fg:x="637" fg:w="2"/><text x="52.7644%" y="239.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.5144%" y="213" width="0.1649%" height="15" fill="rgb(213,3,15)" fg:x="637" fg:w="2"/><text x="52.7644%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="52.6793%" y="197" width="0.0824%" height="15" fill="rgb(208,25,28)" fg:x="639" fg:w="1"/><text x="52.9293%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="52.6793%" y="181" width="0.0824%" height="15" fill="rgb(252,144,25)" fg:x="639" fg:w="1"/><text x="52.9293%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6793%" y="165" width="0.0824%" height="15" fill="rgb(226,220,25)" fg:x="639" fg:w="1"/><text x="52.9293%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.6793%" y="149" width="0.0824%" height="15" fill="rgb(212,131,28)" fg:x="639" fg:w="1"/><text x="52.9293%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.6793%" y="133" width="0.0824%" height="15" fill="rgb(219,143,52)" fg:x="639" fg:w="1"/><text x="52.9293%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.82%)</title><rect x="52.1022%" y="293" width="0.8244%" height="15" fill="rgb(215,56,7)" fg:x="632" fg:w="10"/><text x="52.3522%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.82%)</title><rect x="52.1022%" y="277" width="0.8244%" height="15" fill="rgb(239,59,51)" fg:x="632" fg:w="10"/><text x="52.3522%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.82%)</title><rect x="52.1022%" y="261" width="0.8244%" height="15" fill="rgb(209,215,4)" fg:x="632" fg:w="10"/><text x="52.3522%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="52.6793%" y="245" width="0.2473%" height="15" fill="rgb(221,118,39)" fg:x="639" fg:w="3"/><text x="52.9293%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="52.6793%" y="229" width="0.2473%" height="15" fill="rgb(236,6,44)" fg:x="639" fg:w="3"/><text x="52.9293%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.25%)</title><rect x="52.6793%" y="213" width="0.2473%" height="15" fill="rgb(216,122,9)" fg:x="639" fg:w="3"/><text x="52.9293%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.7617%" y="197" width="0.1649%" height="15" fill="rgb(244,134,42)" fg:x="640" fg:w="2"/><text x="53.0117%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.7617%" y="181" width="0.1649%" height="15" fill="rgb(209,189,35)" fg:x="640" fg:w="2"/><text x="53.0117%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="52.8442%" y="165" width="0.0824%" height="15" fill="rgb(250,47,36)" fg:x="641" fg:w="1"/><text x="53.0942%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8442%" y="149" width="0.0824%" height="15" fill="rgb(252,112,4)" fg:x="641" fg:w="1"/><text x="53.0942%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.8442%" y="133" width="0.0824%" height="15" fill="rgb(221,79,51)" fg:x="641" fg:w="1"/><text x="53.0942%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8442%" y="117" width="0.0824%" height="15" fill="rgb(232,65,53)" fg:x="641" fg:w="1"/><text x="53.0942%" y="127.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.99%)</title><rect x="52.0198%" y="341" width="0.9893%" height="15" fill="rgb(211,37,7)" fg:x="631" fg:w="12"/><text x="52.2698%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.99%)</title><rect x="52.0198%" y="325" width="0.9893%" height="15" fill="rgb(234,221,18)" fg:x="631" fg:w="12"/><text x="52.2698%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.99%)</title><rect x="52.0198%" y="309" width="0.9893%" height="15" fill="rgb(220,158,26)" fg:x="631" fg:w="12"/><text x="52.2698%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.9266%" y="293" width="0.0824%" height="15" fill="rgb(220,70,6)" fg:x="642" fg:w="1"/><text x="53.1766%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.9266%" y="277" width="0.0824%" height="15" fill="rgb(250,39,48)" fg:x="642" fg:w="1"/><text x="53.1766%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.9266%" y="261" width="0.0824%" height="15" fill="rgb(206,40,27)" fg:x="642" fg:w="1"/><text x="53.1766%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.9266%" y="245" width="0.0824%" height="15" fill="rgb(247,80,36)" fg:x="642" fg:w="1"/><text x="53.1766%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.0091%" y="229" width="0.0824%" height="15" fill="rgb(222,9,20)" fg:x="643" fg:w="1"/><text x="53.2591%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.0915%" y="101" width="0.1649%" height="15" fill="rgb(217,26,45)" fg:x="644" fg:w="2"/><text x="53.3415%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.1739%" y="85" width="0.0824%" height="15" fill="rgb(221,67,14)" fg:x="645" fg:w="1"/><text x="53.4239%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="53.0915%" y="197" width="0.2473%" height="15" fill="rgb(248,100,24)" fg:x="644" fg:w="3"/><text x="53.3415%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="53.0915%" y="181" width="0.2473%" height="15" fill="rgb(230,187,16)" fg:x="644" fg:w="3"/><text x="53.3415%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="53.0915%" y="165" width="0.2473%" height="15" fill="rgb(205,108,13)" fg:x="644" fg:w="3"/><text x="53.3415%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="53.0915%" y="149" width="0.2473%" height="15" fill="rgb(235,71,51)" fg:x="644" fg:w="3"/><text x="53.3415%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="53.0915%" y="133" width="0.2473%" height="15" fill="rgb(251,172,48)" fg:x="644" fg:w="3"/><text x="53.3415%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="53.0915%" y="117" width="0.2473%" height="15" fill="rgb(240,96,49)" fg:x="644" fg:w="3"/><text x="53.3415%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.2564%" y="101" width="0.0824%" height="15" fill="rgb(235,46,36)" fg:x="646" fg:w="1"/><text x="53.5064%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2564%" y="85" width="0.0824%" height="15" fill="rgb(244,3,49)" fg:x="646" fg:w="1"/><text x="53.5064%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="53.0915%" y="213" width="0.3298%" height="15" fill="rgb(206,78,54)" fg:x="644" fg:w="4"/><text x="53.3415%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.3388%" y="197" width="0.0824%" height="15" fill="rgb(208,85,42)" fg:x="647" fg:w="1"/><text x="53.5888%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3388%" y="181" width="0.0824%" height="15" fill="rgb(219,196,21)" fg:x="647" fg:w="1"/><text x="53.5888%" y="191.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (34 samples, 2.80%)</title><rect x="50.7007%" y="421" width="2.8030%" height="15" fill="rgb(238,19,9)" fg:x="615" fg:w="34"/><text x="50.9507%" y="431.50">&lt;p..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (27 samples, 2.23%)</title><rect x="51.2778%" y="405" width="2.2259%" height="15" fill="rgb(206,86,13)" fg:x="622" fg:w="27"/><text x="51.5278%" y="415.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (27 samples, 2.23%)</title><rect x="51.2778%" y="389" width="2.2259%" height="15" fill="rgb(214,123,40)" fg:x="622" fg:w="27"/><text x="51.5278%" y="399.50">k..</text></g><g><title>engine::session::Session::load_entity (27 samples, 2.23%)</title><rect x="51.2778%" y="373" width="2.2259%" height="15" fill="rgb(243,53,5)" fg:x="622" fg:w="27"/><text x="51.5278%" y="383.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.14%)</title><rect x="51.3603%" y="357" width="2.1434%" height="15" fill="rgb(254,186,31)" fg:x="623" fg:w="26"/><text x="51.6103%" y="367.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.49%)</title><rect x="53.0091%" y="341" width="0.4946%" height="15" fill="rgb(221,216,25)" fg:x="643" fg:w="6"/><text x="53.2591%" y="351.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.49%)</title><rect x="53.0091%" y="325" width="0.4946%" height="15" fill="rgb(248,107,42)" fg:x="643" fg:w="6"/><text x="53.2591%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="53.0091%" y="309" width="0.4946%" height="15" fill="rgb(221,85,43)" fg:x="643" fg:w="6"/><text x="53.2591%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="53.0091%" y="293" width="0.4946%" height="15" fill="rgb(225,34,24)" fg:x="643" fg:w="6"/><text x="53.2591%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="53.0091%" y="277" width="0.4946%" height="15" fill="rgb(211,119,1)" fg:x="643" fg:w="6"/><text x="53.2591%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="53.0091%" y="261" width="0.4946%" height="15" fill="rgb(254,216,46)" fg:x="643" fg:w="6"/><text x="53.2591%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="53.0091%" y="245" width="0.4946%" height="15" fill="rgb(238,11,38)" fg:x="643" fg:w="6"/><text x="53.2591%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="53.0915%" y="229" width="0.4122%" height="15" fill="rgb(233,50,15)" fg:x="644" fg:w="5"/><text x="53.3415%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.4213%" y="213" width="0.0824%" height="15" fill="rgb(217,181,29)" fg:x="648" fg:w="1"/><text x="53.6713%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.4213%" y="197" width="0.0824%" height="15" fill="rgb(214,56,3)" fg:x="648" fg:w="1"/><text x="53.6713%" y="207.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (35 samples, 2.89%)</title><rect x="50.7007%" y="437" width="2.8854%" height="15" fill="rgb(230,69,45)" fg:x="615" fg:w="35"/><text x="50.9507%" y="447.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="53.5037%" y="421" width="0.0824%" height="15" fill="rgb(224,201,50)" fg:x="649" fg:w="1"/><text x="53.7537%" y="431.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="53.5037%" y="405" width="0.0824%" height="15" fill="rgb(217,228,18)" fg:x="649" fg:w="1"/><text x="53.7537%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5037%" y="389" width="0.0824%" height="15" fill="rgb(239,33,44)" fg:x="649" fg:w="1"/><text x="53.7537%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="53.5862%" y="405" width="0.1649%" height="15" fill="rgb(248,210,23)" fg:x="650" fg:w="2"/><text x="53.8362%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="53.5862%" y="389" width="0.1649%" height="15" fill="rgb(253,135,8)" fg:x="650" fg:w="2"/><text x="53.8362%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="53.6686%" y="373" width="0.0824%" height="15" fill="rgb(217,98,21)" fg:x="651" fg:w="1"/><text x="53.9186%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="53.6686%" y="357" width="0.0824%" height="15" fill="rgb(253,130,21)" fg:x="651" fg:w="1"/><text x="53.9186%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="53.6686%" y="341" width="0.0824%" height="15" fill="rgb(207,81,54)" fg:x="651" fg:w="1"/><text x="53.9186%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="53.6686%" y="325" width="0.0824%" height="15" fill="rgb(232,48,33)" fg:x="651" fg:w="1"/><text x="53.9186%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="53.6686%" y="309" width="0.0824%" height="15" fill="rgb(211,9,35)" fg:x="651" fg:w="1"/><text x="53.9186%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.7510%" y="389" width="0.0824%" height="15" fill="rgb(205,152,21)" fg:x="652" fg:w="1"/><text x="54.0010%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="54.0808%" y="373" width="0.1649%" height="15" fill="rgb(249,21,27)" fg:x="656" fg:w="2"/><text x="54.3308%" y="383.50"></text></g><g><title>&lt;plugins_core::looking::model::LookError as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="54.1632%" y="357" width="0.0824%" height="15" fill="rgb(252,29,24)" fg:x="657" fg:w="1"/><text x="54.4132%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.3281%" y="341" width="0.0824%" height="15" fill="rgb(230,130,50)" fg:x="659" fg:w="1"/><text x="54.5781%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.41%)</title><rect x="54.2457%" y="357" width="0.4122%" height="15" fill="rgb(239,144,14)" fg:x="658" fg:w="5"/><text x="54.4957%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="54.4106%" y="341" width="0.2473%" height="15" fill="rgb(227,111,50)" fg:x="660" fg:w="3"/><text x="54.6606%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="54.4106%" y="325" width="0.2473%" height="15" fill="rgb(254,84,20)" fg:x="660" fg:w="3"/><text x="54.6606%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="54.5754%" y="309" width="0.0824%" height="15" fill="rgb(232,90,48)" fg:x="662" fg:w="1"/><text x="54.8254%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="54.5754%" y="293" width="0.0824%" height="15" fill="rgb(253,63,47)" fg:x="662" fg:w="1"/><text x="54.8254%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="54.5754%" y="277" width="0.0824%" height="15" fill="rgb(251,146,35)" fg:x="662" fg:w="1"/><text x="54.8254%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.5754%" y="261" width="0.0824%" height="15" fill="rgb(229,192,35)" fg:x="662" fg:w="1"/><text x="54.8254%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.5754%" y="245" width="0.0824%" height="15" fill="rgb(225,68,9)" fg:x="662" fg:w="1"/><text x="54.8254%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.5754%" y="229" width="0.0824%" height="15" fill="rgb(214,97,34)" fg:x="662" fg:w="1"/><text x="54.8254%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5754%" y="213" width="0.0824%" height="15" fill="rgb(253,31,26)" fg:x="662" fg:w="1"/><text x="54.8254%" y="223.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="54.6579%" y="309" width="0.0824%" height="15" fill="rgb(225,151,47)" fg:x="663" fg:w="1"/><text x="54.9079%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.9052%" y="245" width="0.1649%" height="15" fill="rgb(206,185,9)" fg:x="666" fg:w="2"/><text x="55.1552%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.9052%" y="229" width="0.1649%" height="15" fill="rgb(249,65,17)" fg:x="666" fg:w="2"/><text x="55.1552%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9876%" y="213" width="0.0824%" height="15" fill="rgb(220,110,10)" fg:x="667" fg:w="1"/><text x="55.2376%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9876%" y="197" width="0.0824%" height="15" fill="rgb(222,198,49)" fg:x="667" fg:w="1"/><text x="55.2376%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.9876%" y="181" width="0.0824%" height="15" fill="rgb(239,81,13)" fg:x="667" fg:w="1"/><text x="55.2376%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.9876%" y="165" width="0.0824%" height="15" fill="rgb(216,128,11)" fg:x="667" fg:w="1"/><text x="55.2376%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.9876%" y="149" width="0.0824%" height="15" fill="rgb(247,156,8)" fg:x="667" fg:w="1"/><text x="55.2376%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9876%" y="133" width="0.0824%" height="15" fill="rgb(219,173,1)" fg:x="667" fg:w="1"/><text x="55.2376%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9876%" y="117" width="0.0824%" height="15" fill="rgb(227,42,24)" fg:x="667" fg:w="1"/><text x="55.2376%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.9876%" y="101" width="0.0824%" height="15" fill="rgb(253,219,50)" fg:x="667" fg:w="1"/><text x="55.2376%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.9876%" y="85" width="0.0824%" height="15" fill="rgb(215,191,54)" fg:x="667" fg:w="1"/><text x="55.2376%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.9876%" y="69" width="0.0824%" height="15" fill="rgb(238,83,12)" fg:x="667" fg:w="1"/><text x="55.2376%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.9876%" y="53" width="0.0824%" height="15" fill="rgb(205,124,9)" fg:x="667" fg:w="1"/><text x="55.2376%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9876%" y="37" width="0.0824%" height="15" fill="rgb(253,174,7)" fg:x="667" fg:w="1"/><text x="55.2376%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="54.8228%" y="293" width="0.3298%" height="15" fill="rgb(206,134,49)" fg:x="665" fg:w="4"/><text x="55.0728%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="54.9052%" y="277" width="0.2473%" height="15" fill="rgb(221,89,20)" fg:x="666" fg:w="3"/><text x="55.1552%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="54.9052%" y="261" width="0.2473%" height="15" fill="rgb(240,205,13)" fg:x="666" fg:w="3"/><text x="55.1552%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0701%" y="245" width="0.0824%" height="15" fill="rgb(237,174,32)" fg:x="668" fg:w="1"/><text x="55.3201%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.1525%" y="277" width="0.0824%" height="15" fill="rgb(226,12,15)" fg:x="669" fg:w="1"/><text x="55.4025%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="55.1525%" y="293" width="0.1649%" height="15" fill="rgb(245,160,52)" fg:x="669" fg:w="2"/><text x="55.4025%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.2350%" y="277" width="0.0824%" height="15" fill="rgb(253,80,21)" fg:x="670" fg:w="1"/><text x="55.4850%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2350%" y="261" width="0.0824%" height="15" fill="rgb(231,225,22)" fg:x="670" fg:w="1"/><text x="55.4850%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.2350%" y="245" width="0.0824%" height="15" fill="rgb(253,185,12)" fg:x="670" fg:w="1"/><text x="55.4850%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2350%" y="229" width="0.0824%" height="15" fill="rgb(234,197,21)" fg:x="670" fg:w="1"/><text x="55.4850%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.2350%" y="213" width="0.0824%" height="15" fill="rgb(210,47,30)" fg:x="670" fg:w="1"/><text x="55.4850%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2350%" y="197" width="0.0824%" height="15" fill="rgb(246,139,27)" fg:x="670" fg:w="1"/><text x="55.4850%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3998%" y="245" width="0.0824%" height="15" fill="rgb(226,130,16)" fg:x="672" fg:w="1"/><text x="55.6498%" y="255.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.25%)</title><rect x="55.3174%" y="293" width="0.2473%" height="15" fill="rgb(237,208,20)" fg:x="671" fg:w="3"/><text x="55.5674%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.25%)</title><rect x="55.3174%" y="277" width="0.2473%" height="15" fill="rgb(245,186,28)" fg:x="671" fg:w="3"/><text x="55.5674%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="55.3998%" y="261" width="0.1649%" height="15" fill="rgb(238,105,39)" fg:x="672" fg:w="2"/><text x="55.6498%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.4823%" y="245" width="0.0824%" height="15" fill="rgb(253,228,11)" fg:x="673" fg:w="1"/><text x="55.7323%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="55.4823%" y="229" width="0.0824%" height="15" fill="rgb(224,136,38)" fg:x="673" fg:w="1"/><text x="55.7323%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.6472%" y="133" width="0.0824%" height="15" fill="rgb(211,3,25)" fg:x="675" fg:w="1"/><text x="55.8972%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.6472%" y="117" width="0.0824%" height="15" fill="rgb(238,66,34)" fg:x="675" fg:w="1"/><text x="55.8972%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.6472%" y="101" width="0.0824%" height="15" fill="rgb(223,188,11)" fg:x="675" fg:w="1"/><text x="55.8972%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.6472%" y="85" width="0.0824%" height="15" fill="rgb(221,10,35)" fg:x="675" fg:w="1"/><text x="55.8972%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.6472%" y="69" width="0.0824%" height="15" fill="rgb(223,18,44)" fg:x="675" fg:w="1"/><text x="55.8972%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.6472%" y="53" width="0.0824%" height="15" fill="rgb(220,97,41)" fg:x="675" fg:w="1"/><text x="55.8972%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="55.5647%" y="197" width="0.3298%" height="15" fill="rgb(206,95,45)" fg:x="674" fg:w="4"/><text x="55.8147%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="55.5647%" y="181" width="0.3298%" height="15" fill="rgb(209,96,13)" fg:x="674" fg:w="4"/><text x="55.8147%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="55.5647%" y="165" width="0.3298%" height="15" fill="rgb(237,39,34)" fg:x="674" fg:w="4"/><text x="55.8147%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="55.5647%" y="149" width="0.3298%" height="15" fill="rgb(213,49,47)" fg:x="674" fg:w="4"/><text x="55.8147%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.7296%" y="133" width="0.1649%" height="15" fill="rgb(205,107,27)" fg:x="676" fg:w="2"/><text x="55.9796%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.49%)</title><rect x="55.5647%" y="245" width="0.4946%" height="15" fill="rgb(212,142,9)" fg:x="674" fg:w="6"/><text x="55.8147%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="55.5647%" y="229" width="0.4946%" height="15" fill="rgb(226,182,0)" fg:x="674" fg:w="6"/><text x="55.8147%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.49%)</title><rect x="55.5647%" y="213" width="0.4946%" height="15" fill="rgb(231,3,53)" fg:x="674" fg:w="6"/><text x="55.8147%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.8945%" y="197" width="0.1649%" height="15" fill="rgb(246,111,28)" fg:x="678" fg:w="2"/><text x="56.1445%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="55.8945%" y="181" width="0.1649%" height="15" fill="rgb(254,183,7)" fg:x="678" fg:w="2"/><text x="56.1445%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.8945%" y="165" width="0.1649%" height="15" fill="rgb(247,177,28)" fg:x="678" fg:w="2"/><text x="56.1445%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.9769%" y="149" width="0.0824%" height="15" fill="rgb(244,43,1)" fg:x="679" fg:w="1"/><text x="56.2269%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9769%" y="133" width="0.0824%" height="15" fill="rgb(207,2,35)" fg:x="679" fg:w="1"/><text x="56.2269%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.58%)</title><rect x="55.5647%" y="293" width="0.5771%" height="15" fill="rgb(213,83,22)" fg:x="674" fg:w="7"/><text x="55.8147%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.58%)</title><rect x="55.5647%" y="277" width="0.5771%" height="15" fill="rgb(246,212,13)" fg:x="674" fg:w="7"/><text x="55.8147%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.58%)</title><rect x="55.5647%" y="261" width="0.5771%" height="15" fill="rgb(213,127,46)" fg:x="674" fg:w="7"/><text x="55.8147%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.0594%" y="245" width="0.0824%" height="15" fill="rgb(219,215,39)" fg:x="680" fg:w="1"/><text x="56.3094%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.0594%" y="229" width="0.0824%" height="15" fill="rgb(227,99,17)" fg:x="680" fg:w="1"/><text x="56.3094%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.0594%" y="213" width="0.0824%" height="15" fill="rgb(208,155,18)" fg:x="680" fg:w="1"/><text x="56.3094%" y="223.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="56.1418%" y="293" width="0.0824%" height="15" fill="rgb(223,204,38)" fg:x="681" fg:w="1"/><text x="56.3918%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.1418%" y="277" width="0.0824%" height="15" fill="rgb(212,114,21)" fg:x="681" fg:w="1"/><text x="56.3918%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="56.3067%" y="165" width="0.2473%" height="15" fill="rgb(250,74,13)" fg:x="683" fg:w="3"/><text x="56.5567%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="56.3067%" y="149" width="0.2473%" height="15" fill="rgb(234,7,1)" fg:x="683" fg:w="3"/><text x="56.5567%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.3891%" y="133" width="0.1649%" height="15" fill="rgb(207,138,31)" fg:x="684" fg:w="2"/><text x="56.6391%" y="143.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.3891%" y="117" width="0.1649%" height="15" fill="rgb(215,186,42)" fg:x="684" fg:w="2"/><text x="56.6391%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.5540%" y="165" width="0.0824%" height="15" fill="rgb(229,205,49)" fg:x="686" fg:w="1"/><text x="56.8040%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5540%" y="149" width="0.0824%" height="15" fill="rgb(216,156,32)" fg:x="686" fg:w="1"/><text x="56.8040%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="56.2242%" y="229" width="0.4946%" height="15" fill="rgb(238,7,21)" fg:x="682" fg:w="6"/><text x="56.4742%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="56.2242%" y="213" width="0.4946%" height="15" fill="rgb(249,190,22)" fg:x="682" fg:w="6"/><text x="56.4742%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="56.2242%" y="197" width="0.4946%" height="15" fill="rgb(253,51,31)" fg:x="682" fg:w="6"/><text x="56.4742%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="56.2242%" y="181" width="0.4946%" height="15" fill="rgb(237,90,54)" fg:x="682" fg:w="6"/><text x="56.4742%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.6364%" y="165" width="0.0824%" height="15" fill="rgb(250,214,33)" fg:x="687" fg:w="1"/><text x="56.8864%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.6364%" y="149" width="0.0824%" height="15" fill="rgb(237,10,49)" fg:x="687" fg:w="1"/><text x="56.8864%" y="159.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="56.6364%" y="133" width="0.0824%" height="15" fill="rgb(241,56,36)" fg:x="687" fg:w="1"/><text x="56.8864%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.7189%" y="229" width="0.0824%" height="15" fill="rgb(227,164,12)" fg:x="688" fg:w="1"/><text x="56.9689%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.7189%" y="213" width="0.0824%" height="15" fill="rgb(249,149,35)" fg:x="688" fg:w="1"/><text x="56.9689%" y="223.50"></text></g><g><title>plugins_core::tools::contained_by (32 samples, 2.64%)</title><rect x="54.2457%" y="373" width="2.6381%" height="15" fill="rgb(238,227,50)" fg:x="658" fg:w="32"/><text x="54.4957%" y="383.50">pl..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (27 samples, 2.23%)</title><rect x="54.6579%" y="357" width="2.2259%" height="15" fill="rgb(235,102,45)" fg:x="663" fg:w="27"/><text x="54.9079%" y="367.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (27 samples, 2.23%)</title><rect x="54.6579%" y="341" width="2.2259%" height="15" fill="rgb(211,10,38)" fg:x="663" fg:w="27"/><text x="54.9079%" y="351.50">k..</text></g><g><title>engine::session::Session::load_entity (27 samples, 2.23%)</title><rect x="54.6579%" y="325" width="2.2259%" height="15" fill="rgb(219,77,48)" fg:x="663" fg:w="27"/><text x="54.9079%" y="335.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (26 samples, 2.14%)</title><rect x="54.7403%" y="309" width="2.1434%" height="15" fill="rgb(246,6,15)" fg:x="664" fg:w="26"/><text x="54.9903%" y="319.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.66%)</title><rect x="56.2242%" y="293" width="0.6595%" height="15" fill="rgb(207,220,2)" fg:x="682" fg:w="8"/><text x="56.4742%" y="303.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.66%)</title><rect x="56.2242%" y="277" width="0.6595%" height="15" fill="rgb(242,48,14)" fg:x="682" fg:w="8"/><text x="56.4742%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.66%)</title><rect x="56.2242%" y="261" width="0.6595%" height="15" fill="rgb(218,19,27)" fg:x="682" fg:w="8"/><text x="56.4742%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.66%)</title><rect x="56.2242%" y="245" width="0.6595%" height="15" fill="rgb(228,0,35)" fg:x="682" fg:w="8"/><text x="56.4742%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8013%" y="229" width="0.0824%" height="15" fill="rgb(244,142,54)" fg:x="689" fg:w="1"/><text x="57.0513%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8013%" y="213" width="0.0824%" height="15" fill="rgb(243,217,40)" fg:x="689" fg:w="1"/><text x="57.0513%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="56.8013%" y="197" width="0.0824%" height="15" fill="rgb(207,114,16)" fg:x="689" fg:w="1"/><text x="57.0513%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.9662%" y="293" width="0.0824%" height="15" fill="rgb(224,33,25)" fg:x="691" fg:w="1"/><text x="57.2162%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.9662%" y="277" width="0.0824%" height="15" fill="rgb(230,93,54)" fg:x="691" fg:w="1"/><text x="57.2162%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9662%" y="261" width="0.0824%" height="15" fill="rgb(224,56,24)" fg:x="691" fg:w="1"/><text x="57.2162%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9662%" y="245" width="0.0824%" height="15" fill="rgb(235,189,50)" fg:x="691" fg:w="1"/><text x="57.2162%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.9662%" y="229" width="0.0824%" height="15" fill="rgb(242,173,8)" fg:x="691" fg:w="1"/><text x="57.2162%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.9662%" y="213" width="0.0824%" height="15" fill="rgb(209,206,10)" fg:x="691" fg:w="1"/><text x="57.2162%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.9662%" y="197" width="0.0824%" height="15" fill="rgb(213,182,44)" fg:x="691" fg:w="1"/><text x="57.2162%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9662%" y="181" width="0.0824%" height="15" fill="rgb(243,51,15)" fg:x="691" fg:w="1"/><text x="57.2162%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.9662%" y="165" width="0.0824%" height="15" fill="rgb(241,13,14)" fg:x="691" fg:w="1"/><text x="57.2162%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.9662%" y="149" width="0.0824%" height="15" fill="rgb(239,147,24)" fg:x="691" fg:w="1"/><text x="57.2162%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.9662%" y="133" width="0.0824%" height="15" fill="rgb(223,129,16)" fg:x="691" fg:w="1"/><text x="57.2162%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.9662%" y="117" width="0.0824%" height="15" fill="rgb(209,169,13)" fg:x="691" fg:w="1"/><text x="57.2162%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.9662%" y="101" width="0.0824%" height="15" fill="rgb(235,159,41)" fg:x="691" fg:w="1"/><text x="57.2162%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9662%" y="85" width="0.0824%" height="15" fill="rgb(223,219,48)" fg:x="691" fg:w="1"/><text x="57.2162%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="56.8838%" y="341" width="0.3298%" height="15" fill="rgb(236,80,13)" fg:x="690" fg:w="4"/><text x="57.1338%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.33%)</title><rect x="56.8838%" y="325" width="0.3298%" height="15" fill="rgb(213,5,6)" fg:x="690" fg:w="4"/><text x="57.1338%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="56.9662%" y="309" width="0.2473%" height="15" fill="rgb(205,59,21)" fg:x="691" fg:w="3"/><text x="57.2162%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.0486%" y="293" width="0.1649%" height="15" fill="rgb(247,137,35)" fg:x="692" fg:w="2"/><text x="57.2986%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.0486%" y="277" width="0.1649%" height="15" fill="rgb(242,208,28)" fg:x="692" fg:w="2"/><text x="57.2986%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.0486%" y="261" width="0.1649%" height="15" fill="rgb(245,62,25)" fg:x="692" fg:w="2"/><text x="57.2986%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.0486%" y="245" width="0.1649%" height="15" fill="rgb(233,99,54)" fg:x="692" fg:w="2"/><text x="57.2986%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.0486%" y="229" width="0.1649%" height="15" fill="rgb(213,10,37)" fg:x="692" fg:w="2"/><text x="57.2986%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.0486%" y="213" width="0.1649%" height="15" fill="rgb(235,143,30)" fg:x="692" fg:w="2"/><text x="57.2986%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.0486%" y="197" width="0.1649%" height="15" fill="rgb(250,146,33)" fg:x="692" fg:w="2"/><text x="57.2986%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.0486%" y="181" width="0.1649%" height="15" fill="rgb(226,198,42)" fg:x="692" fg:w="2"/><text x="57.2986%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.1311%" y="165" width="0.0824%" height="15" fill="rgb(222,55,6)" fg:x="693" fg:w="1"/><text x="57.3811%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.1311%" y="149" width="0.0824%" height="15" fill="rgb(213,224,31)" fg:x="693" fg:w="1"/><text x="57.3811%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.1311%" y="133" width="0.0824%" height="15" fill="rgb(226,103,35)" fg:x="693" fg:w="1"/><text x="57.3811%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1311%" y="117" width="0.0824%" height="15" fill="rgb(205,66,45)" fg:x="693" fg:w="1"/><text x="57.3811%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="57.2135%" y="341" width="0.0824%" height="15" fill="rgb(226,51,42)" fg:x="694" fg:w="1"/><text x="57.4635%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.2135%" y="325" width="0.0824%" height="15" fill="rgb(206,69,1)" fg:x="694" fg:w="1"/><text x="57.4635%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2960%" y="213" width="0.0824%" height="15" fill="rgb(213,228,47)" fg:x="695" fg:w="1"/><text x="57.5460%" y="223.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (2 samples, 0.16%)</title><rect x="57.2960%" y="261" width="0.1649%" height="15" fill="rgb(224,204,18)" fg:x="695" fg:w="2"/><text x="57.5460%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.2960%" y="245" width="0.1649%" height="15" fill="rgb(253,187,47)" fg:x="695" fg:w="2"/><text x="57.5460%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.2960%" y="229" width="0.1649%" height="15" fill="rgb(232,61,2)" fg:x="695" fg:w="2"/><text x="57.5460%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.3784%" y="213" width="0.0824%" height="15" fill="rgb(213,132,35)" fg:x="696" fg:w="1"/><text x="57.6284%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.3784%" y="197" width="0.0824%" height="15" fill="rgb(247,33,21)" fg:x="696" fg:w="1"/><text x="57.6284%" y="207.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (8 samples, 0.66%)</title><rect x="56.8838%" y="357" width="0.6595%" height="15" fill="rgb(233,71,46)" fg:x="690" fg:w="8"/><text x="57.1338%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="57.2960%" y="341" width="0.2473%" height="15" fill="rgb(222,173,43)" fg:x="695" fg:w="3"/><text x="57.5460%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="57.2960%" y="325" width="0.2473%" height="15" fill="rgb(249,218,47)" fg:x="695" fg:w="3"/><text x="57.5460%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.25%)</title><rect x="57.2960%" y="309" width="0.2473%" height="15" fill="rgb(254,185,48)" fg:x="695" fg:w="3"/><text x="57.5460%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.25%)</title><rect x="57.2960%" y="293" width="0.2473%" height="15" fill="rgb(252,165,50)" fg:x="695" fg:w="3"/><text x="57.5460%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.25%)</title><rect x="57.2960%" y="277" width="0.2473%" height="15" fill="rgb(206,219,6)" fg:x="695" fg:w="3"/><text x="57.5460%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.4608%" y="261" width="0.0824%" height="15" fill="rgb(212,212,45)" fg:x="697" fg:w="1"/><text x="57.7108%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.4608%" y="245" width="0.0824%" height="15" fill="rgb(221,31,9)" fg:x="697" fg:w="1"/><text x="57.7108%" y="255.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (1 samples, 0.08%)</title><rect x="57.6257%" y="309" width="0.0824%" height="15" fill="rgb(234,198,39)" fg:x="699" fg:w="1"/><text x="57.8757%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="57.6257%" y="293" width="0.0824%" height="15" fill="rgb(252,145,46)" fg:x="699" fg:w="1"/><text x="57.8757%" y="303.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.25%)</title><rect x="57.5433%" y="357" width="0.2473%" height="15" fill="rgb(237,149,0)" fg:x="698" fg:w="3"/><text x="57.7933%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="57.6257%" y="341" width="0.1649%" height="15" fill="rgb(229,65,5)" fg:x="699" fg:w="2"/><text x="57.8757%" y="351.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (2 samples, 0.16%)</title><rect x="57.6257%" y="325" width="0.1649%" height="15" fill="rgb(235,60,36)" fg:x="699" fg:w="2"/><text x="57.8757%" y="335.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="57.7082%" y="309" width="0.0824%" height="15" fill="rgb(222,47,18)" fg:x="700" fg:w="1"/><text x="57.9582%" y="319.50"></text></g><g><title>plugins_core::tools::occupied_by (12 samples, 0.99%)</title><rect x="56.8838%" y="373" width="0.9893%" height="15" fill="rgb(235,114,22)" fg:x="690" fg:w="12"/><text x="57.1338%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="57.7906%" y="357" width="0.0824%" height="15" fill="rgb(209,167,11)" fg:x="701" fg:w="1"/><text x="58.0406%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.7906%" y="341" width="0.0824%" height="15" fill="rgb(251,73,18)" fg:x="701" fg:w="1"/><text x="58.0406%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.7906%" y="325" width="0.0824%" height="15" fill="rgb(217,60,17)" fg:x="701" fg:w="1"/><text x="58.0406%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.9555%" y="341" width="0.0824%" height="15" fill="rgb(224,36,37)" fg:x="703" fg:w="1"/><text x="58.2055%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (52 samples, 4.29%)</title><rect x="53.8335%" y="389" width="4.2869%" height="15" fill="rgb(211,21,32)" fg:x="653" fg:w="52"/><text x="54.0835%" y="399.50">plugi..</text></g><g><title>plugins_core::tools::worn_by (3 samples, 0.25%)</title><rect x="57.8730%" y="373" width="0.2473%" height="15" fill="rgb(231,55,48)" fg:x="702" fg:w="3"/><text x="58.1230%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="57.9555%" y="357" width="0.1649%" height="15" fill="rgb(227,42,18)" fg:x="703" fg:w="2"/><text x="58.2055%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.0379%" y="341" width="0.0824%" height="15" fill="rgb(217,2,27)" fg:x="704" fg:w="1"/><text x="58.2879%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.0379%" y="325" width="0.0824%" height="15" fill="rgb(251,138,23)" fg:x="704" fg:w="1"/><text x="58.2879%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (95 samples, 7.83%)</title><rect x="50.4534%" y="501" width="7.8318%" height="15" fill="rgb(226,184,11)" fg:x="612" fg:w="95"/><text x="50.7034%" y="511.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::apply_middleware (95 samples, 7.83%)</title><rect x="50.4534%" y="485" width="7.8318%" height="15" fill="rgb(242,142,12)" fg:x="612" fg:w="95"/><text x="50.7034%" y="495.50">kernel::plu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (95 samples, 7.83%)</title><rect x="50.4534%" y="469" width="7.8318%" height="15" fill="rgb(234,187,18)" fg:x="612" fg:w="95"/><text x="50.7034%" y="479.50">kernel::plu..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (93 samples, 7.67%)</title><rect x="50.6183%" y="453" width="7.6669%" height="15" fill="rgb(237,44,42)" fg:x="614" fg:w="93"/><text x="50.8683%" y="463.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (57 samples, 4.70%)</title><rect x="53.5862%" y="437" width="4.6991%" height="15" fill="rgb(211,90,23)" fg:x="650" fg:w="57"/><text x="53.8362%" y="447.50">kerne..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (57 samples, 4.70%)</title><rect x="53.5862%" y="421" width="4.6991%" height="15" fill="rgb(207,81,18)" fg:x="650" fg:w="57"/><text x="53.8362%" y="431.50">&lt;plug..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (55 samples, 4.53%)</title><rect x="53.7510%" y="405" width="4.5342%" height="15" fill="rgb(222,107,28)" fg:x="652" fg:w="55"/><text x="54.0010%" y="415.50">plugi..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (2 samples, 0.16%)</title><rect x="58.1204%" y="389" width="0.1649%" height="15" fill="rgb(237,83,52)" fg:x="705" fg:w="2"/><text x="58.3704%" y="399.50"></text></g><g><title>plugins_rune::sources::get_script (1 samples, 0.08%)</title><rect x="58.2028%" y="373" width="0.0824%" height="15" fill="rgb(208,67,11)" fg:x="706" fg:w="1"/><text x="58.4528%" y="383.50"></text></g><g><title>engine::session::Session::captured (108 samples, 8.90%)</title><rect x="49.4641%" y="549" width="8.9035%" height="15" fill="rgb(249,157,49)" fg:x="600" fg:w="108"/><text x="49.7141%" y="559.50">engine::sessi..</text></g><g><title>engine::session::logs::capture (103 samples, 8.49%)</title><rect x="49.8763%" y="533" width="8.4913%" height="15" fill="rgb(243,200,1)" fg:x="605" fg:w="103"/><text x="50.1263%" y="543.50">engine::sess..</text></g><g><title>tracing_core::dispatcher::with_default (97 samples, 8.00%)</title><rect x="50.3710%" y="517" width="7.9967%" height="15" fill="rgb(225,162,37)" fg:x="611" fg:w="97"/><text x="50.6210%" y="527.50">tracing_cor..</text></g><g><title>&lt;kernel::actions::PerformAction as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.2852%" y="501" width="0.0824%" height="15" fill="rgb(242,92,13)" fg:x="707" fg:w="1"/><text x="58.5352%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="58.4501%" y="517" width="0.0824%" height="15" fill="rgb(220,43,36)" fg:x="709" fg:w="1"/><text x="58.7001%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="58.4501%" y="501" width="0.0824%" height="15" fill="rgb(213,165,48)" fg:x="709" fg:w="1"/><text x="58.7001%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.6150%" y="453" width="0.0824%" height="15" fill="rgb(227,200,9)" fg:x="711" fg:w="1"/><text x="58.8650%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6150%" y="437" width="0.0824%" height="15" fill="rgb(221,222,28)" fg:x="711" fg:w="1"/><text x="58.8650%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6150%" y="421" width="0.0824%" height="15" fill="rgb(223,142,26)" fg:x="711" fg:w="1"/><text x="58.8650%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.6150%" y="405" width="0.0824%" height="15" fill="rgb(243,46,9)" fg:x="711" fg:w="1"/><text x="58.8650%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.6150%" y="389" width="0.0824%" height="15" fill="rgb(250,56,11)" fg:x="711" fg:w="1"/><text x="58.8650%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.6150%" y="373" width="0.0824%" height="15" fill="rgb(229,113,5)" fg:x="711" fg:w="1"/><text x="58.8650%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6150%" y="357" width="0.0824%" height="15" fill="rgb(244,108,28)" fg:x="711" fg:w="1"/><text x="58.8650%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6150%" y="341" width="0.0824%" height="15" fill="rgb(242,119,50)" fg:x="711" fg:w="1"/><text x="58.8650%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.6150%" y="325" width="0.0824%" height="15" fill="rgb(224,164,23)" fg:x="711" fg:w="1"/><text x="58.8650%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.6150%" y="309" width="0.0824%" height="15" fill="rgb(214,227,44)" fg:x="711" fg:w="1"/><text x="58.8650%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.6150%" y="293" width="0.0824%" height="15" fill="rgb(238,202,4)" fg:x="711" fg:w="1"/><text x="58.8650%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.6150%" y="277" width="0.0824%" height="15" fill="rgb(213,190,30)" fg:x="711" fg:w="1"/><text x="58.8650%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6150%" y="261" width="0.0824%" height="15" fill="rgb(239,15,2)" fg:x="711" fg:w="1"/><text x="58.8650%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="58.5326%" y="501" width="0.2473%" height="15" fill="rgb(249,229,4)" fg:x="710" fg:w="3"/><text x="58.7826%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="58.5326%" y="485" width="0.2473%" height="15" fill="rgb(239,75,44)" fg:x="710" fg:w="3"/><text x="58.7826%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="58.5326%" y="469" width="0.2473%" height="15" fill="rgb(251,206,23)" fg:x="710" fg:w="3"/><text x="58.7826%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6974%" y="453" width="0.0824%" height="15" fill="rgb(215,208,0)" fg:x="712" fg:w="1"/><text x="58.9474%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6974%" y="437" width="0.0824%" height="15" fill="rgb(230,75,50)" fg:x="712" fg:w="1"/><text x="58.9474%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.6974%" y="421" width="0.0824%" height="15" fill="rgb(246,180,39)" fg:x="712" fg:w="1"/><text x="58.9474%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.6974%" y="405" width="0.0824%" height="15" fill="rgb(249,175,24)" fg:x="712" fg:w="1"/><text x="58.9474%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.6974%" y="389" width="0.0824%" height="15" fill="rgb(247,176,22)" fg:x="712" fg:w="1"/><text x="58.9474%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6974%" y="373" width="0.0824%" height="15" fill="rgb(241,100,24)" fg:x="712" fg:w="1"/><text x="58.9474%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6974%" y="357" width="0.0824%" height="15" fill="rgb(233,4,35)" fg:x="712" fg:w="1"/><text x="58.9474%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.6974%" y="341" width="0.0824%" height="15" fill="rgb(211,164,46)" fg:x="712" fg:w="1"/><text x="58.9474%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.6974%" y="325" width="0.0824%" height="15" fill="rgb(242,99,53)" fg:x="712" fg:w="1"/><text x="58.9474%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.6974%" y="309" width="0.0824%" height="15" fill="rgb(243,45,33)" fg:x="712" fg:w="1"/><text x="58.9474%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.6974%" y="293" width="0.0824%" height="15" fill="rgb(217,55,21)" fg:x="712" fg:w="1"/><text x="58.9474%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6974%" y="277" width="0.0824%" height="15" fill="rgb(245,145,46)" fg:x="712" fg:w="1"/><text x="58.9474%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7799%" y="309" width="0.0824%" height="15" fill="rgb(215,112,45)" fg:x="713" fg:w="1"/><text x="59.0299%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7799%" y="293" width="0.0824%" height="15" fill="rgb(228,104,16)" fg:x="713" fg:w="1"/><text x="59.0299%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="58.7799%" y="357" width="0.1649%" height="15" fill="rgb(239,186,38)" fg:x="713" fg:w="2"/><text x="59.0299%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="58.7799%" y="341" width="0.1649%" height="15" fill="rgb(228,38,35)" fg:x="713" fg:w="2"/><text x="59.0299%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="58.7799%" y="325" width="0.1649%" height="15" fill="rgb(251,42,40)" fg:x="713" fg:w="2"/><text x="59.0299%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="58.8623%" y="309" width="0.0824%" height="15" fill="rgb(210,51,19)" fg:x="714" fg:w="1"/><text x="59.1123%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="58.8623%" y="293" width="0.0824%" height="15" fill="rgb(236,94,42)" fg:x="714" fg:w="1"/><text x="59.1123%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="58.8623%" y="277" width="0.0824%" height="15" fill="rgb(239,167,16)" fg:x="714" fg:w="1"/><text x="59.1123%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="58.7799%" y="405" width="0.2473%" height="15" fill="rgb(252,175,31)" fg:x="713" fg:w="3"/><text x="59.0299%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.25%)</title><rect x="58.7799%" y="389" width="0.2473%" height="15" fill="rgb(206,166,30)" fg:x="713" fg:w="3"/><text x="59.0299%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.25%)</title><rect x="58.7799%" y="373" width="0.2473%" height="15" fill="rgb(206,209,37)" fg:x="713" fg:w="3"/><text x="59.0299%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.9448%" y="357" width="0.0824%" height="15" fill="rgb(226,91,4)" fg:x="715" fg:w="1"/><text x="59.1948%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.9448%" y="341" width="0.0824%" height="15" fill="rgb(222,167,0)" fg:x="715" fg:w="1"/><text x="59.1948%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="58.9448%" y="325" width="0.0824%" height="15" fill="rgb(211,70,14)" fg:x="715" fg:w="1"/><text x="59.1948%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="58.9448%" y="309" width="0.0824%" height="15" fill="rgb(214,84,42)" fg:x="715" fg:w="1"/><text x="59.1948%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="58.9448%" y="293" width="0.0824%" height="15" fill="rgb(235,157,37)" fg:x="715" fg:w="1"/><text x="59.1948%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="58.9448%" y="277" width="0.0824%" height="15" fill="rgb(225,13,6)" fg:x="715" fg:w="1"/><text x="59.1948%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="58.7799%" y="453" width="0.3298%" height="15" fill="rgb(205,202,1)" fg:x="713" fg:w="4"/><text x="59.0299%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.33%)</title><rect x="58.7799%" y="437" width="0.3298%" height="15" fill="rgb(232,195,26)" fg:x="713" fg:w="4"/><text x="59.0299%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.33%)</title><rect x="58.7799%" y="421" width="0.3298%" height="15" fill="rgb(208,102,26)" fg:x="713" fg:w="4"/><text x="59.0299%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.0272%" y="405" width="0.0824%" height="15" fill="rgb(215,41,39)" fg:x="716" fg:w="1"/><text x="59.2772%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0272%" y="389" width="0.0824%" height="15" fill="rgb(247,139,11)" fg:x="716" fg:w="1"/><text x="59.2772%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.0272%" y="373" width="0.0824%" height="15" fill="rgb(243,99,6)" fg:x="716" fg:w="1"/><text x="59.2772%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="58.7799%" y="501" width="0.4122%" height="15" fill="rgb(230,168,48)" fg:x="713" fg:w="5"/><text x="59.0299%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.41%)</title><rect x="58.7799%" y="485" width="0.4122%" height="15" fill="rgb(238,227,13)" fg:x="713" fg:w="5"/><text x="59.0299%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.41%)</title><rect x="58.7799%" y="469" width="0.4122%" height="15" fill="rgb(209,109,13)" fg:x="713" fg:w="5"/><text x="59.0299%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.1096%" y="453" width="0.0824%" height="15" fill="rgb(228,195,1)" fg:x="717" fg:w="1"/><text x="59.3596%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.1096%" y="437" width="0.0824%" height="15" fill="rgb(230,218,0)" fg:x="717" fg:w="1"/><text x="59.3596%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.3570%" y="437" width="0.0824%" height="15" fill="rgb(206,1,45)" fg:x="720" fg:w="1"/><text x="59.6070%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.3570%" y="421" width="0.0824%" height="15" fill="rgb(209,124,26)" fg:x="720" fg:w="1"/><text x="59.6070%" y="431.50"></text></g><g><title>engine::session::internal::Added::find_refs (14 samples, 1.15%)</title><rect x="58.3677%" y="533" width="1.1542%" height="15" fill="rgb(220,59,8)" fg:x="708" fg:w="14"/><text x="58.6177%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (12 samples, 0.99%)</title><rect x="58.5326%" y="517" width="0.9893%" height="15" fill="rgb(251,41,37)" fg:x="710" fg:w="12"/><text x="58.7826%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="59.1921%" y="501" width="0.3298%" height="15" fill="rgb(239,152,21)" fg:x="718" fg:w="4"/><text x="59.4421%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="59.2745%" y="485" width="0.2473%" height="15" fill="rgb(226,32,1)" fg:x="719" fg:w="3"/><text x="59.5245%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="59.3570%" y="469" width="0.1649%" height="15" fill="rgb(230,154,36)" fg:x="720" fg:w="2"/><text x="59.6070%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="59.3570%" y="453" width="0.1649%" height="15" fill="rgb(208,228,43)" fg:x="720" fg:w="2"/><text x="59.6070%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.4394%" y="437" width="0.0824%" height="15" fill="rgb(214,203,3)" fg:x="721" fg:w="1"/><text x="59.6894%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.4394%" y="421" width="0.0824%" height="15" fill="rgb(207,149,29)" fg:x="721" fg:w="1"/><text x="59.6894%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="59.4394%" y="405" width="0.0824%" height="15" fill="rgb(250,105,7)" fg:x="721" fg:w="1"/><text x="59.6894%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.4394%" y="389" width="0.0824%" height="15" fill="rgb(232,222,16)" fg:x="721" fg:w="1"/><text x="59.6894%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.4394%" y="373" width="0.0824%" height="15" fill="rgb(209,32,24)" fg:x="721" fg:w="1"/><text x="59.6894%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.5218%" y="469" width="0.1649%" height="15" fill="rgb(225,13,6)" fg:x="722" fg:w="2"/><text x="59.7718%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.6043%" y="453" width="0.0824%" height="15" fill="rgb(245,226,26)" fg:x="723" fg:w="1"/><text x="59.8543%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6043%" y="437" width="0.0824%" height="15" fill="rgb(229,178,27)" fg:x="723" fg:w="1"/><text x="59.8543%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6043%" y="421" width="0.0824%" height="15" fill="rgb(205,227,28)" fg:x="723" fg:w="1"/><text x="59.8543%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.6043%" y="405" width="0.0824%" height="15" fill="rgb(210,191,45)" fg:x="723" fg:w="1"/><text x="59.8543%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.6043%" y="389" width="0.0824%" height="15" fill="rgb(206,124,16)" fg:x="723" fg:w="1"/><text x="59.8543%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.6043%" y="373" width="0.0824%" height="15" fill="rgb(210,162,0)" fg:x="723" fg:w="1"/><text x="59.8543%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6043%" y="357" width="0.0824%" height="15" fill="rgb(211,54,38)" fg:x="723" fg:w="1"/><text x="59.8543%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6043%" y="341" width="0.0824%" height="15" fill="rgb(248,192,3)" fg:x="723" fg:w="1"/><text x="59.8543%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.6043%" y="325" width="0.0824%" height="15" fill="rgb(233,187,18)" fg:x="723" fg:w="1"/><text x="59.8543%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.6043%" y="309" width="0.0824%" height="15" fill="rgb(237,208,14)" fg:x="723" fg:w="1"/><text x="59.8543%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.6043%" y="293" width="0.0824%" height="15" fill="rgb(212,77,1)" fg:x="723" fg:w="1"/><text x="59.8543%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.6043%" y="277" width="0.0824%" height="15" fill="rgb(210,163,22)" fg:x="723" fg:w="1"/><text x="59.8543%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6043%" y="261" width="0.0824%" height="15" fill="rgb(250,58,28)" fg:x="723" fg:w="1"/><text x="59.8543%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="59.5218%" y="501" width="0.2473%" height="15" fill="rgb(254,28,41)" fg:x="722" fg:w="3"/><text x="59.7718%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="59.5218%" y="485" width="0.2473%" height="15" fill="rgb(237,162,36)" fg:x="722" fg:w="3"/><text x="59.7718%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6867%" y="469" width="0.0824%" height="15" fill="rgb(232,56,6)" fg:x="724" fg:w="1"/><text x="59.9367%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6867%" y="453" width="0.0824%" height="15" fill="rgb(216,127,42)" fg:x="724" fg:w="1"/><text x="59.9367%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.6867%" y="437" width="0.0824%" height="15" fill="rgb(241,69,15)" fg:x="724" fg:w="1"/><text x="59.9367%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.6867%" y="421" width="0.0824%" height="15" fill="rgb(227,180,19)" fg:x="724" fg:w="1"/><text x="59.9367%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.6867%" y="405" width="0.0824%" height="15" fill="rgb(231,188,29)" fg:x="724" fg:w="1"/><text x="59.9367%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.6867%" y="389" width="0.0824%" height="15" fill="rgb(224,176,27)" fg:x="724" fg:w="1"/><text x="59.9367%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.6867%" y="373" width="0.0824%" height="15" fill="rgb(249,214,19)" fg:x="724" fg:w="1"/><text x="59.9367%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="59.5218%" y="517" width="0.3298%" height="15" fill="rgb(240,0,4)" fg:x="722" fg:w="4"/><text x="59.7718%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7692%" y="501" width="0.0824%" height="15" fill="rgb(233,28,41)" fg:x="725" fg:w="1"/><text x="60.0192%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7692%" y="485" width="0.0824%" height="15" fill="rgb(220,90,51)" fg:x="725" fg:w="1"/><text x="60.0192%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.7692%" y="469" width="0.0824%" height="15" fill="rgb(250,52,22)" fg:x="725" fg:w="1"/><text x="60.0192%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.7692%" y="453" width="0.0824%" height="15" fill="rgb(231,152,36)" fg:x="725" fg:w="1"/><text x="60.0192%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.7692%" y="437" width="0.0824%" height="15" fill="rgb(250,218,4)" fg:x="725" fg:w="1"/><text x="60.0192%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.7692%" y="421" width="0.0824%" height="15" fill="rgb(210,38,21)" fg:x="725" fg:w="1"/><text x="60.0192%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.7692%" y="405" width="0.0824%" height="15" fill="rgb(230,75,13)" fg:x="725" fg:w="1"/><text x="60.0192%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.7692%" y="389" width="0.0824%" height="15" fill="rgb(250,68,53)" fg:x="725" fg:w="1"/><text x="60.0192%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.7692%" y="373" width="0.0824%" height="15" fill="rgb(250,210,16)" fg:x="725" fg:w="1"/><text x="60.0192%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.7692%" y="357" width="0.0824%" height="15" fill="rgb(240,132,5)" fg:x="725" fg:w="1"/><text x="60.0192%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.7692%" y="341" width="0.0824%" height="15" fill="rgb(222,148,48)" fg:x="725" fg:w="1"/><text x="60.0192%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7692%" y="325" width="0.0824%" height="15" fill="rgb(247,181,24)" fg:x="725" fg:w="1"/><text x="60.0192%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="59.8516%" y="501" width="0.0824%" height="15" fill="rgb(239,5,31)" fg:x="726" fg:w="1"/><text x="60.1016%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.8516%" y="485" width="0.0824%" height="15" fill="rgb(241,152,38)" fg:x="726" fg:w="1"/><text x="60.1016%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="59.8516%" y="517" width="0.1649%" height="15" fill="rgb(246,200,37)" fg:x="726" fg:w="2"/><text x="60.1016%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.9340%" y="501" width="0.0824%" height="15" fill="rgb(243,210,26)" fg:x="727" fg:w="1"/><text x="60.1840%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="60.0165%" y="517" width="0.1649%" height="15" fill="rgb(222,22,22)" fg:x="728" fg:w="2"/><text x="60.2665%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.0989%" y="501" width="0.0824%" height="15" fill="rgb(208,129,28)" fg:x="729" fg:w="1"/><text x="60.3489%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.2638%" y="469" width="0.0824%" height="15" fill="rgb(254,169,28)" fg:x="731" fg:w="1"/><text x="60.5138%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="60.5111%" y="357" width="0.0824%" height="15" fill="rgb(225,45,17)" fg:x="734" fg:w="1"/><text x="60.7611%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.5111%" y="341" width="0.0824%" height="15" fill="rgb(232,199,2)" fg:x="734" fg:w="1"/><text x="60.7611%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.5111%" y="389" width="0.1649%" height="15" fill="rgb(235,33,40)" fg:x="734" fg:w="2"/><text x="60.7611%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.5111%" y="373" width="0.1649%" height="15" fill="rgb(237,89,50)" fg:x="734" fg:w="2"/><text x="60.7611%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.5936%" y="357" width="0.0824%" height="15" fill="rgb(238,126,5)" fg:x="735" fg:w="1"/><text x="60.8436%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="60.6760%" y="389" width="0.1649%" height="15" fill="rgb(247,214,42)" fg:x="736" fg:w="2"/><text x="60.9260%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.6760%" y="373" width="0.1649%" height="15" fill="rgb(238,60,45)" fg:x="736" fg:w="2"/><text x="60.9260%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.6760%" y="357" width="0.1649%" height="15" fill="rgb(225,69,44)" fg:x="736" fg:w="2"/><text x="60.9260%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.6760%" y="341" width="0.1649%" height="15" fill="rgb(241,13,44)" fg:x="736" fg:w="2"/><text x="60.9260%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="60.6760%" y="325" width="0.1649%" height="15" fill="rgb(227,121,22)" fg:x="736" fg:w="2"/><text x="60.9260%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="60.7585%" y="309" width="0.0824%" height="15" fill="rgb(231,160,23)" fg:x="737" fg:w="1"/><text x="61.0085%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="60.5111%" y="421" width="0.4122%" height="15" fill="rgb(250,179,43)" fg:x="734" fg:w="5"/><text x="60.7611%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="60.5111%" y="405" width="0.4122%" height="15" fill="rgb(233,54,46)" fg:x="734" fg:w="5"/><text x="60.7611%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8409%" y="389" width="0.0824%" height="15" fill="rgb(247,120,42)" fg:x="738" fg:w="1"/><text x="61.0909%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8409%" y="373" width="0.0824%" height="15" fill="rgb(221,219,12)" fg:x="738" fg:w="1"/><text x="61.0909%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.66%)</title><rect x="60.3462%" y="469" width="0.6595%" height="15" fill="rgb(211,126,8)" fg:x="732" fg:w="8"/><text x="60.5962%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.66%)</title><rect x="60.3462%" y="453" width="0.6595%" height="15" fill="rgb(218,154,33)" fg:x="732" fg:w="8"/><text x="60.5962%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.58%)</title><rect x="60.4287%" y="437" width="0.5771%" height="15" fill="rgb(212,199,16)" fg:x="733" fg:w="7"/><text x="60.6787%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9233%" y="421" width="0.0824%" height="15" fill="rgb(236,215,46)" fg:x="739" fg:w="1"/><text x="61.1733%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.9233%" y="405" width="0.0824%" height="15" fill="rgb(232,32,22)" fg:x="739" fg:w="1"/><text x="61.1733%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.9233%" y="389" width="0.0824%" height="15" fill="rgb(234,79,15)" fg:x="739" fg:w="1"/><text x="61.1733%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.9233%" y="373" width="0.0824%" height="15" fill="rgb(235,187,47)" fg:x="739" fg:w="1"/><text x="61.1733%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.9233%" y="357" width="0.0824%" height="15" fill="rgb(244,69,37)" fg:x="739" fg:w="1"/><text x="61.1733%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9233%" y="341" width="0.0824%" height="15" fill="rgb(249,140,25)" fg:x="739" fg:w="1"/><text x="61.1733%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.9233%" y="325" width="0.0824%" height="15" fill="rgb(213,69,8)" fg:x="739" fg:w="1"/><text x="61.1733%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.9233%" y="309" width="0.0824%" height="15" fill="rgb(220,136,2)" fg:x="739" fg:w="1"/><text x="61.1733%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.9233%" y="293" width="0.0824%" height="15" fill="rgb(237,50,36)" fg:x="739" fg:w="1"/><text x="61.1733%" y="303.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.91%)</title><rect x="60.1814%" y="517" width="0.9068%" height="15" fill="rgb(226,18,11)" fg:x="730" fg:w="11"/><text x="60.4314%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.91%)</title><rect x="60.1814%" y="501" width="0.9068%" height="15" fill="rgb(243,156,2)" fg:x="730" fg:w="11"/><text x="60.4314%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.91%)</title><rect x="60.1814%" y="485" width="0.9068%" height="15" fill="rgb(218,8,34)" fg:x="730" fg:w="11"/><text x="60.4314%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.0058%" y="469" width="0.0824%" height="15" fill="rgb(250,94,35)" fg:x="740" fg:w="1"/><text x="61.2558%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.0058%" y="453" width="0.0824%" height="15" fill="rgb(229,127,21)" fg:x="740" fg:w="1"/><text x="61.2558%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.0058%" y="437" width="0.0824%" height="15" fill="rgb(234,49,5)" fg:x="740" fg:w="1"/><text x="61.2558%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.0058%" y="421" width="0.0824%" height="15" fill="rgb(248,12,16)" fg:x="740" fg:w="1"/><text x="61.2558%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.2531%" y="389" width="0.1649%" height="15" fill="rgb(208,220,31)" fg:x="743" fg:w="2"/><text x="61.5031%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.2531%" y="373" width="0.1649%" height="15" fill="rgb(243,184,0)" fg:x="743" fg:w="2"/><text x="61.5031%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (39 samples, 3.22%)</title><rect x="58.3677%" y="549" width="3.2152%" height="15" fill="rgb(217,38,21)" fg:x="708" fg:w="39"/><text x="58.6177%" y="559.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 2.06%)</title><rect x="59.5218%" y="533" width="2.0610%" height="15" fill="rgb(239,120,45)" fg:x="722" fg:w="25"/><text x="59.7718%" y="543.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.49%)</title><rect x="61.0882%" y="517" width="0.4946%" height="15" fill="rgb(235,33,2)" fg:x="741" fg:w="6"/><text x="61.3382%" y="527.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.49%)</title><rect x="61.0882%" y="501" width="0.4946%" height="15" fill="rgb(249,161,5)" fg:x="741" fg:w="6"/><text x="61.3382%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="61.0882%" y="485" width="0.4946%" height="15" fill="rgb(250,165,48)" fg:x="741" fg:w="6"/><text x="61.3382%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="61.0882%" y="469" width="0.4946%" height="15" fill="rgb(221,23,45)" fg:x="741" fg:w="6"/><text x="61.3382%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="61.0882%" y="453" width="0.4946%" height="15" fill="rgb(217,108,46)" fg:x="741" fg:w="6"/><text x="61.3382%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="61.0882%" y="437" width="0.4946%" height="15" fill="rgb(254,26,35)" fg:x="741" fg:w="6"/><text x="61.3382%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="61.1707%" y="421" width="0.4122%" height="15" fill="rgb(218,223,28)" fg:x="742" fg:w="5"/><text x="61.4207%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="61.1707%" y="405" width="0.4122%" height="15" fill="rgb(242,27,47)" fg:x="742" fg:w="5"/><text x="61.4207%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.4180%" y="389" width="0.1649%" height="15" fill="rgb(218,39,35)" fg:x="745" fg:w="2"/><text x="61.6680%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.4180%" y="373" width="0.1649%" height="15" fill="rgb(232,127,16)" fg:x="745" fg:w="2"/><text x="61.6680%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5004%" y="357" width="0.0824%" height="15" fill="rgb(231,219,51)" fg:x="746" fg:w="1"/><text x="61.7504%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7477%" y="453" width="0.0824%" height="15" fill="rgb(217,220,46)" fg:x="749" fg:w="1"/><text x="61.9977%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="61.7477%" y="469" width="0.2473%" height="15" fill="rgb(230,75,1)" fg:x="749" fg:w="3"/><text x="61.9977%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.8302%" y="453" width="0.1649%" height="15" fill="rgb(218,2,8)" fg:x="750" fg:w="2"/><text x="62.0802%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9126%" y="437" width="0.0824%" height="15" fill="rgb(206,111,30)" fg:x="751" fg:w="1"/><text x="62.1626%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9126%" y="421" width="0.0824%" height="15" fill="rgb(209,135,6)" fg:x="751" fg:w="1"/><text x="62.1626%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9126%" y="405" width="0.0824%" height="15" fill="rgb(205,169,10)" fg:x="751" fg:w="1"/><text x="62.1626%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9126%" y="389" width="0.0824%" height="15" fill="rgb(212,204,38)" fg:x="751" fg:w="1"/><text x="62.1626%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9126%" y="373" width="0.0824%" height="15" fill="rgb(205,199,14)" fg:x="751" fg:w="1"/><text x="62.1626%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9126%" y="357" width="0.0824%" height="15" fill="rgb(212,4,6)" fg:x="751" fg:w="1"/><text x="62.1626%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.9126%" y="341" width="0.0824%" height="15" fill="rgb(250,15,10)" fg:x="751" fg:w="1"/><text x="62.1626%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.9126%" y="325" width="0.0824%" height="15" fill="rgb(212,49,51)" fg:x="751" fg:w="1"/><text x="62.1626%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.9126%" y="309" width="0.0824%" height="15" fill="rgb(235,21,9)" fg:x="751" fg:w="1"/><text x="62.1626%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.9126%" y="293" width="0.0824%" height="15" fill="rgb(251,31,32)" fg:x="751" fg:w="1"/><text x="62.1626%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9126%" y="277" width="0.0824%" height="15" fill="rgb(246,23,9)" fg:x="751" fg:w="1"/><text x="62.1626%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="61.6653%" y="501" width="0.4122%" height="15" fill="rgb(225,216,14)" fg:x="748" fg:w="5"/><text x="61.9153%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="61.6653%" y="485" width="0.4122%" height="15" fill="rgb(215,200,26)" fg:x="748" fg:w="5"/><text x="61.9153%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9951%" y="469" width="0.0824%" height="15" fill="rgb(237,130,47)" fg:x="752" fg:w="1"/><text x="62.2451%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="62.0775%" y="501" width="0.1649%" height="15" fill="rgb(247,74,14)" fg:x="753" fg:w="2"/><text x="62.3275%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.0775%" y="485" width="0.1649%" height="15" fill="rgb(254,97,46)" fg:x="753" fg:w="2"/><text x="62.3275%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.0775%" y="469" width="0.1649%" height="15" fill="rgb(234,191,1)" fg:x="753" fg:w="2"/><text x="62.3275%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="62.0775%" y="453" width="0.1649%" height="15" fill="rgb(215,165,14)" fg:x="753" fg:w="2"/><text x="62.3275%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.0775%" y="437" width="0.1649%" height="15" fill="rgb(230,182,6)" fg:x="753" fg:w="2"/><text x="62.3275%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.1599%" y="421" width="0.0824%" height="15" fill="rgb(210,127,39)" fg:x="754" fg:w="1"/><text x="62.4099%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1599%" y="405" width="0.0824%" height="15" fill="rgb(223,212,51)" fg:x="754" fg:w="1"/><text x="62.4099%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="62.2424%" y="501" width="0.0824%" height="15" fill="rgb(226,176,43)" fg:x="755" fg:w="1"/><text x="62.4924%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.2424%" y="485" width="0.0824%" height="15" fill="rgb(222,155,4)" fg:x="755" fg:w="1"/><text x="62.4924%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="62.2424%" y="469" width="0.0824%" height="15" fill="rgb(215,149,7)" fg:x="755" fg:w="1"/><text x="62.4924%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2424%" y="453" width="0.0824%" height="15" fill="rgb(252,199,23)" fg:x="755" fg:w="1"/><text x="62.4924%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="62.3248%" y="405" width="0.1649%" height="15" fill="rgb(245,52,29)" fg:x="756" fg:w="2"/><text x="62.5748%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.3248%" y="389" width="0.1649%" height="15" fill="rgb(221,228,19)" fg:x="756" fg:w="2"/><text x="62.5748%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.4073%" y="373" width="0.0824%" height="15" fill="rgb(253,101,6)" fg:x="757" fg:w="1"/><text x="62.6573%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.4073%" y="357" width="0.0824%" height="15" fill="rgb(211,130,8)" fg:x="757" fg:w="1"/><text x="62.6573%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.4073%" y="341" width="0.0824%" height="15" fill="rgb(238,37,53)" fg:x="757" fg:w="1"/><text x="62.6573%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.4073%" y="325" width="0.0824%" height="15" fill="rgb(235,145,5)" fg:x="757" fg:w="1"/><text x="62.6573%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.4073%" y="309" width="0.0824%" height="15" fill="rgb(244,12,43)" fg:x="757" fg:w="1"/><text x="62.6573%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.4073%" y="293" width="0.0824%" height="15" fill="rgb(246,195,24)" fg:x="757" fg:w="1"/><text x="62.6573%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.4073%" y="277" width="0.0824%" height="15" fill="rgb(235,163,6)" fg:x="757" fg:w="1"/><text x="62.6573%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.4073%" y="261" width="0.0824%" height="15" fill="rgb(236,218,17)" fg:x="757" fg:w="1"/><text x="62.6573%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4897%" y="357" width="0.0824%" height="15" fill="rgb(235,12,38)" fg:x="758" fg:w="1"/><text x="62.7397%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.33%)</title><rect x="62.4897%" y="405" width="0.3298%" height="15" fill="rgb(225,195,33)" fg:x="758" fg:w="4"/><text x="62.7397%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.33%)</title><rect x="62.4897%" y="389" width="0.3298%" height="15" fill="rgb(238,54,35)" fg:x="758" fg:w="4"/><text x="62.7397%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.33%)</title><rect x="62.4897%" y="373" width="0.3298%" height="15" fill="rgb(238,33,7)" fg:x="758" fg:w="4"/><text x="62.7397%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.25%)</title><rect x="62.5721%" y="357" width="0.2473%" height="15" fill="rgb(245,5,14)" fg:x="759" fg:w="3"/><text x="62.8221%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.82%)</title><rect x="62.3248%" y="501" width="0.8244%" height="15" fill="rgb(251,95,31)" fg:x="756" fg:w="10"/><text x="62.5748%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.82%)</title><rect x="62.3248%" y="485" width="0.8244%" height="15" fill="rgb(222,15,46)" fg:x="756" fg:w="10"/><text x="62.5748%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.82%)</title><rect x="62.3248%" y="469" width="0.8244%" height="15" fill="rgb(226,182,24)" fg:x="756" fg:w="10"/><text x="62.5748%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.82%)</title><rect x="62.3248%" y="453" width="0.8244%" height="15" fill="rgb(229,105,41)" fg:x="756" fg:w="10"/><text x="62.5748%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.82%)</title><rect x="62.3248%" y="437" width="0.8244%" height="15" fill="rgb(216,99,53)" fg:x="756" fg:w="10"/><text x="62.5748%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.82%)</title><rect x="62.3248%" y="421" width="0.8244%" height="15" fill="rgb(253,26,20)" fg:x="756" fg:w="10"/><text x="62.5748%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="62.8195%" y="405" width="0.3298%" height="15" fill="rgb(249,155,28)" fg:x="762" fg:w="4"/><text x="63.0695%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="62.8195%" y="389" width="0.3298%" height="15" fill="rgb(241,221,2)" fg:x="762" fg:w="4"/><text x="63.0695%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.0668%" y="373" width="0.0824%" height="15" fill="rgb(219,124,6)" fg:x="765" fg:w="1"/><text x="63.3168%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0668%" y="357" width="0.0824%" height="15" fill="rgb(233,37,6)" fg:x="765" fg:w="1"/><text x="63.3168%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0668%" y="341" width="0.0824%" height="15" fill="rgb(238,20,14)" fg:x="765" fg:w="1"/><text x="63.3168%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.0668%" y="325" width="0.0824%" height="15" fill="rgb(232,106,27)" fg:x="765" fg:w="1"/><text x="63.3168%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0668%" y="309" width="0.0824%" height="15" fill="rgb(246,157,24)" fg:x="765" fg:w="1"/><text x="63.3168%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0668%" y="293" width="0.0824%" height="15" fill="rgb(214,153,10)" fg:x="765" fg:w="1"/><text x="63.3168%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.0668%" y="277" width="0.0824%" height="15" fill="rgb(212,94,6)" fg:x="765" fg:w="1"/><text x="63.3168%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.1492%" y="389" width="0.0824%" height="15" fill="rgb(254,25,27)" fg:x="766" fg:w="1"/><text x="63.3992%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="63.2317%" y="389" width="0.3298%" height="15" fill="rgb(250,43,52)" fg:x="767" fg:w="4"/><text x="63.4817%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="63.3141%" y="373" width="0.2473%" height="15" fill="rgb(221,226,40)" fg:x="768" fg:w="3"/><text x="63.5641%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.3965%" y="357" width="0.1649%" height="15" fill="rgb(235,162,34)" fg:x="769" fg:w="2"/><text x="63.6465%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.4790%" y="341" width="0.0824%" height="15" fill="rgb(239,24,26)" fg:x="770" fg:w="1"/><text x="63.7290%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.4790%" y="325" width="0.0824%" height="15" fill="rgb(244,226,11)" fg:x="770" fg:w="1"/><text x="63.7290%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4790%" y="309" width="0.0824%" height="15" fill="rgb(225,23,10)" fg:x="770" fg:w="1"/><text x="63.7290%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4790%" y="293" width="0.0824%" height="15" fill="rgb(249,125,6)" fg:x="770" fg:w="1"/><text x="63.7290%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4790%" y="277" width="0.0824%" height="15" fill="rgb(246,212,12)" fg:x="770" fg:w="1"/><text x="63.7290%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="63.1492%" y="437" width="0.4946%" height="15" fill="rgb(230,43,32)" fg:x="766" fg:w="6"/><text x="63.3992%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="63.1492%" y="421" width="0.4946%" height="15" fill="rgb(210,95,23)" fg:x="766" fg:w="6"/><text x="63.3992%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="63.1492%" y="405" width="0.4946%" height="15" fill="rgb(229,103,33)" fg:x="766" fg:w="6"/><text x="63.3992%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5614%" y="389" width="0.0824%" height="15" fill="rgb(222,104,27)" fg:x="771" fg:w="1"/><text x="63.8114%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.6439%" y="437" width="0.0824%" height="15" fill="rgb(239,221,23)" fg:x="772" fg:w="1"/><text x="63.8939%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.6439%" y="421" width="0.0824%" height="15" fill="rgb(222,98,21)" fg:x="772" fg:w="1"/><text x="63.8939%" y="431.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (183 samples, 15.09%)</title><rect x="48.7222%" y="581" width="15.0866%" height="15" fill="rgb(231,101,20)" fg:x="591" fg:w="183"/><text x="48.9722%" y="591.50">engine::session::Sessio..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (183 samples, 15.09%)</title><rect x="48.7222%" y="565" width="15.0866%" height="15" fill="rgb(215,150,22)" fg:x="591" fg:w="183"/><text x="48.9722%" y="575.50">engine::session::Sessio..</text></g><g><title>kernel::model::EntityPtrResolver::world (27 samples, 2.23%)</title><rect x="61.5829%" y="549" width="2.2259%" height="15" fill="rgb(248,3,34)" fg:x="747" fg:w="27"/><text x="61.8329%" y="559.50">k..</text></g><g><title>engine::session::Session::load_entity (27 samples, 2.23%)</title><rect x="61.5829%" y="533" width="2.2259%" height="15" fill="rgb(220,141,21)" fg:x="747" fg:w="27"/><text x="61.8329%" y="543.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.23%)</title><rect x="61.5829%" y="517" width="2.2259%" height="15" fill="rgb(223,41,48)" fg:x="747" fg:w="27"/><text x="61.8329%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.66%)</title><rect x="63.1492%" y="501" width="0.6595%" height="15" fill="rgb(247,12,5)" fg:x="766" fg:w="8"/><text x="63.3992%" y="511.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.66%)</title><rect x="63.1492%" y="485" width="0.6595%" height="15" fill="rgb(206,173,10)" fg:x="766" fg:w="8"/><text x="63.3992%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.66%)</title><rect x="63.1492%" y="469" width="0.6595%" height="15" fill="rgb(233,214,37)" fg:x="766" fg:w="8"/><text x="63.3992%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.66%)</title><rect x="63.1492%" y="453" width="0.6595%" height="15" fill="rgb(238,86,43)" fg:x="766" fg:w="8"/><text x="63.3992%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7263%" y="437" width="0.0824%" height="15" fill="rgb(212,182,8)" fg:x="773" fg:w="1"/><text x="63.9763%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7263%" y="421" width="0.0824%" height="15" fill="rgb(240,91,47)" fg:x="773" fg:w="1"/><text x="63.9763%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="63.7263%" y="405" width="0.0824%" height="15" fill="rgb(209,138,26)" fg:x="773" fg:w="1"/><text x="63.9763%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (775 samples, 63.89%)</title><rect x="0.0000%" y="629" width="63.8912%" height="15" fill="rgb(231,163,20)" fg:x="0" fg:w="775"/><text x="0.2500%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (775 samples, 63.89%)</title><rect x="0.0000%" y="613" width="63.8912%" height="15" fill="rgb(214,91,54)" fg:x="0" fg:w="775"/><text x="0.2500%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (775 samples, 63.89%)</title><rect x="0.0000%" y="597" width="63.8912%" height="15" fill="rgb(230,32,17)" fg:x="0" fg:w="775"/><text x="0.2500%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="63.8087%" y="581" width="0.0824%" height="15" fill="rgb(231,34,34)" fg:x="774" fg:w="1"/><text x="64.0587%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="63.8087%" y="565" width="0.0824%" height="15" fill="rgb(224,228,27)" fg:x="774" fg:w="1"/><text x="64.0587%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.8087%" y="549" width="0.0824%" height="15" fill="rgb(219,35,40)" fg:x="774" fg:w="1"/><text x="64.0587%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="63.8087%" y="533" width="0.0824%" height="15" fill="rgb(234,42,8)" fg:x="774" fg:w="1"/><text x="64.0587%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.8912%" y="501" width="0.0824%" height="15" fill="rgb(226,75,22)" fg:x="775" fg:w="1"/><text x="64.1412%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="63.8912%" y="565" width="0.1649%" height="15" fill="rgb(242,203,28)" fg:x="775" fg:w="2"/><text x="64.1412%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="63.8912%" y="549" width="0.1649%" height="15" fill="rgb(221,3,9)" fg:x="775" fg:w="2"/><text x="64.1412%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="63.8912%" y="533" width="0.1649%" height="15" fill="rgb(214,34,31)" fg:x="775" fg:w="2"/><text x="64.1412%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.16%)</title><rect x="63.8912%" y="517" width="0.1649%" height="15" fill="rgb(252,119,15)" fg:x="775" fg:w="2"/><text x="64.1412%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="63.9736%" y="501" width="0.0824%" height="15" fill="rgb(244,224,31)" fg:x="776" fg:w="1"/><text x="64.2236%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9736%" y="485" width="0.0824%" height="15" fill="rgb(215,8,51)" fg:x="776" fg:w="1"/><text x="64.2236%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.3034%" y="501" width="0.1649%" height="15" fill="rgb(207,24,1)" fg:x="780" fg:w="2"/><text x="64.5534%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.5507%" y="485" width="0.0824%" height="15" fill="rgb(245,90,0)" fg:x="783" fg:w="1"/><text x="64.8007%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.6331%" y="453" width="0.0824%" height="15" fill="rgb(246,43,48)" fg:x="784" fg:w="1"/><text x="64.8831%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.6331%" y="437" width="0.0824%" height="15" fill="rgb(252,218,10)" fg:x="784" fg:w="1"/><text x="64.8831%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6331%" y="421" width="0.0824%" height="15" fill="rgb(231,24,35)" fg:x="784" fg:w="1"/><text x="64.8831%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.7156%" y="453" width="0.1649%" height="15" fill="rgb(225,66,19)" fg:x="785" fg:w="2"/><text x="64.9656%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.66%)</title><rect x="64.3034%" y="517" width="0.6595%" height="15" fill="rgb(214,96,51)" fg:x="780" fg:w="8"/><text x="64.5534%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="64.4683%" y="501" width="0.4946%" height="15" fill="rgb(251,151,47)" fg:x="782" fg:w="6"/><text x="64.7183%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="64.6331%" y="485" width="0.3298%" height="15" fill="rgb(236,79,14)" fg:x="784" fg:w="4"/><text x="64.8831%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="64.6331%" y="469" width="0.3298%" height="15" fill="rgb(210,205,11)" fg:x="784" fg:w="4"/><text x="64.8831%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.8805%" y="453" width="0.0824%" height="15" fill="rgb(233,142,53)" fg:x="787" fg:w="1"/><text x="65.1305%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.8805%" y="437" width="0.0824%" height="15" fill="rgb(212,116,48)" fg:x="787" fg:w="1"/><text x="65.1305%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.0453%" y="469" width="0.0824%" height="15" fill="rgb(234,55,33)" fg:x="789" fg:w="1"/><text x="65.2953%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.1278%" y="469" width="0.0824%" height="15" fill="rgb(253,92,27)" fg:x="790" fg:w="1"/><text x="65.3778%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.2927%" y="421" width="0.0824%" height="15" fill="rgb(220,7,35)" fg:x="792" fg:w="1"/><text x="65.5427%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.33%)</title><rect x="65.2927%" y="453" width="0.3298%" height="15" fill="rgb(246,124,6)" fg:x="792" fg:w="4"/><text x="65.5427%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.33%)</title><rect x="65.2927%" y="437" width="0.3298%" height="15" fill="rgb(212,111,51)" fg:x="792" fg:w="4"/><text x="65.5427%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="65.3751%" y="421" width="0.2473%" height="15" fill="rgb(253,116,7)" fg:x="793" fg:w="3"/><text x="65.6251%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.5400%" y="405" width="0.0824%" height="15" fill="rgb(213,145,18)" fg:x="795" fg:w="1"/><text x="65.7900%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.5400%" y="389" width="0.0824%" height="15" fill="rgb(219,149,7)" fg:x="795" fg:w="1"/><text x="65.7900%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5400%" y="373" width="0.0824%" height="15" fill="rgb(225,156,20)" fg:x="795" fg:w="1"/><text x="65.7900%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.6224%" y="453" width="0.0824%" height="15" fill="rgb(211,98,19)" fg:x="796" fg:w="1"/><text x="65.8724%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.7049%" y="453" width="0.0824%" height="15" fill="rgb(231,192,31)" fg:x="797" fg:w="1"/><text x="65.9549%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.7049%" y="437" width="0.0824%" height="15" fill="rgb(249,95,19)" fg:x="797" fg:w="1"/><text x="65.9549%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.99%)</title><rect x="64.9629%" y="501" width="0.9893%" height="15" fill="rgb(247,101,36)" fg:x="788" fg:w="12"/><text x="65.2129%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.91%)</title><rect x="65.0453%" y="485" width="0.9068%" height="15" fill="rgb(221,45,43)" fg:x="789" fg:w="11"/><text x="65.2953%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.74%)</title><rect x="65.2102%" y="469" width="0.7420%" height="15" fill="rgb(220,42,1)" fg:x="791" fg:w="9"/><text x="65.4602%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="65.7873%" y="453" width="0.1649%" height="15" fill="rgb(236,19,24)" fg:x="798" fg:w="2"/><text x="66.0373%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8697%" y="437" width="0.0824%" height="15" fill="rgb(225,192,6)" fg:x="799" fg:w="1"/><text x="66.1197%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.07%)</title><rect x="64.9629%" y="517" width="1.0717%" height="15" fill="rgb(242,30,19)" fg:x="788" fg:w="13"/><text x="65.2129%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9522%" y="501" width="0.0824%" height="15" fill="rgb(240,36,6)" fg:x="800" fg:w="1"/><text x="66.2022%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.98%)</title><rect x="64.1385%" y="549" width="1.9786%" height="15" fill="rgb(246,40,28)" fg:x="778" fg:w="24"/><text x="64.3885%" y="559.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (23 samples, 1.90%)</title><rect x="64.2209%" y="533" width="1.8961%" height="15" fill="rgb(225,155,33)" fg:x="779" fg:w="23"/><text x="64.4709%" y="543.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.0346%" y="517" width="0.0824%" height="15" fill="rgb(240,65,18)" fg:x="801" fg:w="1"/><text x="66.2846%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (26 samples, 2.14%)</title><rect x="64.0561%" y="565" width="2.1434%" height="15" fill="rgb(217,0,48)" fg:x="777" fg:w="26"/><text x="64.3061%" y="575.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1171%" y="549" width="0.0824%" height="15" fill="rgb(217,80,15)" fg:x="802" fg:w="1"/><text x="66.3671%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.39%)</title><rect x="63.8912%" y="581" width="2.3908%" height="15" fill="rgb(253,43,51)" fg:x="775" fg:w="29"/><text x="64.1412%" y="591.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="66.1995%" y="565" width="0.0824%" height="15" fill="rgb(246,60,4)" fg:x="803" fg:w="1"/><text x="66.4495%" y="575.50"></text></g><g><title>anyhow::error::&lt;impl core::ops::drop::Drop for anyhow::Error&gt;::drop (1 samples, 0.08%)</title><rect x="66.5293%" y="485" width="0.0824%" height="15" fill="rgb(230,40,54)" fg:x="807" fg:w="1"/><text x="66.7793%" y="495.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="66.6941%" y="469" width="0.0824%" height="15" fill="rgb(208,20,44)" fg:x="809" fg:w="1"/><text x="66.9441%" y="479.50"></text></g><g><title>dlopen (3 samples, 0.25%)</title><rect x="66.7766%" y="469" width="0.2473%" height="15" fill="rgb(230,22,22)" fg:x="810" fg:w="3"/><text x="67.0266%" y="479.50"></text></g><g><title>_dl_catch_error (3 samples, 0.25%)</title><rect x="66.7766%" y="453" width="0.2473%" height="15" fill="rgb(207,57,4)" fg:x="810" fg:w="3"/><text x="67.0266%" y="463.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.25%)</title><rect x="66.7766%" y="437" width="0.2473%" height="15" fill="rgb(242,130,33)" fg:x="810" fg:w="3"/><text x="67.0266%" y="447.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.25%)</title><rect x="66.7766%" y="421" width="0.2473%" height="15" fill="rgb(218,66,43)" fg:x="810" fg:w="3"/><text x="67.0266%" y="431.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.25%)</title><rect x="66.7766%" y="405" width="0.2473%" height="15" fill="rgb(236,105,16)" fg:x="810" fg:w="3"/><text x="67.0266%" y="415.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="66.9415%" y="389" width="0.0824%" height="15" fill="rgb(230,46,15)" fg:x="812" fg:w="1"/><text x="67.1915%" y="399.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="66.9415%" y="373" width="0.0824%" height="15" fill="rgb(251,172,40)" fg:x="812" fg:w="1"/><text x="67.1915%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.74%)</title><rect x="66.4468%" y="501" width="0.7420%" height="15" fill="rgb(225,217,32)" fg:x="806" fg:w="9"/><text x="66.6968%" y="511.50"></text></g><g><title>libloading::os::unix::Library::open (7 samples, 0.58%)</title><rect x="66.6117%" y="485" width="0.5771%" height="15" fill="rgb(243,10,29)" fg:x="808" fg:w="7"/><text x="66.8617%" y="495.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (2 samples, 0.16%)</title><rect x="67.0239%" y="469" width="0.1649%" height="15" fill="rgb(207,102,10)" fg:x="813" fg:w="2"/><text x="67.2739%" y="479.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="67.1063%" y="453" width="0.0824%" height="15" fill="rgb(241,125,5)" fg:x="814" fg:w="1"/><text x="67.3563%" y="463.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="67.1063%" y="437" width="0.0824%" height="15" fill="rgb(230,125,29)" fg:x="814" fg:w="1"/><text x="67.3563%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.4361%" y="437" width="0.0824%" height="15" fill="rgb(223,65,44)" fg:x="818" fg:w="1"/><text x="67.6861%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.4361%" y="421" width="0.0824%" height="15" fill="rgb(224,188,28)" fg:x="818" fg:w="1"/><text x="67.6861%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.4361%" y="405" width="0.0824%" height="15" fill="rgb(254,197,27)" fg:x="818" fg:w="1"/><text x="67.6861%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.4361%" y="389" width="0.0824%" height="15" fill="rgb(220,200,25)" fg:x="818" fg:w="1"/><text x="67.6861%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.4361%" y="373" width="0.0824%" height="15" fill="rgb(239,225,54)" fg:x="818" fg:w="1"/><text x="67.6861%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.4361%" y="357" width="0.0824%" height="15" fill="rgb(211,59,40)" fg:x="818" fg:w="1"/><text x="67.6861%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.4361%" y="341" width="0.0824%" height="15" fill="rgb(213,176,46)" fg:x="818" fg:w="1"/><text x="67.6861%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.4361%" y="325" width="0.0824%" height="15" fill="rgb(226,99,4)" fg:x="818" fg:w="1"/><text x="67.6861%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.4361%" y="309" width="0.0824%" height="15" fill="rgb(239,203,43)" fg:x="818" fg:w="1"/><text x="67.6861%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.4361%" y="293" width="0.0824%" height="15" fill="rgb(246,1,45)" fg:x="818" fg:w="1"/><text x="67.6861%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.4361%" y="277" width="0.0824%" height="15" fill="rgb(231,42,52)" fg:x="818" fg:w="1"/><text x="67.6861%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4361%" y="261" width="0.0824%" height="15" fill="rgb(240,13,50)" fg:x="818" fg:w="1"/><text x="67.6861%" y="271.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (5 samples, 0.41%)</title><rect x="67.1888%" y="485" width="0.4122%" height="15" fill="rgb(225,81,14)" fg:x="815" fg:w="5"/><text x="67.4388%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="67.1888%" y="469" width="0.4122%" height="15" fill="rgb(216,182,23)" fg:x="815" fg:w="5"/><text x="67.4388%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="67.1888%" y="453" width="0.4122%" height="15" fill="rgb(233,137,19)" fg:x="815" fg:w="5"/><text x="67.4388%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="67.5185%" y="437" width="0.0824%" height="15" fill="rgb(242,61,46)" fg:x="819" fg:w="1"/><text x="67.7685%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="67.5185%" y="421" width="0.0824%" height="15" fill="rgb(221,168,51)" fg:x="819" fg:w="1"/><text x="67.7685%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.6010%" y="469" width="0.0824%" height="15" fill="rgb(238,48,15)" fg:x="820" fg:w="1"/><text x="67.8510%" y="479.50"></text></g><g><title>glob::is_dir (8 samples, 0.66%)</title><rect x="67.8483%" y="437" width="0.6595%" height="15" fill="rgb(216,13,16)" fg:x="823" fg:w="8"/><text x="68.0983%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (8 samples, 0.66%)</title><rect x="67.8483%" y="421" width="0.6595%" height="15" fill="rgb(223,185,34)" fg:x="823" fg:w="8"/><text x="68.0983%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (8 samples, 0.66%)</title><rect x="67.8483%" y="405" width="0.6595%" height="15" fill="rgb(228,94,42)" fg:x="823" fg:w="8"/><text x="68.0983%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (8 samples, 0.66%)</title><rect x="67.8483%" y="389" width="0.6595%" height="15" fill="rgb(218,166,43)" fg:x="823" fg:w="8"/><text x="68.0983%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (8 samples, 0.66%)</title><rect x="67.8483%" y="373" width="0.6595%" height="15" fill="rgb(232,30,50)" fg:x="823" fg:w="8"/><text x="68.0983%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (7 samples, 0.58%)</title><rect x="67.9308%" y="357" width="0.5771%" height="15" fill="rgb(245,206,45)" fg:x="824" fg:w="7"/><text x="68.1808%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (7 samples, 0.58%)</title><rect x="67.9308%" y="341" width="0.5771%" height="15" fill="rgb(220,56,22)" fg:x="824" fg:w="7"/><text x="68.1808%" y="351.50"></text></g><g><title>statx (7 samples, 0.58%)</title><rect x="67.9308%" y="325" width="0.5771%" height="15" fill="rgb(239,129,38)" fg:x="824" fg:w="7"/><text x="68.1808%" y="335.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="68.5078%" y="357" width="0.0824%" height="15" fill="rgb(207,68,41)" fg:x="831" fg:w="1"/><text x="68.7578%" y="367.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.08%)</title><rect x="68.5078%" y="341" width="0.0824%" height="15" fill="rgb(221,21,7)" fg:x="831" fg:w="1"/><text x="68.7578%" y="351.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="68.5078%" y="325" width="0.0824%" height="15" fill="rgb(240,33,25)" fg:x="831" fg:w="1"/><text x="68.7578%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.99%)</title><rect x="67.6834%" y="469" width="0.9893%" height="15" fill="rgb(242,119,10)" fg:x="821" fg:w="12"/><text x="67.9334%" y="479.50"></text></g><g><title>glob::fill_todo (12 samples, 0.99%)</title><rect x="67.6834%" y="453" width="0.9893%" height="15" fill="rgb(214,149,40)" fg:x="821" fg:w="12"/><text x="67.9334%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (2 samples, 0.16%)</title><rect x="68.5078%" y="437" width="0.1649%" height="15" fill="rgb(228,25,36)" fg:x="831" fg:w="2"/><text x="68.7578%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (2 samples, 0.16%)</title><rect x="68.5078%" y="421" width="0.1649%" height="15" fill="rgb(222,59,15)" fg:x="831" fg:w="2"/><text x="68.7578%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="68.5078%" y="405" width="0.1649%" height="15" fill="rgb(218,170,0)" fg:x="831" fg:w="2"/><text x="68.7578%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (2 samples, 0.16%)</title><rect x="68.5078%" y="389" width="0.1649%" height="15" fill="rgb(232,173,23)" fg:x="831" fg:w="2"/><text x="68.7578%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.16%)</title><rect x="68.5078%" y="373" width="0.1649%" height="15" fill="rgb(218,116,1)" fg:x="831" fg:w="2"/><text x="68.7578%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="68.5903%" y="357" width="0.0824%" height="15" fill="rgb(207,34,4)" fg:x="832" fg:w="1"/><text x="68.8403%" y="367.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="68.5903%" y="341" width="0.0824%" height="15" fill="rgb(229,54,52)" fg:x="832" fg:w="1"/><text x="68.8403%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.7552%" y="437" width="0.0824%" height="15" fill="rgb(211,86,23)" fg:x="834" fg:w="1"/><text x="69.0052%" y="447.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (21 samples, 1.73%)</title><rect x="67.1888%" y="501" width="1.7312%" height="15" fill="rgb(254,153,34)" fg:x="815" fg:w="21"/><text x="67.4388%" y="511.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (16 samples, 1.32%)</title><rect x="67.6010%" y="485" width="1.3190%" height="15" fill="rgb(219,220,14)" fg:x="820" fg:w="16"/><text x="67.8510%" y="495.50"></text></g><g><title>glob::glob (3 samples, 0.25%)</title><rect x="68.6727%" y="469" width="0.2473%" height="15" fill="rgb(247,8,26)" fg:x="833" fg:w="3"/><text x="68.9227%" y="479.50"></text></g><g><title>glob::glob_with (3 samples, 0.25%)</title><rect x="68.6727%" y="453" width="0.2473%" height="15" fill="rgb(213,129,42)" fg:x="833" fg:w="3"/><text x="68.9227%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.8376%" y="437" width="0.0824%" height="15" fill="rgb(225,95,41)" fg:x="835" fg:w="1"/><text x="69.0876%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (2 samples, 0.16%)</title><rect x="68.9200%" y="501" width="0.1649%" height="15" fill="rgb(215,134,24)" fg:x="836" fg:w="2"/><text x="69.1700%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0025%" y="485" width="0.0824%" height="15" fill="rgb(235,23,54)" fg:x="837" fg:w="1"/><text x="69.2525%" y="495.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="69.1674%" y="437" width="0.0824%" height="15" fill="rgb(229,96,31)" fg:x="839" fg:w="1"/><text x="69.4174%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="69.1674%" y="421" width="0.0824%" height="15" fill="rgb(206,111,12)" fg:x="839" fg:w="1"/><text x="69.4174%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="69.1674%" y="405" width="0.0824%" height="15" fill="rgb(222,177,8)" fg:x="839" fg:w="1"/><text x="69.4174%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.1674%" y="389" width="0.0824%" height="15" fill="rgb(251,36,52)" fg:x="839" fg:w="1"/><text x="69.4174%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.1674%" y="373" width="0.0824%" height="15" fill="rgb(216,182,29)" fg:x="839" fg:w="1"/><text x="69.4174%" y="383.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="69.2498%" y="437" width="0.0824%" height="15" fill="rgb(241,145,50)" fg:x="840" fg:w="1"/><text x="69.4998%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="69.2498%" y="421" width="0.0824%" height="15" fill="rgb(231,71,35)" fg:x="840" fg:w="1"/><text x="69.4998%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.2498%" y="405" width="0.0824%" height="15" fill="rgb(218,22,17)" fg:x="840" fg:w="1"/><text x="69.4998%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.2498%" y="389" width="0.0824%" height="15" fill="rgb(225,227,6)" fg:x="840" fg:w="1"/><text x="69.4998%" y="399.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.41%)</title><rect x="69.1674%" y="469" width="0.4122%" height="15" fill="rgb(224,204,17)" fg:x="839" fg:w="5"/><text x="69.4174%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.41%)</title><rect x="69.1674%" y="453" width="0.4122%" height="15" fill="rgb(227,61,28)" fg:x="839" fg:w="5"/><text x="69.4174%" y="463.50"></text></g><g><title>replies::identifier_to_key (3 samples, 0.25%)</title><rect x="69.3322%" y="437" width="0.2473%" height="15" fill="rgb(242,148,23)" fg:x="841" fg:w="3"/><text x="69.5822%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="69.4147%" y="421" width="0.1649%" height="15" fill="rgb(237,105,33)" fg:x="842" fg:w="2"/><text x="69.6647%" y="431.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.4971%" y="405" width="0.0824%" height="15" fill="rgb(238,218,40)" fg:x="843" fg:w="1"/><text x="69.7471%" y="415.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.4971%" y="389" width="0.0824%" height="15" fill="rgb(209,126,11)" fg:x="843" fg:w="1"/><text x="69.7471%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="69.5796%" y="437" width="0.0824%" height="15" fill="rgb(245,90,11)" fg:x="844" fg:w="1"/><text x="69.8296%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.25%)</title><rect x="69.5796%" y="469" width="0.2473%" height="15" fill="rgb(211,195,10)" fg:x="844" fg:w="3"/><text x="69.8296%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.25%)</title><rect x="69.5796%" y="453" width="0.2473%" height="15" fill="rgb(231,45,45)" fg:x="844" fg:w="3"/><text x="69.8296%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::TakeOutAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="69.6620%" y="437" width="0.1649%" height="15" fill="rgb(246,100,43)" fg:x="845" fg:w="2"/><text x="69.9120%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="69.6620%" y="421" width="0.1649%" height="15" fill="rgb(241,193,8)" fg:x="845" fg:w="2"/><text x="69.9120%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="69.8269%" y="437" width="0.0824%" height="15" fill="rgb(208,76,19)" fg:x="847" fg:w="1"/><text x="70.0769%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="69.8269%" y="421" width="0.0824%" height="15" fill="rgb(223,69,40)" fg:x="847" fg:w="1"/><text x="70.0769%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="69.8269%" y="405" width="0.0824%" height="15" fill="rgb(207,120,39)" fg:x="847" fg:w="1"/><text x="70.0769%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.8269%" y="389" width="0.0824%" height="15" fill="rgb(212,209,28)" fg:x="847" fg:w="1"/><text x="70.0769%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.8269%" y="373" width="0.0824%" height="15" fill="rgb(246,82,29)" fg:x="847" fg:w="1"/><text x="70.0769%" y="383.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="69.8269%" y="469" width="0.1649%" height="15" fill="rgb(239,6,40)" fg:x="847" fg:w="2"/><text x="70.0769%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="69.8269%" y="453" width="0.1649%" height="15" fill="rgb(228,181,35)" fg:x="847" fg:w="2"/><text x="70.0769%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="69.9093%" y="437" width="0.0824%" height="15" fill="rgb(238,151,2)" fg:x="848" fg:w="1"/><text x="70.1593%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="69.9093%" y="421" width="0.0824%" height="15" fill="rgb(236,94,18)" fg:x="848" fg:w="1"/><text x="70.1593%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.9093%" y="405" width="0.0824%" height="15" fill="rgb(208,38,14)" fg:x="848" fg:w="1"/><text x="70.1593%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.9093%" y="389" width="0.0824%" height="15" fill="rgb(234,215,27)" fg:x="848" fg:w="1"/><text x="70.1593%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9093%" y="373" width="0.0824%" height="15" fill="rgb(254,211,53)" fg:x="848" fg:w="1"/><text x="70.1593%" y="383.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="69.9918%" y="469" width="0.0824%" height="15" fill="rgb(216,175,11)" fg:x="849" fg:w="1"/><text x="70.2418%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="69.9918%" y="453" width="0.0824%" height="15" fill="rgb(246,179,26)" fg:x="849" fg:w="1"/><text x="70.2418%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="69.9918%" y="437" width="0.0824%" height="15" fill="rgb(249,19,52)" fg:x="849" fg:w="1"/><text x="70.2418%" y="447.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="70.0742%" y="437" width="0.0824%" height="15" fill="rgb(230,42,52)" fg:x="850" fg:w="1"/><text x="70.3242%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="70.0742%" y="421" width="0.0824%" height="15" fill="rgb(221,171,0)" fg:x="850" fg:w="1"/><text x="70.3242%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0742%" y="405" width="0.0824%" height="15" fill="rgb(222,177,40)" fg:x="850" fg:w="1"/><text x="70.3242%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="70.0742%" y="469" width="0.1649%" height="15" fill="rgb(247,34,16)" fg:x="850" fg:w="2"/><text x="70.3242%" y="479.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="70.0742%" y="453" width="0.1649%" height="15" fill="rgb(213,217,37)" fg:x="850" fg:w="2"/><text x="70.3242%" y="463.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="70.1566%" y="437" width="0.0824%" height="15" fill="rgb(231,189,24)" fg:x="851" fg:w="1"/><text x="70.4066%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.1566%" y="421" width="0.0824%" height="15" fill="rgb(214,22,9)" fg:x="851" fg:w="1"/><text x="70.4066%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.1566%" y="405" width="0.0824%" height="15" fill="rgb(212,70,22)" fg:x="851" fg:w="1"/><text x="70.4066%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.1566%" y="389" width="0.0824%" height="15" fill="rgb(249,64,51)" fg:x="851" fg:w="1"/><text x="70.4066%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="70.1566%" y="373" width="0.0824%" height="15" fill="rgb(249,148,20)" fg:x="851" fg:w="1"/><text x="70.4066%" y="383.50"></text></g><g><title>kernel::plugins::SessionPlugins::schema (16 samples, 1.32%)</title><rect x="69.0849%" y="501" width="1.3190%" height="15" fill="rgb(246,46,48)" fg:x="838" fg:w="16"/><text x="69.3349%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.32%)</title><rect x="69.0849%" y="485" width="1.3190%" height="15" fill="rgb(217,34,48)" fg:x="838" fg:w="16"/><text x="69.3349%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.2391%" y="469" width="0.1649%" height="15" fill="rgb(222,45,26)" fg:x="852" fg:w="2"/><text x="70.4891%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (51 samples, 4.20%)</title><rect x="66.3644%" y="517" width="4.2045%" height="15" fill="rgb(230,201,36)" fg:x="805" fg:w="51"/><text x="66.6144%" y="527.50">kerne..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="70.4040%" y="501" width="0.1649%" height="15" fill="rgb(217,30,43)" fg:x="854" fg:w="2"/><text x="70.6540%" y="511.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="70.4040%" y="485" width="0.1649%" height="15" fill="rgb(230,197,40)" fg:x="854" fg:w="2"/><text x="70.6540%" y="495.50"></text></g><g><title>engine::session::Session::initialize (52 samples, 4.29%)</title><rect x="66.3644%" y="533" width="4.2869%" height="15" fill="rgb(239,181,18)" fg:x="805" fg:w="52"/><text x="66.6144%" y="543.50">engin..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="70.5688%" y="517" width="0.0824%" height="15" fill="rgb(222,60,39)" fg:x="856" fg:w="1"/><text x="70.8188%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.5688%" y="501" width="0.0824%" height="15" fill="rgb(210,60,22)" fg:x="856" fg:w="1"/><text x="70.8188%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (54 samples, 4.45%)</title><rect x="66.2819%" y="581" width="4.4518%" height="15" fill="rgb(239,213,48)" fg:x="804" fg:w="54"/><text x="66.5319%" y="591.50">&lt;engi..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (54 samples, 4.45%)</title><rect x="66.2819%" y="565" width="4.4518%" height="15" fill="rgb(253,214,23)" fg:x="804" fg:w="54"/><text x="66.5319%" y="575.50">engin..</text></g><g><title>engine::session::Session::new (54 samples, 4.45%)</title><rect x="66.2819%" y="549" width="4.4518%" height="15" fill="rgb(211,98,45)" fg:x="804" fg:w="54"/><text x="66.5319%" y="559.50">engin..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="70.6513%" y="533" width="0.0824%" height="15" fill="rgb(239,130,44)" fg:x="857" fg:w="1"/><text x="70.9013%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="70.6513%" y="517" width="0.0824%" height="15" fill="rgb(222,181,35)" fg:x="857" fg:w="1"/><text x="70.9013%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.6513%" y="501" width="0.0824%" height="15" fill="rgb(219,219,49)" fg:x="857" fg:w="1"/><text x="70.9013%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.6513%" y="485" width="0.0824%" height="15" fill="rgb(227,161,51)" fg:x="857" fg:w="1"/><text x="70.9013%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.7337%" y="565" width="0.0824%" height="15" fill="rgb(239,112,27)" fg:x="858" fg:w="1"/><text x="70.9837%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7337%" y="549" width="0.0824%" height="15" fill="rgb(248,122,18)" fg:x="858" fg:w="1"/><text x="70.9837%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.8162%" y="517" width="0.0824%" height="15" fill="rgb(245,130,23)" fg:x="859" fg:w="1"/><text x="71.0662%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="70.8162%" y="501" width="0.0824%" height="15" fill="rgb(211,225,28)" fg:x="859" fg:w="1"/><text x="71.0662%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8162%" y="485" width="0.0824%" height="15" fill="rgb(242,105,44)" fg:x="859" fg:w="1"/><text x="71.0662%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="70.8986%" y="437" width="0.1649%" height="15" fill="rgb(216,183,46)" fg:x="860" fg:w="2"/><text x="71.1486%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="70.8986%" y="421" width="0.1649%" height="15" fill="rgb(227,112,9)" fg:x="860" fg:w="2"/><text x="71.1486%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="70.8986%" y="405" width="0.1649%" height="15" fill="rgb(244,21,0)" fg:x="860" fg:w="2"/><text x="71.1486%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.9810%" y="389" width="0.0824%" height="15" fill="rgb(236,185,14)" fg:x="861" fg:w="1"/><text x="71.2310%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="70.8986%" y="453" width="0.3298%" height="15" fill="rgb(236,170,30)" fg:x="860" fg:w="4"/><text x="71.1486%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.0635%" y="437" width="0.1649%" height="15" fill="rgb(209,198,51)" fg:x="862" fg:w="2"/><text x="71.3135%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="71.0635%" y="421" width="0.1649%" height="15" fill="rgb(205,171,26)" fg:x="862" fg:w="2"/><text x="71.3135%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.1459%" y="405" width="0.0824%" height="15" fill="rgb(246,41,49)" fg:x="863" fg:w="1"/><text x="71.3959%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="71.2284%" y="437" width="0.2473%" height="15" fill="rgb(240,229,12)" fg:x="864" fg:w="3"/><text x="71.4784%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="71.2284%" y="421" width="0.2473%" height="15" fill="rgb(212,8,54)" fg:x="864" fg:w="3"/><text x="71.4784%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="71.2284%" y="405" width="0.2473%" height="15" fill="rgb(230,114,13)" fg:x="864" fg:w="3"/><text x="71.4784%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="71.2284%" y="389" width="0.2473%" height="15" fill="rgb(229,130,28)" fg:x="864" fg:w="3"/><text x="71.4784%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="71.3108%" y="373" width="0.1649%" height="15" fill="rgb(206,139,15)" fg:x="865" fg:w="2"/><text x="71.5608%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="71.3108%" y="357" width="0.1649%" height="15" fill="rgb(241,188,35)" fg:x="865" fg:w="2"/><text x="71.5608%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="71.3108%" y="341" width="0.1649%" height="15" fill="rgb(208,224,26)" fg:x="865" fg:w="2"/><text x="71.5608%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.5581%" y="373" width="0.0824%" height="15" fill="rgb(251,131,28)" fg:x="868" fg:w="1"/><text x="71.8081%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.5581%" y="357" width="0.0824%" height="15" fill="rgb(208,153,1)" fg:x="868" fg:w="1"/><text x="71.8081%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.5581%" y="341" width="0.0824%" height="15" fill="rgb(234,33,36)" fg:x="868" fg:w="1"/><text x="71.8081%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.5581%" y="325" width="0.0824%" height="15" fill="rgb(246,42,29)" fg:x="868" fg:w="1"/><text x="71.8081%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="71.5581%" y="389" width="0.1649%" height="15" fill="rgb(251,114,16)" fg:x="868" fg:w="2"/><text x="71.8081%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="71.6406%" y="373" width="0.0824%" height="15" fill="rgb(233,13,38)" fg:x="869" fg:w="1"/><text x="71.8906%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="71.6406%" y="357" width="0.0824%" height="15" fill="rgb(247,120,19)" fg:x="869" fg:w="1"/><text x="71.8906%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="71.4757%" y="421" width="0.3298%" height="15" fill="rgb(205,11,16)" fg:x="867" fg:w="4"/><text x="71.7257%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="71.4757%" y="405" width="0.3298%" height="15" fill="rgb(228,185,19)" fg:x="867" fg:w="4"/><text x="71.7257%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.7230%" y="389" width="0.0824%" height="15" fill="rgb(239,88,52)" fg:x="870" fg:w="1"/><text x="71.9730%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.7230%" y="373" width="0.0824%" height="15" fill="rgb(219,23,1)" fg:x="870" fg:w="1"/><text x="71.9730%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.7230%" y="357" width="0.0824%" height="15" fill="rgb(253,177,16)" fg:x="870" fg:w="1"/><text x="71.9730%" y="367.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="71.8054%" y="405" width="0.0824%" height="15" fill="rgb(225,150,40)" fg:x="871" fg:w="1"/><text x="72.0554%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.8879%" y="405" width="0.0824%" height="15" fill="rgb(208,108,30)" fg:x="872" fg:w="1"/><text x="72.1379%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.8879%" y="389" width="0.0824%" height="15" fill="rgb(214,122,4)" fg:x="872" fg:w="1"/><text x="72.1379%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.8879%" y="373" width="0.0824%" height="15" fill="rgb(229,74,37)" fg:x="872" fg:w="1"/><text x="72.1379%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.8879%" y="357" width="0.0824%" height="15" fill="rgb(233,61,41)" fg:x="872" fg:w="1"/><text x="72.1379%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.8879%" y="341" width="0.0824%" height="15" fill="rgb(238,191,5)" fg:x="872" fg:w="1"/><text x="72.1379%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.8879%" y="325" width="0.0824%" height="15" fill="rgb(233,78,24)" fg:x="872" fg:w="1"/><text x="72.1379%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.8879%" y="309" width="0.0824%" height="15" fill="rgb(211,142,8)" fg:x="872" fg:w="1"/><text x="72.1379%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="71.9703%" y="389" width="0.2473%" height="15" fill="rgb(253,38,53)" fg:x="873" fg:w="3"/><text x="72.2203%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.0528%" y="373" width="0.1649%" height="15" fill="rgb(234,63,51)" fg:x="874" fg:w="2"/><text x="72.3028%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="72.0528%" y="357" width="0.1649%" height="15" fill="rgb(205,23,31)" fg:x="874" fg:w="2"/><text x="72.3028%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.1352%" y="341" width="0.0824%" height="15" fill="rgb(210,184,50)" fg:x="875" fg:w="1"/><text x="72.3852%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="71.9703%" y="405" width="0.4122%" height="15" fill="rgb(222,112,26)" fg:x="873" fg:w="5"/><text x="72.2203%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="72.2176%" y="389" width="0.1649%" height="15" fill="rgb(250,98,18)" fg:x="876" fg:w="2"/><text x="72.4676%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.99%)</title><rect x="71.8054%" y="421" width="0.9893%" height="15" fill="rgb(250,34,12)" fg:x="871" fg:w="12"/><text x="72.0554%" y="431.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="72.3825%" y="405" width="0.4122%" height="15" fill="rgb(236,141,30)" fg:x="878" fg:w="5"/><text x="72.6325%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="72.5474%" y="389" width="0.2473%" height="15" fill="rgb(246,134,38)" fg:x="880" fg:w="3"/><text x="72.7974%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.7123%" y="373" width="0.0824%" height="15" fill="rgb(240,114,4)" fg:x="882" fg:w="1"/><text x="72.9623%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.48%)</title><rect x="71.4757%" y="437" width="1.4839%" height="15" fill="rgb(243,113,39)" fg:x="867" fg:w="18"/><text x="71.7257%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.7947%" y="421" width="0.1649%" height="15" fill="rgb(239,215,4)" fg:x="883" fg:w="2"/><text x="73.0447%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.9596%" y="405" width="0.0824%" height="15" fill="rgb(236,229,45)" fg:x="885" fg:w="1"/><text x="73.2096%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.9596%" y="389" width="0.0824%" height="15" fill="rgb(242,2,6)" fg:x="885" fg:w="1"/><text x="73.2096%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.9596%" y="373" width="0.0824%" height="15" fill="rgb(239,108,21)" fg:x="885" fg:w="1"/><text x="73.2096%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.9596%" y="357" width="0.0824%" height="15" fill="rgb(215,168,34)" fg:x="885" fg:w="1"/><text x="73.2096%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (27 samples, 2.23%)</title><rect x="70.8986%" y="469" width="2.2259%" height="15" fill="rgb(238,31,17)" fg:x="860" fg:w="27"/><text x="71.1486%" y="479.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.90%)</title><rect x="71.2284%" y="453" width="1.8961%" height="15" fill="rgb(220,133,11)" fg:x="864" fg:w="23"/><text x="71.4784%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.9596%" y="437" width="0.1649%" height="15" fill="rgb(212,158,23)" fg:x="885" fg:w="2"/><text x="73.2096%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="72.9596%" y="421" width="0.1649%" height="15" fill="rgb(223,172,7)" fg:x="885" fg:w="2"/><text x="73.2096%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="73.0420%" y="405" width="0.0824%" height="15" fill="rgb(244,3,52)" fg:x="886" fg:w="1"/><text x="73.2920%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.1245%" y="421" width="0.0824%" height="15" fill="rgb(207,69,27)" fg:x="887" fg:w="1"/><text x="73.3745%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1245%" y="405" width="0.0824%" height="15" fill="rgb(213,136,45)" fg:x="887" fg:w="1"/><text x="73.3745%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="73.2069%" y="389" width="0.0824%" height="15" fill="rgb(218,79,17)" fg:x="888" fg:w="1"/><text x="73.4569%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="73.1245%" y="469" width="0.2473%" height="15" fill="rgb(216,106,36)" fg:x="887" fg:w="3"/><text x="73.3745%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="73.1245%" y="453" width="0.2473%" height="15" fill="rgb(251,27,45)" fg:x="887" fg:w="3"/><text x="73.3745%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="73.1245%" y="437" width="0.2473%" height="15" fill="rgb(232,21,34)" fg:x="887" fg:w="3"/><text x="73.3745%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.2069%" y="421" width="0.1649%" height="15" fill="rgb(249,191,16)" fg:x="888" fg:w="2"/><text x="73.4569%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.2069%" y="405" width="0.1649%" height="15" fill="rgb(224,88,20)" fg:x="888" fg:w="2"/><text x="73.4569%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2894%" y="389" width="0.0824%" height="15" fill="rgb(237,93,27)" fg:x="889" fg:w="1"/><text x="73.5394%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2894%" y="373" width="0.0824%" height="15" fill="rgb(226,198,48)" fg:x="889" fg:w="1"/><text x="73.5394%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="73.3718%" y="421" width="0.0824%" height="15" fill="rgb(207,162,53)" fg:x="890" fg:w="1"/><text x="73.6218%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.3718%" y="405" width="0.0824%" height="15" fill="rgb(207,169,9)" fg:x="890" fg:w="1"/><text x="73.6218%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6191%" y="373" width="0.0824%" height="15" fill="rgb(224,166,46)" fg:x="893" fg:w="1"/><text x="73.8691%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="73.7016%" y="373" width="0.3298%" height="15" fill="rgb(233,26,6)" fg:x="894" fg:w="4"/><text x="73.9516%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="73.7016%" y="357" width="0.3298%" height="15" fill="rgb(218,106,45)" fg:x="894" fg:w="4"/><text x="73.9516%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="73.7016%" y="341" width="0.3298%" height="15" fill="rgb(240,217,4)" fg:x="894" fg:w="4"/><text x="73.9516%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="73.7016%" y="325" width="0.3298%" height="15" fill="rgb(246,171,10)" fg:x="894" fg:w="4"/><text x="73.9516%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="73.7840%" y="309" width="0.2473%" height="15" fill="rgb(223,197,30)" fg:x="895" fg:w="3"/><text x="74.0340%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="73.8664%" y="293" width="0.1649%" height="15" fill="rgb(207,92,16)" fg:x="896" fg:w="2"/><text x="74.1164%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="73.8664%" y="277" width="0.1649%" height="15" fill="rgb(211,6,44)" fg:x="896" fg:w="2"/><text x="74.1164%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.9489%" y="261" width="0.0824%" height="15" fill="rgb(219,139,2)" fg:x="897" fg:w="1"/><text x="74.1989%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.74%)</title><rect x="73.5367%" y="405" width="0.7420%" height="15" fill="rgb(224,103,21)" fg:x="892" fg:w="9"/><text x="73.7867%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.66%)</title><rect x="73.6191%" y="389" width="0.6595%" height="15" fill="rgb(254,110,48)" fg:x="893" fg:w="8"/><text x="73.8691%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="74.0313%" y="373" width="0.2473%" height="15" fill="rgb(212,88,19)" fg:x="898" fg:w="3"/><text x="74.2813%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="74.1138%" y="357" width="0.1649%" height="15" fill="rgb(248,103,6)" fg:x="899" fg:w="2"/><text x="74.3638%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.1138%" y="341" width="0.1649%" height="15" fill="rgb(214,53,46)" fg:x="899" fg:w="2"/><text x="74.3638%" y="351.50"></text></g><g><title>engine::session::Session::flush (43 samples, 3.54%)</title><rect x="70.8162%" y="565" width="3.5449%" height="15" fill="rgb(236,190,24)" fg:x="859" fg:w="43"/><text x="71.0662%" y="575.50">engi..</text></g><g><title>engine::session::state::State::close (43 samples, 3.54%)</title><rect x="70.8162%" y="549" width="3.5449%" height="15" fill="rgb(254,58,28)" fg:x="859" fg:w="43"/><text x="71.0662%" y="559.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (43 samples, 3.54%)</title><rect x="70.8162%" y="533" width="3.5449%" height="15" fill="rgb(243,63,27)" fg:x="859" fg:w="43"/><text x="71.0662%" y="543.50">engi..</text></g><g><title>core::iter::adapters::try_process (42 samples, 3.46%)</title><rect x="70.8986%" y="517" width="3.4625%" height="15" fill="rgb(206,81,20)" fg:x="860" fg:w="42"/><text x="71.1486%" y="527.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 3.46%)</title><rect x="70.8986%" y="501" width="3.4625%" height="15" fill="rgb(252,69,51)" fg:x="860" fg:w="42"/><text x="71.1486%" y="511.50">&lt;al..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (42 samples, 3.46%)</title><rect x="70.8986%" y="485" width="3.4625%" height="15" fill="rgb(222,213,4)" fg:x="860" fg:w="42"/><text x="71.1486%" y="495.50">eng..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.99%)</title><rect x="73.3718%" y="469" width="0.9893%" height="15" fill="rgb(226,198,12)" fg:x="890" fg:w="12"/><text x="73.6218%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.99%)</title><rect x="73.3718%" y="453" width="0.9893%" height="15" fill="rgb(248,115,11)" fg:x="890" fg:w="12"/><text x="73.6218%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.99%)</title><rect x="73.3718%" y="437" width="0.9893%" height="15" fill="rgb(221,148,54)" fg:x="890" fg:w="12"/><text x="73.6218%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.91%)</title><rect x="73.4542%" y="421" width="0.9068%" height="15" fill="rgb(214,209,51)" fg:x="891" fg:w="11"/><text x="73.7042%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2786%" y="405" width="0.0824%" height="15" fill="rgb(249,116,53)" fg:x="901" fg:w="1"/><text x="74.5286%" y="415.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="74.3611%" y="565" width="0.0824%" height="15" fill="rgb(248,170,1)" fg:x="902" fg:w="1"/><text x="74.6111%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="74.3611%" y="549" width="0.0824%" height="15" fill="rgb(244,105,10)" fg:x="902" fg:w="1"/><text x="74.6111%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="74.3611%" y="533" width="0.0824%" height="15" fill="rgb(229,100,5)" fg:x="902" fg:w="1"/><text x="74.6111%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.3611%" y="517" width="0.0824%" height="15" fill="rgb(233,221,39)" fg:x="902" fg:w="1"/><text x="74.6111%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="74.4435%" y="533" width="0.0824%" height="15" fill="rgb(233,88,21)" fg:x="903" fg:w="1"/><text x="74.6935%" y="543.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="74.4435%" y="517" width="0.0824%" height="15" fill="rgb(206,13,0)" fg:x="903" fg:w="1"/><text x="74.6935%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="74.4435%" y="501" width="0.0824%" height="15" fill="rgb(242,15,35)" fg:x="903" fg:w="1"/><text x="74.6935%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.4435%" y="485" width="0.0824%" height="15" fill="rgb(247,142,41)" fg:x="903" fg:w="1"/><text x="74.6935%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.4435%" y="469" width="0.0824%" height="15" fill="rgb(245,51,29)" fg:x="903" fg:w="1"/><text x="74.6935%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="74.5260%" y="501" width="0.0824%" height="15" fill="rgb(228,209,43)" fg:x="904" fg:w="1"/><text x="74.7760%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.5260%" y="485" width="0.0824%" height="15" fill="rgb(233,185,9)" fg:x="904" fg:w="1"/><text x="74.7760%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="74.6084%" y="501" width="0.0824%" height="15" fill="rgb(226,93,0)" fg:x="905" fg:w="1"/><text x="74.8584%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6084%" y="485" width="0.0824%" height="15" fill="rgb(245,194,43)" fg:x="905" fg:w="1"/><text x="74.8584%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.25%)</title><rect x="74.5260%" y="517" width="0.2473%" height="15" fill="rgb(211,145,34)" fg:x="904" fg:w="3"/><text x="74.7760%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6908%" y="501" width="0.0824%" height="15" fill="rgb(231,228,28)" fg:x="906" fg:w="1"/><text x="74.9408%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.6908%" y="485" width="0.0824%" height="15" fill="rgb(236,149,4)" fg:x="906" fg:w="1"/><text x="74.9408%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="74.6908%" y="469" width="0.0824%" height="15" fill="rgb(234,114,38)" fg:x="906" fg:w="1"/><text x="74.9408%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6908%" y="453" width="0.0824%" height="15" fill="rgb(246,132,51)" fg:x="906" fg:w="1"/><text x="74.9408%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.6908%" y="437" width="0.0824%" height="15" fill="rgb(251,137,22)" fg:x="906" fg:w="1"/><text x="74.9408%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6908%" y="421" width="0.0824%" height="15" fill="rgb(243,59,52)" fg:x="906" fg:w="1"/><text x="74.9408%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="74.7733%" y="469" width="0.0824%" height="15" fill="rgb(239,56,28)" fg:x="907" fg:w="1"/><text x="75.0233%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.33%)</title><rect x="74.7733%" y="485" width="0.3298%" height="15" fill="rgb(218,168,27)" fg:x="907" fg:w="4"/><text x="75.0233%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="74.8557%" y="469" width="0.2473%" height="15" fill="rgb(232,165,11)" fg:x="908" fg:w="3"/><text x="75.1057%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="74.8557%" y="453" width="0.2473%" height="15" fill="rgb(253,55,41)" fg:x="908" fg:w="3"/><text x="75.1057%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="74.9382%" y="437" width="0.1649%" height="15" fill="rgb(233,206,24)" fg:x="909" fg:w="2"/><text x="75.1882%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.9382%" y="421" width="0.1649%" height="15" fill="rgb(220,199,8)" fg:x="909" fg:w="2"/><text x="75.1882%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.0206%" y="405" width="0.0824%" height="15" fill="rgb(254,65,26)" fg:x="910" fg:w="1"/><text x="75.2706%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0206%" y="389" width="0.0824%" height="15" fill="rgb(253,102,23)" fg:x="910" fg:w="1"/><text x="75.2706%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1031%" y="485" width="0.0824%" height="15" fill="rgb(231,103,35)" fg:x="911" fg:w="1"/><text x="75.3531%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1031%" y="469" width="0.0824%" height="15" fill="rgb(238,26,10)" fg:x="911" fg:w="1"/><text x="75.3531%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.1031%" y="453" width="0.0824%" height="15" fill="rgb(234,191,34)" fg:x="911" fg:w="1"/><text x="75.3531%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.82%)</title><rect x="74.4435%" y="549" width="0.8244%" height="15" fill="rgb(206,210,9)" fg:x="903" fg:w="10"/><text x="74.6935%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.74%)</title><rect x="74.5260%" y="533" width="0.7420%" height="15" fill="rgb(219,155,3)" fg:x="904" fg:w="9"/><text x="74.7760%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.49%)</title><rect x="74.7733%" y="517" width="0.4946%" height="15" fill="rgb(221,62,52)" fg:x="907" fg:w="6"/><text x="75.0233%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="74.7733%" y="501" width="0.4946%" height="15" fill="rgb(215,197,36)" fg:x="907" fg:w="6"/><text x="75.0233%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1855%" y="485" width="0.0824%" height="15" fill="rgb(226,222,6)" fg:x="912" fg:w="1"/><text x="75.4355%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.1855%" y="469" width="0.0824%" height="15" fill="rgb(215,58,28)" fg:x="912" fg:w="1"/><text x="75.4355%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1855%" y="453" width="0.0824%" height="15" fill="rgb(212,148,2)" fg:x="912" fg:w="1"/><text x="75.4355%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.2679%" y="549" width="0.0824%" height="15" fill="rgb(208,21,42)" fg:x="913" fg:w="1"/><text x="75.5179%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2679%" y="533" width="0.0824%" height="15" fill="rgb(209,107,26)" fg:x="913" fg:w="1"/><text x="75.5179%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2679%" y="517" width="0.0824%" height="15" fill="rgb(254,60,47)" fg:x="913" fg:w="1"/><text x="75.5179%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.3504%" y="485" width="0.0824%" height="15" fill="rgb(207,226,45)" fg:x="914" fg:w="1"/><text x="75.6004%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.3504%" y="469" width="0.0824%" height="15" fill="rgb(223,124,22)" fg:x="914" fg:w="1"/><text x="75.6004%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.3504%" y="453" width="0.0824%" height="15" fill="rgb(240,162,13)" fg:x="914" fg:w="1"/><text x="75.6004%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.3504%" y="437" width="0.0824%" height="15" fill="rgb(244,199,31)" fg:x="914" fg:w="1"/><text x="75.6004%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.3504%" y="421" width="0.0824%" height="15" fill="rgb(207,92,16)" fg:x="914" fg:w="1"/><text x="75.6004%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.3504%" y="405" width="0.0824%" height="15" fill="rgb(215,31,19)" fg:x="914" fg:w="1"/><text x="75.6004%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.3504%" y="389" width="0.0824%" height="15" fill="rgb(245,118,14)" fg:x="914" fg:w="1"/><text x="75.6004%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.3504%" y="373" width="0.0824%" height="15" fill="rgb(248,12,46)" fg:x="914" fg:w="1"/><text x="75.6004%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.3504%" y="357" width="0.0824%" height="15" fill="rgb(209,119,0)" fg:x="914" fg:w="1"/><text x="75.6004%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.3504%" y="341" width="0.0824%" height="15" fill="rgb(254,51,44)" fg:x="914" fg:w="1"/><text x="75.6004%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.3504%" y="325" width="0.0824%" height="15" fill="rgb(253,182,35)" fg:x="914" fg:w="1"/><text x="75.6004%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3504%" y="309" width="0.0824%" height="15" fill="rgb(205,198,39)" fg:x="914" fg:w="1"/><text x="75.6004%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.3504%" y="533" width="0.1649%" height="15" fill="rgb(251,175,48)" fg:x="914" fg:w="2"/><text x="75.6004%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.3504%" y="517" width="0.1649%" height="15" fill="rgb(239,38,17)" fg:x="914" fg:w="2"/><text x="75.6004%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.3504%" y="501" width="0.1649%" height="15" fill="rgb(212,101,8)" fg:x="914" fg:w="2"/><text x="75.6004%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4328%" y="485" width="0.0824%" height="15" fill="rgb(228,35,17)" fg:x="915" fg:w="1"/><text x="75.6828%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5153%" y="533" width="0.0824%" height="15" fill="rgb(214,95,8)" fg:x="916" fg:w="1"/><text x="75.7653%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5153%" y="517" width="0.0824%" height="15" fill="rgb(210,176,35)" fg:x="916" fg:w="1"/><text x="75.7653%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5153%" y="501" width="0.0824%" height="15" fill="rgb(226,4,3)" fg:x="916" fg:w="1"/><text x="75.7653%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.5153%" y="485" width="0.0824%" height="15" fill="rgb(232,133,14)" fg:x="916" fg:w="1"/><text x="75.7653%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.5153%" y="469" width="0.0824%" height="15" fill="rgb(250,191,8)" fg:x="916" fg:w="1"/><text x="75.7653%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.5153%" y="453" width="0.0824%" height="15" fill="rgb(213,12,45)" fg:x="916" fg:w="1"/><text x="75.7653%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.5153%" y="437" width="0.0824%" height="15" fill="rgb(233,78,26)" fg:x="916" fg:w="1"/><text x="75.7653%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.5153%" y="421" width="0.0824%" height="15" fill="rgb(245,222,11)" fg:x="916" fg:w="1"/><text x="75.7653%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.5153%" y="405" width="0.0824%" height="15" fill="rgb(216,174,12)" fg:x="916" fg:w="1"/><text x="75.7653%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.5153%" y="389" width="0.0824%" height="15" fill="rgb(213,15,9)" fg:x="916" fg:w="1"/><text x="75.7653%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.5153%" y="373" width="0.0824%" height="15" fill="rgb(238,103,32)" fg:x="916" fg:w="1"/><text x="75.7653%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.5153%" y="357" width="0.0824%" height="15" fill="rgb(245,85,15)" fg:x="916" fg:w="1"/><text x="75.7653%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5153%" y="341" width="0.0824%" height="15" fill="rgb(254,204,5)" fg:x="916" fg:w="1"/><text x="75.7653%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5977%" y="501" width="0.0824%" height="15" fill="rgb(231,178,15)" fg:x="917" fg:w="1"/><text x="75.8477%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5977%" y="485" width="0.0824%" height="15" fill="rgb(248,151,3)" fg:x="917" fg:w="1"/><text x="75.8477%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (16 samples, 1.32%)</title><rect x="74.4435%" y="565" width="1.3190%" height="15" fill="rgb(250,139,13)" fg:x="903" fg:w="16"/><text x="74.6935%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.41%)</title><rect x="75.3504%" y="549" width="0.4122%" height="15" fill="rgb(243,107,53)" fg:x="914" fg:w="5"/><text x="75.6004%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.5977%" y="533" width="0.1649%" height="15" fill="rgb(232,81,15)" fg:x="917" fg:w="2"/><text x="75.8477%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5977%" y="517" width="0.1649%" height="15" fill="rgb(225,187,48)" fg:x="917" fg:w="2"/><text x="75.8477%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.6801%" y="501" width="0.0824%" height="15" fill="rgb(205,116,12)" fg:x="918" fg:w="1"/><text x="75.9301%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6801%" y="485" width="0.0824%" height="15" fill="rgb(220,222,31)" fg:x="918" fg:w="1"/><text x="75.9301%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6801%" y="469" width="0.0824%" height="15" fill="rgb(233,187,49)" fg:x="918" fg:w="1"/><text x="75.9301%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6801%" y="453" width="0.0824%" height="15" fill="rgb(211,168,53)" fg:x="918" fg:w="1"/><text x="75.9301%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.6801%" y="437" width="0.0824%" height="15" fill="rgb(206,160,16)" fg:x="918" fg:w="1"/><text x="75.9301%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.6801%" y="421" width="0.0824%" height="15" fill="rgb(254,164,13)" fg:x="918" fg:w="1"/><text x="75.9301%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::OpenedScopeRefMut&lt;plugins_core::carrying::model::Containing,kernel::model::entity::Entity&gt;&gt; (1 samples, 0.08%)</title><rect x="75.7626%" y="533" width="0.0824%" height="15" fill="rgb(229,45,30)" fg:x="919" fg:w="1"/><text x="76.0126%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="75.7626%" y="517" width="0.0824%" height="15" fill="rgb(237,32,10)" fg:x="919" fg:w="1"/><text x="76.0126%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.7626%" y="501" width="0.0824%" height="15" fill="rgb(251,20,47)" fg:x="919" fg:w="1"/><text x="76.0126%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8450%" y="485" width="0.0824%" height="15" fill="rgb(251,116,12)" fg:x="920" fg:w="1"/><text x="76.0950%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.9275%" y="485" width="0.0824%" height="15" fill="rgb(214,227,27)" fg:x="921" fg:w="1"/><text x="76.1775%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.33%)</title><rect x="75.8450%" y="533" width="0.3298%" height="15" fill="rgb(248,10,53)" fg:x="920" fg:w="4"/><text x="76.0950%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="75.8450%" y="517" width="0.3298%" height="15" fill="rgb(221,176,25)" fg:x="920" fg:w="4"/><text x="76.0950%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.33%)</title><rect x="75.8450%" y="501" width="0.3298%" height="15" fill="rgb(205,70,46)" fg:x="920" fg:w="4"/><text x="76.0950%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.0099%" y="485" width="0.1649%" height="15" fill="rgb(217,45,38)" fg:x="922" fg:w="2"/><text x="76.2599%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.0099%" y="469" width="0.1649%" height="15" fill="rgb(243,6,54)" fg:x="922" fg:w="2"/><text x="76.2599%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.0099%" y="453" width="0.1649%" height="15" fill="rgb(242,76,23)" fg:x="922" fg:w="2"/><text x="76.2599%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0923%" y="437" width="0.0824%" height="15" fill="rgb(239,166,0)" fg:x="923" fg:w="1"/><text x="76.3423%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.0923%" y="421" width="0.0824%" height="15" fill="rgb(238,174,32)" fg:x="923" fg:w="1"/><text x="76.3423%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.0923%" y="405" width="0.0824%" height="15" fill="rgb(238,124,44)" fg:x="923" fg:w="1"/><text x="76.3423%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="76.1748%" y="533" width="0.0824%" height="15" fill="rgb(206,185,9)" fg:x="924" fg:w="1"/><text x="76.4248%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="76.1748%" y="517" width="0.0824%" height="15" fill="rgb(215,157,17)" fg:x="924" fg:w="1"/><text x="76.4248%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.1748%" y="501" width="0.0824%" height="15" fill="rgb(251,17,29)" fg:x="924" fg:w="1"/><text x="76.4248%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.1748%" y="485" width="0.0824%" height="15" fill="rgb(227,113,27)" fg:x="924" fg:w="1"/><text x="76.4248%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Kind&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.1748%" y="469" width="0.0824%" height="15" fill="rgb(217,226,24)" fg:x="924" fg:w="1"/><text x="76.4248%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.1748%" y="453" width="0.0824%" height="15" fill="rgb(251,99,38)" fg:x="924" fg:w="1"/><text x="76.4248%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Identity&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.1748%" y="437" width="0.0824%" height="15" fill="rgb(231,147,19)" fg:x="924" fg:w="1"/><text x="76.4248%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.1748%" y="421" width="0.0824%" height="15" fill="rgb(230,86,8)" fg:x="924" fg:w="1"/><text x="76.4248%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.1748%" y="405" width="0.0824%" height="15" fill="rgb(237,159,39)" fg:x="924" fg:w="1"/><text x="76.4248%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.1748%" y="389" width="0.0824%" height="15" fill="rgb(247,179,47)" fg:x="924" fg:w="1"/><text x="76.4248%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (7 samples, 0.58%)</title><rect x="75.7626%" y="565" width="0.5771%" height="15" fill="rgb(253,152,26)" fg:x="919" fg:w="7"/><text x="76.0126%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.58%)</title><rect x="75.7626%" y="549" width="0.5771%" height="15" fill="rgb(222,211,15)" fg:x="919" fg:w="7"/><text x="76.0126%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="76.2572%" y="533" width="0.0824%" height="15" fill="rgb(236,193,6)" fg:x="925" fg:w="1"/><text x="76.5072%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="76.2572%" y="517" width="0.0824%" height="15" fill="rgb(226,206,10)" fg:x="925" fg:w="1"/><text x="76.5072%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2572%" y="501" width="0.0824%" height="15" fill="rgb(213,125,22)" fg:x="925" fg:w="1"/><text x="76.5072%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.2572%" y="485" width="0.0824%" height="15" fill="rgb(221,66,28)" fg:x="925" fg:w="1"/><text x="76.5072%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2572%" y="469" width="0.0824%" height="15" fill="rgb(222,84,53)" fg:x="925" fg:w="1"/><text x="76.5072%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.2572%" y="453" width="0.0824%" height="15" fill="rgb(243,50,15)" fg:x="925" fg:w="1"/><text x="76.5072%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2572%" y="437" width="0.0824%" height="15" fill="rgb(208,184,23)" fg:x="925" fg:w="1"/><text x="76.5072%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2572%" y="421" width="0.0824%" height="15" fill="rgb(221,83,2)" fg:x="925" fg:w="1"/><text x="76.5072%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.2572%" y="405" width="0.0824%" height="15" fill="rgb(236,53,24)" fg:x="925" fg:w="1"/><text x="76.5072%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="76.4221%" y="549" width="0.0824%" height="15" fill="rgb(244,171,29)" fg:x="927" fg:w="1"/><text x="76.6721%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.4221%" y="533" width="0.0824%" height="15" fill="rgb(205,19,11)" fg:x="927" fg:w="1"/><text x="76.6721%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="76.5045%" y="549" width="0.0824%" height="15" fill="rgb(207,108,29)" fg:x="928" fg:w="1"/><text x="76.7545%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.5045%" y="533" width="0.0824%" height="15" fill="rgb(236,215,43)" fg:x="928" fg:w="1"/><text x="76.7545%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="76.5045%" y="517" width="0.0824%" height="15" fill="rgb(213,58,35)" fg:x="928" fg:w="1"/><text x="76.7545%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="76.5045%" y="501" width="0.0824%" height="15" fill="rgb(220,211,46)" fg:x="928" fg:w="1"/><text x="76.7545%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="76.5045%" y="485" width="0.0824%" height="15" fill="rgb(212,134,16)" fg:x="928" fg:w="1"/><text x="76.7545%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5045%" y="469" width="0.0824%" height="15" fill="rgb(232,90,44)" fg:x="928" fg:w="1"/><text x="76.7545%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5045%" y="453" width="0.0824%" height="15" fill="rgb(212,18,36)" fg:x="928" fg:w="1"/><text x="76.7545%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.5045%" y="437" width="0.0824%" height="15" fill="rgb(206,112,24)" fg:x="928" fg:w="1"/><text x="76.7545%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.5045%" y="421" width="0.0824%" height="15" fill="rgb(238,223,40)" fg:x="928" fg:w="1"/><text x="76.7545%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.5045%" y="405" width="0.0824%" height="15" fill="rgb(226,169,20)" fg:x="928" fg:w="1"/><text x="76.7545%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.5045%" y="389" width="0.0824%" height="15" fill="rgb(241,64,52)" fg:x="928" fg:w="1"/><text x="76.7545%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.5045%" y="373" width="0.0824%" height="15" fill="rgb(228,120,25)" fg:x="928" fg:w="1"/><text x="76.7545%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.5045%" y="357" width="0.0824%" height="15" fill="rgb(234,108,19)" fg:x="928" fg:w="1"/><text x="76.7545%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.5045%" y="341" width="0.0824%" height="15" fill="rgb(236,133,29)" fg:x="928" fg:w="1"/><text x="76.7545%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.5045%" y="325" width="0.0824%" height="15" fill="rgb(246,174,53)" fg:x="928" fg:w="1"/><text x="76.7545%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.5045%" y="309" width="0.0824%" height="15" fill="rgb(210,105,35)" fg:x="928" fg:w="1"/><text x="76.7545%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5045%" y="293" width="0.0824%" height="15" fill="rgb(225,27,26)" fg:x="928" fg:w="1"/><text x="76.7545%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="76.5870%" y="533" width="0.1649%" height="15" fill="rgb(233,2,39)" fg:x="929" fg:w="2"/><text x="76.8370%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6694%" y="517" width="0.0824%" height="15" fill="rgb(219,164,26)" fg:x="930" fg:w="1"/><text x="76.9194%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="76.7519%" y="453" width="0.1649%" height="15" fill="rgb(236,211,5)" fg:x="931" fg:w="2"/><text x="77.0019%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="76.7519%" y="437" width="0.1649%" height="15" fill="rgb(244,227,23)" fg:x="931" fg:w="2"/><text x="77.0019%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="76.7519%" y="421" width="0.1649%" height="15" fill="rgb(230,184,8)" fg:x="931" fg:w="2"/><text x="77.0019%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.7519%" y="405" width="0.1649%" height="15" fill="rgb(217,125,48)" fg:x="931" fg:w="2"/><text x="77.0019%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="76.7519%" y="485" width="0.2473%" height="15" fill="rgb(223,192,47)" fg:x="931" fg:w="3"/><text x="77.0019%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="76.7519%" y="469" width="0.2473%" height="15" fill="rgb(226,119,10)" fg:x="931" fg:w="3"/><text x="77.0019%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9167%" y="453" width="0.0824%" height="15" fill="rgb(221,49,29)" fg:x="933" fg:w="1"/><text x="77.1667%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.1641%" y="405" width="0.1649%" height="15" fill="rgb(217,205,19)" fg:x="936" fg:w="2"/><text x="77.4141%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.1641%" y="389" width="0.1649%" height="15" fill="rgb(242,104,7)" fg:x="936" fg:w="2"/><text x="77.4141%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.1641%" y="373" width="0.1649%" height="15" fill="rgb(209,154,48)" fg:x="936" fg:w="2"/><text x="77.4141%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.1641%" y="357" width="0.1649%" height="15" fill="rgb(219,213,46)" fg:x="936" fg:w="2"/><text x="77.4141%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.2465%" y="341" width="0.0824%" height="15" fill="rgb(229,105,38)" fg:x="937" fg:w="1"/><text x="77.4965%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.2465%" y="325" width="0.0824%" height="15" fill="rgb(205,151,5)" fg:x="937" fg:w="1"/><text x="77.4965%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.2465%" y="309" width="0.0824%" height="15" fill="rgb(248,115,40)" fg:x="937" fg:w="1"/><text x="77.4965%" y="319.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="77.1641%" y="421" width="0.3298%" height="15" fill="rgb(206,179,2)" fg:x="936" fg:w="4"/><text x="77.4141%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.3289%" y="405" width="0.1649%" height="15" fill="rgb(230,103,24)" fg:x="938" fg:w="2"/><text x="77.5789%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.3289%" y="389" width="0.1649%" height="15" fill="rgb(218,152,4)" fg:x="938" fg:w="2"/><text x="77.5789%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.3289%" y="373" width="0.1649%" height="15" fill="rgb(236,161,54)" fg:x="938" fg:w="2"/><text x="77.5789%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="77.4938%" y="405" width="0.1649%" height="15" fill="rgb(226,65,17)" fg:x="940" fg:w="2"/><text x="77.7438%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.6587%" y="405" width="0.1649%" height="15" fill="rgb(221,134,44)" fg:x="942" fg:w="2"/><text x="77.9087%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.7411%" y="389" width="0.0824%" height="15" fill="rgb(251,129,4)" fg:x="943" fg:w="1"/><text x="77.9911%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.7411%" y="373" width="0.0824%" height="15" fill="rgb(244,32,34)" fg:x="943" fg:w="1"/><text x="77.9911%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.7411%" y="357" width="0.0824%" height="15" fill="rgb(251,224,37)" fg:x="943" fg:w="1"/><text x="77.9911%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="77.8236%" y="389" width="0.2473%" height="15" fill="rgb(248,117,31)" fg:x="944" fg:w="3"/><text x="78.0736%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="77.8236%" y="373" width="0.2473%" height="15" fill="rgb(222,208,37)" fg:x="944" fg:w="3"/><text x="78.0736%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="77.8236%" y="357" width="0.2473%" height="15" fill="rgb(234,211,25)" fg:x="944" fg:w="3"/><text x="78.0736%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.9060%" y="341" width="0.1649%" height="15" fill="rgb(211,72,6)" fg:x="945" fg:w="2"/><text x="78.1560%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.9060%" y="325" width="0.1649%" height="15" fill="rgb(249,198,38)" fg:x="945" fg:w="2"/><text x="78.1560%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.9885%" y="309" width="0.0824%" height="15" fill="rgb(221,86,51)" fg:x="946" fg:w="1"/><text x="78.2385%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.0709%" y="389" width="0.0824%" height="15" fill="rgb(226,178,43)" fg:x="947" fg:w="1"/><text x="78.3209%" y="399.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (2 samples, 0.16%)</title><rect x="78.1533%" y="373" width="0.1649%" height="15" fill="rgb(215,145,7)" fg:x="948" fg:w="2"/><text x="78.4033%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.3182%" y="373" width="0.0824%" height="15" fill="rgb(250,202,36)" fg:x="950" fg:w="1"/><text x="78.5682%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.3182%" y="357" width="0.0824%" height="15" fill="rgb(215,86,13)" fg:x="950" fg:w="1"/><text x="78.5682%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.3182%" y="341" width="0.0824%" height="15" fill="rgb(221,134,12)" fg:x="950" fg:w="1"/><text x="78.5682%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.3182%" y="325" width="0.0824%" height="15" fill="rgb(213,82,10)" fg:x="950" fg:w="1"/><text x="78.5682%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.4007%" y="373" width="0.0824%" height="15" fill="rgb(214,142,0)" fg:x="951" fg:w="1"/><text x="78.6507%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.4007%" y="357" width="0.0824%" height="15" fill="rgb(205,145,9)" fg:x="951" fg:w="1"/><text x="78.6507%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.4007%" y="341" width="0.0824%" height="15" fill="rgb(244,214,8)" fg:x="951" fg:w="1"/><text x="78.6507%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4007%" y="325" width="0.0824%" height="15" fill="rgb(224,72,51)" fg:x="951" fg:w="1"/><text x="78.6507%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.4007%" y="309" width="0.0824%" height="15" fill="rgb(233,137,37)" fg:x="951" fg:w="1"/><text x="78.6507%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.4007%" y="293" width="0.0824%" height="15" fill="rgb(208,71,28)" fg:x="951" fg:w="1"/><text x="78.6507%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.4007%" y="277" width="0.0824%" height="15" fill="rgb(226,31,7)" fg:x="951" fg:w="1"/><text x="78.6507%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="78.1533%" y="389" width="0.4122%" height="15" fill="rgb(229,62,18)" fg:x="948" fg:w="5"/><text x="78.4033%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.4831%" y="373" width="0.0824%" height="15" fill="rgb(226,74,28)" fg:x="952" fg:w="1"/><text x="78.7331%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.4831%" y="357" width="0.0824%" height="15" fill="rgb(214,170,18)" fg:x="952" fg:w="1"/><text x="78.7331%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.82%)</title><rect x="77.8236%" y="405" width="0.8244%" height="15" fill="rgb(227,229,35)" fg:x="944" fg:w="10"/><text x="78.0736%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.5655%" y="389" width="0.0824%" height="15" fill="rgb(225,181,39)" fg:x="953" fg:w="1"/><text x="78.8155%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.24%)</title><rect x="77.4938%" y="421" width="1.2366%" height="15" fill="rgb(253,124,44)" fg:x="940" fg:w="15"/><text x="77.7438%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.6480%" y="405" width="0.0824%" height="15" fill="rgb(220,75,18)" fg:x="954" fg:w="1"/><text x="78.8980%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.81%)</title><rect x="76.9992%" y="437" width="1.8137%" height="15" fill="rgb(239,175,43)" fg:x="934" fg:w="22"/><text x="77.2492%" y="447.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.7304%" y="421" width="0.0824%" height="15" fill="rgb(228,112,50)" fg:x="955" fg:w="1"/><text x="78.9804%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.7304%" y="405" width="0.0824%" height="15" fill="rgb(232,105,36)" fg:x="955" fg:w="1"/><text x="78.9804%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.7304%" y="389" width="0.0824%" height="15" fill="rgb(227,137,47)" fg:x="955" fg:w="1"/><text x="78.9804%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.7304%" y="373" width="0.0824%" height="15" fill="rgb(217,51,9)" fg:x="955" fg:w="1"/><text x="78.9804%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.7304%" y="357" width="0.0824%" height="15" fill="rgb(245,117,0)" fg:x="955" fg:w="1"/><text x="78.9804%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.8129%" y="389" width="0.1649%" height="15" fill="rgb(252,52,30)" fg:x="956" fg:w="2"/><text x="79.0629%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.9777%" y="389" width="0.0824%" height="15" fill="rgb(227,85,33)" fg:x="958" fg:w="1"/><text x="79.2277%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.1426%" y="373" width="0.0824%" height="15" fill="rgb(220,157,20)" fg:x="960" fg:w="1"/><text x="79.3926%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1426%" y="357" width="0.0824%" height="15" fill="rgb(254,14,34)" fg:x="960" fg:w="1"/><text x="79.3926%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2251%" y="357" width="0.0824%" height="15" fill="rgb(216,103,41)" fg:x="961" fg:w="1"/><text x="79.4751%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.3075%" y="357" width="0.0824%" height="15" fill="rgb(245,221,9)" fg:x="962" fg:w="1"/><text x="79.5575%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="78.8129%" y="437" width="0.6595%" height="15" fill="rgb(254,136,47)" fg:x="956" fg:w="8"/><text x="79.0629%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.66%)</title><rect x="78.8129%" y="421" width="0.6595%" height="15" fill="rgb(235,71,46)" fg:x="956" fg:w="8"/><text x="79.0629%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="78.8129%" y="405" width="0.6595%" height="15" fill="rgb(242,154,29)" fg:x="956" fg:w="8"/><text x="79.0629%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="79.0602%" y="389" width="0.4122%" height="15" fill="rgb(210,65,31)" fg:x="959" fg:w="5"/><text x="79.3102%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="79.2251%" y="373" width="0.2473%" height="15" fill="rgb(244,9,50)" fg:x="961" fg:w="3"/><text x="79.4751%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="79.3899%" y="357" width="0.0824%" height="15" fill="rgb(215,141,38)" fg:x="963" fg:w="1"/><text x="79.6399%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.3899%" y="341" width="0.0824%" height="15" fill="rgb(241,129,6)" fg:x="963" fg:w="1"/><text x="79.6399%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3899%" y="325" width="0.0824%" height="15" fill="rgb(253,169,4)" fg:x="963" fg:w="1"/><text x="79.6399%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="79.4724%" y="421" width="0.0824%" height="15" fill="rgb(237,82,36)" fg:x="964" fg:w="1"/><text x="79.7224%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4724%" y="405" width="0.0824%" height="15" fill="rgb(209,171,11)" fg:x="964" fg:w="1"/><text x="79.7224%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5548%" y="389" width="0.0824%" height="15" fill="rgb(242,19,22)" fg:x="965" fg:w="1"/><text x="79.8048%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6373%" y="389" width="0.0824%" height="15" fill="rgb(251,122,24)" fg:x="966" fg:w="1"/><text x="79.8873%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.6373%" y="373" width="0.0824%" height="15" fill="rgb(226,166,42)" fg:x="966" fg:w="1"/><text x="79.8873%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6373%" y="357" width="0.0824%" height="15" fill="rgb(244,101,48)" fg:x="966" fg:w="1"/><text x="79.8873%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.6373%" y="341" width="0.0824%" height="15" fill="rgb(227,125,1)" fg:x="966" fg:w="1"/><text x="79.8873%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.8021%" y="357" width="0.0824%" height="15" fill="rgb(206,79,43)" fg:x="968" fg:w="1"/><text x="80.0521%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.8846%" y="341" width="0.1649%" height="15" fill="rgb(241,109,41)" fg:x="969" fg:w="2"/><text x="80.1346%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="80.0495%" y="341" width="0.1649%" height="15" fill="rgb(219,73,4)" fg:x="971" fg:w="2"/><text x="80.2995%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="80.0495%" y="325" width="0.1649%" height="15" fill="rgb(239,25,41)" fg:x="971" fg:w="2"/><text x="80.2995%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.1319%" y="309" width="0.0824%" height="15" fill="rgb(208,88,46)" fg:x="972" fg:w="1"/><text x="80.3819%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1319%" y="293" width="0.0824%" height="15" fill="rgb(239,184,9)" fg:x="972" fg:w="1"/><text x="80.3819%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3792%" y="309" width="0.0824%" height="15" fill="rgb(223,114,13)" fg:x="975" fg:w="1"/><text x="80.6292%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.3792%" y="293" width="0.0824%" height="15" fill="rgb(214,28,42)" fg:x="975" fg:w="1"/><text x="80.6292%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="80.4617%" y="293" width="0.3298%" height="15" fill="rgb(252,32,44)" fg:x="976" fg:w="4"/><text x="80.7117%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.6265%" y="277" width="0.1649%" height="15" fill="rgb(231,159,4)" fg:x="978" fg:w="2"/><text x="80.8765%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.7090%" y="261" width="0.0824%" height="15" fill="rgb(210,35,26)" fg:x="979" fg:w="1"/><text x="80.9590%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="80.3792%" y="325" width="0.4946%" height="15" fill="rgb(208,190,37)" fg:x="975" fg:w="6"/><text x="80.6292%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="80.4617%" y="309" width="0.4122%" height="15" fill="rgb(226,148,22)" fg:x="976" fg:w="5"/><text x="80.7117%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.7914%" y="293" width="0.0824%" height="15" fill="rgb(242,153,24)" fg:x="980" fg:w="1"/><text x="81.0414%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (15 samples, 1.24%)</title><rect x="79.7197%" y="373" width="1.2366%" height="15" fill="rgb(213,133,7)" fg:x="967" fg:w="15"/><text x="79.9697%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.07%)</title><rect x="79.8846%" y="357" width="1.0717%" height="15" fill="rgb(248,206,18)" fg:x="969" fg:w="13"/><text x="80.1346%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.74%)</title><rect x="80.2143%" y="341" width="0.7420%" height="15" fill="rgb(233,157,4)" fg:x="973" fg:w="9"/><text x="80.4643%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8739%" y="325" width="0.0824%" height="15" fill="rgb(249,179,32)" fg:x="981" fg:w="1"/><text x="81.1239%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9563%" y="373" width="0.0824%" height="15" fill="rgb(248,69,35)" fg:x="982" fg:w="1"/><text x="81.2063%" y="383.50"></text></g><g><title>engine::session::Session::flush (55 samples, 4.53%)</title><rect x="76.5870%" y="549" width="4.5342%" height="15" fill="rgb(249,158,38)" fg:x="929" fg:w="55"/><text x="76.8370%" y="559.50">engin..</text></g><g><title>engine::session::Session::save_changes (53 samples, 4.37%)</title><rect x="76.7519%" y="533" width="4.3693%" height="15" fill="rgb(223,18,43)" fg:x="931" fg:w="53"/><text x="77.0019%" y="543.50">engin..</text></g><g><title>engine::session::state::State::close (53 samples, 4.37%)</title><rect x="76.7519%" y="517" width="4.3693%" height="15" fill="rgb(238,42,45)" fg:x="931" fg:w="53"/><text x="77.0019%" y="527.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (53 samples, 4.37%)</title><rect x="76.7519%" y="501" width="4.3693%" height="15" fill="rgb(219,65,47)" fg:x="931" fg:w="53"/><text x="77.0019%" y="511.50">engin..</text></g><g><title>core::iter::adapters::try_process (50 samples, 4.12%)</title><rect x="76.9992%" y="485" width="4.1220%" height="15" fill="rgb(248,153,12)" fg:x="934" fg:w="50"/><text x="77.2492%" y="495.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 4.12%)</title><rect x="76.9992%" y="469" width="4.1220%" height="15" fill="rgb(240,118,4)" fg:x="934" fg:w="50"/><text x="77.2492%" y="479.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (50 samples, 4.12%)</title><rect x="76.9992%" y="453" width="4.1220%" height="15" fill="rgb(250,96,34)" fg:x="934" fg:w="50"/><text x="77.2492%" y="463.50">engi..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.65%)</title><rect x="79.4724%" y="437" width="1.6488%" height="15" fill="rgb(221,15,4)" fg:x="964" fg:w="20"/><text x="79.7224%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.57%)</title><rect x="79.5548%" y="421" width="1.5664%" height="15" fill="rgb(217,149,33)" fg:x="965" fg:w="19"/><text x="79.8048%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.57%)</title><rect x="79.5548%" y="405" width="1.5664%" height="15" fill="rgb(213,58,29)" fg:x="965" fg:w="19"/><text x="79.8048%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.40%)</title><rect x="79.7197%" y="389" width="1.4015%" height="15" fill="rgb(236,218,9)" fg:x="967" fg:w="17"/><text x="79.9697%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0387%" y="373" width="0.0824%" height="15" fill="rgb(248,40,19)" fg:x="983" fg:w="1"/><text x="81.2887%" y="383.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="81.1212%" y="549" width="0.0824%" height="15" fill="rgb(212,17,6)" fg:x="984" fg:w="1"/><text x="81.3712%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="81.1212%" y="533" width="0.0824%" height="15" fill="rgb(206,212,20)" fg:x="984" fg:w="1"/><text x="81.3712%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="81.1212%" y="517" width="0.0824%" height="15" fill="rgb(229,80,37)" fg:x="984" fg:w="1"/><text x="81.3712%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.2036%" y="517" width="0.0824%" height="15" fill="rgb(253,8,37)" fg:x="985" fg:w="1"/><text x="81.4536%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2861%" y="501" width="0.0824%" height="15" fill="rgb(215,16,43)" fg:x="986" fg:w="1"/><text x="81.5361%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2861%" y="485" width="0.0824%" height="15" fill="rgb(236,219,16)" fg:x="986" fg:w="1"/><text x="81.5361%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2861%" y="469" width="0.0824%" height="15" fill="rgb(251,0,3)" fg:x="986" fg:w="1"/><text x="81.5361%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2861%" y="453" width="0.0824%" height="15" fill="rgb(207,133,37)" fg:x="986" fg:w="1"/><text x="81.5361%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3685%" y="501" width="0.0824%" height="15" fill="rgb(250,143,20)" fg:x="987" fg:w="1"/><text x="81.6185%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3685%" y="485" width="0.0824%" height="15" fill="rgb(242,19,50)" fg:x="987" fg:w="1"/><text x="81.6185%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.3685%" y="469" width="0.0824%" height="15" fill="rgb(206,124,43)" fg:x="987" fg:w="1"/><text x="81.6185%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.3685%" y="453" width="0.0824%" height="15" fill="rgb(229,4,38)" fg:x="987" fg:w="1"/><text x="81.6185%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.3685%" y="437" width="0.0824%" height="15" fill="rgb(247,220,45)" fg:x="987" fg:w="1"/><text x="81.6185%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.3685%" y="421" width="0.0824%" height="15" fill="rgb(247,195,0)" fg:x="987" fg:w="1"/><text x="81.6185%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.3685%" y="405" width="0.0824%" height="15" fill="rgb(252,12,19)" fg:x="987" fg:w="1"/><text x="81.6185%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.3685%" y="389" width="0.0824%" height="15" fill="rgb(222,49,50)" fg:x="987" fg:w="1"/><text x="81.6185%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.25%)</title><rect x="81.2861%" y="517" width="0.2473%" height="15" fill="rgb(209,157,28)" fg:x="986" fg:w="3"/><text x="81.5361%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4509%" y="501" width="0.0824%" height="15" fill="rgb(238,174,24)" fg:x="988" fg:w="1"/><text x="81.7009%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4509%" y="485" width="0.0824%" height="15" fill="rgb(224,17,28)" fg:x="988" fg:w="1"/><text x="81.7009%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.4509%" y="469" width="0.0824%" height="15" fill="rgb(249,7,29)" fg:x="988" fg:w="1"/><text x="81.7009%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4509%" y="453" width="0.0824%" height="15" fill="rgb(243,178,4)" fg:x="988" fg:w="1"/><text x="81.7009%" y="463.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="81.5334%" y="501" width="0.0824%" height="15" fill="rgb(246,138,35)" fg:x="989" fg:w="1"/><text x="81.7834%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5334%" y="485" width="0.0824%" height="15" fill="rgb(251,85,18)" fg:x="989" fg:w="1"/><text x="81.7834%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5334%" y="469" width="0.0824%" height="15" fill="rgb(254,55,9)" fg:x="989" fg:w="1"/><text x="81.7834%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="81.5334%" y="517" width="0.1649%" height="15" fill="rgb(248,4,50)" fg:x="989" fg:w="2"/><text x="81.7834%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="81.6158%" y="501" width="0.0824%" height="15" fill="rgb(215,208,14)" fg:x="990" fg:w="1"/><text x="81.8658%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="81.6158%" y="485" width="0.0824%" height="15" fill="rgb(218,37,18)" fg:x="990" fg:w="1"/><text x="81.8658%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.6983%" y="405" width="0.0824%" height="15" fill="rgb(206,104,13)" fg:x="991" fg:w="1"/><text x="81.9483%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6983%" y="389" width="0.0824%" height="15" fill="rgb(248,94,22)" fg:x="991" fg:w="1"/><text x="81.9483%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.25%)</title><rect x="81.6983%" y="485" width="0.2473%" height="15" fill="rgb(235,42,46)" fg:x="991" fg:w="3"/><text x="81.9483%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="81.6983%" y="469" width="0.2473%" height="15" fill="rgb(220,228,48)" fg:x="991" fg:w="3"/><text x="81.9483%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="81.6983%" y="453" width="0.2473%" height="15" fill="rgb(216,58,12)" fg:x="991" fg:w="3"/><text x="81.9483%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="81.6983%" y="437" width="0.2473%" height="15" fill="rgb(223,97,52)" fg:x="991" fg:w="3"/><text x="81.9483%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="81.6983%" y="421" width="0.2473%" height="15" fill="rgb(208,159,17)" fg:x="991" fg:w="3"/><text x="81.9483%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.7807%" y="405" width="0.1649%" height="15" fill="rgb(215,172,9)" fg:x="992" fg:w="2"/><text x="82.0307%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.7807%" y="389" width="0.1649%" height="15" fill="rgb(252,175,30)" fg:x="992" fg:w="2"/><text x="82.0307%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="81.6983%" y="501" width="0.3298%" height="15" fill="rgb(209,159,10)" fg:x="991" fg:w="4"/><text x="81.9483%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="81.9456%" y="485" width="0.0824%" height="15" fill="rgb(229,73,51)" fg:x="994" fg:w="1"/><text x="82.1956%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9456%" y="469" width="0.0824%" height="15" fill="rgb(208,212,43)" fg:x="994" fg:w="1"/><text x="82.1956%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1105%" y="437" width="0.0824%" height="15" fill="rgb(254,123,53)" fg:x="996" fg:w="1"/><text x="82.3605%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.1105%" y="469" width="0.1649%" height="15" fill="rgb(254,128,49)" fg:x="996" fg:w="2"/><text x="82.3605%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.1105%" y="453" width="0.1649%" height="15" fill="rgb(246,16,16)" fg:x="996" fg:w="2"/><text x="82.3605%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.1929%" y="437" width="0.0824%" height="15" fill="rgb(209,200,1)" fg:x="997" fg:w="1"/><text x="82.4429%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.15%)</title><rect x="81.2036%" y="533" width="1.1542%" height="15" fill="rgb(235,9,3)" fg:x="985" fg:w="14"/><text x="81.4536%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.66%)</title><rect x="81.6983%" y="517" width="0.6595%" height="15" fill="rgb(233,121,54)" fg:x="991" fg:w="8"/><text x="81.9483%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.33%)</title><rect x="82.0280%" y="501" width="0.3298%" height="15" fill="rgb(236,80,25)" fg:x="995" fg:w="4"/><text x="82.2780%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="82.0280%" y="485" width="0.3298%" height="15" fill="rgb(220,44,24)" fg:x="995" fg:w="4"/><text x="82.2780%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2754%" y="469" width="0.0824%" height="15" fill="rgb(236,225,16)" fg:x="998" fg:w="1"/><text x="82.5254%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2754%" y="453" width="0.0824%" height="15" fill="rgb(237,140,0)" fg:x="998" fg:w="1"/><text x="82.5254%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2754%" y="437" width="0.0824%" height="15" fill="rgb(243,225,53)" fg:x="998" fg:w="1"/><text x="82.5254%" y="447.50"></text></g><g><title>plugins_core::build::Build::save (16 samples, 1.32%)</title><rect x="81.2036%" y="549" width="1.3190%" height="15" fill="rgb(240,140,30)" fg:x="985" fg:w="16"/><text x="81.4536%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="82.3578%" y="533" width="0.1649%" height="15" fill="rgb(217,51,16)" fg:x="999" fg:w="2"/><text x="82.6078%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4402%" y="517" width="0.0824%" height="15" fill="rgb(245,75,50)" fg:x="1000" fg:w="1"/><text x="82.6902%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="82.5227%" y="517" width="0.0824%" height="15" fill="rgb(208,174,22)" fg:x="1001" fg:w="1"/><text x="82.7727%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (3 samples, 0.25%)</title><rect x="82.5227%" y="549" width="0.2473%" height="15" fill="rgb(219,98,50)" fg:x="1001" fg:w="3"/><text x="82.7727%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.25%)</title><rect x="82.5227%" y="533" width="0.2473%" height="15" fill="rgb(243,138,3)" fg:x="1001" fg:w="3"/><text x="82.7727%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="82.6051%" y="517" width="0.1649%" height="15" fill="rgb(243,132,26)" fg:x="1002" fg:w="2"/><text x="82.8551%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="82.6051%" y="501" width="0.1649%" height="15" fill="rgb(250,201,8)" fg:x="1002" fg:w="2"/><text x="82.8551%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.6051%" y="485" width="0.1649%" height="15" fill="rgb(213,91,26)" fg:x="1002" fg:w="2"/><text x="82.8551%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.6051%" y="469" width="0.1649%" height="15" fill="rgb(229,117,1)" fg:x="1002" fg:w="2"/><text x="82.8551%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6876%" y="453" width="0.0824%" height="15" fill="rgb(229,24,6)" fg:x="1003" fg:w="1"/><text x="82.9376%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.7700%" y="485" width="0.0824%" height="15" fill="rgb(206,69,11)" fg:x="1004" fg:w="1"/><text x="83.0200%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.7700%" y="469" width="0.0824%" height="15" fill="rgb(234,111,34)" fg:x="1004" fg:w="1"/><text x="83.0200%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="82.8524%" y="469" width="0.0824%" height="15" fill="rgb(213,187,51)" fg:x="1005" fg:w="1"/><text x="83.1024%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8524%" y="453" width="0.0824%" height="15" fill="rgb(207,45,11)" fg:x="1005" fg:w="1"/><text x="83.1024%" y="463.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (3 samples, 0.25%)</title><rect x="82.7700%" y="549" width="0.2473%" height="15" fill="rgb(225,151,47)" fg:x="1004" fg:w="3"/><text x="83.0200%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.25%)</title><rect x="82.7700%" y="533" width="0.2473%" height="15" fill="rgb(211,226,5)" fg:x="1004" fg:w="3"/><text x="83.0200%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.25%)</title><rect x="82.7700%" y="517" width="0.2473%" height="15" fill="rgb(214,83,52)" fg:x="1004" fg:w="3"/><text x="83.0200%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="82.7700%" y="501" width="0.2473%" height="15" fill="rgb(229,49,53)" fg:x="1004" fg:w="3"/><text x="83.0200%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="82.8524%" y="485" width="0.1649%" height="15" fill="rgb(246,8,28)" fg:x="1005" fg:w="2"/><text x="83.1024%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9349%" y="469" width="0.0824%" height="15" fill="rgb(207,28,41)" fg:x="1006" fg:w="1"/><text x="83.1849%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.9349%" y="453" width="0.0824%" height="15" fill="rgb(254,22,25)" fg:x="1006" fg:w="1"/><text x="83.1849%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.9349%" y="437" width="0.0824%" height="15" fill="rgb(209,120,42)" fg:x="1006" fg:w="1"/><text x="83.1849%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.9349%" y="421" width="0.0824%" height="15" fill="rgb(216,194,18)" fg:x="1006" fg:w="1"/><text x="83.1849%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9349%" y="405" width="0.0824%" height="15" fill="rgb(213,70,17)" fg:x="1006" fg:w="1"/><text x="83.1849%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="83.0173%" y="533" width="0.0824%" height="15" fill="rgb(228,66,19)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.0173%" y="517" width="0.0824%" height="15" fill="rgb(236,221,54)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="83.0173%" y="501" width="0.0824%" height="15" fill="rgb(207,175,15)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0173%" y="485" width="0.0824%" height="15" fill="rgb(234,76,8)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0173%" y="469" width="0.0824%" height="15" fill="rgb(243,106,0)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.0173%" y="453" width="0.0824%" height="15" fill="rgb(208,48,19)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0173%" y="437" width="0.0824%" height="15" fill="rgb(251,50,29)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0173%" y="421" width="0.0824%" height="15" fill="rgb(222,31,49)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0173%" y="405" width="0.0824%" height="15" fill="rgb(232,33,18)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.0173%" y="389" width="0.0824%" height="15" fill="rgb(209,1,44)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0173%" y="373" width="0.0824%" height="15" fill="rgb(211,7,1)" fg:x="1007" fg:w="1"/><text x="83.2673%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0998%" y="469" width="0.0824%" height="15" fill="rgb(224,111,27)" fg:x="1008" fg:w="1"/><text x="83.3498%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0998%" y="453" width="0.0824%" height="15" fill="rgb(252,195,39)" fg:x="1008" fg:w="1"/><text x="83.3498%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0998%" y="437" width="0.0824%" height="15" fill="rgb(237,198,5)" fg:x="1008" fg:w="1"/><text x="83.3498%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="83.0998%" y="485" width="0.1649%" height="15" fill="rgb(232,148,1)" fg:x="1008" fg:w="2"/><text x="83.3498%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.1822%" y="469" width="0.0824%" height="15" fill="rgb(249,41,3)" fg:x="1009" fg:w="1"/><text x="83.4322%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1822%" y="453" width="0.0824%" height="15" fill="rgb(215,14,33)" fg:x="1009" fg:w="1"/><text x="83.4322%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.1822%" y="437" width="0.0824%" height="15" fill="rgb(209,146,24)" fg:x="1009" fg:w="1"/><text x="83.4322%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1822%" y="421" width="0.0824%" height="15" fill="rgb(219,51,47)" fg:x="1009" fg:w="1"/><text x="83.4322%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.1822%" y="405" width="0.0824%" height="15" fill="rgb(234,217,40)" fg:x="1009" fg:w="1"/><text x="83.4322%" y="415.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.41%)</title><rect x="83.0173%" y="549" width="0.4122%" height="15" fill="rgb(228,34,26)" fg:x="1007" fg:w="5"/><text x="83.2673%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.33%)</title><rect x="83.0998%" y="533" width="0.3298%" height="15" fill="rgb(224,50,29)" fg:x="1008" fg:w="4"/><text x="83.3498%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.33%)</title><rect x="83.0998%" y="517" width="0.3298%" height="15" fill="rgb(205,79,51)" fg:x="1008" fg:w="4"/><text x="83.3498%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="83.0998%" y="501" width="0.3298%" height="15" fill="rgb(218,136,28)" fg:x="1008" fg:w="4"/><text x="83.3498%" y="511.50"></text></g><g><title>kernel::model::props::Props::u64_property (2 samples, 0.16%)</title><rect x="83.2646%" y="485" width="0.1649%" height="15" fill="rgb(220,150,10)" fg:x="1010" fg:w="2"/><text x="83.5146%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.3471%" y="469" width="0.0824%" height="15" fill="rgb(242,158,47)" fg:x="1011" fg:w="1"/><text x="83.5971%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.3471%" y="453" width="0.0824%" height="15" fill="rgb(209,68,0)" fg:x="1011" fg:w="1"/><text x="83.5971%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (87 samples, 7.17%)</title><rect x="76.3397%" y="565" width="7.1723%" height="15" fill="rgb(208,13,41)" fg:x="926" fg:w="87"/><text x="76.5897%" y="575.50">plugins_co..</text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="83.4295%" y="549" width="0.0824%" height="15" fill="rgb(226,201,7)" fg:x="1012" fg:w="1"/><text x="83.6795%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="83.4295%" y="533" width="0.0824%" height="15" fill="rgb(236,103,26)" fg:x="1012" fg:w="1"/><text x="83.6795%" y="543.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4295%" y="517" width="0.0824%" height="15" fill="rgb(243,162,8)" fg:x="1012" fg:w="1"/><text x="83.6795%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.4295%" y="501" width="0.0824%" height="15" fill="rgb(237,225,11)" fg:x="1012" fg:w="1"/><text x="83.6795%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.5120%" y="501" width="0.0824%" height="15" fill="rgb(247,186,32)" fg:x="1013" fg:w="1"/><text x="83.7620%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="83.5944%" y="469" width="0.0824%" height="15" fill="rgb(215,26,28)" fg:x="1014" fg:w="1"/><text x="83.8444%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5944%" y="453" width="0.0824%" height="15" fill="rgb(208,121,6)" fg:x="1014" fg:w="1"/><text x="83.8444%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5944%" y="437" width="0.0824%" height="15" fill="rgb(225,91,3)" fg:x="1014" fg:w="1"/><text x="83.8444%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.5944%" y="421" width="0.0824%" height="15" fill="rgb(246,119,36)" fg:x="1014" fg:w="1"/><text x="83.8444%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5944%" y="405" width="0.0824%" height="15" fill="rgb(254,173,2)" fg:x="1014" fg:w="1"/><text x="83.8444%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.5944%" y="389" width="0.0824%" height="15" fill="rgb(209,87,54)" fg:x="1014" fg:w="1"/><text x="83.8444%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.5944%" y="373" width="0.0824%" height="15" fill="rgb(223,216,20)" fg:x="1014" fg:w="1"/><text x="83.8444%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="83.5944%" y="485" width="0.1649%" height="15" fill="rgb(220,31,8)" fg:x="1014" fg:w="2"/><text x="83.8444%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6768%" y="469" width="0.0824%" height="15" fill="rgb(220,185,15)" fg:x="1015" fg:w="1"/><text x="83.9268%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6768%" y="453" width="0.0824%" height="15" fill="rgb(247,190,50)" fg:x="1015" fg:w="1"/><text x="83.9268%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.6768%" y="437" width="0.0824%" height="15" fill="rgb(239,173,47)" fg:x="1015" fg:w="1"/><text x="83.9268%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6768%" y="421" width="0.0824%" height="15" fill="rgb(218,190,42)" fg:x="1015" fg:w="1"/><text x="83.9268%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.6768%" y="405" width="0.0824%" height="15" fill="rgb(251,207,16)" fg:x="1015" fg:w="1"/><text x="83.9268%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::new_from_entity (1 samples, 0.08%)</title><rect x="83.7593%" y="485" width="0.0824%" height="15" fill="rgb(222,199,47)" fg:x="1016" fg:w="1"/><text x="84.0093%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.8417%" y="453" width="0.0824%" height="15" fill="rgb(245,190,7)" fg:x="1017" fg:w="1"/><text x="84.0917%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.58%)</title><rect x="83.5120%" y="517" width="0.5771%" height="15" fill="rgb(239,85,38)" fg:x="1013" fg:w="7"/><text x="83.7620%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="83.5944%" y="501" width="0.4946%" height="15" fill="rgb(229,69,51)" fg:x="1014" fg:w="6"/><text x="83.8444%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.25%)</title><rect x="83.8417%" y="485" width="0.2473%" height="15" fill="rgb(231,104,51)" fg:x="1017" fg:w="3"/><text x="84.0917%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="83.8417%" y="469" width="0.2473%" height="15" fill="rgb(235,49,4)" fg:x="1017" fg:w="3"/><text x="84.0917%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="83.9242%" y="453" width="0.1649%" height="15" fill="rgb(246,166,20)" fg:x="1018" fg:w="2"/><text x="84.1742%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.9242%" y="437" width="0.1649%" height="15" fill="rgb(230,119,37)" fg:x="1018" fg:w="2"/><text x="84.1742%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="83.9242%" y="421" width="0.1649%" height="15" fill="rgb(234,77,34)" fg:x="1018" fg:w="2"/><text x="84.1742%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.9242%" y="405" width="0.1649%" height="15" fill="rgb(211,222,33)" fg:x="1018" fg:w="2"/><text x="84.1742%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0066%" y="389" width="0.0824%" height="15" fill="rgb(226,45,42)" fg:x="1019" fg:w="1"/><text x="84.2566%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.0066%" y="373" width="0.0824%" height="15" fill="rgb(215,174,28)" fg:x="1019" fg:w="1"/><text x="84.2566%" y="383.50"></text></g><g><title>plugins_core::build::Build::save (8 samples, 0.66%)</title><rect x="83.5120%" y="533" width="0.6595%" height="15" fill="rgb(254,173,49)" fg:x="1013" fg:w="8"/><text x="83.7620%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.0890%" y="517" width="0.0824%" height="15" fill="rgb(229,191,6)" fg:x="1020" fg:w="1"/><text x="84.3390%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0890%" y="501" width="0.0824%" height="15" fill="rgb(212,145,22)" fg:x="1020" fg:w="1"/><text x="84.3390%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0890%" y="485" width="0.0824%" height="15" fill="rgb(226,6,51)" fg:x="1020" fg:w="1"/><text x="84.3390%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.0890%" y="469" width="0.0824%" height="15" fill="rgb(227,128,8)" fg:x="1020" fg:w="1"/><text x="84.3390%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0890%" y="453" width="0.0824%" height="15" fill="rgb(205,24,10)" fg:x="1020" fg:w="1"/><text x="84.3390%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.0890%" y="437" width="0.0824%" height="15" fill="rgb(217,147,27)" fg:x="1020" fg:w="1"/><text x="84.3390%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0890%" y="421" width="0.0824%" height="15" fill="rgb(250,82,42)" fg:x="1020" fg:w="1"/><text x="84.3390%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (9 samples, 0.74%)</title><rect x="83.5120%" y="565" width="0.7420%" height="15" fill="rgb(248,93,17)" fg:x="1013" fg:w="9"/><text x="83.7620%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.74%)</title><rect x="83.5120%" y="549" width="0.7420%" height="15" fill="rgb(254,212,40)" fg:x="1013" fg:w="9"/><text x="83.7620%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="84.1715%" y="533" width="0.0824%" height="15" fill="rgb(229,209,2)" fg:x="1021" fg:w="1"/><text x="84.4215%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.1715%" y="517" width="0.0824%" height="15" fill="rgb(211,50,43)" fg:x="1021" fg:w="1"/><text x="84.4215%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1715%" y="501" width="0.0824%" height="15" fill="rgb(245,196,29)" fg:x="1021" fg:w="1"/><text x="84.4215%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1715%" y="485" width="0.0824%" height="15" fill="rgb(216,132,13)" fg:x="1021" fg:w="1"/><text x="84.4215%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1715%" y="469" width="0.0824%" height="15" fill="rgb(251,108,21)" fg:x="1021" fg:w="1"/><text x="84.4215%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1715%" y="453" width="0.0824%" height="15" fill="rgb(229,174,54)" fg:x="1021" fg:w="1"/><text x="84.4215%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="84.2539%" y="533" width="0.0824%" height="15" fill="rgb(211,175,47)" fg:x="1022" fg:w="1"/><text x="84.5039%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="84.2539%" y="517" width="0.0824%" height="15" fill="rgb(234,5,37)" fg:x="1022" fg:w="1"/><text x="84.5039%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.2539%" y="501" width="0.0824%" height="15" fill="rgb(244,150,43)" fg:x="1022" fg:w="1"/><text x="84.5039%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.2539%" y="485" width="0.0824%" height="15" fill="rgb(242,172,38)" fg:x="1022" fg:w="1"/><text x="84.5039%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="84.2539%" y="549" width="0.1649%" height="15" fill="rgb(205,27,8)" fg:x="1022" fg:w="2"/><text x="84.5039%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3364%" y="533" width="0.0824%" height="15" fill="rgb(217,57,3)" fg:x="1023" fg:w="1"/><text x="84.5864%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3364%" y="517" width="0.0824%" height="15" fill="rgb(242,21,38)" fg:x="1023" fg:w="1"/><text x="84.5864%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.3364%" y="501" width="0.0824%" height="15" fill="rgb(209,64,43)" fg:x="1023" fg:w="1"/><text x="84.5864%" y="511.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="84.4188%" y="549" width="0.0824%" height="15" fill="rgb(222,2,46)" fg:x="1024" fg:w="1"/><text x="84.6688%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="84.4188%" y="533" width="0.0824%" height="15" fill="rgb(218,19,44)" fg:x="1024" fg:w="1"/><text x="84.6688%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="84.4188%" y="517" width="0.0824%" height="15" fill="rgb(240,203,42)" fg:x="1024" fg:w="1"/><text x="84.6688%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.5837%" y="517" width="0.0824%" height="15" fill="rgb(229,23,45)" fg:x="1026" fg:w="1"/><text x="84.8337%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5837%" y="501" width="0.0824%" height="15" fill="rgb(205,228,51)" fg:x="1026" fg:w="1"/><text x="84.8337%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5837%" y="485" width="0.0824%" height="15" fill="rgb(239,36,20)" fg:x="1026" fg:w="1"/><text x="84.8337%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5837%" y="469" width="0.0824%" height="15" fill="rgb(248,172,27)" fg:x="1026" fg:w="1"/><text x="84.8337%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5837%" y="453" width="0.0824%" height="15" fill="rgb(244,55,32)" fg:x="1026" fg:w="1"/><text x="84.8337%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.5837%" y="437" width="0.0824%" height="15" fill="rgb(215,97,16)" fg:x="1026" fg:w="1"/><text x="84.8337%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.6661%" y="501" width="0.0824%" height="15" fill="rgb(224,80,29)" fg:x="1027" fg:w="1"/><text x="84.9161%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="84.6661%" y="485" width="0.0824%" height="15" fill="rgb(216,93,47)" fg:x="1027" fg:w="1"/><text x="84.9161%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.6661%" y="469" width="0.0824%" height="15" fill="rgb(238,159,10)" fg:x="1027" fg:w="1"/><text x="84.9161%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="84.7486%" y="469" width="0.0824%" height="15" fill="rgb(223,98,29)" fg:x="1028" fg:w="1"/><text x="84.9986%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.7486%" y="453" width="0.0824%" height="15" fill="rgb(210,176,23)" fg:x="1028" fg:w="1"/><text x="84.9986%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7486%" y="437" width="0.0824%" height="15" fill="rgb(242,162,27)" fg:x="1028" fg:w="1"/><text x="84.9986%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.7486%" y="421" width="0.0824%" height="15" fill="rgb(245,109,32)" fg:x="1028" fg:w="1"/><text x="84.9986%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7486%" y="405" width="0.0824%" height="15" fill="rgb(248,87,8)" fg:x="1028" fg:w="1"/><text x="84.9986%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7486%" y="389" width="0.0824%" height="15" fill="rgb(250,160,50)" fg:x="1028" fg:w="1"/><text x="84.9986%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8310%" y="469" width="0.0824%" height="15" fill="rgb(246,165,25)" fg:x="1029" fg:w="1"/><text x="85.0810%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9134%" y="469" width="0.0824%" height="15" fill="rgb(249,219,3)" fg:x="1030" fg:w="1"/><text x="85.1634%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9134%" y="453" width="0.0824%" height="15" fill="rgb(226,66,5)" fg:x="1030" fg:w="1"/><text x="85.1634%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.58%)</title><rect x="84.5012%" y="533" width="0.5771%" height="15" fill="rgb(250,220,43)" fg:x="1025" fg:w="7"/><text x="84.7512%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="84.6661%" y="517" width="0.4122%" height="15" fill="rgb(225,111,31)" fg:x="1027" fg:w="5"/><text x="84.9161%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.33%)</title><rect x="84.7486%" y="501" width="0.3298%" height="15" fill="rgb(248,106,18)" fg:x="1028" fg:w="4"/><text x="84.9986%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="84.7486%" y="485" width="0.3298%" height="15" fill="rgb(220,226,45)" fg:x="1028" fg:w="4"/><text x="84.9986%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9959%" y="469" width="0.0824%" height="15" fill="rgb(208,58,53)" fg:x="1031" fg:w="1"/><text x="85.2459%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9959%" y="453" width="0.0824%" height="15" fill="rgb(209,133,1)" fg:x="1031" fg:w="1"/><text x="85.2459%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0783%" y="533" width="0.0824%" height="15" fill="rgb(228,216,27)" fg:x="1032" fg:w="1"/><text x="85.3283%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0783%" y="517" width="0.0824%" height="15" fill="rgb(238,155,2)" fg:x="1032" fg:w="1"/><text x="85.3283%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0783%" y="501" width="0.0824%" height="15" fill="rgb(244,99,37)" fg:x="1032" fg:w="1"/><text x="85.3283%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0783%" y="485" width="0.0824%" height="15" fill="rgb(254,32,3)" fg:x="1032" fg:w="1"/><text x="85.3283%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="85.1608%" y="533" width="0.0824%" height="15" fill="rgb(234,46,50)" fg:x="1033" fg:w="1"/><text x="85.4108%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1608%" y="517" width="0.0824%" height="15" fill="rgb(232,118,51)" fg:x="1033" fg:w="1"/><text x="85.4108%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (177 samples, 14.59%)</title><rect x="70.7337%" y="581" width="14.5919%" height="15" fill="rgb(207,24,32)" fg:x="858" fg:w="177"/><text x="70.9837%" y="591.50">&lt;tests::HoldingKeyInVe..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (13 samples, 1.07%)</title><rect x="84.2539%" y="565" width="1.0717%" height="15" fill="rgb(208,107,43)" fg:x="1022" fg:w="13"/><text x="84.5039%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (10 samples, 0.82%)</title><rect x="84.5012%" y="549" width="0.8244%" height="15" fill="rgb(231,28,9)" fg:x="1025" fg:w="10"/><text x="84.7512%" y="559.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="85.2432%" y="533" width="0.0824%" height="15" fill="rgb(241,204,15)" fg:x="1034" fg:w="1"/><text x="85.4932%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.2432%" y="517" width="0.0824%" height="15" fill="rgb(214,54,15)" fg:x="1034" fg:w="1"/><text x="85.4932%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="85.3256%" y="581" width="0.0824%" height="15" fill="rgb(230,12,28)" fg:x="1035" fg:w="1"/><text x="85.5756%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.3256%" y="565" width="0.0824%" height="15" fill="rgb(221,171,5)" fg:x="1035" fg:w="1"/><text x="85.5756%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.4081%" y="565" width="0.0824%" height="15" fill="rgb(207,72,25)" fg:x="1036" fg:w="1"/><text x="85.6581%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4081%" y="549" width="0.0824%" height="15" fill="rgb(249,79,37)" fg:x="1036" fg:w="1"/><text x="85.6581%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.5730%" y="533" width="0.0824%" height="15" fill="rgb(209,98,49)" fg:x="1038" fg:w="1"/><text x="85.8230%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::array::iter::IntoIter&lt;alloc::rc::Rc&lt;dyn kernel::plugins::mw::Middleware&gt;,1_usize&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="85.5730%" y="517" width="0.0824%" height="15" fill="rgb(221,62,13)" fg:x="1038" fg:w="1"/><text x="85.8230%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.6554%" y="533" width="0.0824%" height="15" fill="rgb(223,39,6)" fg:x="1039" fg:w="1"/><text x="85.9054%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="85.6554%" y="517" width="0.0824%" height="15" fill="rgb(246,163,20)" fg:x="1039" fg:w="1"/><text x="85.9054%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="85.6554%" y="501" width="0.0824%" height="15" fill="rgb(211,111,29)" fg:x="1039" fg:w="1"/><text x="85.9054%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.25%)</title><rect x="85.8203%" y="469" width="0.2473%" height="15" fill="rgb(243,118,5)" fg:x="1041" fg:w="3"/><text x="86.0703%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.9027%" y="453" width="0.1649%" height="15" fill="rgb(240,144,52)" fg:x="1042" fg:w="2"/><text x="86.1527%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.9027%" y="437" width="0.1649%" height="15" fill="rgb(244,158,36)" fg:x="1042" fg:w="2"/><text x="86.1527%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.9852%" y="421" width="0.0824%" height="15" fill="rgb(241,109,37)" fg:x="1043" fg:w="1"/><text x="86.2352%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9852%" y="405" width="0.0824%" height="15" fill="rgb(213,95,32)" fg:x="1043" fg:w="1"/><text x="86.2352%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.0676%" y="405" width="0.1649%" height="15" fill="rgb(252,193,9)" fg:x="1044" fg:w="2"/><text x="86.3176%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.1500%" y="389" width="0.0824%" height="15" fill="rgb(225,213,21)" fg:x="1045" fg:w="1"/><text x="86.4000%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.1500%" y="373" width="0.0824%" height="15" fill="rgb(220,172,46)" fg:x="1045" fg:w="1"/><text x="86.4000%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.2325%" y="373" width="0.0824%" height="15" fill="rgb(235,75,41)" fg:x="1046" fg:w="1"/><text x="86.4825%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="86.0676%" y="437" width="0.3298%" height="15" fill="rgb(213,86,9)" fg:x="1044" fg:w="4"/><text x="86.3176%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="86.0676%" y="421" width="0.3298%" height="15" fill="rgb(238,127,51)" fg:x="1044" fg:w="4"/><text x="86.3176%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.2325%" y="405" width="0.1649%" height="15" fill="rgb(215,2,54)" fg:x="1046" fg:w="2"/><text x="86.4825%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.2325%" y="389" width="0.1649%" height="15" fill="rgb(245,80,6)" fg:x="1046" fg:w="2"/><text x="86.4825%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.3149%" y="373" width="0.0824%" height="15" fill="rgb(233,106,42)" fg:x="1047" fg:w="1"/><text x="86.5649%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.3974%" y="437" width="0.1649%" height="15" fill="rgb(244,86,38)" fg:x="1048" fg:w="2"/><text x="86.6474%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.3974%" y="421" width="0.1649%" height="15" fill="rgb(242,167,7)" fg:x="1048" fg:w="2"/><text x="86.6474%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.3974%" y="405" width="0.1649%" height="15" fill="rgb(218,216,3)" fg:x="1048" fg:w="2"/><text x="86.6474%" y="415.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="86.5622%" y="421" width="0.0824%" height="15" fill="rgb(206,136,36)" fg:x="1050" fg:w="1"/><text x="86.8122%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.6447%" y="421" width="0.0824%" height="15" fill="rgb(206,206,15)" fg:x="1051" fg:w="1"/><text x="86.8947%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.6447%" y="405" width="0.0824%" height="15" fill="rgb(207,163,34)" fg:x="1051" fg:w="1"/><text x="86.8947%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.6447%" y="389" width="0.0824%" height="15" fill="rgb(240,127,22)" fg:x="1051" fg:w="1"/><text x="86.8947%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.6447%" y="373" width="0.0824%" height="15" fill="rgb(227,49,5)" fg:x="1051" fg:w="1"/><text x="86.8947%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.74%)</title><rect x="86.0676%" y="453" width="0.7420%" height="15" fill="rgb(231,8,6)" fg:x="1044" fg:w="9"/><text x="86.3176%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="86.5622%" y="437" width="0.2473%" height="15" fill="rgb(223,21,24)" fg:x="1050" fg:w="3"/><text x="86.8122%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7271%" y="421" width="0.0824%" height="15" fill="rgb(244,44,52)" fg:x="1052" fg:w="1"/><text x="86.9771%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.7271%" y="405" width="0.0824%" height="15" fill="rgb(207,73,28)" fg:x="1052" fg:w="1"/><text x="86.9771%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.7271%" y="389" width="0.0824%" height="15" fill="rgb(234,215,10)" fg:x="1052" fg:w="1"/><text x="86.9771%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.15%)</title><rect x="85.7378%" y="485" width="1.1542%" height="15" fill="rgb(236,85,3)" fg:x="1040" fg:w="14"/><text x="85.9878%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.82%)</title><rect x="86.0676%" y="469" width="0.8244%" height="15" fill="rgb(236,102,39)" fg:x="1044" fg:w="10"/><text x="86.3176%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.8096%" y="453" width="0.0824%" height="15" fill="rgb(243,50,8)" fg:x="1053" fg:w="1"/><text x="87.0596%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.8096%" y="437" width="0.0824%" height="15" fill="rgb(207,111,4)" fg:x="1053" fg:w="1"/><text x="87.0596%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="86.8920%" y="453" width="0.2473%" height="15" fill="rgb(230,52,42)" fg:x="1054" fg:w="3"/><text x="87.1420%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.1393%" y="453" width="0.0824%" height="15" fill="rgb(252,178,50)" fg:x="1057" fg:w="1"/><text x="87.3893%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.3042%" y="437" width="0.0824%" height="15" fill="rgb(234,46,35)" fg:x="1059" fg:w="1"/><text x="87.5542%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4691%" y="405" width="0.0824%" height="15" fill="rgb(228,69,37)" fg:x="1061" fg:w="1"/><text x="87.7191%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.74%)</title><rect x="86.8920%" y="485" width="0.7420%" height="15" fill="rgb(221,21,11)" fg:x="1054" fg:w="9"/><text x="87.1420%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.74%)</title><rect x="86.8920%" y="469" width="0.7420%" height="15" fill="rgb(223,56,9)" fg:x="1054" fg:w="9"/><text x="87.1420%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="87.2218%" y="453" width="0.4122%" height="15" fill="rgb(234,30,19)" fg:x="1058" fg:w="5"/><text x="87.4718%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="87.3866%" y="437" width="0.2473%" height="15" fill="rgb(211,64,54)" fg:x="1060" fg:w="3"/><text x="87.6366%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="87.3866%" y="421" width="0.2473%" height="15" fill="rgb(250,189,5)" fg:x="1060" fg:w="3"/><text x="87.6366%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="87.5515%" y="405" width="0.0824%" height="15" fill="rgb(214,180,13)" fg:x="1062" fg:w="1"/><text x="87.8015%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.5515%" y="389" width="0.0824%" height="15" fill="rgb(238,40,40)" fg:x="1062" fg:w="1"/><text x="87.8015%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5515%" y="373" width="0.0824%" height="15" fill="rgb(214,101,38)" fg:x="1062" fg:w="1"/><text x="87.8015%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.5515%" y="357" width="0.0824%" height="15" fill="rgb(242,65,53)" fg:x="1062" fg:w="1"/><text x="87.8015%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5515%" y="341" width="0.0824%" height="15" fill="rgb(230,22,45)" fg:x="1062" fg:w="1"/><text x="87.8015%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6340%" y="421" width="0.0824%" height="15" fill="rgb(223,77,1)" fg:x="1063" fg:w="1"/><text x="87.8840%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.7164%" y="405" width="0.1649%" height="15" fill="rgb(227,33,37)" fg:x="1064" fg:w="2"/><text x="87.9664%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9637%" y="389" width="0.0824%" height="15" fill="rgb(224,148,39)" fg:x="1067" fg:w="1"/><text x="88.2137%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="88.0462%" y="373" width="0.1649%" height="15" fill="rgb(232,212,39)" fg:x="1068" fg:w="2"/><text x="88.2962%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="88.2110%" y="373" width="0.1649%" height="15" fill="rgb(251,172,7)" fg:x="1070" fg:w="2"/><text x="88.4610%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.2935%" y="357" width="0.0824%" height="15" fill="rgb(219,39,9)" fg:x="1071" fg:w="1"/><text x="88.5435%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.82%)</title><rect x="87.6340%" y="453" width="0.8244%" height="15" fill="rgb(228,118,14)" fg:x="1063" fg:w="10"/><text x="87.8840%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.82%)</title><rect x="87.6340%" y="437" width="0.8244%" height="15" fill="rgb(207,140,10)" fg:x="1063" fg:w="10"/><text x="87.8840%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.74%)</title><rect x="87.7164%" y="421" width="0.7420%" height="15" fill="rgb(227,111,53)" fg:x="1064" fg:w="9"/><text x="87.9664%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.58%)</title><rect x="87.8813%" y="405" width="0.5771%" height="15" fill="rgb(216,165,16)" fg:x="1066" fg:w="7"/><text x="88.1313%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="88.0462%" y="389" width="0.4122%" height="15" fill="rgb(226,111,18)" fg:x="1068" fg:w="5"/><text x="88.2962%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="88.3759%" y="373" width="0.0824%" height="15" fill="rgb(251,27,17)" fg:x="1072" fg:w="1"/><text x="88.6259%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.3759%" y="357" width="0.0824%" height="15" fill="rgb(254,69,9)" fg:x="1072" fg:w="1"/><text x="88.6259%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.3759%" y="341" width="0.0824%" height="15" fill="rgb(234,140,37)" fg:x="1072" fg:w="1"/><text x="88.6259%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.3759%" y="325" width="0.0824%" height="15" fill="rgb(220,93,8)" fg:x="1072" fg:w="1"/><text x="88.6259%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.3759%" y="309" width="0.0824%" height="15" fill="rgb(236,113,3)" fg:x="1072" fg:w="1"/><text x="88.6259%" y="319.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (12 samples, 0.99%)</title><rect x="87.6340%" y="469" width="0.9893%" height="15" fill="rgb(234,108,23)" fg:x="1063" fg:w="12"/><text x="87.8840%" y="479.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="88.4584%" y="453" width="0.1649%" height="15" fill="rgb(205,114,34)" fg:x="1073" fg:w="2"/><text x="88.7084%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="88.4584%" y="437" width="0.1649%" height="15" fill="rgb(236,200,45)" fg:x="1073" fg:w="2"/><text x="88.7084%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="88.4584%" y="421" width="0.1649%" height="15" fill="rgb(227,194,29)" fg:x="1073" fg:w="2"/><text x="88.7084%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.5408%" y="405" width="0.0824%" height="15" fill="rgb(250,76,42)" fg:x="1074" fg:w="1"/><text x="88.7908%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="88.5408%" y="389" width="0.0824%" height="15" fill="rgb(208,128,8)" fg:x="1074" fg:w="1"/><text x="88.7908%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.5408%" y="373" width="0.0824%" height="15" fill="rgb(229,209,35)" fg:x="1074" fg:w="1"/><text x="88.7908%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="88.7057%" y="437" width="0.3298%" height="15" fill="rgb(215,39,53)" fg:x="1076" fg:w="4"/><text x="88.9557%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.9530%" y="421" width="0.0824%" height="15" fill="rgb(219,123,41)" fg:x="1079" fg:w="1"/><text x="89.2030%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="89.0354%" y="421" width="0.0824%" height="15" fill="rgb(212,158,18)" fg:x="1080" fg:w="1"/><text x="89.2854%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="89.0354%" y="437" width="0.1649%" height="15" fill="rgb(234,196,53)" fg:x="1080" fg:w="2"/><text x="89.2854%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.1179%" y="421" width="0.0824%" height="15" fill="rgb(210,139,12)" fg:x="1081" fg:w="1"/><text x="89.3679%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="89.2003%" y="437" width="0.0824%" height="15" fill="rgb(220,116,54)" fg:x="1082" fg:w="1"/><text x="89.4503%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.2003%" y="421" width="0.0824%" height="15" fill="rgb(247,103,28)" fg:x="1082" fg:w="1"/><text x="89.4503%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2003%" y="405" width="0.0824%" height="15" fill="rgb(253,156,45)" fg:x="1082" fg:w="1"/><text x="89.4503%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3652%" y="389" width="0.0824%" height="15" fill="rgb(237,157,52)" fg:x="1084" fg:w="1"/><text x="89.6152%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3652%" y="373" width="0.0824%" height="15" fill="rgb(253,112,16)" fg:x="1084" fg:w="1"/><text x="89.6152%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.4477%" y="325" width="0.0824%" height="15" fill="rgb(234,70,18)" fg:x="1085" fg:w="1"/><text x="89.6977%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4477%" y="309" width="0.0824%" height="15" fill="rgb(247,138,19)" fg:x="1085" fg:w="1"/><text x="89.6977%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.4477%" y="293" width="0.0824%" height="15" fill="rgb(207,171,1)" fg:x="1085" fg:w="1"/><text x="89.6977%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4477%" y="277" width="0.0824%" height="15" fill="rgb(239,213,3)" fg:x="1085" fg:w="1"/><text x="89.6977%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="89.4477%" y="357" width="0.1649%" height="15" fill="rgb(226,112,4)" fg:x="1085" fg:w="2"/><text x="89.6977%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="89.4477%" y="341" width="0.1649%" height="15" fill="rgb(252,170,12)" fg:x="1085" fg:w="2"/><text x="89.6977%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5301%" y="325" width="0.0824%" height="15" fill="rgb(241,106,13)" fg:x="1086" fg:w="1"/><text x="89.7801%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="89.4477%" y="389" width="0.2473%" height="15" fill="rgb(225,73,23)" fg:x="1085" fg:w="3"/><text x="89.6977%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="89.4477%" y="373" width="0.2473%" height="15" fill="rgb(251,227,29)" fg:x="1085" fg:w="3"/><text x="89.6977%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.6125%" y="357" width="0.0824%" height="15" fill="rgb(237,144,13)" fg:x="1087" fg:w="1"/><text x="89.8625%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.7774%" y="373" width="0.0824%" height="15" fill="rgb(232,106,46)" fg:x="1089" fg:w="1"/><text x="90.0274%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0247%" y="341" width="0.0824%" height="15" fill="rgb(245,154,53)" fg:x="1092" fg:w="1"/><text x="90.2747%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="89.9423%" y="357" width="0.2473%" height="15" fill="rgb(212,119,47)" fg:x="1091" fg:w="3"/><text x="90.1923%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.1072%" y="341" width="0.0824%" height="15" fill="rgb(253,135,25)" fg:x="1093" fg:w="1"/><text x="90.3572%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.1896%" y="357" width="0.0824%" height="15" fill="rgb(253,208,39)" fg:x="1094" fg:w="1"/><text x="90.4396%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="90.1896%" y="341" width="0.0824%" height="15" fill="rgb(226,64,12)" fg:x="1094" fg:w="1"/><text x="90.4396%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.3545%" y="341" width="0.0824%" height="15" fill="rgb(214,162,37)" fg:x="1096" fg:w="1"/><text x="90.6045%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5194%" y="325" width="0.0824%" height="15" fill="rgb(250,104,5)" fg:x="1098" fg:w="1"/><text x="90.7694%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5194%" y="309" width="0.0824%" height="15" fill="rgb(220,202,50)" fg:x="1098" fg:w="1"/><text x="90.7694%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.32%)</title><rect x="89.3652%" y="421" width="1.3190%" height="15" fill="rgb(248,67,38)" fg:x="1084" fg:w="16"/><text x="89.6152%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.32%)</title><rect x="89.3652%" y="405" width="1.3190%" height="15" fill="rgb(242,94,35)" fg:x="1084" fg:w="16"/><text x="89.6152%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.99%)</title><rect x="89.6950%" y="389" width="0.9893%" height="15" fill="rgb(209,78,37)" fg:x="1088" fg:w="12"/><text x="89.9450%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.82%)</title><rect x="89.8599%" y="373" width="0.8244%" height="15" fill="rgb(230,126,47)" fg:x="1090" fg:w="10"/><text x="90.1099%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="90.2721%" y="357" width="0.4122%" height="15" fill="rgb(222,110,35)" fg:x="1095" fg:w="5"/><text x="90.5221%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="90.4369%" y="341" width="0.2473%" height="15" fill="rgb(233,154,20)" fg:x="1097" fg:w="3"/><text x="90.6869%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.6018%" y="325" width="0.0824%" height="15" fill="rgb(223,53,50)" fg:x="1099" fg:w="1"/><text x="90.8518%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6018%" y="309" width="0.0824%" height="15" fill="rgb(251,27,26)" fg:x="1099" fg:w="1"/><text x="90.8518%" y="319.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (26 samples, 2.14%)</title><rect x="88.6232%" y="469" width="2.1434%" height="15" fill="rgb(223,189,16)" fg:x="1075" fg:w="26"/><text x="88.8732%" y="479.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.06%)</title><rect x="88.7057%" y="453" width="2.0610%" height="15" fill="rgb(207,5,54)" fg:x="1076" fg:w="25"/><text x="88.9557%" y="463.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.48%)</title><rect x="89.2828%" y="437" width="1.4839%" height="15" fill="rgb(254,124,50)" fg:x="1083" fg:w="18"/><text x="89.5328%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.6843%" y="421" width="0.0824%" height="15" fill="rgb(253,193,24)" fg:x="1100" fg:w="1"/><text x="90.9343%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6843%" y="405" width="0.0824%" height="15" fill="rgb(235,170,24)" fg:x="1100" fg:w="1"/><text x="90.9343%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.9316%" y="229" width="0.0824%" height="15" fill="rgb(222,212,52)" fg:x="1103" fg:w="1"/><text x="91.1816%" y="239.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="90.9316%" y="213" width="0.0824%" height="15" fill="rgb(223,17,45)" fg:x="1103" fg:w="1"/><text x="91.1816%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="90.9316%" y="293" width="0.2473%" height="15" fill="rgb(227,103,26)" fg:x="1103" fg:w="3"/><text x="91.1816%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="90.9316%" y="277" width="0.2473%" height="15" fill="rgb(251,151,25)" fg:x="1103" fg:w="3"/><text x="91.1816%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="90.9316%" y="261" width="0.2473%" height="15" fill="rgb(248,144,29)" fg:x="1103" fg:w="3"/><text x="91.1816%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="90.9316%" y="245" width="0.2473%" height="15" fill="rgb(245,97,16)" fg:x="1103" fg:w="3"/><text x="91.1816%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.0140%" y="229" width="0.1649%" height="15" fill="rgb(220,200,29)" fg:x="1104" fg:w="2"/><text x="91.2640%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0965%" y="213" width="0.0824%" height="15" fill="rgb(206,38,29)" fg:x="1105" fg:w="1"/><text x="91.3465%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0965%" y="197" width="0.0824%" height="15" fill="rgb(245,19,52)" fg:x="1105" fg:w="1"/><text x="91.3465%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="90.9316%" y="325" width="0.3298%" height="15" fill="rgb(205,67,43)" fg:x="1103" fg:w="4"/><text x="91.1816%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="90.9316%" y="309" width="0.3298%" height="15" fill="rgb(217,128,23)" fg:x="1103" fg:w="4"/><text x="91.1816%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1789%" y="293" width="0.0824%" height="15" fill="rgb(210,109,28)" fg:x="1106" fg:w="1"/><text x="91.4289%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.3438%" y="277" width="0.0824%" height="15" fill="rgb(233,181,7)" fg:x="1108" fg:w="1"/><text x="91.5938%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.3438%" y="261" width="0.0824%" height="15" fill="rgb(244,11,22)" fg:x="1108" fg:w="1"/><text x="91.5938%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.3438%" y="309" width="0.1649%" height="15" fill="rgb(205,124,54)" fg:x="1108" fg:w="2"/><text x="91.5938%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.3438%" y="293" width="0.1649%" height="15" fill="rgb(218,21,27)" fg:x="1108" fg:w="2"/><text x="91.5938%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.4262%" y="277" width="0.0824%" height="15" fill="rgb(224,153,33)" fg:x="1109" fg:w="1"/><text x="91.6762%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.4262%" y="261" width="0.0824%" height="15" fill="rgb(240,219,28)" fg:x="1109" fg:w="1"/><text x="91.6762%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.66%)</title><rect x="90.9316%" y="341" width="0.6595%" height="15" fill="rgb(214,80,29)" fg:x="1103" fg:w="8"/><text x="91.1816%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="91.2613%" y="325" width="0.3298%" height="15" fill="rgb(247,148,44)" fg:x="1107" fg:w="4"/><text x="91.5113%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.5087%" y="309" width="0.0824%" height="15" fill="rgb(243,110,30)" fg:x="1110" fg:w="1"/><text x="91.7587%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.8384%" y="309" width="0.1649%" height="15" fill="rgb(243,173,41)" fg:x="1114" fg:w="2"/><text x="92.0884%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.24%)</title><rect x="90.8491%" y="373" width="1.2366%" height="15" fill="rgb(225,160,47)" fg:x="1102" fg:w="15"/><text x="91.0991%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.24%)</title><rect x="90.8491%" y="357" width="1.2366%" height="15" fill="rgb(215,44,21)" fg:x="1102" fg:w="15"/><text x="91.0991%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="91.5911%" y="341" width="0.4946%" height="15" fill="rgb(248,90,3)" fg:x="1111" fg:w="6"/><text x="91.8411%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="91.6735%" y="325" width="0.4122%" height="15" fill="rgb(220,196,49)" fg:x="1112" fg:w="5"/><text x="91.9235%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.0033%" y="309" width="0.0824%" height="15" fill="rgb(217,138,14)" fg:x="1116" fg:w="1"/><text x="92.2533%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.40%)</title><rect x="90.7667%" y="405" width="1.4015%" height="15" fill="rgb(219,111,20)" fg:x="1101" fg:w="17"/><text x="91.0167%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.40%)</title><rect x="90.7667%" y="389" width="1.4015%" height="15" fill="rgb(218,114,4)" fg:x="1101" fg:w="17"/><text x="91.0167%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0857%" y="373" width="0.0824%" height="15" fill="rgb(238,133,3)" fg:x="1117" fg:w="1"/><text x="92.3357%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0857%" y="357" width="0.0824%" height="15" fill="rgb(224,95,0)" fg:x="1117" fg:w="1"/><text x="92.3357%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0857%" y="341" width="0.0824%" height="15" fill="rgb(220,169,35)" fg:x="1117" fg:w="1"/><text x="92.3357%" y="351.50"></text></g><g><title>engine::session::state::State::close (83 samples, 6.84%)</title><rect x="85.4905%" y="565" width="6.8425%" height="15" fill="rgb(242,116,47)" fg:x="1037" fg:w="83"/><text x="85.7405%" y="575.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (82 samples, 6.76%)</title><rect x="85.5730%" y="549" width="6.7601%" height="15" fill="rgb(251,42,20)" fg:x="1038" fg:w="82"/><text x="85.8230%" y="559.50">engine::s..</text></g><g><title>core::iter::adapters::try_process (80 samples, 6.60%)</title><rect x="85.7378%" y="533" width="6.5952%" height="15" fill="rgb(234,7,34)" fg:x="1040" fg:w="80"/><text x="85.9878%" y="543.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (80 samples, 6.60%)</title><rect x="85.7378%" y="517" width="6.5952%" height="15" fill="rgb(243,208,13)" fg:x="1040" fg:w="80"/><text x="85.9878%" y="527.50">&lt;alloc::v..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (80 samples, 6.60%)</title><rect x="85.7378%" y="501" width="6.5952%" height="15" fill="rgb(227,33,28)" fg:x="1040" fg:w="80"/><text x="85.9878%" y="511.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (57 samples, 4.70%)</title><rect x="87.6340%" y="485" width="4.6991%" height="15" fill="rgb(250,47,37)" fg:x="1063" fg:w="57"/><text x="87.8840%" y="495.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (19 samples, 1.57%)</title><rect x="90.7667%" y="469" width="1.5664%" height="15" fill="rgb(235,111,52)" fg:x="1101" fg:w="19"/><text x="91.0167%" y="479.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.57%)</title><rect x="90.7667%" y="453" width="1.5664%" height="15" fill="rgb(223,64,28)" fg:x="1101" fg:w="19"/><text x="91.0167%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.57%)</title><rect x="90.7667%" y="437" width="1.5664%" height="15" fill="rgb(236,67,22)" fg:x="1101" fg:w="19"/><text x="91.0167%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.57%)</title><rect x="90.7667%" y="421" width="1.5664%" height="15" fill="rgb(243,79,24)" fg:x="1101" fg:w="19"/><text x="91.0167%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.1682%" y="405" width="0.1649%" height="15" fill="rgb(241,225,22)" fg:x="1118" fg:w="2"/><text x="92.4182%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2506%" y="389" width="0.0824%" height="15" fill="rgb(228,214,26)" fg:x="1119" fg:w="1"/><text x="92.5006%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2506%" y="373" width="0.0824%" height="15" fill="rgb(219,84,52)" fg:x="1119" fg:w="1"/><text x="92.5006%" y="383.50"></text></g><g><title>engine::session::Session::close (85 samples, 7.01%)</title><rect x="85.4081%" y="581" width="7.0074%" height="15" fill="rgb(220,12,22)" fg:x="1036" fg:w="85"/><text x="85.6581%" y="591.50">engine::s..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="92.3331%" y="565" width="0.0824%" height="15" fill="rgb(219,9,49)" fg:x="1120" fg:w="1"/><text x="92.5831%" y="575.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="92.4979%" y="517" width="0.1649%" height="15" fill="rgb(237,40,43)" fg:x="1122" fg:w="2"/><text x="92.7479%" y="527.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="92.4979%" y="501" width="0.1649%" height="15" fill="rgb(212,189,32)" fg:x="1122" fg:w="2"/><text x="92.7479%" y="511.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.25%)</title><rect x="92.4979%" y="549" width="0.2473%" height="15" fill="rgb(247,48,9)" fg:x="1122" fg:w="3"/><text x="92.7479%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="92.4979%" y="533" width="0.2473%" height="15" fill="rgb(247,112,3)" fg:x="1122" fg:w="3"/><text x="92.7479%" y="543.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="92.6628%" y="517" width="0.0824%" height="15" fill="rgb(243,110,18)" fg:x="1124" fg:w="1"/><text x="92.9128%" y="527.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="92.6628%" y="501" width="0.0824%" height="15" fill="rgb(233,223,44)" fg:x="1124" fg:w="1"/><text x="92.9128%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="92.7453%" y="389" width="0.1649%" height="15" fill="rgb(245,160,20)" fg:x="1125" fg:w="2"/><text x="92.9953%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (2 samples, 0.16%)</title><rect x="92.7453%" y="373" width="0.1649%" height="15" fill="rgb(225,37,1)" fg:x="1125" fg:w="2"/><text x="92.9953%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (2 samples, 0.16%)</title><rect x="92.7453%" y="357" width="0.1649%" height="15" fill="rgb(253,227,39)" fg:x="1125" fg:w="2"/><text x="92.9953%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="92.7453%" y="341" width="0.1649%" height="15" fill="rgb(240,179,26)" fg:x="1125" fg:w="2"/><text x="92.9953%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (2 samples, 0.16%)</title><rect x="92.7453%" y="325" width="0.1649%" height="15" fill="rgb(237,212,23)" fg:x="1125" fg:w="2"/><text x="92.9953%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.8277%" y="309" width="0.0824%" height="15" fill="rgb(221,38,11)" fg:x="1126" fg:w="1"/><text x="93.0777%" y="319.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (1 samples, 0.08%)</title><rect x="92.8277%" y="293" width="0.0824%" height="15" fill="rgb(215,85,6)" fg:x="1126" fg:w="1"/><text x="93.0777%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="92.8277%" y="277" width="0.0824%" height="15" fill="rgb(239,64,14)" fg:x="1126" fg:w="1"/><text x="93.0777%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="92.8277%" y="261" width="0.0824%" height="15" fill="rgb(215,150,32)" fg:x="1126" fg:w="1"/><text x="93.0777%" y="271.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="92.8277%" y="245" width="0.0824%" height="15" fill="rgb(238,15,13)" fg:x="1126" fg:w="1"/><text x="93.0777%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="92.8277%" y="229" width="0.0824%" height="15" fill="rgb(251,87,8)" fg:x="1126" fg:w="1"/><text x="93.0777%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.9101%" y="277" width="0.0824%" height="15" fill="rgb(206,86,1)" fg:x="1127" fg:w="1"/><text x="93.1601%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="92.9101%" y="261" width="0.0824%" height="15" fill="rgb(208,151,45)" fg:x="1127" fg:w="1"/><text x="93.1601%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.9101%" y="245" width="0.0824%" height="15" fill="rgb(231,181,24)" fg:x="1127" fg:w="1"/><text x="93.1601%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="92.9101%" y="229" width="0.0824%" height="15" fill="rgb(240,106,29)" fg:x="1127" fg:w="1"/><text x="93.1601%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.9101%" y="213" width="0.0824%" height="15" fill="rgb(227,166,11)" fg:x="1127" fg:w="1"/><text x="93.1601%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="92.9101%" y="197" width="0.0824%" height="15" fill="rgb(254,14,34)" fg:x="1127" fg:w="1"/><text x="93.1601%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.33%)</title><rect x="92.7453%" y="533" width="0.3298%" height="15" fill="rgb(223,222,6)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.33%)</title><rect x="92.7453%" y="517" width="0.3298%" height="15" fill="rgb(245,69,24)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="527.50"></text></g><g><title>core::fmt::write (4 samples, 0.33%)</title><rect x="92.7453%" y="501" width="0.3298%" height="15" fill="rgb(213,193,7)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.33%)</title><rect x="92.7453%" y="485" width="0.3298%" height="15" fill="rgb(237,92,51)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (4 samples, 0.33%)</title><rect x="92.7453%" y="469" width="0.3298%" height="15" fill="rgb(225,194,6)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (4 samples, 0.33%)</title><rect x="92.7453%" y="453" width="0.3298%" height="15" fill="rgb(205,159,49)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (4 samples, 0.33%)</title><rect x="92.7453%" y="437" width="0.3298%" height="15" fill="rgb(219,69,2)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.33%)</title><rect x="92.7453%" y="421" width="0.3298%" height="15" fill="rgb(215,107,24)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (4 samples, 0.33%)</title><rect x="92.7453%" y="405" width="0.3298%" height="15" fill="rgb(249,208,29)" fg:x="1125" fg:w="4"/><text x="92.9953%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="92.9101%" y="389" width="0.1649%" height="15" fill="rgb(213,147,10)" fg:x="1127" fg:w="2"/><text x="93.1601%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="92.9101%" y="373" width="0.1649%" height="15" fill="rgb(254,140,42)" fg:x="1127" fg:w="2"/><text x="93.1601%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="92.9101%" y="357" width="0.1649%" height="15" fill="rgb(249,9,15)" fg:x="1127" fg:w="2"/><text x="93.1601%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="92.9101%" y="341" width="0.1649%" height="15" fill="rgb(210,19,33)" fg:x="1127" fg:w="2"/><text x="93.1601%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="92.9101%" y="325" width="0.1649%" height="15" fill="rgb(241,121,22)" fg:x="1127" fg:w="2"/><text x="93.1601%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="92.9101%" y="309" width="0.1649%" height="15" fill="rgb(244,69,52)" fg:x="1127" fg:w="2"/><text x="93.1601%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="92.9101%" y="293" width="0.1649%" height="15" fill="rgb(244,191,54)" fg:x="1127" fg:w="2"/><text x="93.1601%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.9926%" y="277" width="0.0824%" height="15" fill="rgb(250,3,53)" fg:x="1128" fg:w="1"/><text x="93.2426%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="93.0750%" y="517" width="0.0824%" height="15" fill="rgb(205,77,3)" fg:x="1129" fg:w="1"/><text x="93.3250%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.0750%" y="501" width="0.0824%" height="15" fill="rgb(207,155,3)" fg:x="1129" fg:w="1"/><text x="93.3250%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (3 samples, 0.25%)</title><rect x="93.1575%" y="517" width="0.2473%" height="15" fill="rgb(224,79,2)" fg:x="1130" fg:w="3"/><text x="93.4075%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (3 samples, 0.25%)</title><rect x="93.1575%" y="501" width="0.2473%" height="15" fill="rgb(243,172,5)" fg:x="1130" fg:w="3"/><text x="93.4075%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (3 samples, 0.25%)</title><rect x="93.1575%" y="485" width="0.2473%" height="15" fill="rgb(217,23,43)" fg:x="1130" fg:w="3"/><text x="93.4075%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (3 samples, 0.25%)</title><rect x="93.1575%" y="469" width="0.2473%" height="15" fill="rgb(223,109,20)" fg:x="1130" fg:w="3"/><text x="93.4075%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="93.4872%" y="357" width="0.0824%" height="15" fill="rgb(232,159,21)" fg:x="1134" fg:w="1"/><text x="93.7372%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5697%" y="341" width="0.0824%" height="15" fill="rgb(219,58,2)" fg:x="1135" fg:w="1"/><text x="93.8197%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5697%" y="325" width="0.0824%" height="15" fill="rgb(241,56,8)" fg:x="1135" fg:w="1"/><text x="93.8197%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5697%" y="309" width="0.0824%" height="15" fill="rgb(249,10,27)" fg:x="1135" fg:w="1"/><text x="93.8197%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5697%" y="293" width="0.0824%" height="15" fill="rgb(248,177,5)" fg:x="1135" fg:w="1"/><text x="93.8197%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5697%" y="277" width="0.0824%" height="15" fill="rgb(239,12,30)" fg:x="1135" fg:w="1"/><text x="93.8197%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5697%" y="261" width="0.0824%" height="15" fill="rgb(229,164,25)" fg:x="1135" fg:w="1"/><text x="93.8197%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="93.6521%" y="341" width="0.1649%" height="15" fill="rgb(231,217,50)" fg:x="1136" fg:w="2"/><text x="93.9021%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.6521%" y="325" width="0.1649%" height="15" fill="rgb(247,99,32)" fg:x="1136" fg:w="2"/><text x="93.9021%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.6521%" y="309" width="0.1649%" height="15" fill="rgb(240,74,50)" fg:x="1136" fg:w="2"/><text x="93.9021%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.7345%" y="293" width="0.0824%" height="15" fill="rgb(218,54,8)" fg:x="1137" fg:w="1"/><text x="93.9845%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="94.0643%" y="245" width="0.2473%" height="15" fill="rgb(227,132,20)" fg:x="1141" fg:w="3"/><text x="94.3143%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="94.0643%" y="229" width="0.2473%" height="15" fill="rgb(232,134,12)" fg:x="1141" fg:w="3"/><text x="94.3143%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="94.1467%" y="213" width="0.1649%" height="15" fill="rgb(250,129,18)" fg:x="1142" fg:w="2"/><text x="94.3967%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.2292%" y="197" width="0.0824%" height="15" fill="rgb(232,129,47)" fg:x="1143" fg:w="1"/><text x="94.4792%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="94.0643%" y="293" width="0.3298%" height="15" fill="rgb(230,31,40)" fg:x="1141" fg:w="4"/><text x="94.3143%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="94.0643%" y="277" width="0.3298%" height="15" fill="rgb(232,126,10)" fg:x="1141" fg:w="4"/><text x="94.3143%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.33%)</title><rect x="94.0643%" y="261" width="0.3298%" height="15" fill="rgb(205,46,31)" fg:x="1141" fg:w="4"/><text x="94.3143%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3116%" y="245" width="0.0824%" height="15" fill="rgb(232,37,37)" fg:x="1144" fg:w="1"/><text x="94.5616%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3116%" y="229" width="0.0824%" height="15" fill="rgb(240,91,16)" fg:x="1144" fg:w="1"/><text x="94.5616%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.3116%" y="213" width="0.0824%" height="15" fill="rgb(224,160,9)" fg:x="1144" fg:w="1"/><text x="94.5616%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3116%" y="197" width="0.0824%" height="15" fill="rgb(215,116,14)" fg:x="1144" fg:w="1"/><text x="94.5616%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.3116%" y="181" width="0.0824%" height="15" fill="rgb(235,46,36)" fg:x="1144" fg:w="1"/><text x="94.5616%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3116%" y="165" width="0.0824%" height="15" fill="rgb(238,39,28)" fg:x="1144" fg:w="1"/><text x="94.5616%" y="175.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.66%)</title><rect x="93.8170%" y="341" width="0.6595%" height="15" fill="rgb(242,125,29)" fg:x="1138" fg:w="8"/><text x="94.0670%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.66%)</title><rect x="93.8170%" y="325" width="0.6595%" height="15" fill="rgb(238,211,30)" fg:x="1138" fg:w="8"/><text x="94.0670%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.66%)</title><rect x="93.8170%" y="309" width="0.6595%" height="15" fill="rgb(227,201,28)" fg:x="1138" fg:w="8"/><text x="94.0670%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.3941%" y="293" width="0.0824%" height="15" fill="rgb(238,77,29)" fg:x="1145" fg:w="1"/><text x="94.6441%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3941%" y="277" width="0.0824%" height="15" fill="rgb(213,221,40)" fg:x="1145" fg:w="1"/><text x="94.6441%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.3941%" y="261" width="0.0824%" height="15" fill="rgb(226,220,44)" fg:x="1145" fg:w="1"/><text x="94.6441%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5589%" y="277" width="0.0824%" height="15" fill="rgb(228,90,23)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5589%" y="261" width="0.0824%" height="15" fill="rgb(235,72,29)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5589%" y="245" width="0.0824%" height="15" fill="rgb(248,117,39)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5589%" y="229" width="0.0824%" height="15" fill="rgb(225,43,28)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5589%" y="213" width="0.0824%" height="15" fill="rgb(240,93,4)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5589%" y="197" width="0.0824%" height="15" fill="rgb(234,178,27)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5589%" y="181" width="0.0824%" height="15" fill="rgb(254,88,22)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5589%" y="165" width="0.0824%" height="15" fill="rgb(240,206,50)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5589%" y="149" width="0.0824%" height="15" fill="rgb(249,103,8)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.5589%" y="133" width="0.0824%" height="15" fill="rgb(241,178,36)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5589%" y="117" width="0.0824%" height="15" fill="rgb(246,110,15)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.5589%" y="101" width="0.0824%" height="15" fill="rgb(207,14,43)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5589%" y="85" width="0.0824%" height="15" fill="rgb(253,219,19)" fg:x="1147" fg:w="1"/><text x="94.8089%" y="95.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (15 samples, 1.24%)</title><rect x="93.4872%" y="437" width="1.2366%" height="15" fill="rgb(216,126,5)" fg:x="1134" fg:w="15"/><text x="93.7372%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (15 samples, 1.24%)</title><rect x="93.4872%" y="421" width="1.2366%" height="15" fill="rgb(218,78,42)" fg:x="1134" fg:w="15"/><text x="93.7372%" y="431.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (15 samples, 1.24%)</title><rect x="93.4872%" y="405" width="1.2366%" height="15" fill="rgb(215,154,40)" fg:x="1134" fg:w="15"/><text x="93.7372%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (15 samples, 1.24%)</title><rect x="93.4872%" y="389" width="1.2366%" height="15" fill="rgb(235,129,32)" fg:x="1134" fg:w="15"/><text x="93.7372%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (15 samples, 1.24%)</title><rect x="93.4872%" y="373" width="1.2366%" height="15" fill="rgb(218,51,8)" fg:x="1134" fg:w="15"/><text x="93.7372%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.15%)</title><rect x="93.5697%" y="357" width="1.1542%" height="15" fill="rgb(245,48,4)" fg:x="1135" fg:w="14"/><text x="93.8197%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.25%)</title><rect x="94.4765%" y="341" width="0.2473%" height="15" fill="rgb(250,175,12)" fg:x="1146" fg:w="3"/><text x="94.7265%" y="351.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.25%)</title><rect x="94.4765%" y="325" width="0.2473%" height="15" fill="rgb(237,95,40)" fg:x="1146" fg:w="3"/><text x="94.7265%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="94.4765%" y="309" width="0.2473%" height="15" fill="rgb(244,120,0)" fg:x="1146" fg:w="3"/><text x="94.7265%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="94.4765%" y="293" width="0.2473%" height="15" fill="rgb(241,19,42)" fg:x="1146" fg:w="3"/><text x="94.7265%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.6414%" y="277" width="0.0824%" height="15" fill="rgb(217,174,48)" fg:x="1148" fg:w="1"/><text x="94.8914%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.6414%" y="261" width="0.0824%" height="15" fill="rgb(239,36,38)" fg:x="1148" fg:w="1"/><text x="94.8914%" y="271.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.7238%" y="405" width="0.0824%" height="15" fill="rgb(220,63,49)" fg:x="1149" fg:w="1"/><text x="94.9738%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="94.7238%" y="389" width="0.0824%" height="15" fill="rgb(240,101,13)" fg:x="1149" fg:w="1"/><text x="94.9738%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.7238%" y="373" width="0.0824%" height="15" fill="rgb(209,184,51)" fg:x="1149" fg:w="1"/><text x="94.9738%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="94.7238%" y="357" width="0.0824%" height="15" fill="rgb(206,136,39)" fg:x="1149" fg:w="1"/><text x="94.9738%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="94.7238%" y="341" width="0.0824%" height="15" fill="rgb(254,47,45)" fg:x="1149" fg:w="1"/><text x="94.9738%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="94.7238%" y="325" width="0.0824%" height="15" fill="rgb(252,103,20)" fg:x="1149" fg:w="1"/><text x="94.9738%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="94.7238%" y="309" width="0.0824%" height="15" fill="rgb(230,69,12)" fg:x="1149" fg:w="1"/><text x="94.9738%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="94.7238%" y="293" width="0.0824%" height="15" fill="rgb(219,2,28)" fg:x="1149" fg:w="1"/><text x="94.9738%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.8887%" y="373" width="0.0824%" height="15" fill="rgb(210,9,12)" fg:x="1151" fg:w="1"/><text x="95.1387%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.9711%" y="373" width="0.0824%" height="15" fill="rgb(235,99,33)" fg:x="1152" fg:w="1"/><text x="95.2211%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.0536%" y="341" width="0.1649%" height="15" fill="rgb(230,11,38)" fg:x="1153" fg:w="2"/><text x="95.3036%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1360%" y="325" width="0.0824%" height="15" fill="rgb(217,129,0)" fg:x="1154" fg:w="1"/><text x="95.3860%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1360%" y="309" width="0.0824%" height="15" fill="rgb(222,198,4)" fg:x="1154" fg:w="1"/><text x="95.3860%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.2185%" y="309" width="0.0824%" height="15" fill="rgb(246,170,27)" fg:x="1155" fg:w="1"/><text x="95.4685%" y="319.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.41%)</title><rect x="95.0536%" y="357" width="0.4122%" height="15" fill="rgb(229,17,28)" fg:x="1153" fg:w="5"/><text x="95.3036%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="95.2185%" y="341" width="0.2473%" height="15" fill="rgb(233,198,48)" fg:x="1155" fg:w="3"/><text x="95.4685%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="95.2185%" y="325" width="0.2473%" height="15" fill="rgb(238,103,23)" fg:x="1155" fg:w="3"/><text x="95.4685%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="95.3009%" y="309" width="0.1649%" height="15" fill="rgb(206,91,41)" fg:x="1156" fg:w="2"/><text x="95.5509%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="95.3009%" y="293" width="0.1649%" height="15" fill="rgb(227,34,25)" fg:x="1156" fg:w="2"/><text x="95.5509%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="95.3009%" y="277" width="0.1649%" height="15" fill="rgb(210,110,44)" fg:x="1156" fg:w="2"/><text x="95.5509%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.3009%" y="261" width="0.1649%" height="15" fill="rgb(216,189,8)" fg:x="1156" fg:w="2"/><text x="95.5509%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.3009%" y="245" width="0.1649%" height="15" fill="rgb(234,9,46)" fg:x="1156" fg:w="2"/><text x="95.5509%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5482%" y="277" width="0.0824%" height="15" fill="rgb(251,200,5)" fg:x="1159" fg:w="1"/><text x="95.7982%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5482%" y="261" width="0.0824%" height="15" fill="rgb(238,165,37)" fg:x="1159" fg:w="1"/><text x="95.7982%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5482%" y="245" width="0.0824%" height="15" fill="rgb(232,77,38)" fg:x="1159" fg:w="1"/><text x="95.7982%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5482%" y="229" width="0.0824%" height="15" fill="rgb(253,179,33)" fg:x="1159" fg:w="1"/><text x="95.7982%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.5482%" y="293" width="0.1649%" height="15" fill="rgb(240,13,35)" fg:x="1159" fg:w="2"/><text x="95.7982%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6307%" y="277" width="0.0824%" height="15" fill="rgb(242,150,49)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6307%" y="261" width="0.0824%" height="15" fill="rgb(237,176,28)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.6307%" y="245" width="0.0824%" height="15" fill="rgb(214,176,33)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.6307%" y="229" width="0.0824%" height="15" fill="rgb(214,25,12)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.6307%" y="213" width="0.0824%" height="15" fill="rgb(238,190,20)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6307%" y="197" width="0.0824%" height="15" fill="rgb(208,11,19)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6307%" y="181" width="0.0824%" height="15" fill="rgb(239,90,4)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.6307%" y="165" width="0.0824%" height="15" fill="rgb(248,110,3)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.6307%" y="149" width="0.0824%" height="15" fill="rgb(210,41,30)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.6307%" y="133" width="0.0824%" height="15" fill="rgb(239,36,8)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.6307%" y="117" width="0.0824%" height="15" fill="rgb(237,201,47)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6307%" y="101" width="0.0824%" height="15" fill="rgb(224,140,29)" fg:x="1160" fg:w="1"/><text x="95.8807%" y="111.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="95.7131%" y="293" width="0.0824%" height="15" fill="rgb(231,209,17)" fg:x="1161" fg:w="1"/><text x="95.9631%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7131%" y="277" width="0.0824%" height="15" fill="rgb(249,196,1)" fg:x="1161" fg:w="1"/><text x="95.9631%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.7131%" y="261" width="0.0824%" height="15" fill="rgb(223,207,51)" fg:x="1161" fg:w="1"/><text x="95.9631%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.7131%" y="245" width="0.0824%" height="15" fill="rgb(210,14,40)" fg:x="1161" fg:w="1"/><text x="95.9631%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.7955%" y="245" width="0.0824%" height="15" fill="rgb(250,20,52)" fg:x="1162" fg:w="1"/><text x="96.0455%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8780%" y="213" width="0.0824%" height="15" fill="rgb(241,46,11)" fg:x="1163" fg:w="1"/><text x="96.1280%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.8780%" y="197" width="0.0824%" height="15" fill="rgb(219,105,5)" fg:x="1163" fg:w="1"/><text x="96.1280%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.8780%" y="181" width="0.0824%" height="15" fill="rgb(252,77,35)" fg:x="1163" fg:w="1"/><text x="96.1280%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9604%" y="165" width="0.0824%" height="15" fill="rgb(243,119,2)" fg:x="1164" fg:w="1"/><text x="96.2104%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9604%" y="149" width="0.0824%" height="15" fill="rgb(206,82,28)" fg:x="1164" fg:w="1"/><text x="96.2104%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9604%" y="133" width="0.0824%" height="15" fill="rgb(227,120,12)" fg:x="1164" fg:w="1"/><text x="96.2104%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9604%" y="117" width="0.0824%" height="15" fill="rgb(229,134,41)" fg:x="1164" fg:w="1"/><text x="96.2104%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9604%" y="101" width="0.0824%" height="15" fill="rgb(239,96,32)" fg:x="1164" fg:w="1"/><text x="96.2104%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.9604%" y="197" width="0.1649%" height="15" fill="rgb(225,46,27)" fg:x="1164" fg:w="2"/><text x="96.2104%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.9604%" y="181" width="0.1649%" height="15" fill="rgb(215,168,2)" fg:x="1164" fg:w="2"/><text x="96.2104%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.0429%" y="165" width="0.0824%" height="15" fill="rgb(207,170,52)" fg:x="1165" fg:w="1"/><text x="96.2929%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.0429%" y="149" width="0.0824%" height="15" fill="rgb(237,198,36)" fg:x="1165" fg:w="1"/><text x="96.2929%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.0429%" y="133" width="0.0824%" height="15" fill="rgb(213,27,14)" fg:x="1165" fg:w="1"/><text x="96.2929%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0429%" y="117" width="0.0824%" height="15" fill="rgb(218,77,5)" fg:x="1165" fg:w="1"/><text x="96.2929%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.0429%" y="101" width="0.0824%" height="15" fill="rgb(230,219,39)" fg:x="1165" fg:w="1"/><text x="96.2929%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="96.0429%" y="85" width="0.0824%" height="15" fill="rgb(245,177,7)" fg:x="1165" fg:w="1"/><text x="96.2929%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0429%" y="69" width="0.0824%" height="15" fill="rgb(246,44,46)" fg:x="1165" fg:w="1"/><text x="96.2929%" y="79.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.41%)</title><rect x="95.7955%" y="293" width="0.4122%" height="15" fill="rgb(207,173,15)" fg:x="1162" fg:w="5"/><text x="96.0455%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="95.7955%" y="277" width="0.4122%" height="15" fill="rgb(245,170,50)" fg:x="1162" fg:w="5"/><text x="96.0455%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="95.7955%" y="261" width="0.4122%" height="15" fill="rgb(233,156,21)" fg:x="1162" fg:w="5"/><text x="96.0455%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="95.8780%" y="245" width="0.3298%" height="15" fill="rgb(253,146,27)" fg:x="1163" fg:w="4"/><text x="96.1280%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="95.8780%" y="229" width="0.3298%" height="15" fill="rgb(247,66,29)" fg:x="1163" fg:w="4"/><text x="96.1280%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.25%)</title><rect x="95.9604%" y="213" width="0.2473%" height="15" fill="rgb(218,207,26)" fg:x="1164" fg:w="3"/><text x="96.2104%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1253%" y="197" width="0.0824%" height="15" fill="rgb(234,93,26)" fg:x="1166" fg:w="1"/><text x="96.3753%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.1253%" y="181" width="0.0824%" height="15" fill="rgb(214,75,48)" fg:x="1166" fg:w="1"/><text x="96.3753%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.1253%" y="165" width="0.0824%" height="15" fill="rgb(229,119,22)" fg:x="1166" fg:w="1"/><text x="96.3753%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1253%" y="149" width="0.0824%" height="15" fill="rgb(226,153,19)" fg:x="1166" fg:w="1"/><text x="96.3753%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.1253%" y="133" width="0.0824%" height="15" fill="rgb(220,204,36)" fg:x="1166" fg:w="1"/><text x="96.3753%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.1253%" y="117" width="0.0824%" height="15" fill="rgb(253,181,43)" fg:x="1166" fg:w="1"/><text x="96.3753%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.2077%" y="149" width="0.1649%" height="15" fill="rgb(211,41,51)" fg:x="1167" fg:w="2"/><text x="96.4577%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.2077%" y="133" width="0.1649%" height="15" fill="rgb(207,215,0)" fg:x="1167" fg:w="2"/><text x="96.4577%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="96.2077%" y="117" width="0.1649%" height="15" fill="rgb(212,153,10)" fg:x="1167" fg:w="2"/><text x="96.4577%" y="127.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.2902%" y="101" width="0.0824%" height="15" fill="rgb(251,171,36)" fg:x="1168" fg:w="1"/><text x="96.5402%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="96.2077%" y="165" width="0.2473%" height="15" fill="rgb(225,219,41)" fg:x="1167" fg:w="3"/><text x="96.4577%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3726%" y="149" width="0.0824%" height="15" fill="rgb(208,200,1)" fg:x="1169" fg:w="1"/><text x="96.6226%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.3726%" y="133" width="0.0824%" height="15" fill="rgb(206,75,47)" fg:x="1169" fg:w="1"/><text x="96.6226%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3726%" y="117" width="0.0824%" height="15" fill="rgb(248,3,16)" fg:x="1169" fg:w="1"/><text x="96.6226%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="96.2077%" y="197" width="0.3298%" height="15" fill="rgb(242,157,36)" fg:x="1167" fg:w="4"/><text x="96.4577%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="96.2077%" y="181" width="0.3298%" height="15" fill="rgb(215,175,11)" fg:x="1167" fg:w="4"/><text x="96.4577%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4551%" y="165" width="0.0824%" height="15" fill="rgb(252,222,22)" fg:x="1170" fg:w="1"/><text x="96.7051%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.4551%" y="149" width="0.0824%" height="15" fill="rgb(250,121,35)" fg:x="1170" fg:w="1"/><text x="96.7051%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="96.2077%" y="229" width="0.4122%" height="15" fill="rgb(233,120,49)" fg:x="1167" fg:w="5"/><text x="96.4577%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="96.2077%" y="213" width="0.4122%" height="15" fill="rgb(205,201,14)" fg:x="1167" fg:w="5"/><text x="96.4577%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.5375%" y="197" width="0.0824%" height="15" fill="rgb(219,58,45)" fg:x="1171" fg:w="1"/><text x="96.7875%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5375%" y="181" width="0.0824%" height="15" fill="rgb(251,65,12)" fg:x="1171" fg:w="1"/><text x="96.7875%" y="191.50"></text></g><g><title>plugins_core::tools::contained_by (20 samples, 1.65%)</title><rect x="95.0536%" y="373" width="1.6488%" height="15" fill="rgb(224,47,31)" fg:x="1153" fg:w="20"/><text x="95.3036%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (15 samples, 1.24%)</title><rect x="95.4658%" y="357" width="1.2366%" height="15" fill="rgb(233,74,26)" fg:x="1158" fg:w="15"/><text x="95.7158%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (15 samples, 1.24%)</title><rect x="95.4658%" y="341" width="1.2366%" height="15" fill="rgb(231,211,31)" fg:x="1158" fg:w="15"/><text x="95.7158%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (15 samples, 1.24%)</title><rect x="95.4658%" y="325" width="1.2366%" height="15" fill="rgb(239,167,5)" fg:x="1158" fg:w="15"/><text x="95.7158%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.15%)</title><rect x="95.5482%" y="309" width="1.1542%" height="15" fill="rgb(241,85,0)" fg:x="1159" fg:w="14"/><text x="95.7982%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.49%)</title><rect x="96.2077%" y="293" width="0.4946%" height="15" fill="rgb(229,130,21)" fg:x="1167" fg:w="6"/><text x="96.4577%" y="303.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.49%)</title><rect x="96.2077%" y="277" width="0.4946%" height="15" fill="rgb(254,84,49)" fg:x="1167" fg:w="6"/><text x="96.4577%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="96.2077%" y="261" width="0.4946%" height="15" fill="rgb(235,85,21)" fg:x="1167" fg:w="6"/><text x="96.4577%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="96.2077%" y="245" width="0.4946%" height="15" fill="rgb(246,128,52)" fg:x="1167" fg:w="6"/><text x="96.4577%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.6200%" y="229" width="0.0824%" height="15" fill="rgb(243,114,49)" fg:x="1172" fg:w="1"/><text x="96.8700%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.6200%" y="213" width="0.0824%" height="15" fill="rgb(240,224,22)" fg:x="1172" fg:w="1"/><text x="96.8700%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.8673%" y="245" width="0.0824%" height="15" fill="rgb(247,201,52)" fg:x="1175" fg:w="1"/><text x="97.1173%" y="255.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.33%)</title><rect x="96.7024%" y="357" width="0.3298%" height="15" fill="rgb(231,70,45)" fg:x="1173" fg:w="4"/><text x="96.9524%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="96.7024%" y="341" width="0.3298%" height="15" fill="rgb(217,215,20)" fg:x="1173" fg:w="4"/><text x="96.9524%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="96.7848%" y="325" width="0.2473%" height="15" fill="rgb(226,170,30)" fg:x="1174" fg:w="3"/><text x="97.0348%" y="335.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (3 samples, 0.25%)</title><rect x="96.7848%" y="309" width="0.2473%" height="15" fill="rgb(220,190,43)" fg:x="1174" fg:w="3"/><text x="97.0348%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="96.7848%" y="293" width="0.2473%" height="15" fill="rgb(218,20,18)" fg:x="1174" fg:w="3"/><text x="97.0348%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="96.8673%" y="277" width="0.1649%" height="15" fill="rgb(245,37,26)" fg:x="1175" fg:w="2"/><text x="97.1173%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.8673%" y="261" width="0.1649%" height="15" fill="rgb(241,127,29)" fg:x="1175" fg:w="2"/><text x="97.1173%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.9497%" y="245" width="0.0824%" height="15" fill="rgb(241,33,26)" fg:x="1176" fg:w="1"/><text x="97.1997%" y="255.50"></text></g><g><title>plugins_core::tools::occupied_by (5 samples, 0.41%)</title><rect x="96.7024%" y="373" width="0.4122%" height="15" fill="rgb(220,106,21)" fg:x="1173" fg:w="5"/><text x="96.9524%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="97.0322%" y="357" width="0.0824%" height="15" fill="rgb(225,125,35)" fg:x="1177" fg:w="1"/><text x="97.2822%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.0322%" y="341" width="0.0824%" height="15" fill="rgb(248,80,22)" fg:x="1177" fg:w="1"/><text x="97.2822%" y="351.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (1 samples, 0.08%)</title><rect x="97.0322%" y="325" width="0.0824%" height="15" fill="rgb(231,117,39)" fg:x="1177" fg:w="1"/><text x="97.2822%" y="335.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (1 samples, 0.08%)</title><rect x="97.0322%" y="309" width="0.0824%" height="15" fill="rgb(239,183,16)" fg:x="1177" fg:w="1"/><text x="97.2822%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="97.0322%" y="293" width="0.0824%" height="15" fill="rgb(221,61,19)" fg:x="1177" fg:w="1"/><text x="97.2822%" y="303.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="97.0322%" y="277" width="0.0824%" height="15" fill="rgb(239,196,44)" fg:x="1177" fg:w="1"/><text x="97.2822%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1146%" y="341" width="0.0824%" height="15" fill="rgb(206,113,19)" fg:x="1178" fg:w="1"/><text x="97.3646%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1970%" y="341" width="0.0824%" height="15" fill="rgb(245,114,12)" fg:x="1179" fg:w="1"/><text x="97.4470%" y="351.50"></text></g><g><title>engine::session::Session::captured (56 samples, 4.62%)</title><rect x="92.7453%" y="549" width="4.6167%" height="15" fill="rgb(247,89,39)" fg:x="1125" fg:w="56"/><text x="92.9953%" y="559.50">engin..</text></g><g><title>engine::session::logs::capture (52 samples, 4.29%)</title><rect x="93.0750%" y="533" width="4.2869%" height="15" fill="rgb(213,85,14)" fg:x="1129" fg:w="52"/><text x="93.3250%" y="543.50">engin..</text></g><g><title>tracing_core::dispatcher::with_default (48 samples, 3.96%)</title><rect x="93.4048%" y="517" width="3.9571%" height="15" fill="rgb(249,206,33)" fg:x="1133" fg:w="48"/><text x="93.6548%" y="527.50">trac..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (48 samples, 3.96%)</title><rect x="93.4048%" y="501" width="3.9571%" height="15" fill="rgb(235,167,47)" fg:x="1133" fg:w="48"/><text x="93.6548%" y="511.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::apply_middleware (48 samples, 3.96%)</title><rect x="93.4048%" y="485" width="3.9571%" height="15" fill="rgb(217,177,16)" fg:x="1133" fg:w="48"/><text x="93.6548%" y="495.50">kern..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (48 samples, 3.96%)</title><rect x="93.4048%" y="469" width="3.9571%" height="15" fill="rgb(250,228,29)" fg:x="1133" fg:w="48"/><text x="93.6548%" y="479.50">kern..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (48 samples, 3.96%)</title><rect x="93.4048%" y="453" width="3.9571%" height="15" fill="rgb(216,195,42)" fg:x="1133" fg:w="48"/><text x="93.6548%" y="463.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (32 samples, 2.64%)</title><rect x="94.7238%" y="437" width="2.6381%" height="15" fill="rgb(232,192,32)" fg:x="1149" fg:w="32"/><text x="94.9738%" y="447.50">ke..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (32 samples, 2.64%)</title><rect x="94.7238%" y="421" width="2.6381%" height="15" fill="rgb(211,8,47)" fg:x="1149" fg:w="32"/><text x="94.9738%" y="431.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (31 samples, 2.56%)</title><rect x="94.8063%" y="405" width="2.5556%" height="15" fill="rgb(251,201,9)" fg:x="1150" fg:w="31"/><text x="95.0563%" y="415.50">pl..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (31 samples, 2.56%)</title><rect x="94.8063%" y="389" width="2.5556%" height="15" fill="rgb(206,185,47)" fg:x="1150" fg:w="31"/><text x="95.0563%" y="399.50">pl..</text></g><g><title>plugins_core::tools::worn_by (3 samples, 0.25%)</title><rect x="97.1146%" y="373" width="0.2473%" height="15" fill="rgb(245,54,32)" fg:x="1178" fg:w="3"/><text x="97.3646%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.25%)</title><rect x="97.1146%" y="357" width="0.2473%" height="15" fill="rgb(208,1,8)" fg:x="1178" fg:w="3"/><text x="97.3646%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2795%" y="341" width="0.0824%" height="15" fill="rgb(228,57,24)" fg:x="1180" fg:w="1"/><text x="97.5295%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2795%" y="325" width="0.0824%" height="15" fill="rgb(251,24,8)" fg:x="1180" fg:w="1"/><text x="97.5295%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.3619%" y="517" width="0.0824%" height="15" fill="rgb(236,196,50)" fg:x="1181" fg:w="1"/><text x="97.6119%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="97.3619%" y="501" width="0.0824%" height="15" fill="rgb(246,222,29)" fg:x="1181" fg:w="1"/><text x="97.6119%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.3619%" y="485" width="0.0824%" height="15" fill="rgb(211,34,40)" fg:x="1181" fg:w="1"/><text x="97.6119%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4444%" y="501" width="0.1649%" height="15" fill="rgb(210,66,51)" fg:x="1182" fg:w="2"/><text x="97.6944%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4444%" y="485" width="0.1649%" height="15" fill="rgb(250,56,43)" fg:x="1182" fg:w="2"/><text x="97.6944%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4444%" y="469" width="0.1649%" height="15" fill="rgb(240,111,50)" fg:x="1182" fg:w="2"/><text x="97.6944%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5268%" y="453" width="0.0824%" height="15" fill="rgb(209,117,13)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5268%" y="437" width="0.0824%" height="15" fill="rgb(232,164,45)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.5268%" y="421" width="0.0824%" height="15" fill="rgb(205,69,32)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.5268%" y="405" width="0.0824%" height="15" fill="rgb(240,147,45)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.5268%" y="389" width="0.0824%" height="15" fill="rgb(221,94,48)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5268%" y="373" width="0.0824%" height="15" fill="rgb(249,209,17)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5268%" y="357" width="0.0824%" height="15" fill="rgb(228,57,28)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.5268%" y="341" width="0.0824%" height="15" fill="rgb(250,133,26)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.5268%" y="325" width="0.0824%" height="15" fill="rgb(254,15,16)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.5268%" y="309" width="0.0824%" height="15" fill="rgb(209,147,42)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.5268%" y="293" width="0.0824%" height="15" fill="rgb(208,5,29)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5268%" y="277" width="0.0824%" height="15" fill="rgb(250,73,31)" fg:x="1183" fg:w="1"/><text x="97.7768%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6092%" y="453" width="0.0824%" height="15" fill="rgb(238,45,10)" fg:x="1184" fg:w="1"/><text x="97.8592%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6092%" y="437" width="0.0824%" height="15" fill="rgb(214,104,5)" fg:x="1184" fg:w="1"/><text x="97.8592%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6092%" y="421" width="0.0824%" height="15" fill="rgb(242,217,19)" fg:x="1184" fg:w="1"/><text x="97.8592%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.6917%" y="405" width="0.0824%" height="15" fill="rgb(246,113,27)" fg:x="1185" fg:w="1"/><text x="97.9417%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.6917%" y="389" width="0.0824%" height="15" fill="rgb(221,34,27)" fg:x="1185" fg:w="1"/><text x="97.9417%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.6917%" y="373" width="0.0824%" height="15" fill="rgb(246,109,6)" fg:x="1185" fg:w="1"/><text x="97.9417%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.6917%" y="453" width="0.1649%" height="15" fill="rgb(217,12,25)" fg:x="1185" fg:w="2"/><text x="97.9417%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.6917%" y="437" width="0.1649%" height="15" fill="rgb(250,195,5)" fg:x="1185" fg:w="2"/><text x="97.9417%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.6917%" y="421" width="0.1649%" height="15" fill="rgb(244,140,45)" fg:x="1185" fg:w="2"/><text x="97.9417%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7741%" y="405" width="0.0824%" height="15" fill="rgb(230,64,14)" fg:x="1186" fg:w="1"/><text x="98.0241%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7741%" y="389" width="0.0824%" height="15" fill="rgb(206,27,27)" fg:x="1186" fg:w="1"/><text x="98.0241%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.7741%" y="373" width="0.0824%" height="15" fill="rgb(230,14,50)" fg:x="1186" fg:w="1"/><text x="98.0241%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="97.7741%" y="357" width="0.0824%" height="15" fill="rgb(237,172,14)" fg:x="1186" fg:w="1"/><text x="98.0241%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.7741%" y="341" width="0.0824%" height="15" fill="rgb(209,25,21)" fg:x="1186" fg:w="1"/><text x="98.0241%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7741%" y="325" width="0.0824%" height="15" fill="rgb(248,148,22)" fg:x="1186" fg:w="1"/><text x="98.0241%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="97.6092%" y="501" width="0.4122%" height="15" fill="rgb(234,100,22)" fg:x="1184" fg:w="5"/><text x="97.8592%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.41%)</title><rect x="97.6092%" y="485" width="0.4122%" height="15" fill="rgb(210,20,30)" fg:x="1184" fg:w="5"/><text x="97.8592%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.41%)</title><rect x="97.6092%" y="469" width="0.4122%" height="15" fill="rgb(232,58,0)" fg:x="1184" fg:w="5"/><text x="97.8592%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.8566%" y="453" width="0.1649%" height="15" fill="rgb(221,68,13)" fg:x="1187" fg:w="2"/><text x="98.1066%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.8566%" y="437" width="0.1649%" height="15" fill="rgb(231,194,11)" fg:x="1187" fg:w="2"/><text x="98.1066%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="97.8566%" y="421" width="0.1649%" height="15" fill="rgb(235,51,41)" fg:x="1187" fg:w="2"/><text x="98.1066%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="97.8566%" y="405" width="0.1649%" height="15" fill="rgb(240,50,32)" fg:x="1187" fg:w="2"/><text x="98.1066%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="97.8566%" y="389" width="0.1649%" height="15" fill="rgb(240,185,36)" fg:x="1187" fg:w="2"/><text x="98.1066%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="97.9390%" y="373" width="0.0824%" height="15" fill="rgb(211,168,15)" fg:x="1188" fg:w="1"/><text x="98.1890%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.9390%" y="357" width="0.0824%" height="15" fill="rgb(221,70,0)" fg:x="1188" fg:w="1"/><text x="98.1890%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.9390%" y="341" width="0.0824%" height="15" fill="rgb(205,21,33)" fg:x="1188" fg:w="1"/><text x="98.1890%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0214%" y="405" width="0.0824%" height="15" fill="rgb(225,106,10)" fg:x="1189" fg:w="1"/><text x="98.2714%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.1039%" y="405" width="0.0824%" height="15" fill="rgb(236,200,50)" fg:x="1190" fg:w="1"/><text x="98.3539%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="98.0214%" y="469" width="0.2473%" height="15" fill="rgb(249,93,23)" fg:x="1189" fg:w="3"/><text x="98.2714%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="98.0214%" y="453" width="0.2473%" height="15" fill="rgb(244,115,35)" fg:x="1189" fg:w="3"/><text x="98.2714%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="98.0214%" y="437" width="0.2473%" height="15" fill="rgb(231,129,47)" fg:x="1189" fg:w="3"/><text x="98.2714%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="98.0214%" y="421" width="0.2473%" height="15" fill="rgb(225,160,50)" fg:x="1189" fg:w="3"/><text x="98.2714%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1863%" y="405" width="0.0824%" height="15" fill="rgb(218,135,23)" fg:x="1191" fg:w="1"/><text x="98.4363%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.1863%" y="389" width="0.0824%" height="15" fill="rgb(227,119,14)" fg:x="1191" fg:w="1"/><text x="98.4363%" y="399.50"></text></g><g><title>engine::session::internal::Added::find_refs (12 samples, 0.99%)</title><rect x="97.3619%" y="533" width="0.9893%" height="15" fill="rgb(242,138,13)" fg:x="1181" fg:w="12"/><text x="97.6119%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (11 samples, 0.91%)</title><rect x="97.4444%" y="517" width="0.9068%" height="15" fill="rgb(215,11,16)" fg:x="1182" fg:w="11"/><text x="97.6944%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="98.0214%" y="501" width="0.3298%" height="15" fill="rgb(234,170,50)" fg:x="1189" fg:w="4"/><text x="98.2714%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="98.0214%" y="485" width="0.3298%" height="15" fill="rgb(233,34,20)" fg:x="1189" fg:w="4"/><text x="98.2714%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="98.2688%" y="469" width="0.0824%" height="15" fill="rgb(237,100,45)" fg:x="1192" fg:w="1"/><text x="98.5188%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3512%" y="421" width="0.0824%" height="15" fill="rgb(231,184,36)" fg:x="1193" fg:w="1"/><text x="98.6012%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.25%)</title><rect x="98.3512%" y="517" width="0.2473%" height="15" fill="rgb(252,93,2)" fg:x="1193" fg:w="3"/><text x="98.6012%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="98.3512%" y="501" width="0.2473%" height="15" fill="rgb(248,176,47)" fg:x="1193" fg:w="3"/><text x="98.6012%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="98.3512%" y="485" width="0.2473%" height="15" fill="rgb(249,125,23)" fg:x="1193" fg:w="3"/><text x="98.6012%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="98.3512%" y="469" width="0.2473%" height="15" fill="rgb(239,67,42)" fg:x="1193" fg:w="3"/><text x="98.6012%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="98.3512%" y="453" width="0.2473%" height="15" fill="rgb(244,162,4)" fg:x="1193" fg:w="3"/><text x="98.6012%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.25%)</title><rect x="98.3512%" y="437" width="0.2473%" height="15" fill="rgb(214,150,38)" fg:x="1193" fg:w="3"/><text x="98.6012%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4336%" y="421" width="0.1649%" height="15" fill="rgb(228,211,28)" fg:x="1194" fg:w="2"/><text x="98.6836%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4336%" y="405" width="0.1649%" height="15" fill="rgb(212,98,48)" fg:x="1194" fg:w="2"/><text x="98.6836%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.4336%" y="389" width="0.1649%" height="15" fill="rgb(213,45,13)" fg:x="1194" fg:w="2"/><text x="98.6836%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4336%" y="373" width="0.1649%" height="15" fill="rgb(218,35,29)" fg:x="1194" fg:w="2"/><text x="98.6836%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.4336%" y="357" width="0.1649%" height="15" fill="rgb(244,13,3)" fg:x="1194" fg:w="2"/><text x="98.6836%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.5161%" y="341" width="0.0824%" height="15" fill="rgb(235,170,19)" fg:x="1195" fg:w="1"/><text x="98.7661%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5161%" y="325" width="0.0824%" height="15" fill="rgb(233,193,43)" fg:x="1195" fg:w="1"/><text x="98.7661%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5161%" y="309" width="0.0824%" height="15" fill="rgb(228,223,20)" fg:x="1195" fg:w="1"/><text x="98.7661%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5161%" y="293" width="0.0824%" height="15" fill="rgb(208,85,54)" fg:x="1195" fg:w="1"/><text x="98.7661%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="98.5985%" y="421" width="0.2473%" height="15" fill="rgb(254,14,45)" fg:x="1196" fg:w="3"/><text x="98.8485%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6810%" y="405" width="0.1649%" height="15" fill="rgb(247,99,29)" fg:x="1197" fg:w="2"/><text x="98.9310%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.6810%" y="389" width="0.1649%" height="15" fill="rgb(225,180,54)" fg:x="1197" fg:w="2"/><text x="98.9310%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.6810%" y="373" width="0.1649%" height="15" fill="rgb(239,88,43)" fg:x="1197" fg:w="2"/><text x="98.9310%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6810%" y="357" width="0.1649%" height="15" fill="rgb(209,47,11)" fg:x="1197" fg:w="2"/><text x="98.9310%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="98.6810%" y="341" width="0.1649%" height="15" fill="rgb(219,179,23)" fg:x="1197" fg:w="2"/><text x="98.9310%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.6810%" y="325" width="0.1649%" height="15" fill="rgb(213,183,19)" fg:x="1197" fg:w="2"/><text x="98.9310%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="98.5985%" y="437" width="0.3298%" height="15" fill="rgb(210,11,9)" fg:x="1196" fg:w="4"/><text x="98.8485%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8458%" y="421" width="0.0824%" height="15" fill="rgb(239,194,16)" fg:x="1199" fg:w="1"/><text x="99.0958%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.8458%" y="405" width="0.0824%" height="15" fill="rgb(246,23,50)" fg:x="1199" fg:w="1"/><text x="99.0958%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (20 samples, 1.65%)</title><rect x="97.3619%" y="549" width="1.6488%" height="15" fill="rgb(245,10,41)" fg:x="1181" fg:w="20"/><text x="97.6119%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.66%)</title><rect x="98.3512%" y="533" width="0.6595%" height="15" fill="rgb(228,43,24)" fg:x="1193" fg:w="8"/><text x="98.6012%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.41%)</title><rect x="98.5985%" y="517" width="0.4122%" height="15" fill="rgb(220,151,0)" fg:x="1196" fg:w="5"/><text x="98.8485%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="98.5985%" y="501" width="0.4122%" height="15" fill="rgb(232,219,10)" fg:x="1196" fg:w="5"/><text x="98.8485%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="98.5985%" y="485" width="0.4122%" height="15" fill="rgb(227,217,48)" fg:x="1196" fg:w="5"/><text x="98.8485%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="98.5985%" y="469" width="0.4122%" height="15" fill="rgb(210,66,35)" fg:x="1196" fg:w="5"/><text x="98.8485%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="98.5985%" y="453" width="0.4122%" height="15" fill="rgb(254,6,7)" fg:x="1196" fg:w="5"/><text x="98.8485%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9283%" y="437" width="0.0824%" height="15" fill="rgb(235,222,42)" fg:x="1200" fg:w="1"/><text x="99.1783%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="99.0107%" y="517" width="0.0824%" height="15" fill="rgb(245,126,5)" fg:x="1201" fg:w="1"/><text x="99.2607%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1756%" y="501" width="0.0824%" height="15" fill="rgb(215,73,17)" fg:x="1203" fg:w="1"/><text x="99.4256%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="99.2580%" y="501" width="0.1649%" height="15" fill="rgb(219,198,52)" fg:x="1204" fg:w="2"/><text x="99.5080%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.2580%" y="485" width="0.1649%" height="15" fill="rgb(217,159,18)" fg:x="1204" fg:w="2"/><text x="99.5080%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2580%" y="469" width="0.1649%" height="15" fill="rgb(212,177,18)" fg:x="1204" fg:w="2"/><text x="99.5080%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.2580%" y="453" width="0.1649%" height="15" fill="rgb(241,10,11)" fg:x="1204" fg:w="2"/><text x="99.5080%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2580%" y="437" width="0.1649%" height="15" fill="rgb(232,114,35)" fg:x="1204" fg:w="2"/><text x="99.5080%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.2580%" y="421" width="0.1649%" height="15" fill="rgb(238,222,8)" fg:x="1204" fg:w="2"/><text x="99.5080%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.2580%" y="405" width="0.1649%" height="15" fill="rgb(251,153,44)" fg:x="1204" fg:w="2"/><text x="99.5080%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="99.4229%" y="501" width="0.1649%" height="15" fill="rgb(210,140,51)" fg:x="1206" fg:w="2"/><text x="99.6729%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.4229%" y="485" width="0.1649%" height="15" fill="rgb(222,63,0)" fg:x="1206" fg:w="2"/><text x="99.6729%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="99.4229%" y="469" width="0.1649%" height="15" fill="rgb(240,18,40)" fg:x="1206" fg:w="2"/><text x="99.6729%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5054%" y="453" width="0.0824%" height="15" fill="rgb(237,88,16)" fg:x="1207" fg:w="1"/><text x="99.7554%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="99.5878%" y="501" width="0.0824%" height="15" fill="rgb(251,117,13)" fg:x="1208" fg:w="1"/><text x="99.8378%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5878%" y="485" width="0.0824%" height="15" fill="rgb(251,228,8)" fg:x="1208" fg:w="1"/><text x="99.8378%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5878%" y="469" width="0.0824%" height="15" fill="rgb(205,107,49)" fg:x="1208" fg:w="1"/><text x="99.8378%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.5878%" y="453" width="0.0824%" height="15" fill="rgb(238,72,41)" fg:x="1208" fg:w="1"/><text x="99.8378%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.74%)</title><rect x="99.0932%" y="517" width="0.7420%" height="15" fill="rgb(248,183,52)" fg:x="1202" fg:w="9"/><text x="99.3432%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="99.6702%" y="501" width="0.1649%" height="15" fill="rgb(215,58,20)" fg:x="1209" fg:w="2"/><text x="99.9202%" y="511.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.6702%" y="485" width="0.1649%" height="15" fill="rgb(209,49,13)" fg:x="1209" fg:w="2"/><text x="99.9202%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.6702%" y="469" width="0.1649%" height="15" fill="rgb(208,113,17)" fg:x="1209" fg:w="2"/><text x="99.9202%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6702%" y="453" width="0.1649%" height="15" fill="rgb(208,14,22)" fg:x="1209" fg:w="2"/><text x="99.9202%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.6702%" y="437" width="0.1649%" height="15" fill="rgb(222,95,2)" fg:x="1209" fg:w="2"/><text x="99.9202%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6702%" y="421" width="0.1649%" height="15" fill="rgb(253,180,37)" fg:x="1209" fg:w="2"/><text x="99.9202%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.7527%" y="405" width="0.0824%" height="15" fill="rgb(250,81,33)" fg:x="1210" fg:w="1"/><text x="100.0027%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.7527%" y="389" width="0.0824%" height="15" fill="rgb(251,151,41)" fg:x="1210" fg:w="1"/><text x="100.0027%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.7527%" y="373" width="0.0824%" height="15" fill="rgb(210,135,17)" fg:x="1210" fg:w="1"/><text x="100.0027%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.7527%" y="357" width="0.0824%" height="15" fill="rgb(239,21,29)" fg:x="1210" fg:w="1"/><text x="100.0027%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7527%" y="341" width="0.0824%" height="15" fill="rgb(231,215,16)" fg:x="1210" fg:w="1"/><text x="100.0027%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7527%" y="325" width="0.0824%" height="15" fill="rgb(239,151,54)" fg:x="1210" fg:w="1"/><text x="100.0027%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7527%" y="309" width="0.0824%" height="15" fill="rgb(222,122,38)" fg:x="1210" fg:w="1"/><text x="100.0027%" y="319.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (91 samples, 7.50%)</title><rect x="92.4155%" y="581" width="7.5021%" height="15" fill="rgb(243,128,1)" fg:x="1121" fg:w="91"/><text x="92.6655%" y="591.50">engine::se..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (91 samples, 7.50%)</title><rect x="92.4155%" y="565" width="7.5021%" height="15" fill="rgb(225,74,21)" fg:x="1121" fg:w="91"/><text x="92.6655%" y="575.50">engine::se..</text></g><g><title>kernel::model::EntityPtrResolver::world (11 samples, 0.91%)</title><rect x="99.0107%" y="549" width="0.9068%" height="15" fill="rgb(216,210,10)" fg:x="1201" fg:w="11"/><text x="99.2607%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (11 samples, 0.91%)</title><rect x="99.0107%" y="533" width="0.9068%" height="15" fill="rgb(228,76,19)" fg:x="1201" fg:w="11"/><text x="99.2607%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.8351%" y="517" width="0.0824%" height="15" fill="rgb(236,80,34)" fg:x="1211" fg:w="1"/><text x="100.0851%" y="527.50"></text></g><g><title>all (1,213 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(225,173,23)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="943.50"></text></g><g><title>simple-c0396b96 (1,213 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(253,38,1)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="927.50">simple-c0396b96</text></g><g><title>_start (1,213 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(206,155,35)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="911.50">_start</text></g><g><title>__libc_start_main (1,213 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(254,27,53)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="895.50">__libc_start_main</text></g><g><title>main (1,213 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(225,52,41)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (1,213 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(244,53,18)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,213 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(254,206,48)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,213 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(236,182,23)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,213 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(236,191,37)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,213 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(245,53,8)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,213 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(245,147,9)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,213 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(218,24,48)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,213 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(254,23,9)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,213 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(244,105,9)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,213 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(212,142,22)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,213 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(221,114,49)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,213 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(223,210,25)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="687.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,213 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(235,162,44)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,213 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(237,65,45)" fg:x="0" fg:w="1213"/><text x="0.2500%" y="655.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (438 samples, 36.11%)</title><rect x="63.8912%" y="629" width="36.1088%" height="15" fill="rgb(208,79,9)" fg:x="775" fg:w="438"/><text x="64.1412%" y="639.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine:..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (438 samples, 36.11%)</title><rect x="63.8912%" y="613" width="36.1088%" height="15" fill="rgb(215,228,8)" fg:x="775" fg:w="438"/><text x="64.1412%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (438 samples, 36.11%)</title><rect x="63.8912%" y="597" width="36.1088%" height="15" fill="rgb(205,185,17)" fg:x="775" fg:w="438"/><text x="64.1412%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9176%" y="581" width="0.0824%" height="15" fill="rgb(213,62,36)" fg:x="1212" fg:w="1"/><text x="100.1676%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9176%" y="565" width="0.0824%" height="15" fill="rgb(209,34,9)" fg:x="1212" fg:w="1"/><text x="100.1676%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9176%" y="549" width="0.0824%" height="15" fill="rgb(246,151,27)" fg:x="1212" fg:w="1"/><text x="100.1676%" y="559.50"></text></g></svg></svg>