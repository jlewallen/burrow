<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1046" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1029.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1029.00"> </text><svg id="frames" x="10" width="1180" total_samples="1260"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0794%" y="629" width="0.0794%" height="15" fill="rgb(242,217,10)" fg:x="1" fg:w="1"/><text x="0.3294%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1587%" y="629" width="0.0794%" height="15" fill="rgb(250,193,7)" fg:x="2" fg:w="1"/><text x="0.4087%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1587%" y="613" width="0.0794%" height="15" fill="rgb(230,104,19)" fg:x="2" fg:w="1"/><text x="0.4087%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.3175%" y="549" width="0.1587%" height="15" fill="rgb(230,181,4)" fg:x="4" fg:w="2"/><text x="0.5675%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4762%" y="517" width="0.0794%" height="15" fill="rgb(216,219,49)" fg:x="6" fg:w="1"/><text x="0.7262%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.5556%" y="517" width="0.2381%" height="15" fill="rgb(254,144,0)" fg:x="7" fg:w="3"/><text x="0.8056%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.5556%" y="501" width="0.2381%" height="15" fill="rgb(205,209,38)" fg:x="7" fg:w="3"/><text x="0.8056%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.7937%" y="501" width="0.0794%" height="15" fill="rgb(240,21,42)" fg:x="10" fg:w="1"/><text x="1.0437%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="0.7937%" y="485" width="0.0794%" height="15" fill="rgb(241,132,3)" fg:x="10" fg:w="1"/><text x="1.0437%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7937%" y="469" width="0.0794%" height="15" fill="rgb(225,14,2)" fg:x="10" fg:w="1"/><text x="1.0437%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8730%" y="501" width="0.0794%" height="15" fill="rgb(210,141,35)" fg:x="11" fg:w="1"/><text x="1.1230%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.71%)</title><rect x="0.3175%" y="565" width="0.7143%" height="15" fill="rgb(251,14,44)" fg:x="4" fg:w="9"/><text x="0.5675%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="0.4762%" y="549" width="0.5556%" height="15" fill="rgb(247,48,18)" fg:x="6" fg:w="7"/><text x="0.7262%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="0.4762%" y="533" width="0.5556%" height="15" fill="rgb(225,0,40)" fg:x="6" fg:w="7"/><text x="0.7262%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="0.7937%" y="517" width="0.2381%" height="15" fill="rgb(221,31,33)" fg:x="10" fg:w="3"/><text x="1.0437%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.9524%" y="501" width="0.0794%" height="15" fill="rgb(237,42,40)" fg:x="12" fg:w="1"/><text x="1.2024%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.9524%" y="485" width="0.0794%" height="15" fill="rgb(233,51,29)" fg:x="12" fg:w="1"/><text x="1.2024%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.95%)</title><rect x="0.3175%" y="581" width="0.9524%" height="15" fill="rgb(226,58,20)" fg:x="4" fg:w="12"/><text x="0.5675%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.0317%" y="565" width="0.2381%" height="15" fill="rgb(208,98,7)" fg:x="13" fg:w="3"/><text x="1.2817%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2698%" y="581" width="0.0794%" height="15" fill="rgb(228,143,44)" fg:x="16" fg:w="1"/><text x="1.5198%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.19%)</title><rect x="0.2381%" y="613" width="1.1905%" height="15" fill="rgb(246,55,38)" fg:x="3" fg:w="15"/><text x="0.4881%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (14 samples, 1.11%)</title><rect x="0.3175%" y="597" width="1.1111%" height="15" fill="rgb(247,87,16)" fg:x="4" fg:w="14"/><text x="0.5675%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="1.3492%" y="581" width="0.0794%" height="15" fill="rgb(234,129,42)" fg:x="17" fg:w="1"/><text x="1.5992%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3492%" y="565" width="0.0794%" height="15" fill="rgb(220,82,16)" fg:x="17" fg:w="1"/><text x="1.5992%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.43%)</title><rect x="0.0794%" y="645" width="1.4286%" height="15" fill="rgb(211,88,4)" fg:x="1" fg:w="18"/><text x="0.3294%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (16 samples, 1.27%)</title><rect x="0.2381%" y="629" width="1.2698%" height="15" fill="rgb(248,151,21)" fg:x="3" fg:w="16"/><text x="0.4881%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryEntityStorage&gt; (1 samples, 0.08%)</title><rect x="1.4286%" y="613" width="0.0794%" height="15" fill="rgb(238,163,6)" fg:x="18" fg:w="1"/><text x="1.6786%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="1.7460%" y="581" width="0.0794%" height="15" fill="rgb(209,183,11)" fg:x="22" fg:w="1"/><text x="1.9960%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.7460%" y="565" width="0.0794%" height="15" fill="rgb(219,37,20)" fg:x="22" fg:w="1"/><text x="1.9960%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.7460%" y="549" width="0.0794%" height="15" fill="rgb(210,158,4)" fg:x="22" fg:w="1"/><text x="1.9960%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="1.7460%" y="533" width="0.0794%" height="15" fill="rgb(221,167,53)" fg:x="22" fg:w="1"/><text x="1.9960%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="1.7460%" y="517" width="0.0794%" height="15" fill="rgb(237,151,45)" fg:x="22" fg:w="1"/><text x="1.9960%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="1.7460%" y="501" width="0.0794%" height="15" fill="rgb(231,39,3)" fg:x="22" fg:w="1"/><text x="1.9960%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="1.7460%" y="485" width="0.0794%" height="15" fill="rgb(212,167,28)" fg:x="22" fg:w="1"/><text x="1.9960%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="1.7460%" y="469" width="0.0794%" height="15" fill="rgb(232,178,8)" fg:x="22" fg:w="1"/><text x="1.9960%" y="479.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="1.8254%" y="581" width="0.0794%" height="15" fill="rgb(225,151,20)" fg:x="23" fg:w="1"/><text x="2.0754%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.8254%" y="565" width="0.0794%" height="15" fill="rgb(238,3,37)" fg:x="23" fg:w="1"/><text x="2.0754%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.8254%" y="549" width="0.0794%" height="15" fill="rgb(251,147,42)" fg:x="23" fg:w="1"/><text x="2.0754%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="1.8254%" y="533" width="0.0794%" height="15" fill="rgb(208,173,10)" fg:x="23" fg:w="1"/><text x="2.0754%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.8254%" y="517" width="0.0794%" height="15" fill="rgb(246,225,4)" fg:x="23" fg:w="1"/><text x="2.0754%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.0635%" y="469" width="0.0794%" height="15" fill="rgb(248,102,6)" fg:x="26" fg:w="1"/><text x="2.3135%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="2.0635%" y="453" width="0.0794%" height="15" fill="rgb(232,6,21)" fg:x="26" fg:w="1"/><text x="2.3135%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="2.1429%" y="453" width="0.0794%" height="15" fill="rgb(221,179,22)" fg:x="27" fg:w="1"/><text x="2.3929%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.1429%" y="437" width="0.0794%" height="15" fill="rgb(252,50,20)" fg:x="27" fg:w="1"/><text x="2.3929%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="2.1429%" y="421" width="0.0794%" height="15" fill="rgb(222,56,38)" fg:x="27" fg:w="1"/><text x="2.3929%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="2.2222%" y="453" width="0.1587%" height="15" fill="rgb(206,193,29)" fg:x="28" fg:w="2"/><text x="2.4722%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="2.2222%" y="437" width="0.1587%" height="15" fill="rgb(239,192,45)" fg:x="28" fg:w="2"/><text x="2.4722%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="2.3016%" y="421" width="0.0794%" height="15" fill="rgb(254,18,36)" fg:x="29" fg:w="1"/><text x="2.5516%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="2.0635%" y="501" width="0.4762%" height="15" fill="rgb(221,127,11)" fg:x="26" fg:w="6"/><text x="2.3135%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="2.0635%" y="485" width="0.4762%" height="15" fill="rgb(234,146,35)" fg:x="26" fg:w="6"/><text x="2.3135%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="2.1429%" y="469" width="0.3968%" height="15" fill="rgb(254,201,37)" fg:x="27" fg:w="5"/><text x="2.3929%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="2.3810%" y="453" width="0.1587%" height="15" fill="rgb(211,202,23)" fg:x="30" fg:w="2"/><text x="2.6310%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.4603%" y="437" width="0.0794%" height="15" fill="rgb(237,91,2)" fg:x="31" fg:w="1"/><text x="2.7103%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="2.4603%" y="421" width="0.0794%" height="15" fill="rgb(226,228,36)" fg:x="31" fg:w="1"/><text x="2.7103%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.4603%" y="405" width="0.0794%" height="15" fill="rgb(213,63,50)" fg:x="31" fg:w="1"/><text x="2.7103%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.6984%" y="469" width="0.0794%" height="15" fill="rgb(235,194,19)" fg:x="34" fg:w="1"/><text x="2.9484%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (12 samples, 0.95%)</title><rect x="1.9048%" y="565" width="0.9524%" height="15" fill="rgb(207,204,18)" fg:x="24" fg:w="12"/><text x="2.1548%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (12 samples, 0.95%)</title><rect x="1.9048%" y="549" width="0.9524%" height="15" fill="rgb(248,8,7)" fg:x="24" fg:w="12"/><text x="2.1548%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.95%)</title><rect x="1.9048%" y="533" width="0.9524%" height="15" fill="rgb(223,145,47)" fg:x="24" fg:w="12"/><text x="2.1548%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.95%)</title><rect x="1.9048%" y="517" width="0.9524%" height="15" fill="rgb(228,84,11)" fg:x="24" fg:w="12"/><text x="2.1548%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="2.5397%" y="501" width="0.3175%" height="15" fill="rgb(218,76,45)" fg:x="32" fg:w="4"/><text x="2.7897%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="2.5397%" y="485" width="0.3175%" height="15" fill="rgb(223,80,15)" fg:x="32" fg:w="4"/><text x="2.7897%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="2.7778%" y="469" width="0.0794%" height="15" fill="rgb(219,218,33)" fg:x="35" fg:w="1"/><text x="3.0278%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="2.7778%" y="453" width="0.0794%" height="15" fill="rgb(208,51,11)" fg:x="35" fg:w="1"/><text x="3.0278%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="2.7778%" y="437" width="0.0794%" height="15" fill="rgb(229,165,39)" fg:x="35" fg:w="1"/><text x="3.0278%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="2.8571%" y="517" width="0.1587%" height="15" fill="rgb(241,100,24)" fg:x="36" fg:w="2"/><text x="3.1071%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="2.9365%" y="501" width="0.0794%" height="15" fill="rgb(228,14,23)" fg:x="37" fg:w="1"/><text x="3.1865%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="3.0952%" y="485" width="0.0794%" height="15" fill="rgb(247,116,52)" fg:x="39" fg:w="1"/><text x="3.3452%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.1746%" y="485" width="0.0794%" height="15" fill="rgb(216,149,33)" fg:x="40" fg:w="1"/><text x="3.4246%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (21 samples, 1.67%)</title><rect x="1.7460%" y="613" width="1.6667%" height="15" fill="rgb(238,142,29)" fg:x="22" fg:w="21"/><text x="1.9960%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (21 samples, 1.67%)</title><rect x="1.7460%" y="597" width="1.6667%" height="15" fill="rgb(224,83,40)" fg:x="22" fg:w="21"/><text x="1.9960%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (19 samples, 1.51%)</title><rect x="1.9048%" y="581" width="1.5079%" height="15" fill="rgb(234,165,11)" fg:x="24" fg:w="19"/><text x="2.1548%" y="591.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="2.8571%" y="565" width="0.5556%" height="15" fill="rgb(215,96,23)" fg:x="36" fg:w="7"/><text x="3.1071%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="2.8571%" y="549" width="0.5556%" height="15" fill="rgb(233,179,26)" fg:x="36" fg:w="7"/><text x="3.1071%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="2.8571%" y="533" width="0.5556%" height="15" fill="rgb(225,129,33)" fg:x="36" fg:w="7"/><text x="3.1071%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="3.0159%" y="517" width="0.3968%" height="15" fill="rgb(237,49,13)" fg:x="38" fg:w="5"/><text x="3.2659%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="3.0159%" y="501" width="0.3968%" height="15" fill="rgb(211,3,31)" fg:x="38" fg:w="5"/><text x="3.2659%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.2540%" y="485" width="0.1587%" height="15" fill="rgb(216,152,19)" fg:x="41" fg:w="2"/><text x="3.5040%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.2540%" y="469" width="0.1587%" height="15" fill="rgb(251,121,35)" fg:x="41" fg:w="2"/><text x="3.5040%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.2540%" y="453" width="0.1587%" height="15" fill="rgb(210,217,47)" fg:x="41" fg:w="2"/><text x="3.5040%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="3.2540%" y="437" width="0.1587%" height="15" fill="rgb(244,116,22)" fg:x="41" fg:w="2"/><text x="3.5040%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.3333%" y="421" width="0.0794%" height="15" fill="rgb(228,17,21)" fg:x="42" fg:w="1"/><text x="3.5833%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="3.3333%" y="405" width="0.0794%" height="15" fill="rgb(240,149,34)" fg:x="42" fg:w="1"/><text x="3.5833%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.3333%" y="389" width="0.0794%" height="15" fill="rgb(208,125,47)" fg:x="42" fg:w="1"/><text x="3.5833%" y="399.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.4127%" y="613" width="0.0794%" height="15" fill="rgb(249,186,39)" fg:x="43" fg:w="1"/><text x="3.6627%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::DomainError&gt; (1 samples, 0.08%)</title><rect x="3.4921%" y="613" width="0.0794%" height="15" fill="rgb(240,220,33)" fg:x="44" fg:w="1"/><text x="3.7421%" y="623.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="3.5714%" y="613" width="0.1587%" height="15" fill="rgb(243,110,23)" fg:x="45" fg:w="2"/><text x="3.8214%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="3.5714%" y="597" width="0.1587%" height="15" fill="rgb(219,163,46)" fg:x="45" fg:w="2"/><text x="3.8214%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="3.5714%" y="581" width="0.1587%" height="15" fill="rgb(216,126,30)" fg:x="45" fg:w="2"/><text x="3.8214%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="3.5714%" y="565" width="0.1587%" height="15" fill="rgb(208,139,11)" fg:x="45" fg:w="2"/><text x="3.8214%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="3.5714%" y="549" width="0.1587%" height="15" fill="rgb(213,118,36)" fg:x="45" fg:w="2"/><text x="3.8214%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="3.5714%" y="533" width="0.1587%" height="15" fill="rgb(226,43,17)" fg:x="45" fg:w="2"/><text x="3.8214%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="3.5714%" y="517" width="0.1587%" height="15" fill="rgb(254,217,4)" fg:x="45" fg:w="2"/><text x="3.8214%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="3.5714%" y="501" width="0.1587%" height="15" fill="rgb(210,134,47)" fg:x="45" fg:w="2"/><text x="3.8214%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="3.5714%" y="485" width="0.1587%" height="15" fill="rgb(237,24,49)" fg:x="45" fg:w="2"/><text x="3.8214%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="3.5714%" y="469" width="0.1587%" height="15" fill="rgb(251,39,46)" fg:x="45" fg:w="2"/><text x="3.8214%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="3.5714%" y="453" width="0.1587%" height="15" fill="rgb(251,220,3)" fg:x="45" fg:w="2"/><text x="3.8214%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="3.5714%" y="437" width="0.1587%" height="15" fill="rgb(228,105,12)" fg:x="45" fg:w="2"/><text x="3.8214%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="3.5714%" y="421" width="0.1587%" height="15" fill="rgb(215,196,1)" fg:x="45" fg:w="2"/><text x="3.8214%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.6508%" y="405" width="0.0794%" height="15" fill="rgb(214,33,39)" fg:x="46" fg:w="1"/><text x="3.9008%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.6508%" y="389" width="0.0794%" height="15" fill="rgb(220,19,52)" fg:x="46" fg:w="1"/><text x="3.9008%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.6508%" y="373" width="0.0794%" height="15" fill="rgb(221,78,38)" fg:x="46" fg:w="1"/><text x="3.9008%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.6508%" y="357" width="0.0794%" height="15" fill="rgb(253,30,16)" fg:x="46" fg:w="1"/><text x="3.9008%" y="367.50"></text></g><g><title>kernel::plugins::SessionPlugins::hooks (1 samples, 0.08%)</title><rect x="3.7302%" y="613" width="0.0794%" height="15" fill="rgb(242,65,0)" fg:x="47" fg:w="1"/><text x="3.9802%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="3.8889%" y="581" width="0.0794%" height="15" fill="rgb(235,201,12)" fg:x="49" fg:w="1"/><text x="4.1389%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="3.8889%" y="565" width="0.0794%" height="15" fill="rgb(233,161,9)" fg:x="49" fg:w="1"/><text x="4.1389%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="3.8889%" y="549" width="0.0794%" height="15" fill="rgb(241,207,41)" fg:x="49" fg:w="1"/><text x="4.1389%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.8889%" y="533" width="0.0794%" height="15" fill="rgb(212,69,46)" fg:x="49" fg:w="1"/><text x="4.1389%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.8889%" y="517" width="0.0794%" height="15" fill="rgb(239,69,45)" fg:x="49" fg:w="1"/><text x="4.1389%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.8889%" y="501" width="0.0794%" height="15" fill="rgb(242,117,48)" fg:x="49" fg:w="1"/><text x="4.1389%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.8889%" y="485" width="0.0794%" height="15" fill="rgb(228,41,36)" fg:x="49" fg:w="1"/><text x="4.1389%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.8889%" y="469" width="0.0794%" height="15" fill="rgb(212,3,32)" fg:x="49" fg:w="1"/><text x="4.1389%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.8889%" y="453" width="0.0794%" height="15" fill="rgb(233,41,49)" fg:x="49" fg:w="1"/><text x="4.1389%" y="463.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="3.8889%" y="437" width="0.0794%" height="15" fill="rgb(252,170,49)" fg:x="49" fg:w="1"/><text x="4.1389%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="3.9683%" y="485" width="0.0794%" height="15" fill="rgb(229,53,26)" fg:x="50" fg:w="1"/><text x="4.2183%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.9683%" y="469" width="0.0794%" height="15" fill="rgb(217,157,12)" fg:x="50" fg:w="1"/><text x="4.2183%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.9683%" y="453" width="0.0794%" height="15" fill="rgb(227,17,9)" fg:x="50" fg:w="1"/><text x="4.2183%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.9683%" y="437" width="0.0794%" height="15" fill="rgb(218,84,12)" fg:x="50" fg:w="1"/><text x="4.2183%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.9683%" y="421" width="0.0794%" height="15" fill="rgb(212,79,24)" fg:x="50" fg:w="1"/><text x="4.2183%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.9683%" y="405" width="0.0794%" height="15" fill="rgb(217,222,37)" fg:x="50" fg:w="1"/><text x="4.2183%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.9683%" y="389" width="0.0794%" height="15" fill="rgb(246,208,8)" fg:x="50" fg:w="1"/><text x="4.2183%" y="399.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (2 samples, 0.16%)</title><rect x="3.9683%" y="565" width="0.1587%" height="15" fill="rgb(244,133,10)" fg:x="50" fg:w="2"/><text x="4.2183%" y="575.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (2 samples, 0.16%)</title><rect x="3.9683%" y="549" width="0.1587%" height="15" fill="rgb(209,219,41)" fg:x="50" fg:w="2"/><text x="4.2183%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="3.9683%" y="533" width="0.1587%" height="15" fill="rgb(253,175,45)" fg:x="50" fg:w="2"/><text x="4.2183%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (2 samples, 0.16%)</title><rect x="3.9683%" y="517" width="0.1587%" height="15" fill="rgb(235,100,37)" fg:x="50" fg:w="2"/><text x="4.2183%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (2 samples, 0.16%)</title><rect x="3.9683%" y="501" width="0.1587%" height="15" fill="rgb(225,87,19)" fg:x="50" fg:w="2"/><text x="4.2183%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.0476%" y="485" width="0.0794%" height="15" fill="rgb(217,152,17)" fg:x="51" fg:w="1"/><text x="4.2976%" y="495.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="4.1270%" y="565" width="0.0794%" height="15" fill="rgb(235,72,13)" fg:x="52" fg:w="1"/><text x="4.3770%" y="575.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="4.1270%" y="549" width="0.0794%" height="15" fill="rgb(233,140,18)" fg:x="52" fg:w="1"/><text x="4.3770%" y="559.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="4.4444%" y="501" width="0.0794%" height="15" fill="rgb(207,212,28)" fg:x="56" fg:w="1"/><text x="4.6944%" y="511.50"></text></g><g><title>libloading::os::unix::Library::open (23 samples, 1.83%)</title><rect x="3.9683%" y="581" width="1.8254%" height="15" fill="rgb(220,130,25)" fg:x="50" fg:w="23"/><text x="4.2183%" y="591.50">l..</text></g><g><title>dlopen (20 samples, 1.59%)</title><rect x="4.2063%" y="565" width="1.5873%" height="15" fill="rgb(205,55,34)" fg:x="53" fg:w="20"/><text x="4.4563%" y="575.50"></text></g><g><title>_dl_catch_error (20 samples, 1.59%)</title><rect x="4.2063%" y="549" width="1.5873%" height="15" fill="rgb(237,54,35)" fg:x="53" fg:w="20"/><text x="4.4563%" y="559.50"></text></g><g><title>_dl_catch_exception (20 samples, 1.59%)</title><rect x="4.2063%" y="533" width="1.5873%" height="15" fill="rgb(208,67,23)" fg:x="53" fg:w="20"/><text x="4.4563%" y="543.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.35%)</title><rect x="4.4444%" y="517" width="1.3492%" height="15" fill="rgb(206,207,50)" fg:x="56" fg:w="17"/><text x="4.6944%" y="527.50"></text></g><g><title>_dl_catch_exception (16 samples, 1.27%)</title><rect x="4.5238%" y="501" width="1.2698%" height="15" fill="rgb(213,211,42)" fg:x="57" fg:w="16"/><text x="4.7738%" y="511.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="5.7143%" y="485" width="0.0794%" height="15" fill="rgb(252,197,50)" fg:x="72" fg:w="1"/><text x="5.9643%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (26 samples, 2.06%)</title><rect x="3.8095%" y="613" width="2.0635%" height="15" fill="rgb(251,211,41)" fg:x="48" fg:w="26"/><text x="4.0595%" y="623.50">k..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (26 samples, 2.06%)</title><rect x="3.8095%" y="597" width="2.0635%" height="15" fill="rgb(229,211,5)" fg:x="48" fg:w="26"/><text x="4.0595%" y="607.50">&lt;..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="5.7937%" y="581" width="0.0794%" height="15" fill="rgb(239,36,31)" fg:x="73" fg:w="1"/><text x="6.0437%" y="591.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="5.7937%" y="565" width="0.0794%" height="15" fill="rgb(248,67,31)" fg:x="73" fg:w="1"/><text x="6.0437%" y="575.50"></text></g><g><title>core::str::lossy::Utf8Chunk::invalid (1 samples, 0.08%)</title><rect x="5.7937%" y="549" width="0.0794%" height="15" fill="rgb(249,55,44)" fg:x="73" fg:w="1"/><text x="6.0437%" y="559.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (56 samples, 4.44%)</title><rect x="1.5079%" y="645" width="4.4444%" height="15" fill="rgb(216,82,12)" fg:x="19" fg:w="56"/><text x="1.7579%" y="655.50">&lt;engi..</text></g><g><title>engine::session::Session::new (56 samples, 4.44%)</title><rect x="1.5079%" y="629" width="4.4444%" height="15" fill="rgb(242,174,1)" fg:x="19" fg:w="56"/><text x="1.7579%" y="639.50">engin..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.8730%" y="613" width="0.0794%" height="15" fill="rgb(208,120,29)" fg:x="74" fg:w="1"/><text x="6.1230%" y="623.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="5.8730%" y="597" width="0.0794%" height="15" fill="rgb(221,105,43)" fg:x="74" fg:w="1"/><text x="6.1230%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="6.0317%" y="437" width="0.1587%" height="15" fill="rgb(234,124,22)" fg:x="76" fg:w="2"/><text x="6.2817%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="5.9524%" y="629" width="0.3175%" height="15" fill="rgb(212,23,30)" fg:x="75" fg:w="4"/><text x="6.2024%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="6.0317%" y="613" width="0.2381%" height="15" fill="rgb(219,122,53)" fg:x="76" fg:w="3"/><text x="6.2817%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="6.0317%" y="597" width="0.2381%" height="15" fill="rgb(248,84,24)" fg:x="76" fg:w="3"/><text x="6.2817%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="6.0317%" y="581" width="0.2381%" height="15" fill="rgb(245,115,18)" fg:x="76" fg:w="3"/><text x="6.2817%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="6.0317%" y="565" width="0.2381%" height="15" fill="rgb(227,176,51)" fg:x="76" fg:w="3"/><text x="6.2817%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="6.0317%" y="549" width="0.2381%" height="15" fill="rgb(229,63,42)" fg:x="76" fg:w="3"/><text x="6.2817%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="6.0317%" y="533" width="0.2381%" height="15" fill="rgb(247,202,24)" fg:x="76" fg:w="3"/><text x="6.2817%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="6.0317%" y="517" width="0.2381%" height="15" fill="rgb(244,173,20)" fg:x="76" fg:w="3"/><text x="6.2817%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="6.0317%" y="501" width="0.2381%" height="15" fill="rgb(242,81,47)" fg:x="76" fg:w="3"/><text x="6.2817%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="6.0317%" y="485" width="0.2381%" height="15" fill="rgb(231,185,54)" fg:x="76" fg:w="3"/><text x="6.2817%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="6.0317%" y="469" width="0.2381%" height="15" fill="rgb(243,55,32)" fg:x="76" fg:w="3"/><text x="6.2817%" y="479.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="6.0317%" y="453" width="0.2381%" height="15" fill="rgb(208,167,19)" fg:x="76" fg:w="3"/><text x="6.2817%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="6.1905%" y="437" width="0.0794%" height="15" fill="rgb(231,72,35)" fg:x="78" fg:w="1"/><text x="6.4405%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="6.1905%" y="421" width="0.0794%" height="15" fill="rgb(250,173,51)" fg:x="78" fg:w="1"/><text x="6.4405%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.2698%" y="581" width="0.0794%" height="15" fill="rgb(209,5,22)" fg:x="79" fg:w="1"/><text x="6.5198%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.2698%" y="565" width="0.0794%" height="15" fill="rgb(250,174,19)" fg:x="79" fg:w="1"/><text x="6.5198%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.2698%" y="549" width="0.0794%" height="15" fill="rgb(217,3,49)" fg:x="79" fg:w="1"/><text x="6.5198%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.2698%" y="533" width="0.0794%" height="15" fill="rgb(218,225,5)" fg:x="79" fg:w="1"/><text x="6.5198%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.2698%" y="517" width="0.0794%" height="15" fill="rgb(236,89,11)" fg:x="79" fg:w="1"/><text x="6.5198%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.2698%" y="501" width="0.0794%" height="15" fill="rgb(206,33,28)" fg:x="79" fg:w="1"/><text x="6.5198%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.2698%" y="485" width="0.0794%" height="15" fill="rgb(241,56,42)" fg:x="79" fg:w="1"/><text x="6.5198%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.2698%" y="469" width="0.0794%" height="15" fill="rgb(222,44,11)" fg:x="79" fg:w="1"/><text x="6.5198%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.2698%" y="453" width="0.0794%" height="15" fill="rgb(234,111,20)" fg:x="79" fg:w="1"/><text x="6.5198%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.2698%" y="437" width="0.0794%" height="15" fill="rgb(237,77,6)" fg:x="79" fg:w="1"/><text x="6.5198%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.2698%" y="421" width="0.0794%" height="15" fill="rgb(235,111,23)" fg:x="79" fg:w="1"/><text x="6.5198%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.2698%" y="405" width="0.0794%" height="15" fill="rgb(251,135,29)" fg:x="79" fg:w="1"/><text x="6.5198%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="6.2698%" y="597" width="0.1587%" height="15" fill="rgb(217,57,1)" fg:x="79" fg:w="2"/><text x="6.5198%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.3492%" y="581" width="0.0794%" height="15" fill="rgb(249,119,31)" fg:x="80" fg:w="1"/><text x="6.5992%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.3492%" y="565" width="0.0794%" height="15" fill="rgb(233,164,33)" fg:x="80" fg:w="1"/><text x="6.5992%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4286%" y="597" width="0.0794%" height="15" fill="rgb(250,217,43)" fg:x="81" fg:w="1"/><text x="6.6786%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="6.5873%" y="565" width="0.0794%" height="15" fill="rgb(232,154,50)" fg:x="83" fg:w="1"/><text x="6.8373%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="6.5079%" y="597" width="0.2381%" height="15" fill="rgb(227,190,8)" fg:x="82" fg:w="3"/><text x="6.7579%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="6.5873%" y="581" width="0.1587%" height="15" fill="rgb(209,217,32)" fg:x="83" fg:w="2"/><text x="6.8373%" y="591.50"></text></g><g><title>engine::session::Session::save_entity (1 samples, 0.08%)</title><rect x="6.6667%" y="565" width="0.0794%" height="15" fill="rgb(243,203,50)" fg:x="84" fg:w="1"/><text x="6.9167%" y="575.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="6.6667%" y="549" width="0.0794%" height="15" fill="rgb(232,152,27)" fg:x="84" fg:w="1"/><text x="6.9167%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="6.8254%" y="565" width="0.0794%" height="15" fill="rgb(240,34,29)" fg:x="86" fg:w="1"/><text x="7.0754%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="6.8254%" y="549" width="0.0794%" height="15" fill="rgb(215,185,52)" fg:x="86" fg:w="1"/><text x="7.0754%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="6.8254%" y="533" width="0.0794%" height="15" fill="rgb(240,89,49)" fg:x="86" fg:w="1"/><text x="7.0754%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="6.8254%" y="517" width="0.0794%" height="15" fill="rgb(225,12,52)" fg:x="86" fg:w="1"/><text x="7.0754%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.8254%" y="501" width="0.0794%" height="15" fill="rgb(239,128,45)" fg:x="86" fg:w="1"/><text x="7.0754%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.8254%" y="485" width="0.0794%" height="15" fill="rgb(211,78,47)" fg:x="86" fg:w="1"/><text x="7.0754%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.8254%" y="469" width="0.0794%" height="15" fill="rgb(232,31,21)" fg:x="86" fg:w="1"/><text x="7.0754%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8254%" y="453" width="0.0794%" height="15" fill="rgb(222,168,14)" fg:x="86" fg:w="1"/><text x="7.0754%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="7.0635%" y="533" width="0.3968%" height="15" fill="rgb(209,128,24)" fg:x="89" fg:w="5"/><text x="7.3135%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="7.1429%" y="517" width="0.3175%" height="15" fill="rgb(249,35,13)" fg:x="90" fg:w="4"/><text x="7.3929%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.3016%" y="501" width="0.1587%" height="15" fill="rgb(218,7,2)" fg:x="92" fg:w="2"/><text x="7.5516%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4603%" y="501" width="0.0794%" height="15" fill="rgb(238,107,27)" fg:x="94" fg:w="1"/><text x="7.7103%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.63%)</title><rect x="6.9841%" y="549" width="0.6349%" height="15" fill="rgb(217,88,38)" fg:x="88" fg:w="8"/><text x="7.2341%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.4603%" y="533" width="0.1587%" height="15" fill="rgb(230,207,0)" fg:x="94" fg:w="2"/><text x="7.7103%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.4603%" y="517" width="0.1587%" height="15" fill="rgb(249,64,54)" fg:x="94" fg:w="2"/><text x="7.7103%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.5397%" y="501" width="0.0794%" height="15" fill="rgb(231,7,11)" fg:x="95" fg:w="1"/><text x="7.7897%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="7.7778%" y="533" width="0.3175%" height="15" fill="rgb(205,149,21)" fg:x="98" fg:w="4"/><text x="8.0278%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="7.7778%" y="517" width="0.3175%" height="15" fill="rgb(215,126,34)" fg:x="98" fg:w="4"/><text x="8.0278%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="7.7778%" y="501" width="0.3175%" height="15" fill="rgb(241,132,45)" fg:x="98" fg:w="4"/><text x="8.0278%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="7.8571%" y="485" width="0.2381%" height="15" fill="rgb(252,69,32)" fg:x="99" fg:w="3"/><text x="8.1071%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.0159%" y="469" width="0.0794%" height="15" fill="rgb(232,204,19)" fg:x="101" fg:w="1"/><text x="8.2659%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.0159%" y="453" width="0.0794%" height="15" fill="rgb(249,15,47)" fg:x="101" fg:w="1"/><text x="8.2659%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.0159%" y="437" width="0.0794%" height="15" fill="rgb(209,227,23)" fg:x="101" fg:w="1"/><text x="8.2659%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.0952%" y="485" width="0.2381%" height="15" fill="rgb(248,92,24)" fg:x="102" fg:w="3"/><text x="8.3452%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.0952%" y="469" width="0.2381%" height="15" fill="rgb(247,59,2)" fg:x="102" fg:w="3"/><text x="8.3452%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.2540%" y="453" width="0.0794%" height="15" fill="rgb(221,30,5)" fg:x="104" fg:w="1"/><text x="8.5040%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2540%" y="437" width="0.0794%" height="15" fill="rgb(208,108,53)" fg:x="104" fg:w="1"/><text x="8.5040%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.3333%" y="485" width="0.0794%" height="15" fill="rgb(211,183,26)" fg:x="105" fg:w="1"/><text x="8.5833%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.3333%" y="469" width="0.0794%" height="15" fill="rgb(232,132,4)" fg:x="105" fg:w="1"/><text x="8.5833%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="8.0952%" y="517" width="0.3968%" height="15" fill="rgb(253,128,37)" fg:x="102" fg:w="5"/><text x="8.3452%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="8.0952%" y="501" width="0.3968%" height="15" fill="rgb(221,58,24)" fg:x="102" fg:w="5"/><text x="8.3452%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.4127%" y="485" width="0.0794%" height="15" fill="rgb(230,54,45)" fg:x="106" fg:w="1"/><text x="8.6627%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.4127%" y="469" width="0.0794%" height="15" fill="rgb(254,21,18)" fg:x="106" fg:w="1"/><text x="8.6627%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.4127%" y="453" width="0.0794%" height="15" fill="rgb(221,108,0)" fg:x="106" fg:w="1"/><text x="8.6627%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.4921%" y="517" width="0.2381%" height="15" fill="rgb(206,95,1)" fg:x="107" fg:w="3"/><text x="8.7421%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.6508%" y="501" width="0.0794%" height="15" fill="rgb(237,52,5)" fg:x="109" fg:w="1"/><text x="8.9008%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="8.8095%" y="501" width="0.3175%" height="15" fill="rgb(218,150,34)" fg:x="111" fg:w="4"/><text x="9.0595%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.9683%" y="485" width="0.1587%" height="15" fill="rgb(235,194,28)" fg:x="113" fg:w="2"/><text x="9.2183%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.1270%" y="485" width="0.1587%" height="15" fill="rgb(245,92,18)" fg:x="115" fg:w="2"/><text x="9.3770%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2063%" y="469" width="0.0794%" height="15" fill="rgb(253,203,53)" fg:x="116" fg:w="1"/><text x="9.4563%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="9.1270%" y="501" width="0.4762%" height="15" fill="rgb(249,185,47)" fg:x="115" fg:w="6"/><text x="9.3770%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.2857%" y="485" width="0.3175%" height="15" fill="rgb(252,194,52)" fg:x="117" fg:w="4"/><text x="9.5357%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.5238%" y="469" width="0.0794%" height="15" fill="rgb(210,53,36)" fg:x="120" fg:w="1"/><text x="9.7738%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.5238%" y="453" width="0.0794%" height="15" fill="rgb(237,37,25)" fg:x="120" fg:w="1"/><text x="9.7738%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="8.7302%" y="517" width="0.9524%" height="15" fill="rgb(242,116,27)" fg:x="110" fg:w="12"/><text x="8.9802%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.6032%" y="501" width="0.0794%" height="15" fill="rgb(213,185,26)" fg:x="121" fg:w="1"/><text x="9.8532%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.67%)</title><rect x="8.0952%" y="533" width="1.6667%" height="15" fill="rgb(225,204,8)" fg:x="102" fg:w="21"/><text x="8.3452%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.6825%" y="517" width="0.0794%" height="15" fill="rgb(254,111,37)" fg:x="122" fg:w="1"/><text x="9.9325%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 2.94%)</title><rect x="6.9048%" y="565" width="2.9365%" height="15" fill="rgb(242,35,9)" fg:x="87" fg:w="37"/><text x="7.1548%" y="575.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.22%)</title><rect x="7.6190%" y="549" width="2.2222%" height="15" fill="rgb(232,138,49)" fg:x="96" fg:w="28"/><text x="7.8690%" y="559.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.7619%" y="533" width="0.0794%" height="15" fill="rgb(247,56,4)" fg:x="123" fg:w="1"/><text x="10.0119%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.7619%" y="517" width="0.0794%" height="15" fill="rgb(226,179,17)" fg:x="123" fg:w="1"/><text x="10.0119%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.8413%" y="533" width="0.1587%" height="15" fill="rgb(216,163,45)" fg:x="124" fg:w="2"/><text x="10.0913%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="10.0000%" y="517" width="0.1587%" height="15" fill="rgb(211,157,3)" fg:x="126" fg:w="2"/><text x="10.2500%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.0794%" y="501" width="0.0794%" height="15" fill="rgb(234,44,20)" fg:x="127" fg:w="1"/><text x="10.3294%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.1587%" y="485" width="0.0794%" height="15" fill="rgb(254,138,23)" fg:x="128" fg:w="1"/><text x="10.4087%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.1587%" y="469" width="0.0794%" height="15" fill="rgb(206,119,39)" fg:x="128" fg:w="1"/><text x="10.4087%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.1587%" y="453" width="0.0794%" height="15" fill="rgb(231,105,52)" fg:x="128" fg:w="1"/><text x="10.4087%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.1587%" y="437" width="0.0794%" height="15" fill="rgb(250,20,5)" fg:x="128" fg:w="1"/><text x="10.4087%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.2381%" y="485" width="0.0794%" height="15" fill="rgb(215,198,30)" fg:x="129" fg:w="1"/><text x="10.4881%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2381%" y="469" width="0.0794%" height="15" fill="rgb(246,142,8)" fg:x="129" fg:w="1"/><text x="10.4881%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="9.8413%" y="565" width="0.6349%" height="15" fill="rgb(243,26,38)" fg:x="124" fg:w="8"/><text x="10.0913%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.63%)</title><rect x="9.8413%" y="549" width="0.6349%" height="15" fill="rgb(205,133,28)" fg:x="124" fg:w="8"/><text x="10.0913%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="10.0000%" y="533" width="0.4762%" height="15" fill="rgb(212,34,0)" fg:x="126" fg:w="6"/><text x="10.2500%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="10.1587%" y="517" width="0.3175%" height="15" fill="rgb(251,226,22)" fg:x="128" fg:w="4"/><text x="10.4087%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="10.1587%" y="501" width="0.3175%" height="15" fill="rgb(252,119,9)" fg:x="128" fg:w="4"/><text x="10.4087%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.3175%" y="485" width="0.1587%" height="15" fill="rgb(213,150,50)" fg:x="130" fg:w="2"/><text x="10.5675%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5556%" y="517" width="0.0794%" height="15" fill="rgb(212,24,39)" fg:x="133" fg:w="1"/><text x="10.8056%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="10.6349%" y="517" width="0.3175%" height="15" fill="rgb(213,46,39)" fg:x="134" fg:w="4"/><text x="10.8849%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="10.7143%" y="501" width="0.2381%" height="15" fill="rgb(239,106,12)" fg:x="135" fg:w="3"/><text x="10.9643%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="10.7143%" y="485" width="0.2381%" height="15" fill="rgb(249,229,21)" fg:x="135" fg:w="3"/><text x="10.9643%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9524%" y="517" width="0.0794%" height="15" fill="rgb(212,158,3)" fg:x="138" fg:w="1"/><text x="11.2024%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="11.0317%" y="517" width="0.1587%" height="15" fill="rgb(253,26,48)" fg:x="139" fg:w="2"/><text x="11.2817%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.1111%" y="501" width="0.0794%" height="15" fill="rgb(238,178,20)" fg:x="140" fg:w="1"/><text x="11.3611%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1111%" y="485" width="0.0794%" height="15" fill="rgb(208,86,15)" fg:x="140" fg:w="1"/><text x="11.3611%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.2698%" y="469" width="0.0794%" height="15" fill="rgb(239,42,53)" fg:x="142" fg:w="1"/><text x="11.5198%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5079%" y="405" width="0.0794%" height="15" fill="rgb(245,226,8)" fg:x="145" fg:w="1"/><text x="11.7579%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5873%" y="405" width="0.0794%" height="15" fill="rgb(216,176,32)" fg:x="146" fg:w="1"/><text x="11.8373%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5873%" y="389" width="0.0794%" height="15" fill="rgb(231,186,21)" fg:x="146" fg:w="1"/><text x="11.8373%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.5873%" y="373" width="0.0794%" height="15" fill="rgb(205,95,49)" fg:x="146" fg:w="1"/><text x="11.8373%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="11.4286%" y="453" width="0.3175%" height="15" fill="rgb(217,145,8)" fg:x="144" fg:w="4"/><text x="11.6786%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="11.4286%" y="437" width="0.3175%" height="15" fill="rgb(239,144,48)" fg:x="144" fg:w="4"/><text x="11.6786%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="11.5079%" y="421" width="0.2381%" height="15" fill="rgb(214,189,23)" fg:x="145" fg:w="3"/><text x="11.7579%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.6667%" y="405" width="0.0794%" height="15" fill="rgb(229,157,17)" fg:x="147" fg:w="1"/><text x="11.9167%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="11.6667%" y="389" width="0.0794%" height="15" fill="rgb(230,5,48)" fg:x="147" fg:w="1"/><text x="11.9167%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (9 samples, 0.71%)</title><rect x="11.1905%" y="517" width="0.7143%" height="15" fill="rgb(224,156,48)" fg:x="141" fg:w="9"/><text x="11.4405%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.71%)</title><rect x="11.1905%" y="501" width="0.7143%" height="15" fill="rgb(223,14,29)" fg:x="141" fg:w="9"/><text x="11.4405%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.71%)</title><rect x="11.1905%" y="485" width="0.7143%" height="15" fill="rgb(229,96,36)" fg:x="141" fg:w="9"/><text x="11.4405%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (7 samples, 0.56%)</title><rect x="11.3492%" y="469" width="0.5556%" height="15" fill="rgb(231,102,53)" fg:x="143" fg:w="7"/><text x="11.5992%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.7460%" y="453" width="0.1587%" height="15" fill="rgb(210,77,38)" fg:x="148" fg:w="2"/><text x="11.9960%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="11.9048%" y="517" width="0.0794%" height="15" fill="rgb(235,131,6)" fg:x="150" fg:w="1"/><text x="12.1548%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.9048%" y="501" width="0.0794%" height="15" fill="rgb(252,55,38)" fg:x="150" fg:w="1"/><text x="12.1548%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0635%" y="501" width="0.0794%" height="15" fill="rgb(246,38,14)" fg:x="152" fg:w="1"/><text x="12.3135%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0635%" y="485" width="0.0794%" height="15" fill="rgb(242,27,5)" fg:x="152" fg:w="1"/><text x="12.3135%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0635%" y="469" width="0.0794%" height="15" fill="rgb(228,65,35)" fg:x="152" fg:w="1"/><text x="12.3135%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.2222%" y="437" width="0.0794%" height="15" fill="rgb(245,93,11)" fg:x="154" fg:w="1"/><text x="12.4722%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.2222%" y="421" width="0.0794%" height="15" fill="rgb(213,1,31)" fg:x="154" fg:w="1"/><text x="12.4722%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="12.2222%" y="469" width="0.1587%" height="15" fill="rgb(237,205,14)" fg:x="154" fg:w="2"/><text x="12.4722%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.2222%" y="453" width="0.1587%" height="15" fill="rgb(232,118,45)" fg:x="154" fg:w="2"/><text x="12.4722%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3016%" y="437" width="0.0794%" height="15" fill="rgb(218,5,6)" fg:x="155" fg:w="1"/><text x="12.5516%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5397%" y="437" width="0.0794%" height="15" fill="rgb(251,87,51)" fg:x="158" fg:w="1"/><text x="12.7897%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5397%" y="421" width="0.0794%" height="15" fill="rgb(207,225,20)" fg:x="158" fg:w="1"/><text x="12.7897%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5397%" y="405" width="0.0794%" height="15" fill="rgb(222,78,54)" fg:x="158" fg:w="1"/><text x="12.7897%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.6190%" y="437" width="0.0794%" height="15" fill="rgb(232,85,16)" fg:x="159" fg:w="1"/><text x="12.8690%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="12.6190%" y="421" width="0.0794%" height="15" fill="rgb(244,25,33)" fg:x="159" fg:w="1"/><text x="12.8690%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="12.5397%" y="453" width="0.3175%" height="15" fill="rgb(233,24,36)" fg:x="158" fg:w="4"/><text x="12.7897%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.6984%" y="437" width="0.1587%" height="15" fill="rgb(253,49,54)" fg:x="160" fg:w="2"/><text x="12.9484%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="12.7778%" y="421" width="0.0794%" height="15" fill="rgb(245,12,22)" fg:x="161" fg:w="1"/><text x="13.0278%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.7778%" y="405" width="0.0794%" height="15" fill="rgb(253,141,28)" fg:x="161" fg:w="1"/><text x="13.0278%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.79%)</title><rect x="12.1429%" y="485" width="0.7937%" height="15" fill="rgb(225,207,27)" fg:x="153" fg:w="10"/><text x="12.3929%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="12.3810%" y="469" width="0.5556%" height="15" fill="rgb(220,84,2)" fg:x="156" fg:w="7"/><text x="12.6310%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8571%" y="453" width="0.0794%" height="15" fill="rgb(224,37,37)" fg:x="162" fg:w="1"/><text x="13.1071%" y="463.50"></text></g><g><title>kernel::compare::any_entity_changes (33 samples, 2.62%)</title><rect x="10.4762%" y="565" width="2.6190%" height="15" fill="rgb(220,143,18)" fg:x="132" fg:w="33"/><text x="10.7262%" y="575.50">ke..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (33 samples, 2.62%)</title><rect x="10.4762%" y="549" width="2.6190%" height="15" fill="rgb(210,88,33)" fg:x="132" fg:w="33"/><text x="10.7262%" y="559.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.62%)</title><rect x="10.4762%" y="533" width="2.6190%" height="15" fill="rgb(219,87,51)" fg:x="132" fg:w="33"/><text x="10.7262%" y="543.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.11%)</title><rect x="11.9841%" y="517" width="1.1111%" height="15" fill="rgb(211,7,35)" fg:x="151" fg:w="14"/><text x="12.2341%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (12 samples, 0.95%)</title><rect x="12.1429%" y="501" width="0.9524%" height="15" fill="rgb(232,77,2)" fg:x="153" fg:w="12"/><text x="12.3929%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="12.9365%" y="485" width="0.1587%" height="15" fill="rgb(249,94,25)" fg:x="163" fg:w="2"/><text x="13.1865%" y="495.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (82 samples, 6.51%)</title><rect x="6.7460%" y="597" width="6.5079%" height="15" fill="rgb(215,112,2)" fg:x="85" fg:w="82"/><text x="6.9960%" y="607.50">engine::i..</text></g><g><title>engine::session::Session::check_for_changes (82 samples, 6.51%)</title><rect x="6.7460%" y="581" width="6.5079%" height="15" fill="rgb(226,115,48)" fg:x="85" fg:w="82"/><text x="6.9960%" y="591.50">engine::s..</text></g><g><title>kernel::model::Entity::set_gid (2 samples, 0.16%)</title><rect x="13.0952%" y="565" width="0.1587%" height="15" fill="rgb(249,196,10)" fg:x="165" fg:w="2"/><text x="13.3452%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.0952%" y="549" width="0.1587%" height="15" fill="rgb(237,109,14)" fg:x="165" fg:w="2"/><text x="13.3452%" y="559.50"></text></g><g><title>engine::session::Session::flush (89 samples, 7.06%)</title><rect x="6.2698%" y="629" width="7.0635%" height="15" fill="rgb(217,103,53)" fg:x="79" fg:w="89"/><text x="6.5198%" y="639.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (89 samples, 7.06%)</title><rect x="6.2698%" y="613" width="7.0635%" height="15" fill="rgb(244,137,9)" fg:x="79" fg:w="89"/><text x="6.5198%" y="623.50">engine::s..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="13.2540%" y="597" width="0.0794%" height="15" fill="rgb(227,201,3)" fg:x="167" fg:w="1"/><text x="13.5040%" y="607.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="13.2540%" y="581" width="0.0794%" height="15" fill="rgb(243,94,6)" fg:x="167" fg:w="1"/><text x="13.5040%" y="591.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="13.2540%" y="565" width="0.0794%" height="15" fill="rgb(235,118,5)" fg:x="167" fg:w="1"/><text x="13.5040%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="13.2540%" y="549" width="0.0794%" height="15" fill="rgb(247,10,30)" fg:x="167" fg:w="1"/><text x="13.5040%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="13.2540%" y="533" width="0.0794%" height="15" fill="rgb(205,26,28)" fg:x="167" fg:w="1"/><text x="13.5040%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="13.2540%" y="517" width="0.0794%" height="15" fill="rgb(206,99,35)" fg:x="167" fg:w="1"/><text x="13.5040%" y="527.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="13.2540%" y="501" width="0.0794%" height="15" fill="rgb(238,130,40)" fg:x="167" fg:w="1"/><text x="13.5040%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="13.3333%" y="613" width="0.0794%" height="15" fill="rgb(224,126,31)" fg:x="168" fg:w="1"/><text x="13.5833%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="13.3333%" y="597" width="0.0794%" height="15" fill="rgb(254,105,17)" fg:x="168" fg:w="1"/><text x="13.5833%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.3333%" y="581" width="0.0794%" height="15" fill="rgb(216,87,36)" fg:x="168" fg:w="1"/><text x="13.5833%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.3333%" y="565" width="0.0794%" height="15" fill="rgb(240,21,12)" fg:x="168" fg:w="1"/><text x="13.5833%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.3333%" y="549" width="0.0794%" height="15" fill="rgb(245,192,34)" fg:x="168" fg:w="1"/><text x="13.5833%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.3333%" y="533" width="0.0794%" height="15" fill="rgb(226,100,49)" fg:x="168" fg:w="1"/><text x="13.5833%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.3333%" y="517" width="0.0794%" height="15" fill="rgb(245,188,27)" fg:x="168" fg:w="1"/><text x="13.5833%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.3333%" y="501" width="0.0794%" height="15" fill="rgb(212,170,8)" fg:x="168" fg:w="1"/><text x="13.5833%" y="511.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="13.4127%" y="581" width="0.0794%" height="15" fill="rgb(217,113,29)" fg:x="169" fg:w="1"/><text x="13.6627%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="13.4127%" y="597" width="0.1587%" height="15" fill="rgb(237,30,3)" fg:x="169" fg:w="2"/><text x="13.6627%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="13.4921%" y="581" width="0.0794%" height="15" fill="rgb(227,19,28)" fg:x="170" fg:w="1"/><text x="13.7421%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5714%" y="565" width="0.0794%" height="15" fill="rgb(239,172,45)" fg:x="171" fg:w="1"/><text x="13.8214%" y="575.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="13.5714%" y="597" width="0.2381%" height="15" fill="rgb(254,55,39)" fg:x="171" fg:w="3"/><text x="13.8214%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="13.5714%" y="581" width="0.2381%" height="15" fill="rgb(249,208,12)" fg:x="171" fg:w="3"/><text x="13.8214%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="13.6508%" y="565" width="0.1587%" height="15" fill="rgb(240,52,13)" fg:x="172" fg:w="2"/><text x="13.9008%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.6508%" y="549" width="0.1587%" height="15" fill="rgb(252,149,13)" fg:x="172" fg:w="2"/><text x="13.9008%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7302%" y="533" width="0.0794%" height="15" fill="rgb(232,81,48)" fg:x="173" fg:w="1"/><text x="13.9802%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="13.8095%" y="581" width="0.0794%" height="15" fill="rgb(222,144,2)" fg:x="174" fg:w="1"/><text x="14.0595%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.8095%" y="565" width="0.0794%" height="15" fill="rgb(216,81,32)" fg:x="174" fg:w="1"/><text x="14.0595%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8095%" y="549" width="0.0794%" height="15" fill="rgb(244,78,51)" fg:x="174" fg:w="1"/><text x="14.0595%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.63%)</title><rect x="13.3333%" y="629" width="0.6349%" height="15" fill="rgb(217,66,21)" fg:x="168" fg:w="8"/><text x="13.5833%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="13.4127%" y="613" width="0.5556%" height="15" fill="rgb(247,101,42)" fg:x="169" fg:w="7"/><text x="13.6627%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="13.8095%" y="597" width="0.1587%" height="15" fill="rgb(227,81,39)" fg:x="174" fg:w="2"/><text x="14.0595%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="13.8889%" y="581" width="0.0794%" height="15" fill="rgb(220,223,44)" fg:x="175" fg:w="1"/><text x="14.1389%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="13.8889%" y="565" width="0.0794%" height="15" fill="rgb(205,218,2)" fg:x="175" fg:w="1"/><text x="14.1389%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9683%" y="565" width="0.0794%" height="15" fill="rgb(212,207,28)" fg:x="176" fg:w="1"/><text x="14.2183%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9683%" y="549" width="0.0794%" height="15" fill="rgb(224,12,41)" fg:x="176" fg:w="1"/><text x="14.2183%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9683%" y="533" width="0.0794%" height="15" fill="rgb(216,118,12)" fg:x="176" fg:w="1"/><text x="14.2183%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9683%" y="517" width="0.0794%" height="15" fill="rgb(252,97,46)" fg:x="176" fg:w="1"/><text x="14.2183%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9683%" y="501" width="0.0794%" height="15" fill="rgb(244,206,19)" fg:x="176" fg:w="1"/><text x="14.2183%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.9683%" y="485" width="0.0794%" height="15" fill="rgb(231,84,31)" fg:x="176" fg:w="1"/><text x="14.2183%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.9683%" y="469" width="0.0794%" height="15" fill="rgb(244,133,0)" fg:x="176" fg:w="1"/><text x="14.2183%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="13.9683%" y="597" width="0.1587%" height="15" fill="rgb(223,15,50)" fg:x="176" fg:w="2"/><text x="14.2183%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="13.9683%" y="581" width="0.1587%" height="15" fill="rgb(250,118,49)" fg:x="176" fg:w="2"/><text x="14.2183%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.0476%" y="565" width="0.0794%" height="15" fill="rgb(248,25,38)" fg:x="177" fg:w="1"/><text x="14.2976%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="13.9683%" y="629" width="0.2381%" height="15" fill="rgb(215,70,14)" fg:x="176" fg:w="3"/><text x="14.2183%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="13.9683%" y="613" width="0.2381%" height="15" fill="rgb(215,28,15)" fg:x="176" fg:w="3"/><text x="14.2183%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="14.1270%" y="597" width="0.0794%" height="15" fill="rgb(243,6,28)" fg:x="178" fg:w="1"/><text x="14.3770%" y="607.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="14.1270%" y="581" width="0.0794%" height="15" fill="rgb(222,130,1)" fg:x="178" fg:w="1"/><text x="14.3770%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="14.2063%" y="629" width="0.1587%" height="15" fill="rgb(236,166,44)" fg:x="179" fg:w="2"/><text x="14.4563%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="14.2063%" y="613" width="0.1587%" height="15" fill="rgb(221,108,14)" fg:x="179" fg:w="2"/><text x="14.4563%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::modified (2 samples, 0.16%)</title><rect x="14.2063%" y="597" width="0.1587%" height="15" fill="rgb(252,3,45)" fg:x="179" fg:w="2"/><text x="14.4563%" y="607.50"></text></g><g><title>kernel::model::Props::property_named (2 samples, 0.16%)</title><rect x="14.2063%" y="581" width="0.1587%" height="15" fill="rgb(237,68,30)" fg:x="179" fg:w="2"/><text x="14.4563%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.2857%" y="565" width="0.0794%" height="15" fill="rgb(211,79,22)" fg:x="180" fg:w="1"/><text x="14.5357%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="14.4444%" y="581" width="0.0794%" height="15" fill="rgb(252,185,21)" fg:x="182" fg:w="1"/><text x="14.6944%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="14.4444%" y="613" width="0.1587%" height="15" fill="rgb(225,189,26)" fg:x="182" fg:w="2"/><text x="14.6944%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="14.4444%" y="597" width="0.1587%" height="15" fill="rgb(241,30,40)" fg:x="182" fg:w="2"/><text x="14.6944%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.5238%" y="581" width="0.0794%" height="15" fill="rgb(235,215,44)" fg:x="183" fg:w="1"/><text x="14.7738%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.5238%" y="565" width="0.0794%" height="15" fill="rgb(205,8,29)" fg:x="183" fg:w="1"/><text x="14.7738%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.5238%" y="549" width="0.0794%" height="15" fill="rgb(241,137,42)" fg:x="183" fg:w="1"/><text x="14.7738%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.5238%" y="533" width="0.0794%" height="15" fill="rgb(237,155,2)" fg:x="183" fg:w="1"/><text x="14.7738%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.5238%" y="517" width="0.0794%" height="15" fill="rgb(245,29,42)" fg:x="183" fg:w="1"/><text x="14.7738%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.5238%" y="501" width="0.0794%" height="15" fill="rgb(234,101,35)" fg:x="183" fg:w="1"/><text x="14.7738%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.5238%" y="485" width="0.0794%" height="15" fill="rgb(228,64,37)" fg:x="183" fg:w="1"/><text x="14.7738%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.5238%" y="469" width="0.0794%" height="15" fill="rgb(217,214,36)" fg:x="183" fg:w="1"/><text x="14.7738%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.5238%" y="453" width="0.0794%" height="15" fill="rgb(243,70,3)" fg:x="183" fg:w="1"/><text x="14.7738%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="14.5238%" y="437" width="0.0794%" height="15" fill="rgb(253,158,52)" fg:x="183" fg:w="1"/><text x="14.7738%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.5238%" y="421" width="0.0794%" height="15" fill="rgb(234,111,54)" fg:x="183" fg:w="1"/><text x="14.7738%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.5238%" y="405" width="0.0794%" height="15" fill="rgb(217,70,32)" fg:x="183" fg:w="1"/><text x="14.7738%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.5238%" y="389" width="0.0794%" height="15" fill="rgb(234,18,33)" fg:x="183" fg:w="1"/><text x="14.7738%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5238%" y="373" width="0.0794%" height="15" fill="rgb(234,12,49)" fg:x="183" fg:w="1"/><text x="14.7738%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5238%" y="357" width="0.0794%" height="15" fill="rgb(236,10,21)" fg:x="183" fg:w="1"/><text x="14.7738%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.5238%" y="341" width="0.0794%" height="15" fill="rgb(248,182,45)" fg:x="183" fg:w="1"/><text x="14.7738%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.5238%" y="325" width="0.0794%" height="15" fill="rgb(217,95,36)" fg:x="183" fg:w="1"/><text x="14.7738%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.5238%" y="309" width="0.0794%" height="15" fill="rgb(212,110,31)" fg:x="183" fg:w="1"/><text x="14.7738%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.5238%" y="293" width="0.0794%" height="15" fill="rgb(206,32,53)" fg:x="183" fg:w="1"/><text x="14.7738%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.5238%" y="277" width="0.0794%" height="15" fill="rgb(246,141,37)" fg:x="183" fg:w="1"/><text x="14.7738%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.5238%" y="261" width="0.0794%" height="15" fill="rgb(219,16,7)" fg:x="183" fg:w="1"/><text x="14.7738%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.5238%" y="245" width="0.0794%" height="15" fill="rgb(230,205,45)" fg:x="183" fg:w="1"/><text x="14.7738%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="14.5238%" y="229" width="0.0794%" height="15" fill="rgb(231,43,49)" fg:x="183" fg:w="1"/><text x="14.7738%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.5238%" y="213" width="0.0794%" height="15" fill="rgb(212,106,34)" fg:x="183" fg:w="1"/><text x="14.7738%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="14.5238%" y="197" width="0.0794%" height="15" fill="rgb(206,83,17)" fg:x="183" fg:w="1"/><text x="14.7738%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="14.5238%" y="181" width="0.0794%" height="15" fill="rgb(244,154,49)" fg:x="183" fg:w="1"/><text x="14.7738%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="14.5238%" y="165" width="0.0794%" height="15" fill="rgb(244,149,49)" fg:x="183" fg:w="1"/><text x="14.7738%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.5238%" y="149" width="0.0794%" height="15" fill="rgb(227,134,18)" fg:x="183" fg:w="1"/><text x="14.7738%" y="159.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6032%" y="613" width="0.0794%" height="15" fill="rgb(237,116,36)" fg:x="184" fg:w="1"/><text x="14.8532%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6032%" y="597" width="0.0794%" height="15" fill="rgb(205,129,40)" fg:x="184" fg:w="1"/><text x="14.8532%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6032%" y="581" width="0.0794%" height="15" fill="rgb(236,178,4)" fg:x="184" fg:w="1"/><text x="14.8532%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.6032%" y="565" width="0.0794%" height="15" fill="rgb(251,76,53)" fg:x="184" fg:w="1"/><text x="14.8532%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.6032%" y="549" width="0.0794%" height="15" fill="rgb(242,92,40)" fg:x="184" fg:w="1"/><text x="14.8532%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.6032%" y="533" width="0.0794%" height="15" fill="rgb(209,45,30)" fg:x="184" fg:w="1"/><text x="14.8532%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6032%" y="517" width="0.0794%" height="15" fill="rgb(218,157,36)" fg:x="184" fg:w="1"/><text x="14.8532%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.6032%" y="501" width="0.0794%" height="15" fill="rgb(222,186,16)" fg:x="184" fg:w="1"/><text x="14.8532%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.6032%" y="485" width="0.0794%" height="15" fill="rgb(254,72,35)" fg:x="184" fg:w="1"/><text x="14.8532%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.6032%" y="469" width="0.0794%" height="15" fill="rgb(224,25,35)" fg:x="184" fg:w="1"/><text x="14.8532%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.6032%" y="453" width="0.0794%" height="15" fill="rgb(206,135,52)" fg:x="184" fg:w="1"/><text x="14.8532%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.6032%" y="437" width="0.0794%" height="15" fill="rgb(229,174,47)" fg:x="184" fg:w="1"/><text x="14.8532%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6032%" y="421" width="0.0794%" height="15" fill="rgb(242,184,21)" fg:x="184" fg:w="1"/><text x="14.8532%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="14.6825%" y="565" width="0.0794%" height="15" fill="rgb(213,22,45)" fg:x="185" fg:w="1"/><text x="14.9325%" y="575.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="14.6825%" y="549" width="0.0794%" height="15" fill="rgb(237,81,54)" fg:x="185" fg:w="1"/><text x="14.9325%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="14.7619%" y="533" width="0.0794%" height="15" fill="rgb(248,177,18)" fg:x="186" fg:w="1"/><text x="15.0119%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.7619%" y="517" width="0.0794%" height="15" fill="rgb(254,31,16)" fg:x="186" fg:w="1"/><text x="15.0119%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.7619%" y="501" width="0.0794%" height="15" fill="rgb(235,20,31)" fg:x="186" fg:w="1"/><text x="15.0119%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.7619%" y="485" width="0.0794%" height="15" fill="rgb(240,56,43)" fg:x="186" fg:w="1"/><text x="15.0119%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.7619%" y="469" width="0.0794%" height="15" fill="rgb(237,197,51)" fg:x="186" fg:w="1"/><text x="15.0119%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.7619%" y="453" width="0.0794%" height="15" fill="rgb(241,162,44)" fg:x="186" fg:w="1"/><text x="15.0119%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.7619%" y="437" width="0.0794%" height="15" fill="rgb(224,23,20)" fg:x="186" fg:w="1"/><text x="15.0119%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.7619%" y="421" width="0.0794%" height="15" fill="rgb(250,109,34)" fg:x="186" fg:w="1"/><text x="15.0119%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.7619%" y="405" width="0.0794%" height="15" fill="rgb(214,175,50)" fg:x="186" fg:w="1"/><text x="15.0119%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7619%" y="389" width="0.0794%" height="15" fill="rgb(213,182,5)" fg:x="186" fg:w="1"/><text x="15.0119%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7619%" y="373" width="0.0794%" height="15" fill="rgb(209,199,19)" fg:x="186" fg:w="1"/><text x="15.0119%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.7619%" y="357" width="0.0794%" height="15" fill="rgb(236,224,42)" fg:x="186" fg:w="1"/><text x="15.0119%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.7619%" y="341" width="0.0794%" height="15" fill="rgb(246,226,29)" fg:x="186" fg:w="1"/><text x="15.0119%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.7619%" y="325" width="0.0794%" height="15" fill="rgb(227,223,11)" fg:x="186" fg:w="1"/><text x="15.0119%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.7619%" y="309" width="0.0794%" height="15" fill="rgb(219,7,51)" fg:x="186" fg:w="1"/><text x="15.0119%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.7619%" y="293" width="0.0794%" height="15" fill="rgb(245,167,10)" fg:x="186" fg:w="1"/><text x="15.0119%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.7619%" y="277" width="0.0794%" height="15" fill="rgb(237,224,16)" fg:x="186" fg:w="1"/><text x="15.0119%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="14.7619%" y="549" width="0.1587%" height="15" fill="rgb(226,132,13)" fg:x="186" fg:w="2"/><text x="15.0119%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="14.8413%" y="533" width="0.0794%" height="15" fill="rgb(214,140,3)" fg:x="187" fg:w="1"/><text x="15.0913%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="14.8413%" y="517" width="0.0794%" height="15" fill="rgb(221,177,4)" fg:x="187" fg:w="1"/><text x="15.0913%" y="527.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="14.8413%" y="501" width="0.0794%" height="15" fill="rgb(238,139,3)" fg:x="187" fg:w="1"/><text x="15.0913%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8413%" y="485" width="0.0794%" height="15" fill="rgb(216,17,39)" fg:x="187" fg:w="1"/><text x="15.0913%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8413%" y="469" width="0.0794%" height="15" fill="rgb(238,120,9)" fg:x="187" fg:w="1"/><text x="15.0913%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="14.9206%" y="533" width="0.0794%" height="15" fill="rgb(244,92,53)" fg:x="188" fg:w="1"/><text x="15.1706%" y="543.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="14.9206%" y="517" width="0.0794%" height="15" fill="rgb(224,148,33)" fg:x="188" fg:w="1"/><text x="15.1706%" y="527.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="14.9206%" y="501" width="0.0794%" height="15" fill="rgb(243,6,36)" fg:x="188" fg:w="1"/><text x="15.1706%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.9206%" y="485" width="0.0794%" height="15" fill="rgb(230,102,11)" fg:x="188" fg:w="1"/><text x="15.1706%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="14.6825%" y="613" width="0.5556%" height="15" fill="rgb(234,148,36)" fg:x="185" fg:w="7"/><text x="14.9325%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="14.6825%" y="597" width="0.5556%" height="15" fill="rgb(251,153,25)" fg:x="185" fg:w="7"/><text x="14.9325%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="14.6825%" y="581" width="0.5556%" height="15" fill="rgb(215,129,8)" fg:x="185" fg:w="7"/><text x="14.9325%" y="591.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="14.7619%" y="565" width="0.4762%" height="15" fill="rgb(224,128,35)" fg:x="186" fg:w="6"/><text x="15.0119%" y="575.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="14.9206%" y="549" width="0.3175%" height="15" fill="rgb(237,56,52)" fg:x="188" fg:w="4"/><text x="15.1706%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="15.0000%" y="533" width="0.2381%" height="15" fill="rgb(234,213,19)" fg:x="189" fg:w="3"/><text x="15.2500%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1587%" y="517" width="0.0794%" height="15" fill="rgb(252,82,23)" fg:x="191" fg:w="1"/><text x="15.4087%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1587%" y="501" width="0.0794%" height="15" fill="rgb(254,201,21)" fg:x="191" fg:w="1"/><text x="15.4087%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1587%" y="485" width="0.0794%" height="15" fill="rgb(250,186,11)" fg:x="191" fg:w="1"/><text x="15.4087%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.1587%" y="469" width="0.0794%" height="15" fill="rgb(211,174,5)" fg:x="191" fg:w="1"/><text x="15.4087%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.1587%" y="453" width="0.0794%" height="15" fill="rgb(214,121,10)" fg:x="191" fg:w="1"/><text x="15.4087%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.1587%" y="437" width="0.0794%" height="15" fill="rgb(241,66,2)" fg:x="191" fg:w="1"/><text x="15.4087%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.1587%" y="421" width="0.0794%" height="15" fill="rgb(220,167,19)" fg:x="191" fg:w="1"/><text x="15.4087%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.1587%" y="405" width="0.0794%" height="15" fill="rgb(231,54,50)" fg:x="191" fg:w="1"/><text x="15.4087%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.1587%" y="389" width="0.0794%" height="15" fill="rgb(239,217,53)" fg:x="191" fg:w="1"/><text x="15.4087%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.1587%" y="373" width="0.0794%" height="15" fill="rgb(248,8,0)" fg:x="191" fg:w="1"/><text x="15.4087%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.1587%" y="357" width="0.0794%" height="15" fill="rgb(229,118,37)" fg:x="191" fg:w="1"/><text x="15.4087%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.1587%" y="341" width="0.0794%" height="15" fill="rgb(253,223,43)" fg:x="191" fg:w="1"/><text x="15.4087%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1587%" y="325" width="0.0794%" height="15" fill="rgb(211,77,36)" fg:x="191" fg:w="1"/><text x="15.4087%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="15.2381%" y="581" width="0.0794%" height="15" fill="rgb(219,3,53)" fg:x="192" fg:w="1"/><text x="15.4881%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.2381%" y="565" width="0.0794%" height="15" fill="rgb(244,45,42)" fg:x="192" fg:w="1"/><text x="15.4881%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.2381%" y="549" width="0.0794%" height="15" fill="rgb(225,95,27)" fg:x="192" fg:w="1"/><text x="15.4881%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.2381%" y="533" width="0.0794%" height="15" fill="rgb(207,74,8)" fg:x="192" fg:w="1"/><text x="15.4881%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3175%" y="565" width="0.0794%" height="15" fill="rgb(243,63,36)" fg:x="193" fg:w="1"/><text x="15.5675%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3175%" y="549" width="0.0794%" height="15" fill="rgb(211,180,12)" fg:x="193" fg:w="1"/><text x="15.5675%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.3175%" y="533" width="0.0794%" height="15" fill="rgb(254,166,49)" fg:x="193" fg:w="1"/><text x="15.5675%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.3175%" y="517" width="0.0794%" height="15" fill="rgb(205,19,0)" fg:x="193" fg:w="1"/><text x="15.5675%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.3175%" y="501" width="0.0794%" height="15" fill="rgb(224,172,32)" fg:x="193" fg:w="1"/><text x="15.5675%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3175%" y="485" width="0.0794%" height="15" fill="rgb(254,136,30)" fg:x="193" fg:w="1"/><text x="15.5675%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3175%" y="469" width="0.0794%" height="15" fill="rgb(246,19,35)" fg:x="193" fg:w="1"/><text x="15.5675%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.3175%" y="453" width="0.0794%" height="15" fill="rgb(219,24,36)" fg:x="193" fg:w="1"/><text x="15.5675%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.3175%" y="437" width="0.0794%" height="15" fill="rgb(251,55,1)" fg:x="193" fg:w="1"/><text x="15.5675%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.3175%" y="421" width="0.0794%" height="15" fill="rgb(218,117,39)" fg:x="193" fg:w="1"/><text x="15.5675%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.3175%" y="405" width="0.0794%" height="15" fill="rgb(248,169,11)" fg:x="193" fg:w="1"/><text x="15.5675%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3175%" y="389" width="0.0794%" height="15" fill="rgb(244,40,44)" fg:x="193" fg:w="1"/><text x="15.5675%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3968%" y="565" width="0.0794%" height="15" fill="rgb(234,62,37)" fg:x="194" fg:w="1"/><text x="15.6468%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3968%" y="549" width="0.0794%" height="15" fill="rgb(207,117,42)" fg:x="194" fg:w="1"/><text x="15.6468%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="15.3175%" y="581" width="0.2381%" height="15" fill="rgb(213,43,2)" fg:x="193" fg:w="3"/><text x="15.5675%" y="591.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="15.4762%" y="565" width="0.0794%" height="15" fill="rgb(244,202,51)" fg:x="195" fg:w="1"/><text x="15.7262%" y="575.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="15.4762%" y="549" width="0.0794%" height="15" fill="rgb(253,174,46)" fg:x="195" fg:w="1"/><text x="15.7262%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.4762%" y="533" width="0.0794%" height="15" fill="rgb(251,23,1)" fg:x="195" fg:w="1"/><text x="15.7262%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="15.5556%" y="581" width="0.2381%" height="15" fill="rgb(253,26,1)" fg:x="196" fg:w="3"/><text x="15.8056%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="15.6349%" y="565" width="0.1587%" height="15" fill="rgb(216,89,31)" fg:x="197" fg:w="2"/><text x="15.8849%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="15.6349%" y="549" width="0.1587%" height="15" fill="rgb(209,109,5)" fg:x="197" fg:w="2"/><text x="15.8849%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.7937%" y="565" width="0.0794%" height="15" fill="rgb(229,63,13)" fg:x="199" fg:w="1"/><text x="16.0437%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.7937%" y="549" width="0.0794%" height="15" fill="rgb(238,137,54)" fg:x="199" fg:w="1"/><text x="16.0437%" y="559.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.16%)</title><rect x="15.7937%" y="581" width="0.1587%" height="15" fill="rgb(228,1,9)" fg:x="199" fg:w="2"/><text x="16.0437%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="15.8730%" y="565" width="0.0794%" height="15" fill="rgb(249,120,48)" fg:x="200" fg:w="1"/><text x="16.1230%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="15.8730%" y="549" width="0.0794%" height="15" fill="rgb(209,72,36)" fg:x="200" fg:w="1"/><text x="16.1230%" y="559.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8730%" y="533" width="0.0794%" height="15" fill="rgb(247,98,49)" fg:x="200" fg:w="1"/><text x="16.1230%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.8730%" y="517" width="0.0794%" height="15" fill="rgb(233,75,36)" fg:x="200" fg:w="1"/><text x="16.1230%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8730%" y="501" width="0.0794%" height="15" fill="rgb(225,14,24)" fg:x="200" fg:w="1"/><text x="16.1230%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.8730%" y="485" width="0.0794%" height="15" fill="rgb(237,193,20)" fg:x="200" fg:w="1"/><text x="16.1230%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="16.1111%" y="533" width="0.0794%" height="15" fill="rgb(239,122,19)" fg:x="203" fg:w="1"/><text x="16.3611%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="16.1905%" y="517" width="0.3968%" height="15" fill="rgb(231,220,10)" fg:x="204" fg:w="5"/><text x="16.4405%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.3492%" y="501" width="0.2381%" height="15" fill="rgb(220,66,15)" fg:x="206" fg:w="3"/><text x="16.5992%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.4286%" y="485" width="0.1587%" height="15" fill="rgb(215,171,52)" fg:x="207" fg:w="2"/><text x="16.6786%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5079%" y="469" width="0.0794%" height="15" fill="rgb(241,169,50)" fg:x="208" fg:w="1"/><text x="16.7579%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.5079%" y="453" width="0.0794%" height="15" fill="rgb(236,189,0)" fg:x="208" fg:w="1"/><text x="16.7579%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.5079%" y="437" width="0.0794%" height="15" fill="rgb(217,147,20)" fg:x="208" fg:w="1"/><text x="16.7579%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.5079%" y="421" width="0.0794%" height="15" fill="rgb(206,188,39)" fg:x="208" fg:w="1"/><text x="16.7579%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="16.1905%" y="533" width="0.4762%" height="15" fill="rgb(227,118,25)" fg:x="204" fg:w="6"/><text x="16.4405%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.5873%" y="517" width="0.0794%" height="15" fill="rgb(248,171,40)" fg:x="209" fg:w="1"/><text x="16.8373%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.5873%" y="501" width="0.0794%" height="15" fill="rgb(251,90,54)" fg:x="209" fg:w="1"/><text x="16.8373%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5873%" y="485" width="0.0794%" height="15" fill="rgb(234,11,46)" fg:x="209" fg:w="1"/><text x="16.8373%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="16.6667%" y="517" width="0.0794%" height="15" fill="rgb(229,134,13)" fg:x="210" fg:w="1"/><text x="16.9167%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="16.7460%" y="517" width="0.2381%" height="15" fill="rgb(223,129,3)" fg:x="211" fg:w="3"/><text x="16.9960%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.7460%" y="501" width="0.2381%" height="15" fill="rgb(221,124,13)" fg:x="211" fg:w="3"/><text x="16.9960%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="16.7460%" y="485" width="0.2381%" height="15" fill="rgb(234,3,18)" fg:x="211" fg:w="3"/><text x="16.9960%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.8254%" y="469" width="0.1587%" height="15" fill="rgb(249,199,20)" fg:x="212" fg:w="2"/><text x="17.0754%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.9048%" y="453" width="0.0794%" height="15" fill="rgb(224,134,6)" fg:x="213" fg:w="1"/><text x="17.1548%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.9048%" y="437" width="0.0794%" height="15" fill="rgb(254,83,26)" fg:x="213" fg:w="1"/><text x="17.1548%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.9048%" y="421" width="0.0794%" height="15" fill="rgb(217,88,9)" fg:x="213" fg:w="1"/><text x="17.1548%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.3016%" y="469" width="0.0794%" height="15" fill="rgb(225,73,2)" fg:x="218" fg:w="1"/><text x="17.5516%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.3016%" y="453" width="0.0794%" height="15" fill="rgb(226,44,39)" fg:x="218" fg:w="1"/><text x="17.5516%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="17.1429%" y="501" width="0.3175%" height="15" fill="rgb(228,53,17)" fg:x="216" fg:w="4"/><text x="17.3929%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="17.3016%" y="485" width="0.1587%" height="15" fill="rgb(212,27,27)" fg:x="218" fg:w="2"/><text x="17.5516%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.3810%" y="469" width="0.0794%" height="15" fill="rgb(241,50,6)" fg:x="219" fg:w="1"/><text x="17.6310%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.3810%" y="453" width="0.0794%" height="15" fill="rgb(225,28,51)" fg:x="219" fg:w="1"/><text x="17.6310%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.3810%" y="437" width="0.0794%" height="15" fill="rgb(215,33,16)" fg:x="219" fg:w="1"/><text x="17.6310%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="17.4603%" y="501" width="0.1587%" height="15" fill="rgb(243,40,39)" fg:x="220" fg:w="2"/><text x="17.7103%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.4603%" y="485" width="0.1587%" height="15" fill="rgb(225,11,42)" fg:x="220" fg:w="2"/><text x="17.7103%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.4603%" y="469" width="0.1587%" height="15" fill="rgb(241,220,38)" fg:x="220" fg:w="2"/><text x="17.7103%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="17.6984%" y="485" width="0.0794%" height="15" fill="rgb(244,52,35)" fg:x="223" fg:w="1"/><text x="17.9484%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="17.7778%" y="469" width="0.1587%" height="15" fill="rgb(246,42,46)" fg:x="224" fg:w="2"/><text x="18.0278%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.7778%" y="453" width="0.1587%" height="15" fill="rgb(205,184,13)" fg:x="224" fg:w="2"/><text x="18.0278%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.8571%" y="437" width="0.0794%" height="15" fill="rgb(209,48,36)" fg:x="225" fg:w="1"/><text x="18.1071%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.8571%" y="421" width="0.0794%" height="15" fill="rgb(244,34,51)" fg:x="225" fg:w="1"/><text x="18.1071%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="17.7778%" y="485" width="0.3175%" height="15" fill="rgb(221,107,33)" fg:x="224" fg:w="4"/><text x="18.0278%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.9365%" y="469" width="0.1587%" height="15" fill="rgb(224,203,12)" fg:x="226" fg:w="2"/><text x="18.1865%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.9365%" y="453" width="0.1587%" height="15" fill="rgb(230,215,18)" fg:x="226" fg:w="2"/><text x="18.1865%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.0159%" y="437" width="0.0794%" height="15" fill="rgb(206,185,35)" fg:x="227" fg:w="1"/><text x="18.2659%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="17.6190%" y="501" width="0.5556%" height="15" fill="rgb(228,140,34)" fg:x="222" fg:w="7"/><text x="17.8690%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.0952%" y="485" width="0.0794%" height="15" fill="rgb(208,93,13)" fg:x="228" fg:w="1"/><text x="18.3452%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.0952%" y="469" width="0.0794%" height="15" fill="rgb(221,193,39)" fg:x="228" fg:w="1"/><text x="18.3452%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.51%)</title><rect x="16.9841%" y="517" width="1.5079%" height="15" fill="rgb(241,132,34)" fg:x="214" fg:w="19"/><text x="17.2341%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="18.1746%" y="501" width="0.3175%" height="15" fill="rgb(221,141,10)" fg:x="229" fg:w="4"/><text x="18.4246%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.3333%" y="485" width="0.1587%" height="15" fill="rgb(226,90,31)" fg:x="231" fg:w="2"/><text x="18.5833%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.3333%" y="469" width="0.1587%" height="15" fill="rgb(243,75,5)" fg:x="231" fg:w="2"/><text x="18.5833%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.70%)</title><rect x="16.1111%" y="549" width="2.6984%" height="15" fill="rgb(227,156,21)" fg:x="203" fg:w="34"/><text x="16.3611%" y="559.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.14%)</title><rect x="16.6667%" y="533" width="2.1429%" height="15" fill="rgb(250,195,8)" fg:x="210" fg:w="27"/><text x="16.9167%" y="543.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="18.4921%" y="517" width="0.3175%" height="15" fill="rgb(220,134,5)" fg:x="233" fg:w="4"/><text x="18.7421%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="18.4921%" y="501" width="0.3175%" height="15" fill="rgb(246,106,34)" fg:x="233" fg:w="4"/><text x="18.7421%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="18.5714%" y="485" width="0.2381%" height="15" fill="rgb(205,1,4)" fg:x="234" fg:w="3"/><text x="18.8214%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.7302%" y="469" width="0.0794%" height="15" fill="rgb(224,151,29)" fg:x="236" fg:w="1"/><text x="18.9802%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.7302%" y="453" width="0.0794%" height="15" fill="rgb(251,196,0)" fg:x="236" fg:w="1"/><text x="18.9802%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="18.8889%" y="517" width="0.1587%" height="15" fill="rgb(212,127,0)" fg:x="238" fg:w="2"/><text x="19.1389%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.2063%" y="501" width="0.0794%" height="15" fill="rgb(236,71,53)" fg:x="242" fg:w="1"/><text x="19.4563%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.2063%" y="485" width="0.0794%" height="15" fill="rgb(227,99,0)" fg:x="242" fg:w="1"/><text x="19.4563%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3651%" y="485" width="0.0794%" height="15" fill="rgb(239,89,21)" fg:x="244" fg:w="1"/><text x="19.6151%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="19.5238%" y="469" width="0.0794%" height="15" fill="rgb(243,122,19)" fg:x="246" fg:w="1"/><text x="19.7738%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.5238%" y="453" width="0.0794%" height="15" fill="rgb(229,192,45)" fg:x="246" fg:w="1"/><text x="19.7738%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.5238%" y="437" width="0.0794%" height="15" fill="rgb(235,165,35)" fg:x="246" fg:w="1"/><text x="19.7738%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.6032%" y="469" width="0.1587%" height="15" fill="rgb(253,202,0)" fg:x="247" fg:w="2"/><text x="19.8532%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6825%" y="453" width="0.0794%" height="15" fill="rgb(235,51,20)" fg:x="248" fg:w="1"/><text x="19.9325%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="18.8095%" y="549" width="1.0317%" height="15" fill="rgb(218,95,46)" fg:x="237" fg:w="13"/><text x="19.0595%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.95%)</title><rect x="18.8889%" y="533" width="0.9524%" height="15" fill="rgb(212,81,10)" fg:x="238" fg:w="12"/><text x="19.1389%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.79%)</title><rect x="19.0476%" y="517" width="0.7937%" height="15" fill="rgb(240,59,0)" fg:x="240" fg:w="10"/><text x="19.2976%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="19.2857%" y="501" width="0.5556%" height="15" fill="rgb(212,191,42)" fg:x="243" fg:w="7"/><text x="19.5357%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="19.4444%" y="485" width="0.3968%" height="15" fill="rgb(233,140,3)" fg:x="245" fg:w="5"/><text x="19.6944%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.7619%" y="469" width="0.0794%" height="15" fill="rgb(215,69,23)" fg:x="249" fg:w="1"/><text x="20.0119%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7619%" y="453" width="0.0794%" height="15" fill="rgb(240,202,20)" fg:x="249" fg:w="1"/><text x="20.0119%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.63%)</title><rect x="20.1587%" y="501" width="0.6349%" height="15" fill="rgb(209,146,50)" fg:x="254" fg:w="8"/><text x="20.4087%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="20.3968%" y="485" width="0.3968%" height="15" fill="rgb(253,102,54)" fg:x="257" fg:w="5"/><text x="20.6468%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="20.5556%" y="469" width="0.2381%" height="15" fill="rgb(250,173,47)" fg:x="259" fg:w="3"/><text x="20.8056%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="20.7937%" y="501" width="0.1587%" height="15" fill="rgb(232,142,7)" fg:x="262" fg:w="2"/><text x="21.0437%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.7937%" y="485" width="0.1587%" height="15" fill="rgb(230,157,47)" fg:x="262" fg:w="2"/><text x="21.0437%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8730%" y="469" width="0.0794%" height="15" fill="rgb(214,177,35)" fg:x="263" fg:w="1"/><text x="21.1230%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="20.9524%" y="501" width="0.2381%" height="15" fill="rgb(234,119,46)" fg:x="264" fg:w="3"/><text x="21.2024%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.0317%" y="485" width="0.1587%" height="15" fill="rgb(241,180,50)" fg:x="265" fg:w="2"/><text x="21.2817%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.0317%" y="469" width="0.1587%" height="15" fill="rgb(221,54,25)" fg:x="265" fg:w="2"/><text x="21.2817%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1111%" y="453" width="0.0794%" height="15" fill="rgb(209,157,44)" fg:x="266" fg:w="1"/><text x="21.3611%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.5079%" y="421" width="0.1587%" height="15" fill="rgb(246,115,41)" fg:x="271" fg:w="2"/><text x="21.7579%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="21.3492%" y="453" width="0.3968%" height="15" fill="rgb(229,86,1)" fg:x="269" fg:w="5"/><text x="21.5992%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="21.4286%" y="437" width="0.3175%" height="15" fill="rgb(240,108,53)" fg:x="270" fg:w="4"/><text x="21.6786%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.6667%" y="421" width="0.0794%" height="15" fill="rgb(227,134,2)" fg:x="273" fg:w="1"/><text x="21.9167%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7460%" y="421" width="0.0794%" height="15" fill="rgb(213,129,25)" fg:x="274" fg:w="1"/><text x="21.9960%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.7460%" y="405" width="0.0794%" height="15" fill="rgb(226,35,21)" fg:x="274" fg:w="1"/><text x="21.9960%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="21.7460%" y="437" width="0.2381%" height="15" fill="rgb(208,129,26)" fg:x="274" fg:w="3"/><text x="21.9960%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="21.8254%" y="421" width="0.1587%" height="15" fill="rgb(224,83,6)" fg:x="275" fg:w="2"/><text x="22.0754%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.8254%" y="405" width="0.1587%" height="15" fill="rgb(227,52,39)" fg:x="275" fg:w="2"/><text x="22.0754%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9841%" y="421" width="0.0794%" height="15" fill="rgb(241,30,17)" fg:x="277" fg:w="1"/><text x="22.2341%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9841%" y="405" width="0.0794%" height="15" fill="rgb(246,186,42)" fg:x="277" fg:w="1"/><text x="22.2341%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9841%" y="389" width="0.0794%" height="15" fill="rgb(221,169,15)" fg:x="277" fg:w="1"/><text x="22.2341%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="22.1429%" y="405" width="0.0794%" height="15" fill="rgb(235,108,21)" fg:x="279" fg:w="1"/><text x="22.3929%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2222%" y="389" width="0.0794%" height="15" fill="rgb(219,148,30)" fg:x="280" fg:w="1"/><text x="22.4722%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.2222%" y="405" width="0.1587%" height="15" fill="rgb(220,109,5)" fg:x="280" fg:w="2"/><text x="22.4722%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.3016%" y="389" width="0.0794%" height="15" fill="rgb(213,203,48)" fg:x="281" fg:w="1"/><text x="22.5516%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="22.3016%" y="373" width="0.0794%" height="15" fill="rgb(244,71,33)" fg:x="281" fg:w="1"/><text x="22.5516%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (16 samples, 1.27%)</title><rect x="21.1905%" y="501" width="1.2698%" height="15" fill="rgb(209,23,2)" fg:x="267" fg:w="16"/><text x="21.4405%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.27%)</title><rect x="21.1905%" y="485" width="1.2698%" height="15" fill="rgb(219,97,7)" fg:x="267" fg:w="16"/><text x="21.4405%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.27%)</title><rect x="21.1905%" y="469" width="1.2698%" height="15" fill="rgb(216,161,23)" fg:x="267" fg:w="16"/><text x="21.4405%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (9 samples, 0.71%)</title><rect x="21.7460%" y="453" width="0.7143%" height="15" fill="rgb(207,45,42)" fg:x="274" fg:w="9"/><text x="21.9960%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="21.9841%" y="437" width="0.4762%" height="15" fill="rgb(241,61,4)" fg:x="277" fg:w="6"/><text x="22.2341%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (5 samples, 0.40%)</title><rect x="22.0635%" y="421" width="0.3968%" height="15" fill="rgb(236,170,1)" fg:x="278" fg:w="5"/><text x="22.3135%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="22.3810%" y="405" width="0.0794%" height="15" fill="rgb(239,72,5)" fg:x="282" fg:w="1"/><text x="22.6310%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="22.5397%" y="469" width="0.1587%" height="15" fill="rgb(214,13,50)" fg:x="284" fg:w="2"/><text x="22.7897%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.6190%" y="453" width="0.0794%" height="15" fill="rgb(224,88,9)" fg:x="285" fg:w="1"/><text x="22.8690%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.6190%" y="437" width="0.0794%" height="15" fill="rgb(238,192,34)" fg:x="285" fg:w="1"/><text x="22.8690%" y="447.50"></text></g><g><title>kernel::compare::any_entity_changes (37 samples, 2.94%)</title><rect x="19.8413%" y="549" width="2.9365%" height="15" fill="rgb(217,203,50)" fg:x="250" fg:w="37"/><text x="20.0913%" y="559.50">ke..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (35 samples, 2.78%)</title><rect x="20.0000%" y="533" width="2.7778%" height="15" fill="rgb(241,123,32)" fg:x="252" fg:w="35"/><text x="20.2500%" y="543.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (34 samples, 2.70%)</title><rect x="20.0794%" y="517" width="2.6984%" height="15" fill="rgb(248,151,39)" fg:x="253" fg:w="34"/><text x="20.3294%" y="527.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="22.4603%" y="501" width="0.3175%" height="15" fill="rgb(208,89,6)" fg:x="283" fg:w="4"/><text x="22.7103%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="22.5397%" y="485" width="0.2381%" height="15" fill="rgb(254,43,26)" fg:x="284" fg:w="3"/><text x="22.7897%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="22.6984%" y="469" width="0.0794%" height="15" fill="rgb(216,158,13)" fg:x="286" fg:w="1"/><text x="22.9484%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (89 samples, 7.06%)</title><rect x="15.9524%" y="581" width="7.0635%" height="15" fill="rgb(212,47,37)" fg:x="201" fg:w="89"/><text x="16.2024%" y="591.50">engine::i..</text></g><g><title>engine::session::Session::check_for_changes (89 samples, 7.06%)</title><rect x="15.9524%" y="565" width="7.0635%" height="15" fill="rgb(254,16,10)" fg:x="201" fg:w="89"/><text x="16.2024%" y="575.50">engine::s..</text></g><g><title>kernel::model::Entity::set_gid (3 samples, 0.24%)</title><rect x="22.7778%" y="549" width="0.2381%" height="15" fill="rgb(223,228,16)" fg:x="287" fg:w="3"/><text x="23.0278%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="22.7778%" y="533" width="0.2381%" height="15" fill="rgb(249,108,50)" fg:x="287" fg:w="3"/><text x="23.0278%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.9365%" y="517" width="0.0794%" height="15" fill="rgb(208,220,5)" fg:x="289" fg:w="1"/><text x="23.1865%" y="527.50"></text></g><g><title>engine::session::Session::flush (99 samples, 7.86%)</title><rect x="15.2381%" y="613" width="7.8571%" height="15" fill="rgb(217,89,48)" fg:x="192" fg:w="99"/><text x="15.4881%" y="623.50">engine::ses..</text></g><g><title>engine::session::Session::save_entity_changes (99 samples, 7.86%)</title><rect x="15.2381%" y="597" width="7.8571%" height="15" fill="rgb(212,113,41)" fg:x="192" fg:w="99"/><text x="15.4881%" y="607.50">engine::ses..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="23.0159%" y="581" width="0.0794%" height="15" fill="rgb(231,127,5)" fg:x="290" fg:w="1"/><text x="23.2659%" y="591.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="23.0159%" y="565" width="0.0794%" height="15" fill="rgb(217,141,17)" fg:x="290" fg:w="1"/><text x="23.2659%" y="575.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="23.0159%" y="549" width="0.0794%" height="15" fill="rgb(245,125,54)" fg:x="290" fg:w="1"/><text x="23.2659%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="23.0159%" y="533" width="0.0794%" height="15" fill="rgb(248,125,3)" fg:x="290" fg:w="1"/><text x="23.2659%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="23.0159%" y="517" width="0.0794%" height="15" fill="rgb(236,119,51)" fg:x="290" fg:w="1"/><text x="23.2659%" y="527.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="23.0159%" y="501" width="0.0794%" height="15" fill="rgb(239,99,8)" fg:x="290" fg:w="1"/><text x="23.2659%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="23.0952%" y="613" width="0.0794%" height="15" fill="rgb(224,228,4)" fg:x="291" fg:w="1"/><text x="23.3452%" y="623.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="23.0952%" y="597" width="0.0794%" height="15" fill="rgb(220,131,45)" fg:x="291" fg:w="1"/><text x="23.3452%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="23.0952%" y="581" width="0.0794%" height="15" fill="rgb(215,62,5)" fg:x="291" fg:w="1"/><text x="23.3452%" y="591.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="23.0952%" y="565" width="0.0794%" height="15" fill="rgb(253,12,24)" fg:x="291" fg:w="1"/><text x="23.3452%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.0952%" y="549" width="0.0794%" height="15" fill="rgb(248,120,50)" fg:x="291" fg:w="1"/><text x="23.3452%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.0952%" y="533" width="0.0794%" height="15" fill="rgb(245,194,10)" fg:x="291" fg:w="1"/><text x="23.3452%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.0952%" y="517" width="0.0794%" height="15" fill="rgb(241,149,38)" fg:x="291" fg:w="1"/><text x="23.3452%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.0952%" y="501" width="0.0794%" height="15" fill="rgb(219,215,7)" fg:x="291" fg:w="1"/><text x="23.3452%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="23.0952%" y="485" width="0.0794%" height="15" fill="rgb(208,120,31)" fg:x="291" fg:w="1"/><text x="23.3452%" y="495.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (1 samples, 0.08%)</title><rect x="23.0952%" y="469" width="0.0794%" height="15" fill="rgb(244,30,8)" fg:x="291" fg:w="1"/><text x="23.3452%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::set_key (1 samples, 0.08%)</title><rect x="23.1746%" y="613" width="0.0794%" height="15" fill="rgb(238,35,44)" fg:x="292" fg:w="1"/><text x="23.4246%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="23.2540%" y="613" width="0.0794%" height="15" fill="rgb(243,218,37)" fg:x="293" fg:w="1"/><text x="23.5040%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="23.2540%" y="597" width="0.0794%" height="15" fill="rgb(218,169,10)" fg:x="293" fg:w="1"/><text x="23.5040%" y="607.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="23.2540%" y="581" width="0.0794%" height="15" fill="rgb(221,144,10)" fg:x="293" fg:w="1"/><text x="23.5040%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.2540%" y="565" width="0.0794%" height="15" fill="rgb(226,41,38)" fg:x="293" fg:w="1"/><text x="23.5040%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="23.3333%" y="581" width="0.0794%" height="15" fill="rgb(228,3,1)" fg:x="294" fg:w="1"/><text x="23.5833%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="23.3333%" y="565" width="0.0794%" height="15" fill="rgb(209,129,12)" fg:x="294" fg:w="1"/><text x="23.5833%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="23.3333%" y="549" width="0.0794%" height="15" fill="rgb(213,136,33)" fg:x="294" fg:w="1"/><text x="23.5833%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.4127%" y="533" width="0.0794%" height="15" fill="rgb(209,181,29)" fg:x="295" fg:w="1"/><text x="23.6627%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (29 samples, 2.30%)</title><rect x="23.3333%" y="597" width="2.3016%" height="15" fill="rgb(234,173,18)" fg:x="294" fg:w="29"/><text x="23.5833%" y="607.50">&lt;..</text></g><g><title>engine::internal::Entities::add_entity (28 samples, 2.22%)</title><rect x="23.4127%" y="581" width="2.2222%" height="15" fill="rgb(227,73,47)" fg:x="295" fg:w="28"/><text x="23.6627%" y="591.50">e..</text></g><g><title>engine::internal::EntityMap::add_entity (28 samples, 2.22%)</title><rect x="23.4127%" y="565" width="2.2222%" height="15" fill="rgb(234,9,34)" fg:x="295" fg:w="28"/><text x="23.6627%" y="575.50">e..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 2.22%)</title><rect x="23.4127%" y="549" width="2.2222%" height="15" fill="rgb(235,172,15)" fg:x="295" fg:w="28"/><text x="23.6627%" y="559.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (27 samples, 2.14%)</title><rect x="23.4921%" y="533" width="2.1429%" height="15" fill="rgb(245,61,2)" fg:x="296" fg:w="27"/><text x="23.7421%" y="543.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (27 samples, 2.14%)</title><rect x="23.4921%" y="517" width="2.1429%" height="15" fill="rgb(238,39,47)" fg:x="296" fg:w="27"/><text x="23.7421%" y="527.50">h..</text></g><g><title>__libc_malloc (26 samples, 2.06%)</title><rect x="23.5714%" y="501" width="2.0635%" height="15" fill="rgb(234,37,24)" fg:x="297" fg:w="26"/><text x="23.8214%" y="511.50">_..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.6349%" y="581" width="0.0794%" height="15" fill="rgb(248,223,24)" fg:x="323" fg:w="1"/><text x="25.8849%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="25.7143%" y="581" width="0.0794%" height="15" fill="rgb(223,12,15)" fg:x="324" fg:w="1"/><text x="25.9643%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="25.7143%" y="565" width="0.0794%" height="15" fill="rgb(249,6,3)" fg:x="324" fg:w="1"/><text x="25.9643%" y="575.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="25.7143%" y="549" width="0.0794%" height="15" fill="rgb(237,105,33)" fg:x="324" fg:w="1"/><text x="25.9643%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.7143%" y="533" width="0.0794%" height="15" fill="rgb(252,208,35)" fg:x="324" fg:w="1"/><text x="25.9643%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="25.7143%" y="517" width="0.0794%" height="15" fill="rgb(215,181,35)" fg:x="324" fg:w="1"/><text x="25.9643%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="25.7937%" y="581" width="0.0794%" height="15" fill="rgb(246,212,3)" fg:x="325" fg:w="1"/><text x="26.0437%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="25.7937%" y="565" width="0.0794%" height="15" fill="rgb(247,156,24)" fg:x="325" fg:w="1"/><text x="26.0437%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.7937%" y="549" width="0.0794%" height="15" fill="rgb(248,9,31)" fg:x="325" fg:w="1"/><text x="26.0437%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="25.8730%" y="501" width="0.0794%" height="15" fill="rgb(234,26,45)" fg:x="326" fg:w="1"/><text x="26.1230%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (34 samples, 2.70%)</title><rect x="23.3333%" y="613" width="2.6984%" height="15" fill="rgb(249,11,32)" fg:x="294" fg:w="34"/><text x="23.5833%" y="623.50">pl..</text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="25.6349%" y="597" width="0.3968%" height="15" fill="rgb(249,162,33)" fg:x="323" fg:w="5"/><text x="25.8849%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="25.8730%" y="581" width="0.1587%" height="15" fill="rgb(232,4,32)" fg:x="326" fg:w="2"/><text x="26.1230%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="25.8730%" y="565" width="0.1587%" height="15" fill="rgb(212,5,45)" fg:x="326" fg:w="2"/><text x="26.1230%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="25.8730%" y="549" width="0.1587%" height="15" fill="rgb(227,95,13)" fg:x="326" fg:w="2"/><text x="26.1230%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.8730%" y="533" width="0.1587%" height="15" fill="rgb(223,205,10)" fg:x="326" fg:w="2"/><text x="26.1230%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="25.8730%" y="517" width="0.1587%" height="15" fill="rgb(222,178,8)" fg:x="326" fg:w="2"/><text x="26.1230%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9524%" y="501" width="0.0794%" height="15" fill="rgb(216,13,22)" fg:x="327" fg:w="1"/><text x="26.2024%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="26.0317%" y="581" width="0.0794%" height="15" fill="rgb(240,167,12)" fg:x="328" fg:w="1"/><text x="26.2817%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="26.0317%" y="565" width="0.0794%" height="15" fill="rgb(235,68,35)" fg:x="328" fg:w="1"/><text x="26.2817%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.0317%" y="549" width="0.0794%" height="15" fill="rgb(253,40,27)" fg:x="328" fg:w="1"/><text x="26.2817%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.0317%" y="533" width="0.0794%" height="15" fill="rgb(214,19,28)" fg:x="328" fg:w="1"/><text x="26.2817%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.0317%" y="517" width="0.0794%" height="15" fill="rgb(210,167,45)" fg:x="328" fg:w="1"/><text x="26.2817%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.0317%" y="501" width="0.0794%" height="15" fill="rgb(232,97,40)" fg:x="328" fg:w="1"/><text x="26.2817%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="26.0317%" y="485" width="0.0794%" height="15" fill="rgb(250,35,23)" fg:x="328" fg:w="1"/><text x="26.2817%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.0317%" y="469" width="0.0794%" height="15" fill="rgb(248,47,53)" fg:x="328" fg:w="1"/><text x="26.2817%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.0317%" y="453" width="0.0794%" height="15" fill="rgb(226,58,50)" fg:x="328" fg:w="1"/><text x="26.2817%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.0317%" y="437" width="0.0794%" height="15" fill="rgb(217,105,26)" fg:x="328" fg:w="1"/><text x="26.2817%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="26.0317%" y="421" width="0.0794%" height="15" fill="rgb(208,64,1)" fg:x="328" fg:w="1"/><text x="26.2817%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.0317%" y="405" width="0.0794%" height="15" fill="rgb(214,80,1)" fg:x="328" fg:w="1"/><text x="26.2817%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.0317%" y="389" width="0.0794%" height="15" fill="rgb(206,175,26)" fg:x="328" fg:w="1"/><text x="26.2817%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.0317%" y="373" width="0.0794%" height="15" fill="rgb(235,156,37)" fg:x="328" fg:w="1"/><text x="26.2817%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.0317%" y="357" width="0.0794%" height="15" fill="rgb(213,100,9)" fg:x="328" fg:w="1"/><text x="26.2817%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.0317%" y="341" width="0.0794%" height="15" fill="rgb(241,15,13)" fg:x="328" fg:w="1"/><text x="26.2817%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.0317%" y="325" width="0.0794%" height="15" fill="rgb(205,97,43)" fg:x="328" fg:w="1"/><text x="26.2817%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.0317%" y="309" width="0.0794%" height="15" fill="rgb(216,106,32)" fg:x="328" fg:w="1"/><text x="26.2817%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.0317%" y="293" width="0.0794%" height="15" fill="rgb(226,200,8)" fg:x="328" fg:w="1"/><text x="26.2817%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.0317%" y="277" width="0.0794%" height="15" fill="rgb(244,54,29)" fg:x="328" fg:w="1"/><text x="26.2817%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.0317%" y="261" width="0.0794%" height="15" fill="rgb(252,169,12)" fg:x="328" fg:w="1"/><text x="26.2817%" y="271.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="26.1111%" y="565" width="0.1587%" height="15" fill="rgb(231,199,11)" fg:x="329" fg:w="2"/><text x="26.3611%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.1905%" y="549" width="0.0794%" height="15" fill="rgb(233,191,18)" fg:x="330" fg:w="1"/><text x="26.4405%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="26.1111%" y="581" width="0.2381%" height="15" fill="rgb(215,83,47)" fg:x="329" fg:w="3"/><text x="26.3611%" y="591.50"></text></g><g><title>engine::internal::EntityMap::new (1 samples, 0.08%)</title><rect x="26.2698%" y="565" width="0.0794%" height="15" fill="rgb(251,67,19)" fg:x="331" fg:w="1"/><text x="26.5198%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="26.0317%" y="613" width="0.3968%" height="15" fill="rgb(240,7,20)" fg:x="328" fg:w="5"/><text x="26.2817%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="26.0317%" y="597" width="0.3968%" height="15" fill="rgb(210,150,26)" fg:x="328" fg:w="5"/><text x="26.2817%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="26.3492%" y="581" width="0.0794%" height="15" fill="rgb(228,75,42)" fg:x="332" fg:w="1"/><text x="26.5992%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3492%" y="565" width="0.0794%" height="15" fill="rgb(237,134,48)" fg:x="332" fg:w="1"/><text x="26.5992%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.3492%" y="549" width="0.0794%" height="15" fill="rgb(205,80,50)" fg:x="332" fg:w="1"/><text x="26.5992%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.3492%" y="533" width="0.0794%" height="15" fill="rgb(217,74,48)" fg:x="332" fg:w="1"/><text x="26.5992%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.3492%" y="517" width="0.0794%" height="15" fill="rgb(205,82,50)" fg:x="332" fg:w="1"/><text x="26.5992%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.3492%" y="501" width="0.0794%" height="15" fill="rgb(228,1,33)" fg:x="332" fg:w="1"/><text x="26.5992%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.3492%" y="485" width="0.0794%" height="15" fill="rgb(214,50,23)" fg:x="332" fg:w="1"/><text x="26.5992%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.3492%" y="469" width="0.0794%" height="15" fill="rgb(210,62,9)" fg:x="332" fg:w="1"/><text x="26.5992%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="26.4286%" y="613" width="0.0794%" height="15" fill="rgb(210,104,37)" fg:x="333" fg:w="1"/><text x="26.6786%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="26.4286%" y="597" width="0.0794%" height="15" fill="rgb(232,104,43)" fg:x="333" fg:w="1"/><text x="26.6786%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="26.4286%" y="581" width="0.0794%" height="15" fill="rgb(244,52,6)" fg:x="333" fg:w="1"/><text x="26.6786%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4286%" y="565" width="0.0794%" height="15" fill="rgb(211,174,52)" fg:x="333" fg:w="1"/><text x="26.6786%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4286%" y="549" width="0.0794%" height="15" fill="rgb(229,48,4)" fg:x="333" fg:w="1"/><text x="26.6786%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.4286%" y="533" width="0.0794%" height="15" fill="rgb(205,155,16)" fg:x="333" fg:w="1"/><text x="26.6786%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.4286%" y="517" width="0.0794%" height="15" fill="rgb(211,141,53)" fg:x="333" fg:w="1"/><text x="26.6786%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.4286%" y="501" width="0.0794%" height="15" fill="rgb(240,148,11)" fg:x="333" fg:w="1"/><text x="26.6786%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.4286%" y="485" width="0.0794%" height="15" fill="rgb(214,45,23)" fg:x="333" fg:w="1"/><text x="26.6786%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.4286%" y="469" width="0.0794%" height="15" fill="rgb(248,74,26)" fg:x="333" fg:w="1"/><text x="26.6786%" y="479.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="26.5079%" y="613" width="0.0794%" height="15" fill="rgb(218,121,16)" fg:x="334" fg:w="1"/><text x="26.7579%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="26.5079%" y="597" width="0.0794%" height="15" fill="rgb(218,10,47)" fg:x="334" fg:w="1"/><text x="26.7579%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="26.5079%" y="581" width="0.0794%" height="15" fill="rgb(227,99,14)" fg:x="334" fg:w="1"/><text x="26.7579%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5079%" y="565" width="0.0794%" height="15" fill="rgb(229,83,46)" fg:x="334" fg:w="1"/><text x="26.7579%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="26.5873%" y="597" width="0.0794%" height="15" fill="rgb(228,25,1)" fg:x="335" fg:w="1"/><text x="26.8373%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="26.5873%" y="581" width="0.0794%" height="15" fill="rgb(252,190,15)" fg:x="335" fg:w="1"/><text x="26.8373%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="26.5873%" y="565" width="0.0794%" height="15" fill="rgb(213,103,51)" fg:x="335" fg:w="1"/><text x="26.8373%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="26.5873%" y="549" width="0.0794%" height="15" fill="rgb(220,38,44)" fg:x="335" fg:w="1"/><text x="26.8373%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5873%" y="533" width="0.0794%" height="15" fill="rgb(210,45,26)" fg:x="335" fg:w="1"/><text x="26.8373%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5873%" y="517" width="0.0794%" height="15" fill="rgb(205,95,48)" fg:x="335" fg:w="1"/><text x="26.8373%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5873%" y="501" width="0.0794%" height="15" fill="rgb(225,179,37)" fg:x="335" fg:w="1"/><text x="26.8373%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.5873%" y="485" width="0.0794%" height="15" fill="rgb(230,209,3)" fg:x="335" fg:w="1"/><text x="26.8373%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.5873%" y="469" width="0.0794%" height="15" fill="rgb(248,12,46)" fg:x="335" fg:w="1"/><text x="26.8373%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.5873%" y="453" width="0.0794%" height="15" fill="rgb(234,18,0)" fg:x="335" fg:w="1"/><text x="26.8373%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.5873%" y="437" width="0.0794%" height="15" fill="rgb(238,197,14)" fg:x="335" fg:w="1"/><text x="26.8373%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.5873%" y="421" width="0.0794%" height="15" fill="rgb(251,162,48)" fg:x="335" fg:w="1"/><text x="26.8373%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.5873%" y="405" width="0.0794%" height="15" fill="rgb(237,73,42)" fg:x="335" fg:w="1"/><text x="26.8373%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.5873%" y="389" width="0.0794%" height="15" fill="rgb(211,108,8)" fg:x="335" fg:w="1"/><text x="26.8373%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.5873%" y="373" width="0.0794%" height="15" fill="rgb(213,45,22)" fg:x="335" fg:w="1"/><text x="26.8373%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.5873%" y="357" width="0.0794%" height="15" fill="rgb(252,154,5)" fg:x="335" fg:w="1"/><text x="26.8373%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5873%" y="341" width="0.0794%" height="15" fill="rgb(221,79,52)" fg:x="335" fg:w="1"/><text x="26.8373%" y="351.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6667%" y="565" width="0.0794%" height="15" fill="rgb(229,220,36)" fg:x="336" fg:w="1"/><text x="26.9167%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6667%" y="549" width="0.0794%" height="15" fill="rgb(211,17,16)" fg:x="336" fg:w="1"/><text x="26.9167%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6667%" y="533" width="0.0794%" height="15" fill="rgb(222,55,31)" fg:x="336" fg:w="1"/><text x="26.9167%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.6667%" y="517" width="0.0794%" height="15" fill="rgb(221,221,31)" fg:x="336" fg:w="1"/><text x="26.9167%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.6667%" y="501" width="0.0794%" height="15" fill="rgb(227,168,26)" fg:x="336" fg:w="1"/><text x="26.9167%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.6667%" y="485" width="0.0794%" height="15" fill="rgb(224,139,9)" fg:x="336" fg:w="1"/><text x="26.9167%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6667%" y="469" width="0.0794%" height="15" fill="rgb(254,172,0)" fg:x="336" fg:w="1"/><text x="26.9167%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6667%" y="453" width="0.0794%" height="15" fill="rgb(235,203,1)" fg:x="336" fg:w="1"/><text x="26.9167%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.6667%" y="437" width="0.0794%" height="15" fill="rgb(216,205,24)" fg:x="336" fg:w="1"/><text x="26.9167%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.6667%" y="421" width="0.0794%" height="15" fill="rgb(233,24,6)" fg:x="336" fg:w="1"/><text x="26.9167%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.6667%" y="405" width="0.0794%" height="15" fill="rgb(244,110,9)" fg:x="336" fg:w="1"/><text x="26.9167%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.6667%" y="389" width="0.0794%" height="15" fill="rgb(239,222,42)" fg:x="336" fg:w="1"/><text x="26.9167%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6667%" y="373" width="0.0794%" height="15" fill="rgb(218,145,13)" fg:x="336" fg:w="1"/><text x="26.9167%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="26.6667%" y="581" width="0.2381%" height="15" fill="rgb(207,69,11)" fg:x="336" fg:w="3"/><text x="26.9167%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="26.7460%" y="565" width="0.1587%" height="15" fill="rgb(220,223,22)" fg:x="337" fg:w="2"/><text x="26.9960%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="26.8254%" y="549" width="0.0794%" height="15" fill="rgb(245,102,5)" fg:x="338" fg:w="1"/><text x="27.0754%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="26.9048%" y="581" width="0.1587%" height="15" fill="rgb(211,148,2)" fg:x="339" fg:w="2"/><text x="27.1548%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="26.9048%" y="565" width="0.1587%" height="15" fill="rgb(241,13,44)" fg:x="339" fg:w="2"/><text x="27.1548%" y="575.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="26.9048%" y="549" width="0.1587%" height="15" fill="rgb(219,137,21)" fg:x="339" fg:w="2"/><text x="27.1548%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="26.9048%" y="533" width="0.1587%" height="15" fill="rgb(242,206,5)" fg:x="339" fg:w="2"/><text x="27.1548%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.9048%" y="517" width="0.1587%" height="15" fill="rgb(217,114,22)" fg:x="339" fg:w="2"/><text x="27.1548%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9841%" y="501" width="0.0794%" height="15" fill="rgb(253,206,42)" fg:x="340" fg:w="1"/><text x="27.2341%" y="511.50"></text></g><g><title>plugins_core::build::Build::occupying (7 samples, 0.56%)</title><rect x="26.5873%" y="613" width="0.5556%" height="15" fill="rgb(236,102,18)" fg:x="335" fg:w="7"/><text x="26.8373%" y="623.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="26.6667%" y="597" width="0.4762%" height="15" fill="rgb(208,59,49)" fg:x="336" fg:w="6"/><text x="26.9167%" y="607.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="27.0635%" y="581" width="0.0794%" height="15" fill="rgb(215,194,28)" fg:x="341" fg:w="1"/><text x="27.3135%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="27.0635%" y="565" width="0.0794%" height="15" fill="rgb(243,207,11)" fg:x="341" fg:w="1"/><text x="27.3135%" y="575.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="27.0635%" y="549" width="0.0794%" height="15" fill="rgb(254,179,35)" fg:x="341" fg:w="1"/><text x="27.3135%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0635%" y="533" width="0.0794%" height="15" fill="rgb(235,97,3)" fg:x="341" fg:w="1"/><text x="27.3135%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0635%" y="517" width="0.0794%" height="15" fill="rgb(215,155,33)" fg:x="341" fg:w="1"/><text x="27.3135%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.0635%" y="501" width="0.0794%" height="15" fill="rgb(223,128,12)" fg:x="341" fg:w="1"/><text x="27.3135%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.0635%" y="485" width="0.0794%" height="15" fill="rgb(208,157,18)" fg:x="341" fg:w="1"/><text x="27.3135%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.0635%" y="469" width="0.0794%" height="15" fill="rgb(249,70,54)" fg:x="341" fg:w="1"/><text x="27.3135%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0635%" y="453" width="0.0794%" height="15" fill="rgb(244,118,24)" fg:x="341" fg:w="1"/><text x="27.3135%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0635%" y="437" width="0.0794%" height="15" fill="rgb(211,54,0)" fg:x="341" fg:w="1"/><text x="27.3135%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.0635%" y="421" width="0.0794%" height="15" fill="rgb(245,137,45)" fg:x="341" fg:w="1"/><text x="27.3135%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.0635%" y="405" width="0.0794%" height="15" fill="rgb(232,154,31)" fg:x="341" fg:w="1"/><text x="27.3135%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.0635%" y="389" width="0.0794%" height="15" fill="rgb(253,6,39)" fg:x="341" fg:w="1"/><text x="27.3135%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.0635%" y="373" width="0.0794%" height="15" fill="rgb(234,183,24)" fg:x="341" fg:w="1"/><text x="27.3135%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0635%" y="357" width="0.0794%" height="15" fill="rgb(252,84,40)" fg:x="341" fg:w="1"/><text x="27.3135%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="27.1429%" y="597" width="0.2381%" height="15" fill="rgb(224,65,2)" fg:x="342" fg:w="3"/><text x="27.3929%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="27.3016%" y="581" width="0.0794%" height="15" fill="rgb(229,38,24)" fg:x="344" fg:w="1"/><text x="27.5516%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="27.3016%" y="565" width="0.0794%" height="15" fill="rgb(218,131,50)" fg:x="344" fg:w="1"/><text x="27.5516%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3016%" y="549" width="0.0794%" height="15" fill="rgb(233,106,18)" fg:x="344" fg:w="1"/><text x="27.5516%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.3016%" y="533" width="0.0794%" height="15" fill="rgb(220,216,11)" fg:x="344" fg:w="1"/><text x="27.5516%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (165 samples, 13.10%)</title><rect x="14.3651%" y="629" width="13.0952%" height="15" fill="rgb(251,100,45)" fg:x="181" fg:w="165"/><text x="14.6151%" y="639.50">plugins_core::build:..</text></g><g><title>plugins_core::build::Build::with_username (4 samples, 0.32%)</title><rect x="27.1429%" y="613" width="0.3175%" height="15" fill="rgb(235,143,32)" fg:x="342" fg:w="4"/><text x="27.3929%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="27.3810%" y="597" width="0.0794%" height="15" fill="rgb(248,124,34)" fg:x="345" fg:w="1"/><text x="27.6310%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="27.4603%" y="629" width="0.0794%" height="15" fill="rgb(225,221,4)" fg:x="346" fg:w="1"/><text x="27.7103%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="27.4603%" y="613" width="0.0794%" height="15" fill="rgb(242,27,43)" fg:x="346" fg:w="1"/><text x="27.7103%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="27.5397%" y="581" width="0.3175%" height="15" fill="rgb(227,54,8)" fg:x="347" fg:w="4"/><text x="27.7897%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="27.6190%" y="565" width="0.2381%" height="15" fill="rgb(253,139,49)" fg:x="348" fg:w="3"/><text x="27.8690%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7778%" y="549" width="0.0794%" height="15" fill="rgb(231,26,43)" fg:x="350" fg:w="1"/><text x="28.0278%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.7778%" y="533" width="0.0794%" height="15" fill="rgb(207,121,39)" fg:x="350" fg:w="1"/><text x="28.0278%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="27.7778%" y="517" width="0.0794%" height="15" fill="rgb(223,101,35)" fg:x="350" fg:w="1"/><text x="28.0278%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8571%" y="485" width="0.0794%" height="15" fill="rgb(232,87,23)" fg:x="351" fg:w="1"/><text x="28.1071%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.8571%" y="469" width="0.0794%" height="15" fill="rgb(225,180,29)" fg:x="351" fg:w="1"/><text x="28.1071%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.8571%" y="453" width="0.0794%" height="15" fill="rgb(225,25,17)" fg:x="351" fg:w="1"/><text x="28.1071%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.8571%" y="437" width="0.0794%" height="15" fill="rgb(223,8,52)" fg:x="351" fg:w="1"/><text x="28.1071%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.8571%" y="421" width="0.0794%" height="15" fill="rgb(246,42,21)" fg:x="351" fg:w="1"/><text x="28.1071%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.8571%" y="405" width="0.0794%" height="15" fill="rgb(205,64,43)" fg:x="351" fg:w="1"/><text x="28.1071%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.8571%" y="389" width="0.0794%" height="15" fill="rgb(221,160,13)" fg:x="351" fg:w="1"/><text x="28.1071%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="27.5397%" y="597" width="0.4762%" height="15" fill="rgb(239,58,35)" fg:x="347" fg:w="6"/><text x="27.7897%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="27.8571%" y="581" width="0.1587%" height="15" fill="rgb(251,26,40)" fg:x="351" fg:w="2"/><text x="28.1071%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="27.8571%" y="565" width="0.1587%" height="15" fill="rgb(247,0,4)" fg:x="351" fg:w="2"/><text x="28.1071%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="27.8571%" y="549" width="0.1587%" height="15" fill="rgb(218,130,10)" fg:x="351" fg:w="2"/><text x="28.1071%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="27.8571%" y="533" width="0.1587%" height="15" fill="rgb(239,32,7)" fg:x="351" fg:w="2"/><text x="28.1071%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="27.8571%" y="517" width="0.1587%" height="15" fill="rgb(210,192,24)" fg:x="351" fg:w="2"/><text x="28.1071%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="27.8571%" y="501" width="0.1587%" height="15" fill="rgb(226,212,17)" fg:x="351" fg:w="2"/><text x="28.1071%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.9365%" y="485" width="0.0794%" height="15" fill="rgb(219,201,28)" fg:x="352" fg:w="1"/><text x="28.1865%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.9365%" y="469" width="0.0794%" height="15" fill="rgb(235,207,41)" fg:x="352" fg:w="1"/><text x="28.1865%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="28.0159%" y="597" width="0.0794%" height="15" fill="rgb(241,95,54)" fg:x="353" fg:w="1"/><text x="28.2659%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0159%" y="581" width="0.0794%" height="15" fill="rgb(248,12,23)" fg:x="353" fg:w="1"/><text x="28.2659%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="28.0952%" y="597" width="0.0794%" height="15" fill="rgb(228,173,4)" fg:x="354" fg:w="1"/><text x="28.3452%" y="607.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="28.0952%" y="581" width="0.0794%" height="15" fill="rgb(254,99,5)" fg:x="354" fg:w="1"/><text x="28.3452%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="28.0952%" y="565" width="0.0794%" height="15" fill="rgb(212,184,17)" fg:x="354" fg:w="1"/><text x="28.3452%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="28.0952%" y="549" width="0.0794%" height="15" fill="rgb(252,174,1)" fg:x="354" fg:w="1"/><text x="28.3452%" y="559.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (281 samples, 22.30%)</title><rect x="5.9524%" y="645" width="22.3016%" height="15" fill="rgb(241,118,51)" fg:x="75" fg:w="281"/><text x="6.2024%" y="655.50">&lt;tests::HoldingKeyInVessel as tests..</text></g><g><title>plugins_core::build::BuildSurroundings::make (9 samples, 0.71%)</title><rect x="27.5397%" y="629" width="0.7143%" height="15" fill="rgb(227,94,47)" fg:x="347" fg:w="9"/><text x="27.7897%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.71%)</title><rect x="27.5397%" y="613" width="0.7143%" height="15" fill="rgb(229,104,2)" fg:x="347" fg:w="9"/><text x="27.7897%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="28.1746%" y="597" width="0.0794%" height="15" fill="rgb(219,28,31)" fg:x="355" fg:w="1"/><text x="28.4246%" y="607.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="28.1746%" y="581" width="0.0794%" height="15" fill="rgb(233,109,36)" fg:x="355" fg:w="1"/><text x="28.4246%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.1746%" y="565" width="0.0794%" height="15" fill="rgb(246,88,11)" fg:x="355" fg:w="1"/><text x="28.4246%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.1746%" y="549" width="0.0794%" height="15" fill="rgb(209,212,17)" fg:x="355" fg:w="1"/><text x="28.4246%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="28.2540%" y="645" width="0.1587%" height="15" fill="rgb(243,59,29)" fg:x="356" fg:w="2"/><text x="28.5040%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="28.2540%" y="629" width="0.1587%" height="15" fill="rgb(244,205,48)" fg:x="356" fg:w="2"/><text x="28.5040%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="28.2540%" y="613" width="0.1587%" height="15" fill="rgb(227,30,6)" fg:x="356" fg:w="2"/><text x="28.5040%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="28.2540%" y="597" width="0.1587%" height="15" fill="rgb(220,205,48)" fg:x="356" fg:w="2"/><text x="28.5040%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.2540%" y="581" width="0.1587%" height="15" fill="rgb(250,94,14)" fg:x="356" fg:w="2"/><text x="28.5040%" y="591.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (1 samples, 0.08%)</title><rect x="28.4127%" y="629" width="0.0794%" height="15" fill="rgb(216,119,42)" fg:x="358" fg:w="1"/><text x="28.6627%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.4921%" y="597" width="0.0794%" height="15" fill="rgb(232,155,0)" fg:x="359" fg:w="1"/><text x="28.7421%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.4921%" y="581" width="0.0794%" height="15" fill="rgb(212,24,32)" fg:x="359" fg:w="1"/><text x="28.7421%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.4921%" y="565" width="0.0794%" height="15" fill="rgb(216,69,20)" fg:x="359" fg:w="1"/><text x="28.7421%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.4921%" y="549" width="0.0794%" height="15" fill="rgb(229,73,31)" fg:x="359" fg:w="1"/><text x="28.7421%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.4921%" y="533" width="0.0794%" height="15" fill="rgb(224,219,20)" fg:x="359" fg:w="1"/><text x="28.7421%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="28.4921%" y="517" width="0.0794%" height="15" fill="rgb(215,146,41)" fg:x="359" fg:w="1"/><text x="28.7421%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="28.4921%" y="501" width="0.0794%" height="15" fill="rgb(244,71,31)" fg:x="359" fg:w="1"/><text x="28.7421%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.5714%" y="597" width="0.0794%" height="15" fill="rgb(224,24,11)" fg:x="360" fg:w="1"/><text x="28.8214%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6508%" y="597" width="0.0794%" height="15" fill="rgb(229,76,15)" fg:x="361" fg:w="1"/><text x="28.9008%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="28.4921%" y="613" width="0.3175%" height="15" fill="rgb(209,93,2)" fg:x="359" fg:w="4"/><text x="28.7421%" y="623.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="28.7302%" y="597" width="0.0794%" height="15" fill="rgb(216,200,50)" fg:x="362" fg:w="1"/><text x="28.9802%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="28.8095%" y="613" width="0.0794%" height="15" fill="rgb(211,67,34)" fg:x="363" fg:w="1"/><text x="29.0595%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="28.8095%" y="597" width="0.0794%" height="15" fill="rgb(225,87,47)" fg:x="363" fg:w="1"/><text x="29.0595%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="28.8095%" y="581" width="0.0794%" height="15" fill="rgb(217,185,16)" fg:x="363" fg:w="1"/><text x="29.0595%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8095%" y="565" width="0.0794%" height="15" fill="rgb(205,0,0)" fg:x="363" fg:w="1"/><text x="29.0595%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8095%" y="549" width="0.0794%" height="15" fill="rgb(207,116,45)" fg:x="363" fg:w="1"/><text x="29.0595%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.8095%" y="533" width="0.0794%" height="15" fill="rgb(221,156,26)" fg:x="363" fg:w="1"/><text x="29.0595%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.8095%" y="517" width="0.0794%" height="15" fill="rgb(213,140,4)" fg:x="363" fg:w="1"/><text x="29.0595%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.8095%" y="501" width="0.0794%" height="15" fill="rgb(231,224,15)" fg:x="363" fg:w="1"/><text x="29.0595%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8095%" y="485" width="0.0794%" height="15" fill="rgb(244,76,20)" fg:x="363" fg:w="1"/><text x="29.0595%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8095%" y="469" width="0.0794%" height="15" fill="rgb(238,117,7)" fg:x="363" fg:w="1"/><text x="29.0595%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.8095%" y="453" width="0.0794%" height="15" fill="rgb(235,1,10)" fg:x="363" fg:w="1"/><text x="29.0595%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.8095%" y="437" width="0.0794%" height="15" fill="rgb(216,165,6)" fg:x="363" fg:w="1"/><text x="29.0595%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.8095%" y="421" width="0.0794%" height="15" fill="rgb(246,91,35)" fg:x="363" fg:w="1"/><text x="29.0595%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.8095%" y="405" width="0.0794%" height="15" fill="rgb(228,96,24)" fg:x="363" fg:w="1"/><text x="29.0595%" y="415.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="29.1270%" y="565" width="0.0794%" height="15" fill="rgb(254,217,53)" fg:x="367" fg:w="1"/><text x="29.3770%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (5 samples, 0.40%)</title><rect x="28.8889%" y="613" width="0.3968%" height="15" fill="rgb(209,60,0)" fg:x="364" fg:w="5"/><text x="29.1389%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="28.8889%" y="597" width="0.3968%" height="15" fill="rgb(250,93,26)" fg:x="364" fg:w="5"/><text x="29.1389%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="28.8889%" y="581" width="0.3968%" height="15" fill="rgb(211,9,40)" fg:x="364" fg:w="5"/><text x="29.1389%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.2063%" y="565" width="0.0794%" height="15" fill="rgb(242,57,20)" fg:x="368" fg:w="1"/><text x="29.4563%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.2063%" y="549" width="0.0794%" height="15" fill="rgb(248,85,48)" fg:x="368" fg:w="1"/><text x="29.4563%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="29.4444%" y="597" width="0.0794%" height="15" fill="rgb(212,117,2)" fg:x="371" fg:w="1"/><text x="29.6944%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.4444%" y="581" width="0.0794%" height="15" fill="rgb(243,19,3)" fg:x="371" fg:w="1"/><text x="29.6944%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.4444%" y="565" width="0.0794%" height="15" fill="rgb(232,217,24)" fg:x="371" fg:w="1"/><text x="29.6944%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="29.6032%" y="581" width="0.0794%" height="15" fill="rgb(224,175,40)" fg:x="373" fg:w="1"/><text x="29.8532%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.6032%" y="565" width="0.0794%" height="15" fill="rgb(212,162,32)" fg:x="373" fg:w="1"/><text x="29.8532%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.6032%" y="549" width="0.0794%" height="15" fill="rgb(215,9,4)" fg:x="373" fg:w="1"/><text x="29.8532%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="29.7619%" y="549" width="0.3968%" height="15" fill="rgb(242,42,7)" fg:x="375" fg:w="5"/><text x="30.0119%" y="559.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="29.7619%" y="533" width="0.3968%" height="15" fill="rgb(242,184,45)" fg:x="375" fg:w="5"/><text x="30.0119%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="29.8413%" y="517" width="0.3175%" height="15" fill="rgb(228,111,51)" fg:x="376" fg:w="4"/><text x="30.0913%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="29.9206%" y="501" width="0.2381%" height="15" fill="rgb(236,147,17)" fg:x="377" fg:w="3"/><text x="30.1706%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.0794%" y="485" width="0.0794%" height="15" fill="rgb(210,75,22)" fg:x="379" fg:w="1"/><text x="30.3294%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.0794%" y="469" width="0.0794%" height="15" fill="rgb(217,159,45)" fg:x="379" fg:w="1"/><text x="30.3294%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.0794%" y="453" width="0.0794%" height="15" fill="rgb(245,165,53)" fg:x="379" fg:w="1"/><text x="30.3294%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.3175%" y="517" width="0.0794%" height="15" fill="rgb(251,190,50)" fg:x="382" fg:w="1"/><text x="30.5675%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.79%)</title><rect x="29.6825%" y="565" width="0.7937%" height="15" fill="rgb(208,203,29)" fg:x="374" fg:w="10"/><text x="29.9325%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="30.1587%" y="549" width="0.3175%" height="15" fill="rgb(207,209,35)" fg:x="380" fg:w="4"/><text x="30.4087%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="30.2381%" y="533" width="0.2381%" height="15" fill="rgb(230,144,49)" fg:x="381" fg:w="3"/><text x="30.4881%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.3968%" y="517" width="0.0794%" height="15" fill="rgb(229,31,6)" fg:x="383" fg:w="1"/><text x="30.6468%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="30.5556%" y="549" width="0.2381%" height="15" fill="rgb(251,129,24)" fg:x="385" fg:w="3"/><text x="30.8056%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="30.7937%" y="549" width="0.3175%" height="15" fill="rgb(235,105,15)" fg:x="388" fg:w="4"/><text x="31.0437%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="30.7937%" y="533" width="0.3175%" height="15" fill="rgb(216,52,43)" fg:x="388" fg:w="4"/><text x="31.0437%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="30.8730%" y="517" width="0.2381%" height="15" fill="rgb(238,144,41)" fg:x="389" fg:w="3"/><text x="31.1230%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="30.8730%" y="501" width="0.2381%" height="15" fill="rgb(243,63,9)" fg:x="389" fg:w="3"/><text x="31.1230%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="30.9524%" y="485" width="0.1587%" height="15" fill="rgb(246,208,1)" fg:x="390" fg:w="2"/><text x="31.2024%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="30.9524%" y="469" width="0.1587%" height="15" fill="rgb(233,182,18)" fg:x="390" fg:w="2"/><text x="31.2024%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="30.9524%" y="453" width="0.1587%" height="15" fill="rgb(242,224,8)" fg:x="390" fg:w="2"/><text x="31.2024%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="31.2698%" y="501" width="0.0794%" height="15" fill="rgb(243,54,37)" fg:x="394" fg:w="1"/><text x="31.5198%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="31.1111%" y="533" width="0.3175%" height="15" fill="rgb(233,192,12)" fg:x="392" fg:w="4"/><text x="31.3611%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="31.1905%" y="517" width="0.2381%" height="15" fill="rgb(251,192,53)" fg:x="393" fg:w="3"/><text x="31.4405%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.3492%" y="501" width="0.0794%" height="15" fill="rgb(246,141,26)" fg:x="395" fg:w="1"/><text x="31.5992%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.3492%" y="485" width="0.0794%" height="15" fill="rgb(239,195,19)" fg:x="395" fg:w="1"/><text x="31.5992%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.3492%" y="469" width="0.0794%" height="15" fill="rgb(241,16,39)" fg:x="395" fg:w="1"/><text x="31.5992%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="31.7460%" y="485" width="0.1587%" height="15" fill="rgb(223,13,53)" fg:x="400" fg:w="2"/><text x="31.9960%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="31.4286%" y="533" width="0.5556%" height="15" fill="rgb(214,227,0)" fg:x="396" fg:w="7"/><text x="31.6786%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="31.6667%" y="517" width="0.3175%" height="15" fill="rgb(228,103,26)" fg:x="399" fg:w="4"/><text x="31.9167%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="31.6667%" y="501" width="0.3175%" height="15" fill="rgb(254,177,53)" fg:x="399" fg:w="4"/><text x="31.9167%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="31.9048%" y="485" width="0.0794%" height="15" fill="rgb(208,201,34)" fg:x="402" fg:w="1"/><text x="32.1548%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="32.0635%" y="517" width="0.0794%" height="15" fill="rgb(212,39,5)" fg:x="404" fg:w="1"/><text x="32.3135%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.0635%" y="501" width="0.0794%" height="15" fill="rgb(246,117,3)" fg:x="404" fg:w="1"/><text x="32.3135%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.0635%" y="485" width="0.0794%" height="15" fill="rgb(244,118,39)" fg:x="404" fg:w="1"/><text x="32.3135%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="32.1429%" y="517" width="0.1587%" height="15" fill="rgb(241,64,10)" fg:x="405" fg:w="2"/><text x="32.3929%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.2222%" y="501" width="0.0794%" height="15" fill="rgb(229,39,44)" fg:x="406" fg:w="1"/><text x="32.4722%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.2222%" y="485" width="0.0794%" height="15" fill="rgb(230,226,3)" fg:x="406" fg:w="1"/><text x="32.4722%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.2222%" y="469" width="0.0794%" height="15" fill="rgb(222,13,42)" fg:x="406" fg:w="1"/><text x="32.4722%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.2222%" y="453" width="0.0794%" height="15" fill="rgb(247,180,54)" fg:x="406" fg:w="1"/><text x="32.4722%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="31.9841%" y="533" width="0.4762%" height="15" fill="rgb(205,96,16)" fg:x="403" fg:w="6"/><text x="32.2341%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="32.3016%" y="517" width="0.1587%" height="15" fill="rgb(205,100,21)" fg:x="407" fg:w="2"/><text x="32.5516%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.3810%" y="501" width="0.0794%" height="15" fill="rgb(248,51,4)" fg:x="408" fg:w="1"/><text x="32.6310%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="32.3810%" y="485" width="0.0794%" height="15" fill="rgb(217,197,30)" fg:x="408" fg:w="1"/><text x="32.6310%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.43%)</title><rect x="31.1111%" y="549" width="1.4286%" height="15" fill="rgb(240,179,40)" fg:x="392" fg:w="18"/><text x="31.3611%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.4603%" y="533" width="0.0794%" height="15" fill="rgb(212,185,35)" fg:x="409" fg:w="1"/><text x="32.7103%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.54%)</title><rect x="30.4762%" y="565" width="2.5397%" height="15" fill="rgb(251,222,31)" fg:x="384" fg:w="32"/><text x="30.7262%" y="575.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="32.5397%" y="549" width="0.4762%" height="15" fill="rgb(208,140,36)" fg:x="410" fg:w="6"/><text x="32.7897%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="32.6190%" y="533" width="0.3968%" height="15" fill="rgb(220,148,1)" fg:x="411" fg:w="5"/><text x="32.8690%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="32.7778%" y="517" width="0.2381%" height="15" fill="rgb(254,4,28)" fg:x="413" fg:w="3"/><text x="33.0278%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="32.9365%" y="501" width="0.0794%" height="15" fill="rgb(222,185,44)" fg:x="415" fg:w="1"/><text x="33.1865%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.49%)</title><rect x="29.6825%" y="581" width="3.4921%" height="15" fill="rgb(215,74,39)" fg:x="374" fg:w="44"/><text x="29.9325%" y="591.50">&lt;se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="33.0159%" y="565" width="0.1587%" height="15" fill="rgb(247,86,4)" fg:x="416" fg:w="2"/><text x="33.2659%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="33.0159%" y="549" width="0.1587%" height="15" fill="rgb(231,105,32)" fg:x="416" fg:w="2"/><text x="33.2659%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="33.0159%" y="533" width="0.1587%" height="15" fill="rgb(222,65,35)" fg:x="416" fg:w="2"/><text x="33.2659%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="33.0159%" y="517" width="0.1587%" height="15" fill="rgb(218,145,35)" fg:x="416" fg:w="2"/><text x="33.2659%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.0952%" y="501" width="0.0794%" height="15" fill="rgb(208,7,15)" fg:x="417" fg:w="1"/><text x="33.3452%" y="511.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="33.0952%" y="485" width="0.0794%" height="15" fill="rgb(209,83,13)" fg:x="417" fg:w="1"/><text x="33.3452%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1746%" y="533" width="0.0794%" height="15" fill="rgb(218,3,10)" fg:x="418" fg:w="1"/><text x="33.4246%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2540%" y="533" width="0.0794%" height="15" fill="rgb(211,219,4)" fg:x="419" fg:w="1"/><text x="33.5040%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2540%" y="517" width="0.0794%" height="15" fill="rgb(228,194,12)" fg:x="419" fg:w="1"/><text x="33.5040%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.4127%" y="517" width="0.0794%" height="15" fill="rgb(210,175,7)" fg:x="421" fg:w="1"/><text x="33.6627%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.4921%" y="501" width="0.0794%" height="15" fill="rgb(243,132,6)" fg:x="422" fg:w="1"/><text x="33.7421%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.4921%" y="485" width="0.0794%" height="15" fill="rgb(207,72,18)" fg:x="422" fg:w="1"/><text x="33.7421%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.4921%" y="469" width="0.0794%" height="15" fill="rgb(236,1,18)" fg:x="422" fg:w="1"/><text x="33.7421%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="33.5714%" y="501" width="0.2381%" height="15" fill="rgb(227,0,18)" fg:x="423" fg:w="3"/><text x="33.8214%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="33.1746%" y="581" width="0.8730%" height="15" fill="rgb(247,37,5)" fg:x="418" fg:w="11"/><text x="33.4246%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.87%)</title><rect x="33.1746%" y="565" width="0.8730%" height="15" fill="rgb(237,179,24)" fg:x="418" fg:w="11"/><text x="33.4246%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="33.1746%" y="549" width="0.8730%" height="15" fill="rgb(226,53,20)" fg:x="418" fg:w="11"/><text x="33.4246%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="33.3333%" y="533" width="0.7143%" height="15" fill="rgb(247,75,7)" fg:x="420" fg:w="9"/><text x="33.5833%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="33.4921%" y="517" width="0.5556%" height="15" fill="rgb(233,96,12)" fg:x="422" fg:w="7"/><text x="33.7421%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="33.8095%" y="501" width="0.2381%" height="15" fill="rgb(224,125,0)" fg:x="426" fg:w="3"/><text x="34.0595%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.9683%" y="485" width="0.0794%" height="15" fill="rgb(224,92,25)" fg:x="428" fg:w="1"/><text x="34.2183%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="34.3651%" y="533" width="0.2381%" height="15" fill="rgb(224,42,24)" fg:x="433" fg:w="3"/><text x="34.6151%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="34.8413%" y="517" width="0.2381%" height="15" fill="rgb(234,132,49)" fg:x="439" fg:w="3"/><text x="35.0913%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="34.9206%" y="501" width="0.1587%" height="15" fill="rgb(248,100,35)" fg:x="440" fg:w="2"/><text x="35.1706%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.1587%" y="501" width="0.0794%" height="15" fill="rgb(239,94,40)" fg:x="443" fg:w="1"/><text x="35.4087%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="35.2381%" y="501" width="0.1587%" height="15" fill="rgb(235,139,28)" fg:x="444" fg:w="2"/><text x="35.4881%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.3175%" y="485" width="0.0794%" height="15" fill="rgb(217,144,7)" fg:x="445" fg:w="1"/><text x="35.5675%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.3968%" y="485" width="0.0794%" height="15" fill="rgb(227,55,4)" fg:x="446" fg:w="1"/><text x="35.6468%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.35%)</title><rect x="34.2857%" y="565" width="1.3492%" height="15" fill="rgb(252,82,54)" fg:x="432" fg:w="17"/><text x="34.5357%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.35%)</title><rect x="34.2857%" y="549" width="1.3492%" height="15" fill="rgb(245,172,4)" fg:x="432" fg:w="17"/><text x="34.5357%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="34.6032%" y="533" width="1.0317%" height="15" fill="rgb(207,26,27)" fg:x="436" fg:w="13"/><text x="34.8532%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="35.0794%" y="517" width="0.5556%" height="15" fill="rgb(252,98,18)" fg:x="442" fg:w="7"/><text x="35.3294%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="35.3968%" y="501" width="0.2381%" height="15" fill="rgb(244,8,26)" fg:x="446" fg:w="3"/><text x="35.6468%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.4762%" y="485" width="0.1587%" height="15" fill="rgb(237,173,45)" fg:x="447" fg:w="2"/><text x="35.7262%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.4762%" y="469" width="0.1587%" height="15" fill="rgb(208,213,49)" fg:x="447" fg:w="2"/><text x="35.7262%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="35.4762%" y="453" width="0.1587%" height="15" fill="rgb(212,122,37)" fg:x="447" fg:w="2"/><text x="35.7262%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="36.0317%" y="533" width="0.0794%" height="15" fill="rgb(213,80,17)" fg:x="454" fg:w="1"/><text x="36.2817%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="36.0317%" y="517" width="0.0794%" height="15" fill="rgb(206,210,43)" fg:x="454" fg:w="1"/><text x="36.2817%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="36.1111%" y="533" width="0.4762%" height="15" fill="rgb(229,214,3)" fg:x="455" fg:w="6"/><text x="36.3611%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="36.3492%" y="517" width="0.2381%" height="15" fill="rgb(235,213,29)" fg:x="458" fg:w="3"/><text x="36.5992%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.5079%" y="501" width="0.0794%" height="15" fill="rgb(248,135,26)" fg:x="460" fg:w="1"/><text x="36.7579%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7460%" y="501" width="0.0794%" height="15" fill="rgb(242,188,12)" fg:x="463" fg:w="1"/><text x="36.9960%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="36.5873%" y="533" width="0.3968%" height="15" fill="rgb(245,38,12)" fg:x="461" fg:w="5"/><text x="36.8373%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="36.6667%" y="517" width="0.3175%" height="15" fill="rgb(218,42,13)" fg:x="462" fg:w="4"/><text x="36.9167%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.8254%" y="501" width="0.1587%" height="15" fill="rgb(238,132,49)" fg:x="464" fg:w="2"/><text x="37.0754%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9048%" y="485" width="0.0794%" height="15" fill="rgb(209,196,19)" fg:x="465" fg:w="1"/><text x="37.1548%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0635%" y="501" width="0.0794%" height="15" fill="rgb(244,131,22)" fg:x="467" fg:w="1"/><text x="37.3135%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0635%" y="485" width="0.0794%" height="15" fill="rgb(223,18,34)" fg:x="467" fg:w="1"/><text x="37.3135%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0635%" y="469" width="0.0794%" height="15" fill="rgb(252,124,54)" fg:x="467" fg:w="1"/><text x="37.3135%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3016%" y="485" width="0.0794%" height="15" fill="rgb(229,106,42)" fg:x="470" fg:w="1"/><text x="37.5516%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3016%" y="469" width="0.0794%" height="15" fill="rgb(221,129,1)" fg:x="470" fg:w="1"/><text x="37.5516%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.3016%" y="453" width="0.0794%" height="15" fill="rgb(229,74,15)" fg:x="470" fg:w="1"/><text x="37.5516%" y="463.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="37.4603%" y="453" width="0.0794%" height="15" fill="rgb(210,206,50)" fg:x="472" fg:w="1"/><text x="37.7103%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="37.3810%" y="469" width="0.3175%" height="15" fill="rgb(251,114,31)" fg:x="471" fg:w="4"/><text x="37.6310%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.5397%" y="453" width="0.1587%" height="15" fill="rgb(215,225,28)" fg:x="473" fg:w="2"/><text x="37.7897%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6190%" y="437" width="0.0794%" height="15" fill="rgb(237,109,14)" fg:x="474" fg:w="1"/><text x="37.8690%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.6190%" y="421" width="0.0794%" height="15" fill="rgb(230,13,37)" fg:x="474" fg:w="1"/><text x="37.8690%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6984%" y="453" width="0.0794%" height="15" fill="rgb(231,40,28)" fg:x="475" fg:w="1"/><text x="37.9484%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6984%" y="437" width="0.0794%" height="15" fill="rgb(231,202,18)" fg:x="475" fg:w="1"/><text x="37.9484%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6984%" y="421" width="0.0794%" height="15" fill="rgb(225,33,18)" fg:x="475" fg:w="1"/><text x="37.9484%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (11 samples, 0.87%)</title><rect x="36.9841%" y="533" width="0.8730%" height="15" fill="rgb(223,64,47)" fg:x="466" fg:w="11"/><text x="37.2341%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.79%)</title><rect x="37.0635%" y="517" width="0.7937%" height="15" fill="rgb(234,114,13)" fg:x="467" fg:w="10"/><text x="37.3135%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.71%)</title><rect x="37.1429%" y="501" width="0.7143%" height="15" fill="rgb(248,56,40)" fg:x="468" fg:w="9"/><text x="37.3929%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.48%)</title><rect x="37.3810%" y="485" width="0.4762%" height="15" fill="rgb(221,194,21)" fg:x="471" fg:w="6"/><text x="37.6310%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.6984%" y="469" width="0.1587%" height="15" fill="rgb(242,108,46)" fg:x="475" fg:w="2"/><text x="37.9484%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="37.7778%" y="453" width="0.0794%" height="15" fill="rgb(220,106,10)" fg:x="476" fg:w="1"/><text x="38.0278%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.7778%" y="437" width="0.0794%" height="15" fill="rgb(211,88,4)" fg:x="476" fg:w="1"/><text x="38.0278%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7778%" y="421" width="0.0794%" height="15" fill="rgb(214,95,34)" fg:x="476" fg:w="1"/><text x="38.0278%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8571%" y="533" width="0.0794%" height="15" fill="rgb(250,160,33)" fg:x="477" fg:w="1"/><text x="38.1071%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="38.2540%" y="453" width="0.3175%" height="15" fill="rgb(225,29,10)" fg:x="482" fg:w="4"/><text x="38.5040%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="38.2540%" y="437" width="0.3175%" height="15" fill="rgb(224,28,30)" fg:x="482" fg:w="4"/><text x="38.5040%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.4127%" y="421" width="0.1587%" height="15" fill="rgb(231,77,4)" fg:x="484" fg:w="2"/><text x="38.6627%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.4127%" y="405" width="0.1587%" height="15" fill="rgb(209,63,21)" fg:x="484" fg:w="2"/><text x="38.6627%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="38.1746%" y="485" width="0.4762%" height="15" fill="rgb(226,22,11)" fg:x="481" fg:w="6"/><text x="38.4246%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="38.1746%" y="469" width="0.4762%" height="15" fill="rgb(216,82,30)" fg:x="481" fg:w="6"/><text x="38.4246%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.5714%" y="453" width="0.0794%" height="15" fill="rgb(246,227,38)" fg:x="486" fg:w="1"/><text x="38.8214%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="38.7302%" y="469" width="0.2381%" height="15" fill="rgb(251,203,53)" fg:x="488" fg:w="3"/><text x="38.9802%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="38.8095%" y="453" width="0.1587%" height="15" fill="rgb(254,101,1)" fg:x="489" fg:w="2"/><text x="39.0595%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.11%)</title><rect x="38.0159%" y="501" width="1.1111%" height="15" fill="rgb(241,180,5)" fg:x="479" fg:w="14"/><text x="38.2659%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="38.6508%" y="485" width="0.4762%" height="15" fill="rgb(218,168,4)" fg:x="487" fg:w="6"/><text x="38.9008%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.9683%" y="469" width="0.1587%" height="15" fill="rgb(224,223,32)" fg:x="491" fg:w="2"/><text x="39.2183%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (45 samples, 3.57%)</title><rect x="35.6349%" y="565" width="3.5714%" height="15" fill="rgb(236,106,22)" fg:x="449" fg:w="45"/><text x="35.8849%" y="575.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (44 samples, 3.49%)</title><rect x="35.7143%" y="549" width="3.4921%" height="15" fill="rgb(206,121,5)" fg:x="450" fg:w="44"/><text x="35.9643%" y="559.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.27%)</title><rect x="37.9365%" y="533" width="1.2698%" height="15" fill="rgb(233,87,28)" fg:x="478" fg:w="16"/><text x="38.1865%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (15 samples, 1.19%)</title><rect x="38.0159%" y="517" width="1.1905%" height="15" fill="rgb(236,137,17)" fg:x="479" fg:w="15"/><text x="38.2659%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="39.1270%" y="501" width="0.0794%" height="15" fill="rgb(209,183,38)" fg:x="493" fg:w="1"/><text x="39.3770%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.0000%" y="389" width="0.0794%" height="15" fill="rgb(206,162,44)" fg:x="504" fg:w="1"/><text x="40.2500%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="40.0000%" y="421" width="0.1587%" height="15" fill="rgb(237,70,39)" fg:x="504" fg:w="2"/><text x="40.2500%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.0000%" y="405" width="0.1587%" height="15" fill="rgb(212,176,5)" fg:x="504" fg:w="2"/><text x="40.2500%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.0794%" y="389" width="0.0794%" height="15" fill="rgb(232,95,16)" fg:x="505" fg:w="1"/><text x="40.3294%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.0794%" y="373" width="0.0794%" height="15" fill="rgb(219,115,35)" fg:x="505" fg:w="1"/><text x="40.3294%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="40.0794%" y="357" width="0.0794%" height="15" fill="rgb(251,67,27)" fg:x="505" fg:w="1"/><text x="40.3294%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="40.6349%" y="389" width="0.0794%" height="15" fill="rgb(222,95,40)" fg:x="512" fg:w="1"/><text x="40.8849%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="40.7143%" y="373" width="0.3175%" height="15" fill="rgb(250,35,16)" fg:x="513" fg:w="4"/><text x="40.9643%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="40.8730%" y="357" width="0.1587%" height="15" fill="rgb(224,86,44)" fg:x="515" fg:w="2"/><text x="41.1230%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.71%)</title><rect x="40.4762%" y="405" width="0.7143%" height="15" fill="rgb(237,53,53)" fg:x="510" fg:w="9"/><text x="40.7262%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="40.7143%" y="389" width="0.4762%" height="15" fill="rgb(208,171,33)" fg:x="513" fg:w="6"/><text x="40.9643%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.0317%" y="373" width="0.1587%" height="15" fill="rgb(222,64,27)" fg:x="517" fg:w="2"/><text x="41.2817%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.0317%" y="357" width="0.1587%" height="15" fill="rgb(221,121,35)" fg:x="517" fg:w="2"/><text x="41.2817%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.0317%" y="341" width="0.1587%" height="15" fill="rgb(228,137,42)" fg:x="517" fg:w="2"/><text x="41.2817%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="41.2698%" y="389" width="0.0794%" height="15" fill="rgb(227,54,21)" fg:x="520" fg:w="1"/><text x="41.5198%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="41.1905%" y="405" width="0.3968%" height="15" fill="rgb(240,168,33)" fg:x="519" fg:w="5"/><text x="41.4405%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="41.3492%" y="389" width="0.2381%" height="15" fill="rgb(243,159,6)" fg:x="521" fg:w="3"/><text x="41.5992%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24 samples, 1.90%)</title><rect x="39.8413%" y="437" width="1.9048%" height="15" fill="rgb(205,211,41)" fg:x="502" fg:w="24"/><text x="40.0913%" y="447.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.59%)</title><rect x="40.1587%" y="421" width="1.5873%" height="15" fill="rgb(253,30,1)" fg:x="506" fg:w="20"/><text x="40.4087%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.5873%" y="405" width="0.1587%" height="15" fill="rgb(226,80,18)" fg:x="524" fg:w="2"/><text x="41.8373%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.6667%" y="389" width="0.0794%" height="15" fill="rgb(253,156,46)" fg:x="525" fg:w="1"/><text x="41.9167%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.6667%" y="373" width="0.0794%" height="15" fill="rgb(248,87,27)" fg:x="525" fg:w="1"/><text x="41.9167%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.7460%" y="437" width="0.0794%" height="15" fill="rgb(227,122,2)" fg:x="526" fg:w="1"/><text x="41.9960%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="41.7460%" y="421" width="0.0794%" height="15" fill="rgb(229,94,39)" fg:x="526" fg:w="1"/><text x="41.9960%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.54%)</title><rect x="39.6032%" y="469" width="2.5397%" height="15" fill="rgb(225,173,31)" fg:x="499" fg:w="32"/><text x="39.8532%" y="479.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 2.46%)</title><rect x="39.6825%" y="453" width="2.4603%" height="15" fill="rgb(239,176,30)" fg:x="500" fg:w="31"/><text x="39.9325%" y="463.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="41.8254%" y="437" width="0.3175%" height="15" fill="rgb(212,104,21)" fg:x="527" fg:w="4"/><text x="42.0754%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.9841%" y="421" width="0.1587%" height="15" fill="rgb(240,209,40)" fg:x="529" fg:w="2"/><text x="42.2341%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.9841%" y="405" width="0.1587%" height="15" fill="rgb(234,195,5)" fg:x="529" fg:w="2"/><text x="42.2341%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.3810%" y="453" width="0.1587%" height="15" fill="rgb(238,213,1)" fg:x="534" fg:w="2"/><text x="42.6310%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.48%)</title><rect x="42.1429%" y="469" width="0.4762%" height="15" fill="rgb(235,182,54)" fg:x="531" fg:w="6"/><text x="42.3929%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="42.5397%" y="453" width="0.0794%" height="15" fill="rgb(229,50,46)" fg:x="536" fg:w="1"/><text x="42.7897%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="42.5397%" y="437" width="0.0794%" height="15" fill="rgb(219,145,13)" fg:x="536" fg:w="1"/><text x="42.7897%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (47 samples, 3.73%)</title><rect x="39.4444%" y="501" width="3.7302%" height="15" fill="rgb(220,226,10)" fg:x="497" fg:w="47"/><text x="39.6944%" y="511.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (45 samples, 3.57%)</title><rect x="39.6032%" y="485" width="3.5714%" height="15" fill="rgb(248,47,30)" fg:x="499" fg:w="45"/><text x="39.8532%" y="495.50">&lt;ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="42.6190%" y="469" width="0.5556%" height="15" fill="rgb(231,209,44)" fg:x="537" fg:w="7"/><text x="42.8690%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="42.7778%" y="453" width="0.3968%" height="15" fill="rgb(209,80,30)" fg:x="539" fg:w="5"/><text x="43.0278%" y="463.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="42.8571%" y="437" width="0.3175%" height="15" fill="rgb(232,9,14)" fg:x="540" fg:w="4"/><text x="43.1071%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="43.1746%" y="501" width="0.3175%" height="15" fill="rgb(243,91,43)" fg:x="544" fg:w="4"/><text x="43.4246%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.3333%" y="485" width="0.1587%" height="15" fill="rgb(231,90,52)" fg:x="546" fg:w="2"/><text x="43.5833%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (57 samples, 4.52%)</title><rect x="39.2063%" y="565" width="4.5238%" height="15" fill="rgb(253,192,44)" fg:x="494" fg:w="57"/><text x="39.4563%" y="575.50">serde..</text></g><g><title>serde_json::de::from_trait (57 samples, 4.52%)</title><rect x="39.2063%" y="549" width="4.5238%" height="15" fill="rgb(241,66,31)" fg:x="494" fg:w="57"/><text x="39.4563%" y="559.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (57 samples, 4.52%)</title><rect x="39.2063%" y="533" width="4.5238%" height="15" fill="rgb(235,81,37)" fg:x="494" fg:w="57"/><text x="39.4563%" y="543.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (56 samples, 4.44%)</title><rect x="39.2857%" y="517" width="4.4444%" height="15" fill="rgb(223,221,9)" fg:x="495" fg:w="56"/><text x="39.5357%" y="527.50">&lt;serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="43.4921%" y="501" width="0.2381%" height="15" fill="rgb(242,180,7)" fg:x="548" fg:w="3"/><text x="43.7421%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.6508%" y="485" width="0.0794%" height="15" fill="rgb(243,78,19)" fg:x="550" fg:w="1"/><text x="43.9008%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.6508%" y="469" width="0.0794%" height="15" fill="rgb(233,23,17)" fg:x="550" fg:w="1"/><text x="43.9008%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="43.7302%" y="549" width="0.5556%" height="15" fill="rgb(252,122,45)" fg:x="551" fg:w="7"/><text x="43.9802%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="43.8095%" y="533" width="0.4762%" height="15" fill="rgb(247,108,20)" fg:x="552" fg:w="6"/><text x="44.0595%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="43.8889%" y="517" width="0.3968%" height="15" fill="rgb(235,84,21)" fg:x="553" fg:w="5"/><text x="44.1389%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="43.9683%" y="501" width="0.3175%" height="15" fill="rgb(247,129,10)" fg:x="554" fg:w="4"/><text x="44.2183%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.2063%" y="485" width="0.0794%" height="15" fill="rgb(208,173,14)" fg:x="557" fg:w="1"/><text x="44.4563%" y="495.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (190 samples, 15.08%)</title><rect x="29.2857%" y="613" width="15.0794%" height="15" fill="rgb(236,31,38)" fg:x="369" fg:w="190"/><text x="29.5357%" y="623.50">engine::internal::Entit..</text></g><g><title>engine::session::Session::check_for_changes (187 samples, 14.84%)</title><rect x="29.5238%" y="597" width="14.8413%" height="15" fill="rgb(232,65,17)" fg:x="372" fg:w="187"/><text x="29.7738%" y="607.50">engine::session::Sessio..</text></g><g><title>kernel::compare::any_entity_changes (130 samples, 10.32%)</title><rect x="34.0476%" y="581" width="10.3175%" height="15" fill="rgb(224,45,49)" fg:x="429" fg:w="130"/><text x="34.2976%" y="591.50">kernel::compare..</text></g><g><title>treediff::diff::diff (8 samples, 0.63%)</title><rect x="43.7302%" y="565" width="0.6349%" height="15" fill="rgb(225,2,53)" fg:x="551" fg:w="8"/><text x="43.9802%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="44.2857%" y="549" width="0.0794%" height="15" fill="rgb(248,210,53)" fg:x="558" fg:w="1"/><text x="44.5357%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.2857%" y="533" width="0.0794%" height="15" fill="rgb(211,1,30)" fg:x="558" fg:w="1"/><text x="44.5357%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2857%" y="517" width="0.0794%" height="15" fill="rgb(224,96,15)" fg:x="558" fg:w="1"/><text x="44.5357%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.3651%" y="549" width="0.1587%" height="15" fill="rgb(252,45,11)" fg:x="559" fg:w="2"/><text x="44.6151%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.24%)</title><rect x="44.3651%" y="581" width="0.2381%" height="15" fill="rgb(220,125,38)" fg:x="559" fg:w="3"/><text x="44.6151%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="44.3651%" y="565" width="0.2381%" height="15" fill="rgb(243,161,33)" fg:x="559" fg:w="3"/><text x="44.6151%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.5238%" y="549" width="0.0794%" height="15" fill="rgb(248,197,34)" fg:x="561" fg:w="1"/><text x="44.7738%" y="559.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="44.6032%" y="549" width="0.0794%" height="15" fill="rgb(228,165,23)" fg:x="562" fg:w="1"/><text x="44.8532%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="44.6032%" y="533" width="0.0794%" height="15" fill="rgb(236,94,38)" fg:x="562" fg:w="1"/><text x="44.8532%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="44.6032%" y="517" width="0.0794%" height="15" fill="rgb(220,13,23)" fg:x="562" fg:w="1"/><text x="44.8532%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="44.6032%" y="501" width="0.0794%" height="15" fill="rgb(234,26,39)" fg:x="562" fg:w="1"/><text x="44.8532%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="44.6032%" y="485" width="0.0794%" height="15" fill="rgb(205,117,44)" fg:x="562" fg:w="1"/><text x="44.8532%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="44.6032%" y="469" width="0.0794%" height="15" fill="rgb(250,42,2)" fg:x="562" fg:w="1"/><text x="44.8532%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="44.6032%" y="453" width="0.0794%" height="15" fill="rgb(223,83,14)" fg:x="562" fg:w="1"/><text x="44.8532%" y="463.50"></text></g><g><title>engine::session::Session::world (5 samples, 0.40%)</title><rect x="44.3651%" y="613" width="0.3968%" height="15" fill="rgb(241,147,50)" fg:x="559" fg:w="5"/><text x="44.6151%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="44.3651%" y="597" width="0.3968%" height="15" fill="rgb(218,90,6)" fg:x="559" fg:w="5"/><text x="44.6151%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="44.6032%" y="581" width="0.1587%" height="15" fill="rgb(210,191,5)" fg:x="562" fg:w="2"/><text x="44.8532%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="44.6032%" y="565" width="0.1587%" height="15" fill="rgb(225,139,19)" fg:x="562" fg:w="2"/><text x="44.8532%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="44.6825%" y="549" width="0.0794%" height="15" fill="rgb(210,1,33)" fg:x="563" fg:w="1"/><text x="44.9325%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.6825%" y="533" width="0.0794%" height="15" fill="rgb(213,50,3)" fg:x="563" fg:w="1"/><text x="44.9325%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.6825%" y="517" width="0.0794%" height="15" fill="rgb(234,227,4)" fg:x="563" fg:w="1"/><text x="44.9325%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="44.6825%" y="501" width="0.0794%" height="15" fill="rgb(246,63,5)" fg:x="563" fg:w="1"/><text x="44.9325%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="44.6825%" y="485" width="0.0794%" height="15" fill="rgb(245,136,27)" fg:x="563" fg:w="1"/><text x="44.9325%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.6825%" y="469" width="0.0794%" height="15" fill="rgb(247,199,27)" fg:x="563" fg:w="1"/><text x="44.9325%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.6825%" y="453" width="0.0794%" height="15" fill="rgb(252,158,49)" fg:x="563" fg:w="1"/><text x="44.9325%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="44.6825%" y="437" width="0.0794%" height="15" fill="rgb(254,73,1)" fg:x="563" fg:w="1"/><text x="44.9325%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="44.6825%" y="421" width="0.0794%" height="15" fill="rgb(248,93,19)" fg:x="563" fg:w="1"/><text x="44.9325%" y="431.50"></text></g><g><title>engine::session::Session::close (207 samples, 16.43%)</title><rect x="28.4127%" y="645" width="16.4286%" height="15" fill="rgb(206,67,5)" fg:x="358" fg:w="207"/><text x="28.6627%" y="655.50">engine::session::Session:..</text></g><g><title>engine::session::Session::save_entity_changes (206 samples, 16.35%)</title><rect x="28.4921%" y="629" width="16.3492%" height="15" fill="rgb(209,210,4)" fg:x="359" fg:w="206"/><text x="28.7421%" y="639.50">engine::session::Session:..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="44.7619%" y="613" width="0.0794%" height="15" fill="rgb(214,185,36)" fg:x="564" fg:w="1"/><text x="45.0119%" y="623.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="44.7619%" y="597" width="0.0794%" height="15" fill="rgb(233,191,26)" fg:x="564" fg:w="1"/><text x="45.0119%" y="607.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="44.7619%" y="581" width="0.0794%" height="15" fill="rgb(248,94,17)" fg:x="564" fg:w="1"/><text x="45.0119%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="44.7619%" y="565" width="0.0794%" height="15" fill="rgb(250,64,4)" fg:x="564" fg:w="1"/><text x="45.0119%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="44.7619%" y="549" width="0.0794%" height="15" fill="rgb(218,41,53)" fg:x="564" fg:w="1"/><text x="45.0119%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0000%" y="597" width="0.0794%" height="15" fill="rgb(251,176,28)" fg:x="567" fg:w="1"/><text x="45.2500%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (3 samples, 0.24%)</title><rect x="44.9206%" y="613" width="0.2381%" height="15" fill="rgb(247,22,9)" fg:x="566" fg:w="3"/><text x="45.1706%" y="623.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="45.0794%" y="597" width="0.0794%" height="15" fill="rgb(218,201,14)" fg:x="568" fg:w="1"/><text x="45.3294%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0794%" y="581" width="0.0794%" height="15" fill="rgb(218,94,10)" fg:x="568" fg:w="1"/><text x="45.3294%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0794%" y="565" width="0.0794%" height="15" fill="rgb(222,183,52)" fg:x="568" fg:w="1"/><text x="45.3294%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0794%" y="549" width="0.0794%" height="15" fill="rgb(242,140,25)" fg:x="568" fg:w="1"/><text x="45.3294%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.0794%" y="533" width="0.0794%" height="15" fill="rgb(235,197,38)" fg:x="568" fg:w="1"/><text x="45.3294%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.0794%" y="517" width="0.0794%" height="15" fill="rgb(237,136,15)" fg:x="568" fg:w="1"/><text x="45.3294%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.0794%" y="501" width="0.0794%" height="15" fill="rgb(223,44,49)" fg:x="568" fg:w="1"/><text x="45.3294%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.0794%" y="485" width="0.0794%" height="15" fill="rgb(227,71,15)" fg:x="568" fg:w="1"/><text x="45.3294%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.0794%" y="469" width="0.0794%" height="15" fill="rgb(225,153,20)" fg:x="568" fg:w="1"/><text x="45.3294%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="45.1587%" y="501" width="0.1587%" height="15" fill="rgb(210,190,26)" fg:x="569" fg:w="2"/><text x="45.4087%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="45.1587%" y="485" width="0.1587%" height="15" fill="rgb(223,147,5)" fg:x="569" fg:w="2"/><text x="45.4087%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.2381%" y="469" width="0.0794%" height="15" fill="rgb(207,14,23)" fg:x="570" fg:w="1"/><text x="45.4881%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.2381%" y="453" width="0.0794%" height="15" fill="rgb(211,195,53)" fg:x="570" fg:w="1"/><text x="45.4881%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.2381%" y="437" width="0.0794%" height="15" fill="rgb(237,75,46)" fg:x="570" fg:w="1"/><text x="45.4881%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="45.2381%" y="421" width="0.0794%" height="15" fill="rgb(254,55,14)" fg:x="570" fg:w="1"/><text x="45.4881%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="45.2381%" y="405" width="0.0794%" height="15" fill="rgb(230,185,30)" fg:x="570" fg:w="1"/><text x="45.4881%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="45.2381%" y="389" width="0.0794%" height="15" fill="rgb(220,14,11)" fg:x="570" fg:w="1"/><text x="45.4881%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="45.2381%" y="373" width="0.0794%" height="15" fill="rgb(215,169,44)" fg:x="570" fg:w="1"/><text x="45.4881%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.2381%" y="357" width="0.0794%" height="15" fill="rgb(253,203,20)" fg:x="570" fg:w="1"/><text x="45.4881%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="45.2381%" y="341" width="0.0794%" height="15" fill="rgb(229,225,17)" fg:x="570" fg:w="1"/><text x="45.4881%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.2381%" y="325" width="0.0794%" height="15" fill="rgb(236,76,26)" fg:x="570" fg:w="1"/><text x="45.4881%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="45.2381%" y="309" width="0.0794%" height="15" fill="rgb(234,15,30)" fg:x="570" fg:w="1"/><text x="45.4881%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.2381%" y="293" width="0.0794%" height="15" fill="rgb(211,113,48)" fg:x="570" fg:w="1"/><text x="45.4881%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="45.2381%" y="277" width="0.0794%" height="15" fill="rgb(221,31,36)" fg:x="570" fg:w="1"/><text x="45.4881%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="45.2381%" y="261" width="0.0794%" height="15" fill="rgb(215,118,52)" fg:x="570" fg:w="1"/><text x="45.4881%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="45.2381%" y="245" width="0.0794%" height="15" fill="rgb(241,151,27)" fg:x="570" fg:w="1"/><text x="45.4881%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="45.1587%" y="613" width="0.2381%" height="15" fill="rgb(253,51,3)" fg:x="569" fg:w="3"/><text x="45.4087%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="45.1587%" y="597" width="0.2381%" height="15" fill="rgb(216,201,24)" fg:x="569" fg:w="3"/><text x="45.4087%" y="607.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="45.1587%" y="581" width="0.2381%" height="15" fill="rgb(231,107,4)" fg:x="569" fg:w="3"/><text x="45.4087%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="45.1587%" y="565" width="0.2381%" height="15" fill="rgb(243,97,54)" fg:x="569" fg:w="3"/><text x="45.4087%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="45.1587%" y="549" width="0.2381%" height="15" fill="rgb(221,32,51)" fg:x="569" fg:w="3"/><text x="45.4087%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="45.1587%" y="533" width="0.2381%" height="15" fill="rgb(218,171,35)" fg:x="569" fg:w="3"/><text x="45.4087%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.24%)</title><rect x="45.1587%" y="517" width="0.2381%" height="15" fill="rgb(214,20,53)" fg:x="569" fg:w="3"/><text x="45.4087%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.3175%" y="501" width="0.0794%" height="15" fill="rgb(239,9,52)" fg:x="571" fg:w="1"/><text x="45.5675%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.3175%" y="485" width="0.0794%" height="15" fill="rgb(215,114,45)" fg:x="571" fg:w="1"/><text x="45.5675%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="45.3175%" y="469" width="0.0794%" height="15" fill="rgb(208,118,9)" fg:x="571" fg:w="1"/><text x="45.5675%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="45.3175%" y="453" width="0.0794%" height="15" fill="rgb(235,7,39)" fg:x="571" fg:w="1"/><text x="45.5675%" y="463.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="45.3175%" y="437" width="0.0794%" height="15" fill="rgb(243,225,15)" fg:x="571" fg:w="1"/><text x="45.5675%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="45.3175%" y="421" width="0.0794%" height="15" fill="rgb(225,216,18)" fg:x="571" fg:w="1"/><text x="45.5675%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.3968%" y="565" width="0.0794%" height="15" fill="rgb(233,36,38)" fg:x="572" fg:w="1"/><text x="45.6468%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.6349%" y="405" width="0.0794%" height="15" fill="rgb(239,88,23)" fg:x="575" fg:w="1"/><text x="45.8849%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.6349%" y="389" width="0.0794%" height="15" fill="rgb(219,181,35)" fg:x="575" fg:w="1"/><text x="45.8849%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="45.6349%" y="437" width="0.1587%" height="15" fill="rgb(215,18,46)" fg:x="575" fg:w="2"/><text x="45.8849%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.6349%" y="421" width="0.1587%" height="15" fill="rgb(241,38,11)" fg:x="575" fg:w="2"/><text x="45.8849%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="45.7143%" y="405" width="0.0794%" height="15" fill="rgb(248,169,45)" fg:x="576" fg:w="1"/><text x="45.9643%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.7143%" y="389" width="0.0794%" height="15" fill="rgb(239,50,49)" fg:x="576" fg:w="1"/><text x="45.9643%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.7143%" y="373" width="0.0794%" height="15" fill="rgb(231,96,31)" fg:x="576" fg:w="1"/><text x="45.9643%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="45.5556%" y="485" width="0.3175%" height="15" fill="rgb(224,193,37)" fg:x="574" fg:w="4"/><text x="45.8056%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.5556%" y="469" width="0.3175%" height="15" fill="rgb(227,153,50)" fg:x="574" fg:w="4"/><text x="45.8056%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="45.6349%" y="453" width="0.2381%" height="15" fill="rgb(249,228,3)" fg:x="575" fg:w="3"/><text x="45.8849%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.7937%" y="437" width="0.0794%" height="15" fill="rgb(219,164,43)" fg:x="577" fg:w="1"/><text x="46.0437%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.7937%" y="421" width="0.0794%" height="15" fill="rgb(216,45,41)" fg:x="577" fg:w="1"/><text x="46.0437%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.8730%" y="453" width="0.0794%" height="15" fill="rgb(210,226,51)" fg:x="578" fg:w="1"/><text x="46.1230%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.63%)</title><rect x="45.4762%" y="549" width="0.6349%" height="15" fill="rgb(209,117,49)" fg:x="573" fg:w="8"/><text x="45.7262%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.63%)</title><rect x="45.4762%" y="533" width="0.6349%" height="15" fill="rgb(206,196,24)" fg:x="573" fg:w="8"/><text x="45.7262%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="45.4762%" y="517" width="0.6349%" height="15" fill="rgb(253,218,3)" fg:x="573" fg:w="8"/><text x="45.7262%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="45.4762%" y="501" width="0.6349%" height="15" fill="rgb(252,166,2)" fg:x="573" fg:w="8"/><text x="45.7262%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="45.8730%" y="485" width="0.2381%" height="15" fill="rgb(236,218,26)" fg:x="578" fg:w="3"/><text x="46.1230%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.8730%" y="469" width="0.2381%" height="15" fill="rgb(254,84,19)" fg:x="578" fg:w="3"/><text x="46.1230%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="45.9524%" y="453" width="0.1587%" height="15" fill="rgb(219,137,29)" fg:x="579" fg:w="2"/><text x="46.2024%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9524%" y="437" width="0.1587%" height="15" fill="rgb(227,47,52)" fg:x="579" fg:w="2"/><text x="46.2024%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.9524%" y="421" width="0.1587%" height="15" fill="rgb(229,167,24)" fg:x="579" fg:w="2"/><text x="46.2024%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9524%" y="405" width="0.1587%" height="15" fill="rgb(233,164,1)" fg:x="579" fg:w="2"/><text x="46.2024%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.0317%" y="389" width="0.0794%" height="15" fill="rgb(218,88,48)" fg:x="580" fg:w="1"/><text x="46.2817%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.0317%" y="373" width="0.0794%" height="15" fill="rgb(226,214,24)" fg:x="580" fg:w="1"/><text x="46.2817%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="46.0317%" y="357" width="0.0794%" height="15" fill="rgb(233,29,12)" fg:x="580" fg:w="1"/><text x="46.2817%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.2698%" y="469" width="0.0794%" height="15" fill="rgb(219,120,34)" fg:x="583" fg:w="1"/><text x="46.5198%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.2698%" y="453" width="0.0794%" height="15" fill="rgb(226,78,44)" fg:x="583" fg:w="1"/><text x="46.5198%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3492%" y="469" width="0.0794%" height="15" fill="rgb(240,15,48)" fg:x="584" fg:w="1"/><text x="46.5992%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3492%" y="453" width="0.0794%" height="15" fill="rgb(253,176,7)" fg:x="584" fg:w="1"/><text x="46.5992%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.3492%" y="437" width="0.0794%" height="15" fill="rgb(206,166,28)" fg:x="584" fg:w="1"/><text x="46.5992%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.4286%" y="405" width="0.0794%" height="15" fill="rgb(241,53,51)" fg:x="585" fg:w="1"/><text x="46.6786%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.5079%" y="405" width="0.0794%" height="15" fill="rgb(249,112,30)" fg:x="586" fg:w="1"/><text x="46.7579%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.5079%" y="389" width="0.0794%" height="15" fill="rgb(217,85,30)" fg:x="586" fg:w="1"/><text x="46.7579%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.5873%" y="389" width="0.0794%" height="15" fill="rgb(233,49,7)" fg:x="587" fg:w="1"/><text x="46.8373%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="46.4286%" y="421" width="0.4762%" height="15" fill="rgb(234,109,9)" fg:x="585" fg:w="6"/><text x="46.6786%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="46.5873%" y="405" width="0.3175%" height="15" fill="rgb(253,95,22)" fg:x="587" fg:w="4"/><text x="46.8373%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="46.6667%" y="389" width="0.2381%" height="15" fill="rgb(233,176,25)" fg:x="588" fg:w="3"/><text x="46.9167%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.7460%" y="373" width="0.1587%" height="15" fill="rgb(236,33,39)" fg:x="589" fg:w="2"/><text x="46.9960%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.7460%" y="357" width="0.1587%" height="15" fill="rgb(223,226,42)" fg:x="589" fg:w="2"/><text x="46.9960%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.7460%" y="341" width="0.1587%" height="15" fill="rgb(216,99,33)" fg:x="589" fg:w="2"/><text x="46.9960%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (20 samples, 1.59%)</title><rect x="45.3968%" y="581" width="1.5873%" height="15" fill="rgb(235,84,23)" fg:x="572" fg:w="20"/><text x="45.6468%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (19 samples, 1.51%)</title><rect x="45.4762%" y="565" width="1.5079%" height="15" fill="rgb(232,2,27)" fg:x="573" fg:w="19"/><text x="45.7262%" y="575.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.87%)</title><rect x="46.1111%" y="549" width="0.8730%" height="15" fill="rgb(241,23,22)" fg:x="581" fg:w="11"/><text x="46.3611%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.87%)</title><rect x="46.1111%" y="533" width="0.8730%" height="15" fill="rgb(211,73,27)" fg:x="581" fg:w="11"/><text x="46.3611%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="46.1905%" y="517" width="0.7937%" height="15" fill="rgb(235,109,49)" fg:x="582" fg:w="10"/><text x="46.4405%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.79%)</title><rect x="46.1905%" y="501" width="0.7937%" height="15" fill="rgb(230,99,29)" fg:x="582" fg:w="10"/><text x="46.4405%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="46.1905%" y="485" width="0.7937%" height="15" fill="rgb(245,199,7)" fg:x="582" fg:w="10"/><text x="46.4405%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="46.4286%" y="469" width="0.5556%" height="15" fill="rgb(217,179,10)" fg:x="585" fg:w="7"/><text x="46.6786%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="46.4286%" y="453" width="0.5556%" height="15" fill="rgb(254,99,47)" fg:x="585" fg:w="7"/><text x="46.6786%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="46.4286%" y="437" width="0.5556%" height="15" fill="rgb(251,121,7)" fg:x="585" fg:w="7"/><text x="46.6786%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.9048%" y="421" width="0.0794%" height="15" fill="rgb(250,177,26)" fg:x="591" fg:w="1"/><text x="47.1548%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.9048%" y="405" width="0.0794%" height="15" fill="rgb(232,88,15)" fg:x="591" fg:w="1"/><text x="47.1548%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9048%" y="389" width="0.0794%" height="15" fill="rgb(251,54,54)" fg:x="591" fg:w="1"/><text x="47.1548%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9048%" y="373" width="0.0794%" height="15" fill="rgb(208,177,15)" fg:x="591" fg:w="1"/><text x="47.1548%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9048%" y="357" width="0.0794%" height="15" fill="rgb(205,97,32)" fg:x="591" fg:w="1"/><text x="47.1548%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (21 samples, 1.67%)</title><rect x="45.3968%" y="597" width="1.6667%" height="15" fill="rgb(217,192,13)" fg:x="572" fg:w="21"/><text x="45.6468%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="46.9841%" y="581" width="0.0794%" height="15" fill="rgb(215,163,41)" fg:x="592" fg:w="1"/><text x="47.2341%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="46.9841%" y="565" width="0.0794%" height="15" fill="rgb(246,83,29)" fg:x="592" fg:w="1"/><text x="47.2341%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.9841%" y="549" width="0.0794%" height="15" fill="rgb(219,2,45)" fg:x="592" fg:w="1"/><text x="47.2341%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.9841%" y="533" width="0.0794%" height="15" fill="rgb(242,215,33)" fg:x="592" fg:w="1"/><text x="47.2341%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.9841%" y="517" width="0.0794%" height="15" fill="rgb(217,1,6)" fg:x="592" fg:w="1"/><text x="47.2341%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="46.9841%" y="501" width="0.0794%" height="15" fill="rgb(207,85,52)" fg:x="592" fg:w="1"/><text x="47.2341%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="46.9841%" y="485" width="0.0794%" height="15" fill="rgb(231,171,19)" fg:x="592" fg:w="1"/><text x="47.2341%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.9841%" y="469" width="0.0794%" height="15" fill="rgb(207,128,4)" fg:x="592" fg:w="1"/><text x="47.2341%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.9841%" y="453" width="0.0794%" height="15" fill="rgb(219,208,4)" fg:x="592" fg:w="1"/><text x="47.2341%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.9841%" y="437" width="0.0794%" height="15" fill="rgb(235,161,42)" fg:x="592" fg:w="1"/><text x="47.2341%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="46.9841%" y="421" width="0.0794%" height="15" fill="rgb(247,218,18)" fg:x="592" fg:w="1"/><text x="47.2341%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="46.9841%" y="405" width="0.0794%" height="15" fill="rgb(232,114,51)" fg:x="592" fg:w="1"/><text x="47.2341%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="46.9841%" y="389" width="0.0794%" height="15" fill="rgb(222,95,3)" fg:x="592" fg:w="1"/><text x="47.2341%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="46.9841%" y="373" width="0.0794%" height="15" fill="rgb(240,65,29)" fg:x="592" fg:w="1"/><text x="47.2341%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.9841%" y="357" width="0.0794%" height="15" fill="rgb(249,209,20)" fg:x="592" fg:w="1"/><text x="47.2341%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="46.9841%" y="341" width="0.0794%" height="15" fill="rgb(241,48,37)" fg:x="592" fg:w="1"/><text x="47.2341%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.9841%" y="325" width="0.0794%" height="15" fill="rgb(230,140,42)" fg:x="592" fg:w="1"/><text x="47.2341%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="46.9841%" y="309" width="0.0794%" height="15" fill="rgb(230,176,45)" fg:x="592" fg:w="1"/><text x="47.2341%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.9841%" y="293" width="0.0794%" height="15" fill="rgb(245,112,21)" fg:x="592" fg:w="1"/><text x="47.2341%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9841%" y="277" width="0.0794%" height="15" fill="rgb(207,183,35)" fg:x="592" fg:w="1"/><text x="47.2341%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="47.0635%" y="597" width="0.0794%" height="15" fill="rgb(227,44,33)" fg:x="593" fg:w="1"/><text x="47.3135%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="47.0635%" y="581" width="0.0794%" height="15" fill="rgb(246,120,21)" fg:x="593" fg:w="1"/><text x="47.3135%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.0635%" y="565" width="0.0794%" height="15" fill="rgb(235,57,52)" fg:x="593" fg:w="1"/><text x="47.3135%" y="575.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="47.4603%" y="565" width="0.0794%" height="15" fill="rgb(238,84,10)" fg:x="598" fg:w="1"/><text x="47.7103%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7778%" y="501" width="0.0794%" height="15" fill="rgb(251,200,32)" fg:x="602" fg:w="1"/><text x="48.0278%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7778%" y="485" width="0.0794%" height="15" fill="rgb(247,159,13)" fg:x="602" fg:w="1"/><text x="48.0278%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7778%" y="469" width="0.0794%" height="15" fill="rgb(238,64,4)" fg:x="602" fg:w="1"/><text x="48.0278%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.7778%" y="453" width="0.0794%" height="15" fill="rgb(221,131,51)" fg:x="602" fg:w="1"/><text x="48.0278%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.7778%" y="437" width="0.0794%" height="15" fill="rgb(242,5,29)" fg:x="602" fg:w="1"/><text x="48.0278%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.7778%" y="421" width="0.0794%" height="15" fill="rgb(214,130,32)" fg:x="602" fg:w="1"/><text x="48.0278%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="47.7778%" y="405" width="0.0794%" height="15" fill="rgb(244,210,16)" fg:x="602" fg:w="1"/><text x="48.0278%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="47.7778%" y="389" width="0.0794%" height="15" fill="rgb(234,48,26)" fg:x="602" fg:w="1"/><text x="48.0278%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8571%" y="421" width="0.0794%" height="15" fill="rgb(231,82,38)" fg:x="603" fg:w="1"/><text x="48.1071%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="47.9365%" y="277" width="0.0794%" height="15" fill="rgb(254,128,41)" fg:x="604" fg:w="1"/><text x="48.1865%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.9365%" y="261" width="0.0794%" height="15" fill="rgb(212,73,49)" fg:x="604" fg:w="1"/><text x="48.1865%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="48.0159%" y="277" width="0.0794%" height="15" fill="rgb(205,62,54)" fg:x="605" fg:w="1"/><text x="48.2659%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.0159%" y="261" width="0.0794%" height="15" fill="rgb(228,0,8)" fg:x="605" fg:w="1"/><text x="48.2659%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="47.9365%" y="341" width="0.2381%" height="15" fill="rgb(251,28,17)" fg:x="604" fg:w="3"/><text x="48.1865%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="47.9365%" y="325" width="0.2381%" height="15" fill="rgb(238,105,27)" fg:x="604" fg:w="3"/><text x="48.1865%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="47.9365%" y="309" width="0.2381%" height="15" fill="rgb(237,216,33)" fg:x="604" fg:w="3"/><text x="48.1865%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="47.9365%" y="293" width="0.2381%" height="15" fill="rgb(229,228,25)" fg:x="604" fg:w="3"/><text x="48.1865%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0952%" y="277" width="0.0794%" height="15" fill="rgb(233,75,23)" fg:x="606" fg:w="1"/><text x="48.3452%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0952%" y="261" width="0.0794%" height="15" fill="rgb(231,207,16)" fg:x="606" fg:w="1"/><text x="48.3452%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="47.9365%" y="373" width="0.3175%" height="15" fill="rgb(231,191,45)" fg:x="604" fg:w="4"/><text x="48.1865%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="47.9365%" y="357" width="0.3175%" height="15" fill="rgb(224,133,17)" fg:x="604" fg:w="4"/><text x="48.1865%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.1746%" y="341" width="0.0794%" height="15" fill="rgb(209,178,27)" fg:x="607" fg:w="1"/><text x="48.4246%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="47.9365%" y="421" width="0.3968%" height="15" fill="rgb(218,37,11)" fg:x="604" fg:w="5"/><text x="48.1865%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="47.9365%" y="405" width="0.3968%" height="15" fill="rgb(251,226,25)" fg:x="604" fg:w="5"/><text x="48.1865%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="47.9365%" y="389" width="0.3968%" height="15" fill="rgb(209,222,27)" fg:x="604" fg:w="5"/><text x="48.1865%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.2540%" y="373" width="0.0794%" height="15" fill="rgb(238,22,21)" fg:x="608" fg:w="1"/><text x="48.5040%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.2540%" y="357" width="0.0794%" height="15" fill="rgb(233,161,25)" fg:x="608" fg:w="1"/><text x="48.5040%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="47.8571%" y="485" width="0.5556%" height="15" fill="rgb(226,122,53)" fg:x="603" fg:w="7"/><text x="48.1071%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="47.8571%" y="469" width="0.5556%" height="15" fill="rgb(220,123,17)" fg:x="603" fg:w="7"/><text x="48.1071%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="47.8571%" y="453" width="0.5556%" height="15" fill="rgb(230,224,35)" fg:x="603" fg:w="7"/><text x="48.1071%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="47.8571%" y="437" width="0.5556%" height="15" fill="rgb(246,83,8)" fg:x="603" fg:w="7"/><text x="48.1071%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.3333%" y="421" width="0.0794%" height="15" fill="rgb(230,214,17)" fg:x="609" fg:w="1"/><text x="48.5833%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.3333%" y="405" width="0.0794%" height="15" fill="rgb(222,97,18)" fg:x="609" fg:w="1"/><text x="48.5833%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.4127%" y="437" width="0.0794%" height="15" fill="rgb(206,79,1)" fg:x="610" fg:w="1"/><text x="48.6627%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.5714%" y="405" width="0.1587%" height="15" fill="rgb(214,121,34)" fg:x="612" fg:w="2"/><text x="48.8214%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6508%" y="389" width="0.0794%" height="15" fill="rgb(249,199,46)" fg:x="613" fg:w="1"/><text x="48.9008%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.7302%" y="373" width="0.1587%" height="15" fill="rgb(214,222,46)" fg:x="614" fg:w="2"/><text x="48.9802%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.7302%" y="357" width="0.1587%" height="15" fill="rgb(248,168,30)" fg:x="614" fg:w="2"/><text x="48.9802%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.8889%" y="373" width="0.0794%" height="15" fill="rgb(226,14,28)" fg:x="616" fg:w="1"/><text x="49.1389%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (18 samples, 1.43%)</title><rect x="47.6190%" y="533" width="1.4286%" height="15" fill="rgb(253,123,1)" fg:x="600" fg:w="18"/><text x="47.8690%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.27%)</title><rect x="47.7778%" y="517" width="1.2698%" height="15" fill="rgb(225,24,42)" fg:x="602" fg:w="16"/><text x="48.0278%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (15 samples, 1.19%)</title><rect x="47.8571%" y="501" width="1.1905%" height="15" fill="rgb(216,161,37)" fg:x="603" fg:w="15"/><text x="48.1071%" y="511.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.63%)</title><rect x="48.4127%" y="485" width="0.6349%" height="15" fill="rgb(251,164,26)" fg:x="610" fg:w="8"/><text x="48.6627%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="48.4127%" y="469" width="0.6349%" height="15" fill="rgb(219,177,3)" fg:x="610" fg:w="8"/><text x="48.6627%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="48.4127%" y="453" width="0.6349%" height="15" fill="rgb(222,65,0)" fg:x="610" fg:w="8"/><text x="48.6627%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="48.4921%" y="437" width="0.5556%" height="15" fill="rgb(223,69,54)" fg:x="611" fg:w="7"/><text x="48.7421%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="48.5714%" y="421" width="0.4762%" height="15" fill="rgb(235,30,27)" fg:x="612" fg:w="6"/><text x="48.8214%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="48.7302%" y="405" width="0.3175%" height="15" fill="rgb(220,183,50)" fg:x="614" fg:w="4"/><text x="48.9802%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="48.7302%" y="389" width="0.3175%" height="15" fill="rgb(248,198,15)" fg:x="614" fg:w="4"/><text x="48.9802%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.9683%" y="373" width="0.0794%" height="15" fill="rgb(222,211,4)" fg:x="617" fg:w="1"/><text x="49.2183%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.9683%" y="357" width="0.0794%" height="15" fill="rgb(214,102,34)" fg:x="617" fg:w="1"/><text x="49.2183%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.9683%" y="341" width="0.0794%" height="15" fill="rgb(245,92,5)" fg:x="617" fg:w="1"/><text x="49.2183%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.9683%" y="325" width="0.0794%" height="15" fill="rgb(252,72,51)" fg:x="617" fg:w="1"/><text x="49.2183%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.9683%" y="309" width="0.0794%" height="15" fill="rgb(252,208,19)" fg:x="617" fg:w="1"/><text x="49.2183%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="49.0476%" y="533" width="0.0794%" height="15" fill="rgb(211,69,7)" fg:x="618" fg:w="1"/><text x="49.2976%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0476%" y="517" width="0.0794%" height="15" fill="rgb(211,27,16)" fg:x="618" fg:w="1"/><text x="49.2976%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (23 samples, 1.83%)</title><rect x="47.3810%" y="581" width="1.8254%" height="15" fill="rgb(219,216,14)" fg:x="597" fg:w="23"/><text x="47.6310%" y="591.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (21 samples, 1.67%)</title><rect x="47.5397%" y="565" width="1.6667%" height="15" fill="rgb(219,71,8)" fg:x="599" fg:w="21"/><text x="47.7897%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (20 samples, 1.59%)</title><rect x="47.6190%" y="549" width="1.5873%" height="15" fill="rgb(223,170,53)" fg:x="600" fg:w="20"/><text x="47.8690%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.1270%" y="533" width="0.0794%" height="15" fill="rgb(246,21,26)" fg:x="619" fg:w="1"/><text x="49.3770%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.1270%" y="517" width="0.0794%" height="15" fill="rgb(248,20,46)" fg:x="619" fg:w="1"/><text x="49.3770%" y="527.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (27 samples, 2.14%)</title><rect x="47.1429%" y="597" width="2.1429%" height="15" fill="rgb(252,94,11)" fg:x="594" fg:w="27"/><text x="47.3929%" y="607.50">e..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="49.2063%" y="581" width="0.0794%" height="15" fill="rgb(236,163,8)" fg:x="620" fg:w="1"/><text x="49.4563%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="49.2063%" y="565" width="0.0794%" height="15" fill="rgb(217,221,45)" fg:x="620" fg:w="1"/><text x="49.4563%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="49.2063%" y="549" width="0.0794%" height="15" fill="rgb(238,38,17)" fg:x="620" fg:w="1"/><text x="49.4563%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="49.2063%" y="533" width="0.0794%" height="15" fill="rgb(242,210,23)" fg:x="620" fg:w="1"/><text x="49.4563%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.2063%" y="517" width="0.0794%" height="15" fill="rgb(250,86,53)" fg:x="620" fg:w="1"/><text x="49.4563%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.2063%" y="501" width="0.0794%" height="15" fill="rgb(223,168,25)" fg:x="620" fg:w="1"/><text x="49.4563%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.2063%" y="485" width="0.0794%" height="15" fill="rgb(251,189,4)" fg:x="620" fg:w="1"/><text x="49.4563%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.2063%" y="469" width="0.0794%" height="15" fill="rgb(245,19,28)" fg:x="620" fg:w="1"/><text x="49.4563%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.2063%" y="453" width="0.0794%" height="15" fill="rgb(207,10,34)" fg:x="620" fg:w="1"/><text x="49.4563%" y="463.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="49.2857%" y="597" width="0.0794%" height="15" fill="rgb(235,153,31)" fg:x="621" fg:w="1"/><text x="49.5357%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="49.2857%" y="581" width="0.0794%" height="15" fill="rgb(228,72,37)" fg:x="621" fg:w="1"/><text x="49.5357%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.2857%" y="565" width="0.0794%" height="15" fill="rgb(215,15,16)" fg:x="621" fg:w="1"/><text x="49.5357%" y="575.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (52 samples, 4.13%)</title><rect x="45.3968%" y="613" width="4.1270%" height="15" fill="rgb(250,119,29)" fg:x="572" fg:w="52"/><text x="45.6468%" y="623.50">engi..</text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="49.3651%" y="597" width="0.1587%" height="15" fill="rgb(214,59,1)" fg:x="622" fg:w="2"/><text x="49.6151%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="49.4444%" y="581" width="0.0794%" height="15" fill="rgb(223,109,25)" fg:x="623" fg:w="1"/><text x="49.6944%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="49.4444%" y="565" width="0.0794%" height="15" fill="rgb(230,198,22)" fg:x="623" fg:w="1"/><text x="49.6944%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="49.5238%" y="581" width="0.0794%" height="15" fill="rgb(245,184,46)" fg:x="624" fg:w="1"/><text x="49.7738%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="50.0000%" y="517" width="0.2381%" height="15" fill="rgb(253,73,16)" fg:x="630" fg:w="3"/><text x="50.2500%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="50.0794%" y="501" width="0.1587%" height="15" fill="rgb(206,94,45)" fg:x="631" fg:w="2"/><text x="50.3294%" y="511.50"></text></g><g><title>__libc_free (7 samples, 0.56%)</title><rect x="50.2381%" y="517" width="0.5556%" height="15" fill="rgb(236,83,27)" fg:x="633" fg:w="7"/><text x="50.4881%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.27%)</title><rect x="49.8413%" y="533" width="1.2698%" height="15" fill="rgb(220,196,8)" fg:x="628" fg:w="16"/><text x="50.0913%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (4 samples, 0.32%)</title><rect x="50.7937%" y="517" width="0.3175%" height="15" fill="rgb(254,185,14)" fg:x="640" fg:w="4"/><text x="51.0437%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="50.7937%" y="501" width="0.3175%" height="15" fill="rgb(226,50,22)" fg:x="640" fg:w="4"/><text x="51.0437%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.8730%" y="485" width="0.2381%" height="15" fill="rgb(253,147,0)" fg:x="641" fg:w="3"/><text x="51.1230%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.06%)</title><rect x="49.6032%" y="549" width="2.0635%" height="15" fill="rgb(252,46,33)" fg:x="625" fg:w="26"/><text x="49.8532%" y="559.50">&lt;..</text></g><g><title>__libc_free (7 samples, 0.56%)</title><rect x="51.1111%" y="533" width="0.5556%" height="15" fill="rgb(242,22,54)" fg:x="644" fg:w="7"/><text x="51.3611%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynMessage&gt; (30 samples, 2.38%)</title><rect x="49.6032%" y="581" width="2.3810%" height="15" fill="rgb(223,178,32)" fg:x="625" fg:w="30"/><text x="49.8532%" y="591.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.38%)</title><rect x="49.6032%" y="565" width="2.3810%" height="15" fill="rgb(214,106,53)" fg:x="625" fg:w="30"/><text x="49.8532%" y="575.50">&lt;h..</text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="51.6667%" y="549" width="0.3175%" height="15" fill="rgb(232,65,50)" fg:x="651" fg:w="4"/><text x="51.9167%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="52.0635%" y="533" width="0.0794%" height="15" fill="rgb(231,110,28)" fg:x="656" fg:w="1"/><text x="52.3135%" y="543.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="52.1429%" y="533" width="0.3175%" height="15" fill="rgb(216,71,40)" fg:x="657" fg:w="4"/><text x="52.3929%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="52.4603%" y="533" width="0.0794%" height="15" fill="rgb(229,89,53)" fg:x="661" fg:w="1"/><text x="52.7103%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.71%)</title><rect x="52.0635%" y="549" width="0.7143%" height="15" fill="rgb(210,124,14)" fg:x="656" fg:w="9"/><text x="52.3135%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.24%)</title><rect x="52.5397%" y="533" width="0.2381%" height="15" fill="rgb(236,213,6)" fg:x="662" fg:w="3"/><text x="52.7897%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="52.6190%" y="517" width="0.1587%" height="15" fill="rgb(228,41,5)" fg:x="663" fg:w="2"/><text x="52.8690%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="52.6190%" y="501" width="0.1587%" height="15" fill="rgb(221,167,25)" fg:x="663" fg:w="2"/><text x="52.8690%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="52.6190%" y="485" width="0.1587%" height="15" fill="rgb(228,144,37)" fg:x="663" fg:w="2"/><text x="52.8690%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.6984%" y="469" width="0.0794%" height="15" fill="rgb(227,189,38)" fg:x="664" fg:w="1"/><text x="52.9484%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.6984%" y="453" width="0.0794%" height="15" fill="rgb(218,8,2)" fg:x="664" fg:w="1"/><text x="52.9484%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.6984%" y="437" width="0.0794%" height="15" fill="rgb(209,61,28)" fg:x="664" fg:w="1"/><text x="52.9484%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.6984%" y="421" width="0.0794%" height="15" fill="rgb(233,140,39)" fg:x="664" fg:w="1"/><text x="52.9484%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6984%" y="405" width="0.0794%" height="15" fill="rgb(251,66,48)" fg:x="664" fg:w="1"/><text x="52.9484%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="52.7778%" y="549" width="0.0794%" height="15" fill="rgb(210,44,45)" fg:x="665" fg:w="1"/><text x="53.0278%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="52.7778%" y="533" width="0.0794%" height="15" fill="rgb(214,136,46)" fg:x="665" fg:w="1"/><text x="53.0278%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.8571%" y="501" width="0.0794%" height="15" fill="rgb(207,130,50)" fg:x="666" fg:w="1"/><text x="53.1071%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="52.8571%" y="549" width="0.1587%" height="15" fill="rgb(228,102,49)" fg:x="666" fg:w="2"/><text x="53.1071%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="52.8571%" y="533" width="0.1587%" height="15" fill="rgb(253,55,1)" fg:x="666" fg:w="2"/><text x="53.1071%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="52.8571%" y="517" width="0.1587%" height="15" fill="rgb(238,222,9)" fg:x="666" fg:w="2"/><text x="53.1071%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="52.9365%" y="501" width="0.0794%" height="15" fill="rgb(246,99,6)" fg:x="667" fg:w="1"/><text x="53.1865%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9365%" y="485" width="0.0794%" height="15" fill="rgb(219,110,26)" fg:x="667" fg:w="1"/><text x="53.1865%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="53.4127%" y="485" width="0.0794%" height="15" fill="rgb(239,160,33)" fg:x="673" fg:w="1"/><text x="53.6627%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="53.6508%" y="405" width="0.0794%" height="15" fill="rgb(220,202,23)" fg:x="676" fg:w="1"/><text x="53.9008%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.6508%" y="389" width="0.0794%" height="15" fill="rgb(208,80,26)" fg:x="676" fg:w="1"/><text x="53.9008%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.6508%" y="373" width="0.0794%" height="15" fill="rgb(243,85,7)" fg:x="676" fg:w="1"/><text x="53.9008%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.6508%" y="357" width="0.0794%" height="15" fill="rgb(228,77,47)" fg:x="676" fg:w="1"/><text x="53.9008%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.6508%" y="341" width="0.0794%" height="15" fill="rgb(212,226,8)" fg:x="676" fg:w="1"/><text x="53.9008%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.6508%" y="325" width="0.0794%" height="15" fill="rgb(241,120,54)" fg:x="676" fg:w="1"/><text x="53.9008%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.6508%" y="309" width="0.0794%" height="15" fill="rgb(226,80,16)" fg:x="676" fg:w="1"/><text x="53.9008%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.6508%" y="293" width="0.0794%" height="15" fill="rgb(240,76,13)" fg:x="676" fg:w="1"/><text x="53.9008%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.6508%" y="277" width="0.0794%" height="15" fill="rgb(252,74,8)" fg:x="676" fg:w="1"/><text x="53.9008%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.6508%" y="261" width="0.0794%" height="15" fill="rgb(244,155,2)" fg:x="676" fg:w="1"/><text x="53.9008%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.6508%" y="245" width="0.0794%" height="15" fill="rgb(215,81,35)" fg:x="676" fg:w="1"/><text x="53.9008%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.6508%" y="229" width="0.0794%" height="15" fill="rgb(206,55,2)" fg:x="676" fg:w="1"/><text x="53.9008%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6508%" y="213" width="0.0794%" height="15" fill="rgb(231,2,34)" fg:x="676" fg:w="1"/><text x="53.9008%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.8095%" y="277" width="0.0794%" height="15" fill="rgb(242,176,48)" fg:x="678" fg:w="1"/><text x="54.0595%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.8095%" y="261" width="0.0794%" height="15" fill="rgb(249,31,36)" fg:x="678" fg:w="1"/><text x="54.0595%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="53.8095%" y="245" width="0.0794%" height="15" fill="rgb(205,18,17)" fg:x="678" fg:w="1"/><text x="54.0595%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="53.8095%" y="229" width="0.0794%" height="15" fill="rgb(254,130,5)" fg:x="678" fg:w="1"/><text x="54.0595%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="53.8095%" y="213" width="0.0794%" height="15" fill="rgb(229,42,45)" fg:x="678" fg:w="1"/><text x="54.0595%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="53.8095%" y="197" width="0.0794%" height="15" fill="rgb(245,95,25)" fg:x="678" fg:w="1"/><text x="54.0595%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.8095%" y="181" width="0.0794%" height="15" fill="rgb(249,193,38)" fg:x="678" fg:w="1"/><text x="54.0595%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.8095%" y="165" width="0.0794%" height="15" fill="rgb(241,140,43)" fg:x="678" fg:w="1"/><text x="54.0595%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.8095%" y="149" width="0.0794%" height="15" fill="rgb(245,78,48)" fg:x="678" fg:w="1"/><text x="54.0595%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="53.8095%" y="133" width="0.0794%" height="15" fill="rgb(214,92,39)" fg:x="678" fg:w="1"/><text x="54.0595%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.8095%" y="117" width="0.0794%" height="15" fill="rgb(211,189,14)" fg:x="678" fg:w="1"/><text x="54.0595%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="53.8095%" y="101" width="0.0794%" height="15" fill="rgb(218,7,24)" fg:x="678" fg:w="1"/><text x="54.0595%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="53.8095%" y="85" width="0.0794%" height="15" fill="rgb(224,200,49)" fg:x="678" fg:w="1"/><text x="54.0595%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="53.8095%" y="69" width="0.0794%" height="15" fill="rgb(218,210,14)" fg:x="678" fg:w="1"/><text x="54.0595%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="53.8095%" y="53" width="0.0794%" height="15" fill="rgb(234,142,31)" fg:x="678" fg:w="1"/><text x="54.0595%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.48%)</title><rect x="53.5714%" y="453" width="0.4762%" height="15" fill="rgb(227,165,2)" fg:x="675" fg:w="6"/><text x="53.8214%" y="463.50"></text></g><g><title>kernel::model::EntityRef::into_entry (5 samples, 0.40%)</title><rect x="53.6508%" y="437" width="0.3968%" height="15" fill="rgb(232,44,46)" fg:x="676" fg:w="5"/><text x="53.9008%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="53.6508%" y="421" width="0.3968%" height="15" fill="rgb(236,149,47)" fg:x="676" fg:w="5"/><text x="53.9008%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="53.7302%" y="405" width="0.3175%" height="15" fill="rgb(227,45,31)" fg:x="677" fg:w="4"/><text x="53.9802%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="53.7302%" y="389" width="0.3175%" height="15" fill="rgb(240,176,51)" fg:x="677" fg:w="4"/><text x="53.9802%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="53.7302%" y="373" width="0.3175%" height="15" fill="rgb(249,146,41)" fg:x="677" fg:w="4"/><text x="53.9802%" y="383.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="53.7302%" y="357" width="0.3175%" height="15" fill="rgb(213,208,4)" fg:x="677" fg:w="4"/><text x="53.9802%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="53.7302%" y="341" width="0.3175%" height="15" fill="rgb(245,84,36)" fg:x="677" fg:w="4"/><text x="53.9802%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="53.7302%" y="325" width="0.3175%" height="15" fill="rgb(254,84,18)" fg:x="677" fg:w="4"/><text x="53.9802%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="53.7302%" y="309" width="0.3175%" height="15" fill="rgb(225,38,54)" fg:x="677" fg:w="4"/><text x="53.9802%" y="319.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="53.7302%" y="293" width="0.3175%" height="15" fill="rgb(246,50,30)" fg:x="677" fg:w="4"/><text x="53.9802%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="53.8889%" y="277" width="0.1587%" height="15" fill="rgb(246,148,9)" fg:x="679" fg:w="2"/><text x="54.1389%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.8889%" y="261" width="0.1587%" height="15" fill="rgb(223,75,4)" fg:x="679" fg:w="2"/><text x="54.1389%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.8889%" y="245" width="0.1587%" height="15" fill="rgb(239,148,41)" fg:x="679" fg:w="2"/><text x="54.1389%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="53.8889%" y="229" width="0.1587%" height="15" fill="rgb(205,195,3)" fg:x="679" fg:w="2"/><text x="54.1389%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="53.8889%" y="213" width="0.1587%" height="15" fill="rgb(254,161,1)" fg:x="679" fg:w="2"/><text x="54.1389%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="53.8889%" y="197" width="0.1587%" height="15" fill="rgb(211,229,8)" fg:x="679" fg:w="2"/><text x="54.1389%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="53.8889%" y="181" width="0.1587%" height="15" fill="rgb(220,97,9)" fg:x="679" fg:w="2"/><text x="54.1389%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="53.8889%" y="165" width="0.1587%" height="15" fill="rgb(240,218,8)" fg:x="679" fg:w="2"/><text x="54.1389%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="53.8889%" y="149" width="0.1587%" height="15" fill="rgb(250,44,0)" fg:x="679" fg:w="2"/><text x="54.1389%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.9683%" y="133" width="0.0794%" height="15" fill="rgb(236,41,53)" fg:x="680" fg:w="1"/><text x="54.2183%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="53.9683%" y="117" width="0.0794%" height="15" fill="rgb(218,227,13)" fg:x="680" fg:w="1"/><text x="54.2183%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.9683%" y="101" width="0.0794%" height="15" fill="rgb(217,94,32)" fg:x="680" fg:w="1"/><text x="54.2183%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="53.9683%" y="85" width="0.0794%" height="15" fill="rgb(213,217,12)" fg:x="680" fg:w="1"/><text x="54.2183%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="53.9683%" y="69" width="0.0794%" height="15" fill="rgb(229,13,46)" fg:x="680" fg:w="1"/><text x="54.2183%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="53.9683%" y="53" width="0.0794%" height="15" fill="rgb(243,139,5)" fg:x="680" fg:w="1"/><text x="54.2183%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="53.9683%" y="37" width="0.0794%" height="15" fill="rgb(249,38,45)" fg:x="680" fg:w="1"/><text x="54.2183%" y="47.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.0476%" y="453" width="0.0794%" height="15" fill="rgb(216,70,11)" fg:x="681" fg:w="1"/><text x="54.2976%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.71%)</title><rect x="53.4921%" y="469" width="0.7143%" height="15" fill="rgb(253,101,25)" fg:x="674" fg:w="9"/><text x="53.7421%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="54.1270%" y="453" width="0.0794%" height="15" fill="rgb(207,197,30)" fg:x="682" fg:w="1"/><text x="54.3770%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="54.1270%" y="437" width="0.0794%" height="15" fill="rgb(238,87,13)" fg:x="682" fg:w="1"/><text x="54.3770%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2063%" y="453" width="0.0794%" height="15" fill="rgb(215,155,8)" fg:x="683" fg:w="1"/><text x="54.4563%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="54.2857%" y="453" width="0.1587%" height="15" fill="rgb(239,166,38)" fg:x="684" fg:w="2"/><text x="54.5357%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="54.2857%" y="437" width="0.1587%" height="15" fill="rgb(240,194,35)" fg:x="684" fg:w="2"/><text x="54.5357%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3651%" y="421" width="0.0794%" height="15" fill="rgb(219,10,44)" fg:x="685" fg:w="1"/><text x="54.6151%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5238%" y="405" width="0.1587%" height="15" fill="rgb(251,220,35)" fg:x="687" fg:w="2"/><text x="54.7738%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5238%" y="389" width="0.1587%" height="15" fill="rgb(218,117,13)" fg:x="687" fg:w="2"/><text x="54.7738%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.5238%" y="373" width="0.1587%" height="15" fill="rgb(221,213,40)" fg:x="687" fg:w="2"/><text x="54.7738%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.5238%" y="357" width="0.1587%" height="15" fill="rgb(251,224,35)" fg:x="687" fg:w="2"/><text x="54.7738%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="54.5238%" y="341" width="0.1587%" height="15" fill="rgb(241,33,39)" fg:x="687" fg:w="2"/><text x="54.7738%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="54.5238%" y="325" width="0.1587%" height="15" fill="rgb(222,74,17)" fg:x="687" fg:w="2"/><text x="54.7738%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="54.5238%" y="309" width="0.1587%" height="15" fill="rgb(225,103,0)" fg:x="687" fg:w="2"/><text x="54.7738%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.5238%" y="293" width="0.1587%" height="15" fill="rgb(240,0,12)" fg:x="687" fg:w="2"/><text x="54.7738%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.5238%" y="277" width="0.1587%" height="15" fill="rgb(233,213,37)" fg:x="687" fg:w="2"/><text x="54.7738%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="54.5238%" y="261" width="0.1587%" height="15" fill="rgb(225,84,52)" fg:x="687" fg:w="2"/><text x="54.7738%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="54.5238%" y="245" width="0.1587%" height="15" fill="rgb(247,160,51)" fg:x="687" fg:w="2"/><text x="54.7738%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="54.5238%" y="229" width="0.1587%" height="15" fill="rgb(244,60,51)" fg:x="687" fg:w="2"/><text x="54.7738%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="54.5238%" y="213" width="0.1587%" height="15" fill="rgb(233,114,7)" fg:x="687" fg:w="2"/><text x="54.7738%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.5238%" y="197" width="0.1587%" height="15" fill="rgb(246,136,16)" fg:x="687" fg:w="2"/><text x="54.7738%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="54.6825%" y="357" width="0.1587%" height="15" fill="rgb(243,114,45)" fg:x="689" fg:w="2"/><text x="54.9325%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="54.6825%" y="341" width="0.1587%" height="15" fill="rgb(247,183,43)" fg:x="689" fg:w="2"/><text x="54.9325%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.6825%" y="325" width="0.1587%" height="15" fill="rgb(251,210,42)" fg:x="689" fg:w="2"/><text x="54.9325%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6825%" y="309" width="0.1587%" height="15" fill="rgb(221,88,35)" fg:x="689" fg:w="2"/><text x="54.9325%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.6825%" y="293" width="0.1587%" height="15" fill="rgb(242,21,20)" fg:x="689" fg:w="2"/><text x="54.9325%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6825%" y="277" width="0.1587%" height="15" fill="rgb(233,226,36)" fg:x="689" fg:w="2"/><text x="54.9325%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="54.6825%" y="261" width="0.1587%" height="15" fill="rgb(243,189,34)" fg:x="689" fg:w="2"/><text x="54.9325%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6825%" y="245" width="0.1587%" height="15" fill="rgb(207,145,50)" fg:x="689" fg:w="2"/><text x="54.9325%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.6825%" y="229" width="0.1587%" height="15" fill="rgb(242,1,50)" fg:x="689" fg:w="2"/><text x="54.9325%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.7619%" y="213" width="0.0794%" height="15" fill="rgb(231,65,32)" fg:x="690" fg:w="1"/><text x="55.0119%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.7619%" y="197" width="0.0794%" height="15" fill="rgb(208,68,49)" fg:x="690" fg:w="1"/><text x="55.0119%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.7619%" y="181" width="0.0794%" height="15" fill="rgb(253,54,49)" fg:x="690" fg:w="1"/><text x="55.0119%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.9206%" y="293" width="0.0794%" height="15" fill="rgb(245,186,24)" fg:x="692" fg:w="1"/><text x="55.1706%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.9206%" y="309" width="0.1587%" height="15" fill="rgb(209,2,41)" fg:x="692" fg:w="2"/><text x="55.1706%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0000%" y="293" width="0.0794%" height="15" fill="rgb(242,208,54)" fg:x="693" fg:w="1"/><text x="55.2500%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0794%" y="309" width="0.0794%" height="15" fill="rgb(225,9,51)" fg:x="694" fg:w="1"/><text x="55.3294%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2381%" y="213" width="0.0794%" height="15" fill="rgb(207,207,25)" fg:x="696" fg:w="1"/><text x="55.4881%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2381%" y="197" width="0.0794%" height="15" fill="rgb(253,96,18)" fg:x="696" fg:w="1"/><text x="55.4881%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.1587%" y="261" width="0.2381%" height="15" fill="rgb(252,215,20)" fg:x="695" fg:w="3"/><text x="55.4087%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="55.1587%" y="245" width="0.2381%" height="15" fill="rgb(245,227,26)" fg:x="695" fg:w="3"/><text x="55.4087%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.1587%" y="229" width="0.2381%" height="15" fill="rgb(241,208,0)" fg:x="695" fg:w="3"/><text x="55.4087%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.3175%" y="213" width="0.0794%" height="15" fill="rgb(224,130,10)" fg:x="697" fg:w="1"/><text x="55.5675%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.3175%" y="197" width="0.0794%" height="15" fill="rgb(237,29,0)" fg:x="697" fg:w="1"/><text x="55.5675%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.3175%" y="181" width="0.0794%" height="15" fill="rgb(219,27,41)" fg:x="697" fg:w="1"/><text x="55.5675%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.3175%" y="165" width="0.0794%" height="15" fill="rgb(245,101,19)" fg:x="697" fg:w="1"/><text x="55.5675%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3175%" y="149" width="0.0794%" height="15" fill="rgb(243,44,37)" fg:x="697" fg:w="1"/><text x="55.5675%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.79%)</title><rect x="54.6825%" y="405" width="0.7937%" height="15" fill="rgb(228,213,43)" fg:x="689" fg:w="10"/><text x="54.9325%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (10 samples, 0.79%)</title><rect x="54.6825%" y="389" width="0.7937%" height="15" fill="rgb(219,163,21)" fg:x="689" fg:w="10"/><text x="54.9325%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.79%)</title><rect x="54.6825%" y="373" width="0.7937%" height="15" fill="rgb(234,86,24)" fg:x="689" fg:w="10"/><text x="54.9325%" y="383.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.63%)</title><rect x="54.8413%" y="357" width="0.6349%" height="15" fill="rgb(225,10,24)" fg:x="691" fg:w="8"/><text x="55.0913%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="54.8413%" y="341" width="0.6349%" height="15" fill="rgb(218,109,7)" fg:x="691" fg:w="8"/><text x="55.0913%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="54.9206%" y="325" width="0.5556%" height="15" fill="rgb(210,20,26)" fg:x="692" fg:w="7"/><text x="55.1706%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="55.1587%" y="309" width="0.3175%" height="15" fill="rgb(216,18,1)" fg:x="695" fg:w="4"/><text x="55.4087%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="55.1587%" y="293" width="0.3175%" height="15" fill="rgb(206,163,23)" fg:x="695" fg:w="4"/><text x="55.4087%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="55.1587%" y="277" width="0.3175%" height="15" fill="rgb(229,150,31)" fg:x="695" fg:w="4"/><text x="55.4087%" y="287.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="55.3968%" y="261" width="0.0794%" height="15" fill="rgb(231,10,5)" fg:x="698" fg:w="1"/><text x="55.6468%" y="271.50"></text></g><g><title>core::iter::adapters::try_process (26 samples, 2.06%)</title><rect x="53.4921%" y="485" width="2.0635%" height="15" fill="rgb(250,40,50)" fg:x="674" fg:w="26"/><text x="53.7421%" y="495.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (17 samples, 1.35%)</title><rect x="54.2063%" y="469" width="1.3492%" height="15" fill="rgb(217,119,7)" fg:x="683" fg:w="17"/><text x="54.4563%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (14 samples, 1.11%)</title><rect x="54.4444%" y="453" width="1.1111%" height="15" fill="rgb(245,214,40)" fg:x="686" fg:w="14"/><text x="54.6944%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (14 samples, 1.11%)</title><rect x="54.4444%" y="437" width="1.1111%" height="15" fill="rgb(216,187,1)" fg:x="686" fg:w="14"/><text x="54.6944%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (13 samples, 1.03%)</title><rect x="54.5238%" y="421" width="1.0317%" height="15" fill="rgb(237,146,21)" fg:x="687" fg:w="13"/><text x="54.7738%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.4762%" y="405" width="0.0794%" height="15" fill="rgb(210,174,47)" fg:x="699" fg:w="1"/><text x="55.7262%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="55.5556%" y="485" width="0.0794%" height="15" fill="rgb(218,111,39)" fg:x="700" fg:w="1"/><text x="55.8056%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="55.5556%" y="469" width="0.0794%" height="15" fill="rgb(224,95,19)" fg:x="700" fg:w="1"/><text x="55.8056%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5556%" y="453" width="0.0794%" height="15" fill="rgb(234,15,38)" fg:x="700" fg:w="1"/><text x="55.8056%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.7143%" y="437" width="0.0794%" height="15" fill="rgb(246,56,12)" fg:x="702" fg:w="1"/><text x="55.9643%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.7143%" y="421" width="0.0794%" height="15" fill="rgb(247,16,17)" fg:x="702" fg:w="1"/><text x="55.9643%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.7143%" y="405" width="0.0794%" height="15" fill="rgb(215,151,11)" fg:x="702" fg:w="1"/><text x="55.9643%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.7143%" y="389" width="0.0794%" height="15" fill="rgb(225,16,24)" fg:x="702" fg:w="1"/><text x="55.9643%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.7143%" y="373" width="0.0794%" height="15" fill="rgb(217,117,5)" fg:x="702" fg:w="1"/><text x="55.9643%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.7143%" y="357" width="0.0794%" height="15" fill="rgb(246,187,53)" fg:x="702" fg:w="1"/><text x="55.9643%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.7143%" y="341" width="0.0794%" height="15" fill="rgb(241,71,40)" fg:x="702" fg:w="1"/><text x="55.9643%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.7143%" y="325" width="0.0794%" height="15" fill="rgb(231,67,39)" fg:x="702" fg:w="1"/><text x="55.9643%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.7143%" y="309" width="0.0794%" height="15" fill="rgb(222,120,24)" fg:x="702" fg:w="1"/><text x="55.9643%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.7143%" y="293" width="0.0794%" height="15" fill="rgb(248,3,3)" fg:x="702" fg:w="1"/><text x="55.9643%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.7143%" y="277" width="0.0794%" height="15" fill="rgb(228,218,5)" fg:x="702" fg:w="1"/><text x="55.9643%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7143%" y="261" width="0.0794%" height="15" fill="rgb(212,202,43)" fg:x="702" fg:w="1"/><text x="55.9643%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="55.7937%" y="421" width="0.2381%" height="15" fill="rgb(235,183,2)" fg:x="703" fg:w="3"/><text x="56.0437%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="55.7937%" y="405" width="0.2381%" height="15" fill="rgb(230,165,10)" fg:x="703" fg:w="3"/><text x="56.0437%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="55.8730%" y="389" width="0.1587%" height="15" fill="rgb(219,54,40)" fg:x="704" fg:w="2"/><text x="56.1230%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="55.8730%" y="373" width="0.1587%" height="15" fill="rgb(244,73,9)" fg:x="704" fg:w="2"/><text x="56.1230%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="55.8730%" y="357" width="0.1587%" height="15" fill="rgb(212,32,45)" fg:x="704" fg:w="2"/><text x="56.1230%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="55.8730%" y="341" width="0.1587%" height="15" fill="rgb(205,58,31)" fg:x="704" fg:w="2"/><text x="56.1230%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="55.8730%" y="325" width="0.1587%" height="15" fill="rgb(250,120,43)" fg:x="704" fg:w="2"/><text x="56.1230%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="55.8730%" y="309" width="0.1587%" height="15" fill="rgb(235,13,10)" fg:x="704" fg:w="2"/><text x="56.1230%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="55.8730%" y="293" width="0.1587%" height="15" fill="rgb(232,219,31)" fg:x="704" fg:w="2"/><text x="56.1230%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="55.8730%" y="277" width="0.1587%" height="15" fill="rgb(218,157,51)" fg:x="704" fg:w="2"/><text x="56.1230%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="55.8730%" y="261" width="0.1587%" height="15" fill="rgb(211,91,52)" fg:x="704" fg:w="2"/><text x="56.1230%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="55.8730%" y="245" width="0.1587%" height="15" fill="rgb(240,173,1)" fg:x="704" fg:w="2"/><text x="56.1230%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.8730%" y="229" width="0.1587%" height="15" fill="rgb(248,20,47)" fg:x="704" fg:w="2"/><text x="56.1230%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="55.7937%" y="437" width="0.3175%" height="15" fill="rgb(217,221,40)" fg:x="703" fg:w="4"/><text x="56.0437%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0317%" y="421" width="0.0794%" height="15" fill="rgb(226,149,51)" fg:x="706" fg:w="1"/><text x="56.2817%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="55.7143%" y="453" width="0.4762%" height="15" fill="rgb(252,193,7)" fg:x="702" fg:w="6"/><text x="55.9643%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1111%" y="437" width="0.0794%" height="15" fill="rgb(205,123,0)" fg:x="707" fg:w="1"/><text x="56.3611%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (2 samples, 0.16%)</title><rect x="56.2698%" y="373" width="0.1587%" height="15" fill="rgb(233,173,25)" fg:x="709" fg:w="2"/><text x="56.5198%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.2698%" y="357" width="0.1587%" height="15" fill="rgb(216,63,32)" fg:x="709" fg:w="2"/><text x="56.5198%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.2698%" y="341" width="0.1587%" height="15" fill="rgb(209,56,45)" fg:x="709" fg:w="2"/><text x="56.5198%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="56.2698%" y="325" width="0.1587%" height="15" fill="rgb(226,111,49)" fg:x="709" fg:w="2"/><text x="56.5198%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="56.2698%" y="309" width="0.1587%" height="15" fill="rgb(244,181,21)" fg:x="709" fg:w="2"/><text x="56.5198%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="56.2698%" y="293" width="0.1587%" height="15" fill="rgb(222,126,15)" fg:x="709" fg:w="2"/><text x="56.5198%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.2698%" y="277" width="0.1587%" height="15" fill="rgb(222,95,17)" fg:x="709" fg:w="2"/><text x="56.5198%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.2698%" y="261" width="0.1587%" height="15" fill="rgb(254,46,5)" fg:x="709" fg:w="2"/><text x="56.5198%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="56.2698%" y="245" width="0.1587%" height="15" fill="rgb(236,216,35)" fg:x="709" fg:w="2"/><text x="56.5198%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="56.2698%" y="229" width="0.1587%" height="15" fill="rgb(217,187,26)" fg:x="709" fg:w="2"/><text x="56.5198%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="56.2698%" y="213" width="0.1587%" height="15" fill="rgb(207,192,25)" fg:x="709" fg:w="2"/><text x="56.5198%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="56.2698%" y="197" width="0.1587%" height="15" fill="rgb(253,135,27)" fg:x="709" fg:w="2"/><text x="56.5198%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.2698%" y="181" width="0.1587%" height="15" fill="rgb(211,122,29)" fg:x="709" fg:w="2"/><text x="56.5198%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="56.1905%" y="453" width="0.3175%" height="15" fill="rgb(233,162,40)" fg:x="708" fg:w="4"/><text x="56.4405%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="56.2698%" y="437" width="0.2381%" height="15" fill="rgb(222,184,47)" fg:x="709" fg:w="3"/><text x="56.5198%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="56.2698%" y="421" width="0.2381%" height="15" fill="rgb(249,99,23)" fg:x="709" fg:w="3"/><text x="56.5198%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="56.2698%" y="405" width="0.2381%" height="15" fill="rgb(214,60,12)" fg:x="709" fg:w="3"/><text x="56.5198%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="56.2698%" y="389" width="0.2381%" height="15" fill="rgb(250,229,36)" fg:x="709" fg:w="3"/><text x="56.5198%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="56.4286%" y="373" width="0.0794%" height="15" fill="rgb(232,195,10)" fg:x="711" fg:w="1"/><text x="56.6786%" y="383.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="56.4286%" y="357" width="0.0794%" height="15" fill="rgb(205,213,31)" fg:x="711" fg:w="1"/><text x="56.6786%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5079%" y="453" width="0.0794%" height="15" fill="rgb(237,43,8)" fg:x="712" fg:w="1"/><text x="56.7579%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6667%" y="421" width="0.0794%" height="15" fill="rgb(216,208,3)" fg:x="714" fg:w="1"/><text x="56.9167%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (45 samples, 3.57%)</title><rect x="53.2540%" y="501" width="3.5714%" height="15" fill="rgb(228,179,44)" fg:x="671" fg:w="45"/><text x="53.5040%" y="511.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.19%)</title><rect x="55.6349%" y="485" width="1.1905%" height="15" fill="rgb(230,192,27)" fg:x="701" fg:w="15"/><text x="55.8849%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (15 samples, 1.19%)</title><rect x="55.6349%" y="469" width="1.1905%" height="15" fill="rgb(251,30,38)" fg:x="701" fg:w="15"/><text x="55.8849%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.5873%" y="453" width="0.2381%" height="15" fill="rgb(246,55,52)" fg:x="713" fg:w="3"/><text x="56.8373%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.5873%" y="437" width="0.2381%" height="15" fill="rgb(249,79,26)" fg:x="713" fg:w="3"/><text x="56.8373%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.7460%" y="421" width="0.0794%" height="15" fill="rgb(220,202,16)" fg:x="715" fg:w="1"/><text x="56.9960%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.7460%" y="405" width="0.0794%" height="15" fill="rgb(250,170,23)" fg:x="715" fg:w="1"/><text x="56.9960%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="56.7460%" y="389" width="0.0794%" height="15" fill="rgb(230,7,37)" fg:x="715" fg:w="1"/><text x="56.9960%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.7460%" y="373" width="0.0794%" height="15" fill="rgb(213,71,1)" fg:x="715" fg:w="1"/><text x="56.9960%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.7460%" y="357" width="0.0794%" height="15" fill="rgb(227,87,39)" fg:x="715" fg:w="1"/><text x="56.9960%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="56.8254%" y="469" width="0.0794%" height="15" fill="rgb(210,41,29)" fg:x="716" fg:w="1"/><text x="57.0754%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.2222%" y="437" width="0.1587%" height="15" fill="rgb(206,191,31)" fg:x="721" fg:w="2"/><text x="57.4722%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.2222%" y="421" width="0.1587%" height="15" fill="rgb(247,75,54)" fg:x="721" fg:w="2"/><text x="57.4722%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.2222%" y="405" width="0.1587%" height="15" fill="rgb(208,54,50)" fg:x="721" fg:w="2"/><text x="57.4722%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.2222%" y="389" width="0.1587%" height="15" fill="rgb(214,90,37)" fg:x="721" fg:w="2"/><text x="57.4722%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.2222%" y="373" width="0.1587%" height="15" fill="rgb(220,132,6)" fg:x="721" fg:w="2"/><text x="57.4722%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.2222%" y="357" width="0.1587%" height="15" fill="rgb(213,167,7)" fg:x="721" fg:w="2"/><text x="57.4722%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.2222%" y="341" width="0.1587%" height="15" fill="rgb(243,36,27)" fg:x="721" fg:w="2"/><text x="57.4722%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.2222%" y="325" width="0.1587%" height="15" fill="rgb(235,147,12)" fg:x="721" fg:w="2"/><text x="57.4722%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.2222%" y="309" width="0.1587%" height="15" fill="rgb(212,198,44)" fg:x="721" fg:w="2"/><text x="57.4722%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.2222%" y="293" width="0.1587%" height="15" fill="rgb(218,68,50)" fg:x="721" fg:w="2"/><text x="57.4722%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.2222%" y="277" width="0.1587%" height="15" fill="rgb(224,79,48)" fg:x="721" fg:w="2"/><text x="57.4722%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.2222%" y="261" width="0.1587%" height="15" fill="rgb(213,191,50)" fg:x="721" fg:w="2"/><text x="57.4722%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.3810%" y="325" width="0.0794%" height="15" fill="rgb(254,146,10)" fg:x="723" fg:w="1"/><text x="57.6310%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.3810%" y="309" width="0.0794%" height="15" fill="rgb(215,175,11)" fg:x="723" fg:w="1"/><text x="57.6310%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.3810%" y="293" width="0.0794%" height="15" fill="rgb(207,49,7)" fg:x="723" fg:w="1"/><text x="57.6310%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.3810%" y="277" width="0.0794%" height="15" fill="rgb(234,144,29)" fg:x="723" fg:w="1"/><text x="57.6310%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.3810%" y="261" width="0.0794%" height="15" fill="rgb(213,222,48)" fg:x="723" fg:w="1"/><text x="57.6310%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.3810%" y="245" width="0.0794%" height="15" fill="rgb(222,8,6)" fg:x="723" fg:w="1"/><text x="57.6310%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3810%" y="229" width="0.0794%" height="15" fill="rgb(221,114,49)" fg:x="723" fg:w="1"/><text x="57.6310%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="57.0635%" y="453" width="0.4762%" height="15" fill="rgb(250,140,42)" fg:x="719" fg:w="6"/><text x="57.3135%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.3810%" y="437" width="0.1587%" height="15" fill="rgb(250,150,27)" fg:x="723" fg:w="2"/><text x="57.6310%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.3810%" y="421" width="0.1587%" height="15" fill="rgb(252,159,3)" fg:x="723" fg:w="2"/><text x="57.6310%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.3810%" y="405" width="0.1587%" height="15" fill="rgb(241,182,3)" fg:x="723" fg:w="2"/><text x="57.6310%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.3810%" y="389" width="0.1587%" height="15" fill="rgb(236,3,9)" fg:x="723" fg:w="2"/><text x="57.6310%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.3810%" y="373" width="0.1587%" height="15" fill="rgb(223,227,51)" fg:x="723" fg:w="2"/><text x="57.6310%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.3810%" y="357" width="0.1587%" height="15" fill="rgb(232,133,30)" fg:x="723" fg:w="2"/><text x="57.6310%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.3810%" y="341" width="0.1587%" height="15" fill="rgb(209,93,27)" fg:x="723" fg:w="2"/><text x="57.6310%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.4603%" y="325" width="0.0794%" height="15" fill="rgb(208,108,34)" fg:x="724" fg:w="1"/><text x="57.7103%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.4603%" y="309" width="0.0794%" height="15" fill="rgb(215,189,13)" fg:x="724" fg:w="1"/><text x="57.7103%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.5397%" y="373" width="0.0794%" height="15" fill="rgb(206,88,23)" fg:x="725" fg:w="1"/><text x="57.7897%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="57.6190%" y="357" width="0.0794%" height="15" fill="rgb(240,173,0)" fg:x="726" fg:w="1"/><text x="57.8690%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6190%" y="341" width="0.0794%" height="15" fill="rgb(223,106,52)" fg:x="726" fg:w="1"/><text x="57.8690%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6190%" y="325" width="0.0794%" height="15" fill="rgb(206,130,16)" fg:x="726" fg:w="1"/><text x="57.8690%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.6190%" y="309" width="0.0794%" height="15" fill="rgb(220,54,25)" fg:x="726" fg:w="1"/><text x="57.8690%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.6190%" y="293" width="0.0794%" height="15" fill="rgb(210,4,38)" fg:x="726" fg:w="1"/><text x="57.8690%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.6190%" y="277" width="0.0794%" height="15" fill="rgb(238,94,39)" fg:x="726" fg:w="1"/><text x="57.8690%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.6190%" y="261" width="0.0794%" height="15" fill="rgb(234,124,34)" fg:x="726" fg:w="1"/><text x="57.8690%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.6190%" y="245" width="0.0794%" height="15" fill="rgb(221,91,40)" fg:x="726" fg:w="1"/><text x="57.8690%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6984%" y="341" width="0.0794%" height="15" fill="rgb(246,53,28)" fg:x="727" fg:w="1"/><text x="57.9484%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6984%" y="325" width="0.0794%" height="15" fill="rgb(229,109,7)" fg:x="727" fg:w="1"/><text x="57.9484%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.6984%" y="309" width="0.0794%" height="15" fill="rgb(249,117,8)" fg:x="727" fg:w="1"/><text x="57.9484%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.6984%" y="293" width="0.0794%" height="15" fill="rgb(210,181,1)" fg:x="727" fg:w="1"/><text x="57.9484%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.6984%" y="277" width="0.0794%" height="15" fill="rgb(211,66,1)" fg:x="727" fg:w="1"/><text x="57.9484%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.6984%" y="261" width="0.0794%" height="15" fill="rgb(221,90,14)" fg:x="727" fg:w="1"/><text x="57.9484%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.6984%" y="245" width="0.0794%" height="15" fill="rgb(219,222,44)" fg:x="727" fg:w="1"/><text x="57.9484%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.6984%" y="229" width="0.0794%" height="15" fill="rgb(246,34,33)" fg:x="727" fg:w="1"/><text x="57.9484%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.6984%" y="213" width="0.0794%" height="15" fill="rgb(227,135,41)" fg:x="727" fg:w="1"/><text x="57.9484%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.6984%" y="197" width="0.0794%" height="15" fill="rgb(226,15,14)" fg:x="727" fg:w="1"/><text x="57.9484%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.6984%" y="181" width="0.0794%" height="15" fill="rgb(236,148,47)" fg:x="727" fg:w="1"/><text x="57.9484%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.6984%" y="165" width="0.0794%" height="15" fill="rgb(233,162,52)" fg:x="727" fg:w="1"/><text x="57.9484%" y="175.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="57.6984%" y="357" width="0.2381%" height="15" fill="rgb(244,35,28)" fg:x="727" fg:w="3"/><text x="57.9484%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.7778%" y="341" width="0.1587%" height="15" fill="rgb(205,121,10)" fg:x="728" fg:w="2"/><text x="58.0278%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8571%" y="325" width="0.0794%" height="15" fill="rgb(250,58,18)" fg:x="729" fg:w="1"/><text x="58.1071%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="57.8571%" y="309" width="0.0794%" height="15" fill="rgb(216,37,13)" fg:x="729" fg:w="1"/><text x="58.1071%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8571%" y="293" width="0.0794%" height="15" fill="rgb(221,215,42)" fg:x="729" fg:w="1"/><text x="58.1071%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.1746%" y="245" width="0.0794%" height="15" fill="rgb(217,214,19)" fg:x="733" fg:w="1"/><text x="58.4246%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.1746%" y="229" width="0.0794%" height="15" fill="rgb(233,139,13)" fg:x="733" fg:w="1"/><text x="58.4246%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="58.3333%" y="165" width="0.1587%" height="15" fill="rgb(247,168,23)" fg:x="735" fg:w="2"/><text x="58.5833%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.4127%" y="149" width="0.0794%" height="15" fill="rgb(207,202,1)" fg:x="736" fg:w="1"/><text x="58.6627%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="58.2540%" y="229" width="0.3175%" height="15" fill="rgb(220,155,48)" fg:x="734" fg:w="4"/><text x="58.5040%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.3333%" y="213" width="0.2381%" height="15" fill="rgb(250,43,26)" fg:x="735" fg:w="3"/><text x="58.5833%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="58.3333%" y="197" width="0.2381%" height="15" fill="rgb(212,190,23)" fg:x="735" fg:w="3"/><text x="58.5833%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.3333%" y="181" width="0.2381%" height="15" fill="rgb(216,39,24)" fg:x="735" fg:w="3"/><text x="58.5833%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4921%" y="165" width="0.0794%" height="15" fill="rgb(252,113,16)" fg:x="737" fg:w="1"/><text x="58.7421%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4921%" y="149" width="0.0794%" height="15" fill="rgb(208,113,19)" fg:x="737" fg:w="1"/><text x="58.7421%" y="159.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.4921%" y="133" width="0.0794%" height="15" fill="rgb(234,107,25)" fg:x="737" fg:w="1"/><text x="58.7421%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.5714%" y="229" width="0.0794%" height="15" fill="rgb(234,217,51)" fg:x="738" fg:w="1"/><text x="58.8214%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.5714%" y="213" width="0.0794%" height="15" fill="rgb(251,29,42)" fg:x="738" fg:w="1"/><text x="58.8214%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.5714%" y="197" width="0.0794%" height="15" fill="rgb(221,62,51)" fg:x="738" fg:w="1"/><text x="58.8214%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.5714%" y="181" width="0.0794%" height="15" fill="rgb(240,192,43)" fg:x="738" fg:w="1"/><text x="58.8214%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.5714%" y="165" width="0.0794%" height="15" fill="rgb(224,157,47)" fg:x="738" fg:w="1"/><text x="58.8214%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="58.1746%" y="277" width="0.5556%" height="15" fill="rgb(226,84,45)" fg:x="733" fg:w="7"/><text x="58.4246%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="58.1746%" y="261" width="0.5556%" height="15" fill="rgb(208,207,23)" fg:x="733" fg:w="7"/><text x="58.4246%" y="271.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="58.2540%" y="245" width="0.4762%" height="15" fill="rgb(253,34,51)" fg:x="734" fg:w="6"/><text x="58.5040%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.6508%" y="229" width="0.0794%" height="15" fill="rgb(227,26,34)" fg:x="739" fg:w="1"/><text x="58.9008%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.6508%" y="213" width="0.0794%" height="15" fill="rgb(245,75,19)" fg:x="739" fg:w="1"/><text x="58.9008%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="58.6508%" y="197" width="0.0794%" height="15" fill="rgb(250,191,31)" fg:x="739" fg:w="1"/><text x="58.9008%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8889%" y="245" width="0.0794%" height="15" fill="rgb(224,11,50)" fg:x="742" fg:w="1"/><text x="59.1389%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.9683%" y="213" width="0.0794%" height="15" fill="rgb(231,171,7)" fg:x="743" fg:w="1"/><text x="59.2183%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0476%" y="213" width="0.0794%" height="15" fill="rgb(252,214,10)" fg:x="744" fg:w="1"/><text x="59.2976%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.0476%" y="197" width="0.0794%" height="15" fill="rgb(249,45,46)" fg:x="744" fg:w="1"/><text x="59.2976%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.0476%" y="181" width="0.0794%" height="15" fill="rgb(240,173,7)" fg:x="744" fg:w="1"/><text x="59.2976%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="58.9683%" y="245" width="0.3175%" height="15" fill="rgb(235,214,13)" fg:x="743" fg:w="4"/><text x="59.2183%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="58.9683%" y="229" width="0.3175%" height="15" fill="rgb(245,156,8)" fg:x="743" fg:w="4"/><text x="59.2183%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.1270%" y="213" width="0.1587%" height="15" fill="rgb(235,46,12)" fg:x="745" fg:w="2"/><text x="59.3770%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2063%" y="197" width="0.0794%" height="15" fill="rgb(221,81,14)" fg:x="746" fg:w="1"/><text x="59.4563%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (18 samples, 1.43%)</title><rect x="57.9365%" y="341" width="1.4286%" height="15" fill="rgb(238,207,9)" fg:x="730" fg:w="18"/><text x="58.1865%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (18 samples, 1.43%)</title><rect x="57.9365%" y="325" width="1.4286%" height="15" fill="rgb(224,129,35)" fg:x="730" fg:w="18"/><text x="58.1865%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (18 samples, 1.43%)</title><rect x="57.9365%" y="309" width="1.4286%" height="15" fill="rgb(243,218,34)" fg:x="730" fg:w="18"/><text x="58.1865%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (18 samples, 1.43%)</title><rect x="57.9365%" y="293" width="1.4286%" height="15" fill="rgb(220,166,13)" fg:x="730" fg:w="18"/><text x="58.1865%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="58.7302%" y="277" width="0.6349%" height="15" fill="rgb(227,167,49)" fg:x="740" fg:w="8"/><text x="58.9802%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="58.7302%" y="261" width="0.6349%" height="15" fill="rgb(234,142,12)" fg:x="740" fg:w="8"/><text x="58.9802%" y="271.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="59.2857%" y="245" width="0.0794%" height="15" fill="rgb(207,100,48)" fg:x="747" fg:w="1"/><text x="59.5357%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.5238%" y="293" width="0.0794%" height="15" fill="rgb(210,25,14)" fg:x="750" fg:w="1"/><text x="59.7738%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.6032%" y="293" width="0.0794%" height="15" fill="rgb(246,116,27)" fg:x="751" fg:w="1"/><text x="59.8532%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.8413%" y="261" width="0.0794%" height="15" fill="rgb(214,193,42)" fg:x="754" fg:w="1"/><text x="60.0913%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.8413%" y="245" width="0.0794%" height="15" fill="rgb(214,122,8)" fg:x="754" fg:w="1"/><text x="60.0913%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9206%" y="261" width="0.0794%" height="15" fill="rgb(244,173,18)" fg:x="755" fg:w="1"/><text x="60.1706%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9206%" y="245" width="0.0794%" height="15" fill="rgb(232,68,19)" fg:x="755" fg:w="1"/><text x="60.1706%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.9206%" y="229" width="0.0794%" height="15" fill="rgb(236,224,1)" fg:x="755" fg:w="1"/><text x="60.1706%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.0000%" y="229" width="0.0794%" height="15" fill="rgb(240,11,8)" fg:x="756" fg:w="1"/><text x="60.2500%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.3175%" y="181" width="0.0794%" height="15" fill="rgb(244,159,20)" fg:x="760" fg:w="1"/><text x="60.5675%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="60.2381%" y="197" width="0.2381%" height="15" fill="rgb(240,223,54)" fg:x="759" fg:w="3"/><text x="60.4881%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3968%" y="181" width="0.0794%" height="15" fill="rgb(237,146,5)" fg:x="761" fg:w="1"/><text x="60.6468%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4762%" y="197" width="0.0794%" height="15" fill="rgb(218,221,32)" fg:x="762" fg:w="1"/><text x="60.7262%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4762%" y="181" width="0.0794%" height="15" fill="rgb(244,96,26)" fg:x="762" fg:w="1"/><text x="60.7262%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4762%" y="165" width="0.0794%" height="15" fill="rgb(245,184,37)" fg:x="762" fg:w="1"/><text x="60.7262%" y="175.50"></text></g><g><title>core::iter::adapters::try_process (39 samples, 3.10%)</title><rect x="57.5397%" y="437" width="3.0952%" height="15" fill="rgb(248,91,47)" fg:x="725" fg:w="39"/><text x="57.7897%" y="447.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 3.10%)</title><rect x="57.5397%" y="421" width="3.0952%" height="15" fill="rgb(243,199,8)" fg:x="725" fg:w="39"/><text x="57.7897%" y="431.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 3.10%)</title><rect x="57.5397%" y="405" width="3.0952%" height="15" fill="rgb(249,12,15)" fg:x="725" fg:w="39"/><text x="57.7897%" y="415.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (39 samples, 3.10%)</title><rect x="57.5397%" y="389" width="3.0952%" height="15" fill="rgb(245,97,12)" fg:x="725" fg:w="39"/><text x="57.7897%" y="399.50">&lt;en..</text></g><g><title>engine::internal::Entities::prepare_entity (38 samples, 3.02%)</title><rect x="57.6190%" y="373" width="3.0159%" height="15" fill="rgb(244,61,1)" fg:x="726" fg:w="38"/><text x="57.8690%" y="383.50">eng..</text></g><g><title>kernel::model::deserialize_entity (34 samples, 2.70%)</title><rect x="57.9365%" y="357" width="2.6984%" height="15" fill="rgb(222,194,10)" fg:x="730" fg:w="34"/><text x="58.1865%" y="367.50">ke..</text></g><g><title>serde_json::de::from_trait (16 samples, 1.27%)</title><rect x="59.3651%" y="341" width="1.2698%" height="15" fill="rgb(226,178,8)" fg:x="748" fg:w="16"/><text x="59.6151%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16 samples, 1.27%)</title><rect x="59.3651%" y="325" width="1.2698%" height="15" fill="rgb(241,32,34)" fg:x="748" fg:w="16"/><text x="59.6151%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.27%)</title><rect x="59.3651%" y="309" width="1.2698%" height="15" fill="rgb(254,26,6)" fg:x="748" fg:w="16"/><text x="59.6151%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.95%)</title><rect x="59.6825%" y="293" width="0.9524%" height="15" fill="rgb(249,71,11)" fg:x="752" fg:w="12"/><text x="59.9325%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.79%)</title><rect x="59.8413%" y="277" width="0.7937%" height="15" fill="rgb(232,170,27)" fg:x="754" fg:w="10"/><text x="60.0913%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="60.0000%" y="261" width="0.6349%" height="15" fill="rgb(214,223,17)" fg:x="756" fg:w="8"/><text x="60.2500%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="60.0000%" y="245" width="0.6349%" height="15" fill="rgb(250,18,15)" fg:x="756" fg:w="8"/><text x="60.2500%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="60.0794%" y="229" width="0.5556%" height="15" fill="rgb(212,153,51)" fg:x="757" fg:w="7"/><text x="60.3294%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="60.1587%" y="213" width="0.4762%" height="15" fill="rgb(219,194,12)" fg:x="758" fg:w="6"/><text x="60.4087%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.5556%" y="197" width="0.0794%" height="15" fill="rgb(212,58,17)" fg:x="763" fg:w="1"/><text x="60.8056%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (41 samples, 3.25%)</title><rect x="57.5397%" y="453" width="3.2540%" height="15" fill="rgb(254,5,10)" fg:x="725" fg:w="41"/><text x="57.7897%" y="463.50">&lt;pl..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="60.6349%" y="437" width="0.1587%" height="15" fill="rgb(246,91,7)" fg:x="764" fg:w="2"/><text x="60.8849%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7143%" y="421" width="0.0794%" height="15" fill="rgb(218,108,49)" fg:x="765" fg:w="1"/><text x="60.9643%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="60.7937%" y="453" width="0.1587%" height="15" fill="rgb(238,123,20)" fg:x="766" fg:w="2"/><text x="61.0437%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="60.8730%" y="437" width="0.0794%" height="15" fill="rgb(231,69,23)" fg:x="767" fg:w="1"/><text x="61.1230%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1111%" y="421" width="0.0794%" height="15" fill="rgb(230,209,3)" fg:x="770" fg:w="1"/><text x="61.3611%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="61.1905%" y="421" width="0.2381%" height="15" fill="rgb(231,19,0)" fg:x="771" fg:w="3"/><text x="61.4405%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.1905%" y="405" width="0.2381%" height="15" fill="rgb(226,192,25)" fg:x="771" fg:w="3"/><text x="61.4405%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.3492%" y="389" width="0.0794%" height="15" fill="rgb(223,175,53)" fg:x="773" fg:w="1"/><text x="61.5992%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="61.5079%" y="373" width="0.0794%" height="15" fill="rgb(248,35,51)" fg:x="775" fg:w="1"/><text x="61.7579%" y="383.50"></text></g><g><title>plugins_core::tools::get_contained_keys (65 samples, 5.16%)</title><rect x="56.8254%" y="501" width="5.1587%" height="15" fill="rgb(230,37,26)" fg:x="716" fg:w="65"/><text x="57.0754%" y="511.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (65 samples, 5.16%)</title><rect x="56.8254%" y="485" width="5.1587%" height="15" fill="rgb(206,120,22)" fg:x="716" fg:w="65"/><text x="57.0754%" y="495.50">kernel..</text></g><g><title>kernel::model::Entity::load_scope (64 samples, 5.08%)</title><rect x="56.9048%" y="469" width="5.0794%" height="15" fill="rgb(207,165,28)" fg:x="717" fg:w="64"/><text x="57.1548%" y="479.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.03%)</title><rect x="60.9524%" y="453" width="1.0317%" height="15" fill="rgb(226,23,46)" fg:x="768" fg:w="13"/><text x="61.2024%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.03%)</title><rect x="60.9524%" y="437" width="1.0317%" height="15" fill="rgb(208,130,44)" fg:x="768" fg:w="13"/><text x="61.2024%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (7 samples, 0.56%)</title><rect x="61.4286%" y="421" width="0.5556%" height="15" fill="rgb(231,67,8)" fg:x="774" fg:w="7"/><text x="61.6786%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (7 samples, 0.56%)</title><rect x="61.4286%" y="405" width="0.5556%" height="15" fill="rgb(205,183,22)" fg:x="774" fg:w="7"/><text x="61.6786%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.56%)</title><rect x="61.4286%" y="389" width="0.5556%" height="15" fill="rgb(224,47,9)" fg:x="774" fg:w="7"/><text x="61.6786%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="61.5873%" y="373" width="0.3968%" height="15" fill="rgb(250,183,49)" fg:x="776" fg:w="5"/><text x="61.8373%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="61.5873%" y="357" width="0.3968%" height="15" fill="rgb(220,151,39)" fg:x="776" fg:w="5"/><text x="61.8373%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.9048%" y="341" width="0.0794%" height="15" fill="rgb(220,118,20)" fg:x="780" fg:w="1"/><text x="62.1548%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.9841%" y="485" width="0.0794%" height="15" fill="rgb(231,65,51)" fg:x="781" fg:w="1"/><text x="62.2341%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.0635%" y="453" width="0.2381%" height="15" fill="rgb(253,125,37)" fg:x="782" fg:w="3"/><text x="62.3135%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="62.0635%" y="437" width="0.2381%" height="15" fill="rgb(232,102,6)" fg:x="782" fg:w="3"/><text x="62.3135%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.0635%" y="421" width="0.2381%" height="15" fill="rgb(251,105,13)" fg:x="782" fg:w="3"/><text x="62.3135%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3016%" y="453" width="0.0794%" height="15" fill="rgb(222,179,29)" fg:x="785" fg:w="1"/><text x="62.5516%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5397%" y="421" width="0.0794%" height="15" fill="rgb(229,180,53)" fg:x="788" fg:w="1"/><text x="62.7897%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.6190%" y="421" width="0.0794%" height="15" fill="rgb(238,104,13)" fg:x="789" fg:w="1"/><text x="62.8690%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.6190%" y="405" width="0.0794%" height="15" fill="rgb(210,130,5)" fg:x="789" fg:w="1"/><text x="62.8690%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.6190%" y="389" width="0.0794%" height="15" fill="rgb(233,87,49)" fg:x="789" fg:w="1"/><text x="62.8690%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (123 samples, 9.76%)</title><rect x="53.0159%" y="533" width="9.7619%" height="15" fill="rgb(243,34,9)" fg:x="668" fg:w="123"/><text x="53.2659%" y="543.50">&lt;alloc::vec::V..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (123 samples, 9.76%)</title><rect x="53.0159%" y="517" width="9.7619%" height="15" fill="rgb(235,225,10)" fg:x="668" fg:w="123"/><text x="53.2659%" y="527.50">&lt;core::iter::a..</text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 0.79%)</title><rect x="61.9841%" y="501" width="0.7937%" height="15" fill="rgb(212,0,30)" fg:x="781" fg:w="10"/><text x="62.2341%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.71%)</title><rect x="62.0635%" y="485" width="0.7143%" height="15" fill="rgb(211,177,0)" fg:x="782" fg:w="9"/><text x="62.3135%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.71%)</title><rect x="62.0635%" y="469" width="0.7143%" height="15" fill="rgb(225,220,11)" fg:x="782" fg:w="9"/><text x="62.3135%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.3810%" y="453" width="0.3968%" height="15" fill="rgb(215,10,13)" fg:x="786" fg:w="5"/><text x="62.6310%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.3810%" y="437" width="0.3968%" height="15" fill="rgb(240,177,14)" fg:x="786" fg:w="5"/><text x="62.6310%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u32 (1 samples, 0.08%)</title><rect x="62.6984%" y="421" width="0.0794%" height="15" fill="rgb(243,7,39)" fg:x="790" fg:w="1"/><text x="62.9484%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.1746%" y="485" width="0.3175%" height="15" fill="rgb(212,99,0)" fg:x="796" fg:w="4"/><text x="63.4246%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.1746%" y="469" width="0.3175%" height="15" fill="rgb(225,162,48)" fg:x="796" fg:w="4"/><text x="63.4246%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="63.1746%" y="453" width="0.3175%" height="15" fill="rgb(246,16,25)" fg:x="796" fg:w="4"/><text x="63.4246%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="63.1746%" y="437" width="0.3175%" height="15" fill="rgb(220,150,2)" fg:x="796" fg:w="4"/><text x="63.4246%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="63.1746%" y="421" width="0.3175%" height="15" fill="rgb(237,113,11)" fg:x="796" fg:w="4"/><text x="63.4246%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="63.1746%" y="405" width="0.3175%" height="15" fill="rgb(236,70,20)" fg:x="796" fg:w="4"/><text x="63.4246%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="63.1746%" y="389" width="0.3175%" height="15" fill="rgb(234,94,7)" fg:x="796" fg:w="4"/><text x="63.4246%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="63.1746%" y="373" width="0.3175%" height="15" fill="rgb(250,221,0)" fg:x="796" fg:w="4"/><text x="63.4246%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="63.1746%" y="357" width="0.3175%" height="15" fill="rgb(245,149,46)" fg:x="796" fg:w="4"/><text x="63.4246%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="63.1746%" y="341" width="0.3175%" height="15" fill="rgb(215,37,27)" fg:x="796" fg:w="4"/><text x="63.4246%" y="351.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="63.1746%" y="325" width="0.3175%" height="15" fill="rgb(232,65,3)" fg:x="796" fg:w="4"/><text x="63.4246%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="63.1746%" y="309" width="0.3175%" height="15" fill="rgb(214,2,16)" fg:x="796" fg:w="4"/><text x="63.4246%" y="319.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="63.5714%" y="469" width="0.3175%" height="15" fill="rgb(227,131,50)" fg:x="801" fg:w="4"/><text x="63.8214%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (4 samples, 0.32%)</title><rect x="63.5714%" y="453" width="0.3175%" height="15" fill="rgb(247,131,45)" fg:x="801" fg:w="4"/><text x="63.8214%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="63.6508%" y="437" width="0.2381%" height="15" fill="rgb(215,97,47)" fg:x="802" fg:w="3"/><text x="63.9008%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.8095%" y="421" width="0.0794%" height="15" fill="rgb(233,143,12)" fg:x="804" fg:w="1"/><text x="64.0595%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.8095%" y="405" width="0.0794%" height="15" fill="rgb(222,57,17)" fg:x="804" fg:w="1"/><text x="64.0595%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.8095%" y="389" width="0.0794%" height="15" fill="rgb(214,119,38)" fg:x="804" fg:w="1"/><text x="64.0595%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.8095%" y="373" width="0.0794%" height="15" fill="rgb(217,28,47)" fg:x="804" fg:w="1"/><text x="64.0595%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.8095%" y="357" width="0.0794%" height="15" fill="rgb(231,14,52)" fg:x="804" fg:w="1"/><text x="64.0595%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.8095%" y="341" width="0.0794%" height="15" fill="rgb(220,158,18)" fg:x="804" fg:w="1"/><text x="64.0595%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.8095%" y="325" width="0.0794%" height="15" fill="rgb(222,143,46)" fg:x="804" fg:w="1"/><text x="64.0595%" y="335.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="63.8889%" y="469" width="0.1587%" height="15" fill="rgb(227,165,5)" fg:x="805" fg:w="2"/><text x="64.1389%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9683%" y="453" width="0.0794%" height="15" fill="rgb(216,222,49)" fg:x="806" fg:w="1"/><text x="64.2183%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9683%" y="437" width="0.0794%" height="15" fill="rgb(238,73,39)" fg:x="806" fg:w="1"/><text x="64.2183%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.9683%" y="421" width="0.0794%" height="15" fill="rgb(252,115,9)" fg:x="806" fg:w="1"/><text x="64.2183%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.9683%" y="405" width="0.0794%" height="15" fill="rgb(238,202,4)" fg:x="806" fg:w="1"/><text x="64.2183%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.9683%" y="389" width="0.0794%" height="15" fill="rgb(252,153,44)" fg:x="806" fg:w="1"/><text x="64.2183%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9683%" y="373" width="0.0794%" height="15" fill="rgb(235,128,27)" fg:x="806" fg:w="1"/><text x="64.2183%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9683%" y="357" width="0.0794%" height="15" fill="rgb(221,121,47)" fg:x="806" fg:w="1"/><text x="64.2183%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.9683%" y="341" width="0.0794%" height="15" fill="rgb(247,211,47)" fg:x="806" fg:w="1"/><text x="64.2183%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.9683%" y="325" width="0.0794%" height="15" fill="rgb(252,47,49)" fg:x="806" fg:w="1"/><text x="64.2183%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.9683%" y="309" width="0.0794%" height="15" fill="rgb(219,119,53)" fg:x="806" fg:w="1"/><text x="64.2183%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.9683%" y="293" width="0.0794%" height="15" fill="rgb(243,165,53)" fg:x="806" fg:w="1"/><text x="64.2183%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9683%" y="277" width="0.0794%" height="15" fill="rgb(230,12,35)" fg:x="806" fg:w="1"/><text x="64.2183%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.2063%" y="181" width="0.0794%" height="15" fill="rgb(239,57,49)" fg:x="809" fg:w="1"/><text x="64.4563%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2063%" y="165" width="0.0794%" height="15" fill="rgb(231,154,7)" fg:x="809" fg:w="1"/><text x="64.4563%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="64.2063%" y="341" width="0.1587%" height="15" fill="rgb(248,81,34)" fg:x="809" fg:w="2"/><text x="64.4563%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="64.2063%" y="325" width="0.1587%" height="15" fill="rgb(247,9,5)" fg:x="809" fg:w="2"/><text x="64.4563%" y="335.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="64.2063%" y="309" width="0.1587%" height="15" fill="rgb(228,172,27)" fg:x="809" fg:w="2"/><text x="64.4563%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="64.2063%" y="293" width="0.1587%" height="15" fill="rgb(230,57,44)" fg:x="809" fg:w="2"/><text x="64.4563%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="64.2063%" y="277" width="0.1587%" height="15" fill="rgb(249,35,22)" fg:x="809" fg:w="2"/><text x="64.4563%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="64.2063%" y="261" width="0.1587%" height="15" fill="rgb(250,137,27)" fg:x="809" fg:w="2"/><text x="64.4563%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="64.2063%" y="245" width="0.1587%" height="15" fill="rgb(251,57,31)" fg:x="809" fg:w="2"/><text x="64.4563%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="64.2063%" y="229" width="0.1587%" height="15" fill="rgb(238,60,0)" fg:x="809" fg:w="2"/><text x="64.4563%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="64.2063%" y="213" width="0.1587%" height="15" fill="rgb(242,185,39)" fg:x="809" fg:w="2"/><text x="64.4563%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="64.2063%" y="197" width="0.1587%" height="15" fill="rgb(240,63,43)" fg:x="809" fg:w="2"/><text x="64.4563%" y="207.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="64.2857%" y="181" width="0.0794%" height="15" fill="rgb(236,155,6)" fg:x="810" fg:w="1"/><text x="64.5357%" y="191.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="64.2857%" y="165" width="0.0794%" height="15" fill="rgb(215,11,29)" fg:x="810" fg:w="1"/><text x="64.5357%" y="175.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="64.2857%" y="149" width="0.0794%" height="15" fill="rgb(228,180,48)" fg:x="810" fg:w="1"/><text x="64.5357%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (13 samples, 1.03%)</title><rect x="63.4921%" y="485" width="1.0317%" height="15" fill="rgb(241,102,12)" fg:x="800" fg:w="13"/><text x="63.7421%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="64.0476%" y="469" width="0.4762%" height="15" fill="rgb(246,213,4)" fg:x="807" fg:w="6"/><text x="64.2976%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.48%)</title><rect x="64.0476%" y="453" width="0.4762%" height="15" fill="rgb(218,134,35)" fg:x="807" fg:w="6"/><text x="64.2976%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="64.1270%" y="437" width="0.3968%" height="15" fill="rgb(251,117,35)" fg:x="808" fg:w="5"/><text x="64.3770%" y="447.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="64.1270%" y="421" width="0.3968%" height="15" fill="rgb(206,156,45)" fg:x="808" fg:w="5"/><text x="64.3770%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="64.1270%" y="405" width="0.3968%" height="15" fill="rgb(218,52,27)" fg:x="808" fg:w="5"/><text x="64.3770%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="64.1270%" y="389" width="0.3968%" height="15" fill="rgb(238,83,36)" fg:x="808" fg:w="5"/><text x="64.3770%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.40%)</title><rect x="64.1270%" y="373" width="0.3968%" height="15" fill="rgb(218,53,43)" fg:x="808" fg:w="5"/><text x="64.3770%" y="383.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="64.1270%" y="357" width="0.3968%" height="15" fill="rgb(239,54,39)" fg:x="808" fg:w="5"/><text x="64.3770%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="64.3651%" y="341" width="0.1587%" height="15" fill="rgb(212,198,13)" fg:x="811" fg:w="2"/><text x="64.6151%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="64.3651%" y="325" width="0.1587%" height="15" fill="rgb(234,54,46)" fg:x="811" fg:w="2"/><text x="64.6151%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="64.4444%" y="309" width="0.0794%" height="15" fill="rgb(217,120,7)" fg:x="812" fg:w="1"/><text x="64.6944%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.4444%" y="293" width="0.0794%" height="15" fill="rgb(246,39,15)" fg:x="812" fg:w="1"/><text x="64.6944%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="64.4444%" y="277" width="0.0794%" height="15" fill="rgb(242,143,31)" fg:x="812" fg:w="1"/><text x="64.6944%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="64.4444%" y="261" width="0.0794%" height="15" fill="rgb(252,60,24)" fg:x="812" fg:w="1"/><text x="64.6944%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="64.4444%" y="245" width="0.0794%" height="15" fill="rgb(249,220,7)" fg:x="812" fg:w="1"/><text x="64.6944%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.4444%" y="229" width="0.0794%" height="15" fill="rgb(236,67,13)" fg:x="812" fg:w="1"/><text x="64.6944%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="64.4444%" y="213" width="0.0794%" height="15" fill="rgb(210,62,39)" fg:x="812" fg:w="1"/><text x="64.6944%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="64.4444%" y="197" width="0.0794%" height="15" fill="rgb(219,122,53)" fg:x="812" fg:w="1"/><text x="64.6944%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="64.4444%" y="181" width="0.0794%" height="15" fill="rgb(218,87,25)" fg:x="812" fg:w="1"/><text x="64.6944%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="64.4444%" y="165" width="0.0794%" height="15" fill="rgb(234,179,48)" fg:x="812" fg:w="1"/><text x="64.6944%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="64.4444%" y="149" width="0.0794%" height="15" fill="rgb(248,90,0)" fg:x="812" fg:w="1"/><text x="64.6944%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.4444%" y="133" width="0.0794%" height="15" fill="rgb(207,228,37)" fg:x="812" fg:w="1"/><text x="64.6944%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="64.4444%" y="117" width="0.0794%" height="15" fill="rgb(235,214,15)" fg:x="812" fg:w="1"/><text x="64.6944%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="64.4444%" y="101" width="0.0794%" height="15" fill="rgb(210,144,39)" fg:x="812" fg:w="1"/><text x="64.6944%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="64.4444%" y="85" width="0.0794%" height="15" fill="rgb(222,67,41)" fg:x="812" fg:w="1"/><text x="64.6944%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.8254%" y="325" width="0.0794%" height="15" fill="rgb(205,35,37)" fg:x="842" fg:w="1"/><text x="67.0754%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="67.6984%" y="245" width="0.1587%" height="15" fill="rgb(216,125,40)" fg:x="853" fg:w="2"/><text x="67.9484%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.6984%" y="229" width="0.1587%" height="15" fill="rgb(228,227,20)" fg:x="853" fg:w="2"/><text x="67.9484%" y="239.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="67.8571%" y="229" width="0.3175%" height="15" fill="rgb(242,173,45)" fg:x="855" fg:w="4"/><text x="68.1071%" y="239.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.71%)</title><rect x="67.5397%" y="277" width="0.7143%" height="15" fill="rgb(215,79,24)" fg:x="851" fg:w="9"/><text x="67.7897%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.63%)</title><rect x="67.6190%" y="261" width="0.6349%" height="15" fill="rgb(238,164,38)" fg:x="852" fg:w="8"/><text x="67.8690%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="67.8571%" y="245" width="0.3968%" height="15" fill="rgb(245,196,38)" fg:x="855" fg:w="5"/><text x="68.1071%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="68.1746%" y="229" width="0.0794%" height="15" fill="rgb(231,217,29)" fg:x="859" fg:w="1"/><text x="68.4246%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="68.1746%" y="213" width="0.0794%" height="15" fill="rgb(245,6,4)" fg:x="859" fg:w="1"/><text x="68.4246%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.48%)</title><rect x="68.2540%" y="277" width="0.4762%" height="15" fill="rgb(214,76,49)" fg:x="860" fg:w="6"/><text x="68.5040%" y="287.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="68.5714%" y="261" width="0.1587%" height="15" fill="rgb(205,96,12)" fg:x="864" fg:w="2"/><text x="68.8214%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.90%)</title><rect x="67.0635%" y="293" width="1.9048%" height="15" fill="rgb(243,131,4)" fg:x="845" fg:w="24"/><text x="67.3135%" y="303.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="68.7302%" y="277" width="0.2381%" height="15" fill="rgb(214,114,4)" fg:x="866" fg:w="3"/><text x="68.9802%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="68.8095%" y="261" width="0.1587%" height="15" fill="rgb(234,215,15)" fg:x="867" fg:w="2"/><text x="69.0595%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (27 samples, 2.14%)</title><rect x="66.9841%" y="309" width="2.1429%" height="15" fill="rgb(250,216,45)" fg:x="844" fg:w="27"/><text x="67.2341%" y="319.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="68.9683%" y="293" width="0.1587%" height="15" fill="rgb(236,128,4)" fg:x="869" fg:w="2"/><text x="69.2183%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.9683%" y="277" width="0.1587%" height="15" fill="rgb(234,50,33)" fg:x="869" fg:w="2"/><text x="69.2183%" y="287.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="69.1270%" y="277" width="0.1587%" height="15" fill="rgb(253,131,37)" fg:x="871" fg:w="2"/><text x="69.3770%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="69.1270%" y="261" width="0.1587%" height="15" fill="rgb(218,55,27)" fg:x="871" fg:w="2"/><text x="69.3770%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="69.1270%" y="245" width="0.1587%" height="15" fill="rgb(241,220,28)" fg:x="871" fg:w="2"/><text x="69.3770%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.2063%" y="229" width="0.0794%" height="15" fill="rgb(241,90,48)" fg:x="872" fg:w="1"/><text x="69.4563%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.2063%" y="213" width="0.0794%" height="15" fill="rgb(216,43,37)" fg:x="872" fg:w="1"/><text x="69.4563%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="69.1270%" y="293" width="0.2381%" height="15" fill="rgb(207,173,9)" fg:x="871" fg:w="3"/><text x="69.3770%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2857%" y="277" width="0.0794%" height="15" fill="rgb(240,126,30)" fg:x="873" fg:w="1"/><text x="69.5357%" y="287.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (32 samples, 2.54%)</title><rect x="66.9048%" y="325" width="2.5397%" height="15" fill="rgb(228,178,53)" fg:x="843" fg:w="32"/><text x="67.1548%" y="335.50">&lt;p..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="69.1270%" y="309" width="0.3175%" height="15" fill="rgb(217,33,4)" fg:x="871" fg:w="4"/><text x="69.3770%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3651%" y="293" width="0.0794%" height="15" fill="rgb(206,124,34)" fg:x="874" fg:w="1"/><text x="69.6151%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.4444%" y="325" width="0.0794%" height="15" fill="rgb(208,122,53)" fg:x="875" fg:w="1"/><text x="69.6944%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="69.5238%" y="309" width="0.1587%" height="15" fill="rgb(215,202,26)" fg:x="876" fg:w="2"/><text x="69.7738%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 3.17%)</title><rect x="66.5873%" y="341" width="3.1746%" height="15" fill="rgb(232,198,31)" fg:x="839" fg:w="40"/><text x="66.8373%" y="351.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.5238%" y="325" width="0.2381%" height="15" fill="rgb(222,23,35)" fg:x="876" fg:w="3"/><text x="69.7738%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6825%" y="309" width="0.0794%" height="15" fill="rgb(242,27,53)" fg:x="878" fg:w="1"/><text x="69.9325%" y="319.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (43 samples, 3.41%)</title><rect x="66.4286%" y="373" width="3.4127%" height="15" fill="rgb(210,216,42)" fg:x="837" fg:w="43"/><text x="66.6786%" y="383.50">&lt;pl..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (41 samples, 3.25%)</title><rect x="66.5873%" y="357" width="3.2540%" height="15" fill="rgb(234,39,38)" fg:x="839" fg:w="41"/><text x="66.8373%" y="367.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="69.7619%" y="341" width="0.0794%" height="15" fill="rgb(235,126,54)" fg:x="879" fg:w="1"/><text x="70.0119%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7619%" y="325" width="0.0794%" height="15" fill="rgb(235,150,33)" fg:x="879" fg:w="1"/><text x="70.0119%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="69.8413%" y="373" width="0.2381%" height="15" fill="rgb(249,49,53)" fg:x="880" fg:w="3"/><text x="70.0913%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0000%" y="357" width="0.0794%" height="15" fill="rgb(238,60,50)" fg:x="882" fg:w="1"/><text x="70.2500%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="70.0794%" y="357" width="0.1587%" height="15" fill="rgb(210,5,2)" fg:x="883" fg:w="2"/><text x="70.3294%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.1587%" y="341" width="0.0794%" height="15" fill="rgb(214,207,24)" fg:x="884" fg:w="1"/><text x="70.4087%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 4.44%)</title><rect x="65.8730%" y="389" width="4.4444%" height="15" fill="rgb(228,173,2)" fg:x="830" fg:w="56"/><text x="66.1230%" y="399.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="70.0794%" y="373" width="0.2381%" height="15" fill="rgb(244,26,8)" fg:x="883" fg:w="3"/><text x="70.3294%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.2381%" y="357" width="0.0794%" height="15" fill="rgb(249,153,35)" fg:x="885" fg:w="1"/><text x="70.4881%" y="367.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (68 samples, 5.40%)</title><rect x="65.6349%" y="421" width="5.3968%" height="15" fill="rgb(221,215,40)" fg:x="827" fg:w="68"/><text x="65.8849%" y="431.50">&lt;plugin..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (65 samples, 5.16%)</title><rect x="65.8730%" y="405" width="5.1587%" height="15" fill="rgb(238,106,35)" fg:x="830" fg:w="65"/><text x="66.1230%" y="415.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.71%)</title><rect x="70.3175%" y="389" width="0.7143%" height="15" fill="rgb(207,195,21)" fg:x="886" fg:w="9"/><text x="70.5675%" y="399.50"></text></g><g><title>__libc_malloc (8 samples, 0.63%)</title><rect x="70.3968%" y="373" width="0.6349%" height="15" fill="rgb(205,43,29)" fg:x="887" fg:w="8"/><text x="70.6468%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="71.1111%" y="405" width="0.1587%" height="15" fill="rgb(236,35,21)" fg:x="896" fg:w="2"/><text x="71.3611%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="71.1905%" y="389" width="0.0794%" height="15" fill="rgb(244,74,8)" fg:x="897" fg:w="1"/><text x="71.4405%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (82 samples, 6.51%)</title><rect x="64.9206%" y="437" width="6.5079%" height="15" fill="rgb(241,229,7)" fg:x="818" fg:w="82"/><text x="65.1706%" y="447.50">&lt;core::it..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="71.0317%" y="421" width="0.3968%" height="15" fill="rgb(212,223,25)" fg:x="895" fg:w="5"/><text x="71.2817%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.2698%" y="405" width="0.1587%" height="15" fill="rgb(234,58,53)" fg:x="898" fg:w="2"/><text x="71.5198%" y="415.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (97 samples, 7.70%)</title><rect x="64.6825%" y="469" width="7.6984%" height="15" fill="rgb(244,36,1)" fg:x="815" fg:w="97"/><text x="64.9325%" y="479.50">&lt;plugins_rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (96 samples, 7.62%)</title><rect x="64.7619%" y="453" width="7.6190%" height="15" fill="rgb(222,40,54)" fg:x="816" fg:w="96"/><text x="65.0119%" y="463.50">&lt;std::coll..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.95%)</title><rect x="71.4286%" y="437" width="0.9524%" height="15" fill="rgb(210,207,39)" fg:x="900" fg:w="12"/><text x="71.6786%" y="447.50"></text></g><g><title>__libc_malloc (12 samples, 0.95%)</title><rect x="71.4286%" y="421" width="0.9524%" height="15" fill="rgb(234,52,14)" fg:x="900" fg:w="12"/><text x="71.6786%" y="431.50"></text></g><g><title>__libc_malloc (8 samples, 0.63%)</title><rect x="72.6984%" y="421" width="0.6349%" height="15" fill="rgb(239,108,46)" fg:x="916" fg:w="8"/><text x="72.9484%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="73.3333%" y="421" width="0.0794%" height="15" fill="rgb(252,223,5)" fg:x="924" fg:w="1"/><text x="73.5833%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="73.3333%" y="405" width="0.0794%" height="15" fill="rgb(227,181,11)" fg:x="924" fg:w="1"/><text x="73.5833%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.71%)</title><rect x="73.4127%" y="421" width="0.7143%" height="15" fill="rgb(248,126,40)" fg:x="925" fg:w="9"/><text x="73.6627%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="73.7302%" y="405" width="0.3968%" height="15" fill="rgb(243,1,18)" fg:x="929" fg:w="5"/><text x="73.9802%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.32%)</title><rect x="73.8095%" y="389" width="0.3175%" height="15" fill="rgb(214,145,23)" fg:x="930" fg:w="4"/><text x="74.0595%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="74.1270%" y="421" width="0.0794%" height="15" fill="rgb(241,218,11)" fg:x="934" fg:w="1"/><text x="74.3770%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.1270%" y="405" width="0.0794%" height="15" fill="rgb(214,219,24)" fg:x="934" fg:w="1"/><text x="74.3770%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1270%" y="389" width="0.0794%" height="15" fill="rgb(235,32,7)" fg:x="934" fg:w="1"/><text x="74.3770%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="74.2063%" y="421" width="0.1587%" height="15" fill="rgb(227,121,28)" fg:x="935" fg:w="2"/><text x="74.4563%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.2857%" y="405" width="0.0794%" height="15" fill="rgb(216,129,49)" fg:x="936" fg:w="1"/><text x="74.5357%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2857%" y="389" width="0.0794%" height="15" fill="rgb(207,194,50)" fg:x="936" fg:w="1"/><text x="74.5357%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="74.3651%" y="421" width="0.1587%" height="15" fill="rgb(207,4,18)" fg:x="937" fg:w="2"/><text x="74.6151%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.4444%" y="405" width="0.0794%" height="15" fill="rgb(213,50,30)" fg:x="938" fg:w="1"/><text x="74.6944%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5238%" y="389" width="0.0794%" height="15" fill="rgb(208,77,22)" fg:x="939" fg:w="1"/><text x="74.7738%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5238%" y="373" width="0.0794%" height="15" fill="rgb(244,204,34)" fg:x="939" fg:w="1"/><text x="74.7738%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.5238%" y="357" width="0.0794%" height="15" fill="rgb(230,20,17)" fg:x="939" fg:w="1"/><text x="74.7738%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="74.8413%" y="373" width="0.0794%" height="15" fill="rgb(237,83,15)" fg:x="943" fg:w="1"/><text x="75.0913%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.9206%" y="373" width="0.1587%" height="15" fill="rgb(221,109,25)" fg:x="944" fg:w="2"/><text x="75.1706%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="75.0794%" y="373" width="0.2381%" height="15" fill="rgb(205,194,52)" fg:x="946" fg:w="3"/><text x="75.3294%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.1587%" y="357" width="0.1587%" height="15" fill="rgb(244,173,54)" fg:x="947" fg:w="2"/><text x="75.4087%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2381%" y="341" width="0.0794%" height="15" fill="rgb(227,181,18)" fg:x="948" fg:w="1"/><text x="75.4881%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.3175%" y="341" width="0.1587%" height="15" fill="rgb(238,36,30)" fg:x="949" fg:w="2"/><text x="75.5675%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="75.3175%" y="357" width="0.3968%" height="15" fill="rgb(254,85,0)" fg:x="949" fg:w="5"/><text x="75.5675%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="75.4762%" y="341" width="0.2381%" height="15" fill="rgb(247,63,33)" fg:x="951" fg:w="3"/><text x="75.7262%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6349%" y="325" width="0.0794%" height="15" fill="rgb(220,7,54)" fg:x="953" fg:w="1"/><text x="75.8849%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7143%" y="341" width="0.0794%" height="15" fill="rgb(238,227,21)" fg:x="954" fg:w="1"/><text x="75.9643%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7937%" y="309" width="0.0794%" height="15" fill="rgb(237,29,31)" fg:x="955" fg:w="1"/><text x="76.0437%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (18 samples, 1.43%)</title><rect x="74.5238%" y="421" width="1.4286%" height="15" fill="rgb(211,21,50)" fg:x="939" fg:w="18"/><text x="74.7738%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.43%)</title><rect x="74.5238%" y="405" width="1.4286%" height="15" fill="rgb(239,119,2)" fg:x="939" fg:w="18"/><text x="74.7738%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.35%)</title><rect x="74.6032%" y="389" width="1.3492%" height="15" fill="rgb(250,2,39)" fg:x="940" fg:w="17"/><text x="74.8532%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (8 samples, 0.63%)</title><rect x="75.3175%" y="373" width="0.6349%" height="15" fill="rgb(244,46,53)" fg:x="949" fg:w="8"/><text x="75.5675%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="75.7143%" y="357" width="0.2381%" height="15" fill="rgb(209,21,19)" fg:x="954" fg:w="3"/><text x="75.9643%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="75.7937%" y="341" width="0.1587%" height="15" fill="rgb(236,145,4)" fg:x="955" fg:w="2"/><text x="76.0437%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="75.7937%" y="325" width="0.1587%" height="15" fill="rgb(220,133,36)" fg:x="955" fg:w="2"/><text x="76.0437%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8730%" y="309" width="0.0794%" height="15" fill="rgb(244,18,3)" fg:x="956" fg:w="1"/><text x="76.1230%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8730%" y="293" width="0.0794%" height="15" fill="rgb(232,171,48)" fg:x="956" fg:w="1"/><text x="76.1230%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8730%" y="277" width="0.0794%" height="15" fill="rgb(223,223,53)" fg:x="956" fg:w="1"/><text x="76.1230%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="75.9524%" y="405" width="0.0794%" height="15" fill="rgb(246,92,13)" fg:x="957" fg:w="1"/><text x="76.2024%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (2 samples, 0.16%)</title><rect x="75.9524%" y="421" width="0.1587%" height="15" fill="rgb(229,171,10)" fg:x="957" fg:w="2"/><text x="76.2024%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.0317%" y="405" width="0.0794%" height="15" fill="rgb(213,131,26)" fg:x="958" fg:w="1"/><text x="76.2817%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0317%" y="389" width="0.0794%" height="15" fill="rgb(242,87,54)" fg:x="958" fg:w="1"/><text x="76.2817%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1905%" y="405" width="0.0794%" height="15" fill="rgb(237,21,35)" fg:x="960" fg:w="1"/><text x="76.4405%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="76.2698%" y="373" width="0.2381%" height="15" fill="rgb(253,13,47)" fg:x="961" fg:w="3"/><text x="76.5198%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4286%" y="357" width="0.0794%" height="15" fill="rgb(215,122,49)" fg:x="963" fg:w="1"/><text x="76.6786%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="76.5079%" y="357" width="0.0794%" height="15" fill="rgb(209,179,30)" fg:x="964" fg:w="1"/><text x="76.7579%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5079%" y="341" width="0.0794%" height="15" fill="rgb(235,100,24)" fg:x="964" fg:w="1"/><text x="76.7579%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.7460%" y="341" width="0.0794%" height="15" fill="rgb(209,67,24)" fg:x="967" fg:w="1"/><text x="76.9960%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="76.9048%" y="325" width="0.2381%" height="15" fill="rgb(206,74,32)" fg:x="969" fg:w="3"/><text x="77.1548%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.9841%" y="309" width="0.1587%" height="15" fill="rgb(212,45,25)" fg:x="970" fg:w="2"/><text x="77.2341%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="76.8254%" y="341" width="0.3968%" height="15" fill="rgb(239,26,3)" fg:x="968" fg:w="5"/><text x="77.0754%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.1429%" y="325" width="0.0794%" height="15" fill="rgb(218,36,15)" fg:x="972" fg:w="1"/><text x="77.3929%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1429%" y="309" width="0.0794%" height="15" fill="rgb(206,108,24)" fg:x="972" fg:w="1"/><text x="77.3929%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (10 samples, 0.79%)</title><rect x="76.5079%" y="373" width="0.7937%" height="15" fill="rgb(234,204,42)" fg:x="964" fg:w="10"/><text x="76.7579%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.71%)</title><rect x="76.5873%" y="357" width="0.7143%" height="15" fill="rgb(229,2,11)" fg:x="965" fg:w="9"/><text x="76.8373%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.2222%" y="341" width="0.0794%" height="15" fill="rgb(221,20,48)" fg:x="973" fg:w="1"/><text x="77.4722%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="77.6190%" y="357" width="0.0794%" height="15" fill="rgb(244,164,10)" fg:x="978" fg:w="1"/><text x="77.8690%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="77.6984%" y="357" width="0.3175%" height="15" fill="rgb(243,229,2)" fg:x="979" fg:w="4"/><text x="77.9484%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="77.7778%" y="341" width="0.2381%" height="15" fill="rgb(232,131,37)" fg:x="980" fg:w="3"/><text x="78.0278%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.8571%" y="325" width="0.1587%" height="15" fill="rgb(217,156,11)" fg:x="981" fg:w="2"/><text x="78.1071%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="77.9365%" y="309" width="0.0794%" height="15" fill="rgb(239,99,48)" fg:x="982" fg:w="1"/><text x="78.1865%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.83%)</title><rect x="76.2698%" y="389" width="1.8254%" height="15" fill="rgb(231,209,9)" fg:x="961" fg:w="23"/><text x="76.5198%" y="399.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.79%)</title><rect x="77.3016%" y="373" width="0.7937%" height="15" fill="rgb(254,97,27)" fg:x="974" fg:w="10"/><text x="77.5516%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0159%" y="357" width="0.0794%" height="15" fill="rgb(223,151,38)" fg:x="983" fg:w="1"/><text x="78.2659%" y="367.50"></text></g><g><title>&lt;plugins_rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (174 samples, 13.81%)</title><rect x="64.5238%" y="485" width="13.8095%" height="15" fill="rgb(219,206,35)" fg:x="813" fg:w="174"/><text x="64.7738%" y="495.50">&lt;plugins_rpc_proto::J..</text></g><g><title>kernel::model::EntityPtr::to_json_value (75 samples, 5.95%)</title><rect x="72.3810%" y="469" width="5.9524%" height="15" fill="rgb(216,130,31)" fg:x="912" fg:w="75"/><text x="72.6310%" y="479.50">kernel::..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (75 samples, 5.95%)</title><rect x="72.3810%" y="453" width="5.9524%" height="15" fill="rgb(251,97,34)" fg:x="912" fg:w="75"/><text x="72.6310%" y="463.50">kernel::..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (75 samples, 5.95%)</title><rect x="72.3810%" y="437" width="5.9524%" height="15" fill="rgb(246,159,47)" fg:x="912" fg:w="75"/><text x="72.6310%" y="447.50">&lt;serde_j..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.22%)</title><rect x="76.1111%" y="421" width="2.2222%" height="15" fill="rgb(232,87,10)" fg:x="959" fg:w="28"/><text x="76.3611%" y="431.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (26 samples, 2.06%)</title><rect x="76.2698%" y="405" width="2.0635%" height="15" fill="rgb(249,1,37)" fg:x="961" fg:w="26"/><text x="76.5198%" y="415.50">k..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="78.0952%" y="389" width="0.2381%" height="15" fill="rgb(239,135,14)" fg:x="984" fg:w="3"/><text x="78.3452%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="78.1746%" y="373" width="0.1587%" height="15" fill="rgb(253,116,46)" fg:x="985" fg:w="2"/><text x="78.4246%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3333%" y="485" width="0.0794%" height="15" fill="rgb(222,217,37)" fg:x="987" fg:w="1"/><text x="78.5833%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.4921%" y="469" width="0.0794%" height="15" fill="rgb(252,96,8)" fg:x="989" fg:w="1"/><text x="78.7421%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (324 samples, 25.71%)</title><rect x="53.0159%" y="549" width="25.7143%" height="15" fill="rgb(254,103,41)" fg:x="668" fg:w="324"/><text x="53.2659%" y="559.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (201 samples, 15.95%)</title><rect x="62.7778%" y="533" width="15.9524%" height="15" fill="rgb(218,213,19)" fg:x="791" fg:w="201"/><text x="63.0278%" y="543.50">alloc::vec::in_place_coll..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (199 samples, 15.79%)</title><rect x="62.9365%" y="517" width="15.7937%" height="15" fill="rgb(253,95,21)" fg:x="793" fg:w="199"/><text x="63.1865%" y="527.50">&lt;core::iter::adapters::m..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (197 samples, 15.63%)</title><rect x="63.0952%" y="501" width="15.6349%" height="15" fill="rgb(229,26,28)" fg:x="795" fg:w="197"/><text x="63.3452%" y="511.50">plugins_rpc::sessions::S..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (4 samples, 0.32%)</title><rect x="78.4127%" y="485" width="0.3175%" height="15" fill="rgb(230,129,16)" fg:x="988" fg:w="4"/><text x="78.6627%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="78.5714%" y="469" width="0.1587%" height="15" fill="rgb(236,126,17)" fg:x="990" fg:w="2"/><text x="78.8214%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.5714%" y="453" width="0.1587%" height="15" fill="rgb(209,33,33)" fg:x="990" fg:w="2"/><text x="78.8214%" y="463.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (338 samples, 26.83%)</title><rect x="51.9841%" y="565" width="26.8254%" height="15" fill="rgb(227,85,29)" fg:x="655" fg:w="338"/><text x="52.2341%" y="575.50">&lt;plugins_rpc::sessions::SessionServices as ..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7302%" y="549" width="0.0794%" height="15" fill="rgb(241,53,46)" fg:x="992" fg:w="1"/><text x="78.9802%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.7302%" y="533" width="0.0794%" height="15" fill="rgb(228,167,53)" fg:x="992" fg:w="1"/><text x="78.9802%" y="543.50"></text></g><g><title>&lt;plugins_rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="78.8095%" y="565" width="0.0794%" height="15" fill="rgb(238,195,45)" fg:x="993" fg:w="1"/><text x="79.0595%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.8095%" y="549" width="0.0794%" height="15" fill="rgb(252,124,45)" fg:x="993" fg:w="1"/><text x="79.0595%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.8095%" y="533" width="0.0794%" height="15" fill="rgb(251,38,35)" fg:x="993" fg:w="1"/><text x="79.0595%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.8095%" y="517" width="0.0794%" height="15" fill="rgb(227,33,2)" fg:x="993" fg:w="1"/><text x="79.0595%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.8095%" y="501" width="0.0794%" height="15" fill="rgb(223,157,46)" fg:x="993" fg:w="1"/><text x="79.0595%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.8095%" y="485" width="0.0794%" height="15" fill="rgb(222,78,41)" fg:x="993" fg:w="1"/><text x="79.0595%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.8095%" y="469" width="0.0794%" height="15" fill="rgb(248,176,11)" fg:x="993" fg:w="1"/><text x="79.0595%" y="479.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="78.8889%" y="565" width="0.3175%" height="15" fill="rgb(241,221,18)" fg:x="994" fg:w="4"/><text x="79.1389%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (376 samples, 29.84%)</title><rect x="49.5238%" y="613" width="29.8413%" height="15" fill="rgb(218,85,22)" fg:x="624" fg:w="376"/><text x="49.7738%" y="623.50">kernel::plugins::SessionPlugins::have_surroundin..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (376 samples, 29.84%)</title><rect x="49.5238%" y="597" width="29.8413%" height="15" fill="rgb(222,223,7)" fg:x="624" fg:w="376"/><text x="49.7738%" y="607.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugin..</text></g><g><title>plugins_rpc::querying::have_surroundings (345 samples, 27.38%)</title><rect x="51.9841%" y="581" width="27.3810%" height="15" fill="rgb(254,59,39)" fg:x="655" fg:w="345"/><text x="52.2341%" y="591.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="79.2063%" y="565" width="0.1587%" height="15" fill="rgb(247,100,27)" fg:x="998" fg:w="2"/><text x="79.4563%" y="575.50"></text></g><g><title>plugins_rpc_proto::&lt;impl core::convert::Into&lt;plugins_rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (2 samples, 0.16%)</title><rect x="79.2063%" y="549" width="0.1587%" height="15" fill="rgb(237,207,10)" fg:x="998" fg:w="2"/><text x="79.4563%" y="559.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="79.2857%" y="533" width="0.0794%" height="15" fill="rgb(220,121,28)" fg:x="999" fg:w="1"/><text x="79.5357%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.2857%" y="517" width="0.0794%" height="15" fill="rgb(213,223,20)" fg:x="999" fg:w="1"/><text x="79.5357%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.2857%" y="501" width="0.0794%" height="15" fill="rgb(205,121,27)" fg:x="999" fg:w="1"/><text x="79.5357%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.2857%" y="485" width="0.0794%" height="15" fill="rgb(253,24,53)" fg:x="999" fg:w="1"/><text x="79.5357%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="79.2857%" y="469" width="0.0794%" height="15" fill="rgb(224,224,47)" fg:x="999" fg:w="1"/><text x="79.5357%" y="479.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (436 samples, 34.60%)</title><rect x="44.8413%" y="645" width="34.6032%" height="15" fill="rgb(250,125,36)" fg:x="565" fg:w="436"/><text x="45.0913%" y="655.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (436 samples, 34.60%)</title><rect x="44.8413%" y="629" width="34.6032%" height="15" fill="rgb(240,144,38)" fg:x="565" fg:w="436"/><text x="45.0913%" y="639.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="79.3651%" y="613" width="0.0794%" height="15" fill="rgb(250,15,50)" fg:x="1000" fg:w="1"/><text x="79.6151%" y="623.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="79.3651%" y="597" width="0.0794%" height="15" fill="rgb(210,24,26)" fg:x="1000" fg:w="1"/><text x="79.6151%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,002 samples, 79.52%)</title><rect x="0.0000%" y="693" width="79.5238%" height="15" fill="rgb(234,53,53)" fg:x="0" fg:w="1002"/><text x="0.2500%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (1,002 samples, 79.52%)</title><rect x="0.0000%" y="677" width="79.5238%" height="15" fill="rgb(208,108,28)" fg:x="0" fg:w="1002"/><text x="0.2500%" y="687.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (1,002 samples, 79.52%)</title><rect x="0.0000%" y="661" width="79.5238%" height="15" fill="rgb(227,143,7)" fg:x="0" fg:w="1002"/><text x="0.2500%" y="671.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="79.4444%" y="645" width="0.0794%" height="15" fill="rgb(238,189,38)" fg:x="1001" fg:w="1"/><text x="79.6944%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.4444%" y="629" width="0.0794%" height="15" fill="rgb(222,69,15)" fg:x="1001" fg:w="1"/><text x="79.6944%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5238%" y="597" width="0.0794%" height="15" fill="rgb(213,169,7)" fg:x="1002" fg:w="1"/><text x="79.7738%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6032%" y="549" width="0.0794%" height="15" fill="rgb(251,219,4)" fg:x="1003" fg:w="1"/><text x="79.8532%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.6825%" y="517" width="0.1587%" height="15" fill="rgb(241,55,40)" fg:x="1004" fg:w="2"/><text x="79.9325%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.8413%" y="501" width="0.0794%" height="15" fill="rgb(243,57,30)" fg:x="1006" fg:w="1"/><text x="80.0913%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.8413%" y="485" width="0.0794%" height="15" fill="rgb(234,50,30)" fg:x="1006" fg:w="1"/><text x="80.0913%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8413%" y="469" width="0.0794%" height="15" fill="rgb(239,23,42)" fg:x="1006" fg:w="1"/><text x="80.0913%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="79.6032%" y="565" width="0.3968%" height="15" fill="rgb(217,38,19)" fg:x="1003" fg:w="5"/><text x="79.8532%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.6825%" y="549" width="0.3175%" height="15" fill="rgb(215,179,16)" fg:x="1004" fg:w="4"/><text x="79.9325%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="79.6825%" y="533" width="0.3175%" height="15" fill="rgb(254,21,37)" fg:x="1004" fg:w="4"/><text x="79.9325%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.8413%" y="517" width="0.1587%" height="15" fill="rgb(219,207,48)" fg:x="1006" fg:w="2"/><text x="80.0913%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.9206%" y="501" width="0.0794%" height="15" fill="rgb(227,225,41)" fg:x="1007" fg:w="1"/><text x="80.1706%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9206%" y="485" width="0.0794%" height="15" fill="rgb(223,130,1)" fg:x="1007" fg:w="1"/><text x="80.1706%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="79.5238%" y="645" width="0.5556%" height="15" fill="rgb(249,54,42)" fg:x="1002" fg:w="7"/><text x="79.7738%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (7 samples, 0.56%)</title><rect x="79.5238%" y="629" width="0.5556%" height="15" fill="rgb(248,69,25)" fg:x="1002" fg:w="7"/><text x="79.7738%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="79.5238%" y="613" width="0.5556%" height="15" fill="rgb(234,21,32)" fg:x="1002" fg:w="7"/><text x="79.7738%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (6 samples, 0.48%)</title><rect x="79.6032%" y="597" width="0.4762%" height="15" fill="rgb(252,136,6)" fg:x="1003" fg:w="6"/><text x="79.8532%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.6032%" y="581" width="0.4762%" height="15" fill="rgb(245,87,12)" fg:x="1003" fg:w="6"/><text x="79.8532%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0000%" y="565" width="0.0794%" height="15" fill="rgb(208,12,15)" fg:x="1008" fg:w="1"/><text x="80.2500%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="80.0794%" y="581" width="0.0794%" height="15" fill="rgb(250,98,2)" fg:x="1009" fg:w="1"/><text x="80.3294%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="80.0794%" y="565" width="0.0794%" height="15" fill="rgb(205,213,15)" fg:x="1009" fg:w="1"/><text x="80.3294%" y="575.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="80.0794%" y="549" width="0.0794%" height="15" fill="rgb(248,192,44)" fg:x="1009" fg:w="1"/><text x="80.3294%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="80.1587%" y="581" width="0.0794%" height="15" fill="rgb(221,89,17)" fg:x="1010" fg:w="1"/><text x="80.4087%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1587%" y="565" width="0.0794%" height="15" fill="rgb(209,55,3)" fg:x="1010" fg:w="1"/><text x="80.4087%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1587%" y="549" width="0.0794%" height="15" fill="rgb(247,23,45)" fg:x="1010" fg:w="1"/><text x="80.4087%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="80.1587%" y="533" width="0.0794%" height="15" fill="rgb(235,152,23)" fg:x="1010" fg:w="1"/><text x="80.4087%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="80.2381%" y="501" width="0.1587%" height="15" fill="rgb(244,63,13)" fg:x="1011" fg:w="2"/><text x="80.4881%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.2381%" y="485" width="0.1587%" height="15" fill="rgb(227,30,37)" fg:x="1011" fg:w="2"/><text x="80.4881%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.2381%" y="469" width="0.1587%" height="15" fill="rgb(224,49,42)" fg:x="1011" fg:w="2"/><text x="80.4881%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="80.2381%" y="453" width="0.1587%" height="15" fill="rgb(218,129,5)" fg:x="1011" fg:w="2"/><text x="80.4881%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="80.2381%" y="437" width="0.1587%" height="15" fill="rgb(240,199,54)" fg:x="1011" fg:w="2"/><text x="80.4881%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="80.2381%" y="565" width="0.2381%" height="15" fill="rgb(234,31,13)" fg:x="1011" fg:w="3"/><text x="80.4881%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="80.2381%" y="549" width="0.2381%" height="15" fill="rgb(219,73,54)" fg:x="1011" fg:w="3"/><text x="80.4881%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="80.2381%" y="533" width="0.2381%" height="15" fill="rgb(251,162,10)" fg:x="1011" fg:w="3"/><text x="80.4881%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="80.2381%" y="517" width="0.2381%" height="15" fill="rgb(240,138,47)" fg:x="1011" fg:w="3"/><text x="80.4881%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.3968%" y="501" width="0.0794%" height="15" fill="rgb(216,138,26)" fg:x="1013" fg:w="1"/><text x="80.6468%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3968%" y="485" width="0.0794%" height="15" fill="rgb(243,17,35)" fg:x="1013" fg:w="1"/><text x="80.6468%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.3968%" y="469" width="0.0794%" height="15" fill="rgb(241,60,18)" fg:x="1013" fg:w="1"/><text x="80.6468%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3968%" y="453" width="0.0794%" height="15" fill="rgb(234,2,44)" fg:x="1013" fg:w="1"/><text x="80.6468%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4762%" y="517" width="0.0794%" height="15" fill="rgb(225,225,33)" fg:x="1014" fg:w="1"/><text x="80.7262%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4762%" y="501" width="0.0794%" height="15" fill="rgb(234,50,31)" fg:x="1014" fg:w="1"/><text x="80.7262%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.5556%" y="485" width="0.0794%" height="15" fill="rgb(249,6,25)" fg:x="1015" fg:w="1"/><text x="80.8056%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.63%)</title><rect x="80.0794%" y="613" width="0.6349%" height="15" fill="rgb(241,5,17)" fg:x="1009" fg:w="8"/><text x="80.3294%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.63%)</title><rect x="80.0794%" y="597" width="0.6349%" height="15" fill="rgb(207,116,10)" fg:x="1009" fg:w="8"/><text x="80.3294%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="80.2381%" y="581" width="0.4762%" height="15" fill="rgb(222,128,18)" fg:x="1011" fg:w="6"/><text x="80.4881%" y="591.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="80.4762%" y="565" width="0.2381%" height="15" fill="rgb(229,109,25)" fg:x="1014" fg:w="3"/><text x="80.7262%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="80.4762%" y="549" width="0.2381%" height="15" fill="rgb(222,102,25)" fg:x="1014" fg:w="3"/><text x="80.7262%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="80.4762%" y="533" width="0.2381%" height="15" fill="rgb(239,211,5)" fg:x="1014" fg:w="3"/><text x="80.7262%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.5556%" y="517" width="0.1587%" height="15" fill="rgb(223,136,26)" fg:x="1015" fg:w="2"/><text x="80.8056%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="80.5556%" y="501" width="0.1587%" height="15" fill="rgb(227,30,15)" fg:x="1015" fg:w="2"/><text x="80.8056%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.6349%" y="485" width="0.0794%" height="15" fill="rgb(247,76,4)" fg:x="1016" fg:w="1"/><text x="80.8849%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.6349%" y="469" width="0.0794%" height="15" fill="rgb(245,38,48)" fg:x="1016" fg:w="1"/><text x="80.8849%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.6349%" y="453" width="0.0794%" height="15" fill="rgb(210,220,14)" fg:x="1016" fg:w="1"/><text x="80.8849%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.6349%" y="437" width="0.0794%" height="15" fill="rgb(224,60,51)" fg:x="1016" fg:w="1"/><text x="80.8849%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.6349%" y="421" width="0.0794%" height="15" fill="rgb(212,133,49)" fg:x="1016" fg:w="1"/><text x="80.8849%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.6349%" y="405" width="0.0794%" height="15" fill="rgb(231,39,22)" fg:x="1016" fg:w="1"/><text x="80.8849%" y="415.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="80.7143%" y="613" width="0.0794%" height="15" fill="rgb(236,173,22)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="80.7143%" y="597" width="0.0794%" height="15" fill="rgb(210,70,0)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="80.7143%" y="581" width="0.0794%" height="15" fill="rgb(215,170,11)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.7143%" y="565" width="0.0794%" height="15" fill="rgb(220,154,28)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.7143%" y="549" width="0.0794%" height="15" fill="rgb(240,160,41)" fg:x="1017" fg:w="1"/><text x="80.9643%" y="559.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="80.8730%" y="581" width="0.0794%" height="15" fill="rgb(243,215,41)" fg:x="1019" fg:w="1"/><text x="81.1230%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8730%" y="565" width="0.0794%" height="15" fill="rgb(214,208,31)" fg:x="1019" fg:w="1"/><text x="81.1230%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="80.7937%" y="597" width="0.4762%" height="15" fill="rgb(247,57,22)" fg:x="1018" fg:w="6"/><text x="81.0437%" y="607.50"></text></g><g><title>libloading::os::unix::Library::open (4 samples, 0.32%)</title><rect x="80.9524%" y="581" width="0.3175%" height="15" fill="rgb(228,73,52)" fg:x="1020" fg:w="4"/><text x="81.2024%" y="591.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="80.9524%" y="565" width="0.3175%" height="15" fill="rgb(252,60,9)" fg:x="1020" fg:w="4"/><text x="81.2024%" y="575.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="80.9524%" y="549" width="0.3175%" height="15" fill="rgb(233,9,51)" fg:x="1020" fg:w="4"/><text x="81.2024%" y="559.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="80.9524%" y="533" width="0.3175%" height="15" fill="rgb(223,67,14)" fg:x="1020" fg:w="4"/><text x="81.2024%" y="543.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="80.9524%" y="517" width="0.3175%" height="15" fill="rgb(222,86,2)" fg:x="1020" fg:w="4"/><text x="81.2024%" y="527.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="80.9524%" y="501" width="0.3175%" height="15" fill="rgb(243,58,54)" fg:x="1020" fg:w="4"/><text x="81.2024%" y="511.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="81.1905%" y="485" width="0.0794%" height="15" fill="rgb(210,200,39)" fg:x="1023" fg:w="1"/><text x="81.4405%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (16 samples, 1.27%)</title><rect x="80.0794%" y="645" width="1.2698%" height="15" fill="rgb(238,135,9)" fg:x="1009" fg:w="16"/><text x="80.3294%" y="655.50"></text></g><g><title>engine::session::Session::new (16 samples, 1.27%)</title><rect x="80.0794%" y="629" width="1.2698%" height="15" fill="rgb(232,179,7)" fg:x="1009" fg:w="16"/><text x="80.3294%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.56%)</title><rect x="80.7937%" y="613" width="0.5556%" height="15" fill="rgb(245,65,41)" fg:x="1018" fg:w="7"/><text x="81.0437%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="81.2698%" y="597" width="0.0794%" height="15" fill="rgb(227,43,8)" fg:x="1024" fg:w="1"/><text x="81.5198%" y="607.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="81.2698%" y="581" width="0.0794%" height="15" fill="rgb(235,91,14)" fg:x="1024" fg:w="1"/><text x="81.5198%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="81.4286%" y="549" width="0.3175%" height="15" fill="rgb(235,219,31)" fg:x="1026" fg:w="4"/><text x="81.6786%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="81.4286%" y="533" width="0.3175%" height="15" fill="rgb(227,121,25)" fg:x="1026" fg:w="4"/><text x="81.6786%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="81.5079%" y="517" width="0.2381%" height="15" fill="rgb(254,129,24)" fg:x="1027" fg:w="3"/><text x="81.7579%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.6667%" y="501" width="0.0794%" height="15" fill="rgb(226,144,49)" fg:x="1029" fg:w="1"/><text x="81.9167%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.6667%" y="485" width="0.0794%" height="15" fill="rgb(214,187,32)" fg:x="1029" fg:w="1"/><text x="81.9167%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.6667%" y="469" width="0.0794%" height="15" fill="rgb(243,129,46)" fg:x="1029" fg:w="1"/><text x="81.9167%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.7460%" y="533" width="0.0794%" height="15" fill="rgb(221,185,35)" fg:x="1030" fg:w="1"/><text x="81.9960%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.7460%" y="517" width="0.0794%" height="15" fill="rgb(205,0,32)" fg:x="1030" fg:w="1"/><text x="81.9960%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.8254%" y="533" width="0.0794%" height="15" fill="rgb(229,179,12)" fg:x="1031" fg:w="1"/><text x="82.0754%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.9048%" y="501" width="0.0794%" height="15" fill="rgb(252,107,19)" fg:x="1032" fg:w="1"/><text x="82.1548%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.9048%" y="485" width="0.0794%" height="15" fill="rgb(220,95,27)" fg:x="1032" fg:w="1"/><text x="82.1548%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.9048%" y="469" width="0.0794%" height="15" fill="rgb(240,113,40)" fg:x="1032" fg:w="1"/><text x="82.1548%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.0635%" y="485" width="0.0794%" height="15" fill="rgb(208,4,43)" fg:x="1034" fg:w="1"/><text x="82.3135%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.0635%" y="469" width="0.0794%" height="15" fill="rgb(247,189,30)" fg:x="1034" fg:w="1"/><text x="82.3135%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.0635%" y="453" width="0.0794%" height="15" fill="rgb(231,157,17)" fg:x="1034" fg:w="1"/><text x="82.3135%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.9841%" y="501" width="0.2381%" height="15" fill="rgb(224,139,6)" fg:x="1033" fg:w="3"/><text x="82.2341%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.1429%" y="485" width="0.0794%" height="15" fill="rgb(223,83,16)" fg:x="1035" fg:w="1"/><text x="82.3929%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.1429%" y="469" width="0.0794%" height="15" fill="rgb(232,211,20)" fg:x="1035" fg:w="1"/><text x="82.3929%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="81.9048%" y="533" width="0.3968%" height="15" fill="rgb(225,203,35)" fg:x="1032" fg:w="5"/><text x="82.1548%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="81.9048%" y="517" width="0.3968%" height="15" fill="rgb(215,211,44)" fg:x="1032" fg:w="5"/><text x="82.1548%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2222%" y="501" width="0.0794%" height="15" fill="rgb(248,213,26)" fg:x="1036" fg:w="1"/><text x="82.4722%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.95%)</title><rect x="81.4286%" y="565" width="0.9524%" height="15" fill="rgb(214,23,52)" fg:x="1026" fg:w="12"/><text x="81.6786%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="81.7460%" y="549" width="0.6349%" height="15" fill="rgb(225,173,50)" fg:x="1030" fg:w="8"/><text x="81.9960%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3016%" y="533" width="0.0794%" height="15" fill="rgb(206,150,22)" fg:x="1037" fg:w="1"/><text x="82.5516%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.3016%" y="517" width="0.0794%" height="15" fill="rgb(239,64,23)" fg:x="1037" fg:w="1"/><text x="82.5516%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.3016%" y="501" width="0.0794%" height="15" fill="rgb(242,50,38)" fg:x="1037" fg:w="1"/><text x="82.5516%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.3016%" y="485" width="0.0794%" height="15" fill="rgb(217,91,15)" fg:x="1037" fg:w="1"/><text x="82.5516%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.3016%" y="469" width="0.0794%" height="15" fill="rgb(230,172,6)" fg:x="1037" fg:w="1"/><text x="82.5516%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3810%" y="533" width="0.0794%" height="15" fill="rgb(221,98,26)" fg:x="1038" fg:w="1"/><text x="82.6310%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.3810%" y="565" width="0.2381%" height="15" fill="rgb(227,210,45)" fg:x="1038" fg:w="3"/><text x="82.6310%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="82.3810%" y="549" width="0.2381%" height="15" fill="rgb(206,8,30)" fg:x="1038" fg:w="3"/><text x="82.6310%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.4603%" y="533" width="0.1587%" height="15" fill="rgb(241,219,17)" fg:x="1039" fg:w="2"/><text x="82.7103%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="82.4603%" y="517" width="0.1587%" height="15" fill="rgb(247,121,29)" fg:x="1039" fg:w="2"/><text x="82.7103%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="82.4603%" y="501" width="0.1587%" height="15" fill="rgb(219,169,49)" fg:x="1039" fg:w="2"/><text x="82.7103%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6190%" y="517" width="0.0794%" height="15" fill="rgb(253,49,49)" fg:x="1041" fg:w="1"/><text x="82.8690%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6190%" y="501" width="0.0794%" height="15" fill="rgb(217,178,3)" fg:x="1041" fg:w="1"/><text x="82.8690%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.6190%" y="485" width="0.0794%" height="15" fill="rgb(234,73,37)" fg:x="1041" fg:w="1"/><text x="82.8690%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6984%" y="517" width="0.0794%" height="15" fill="rgb(250,98,22)" fg:x="1042" fg:w="1"/><text x="82.9484%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="82.7778%" y="517" width="0.2381%" height="15" fill="rgb(220,108,37)" fg:x="1043" fg:w="3"/><text x="83.0278%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="82.7778%" y="501" width="0.2381%" height="15" fill="rgb(225,168,10)" fg:x="1043" fg:w="3"/><text x="83.0278%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="82.8571%" y="485" width="0.1587%" height="15" fill="rgb(247,215,21)" fg:x="1044" fg:w="2"/><text x="83.1071%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9365%" y="469" width="0.0794%" height="15" fill="rgb(253,189,31)" fg:x="1045" fg:w="1"/><text x="83.1865%" y="479.50"></text></g><g><title>engine::session::Session::flush (22 samples, 1.75%)</title><rect x="81.3492%" y="629" width="1.7460%" height="15" fill="rgb(241,54,22)" fg:x="1025" fg:w="22"/><text x="81.5992%" y="639.50"></text></g><g><title>engine::session::Session::save_entity_changes (22 samples, 1.75%)</title><rect x="81.3492%" y="613" width="1.7460%" height="15" fill="rgb(211,87,4)" fg:x="1025" fg:w="22"/><text x="81.5992%" y="623.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (21 samples, 1.67%)</title><rect x="81.4286%" y="597" width="1.6667%" height="15" fill="rgb(245,112,24)" fg:x="1026" fg:w="21"/><text x="81.6786%" y="607.50"></text></g><g><title>engine::session::Session::check_for_changes (21 samples, 1.67%)</title><rect x="81.4286%" y="581" width="1.6667%" height="15" fill="rgb(235,190,41)" fg:x="1026" fg:w="21"/><text x="81.6786%" y="591.50"></text></g><g><title>kernel::compare::any_entity_changes (6 samples, 0.48%)</title><rect x="82.6190%" y="565" width="0.4762%" height="15" fill="rgb(214,89,8)" fg:x="1041" fg:w="6"/><text x="82.8690%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="82.6190%" y="549" width="0.4762%" height="15" fill="rgb(249,155,35)" fg:x="1041" fg:w="6"/><text x="82.8690%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="82.6190%" y="533" width="0.4762%" height="15" fill="rgb(249,88,26)" fg:x="1041" fg:w="6"/><text x="82.8690%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0159%" y="517" width="0.0794%" height="15" fill="rgb(232,56,8)" fg:x="1046" fg:w="1"/><text x="83.2659%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.0952%" y="613" width="0.0794%" height="15" fill="rgb(240,95,3)" fg:x="1047" fg:w="1"/><text x="83.3452%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="83.0952%" y="597" width="0.0794%" height="15" fill="rgb(222,44,28)" fg:x="1047" fg:w="1"/><text x="83.3452%" y="607.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="83.0952%" y="581" width="0.0794%" height="15" fill="rgb(234,16,30)" fg:x="1047" fg:w="1"/><text x="83.3452%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="83.0952%" y="565" width="0.0794%" height="15" fill="rgb(223,26,17)" fg:x="1047" fg:w="1"/><text x="83.3452%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1746%" y="565" width="0.0794%" height="15" fill="rgb(239,187,47)" fg:x="1048" fg:w="1"/><text x="83.4246%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1746%" y="549" width="0.0794%" height="15" fill="rgb(247,102,50)" fg:x="1048" fg:w="1"/><text x="83.4246%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.1746%" y="533" width="0.0794%" height="15" fill="rgb(231,216,22)" fg:x="1048" fg:w="1"/><text x="83.4246%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1746%" y="517" width="0.0794%" height="15" fill="rgb(216,201,26)" fg:x="1048" fg:w="1"/><text x="83.4246%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1746%" y="501" width="0.0794%" height="15" fill="rgb(214,186,23)" fg:x="1048" fg:w="1"/><text x="83.4246%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1746%" y="485" width="0.0794%" height="15" fill="rgb(235,184,4)" fg:x="1048" fg:w="1"/><text x="83.4246%" y="495.50"></text></g><g><title>plugins_core::build::Build::holding (3 samples, 0.24%)</title><rect x="83.0952%" y="629" width="0.2381%" height="15" fill="rgb(244,46,17)" fg:x="1047" fg:w="3"/><text x="83.3452%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="83.1746%" y="613" width="0.1587%" height="15" fill="rgb(248,74,46)" fg:x="1048" fg:w="2"/><text x="83.4246%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="83.1746%" y="597" width="0.1587%" height="15" fill="rgb(243,79,5)" fg:x="1048" fg:w="2"/><text x="83.4246%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="83.1746%" y="581" width="0.1587%" height="15" fill="rgb(213,148,1)" fg:x="1048" fg:w="2"/><text x="83.4246%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2540%" y="565" width="0.0794%" height="15" fill="rgb(221,30,0)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2540%" y="549" width="0.0794%" height="15" fill="rgb(207,85,29)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2540%" y="533" width="0.0794%" height="15" fill="rgb(239,31,46)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2540%" y="517" width="0.0794%" height="15" fill="rgb(219,6,1)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2540%" y="501" width="0.0794%" height="15" fill="rgb(229,90,29)" fg:x="1049" fg:w="1"/><text x="83.5040%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.3333%" y="613" width="0.0794%" height="15" fill="rgb(242,201,42)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="83.3333%" y="597" width="0.0794%" height="15" fill="rgb(243,80,54)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="83.3333%" y="581" width="0.0794%" height="15" fill="rgb(223,166,15)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.3333%" y="565" width="0.0794%" height="15" fill="rgb(238,78,27)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.3333%" y="549" width="0.0794%" height="15" fill="rgb(235,28,43)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.3333%" y="533" width="0.0794%" height="15" fill="rgb(240,210,28)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.3333%" y="517" width="0.0794%" height="15" fill="rgb(253,6,46)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="83.3333%" y="501" width="0.0794%" height="15" fill="rgb(250,159,47)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.3333%" y="485" width="0.0794%" height="15" fill="rgb(216,139,2)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.3333%" y="469" width="0.0794%" height="15" fill="rgb(221,124,44)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.3333%" y="453" width="0.0794%" height="15" fill="rgb(205,37,22)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="83.3333%" y="437" width="0.0794%" height="15" fill="rgb(250,55,8)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.3333%" y="421" width="0.0794%" height="15" fill="rgb(215,83,48)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.3333%" y="405" width="0.0794%" height="15" fill="rgb(253,2,32)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.3333%" y="389" width="0.0794%" height="15" fill="rgb(236,67,28)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3333%" y="373" width="0.0794%" height="15" fill="rgb(252,55,15)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3333%" y="357" width="0.0794%" height="15" fill="rgb(243,173,17)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="83.3333%" y="341" width="0.0794%" height="15" fill="rgb(215,212,13)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="83.3333%" y="325" width="0.0794%" height="15" fill="rgb(253,176,6)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="83.3333%" y="309" width="0.0794%" height="15" fill="rgb(236,105,26)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="83.3333%" y="293" width="0.0794%" height="15" fill="rgb(239,226,32)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.3333%" y="277" width="0.0794%" height="15" fill="rgb(236,104,51)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.3333%" y="261" width="0.0794%" height="15" fill="rgb(220,172,33)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.3333%" y="245" width="0.0794%" height="15" fill="rgb(224,182,25)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="83.3333%" y="229" width="0.0794%" height="15" fill="rgb(236,184,24)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.3333%" y="213" width="0.0794%" height="15" fill="rgb(241,221,14)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="83.3333%" y="197" width="0.0794%" height="15" fill="rgb(227,146,5)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="83.3333%" y="181" width="0.0794%" height="15" fill="rgb(214,15,23)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="83.3333%" y="165" width="0.0794%" height="15" fill="rgb(233,157,31)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.3333%" y="149" width="0.0794%" height="15" fill="rgb(211,27,52)" fg:x="1050" fg:w="1"/><text x="83.5833%" y="159.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="83.4127%" y="613" width="0.0794%" height="15" fill="rgb(212,223,15)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.4127%" y="597" width="0.0794%" height="15" fill="rgb(254,211,0)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="83.4127%" y="581" width="0.0794%" height="15" fill="rgb(205,43,38)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="591.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="83.4127%" y="565" width="0.0794%" height="15" fill="rgb(242,206,46)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="575.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="83.4127%" y="549" width="0.0794%" height="15" fill="rgb(220,221,12)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="83.4127%" y="533" width="0.0794%" height="15" fill="rgb(217,156,35)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="543.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="83.4127%" y="517" width="0.0794%" height="15" fill="rgb(207,181,49)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4127%" y="501" width="0.0794%" height="15" fill="rgb(235,103,47)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.4127%" y="485" width="0.0794%" height="15" fill="rgb(222,63,28)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4127%" y="469" width="0.0794%" height="15" fill="rgb(244,137,21)" fg:x="1051" fg:w="1"/><text x="83.6627%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="83.4921%" y="581" width="0.0794%" height="15" fill="rgb(228,35,27)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.4921%" y="565" width="0.0794%" height="15" fill="rgb(226,191,41)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.4921%" y="549" width="0.0794%" height="15" fill="rgb(210,154,3)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.4921%" y="533" width="0.0794%" height="15" fill="rgb(216,60,49)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.4921%" y="517" width="0.0794%" height="15" fill="rgb(226,17,20)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.4921%" y="501" width="0.0794%" height="15" fill="rgb(206,115,35)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.4921%" y="485" width="0.0794%" height="15" fill="rgb(227,88,1)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.4921%" y="469" width="0.0794%" height="15" fill="rgb(230,222,24)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.4921%" y="453" width="0.0794%" height="15" fill="rgb(214,124,32)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.4921%" y="437" width="0.0794%" height="15" fill="rgb(240,41,36)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.4921%" y="421" width="0.0794%" height="15" fill="rgb(221,17,52)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.4921%" y="405" width="0.0794%" height="15" fill="rgb(252,70,16)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4921%" y="389" width="0.0794%" height="15" fill="rgb(250,177,4)" fg:x="1052" fg:w="1"/><text x="83.7421%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="83.5714%" y="581" width="0.2381%" height="15" fill="rgb(240,188,47)" fg:x="1053" fg:w="3"/><text x="83.8214%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="83.6508%" y="565" width="0.1587%" height="15" fill="rgb(215,92,12)" fg:x="1054" fg:w="2"/><text x="83.9008%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="83.6508%" y="549" width="0.1587%" height="15" fill="rgb(242,110,29)" fg:x="1054" fg:w="2"/><text x="83.9008%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7302%" y="533" width="0.0794%" height="15" fill="rgb(208,211,26)" fg:x="1055" fg:w="1"/><text x="83.9802%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7302%" y="517" width="0.0794%" height="15" fill="rgb(244,147,6)" fg:x="1055" fg:w="1"/><text x="83.9802%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.7302%" y="501" width="0.0794%" height="15" fill="rgb(211,130,42)" fg:x="1055" fg:w="1"/><text x="83.9802%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.7302%" y="485" width="0.0794%" height="15" fill="rgb(220,63,1)" fg:x="1055" fg:w="1"/><text x="83.9802%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.7302%" y="469" width="0.0794%" height="15" fill="rgb(241,212,30)" fg:x="1055" fg:w="1"/><text x="83.9802%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="83.7302%" y="453" width="0.0794%" height="15" fill="rgb(233,153,17)" fg:x="1055" fg:w="1"/><text x="83.9802%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.7302%" y="437" width="0.0794%" height="15" fill="rgb(236,3,10)" fg:x="1055" fg:w="1"/><text x="83.9802%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9683%" y="485" width="0.0794%" height="15" fill="rgb(232,41,21)" fg:x="1058" fg:w="1"/><text x="84.2183%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="83.8889%" y="533" width="0.2381%" height="15" fill="rgb(206,63,51)" fg:x="1057" fg:w="3"/><text x="84.1389%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.9683%" y="517" width="0.1587%" height="15" fill="rgb(250,214,3)" fg:x="1058" fg:w="2"/><text x="84.2183%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.9683%" y="501" width="0.1587%" height="15" fill="rgb(254,89,27)" fg:x="1058" fg:w="2"/><text x="84.2183%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="84.0476%" y="485" width="0.0794%" height="15" fill="rgb(249,41,14)" fg:x="1059" fg:w="1"/><text x="84.2976%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.1270%" y="517" width="0.0794%" height="15" fill="rgb(221,196,51)" fg:x="1060" fg:w="1"/><text x="84.3770%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.1270%" y="501" width="0.0794%" height="15" fill="rgb(214,116,26)" fg:x="1060" fg:w="1"/><text x="84.3770%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.1270%" y="485" width="0.0794%" height="15" fill="rgb(236,67,7)" fg:x="1060" fg:w="1"/><text x="84.3770%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.1270%" y="469" width="0.0794%" height="15" fill="rgb(253,179,32)" fg:x="1060" fg:w="1"/><text x="84.3770%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.2063%" y="501" width="0.0794%" height="15" fill="rgb(218,33,15)" fg:x="1061" fg:w="1"/><text x="84.4563%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="84.2063%" y="517" width="0.1587%" height="15" fill="rgb(217,202,41)" fg:x="1061" fg:w="2"/><text x="84.4563%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2857%" y="501" width="0.0794%" height="15" fill="rgb(234,133,5)" fg:x="1062" fg:w="1"/><text x="84.5357%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2857%" y="485" width="0.0794%" height="15" fill="rgb(240,47,40)" fg:x="1062" fg:w="1"/><text x="84.5357%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.2857%" y="469" width="0.0794%" height="15" fill="rgb(234,166,26)" fg:x="1062" fg:w="1"/><text x="84.5357%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.2857%" y="453" width="0.0794%" height="15" fill="rgb(244,125,51)" fg:x="1062" fg:w="1"/><text x="84.5357%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="84.1270%" y="533" width="0.3968%" height="15" fill="rgb(229,171,11)" fg:x="1060" fg:w="5"/><text x="84.3770%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.3651%" y="517" width="0.1587%" height="15" fill="rgb(224,38,45)" fg:x="1063" fg:w="2"/><text x="84.6151%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="84.3651%" y="501" width="0.1587%" height="15" fill="rgb(237,27,7)" fg:x="1063" fg:w="2"/><text x="84.6151%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="84.3651%" y="485" width="0.1587%" height="15" fill="rgb(216,52,7)" fg:x="1063" fg:w="2"/><text x="84.6151%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.4444%" y="469" width="0.0794%" height="15" fill="rgb(243,11,11)" fg:x="1064" fg:w="1"/><text x="84.6944%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.71%)</title><rect x="83.8889%" y="549" width="0.7143%" height="15" fill="rgb(253,167,20)" fg:x="1057" fg:w="9"/><text x="84.1389%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.5238%" y="533" width="0.0794%" height="15" fill="rgb(215,207,5)" fg:x="1065" fg:w="1"/><text x="84.7738%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.5238%" y="517" width="0.0794%" height="15" fill="rgb(252,127,31)" fg:x="1065" fg:w="1"/><text x="84.7738%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.5238%" y="501" width="0.0794%" height="15" fill="rgb(209,106,27)" fg:x="1065" fg:w="1"/><text x="84.7738%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6032%" y="485" width="0.0794%" height="15" fill="rgb(214,220,18)" fg:x="1066" fg:w="1"/><text x="84.8532%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.6825%" y="485" width="0.0794%" height="15" fill="rgb(237,89,12)" fg:x="1067" fg:w="1"/><text x="84.9325%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.6032%" y="549" width="0.2381%" height="15" fill="rgb(209,167,36)" fg:x="1066" fg:w="3"/><text x="84.8532%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="84.6032%" y="533" width="0.2381%" height="15" fill="rgb(243,45,22)" fg:x="1066" fg:w="3"/><text x="84.8532%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.6032%" y="517" width="0.2381%" height="15" fill="rgb(239,2,46)" fg:x="1066" fg:w="3"/><text x="84.8532%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.6032%" y="501" width="0.2381%" height="15" fill="rgb(241,101,0)" fg:x="1066" fg:w="3"/><text x="84.8532%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7619%" y="485" width="0.0794%" height="15" fill="rgb(244,34,31)" fg:x="1068" fg:w="1"/><text x="85.0119%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.7619%" y="469" width="0.0794%" height="15" fill="rgb(248,23,22)" fg:x="1068" fg:w="1"/><text x="85.0119%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.7619%" y="453" width="0.0794%" height="15" fill="rgb(218,27,48)" fg:x="1068" fg:w="1"/><text x="85.0119%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0000%" y="501" width="0.0794%" height="15" fill="rgb(232,78,1)" fg:x="1071" fg:w="1"/><text x="85.2500%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0794%" y="501" width="0.0794%" height="15" fill="rgb(233,169,12)" fg:x="1072" fg:w="1"/><text x="85.3294%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.0794%" y="485" width="0.0794%" height="15" fill="rgb(225,222,54)" fg:x="1072" fg:w="1"/><text x="85.3294%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="85.0794%" y="469" width="0.0794%" height="15" fill="rgb(245,126,29)" fg:x="1072" fg:w="1"/><text x="85.3294%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="85.0794%" y="453" width="0.0794%" height="15" fill="rgb(241,63,48)" fg:x="1072" fg:w="1"/><text x="85.3294%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2381%" y="469" width="0.0794%" height="15" fill="rgb(235,126,38)" fg:x="1074" fg:w="1"/><text x="85.4881%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3968%" y="453" width="0.0794%" height="15" fill="rgb(232,96,49)" fg:x="1076" fg:w="1"/><text x="85.6468%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3968%" y="437" width="0.0794%" height="15" fill="rgb(211,146,40)" fg:x="1076" fg:w="1"/><text x="85.6468%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3968%" y="421" width="0.0794%" height="15" fill="rgb(247,93,44)" fg:x="1076" fg:w="1"/><text x="85.6468%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.4762%" y="437" width="0.0794%" height="15" fill="rgb(251,41,49)" fg:x="1077" fg:w="1"/><text x="85.7262%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4762%" y="421" width="0.0794%" height="15" fill="rgb(218,155,12)" fg:x="1077" fg:w="1"/><text x="85.7262%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4762%" y="405" width="0.0794%" height="15" fill="rgb(221,161,30)" fg:x="1077" fg:w="1"/><text x="85.7262%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4762%" y="389" width="0.0794%" height="15" fill="rgb(221,179,11)" fg:x="1077" fg:w="1"/><text x="85.7262%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.48%)</title><rect x="85.1587%" y="501" width="0.4762%" height="15" fill="rgb(224,170,48)" fg:x="1073" fg:w="6"/><text x="85.4087%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="85.1587%" y="485" width="0.4762%" height="15" fill="rgb(223,117,5)" fg:x="1073" fg:w="6"/><text x="85.4087%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="85.3175%" y="469" width="0.3175%" height="15" fill="rgb(209,52,20)" fg:x="1075" fg:w="4"/><text x="85.5675%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="85.4762%" y="453" width="0.1587%" height="15" fill="rgb(209,19,41)" fg:x="1077" fg:w="2"/><text x="85.7262%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5556%" y="437" width="0.0794%" height="15" fill="rgb(210,177,12)" fg:x="1078" fg:w="1"/><text x="85.8056%" y="447.50"></text></g><g><title>engine::session::Session::flush (28 samples, 2.22%)</title><rect x="83.4921%" y="613" width="2.2222%" height="15" fill="rgb(211,159,37)" fg:x="1052" fg:w="28"/><text x="83.7421%" y="623.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (28 samples, 2.22%)</title><rect x="83.4921%" y="597" width="2.2222%" height="15" fill="rgb(209,20,2)" fg:x="1052" fg:w="28"/><text x="83.7421%" y="607.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (24 samples, 1.90%)</title><rect x="83.8095%" y="581" width="1.9048%" height="15" fill="rgb(244,3,46)" fg:x="1056" fg:w="24"/><text x="84.0595%" y="591.50">e..</text></g><g><title>engine::session::Session::check_for_changes (24 samples, 1.90%)</title><rect x="83.8095%" y="565" width="1.9048%" height="15" fill="rgb(220,94,38)" fg:x="1056" fg:w="24"/><text x="84.0595%" y="575.50">e..</text></g><g><title>kernel::compare::any_entity_changes (11 samples, 0.87%)</title><rect x="84.8413%" y="549" width="0.8730%" height="15" fill="rgb(253,14,31)" fg:x="1069" fg:w="11"/><text x="85.0913%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (11 samples, 0.87%)</title><rect x="84.8413%" y="533" width="0.8730%" height="15" fill="rgb(234,176,13)" fg:x="1069" fg:w="11"/><text x="85.0913%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.79%)</title><rect x="84.9206%" y="517" width="0.7937%" height="15" fill="rgb(218,62,25)" fg:x="1070" fg:w="10"/><text x="85.1706%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="85.6349%" y="501" width="0.0794%" height="15" fill="rgb(216,124,40)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.6349%" y="485" width="0.0794%" height="15" fill="rgb(228,170,12)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6349%" y="469" width="0.0794%" height="15" fill="rgb(231,226,5)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6349%" y="453" width="0.0794%" height="15" fill="rgb(237,122,22)" fg:x="1079" fg:w="1"/><text x="85.8849%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="85.7143%" y="613" width="0.0794%" height="15" fill="rgb(209,185,25)" fg:x="1080" fg:w="1"/><text x="85.9643%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="85.7143%" y="597" width="0.0794%" height="15" fill="rgb(228,200,32)" fg:x="1080" fg:w="1"/><text x="85.9643%" y="607.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="85.7143%" y="581" width="0.0794%" height="15" fill="rgb(217,140,10)" fg:x="1080" fg:w="1"/><text x="85.9643%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="85.7937%" y="597" width="0.4762%" height="15" fill="rgb(253,17,24)" fg:x="1081" fg:w="6"/><text x="86.0437%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="85.7937%" y="581" width="0.4762%" height="15" fill="rgb(212,61,6)" fg:x="1081" fg:w="6"/><text x="86.0437%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="85.7937%" y="565" width="0.4762%" height="15" fill="rgb(205,14,25)" fg:x="1081" fg:w="6"/><text x="86.0437%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="85.7937%" y="549" width="0.4762%" height="15" fill="rgb(232,69,41)" fg:x="1081" fg:w="6"/><text x="86.0437%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="85.7937%" y="533" width="0.4762%" height="15" fill="rgb(241,106,47)" fg:x="1081" fg:w="6"/><text x="86.0437%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="85.7937%" y="517" width="0.4762%" height="15" fill="rgb(210,213,53)" fg:x="1081" fg:w="6"/><text x="86.0437%" y="527.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="85.7937%" y="501" width="0.4762%" height="15" fill="rgb(253,175,27)" fg:x="1081" fg:w="6"/><text x="86.0437%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="86.2698%" y="581" width="0.0794%" height="15" fill="rgb(211,171,24)" fg:x="1087" fg:w="1"/><text x="86.5198%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="86.2698%" y="565" width="0.0794%" height="15" fill="rgb(229,80,7)" fg:x="1087" fg:w="1"/><text x="86.5198%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3492%" y="549" width="0.0794%" height="15" fill="rgb(212,46,39)" fg:x="1088" fg:w="1"/><text x="86.5992%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.71%)</title><rect x="85.7937%" y="613" width="0.7143%" height="15" fill="rgb(240,80,45)" fg:x="1081" fg:w="9"/><text x="86.0437%" y="623.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="86.2698%" y="597" width="0.2381%" height="15" fill="rgb(253,177,40)" fg:x="1087" fg:w="3"/><text x="86.5198%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="86.3492%" y="581" width="0.1587%" height="15" fill="rgb(249,200,15)" fg:x="1088" fg:w="2"/><text x="86.5992%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="86.3492%" y="565" width="0.1587%" height="15" fill="rgb(217,78,26)" fg:x="1088" fg:w="2"/><text x="86.5992%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4286%" y="549" width="0.0794%" height="15" fill="rgb(254,151,32)" fg:x="1089" fg:w="1"/><text x="86.6786%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4286%" y="533" width="0.0794%" height="15" fill="rgb(226,165,27)" fg:x="1089" fg:w="1"/><text x="86.6786%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4286%" y="517" width="0.0794%" height="15" fill="rgb(250,206,4)" fg:x="1089" fg:w="1"/><text x="86.6786%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4286%" y="501" width="0.0794%" height="15" fill="rgb(231,229,27)" fg:x="1089" fg:w="1"/><text x="86.6786%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4286%" y="485" width="0.0794%" height="15" fill="rgb(239,217,8)" fg:x="1089" fg:w="1"/><text x="86.6786%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (66 samples, 5.24%)</title><rect x="81.3492%" y="645" width="5.2381%" height="15" fill="rgb(225,204,27)" fg:x="1025" fg:w="66"/><text x="81.5992%" y="655.50">&lt;tests..</text></g><g><title>plugins_core::build::BuildSurroundings::build (41 samples, 3.25%)</title><rect x="83.3333%" y="629" width="3.2540%" height="15" fill="rgb(230,56,32)" fg:x="1050" fg:w="41"/><text x="83.5833%" y="639.50">plu..</text></g><g><title>plugins_core::build::Build::occupying (1 samples, 0.08%)</title><rect x="86.5079%" y="613" width="0.0794%" height="15" fill="rgb(222,56,27)" fg:x="1090" fg:w="1"/><text x="86.7579%" y="623.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="86.5079%" y="597" width="0.0794%" height="15" fill="rgb(253,108,27)" fg:x="1090" fg:w="1"/><text x="86.7579%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="86.5079%" y="581" width="0.0794%" height="15" fill="rgb(212,87,36)" fg:x="1090" fg:w="1"/><text x="86.7579%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="86.5079%" y="565" width="0.0794%" height="15" fill="rgb(247,82,36)" fg:x="1090" fg:w="1"/><text x="86.7579%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="86.5873%" y="613" width="0.0794%" height="15" fill="rgb(222,143,9)" fg:x="1091" fg:w="1"/><text x="86.8373%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="86.5873%" y="597" width="0.0794%" height="15" fill="rgb(238,162,48)" fg:x="1091" fg:w="1"/><text x="86.8373%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.5873%" y="581" width="0.0794%" height="15" fill="rgb(221,59,43)" fg:x="1091" fg:w="1"/><text x="86.8373%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5873%" y="565" width="0.0794%" height="15" fill="rgb(205,166,41)" fg:x="1091" fg:w="1"/><text x="86.8373%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5873%" y="549" width="0.0794%" height="15" fill="rgb(241,186,40)" fg:x="1091" fg:w="1"/><text x="86.8373%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="86.6667%" y="565" width="0.0794%" height="15" fill="rgb(216,119,35)" fg:x="1092" fg:w="1"/><text x="86.9167%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.6667%" y="549" width="0.0794%" height="15" fill="rgb(208,68,38)" fg:x="1092" fg:w="1"/><text x="86.9167%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.6667%" y="533" width="0.0794%" height="15" fill="rgb(217,113,1)" fg:x="1092" fg:w="1"/><text x="86.9167%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.7460%" y="549" width="0.0794%" height="15" fill="rgb(242,153,3)" fg:x="1093" fg:w="1"/><text x="86.9960%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.7460%" y="533" width="0.0794%" height="15" fill="rgb(229,76,35)" fg:x="1093" fg:w="1"/><text x="86.9960%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.7460%" y="517" width="0.0794%" height="15" fill="rgb(229,125,34)" fg:x="1093" fg:w="1"/><text x="86.9960%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7460%" y="501" width="0.0794%" height="15" fill="rgb(238,179,36)" fg:x="1093" fg:w="1"/><text x="86.9960%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.8254%" y="533" width="0.0794%" height="15" fill="rgb(244,183,19)" fg:x="1094" fg:w="1"/><text x="87.0754%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="86.9048%" y="533" width="0.1587%" height="15" fill="rgb(216,85,49)" fg:x="1095" fg:w="2"/><text x="87.1548%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9841%" y="517" width="0.0794%" height="15" fill="rgb(208,161,47)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.9841%" y="501" width="0.0794%" height="15" fill="rgb(233,210,18)" fg:x="1096" fg:w="1"/><text x="87.2341%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.0635%" y="517" width="0.0794%" height="15" fill="rgb(205,104,42)" fg:x="1097" fg:w="1"/><text x="87.3135%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.0635%" y="501" width="0.0794%" height="15" fill="rgb(248,90,43)" fg:x="1097" fg:w="1"/><text x="87.3135%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1429%" y="517" width="0.0794%" height="15" fill="rgb(206,198,11)" fg:x="1098" fg:w="1"/><text x="87.3929%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.1429%" y="501" width="0.0794%" height="15" fill="rgb(239,165,27)" fg:x="1098" fg:w="1"/><text x="87.3929%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.63%)</title><rect x="86.6667%" y="581" width="0.6349%" height="15" fill="rgb(246,44,32)" fg:x="1092" fg:w="8"/><text x="86.9167%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="86.7460%" y="565" width="0.5556%" height="15" fill="rgb(252,65,42)" fg:x="1093" fg:w="7"/><text x="86.9960%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="86.8254%" y="549" width="0.4762%" height="15" fill="rgb(246,197,18)" fg:x="1094" fg:w="6"/><text x="87.0754%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="87.0635%" y="533" width="0.2381%" height="15" fill="rgb(216,192,4)" fg:x="1097" fg:w="3"/><text x="87.3135%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.2222%" y="517" width="0.0794%" height="15" fill="rgb(208,117,10)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.2222%" y="501" width="0.0794%" height="15" fill="rgb(240,61,47)" fg:x="1099" fg:w="1"/><text x="87.4722%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.3810%" y="517" width="0.1587%" height="15" fill="rgb(228,178,21)" fg:x="1101" fg:w="2"/><text x="87.6310%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.5397%" y="517" width="0.0794%" height="15" fill="rgb(219,96,54)" fg:x="1103" fg:w="1"/><text x="87.7897%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6190%" y="501" width="0.0794%" height="15" fill="rgb(250,177,24)" fg:x="1104" fg:w="1"/><text x="87.8690%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="87.3016%" y="581" width="0.4762%" height="15" fill="rgb(242,154,46)" fg:x="1100" fg:w="6"/><text x="87.5516%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="87.3016%" y="565" width="0.4762%" height="15" fill="rgb(226,176,29)" fg:x="1100" fg:w="6"/><text x="87.5516%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="87.3016%" y="549" width="0.4762%" height="15" fill="rgb(226,29,2)" fg:x="1100" fg:w="6"/><text x="87.5516%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="87.3016%" y="533" width="0.4762%" height="15" fill="rgb(237,104,14)" fg:x="1100" fg:w="6"/><text x="87.5516%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.6190%" y="517" width="0.1587%" height="15" fill="rgb(245,207,31)" fg:x="1104" fg:w="2"/><text x="87.8690%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6984%" y="501" width="0.0794%" height="15" fill="rgb(229,211,45)" fg:x="1105" fg:w="1"/><text x="87.9484%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6984%" y="485" width="0.0794%" height="15" fill="rgb(229,113,15)" fg:x="1105" fg:w="1"/><text x="87.9484%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.8571%" y="533" width="0.1587%" height="15" fill="rgb(237,147,15)" fg:x="1107" fg:w="2"/><text x="88.1071%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0952%" y="485" width="0.0794%" height="15" fill="rgb(244,120,12)" fg:x="1110" fg:w="1"/><text x="88.3452%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="87.8571%" y="565" width="0.3968%" height="15" fill="rgb(205,120,12)" fg:x="1107" fg:w="5"/><text x="88.1071%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="87.8571%" y="549" width="0.3968%" height="15" fill="rgb(231,26,45)" fg:x="1107" fg:w="5"/><text x="88.1071%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.0159%" y="533" width="0.2381%" height="15" fill="rgb(246,98,1)" fg:x="1109" fg:w="3"/><text x="88.2659%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.0952%" y="517" width="0.1587%" height="15" fill="rgb(207,68,45)" fg:x="1110" fg:w="2"/><text x="88.3452%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.0952%" y="501" width="0.1587%" height="15" fill="rgb(231,27,38)" fg:x="1110" fg:w="2"/><text x="88.3452%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.1746%" y="485" width="0.0794%" height="15" fill="rgb(214,223,3)" fg:x="1111" fg:w="1"/><text x="88.4246%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3333%" y="533" width="0.0794%" height="15" fill="rgb(228,195,46)" fg:x="1113" fg:w="1"/><text x="88.5833%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4127%" y="533" width="0.0794%" height="15" fill="rgb(231,100,42)" fg:x="1114" fg:w="1"/><text x="88.6627%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4127%" y="517" width="0.0794%" height="15" fill="rgb(236,53,4)" fg:x="1114" fg:w="1"/><text x="88.6627%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="88.4921%" y="533" width="0.0794%" height="15" fill="rgb(230,152,12)" fg:x="1115" fg:w="1"/><text x="88.7421%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.4921%" y="517" width="0.0794%" height="15" fill="rgb(226,101,19)" fg:x="1115" fg:w="1"/><text x="88.7421%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4921%" y="501" width="0.0794%" height="15" fill="rgb(250,149,32)" fg:x="1115" fg:w="1"/><text x="88.7421%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.5714%" y="501" width="0.0794%" height="15" fill="rgb(232,178,12)" fg:x="1116" fg:w="1"/><text x="88.8214%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="88.5714%" y="533" width="0.1587%" height="15" fill="rgb(246,151,17)" fg:x="1116" fg:w="2"/><text x="88.8214%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.5714%" y="517" width="0.1587%" height="15" fill="rgb(252,17,51)" fg:x="1116" fg:w="2"/><text x="88.8214%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6508%" y="501" width="0.0794%" height="15" fill="rgb(250,207,23)" fg:x="1117" fg:w="1"/><text x="88.9008%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6508%" y="485" width="0.0794%" height="15" fill="rgb(205,27,5)" fg:x="1117" fg:w="1"/><text x="88.9008%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0476%" y="453" width="0.0794%" height="15" fill="rgb(224,32,19)" fg:x="1122" fg:w="1"/><text x="89.2976%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0476%" y="437" width="0.0794%" height="15" fill="rgb(247,214,40)" fg:x="1122" fg:w="1"/><text x="89.2976%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0476%" y="421" width="0.0794%" height="15" fill="rgb(239,199,17)" fg:x="1122" fg:w="1"/><text x="89.2976%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.48%)</title><rect x="88.7302%" y="533" width="0.4762%" height="15" fill="rgb(251,159,9)" fg:x="1118" fg:w="6"/><text x="88.9802%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="88.7302%" y="517" width="0.4762%" height="15" fill="rgb(225,78,32)" fg:x="1118" fg:w="6"/><text x="88.9802%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="88.7302%" y="501" width="0.4762%" height="15" fill="rgb(206,97,47)" fg:x="1118" fg:w="6"/><text x="88.9802%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="89.0476%" y="485" width="0.1587%" height="15" fill="rgb(227,107,4)" fg:x="1122" fg:w="2"/><text x="89.2976%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.0476%" y="469" width="0.1587%" height="15" fill="rgb(241,146,50)" fg:x="1122" fg:w="2"/><text x="89.2976%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="89.1270%" y="453" width="0.0794%" height="15" fill="rgb(232,92,30)" fg:x="1123" fg:w="1"/><text x="89.3770%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="89.1270%" y="437" width="0.0794%" height="15" fill="rgb(222,0,40)" fg:x="1123" fg:w="1"/><text x="89.3770%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="89.2063%" y="533" width="0.0794%" height="15" fill="rgb(219,54,33)" fg:x="1124" fg:w="1"/><text x="89.4563%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="89.2063%" y="517" width="0.0794%" height="15" fill="rgb(226,209,28)" fg:x="1124" fg:w="1"/><text x="89.4563%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="89.2857%" y="517" width="0.0794%" height="15" fill="rgb(254,205,35)" fg:x="1125" fg:w="1"/><text x="89.5357%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4444%" y="485" width="0.0794%" height="15" fill="rgb(230,159,3)" fg:x="1127" fg:w="1"/><text x="89.6944%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4444%" y="469" width="0.0794%" height="15" fill="rgb(232,190,24)" fg:x="1127" fg:w="1"/><text x="89.6944%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4444%" y="453" width="0.0794%" height="15" fill="rgb(217,227,44)" fg:x="1127" fg:w="1"/><text x="89.6944%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.5238%" y="485" width="0.0794%" height="15" fill="rgb(236,211,1)" fg:x="1128" fg:w="1"/><text x="89.7738%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.5238%" y="469" width="0.0794%" height="15" fill="rgb(250,127,46)" fg:x="1128" fg:w="1"/><text x="89.7738%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.5238%" y="453" width="0.0794%" height="15" fill="rgb(229,213,6)" fg:x="1128" fg:w="1"/><text x="89.7738%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5238%" y="437" width="0.0794%" height="15" fill="rgb(237,15,36)" fg:x="1128" fg:w="1"/><text x="89.7738%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (20 samples, 1.59%)</title><rect x="88.2540%" y="565" width="1.5873%" height="15" fill="rgb(213,131,41)" fg:x="1112" fg:w="20"/><text x="88.5040%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.59%)</title><rect x="88.2540%" y="549" width="1.5873%" height="15" fill="rgb(225,82,44)" fg:x="1112" fg:w="20"/><text x="88.5040%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="89.2857%" y="533" width="0.5556%" height="15" fill="rgb(249,42,11)" fg:x="1125" fg:w="7"/><text x="89.5357%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.48%)</title><rect x="89.3651%" y="517" width="0.4762%" height="15" fill="rgb(253,11,29)" fg:x="1126" fg:w="6"/><text x="89.6151%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="89.3651%" y="501" width="0.4762%" height="15" fill="rgb(206,8,54)" fg:x="1126" fg:w="6"/><text x="89.6151%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="89.6032%" y="485" width="0.2381%" height="15" fill="rgb(222,186,2)" fg:x="1129" fg:w="3"/><text x="89.8532%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7619%" y="469" width="0.0794%" height="15" fill="rgb(221,206,53)" fg:x="1131" fg:w="1"/><text x="90.0119%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.8413%" y="453" width="0.0794%" height="15" fill="rgb(230,150,21)" fg:x="1132" fg:w="1"/><text x="90.0913%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.9206%" y="405" width="0.0794%" height="15" fill="rgb(253,202,10)" fg:x="1133" fg:w="1"/><text x="90.1706%" y="415.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="89.9206%" y="389" width="0.0794%" height="15" fill="rgb(238,109,40)" fg:x="1133" fg:w="1"/><text x="90.1706%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="90.0000%" y="405" width="0.1587%" height="15" fill="rgb(247,120,22)" fg:x="1134" fg:w="2"/><text x="90.2500%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.0000%" y="389" width="0.1587%" height="15" fill="rgb(207,43,30)" fg:x="1134" fg:w="2"/><text x="90.2500%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="89.8413%" y="469" width="0.3968%" height="15" fill="rgb(213,211,24)" fg:x="1132" fg:w="5"/><text x="90.0913%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="89.9206%" y="453" width="0.3175%" height="15" fill="rgb(239,73,39)" fg:x="1133" fg:w="4"/><text x="90.1706%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="89.9206%" y="437" width="0.3175%" height="15" fill="rgb(245,182,19)" fg:x="1133" fg:w="4"/><text x="90.1706%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="89.9206%" y="421" width="0.3175%" height="15" fill="rgb(247,143,26)" fg:x="1133" fg:w="4"/><text x="90.1706%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1587%" y="405" width="0.0794%" height="15" fill="rgb(228,191,23)" fg:x="1136" fg:w="1"/><text x="90.4087%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1587%" y="389" width="0.0794%" height="15" fill="rgb(253,165,31)" fg:x="1136" fg:w="1"/><text x="90.4087%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.1587%" y="373" width="0.0794%" height="15" fill="rgb(234,138,20)" fg:x="1136" fg:w="1"/><text x="90.4087%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="89.8413%" y="501" width="0.4762%" height="15" fill="rgb(218,191,29)" fg:x="1132" fg:w="6"/><text x="90.0913%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="89.8413%" y="485" width="0.4762%" height="15" fill="rgb(221,157,19)" fg:x="1132" fg:w="6"/><text x="90.0913%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2381%" y="469" width="0.0794%" height="15" fill="rgb(237,26,42)" fg:x="1137" fg:w="1"/><text x="90.4881%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2381%" y="453" width="0.0794%" height="15" fill="rgb(220,163,24)" fg:x="1137" fg:w="1"/><text x="90.4881%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2381%" y="437" width="0.0794%" height="15" fill="rgb(242,115,20)" fg:x="1137" fg:w="1"/><text x="90.4881%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.56%)</title><rect x="89.8413%" y="565" width="0.5556%" height="15" fill="rgb(210,206,9)" fg:x="1132" fg:w="7"/><text x="90.0913%" y="575.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="89.8413%" y="549" width="0.5556%" height="15" fill="rgb(208,71,17)" fg:x="1132" fg:w="7"/><text x="90.0913%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="89.8413%" y="533" width="0.5556%" height="15" fill="rgb(233,7,5)" fg:x="1132" fg:w="7"/><text x="90.0913%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="89.8413%" y="517" width="0.5556%" height="15" fill="rgb(207,92,33)" fg:x="1132" fg:w="7"/><text x="90.0913%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.3175%" y="501" width="0.0794%" height="15" fill="rgb(218,87,9)" fg:x="1138" fg:w="1"/><text x="90.5675%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3175%" y="485" width="0.0794%" height="15" fill="rgb(219,47,37)" fg:x="1138" fg:w="1"/><text x="90.5675%" y="495.50"></text></g><g><title>engine::session::Session::close (50 samples, 3.97%)</title><rect x="86.5873%" y="645" width="3.9683%" height="15" fill="rgb(221,152,34)" fg:x="1091" fg:w="50"/><text x="86.8373%" y="655.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (50 samples, 3.97%)</title><rect x="86.5873%" y="629" width="3.9683%" height="15" fill="rgb(235,176,21)" fg:x="1091" fg:w="50"/><text x="86.8373%" y="639.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (49 samples, 3.89%)</title><rect x="86.6667%" y="613" width="3.8889%" height="15" fill="rgb(232,212,21)" fg:x="1092" fg:w="49"/><text x="86.9167%" y="623.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (49 samples, 3.89%)</title><rect x="86.6667%" y="597" width="3.8889%" height="15" fill="rgb(245,82,39)" fg:x="1092" fg:w="49"/><text x="86.9167%" y="607.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (35 samples, 2.78%)</title><rect x="87.7778%" y="581" width="2.7778%" height="15" fill="rgb(241,52,51)" fg:x="1106" fg:w="35"/><text x="88.0278%" y="591.50">ke..</text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="90.3968%" y="565" width="0.1587%" height="15" fill="rgb(219,91,24)" fg:x="1139" fg:w="2"/><text x="90.6468%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.3968%" y="549" width="0.1587%" height="15" fill="rgb(241,142,12)" fg:x="1139" fg:w="2"/><text x="90.6468%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.3968%" y="533" width="0.1587%" height="15" fill="rgb(230,27,9)" fg:x="1139" fg:w="2"/><text x="90.6468%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.4762%" y="517" width="0.0794%" height="15" fill="rgb(249,181,32)" fg:x="1140" fg:w="1"/><text x="90.7262%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.4762%" y="501" width="0.0794%" height="15" fill="rgb(230,107,3)" fg:x="1140" fg:w="1"/><text x="90.7262%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.4762%" y="485" width="0.0794%" height="15" fill="rgb(246,204,14)" fg:x="1140" fg:w="1"/><text x="90.7262%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (1 samples, 0.08%)</title><rect x="90.6349%" y="613" width="0.0794%" height="15" fill="rgb(213,192,47)" fg:x="1142" fg:w="1"/><text x="90.8849%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.7143%" y="405" width="0.0794%" height="15" fill="rgb(240,44,36)" fg:x="1143" fg:w="1"/><text x="90.9643%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7143%" y="389" width="0.0794%" height="15" fill="rgb(244,209,38)" fg:x="1143" fg:w="1"/><text x="90.9643%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7143%" y="373" width="0.0794%" height="15" fill="rgb(219,34,37)" fg:x="1143" fg:w="1"/><text x="90.9643%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7143%" y="357" width="0.0794%" height="15" fill="rgb(210,28,6)" fg:x="1143" fg:w="1"/><text x="90.9643%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.7143%" y="341" width="0.0794%" height="15" fill="rgb(244,110,52)" fg:x="1143" fg:w="1"/><text x="90.9643%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.7143%" y="437" width="0.1587%" height="15" fill="rgb(254,124,47)" fg:x="1143" fg:w="2"/><text x="90.9643%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.7143%" y="421" width="0.1587%" height="15" fill="rgb(254,110,13)" fg:x="1143" fg:w="2"/><text x="90.9643%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="90.7937%" y="405" width="0.0794%" height="15" fill="rgb(252,57,21)" fg:x="1144" fg:w="1"/><text x="91.0437%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="90.7937%" y="389" width="0.0794%" height="15" fill="rgb(242,60,45)" fg:x="1144" fg:w="1"/><text x="91.0437%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7937%" y="373" width="0.0794%" height="15" fill="rgb(234,49,30)" fg:x="1144" fg:w="1"/><text x="91.0437%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.8730%" y="437" width="0.0794%" height="15" fill="rgb(218,98,6)" fg:x="1145" fg:w="1"/><text x="91.1230%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.8730%" y="421" width="0.0794%" height="15" fill="rgb(220,174,29)" fg:x="1145" fg:w="1"/><text x="91.1230%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.8730%" y="405" width="0.0794%" height="15" fill="rgb(236,163,23)" fg:x="1145" fg:w="1"/><text x="91.1230%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="90.7143%" y="485" width="0.3175%" height="15" fill="rgb(242,114,45)" fg:x="1143" fg:w="4"/><text x="90.9643%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.7143%" y="469" width="0.3175%" height="15" fill="rgb(232,10,53)" fg:x="1143" fg:w="4"/><text x="90.9643%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="90.7143%" y="453" width="0.3175%" height="15" fill="rgb(245,108,29)" fg:x="1143" fg:w="4"/><text x="90.9643%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9524%" y="437" width="0.0794%" height="15" fill="rgb(240,89,53)" fg:x="1146" fg:w="1"/><text x="91.2024%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9524%" y="421" width="0.0794%" height="15" fill="rgb(226,60,45)" fg:x="1146" fg:w="1"/><text x="91.2024%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="90.7143%" y="549" width="0.3968%" height="15" fill="rgb(230,41,44)" fg:x="1143" fg:w="5"/><text x="90.9643%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="90.7143%" y="533" width="0.3968%" height="15" fill="rgb(230,26,20)" fg:x="1143" fg:w="5"/><text x="90.9643%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="90.7143%" y="517" width="0.3968%" height="15" fill="rgb(237,170,32)" fg:x="1143" fg:w="5"/><text x="90.9643%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="90.7143%" y="501" width="0.3968%" height="15" fill="rgb(212,35,42)" fg:x="1143" fg:w="5"/><text x="90.9643%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0317%" y="485" width="0.0794%" height="15" fill="rgb(227,31,34)" fg:x="1147" fg:w="1"/><text x="91.2817%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0317%" y="469" width="0.0794%" height="15" fill="rgb(216,19,18)" fg:x="1147" fg:w="1"/><text x="91.2817%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.0317%" y="453" width="0.0794%" height="15" fill="rgb(211,133,42)" fg:x="1147" fg:w="1"/><text x="91.2817%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0317%" y="437" width="0.0794%" height="15" fill="rgb(244,66,13)" fg:x="1147" fg:w="1"/><text x="91.2817%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0317%" y="421" width="0.0794%" height="15" fill="rgb(218,185,50)" fg:x="1147" fg:w="1"/><text x="91.2817%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0317%" y="405" width="0.0794%" height="15" fill="rgb(219,149,13)" fg:x="1147" fg:w="1"/><text x="91.2817%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.0317%" y="389" width="0.0794%" height="15" fill="rgb(221,125,0)" fg:x="1147" fg:w="1"/><text x="91.2817%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0317%" y="373" width="0.0794%" height="15" fill="rgb(247,126,27)" fg:x="1147" fg:w="1"/><text x="91.2817%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.56%)</title><rect x="90.7143%" y="597" width="0.5556%" height="15" fill="rgb(250,138,30)" fg:x="1143" fg:w="7"/><text x="90.9643%" y="607.50"></text></g><g><title>engine::internal::Entities::prepare_entity (7 samples, 0.56%)</title><rect x="90.7143%" y="581" width="0.5556%" height="15" fill="rgb(230,151,9)" fg:x="1143" fg:w="7"/><text x="90.9643%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="90.7143%" y="565" width="0.5556%" height="15" fill="rgb(233,80,38)" fg:x="1143" fg:w="7"/><text x="90.9643%" y="575.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="91.1111%" y="549" width="0.1587%" height="15" fill="rgb(232,68,43)" fg:x="1148" fg:w="2"/><text x="91.3611%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.1111%" y="533" width="0.1587%" height="15" fill="rgb(254,5,50)" fg:x="1148" fg:w="2"/><text x="91.3611%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.1111%" y="517" width="0.1587%" height="15" fill="rgb(225,45,5)" fg:x="1148" fg:w="2"/><text x="91.3611%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.1111%" y="501" width="0.1587%" height="15" fill="rgb(239,22,3)" fg:x="1148" fg:w="2"/><text x="91.3611%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.1905%" y="485" width="0.0794%" height="15" fill="rgb(243,129,0)" fg:x="1149" fg:w="1"/><text x="91.4405%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.1905%" y="469" width="0.0794%" height="15" fill="rgb(223,164,0)" fg:x="1149" fg:w="1"/><text x="91.4405%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.1905%" y="453" width="0.0794%" height="15" fill="rgb(221,46,29)" fg:x="1149" fg:w="1"/><text x="91.4405%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1905%" y="437" width="0.0794%" height="15" fill="rgb(205,97,47)" fg:x="1149" fg:w="1"/><text x="91.4405%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1905%" y="421" width="0.0794%" height="15" fill="rgb(249,14,8)" fg:x="1149" fg:w="1"/><text x="91.4405%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.1905%" y="405" width="0.0794%" height="15" fill="rgb(216,77,3)" fg:x="1149" fg:w="1"/><text x="91.4405%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="91.2698%" y="517" width="0.0794%" height="15" fill="rgb(206,168,54)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.2698%" y="501" width="0.0794%" height="15" fill="rgb(236,3,41)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.2698%" y="485" width="0.0794%" height="15" fill="rgb(231,132,24)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.2698%" y="469" width="0.0794%" height="15" fill="rgb(227,221,40)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.2698%" y="453" width="0.0794%" height="15" fill="rgb(233,151,11)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.2698%" y="437" width="0.0794%" height="15" fill="rgb(247,81,35)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="91.2698%" y="421" width="0.0794%" height="15" fill="rgb(243,128,48)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.2698%" y="405" width="0.0794%" height="15" fill="rgb(253,16,10)" fg:x="1150" fg:w="1"/><text x="91.5198%" y="415.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="91.3492%" y="501" width="0.0794%" height="15" fill="rgb(228,67,27)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.3492%" y="485" width="0.0794%" height="15" fill="rgb(231,105,25)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.3492%" y="469" width="0.0794%" height="15" fill="rgb(213,166,47)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.3492%" y="453" width="0.0794%" height="15" fill="rgb(209,27,10)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.3492%" y="437" width="0.0794%" height="15" fill="rgb(241,44,30)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.3492%" y="421" width="0.0794%" height="15" fill="rgb(223,216,15)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.3492%" y="405" width="0.0794%" height="15" fill="rgb(227,14,7)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.3492%" y="389" width="0.0794%" height="15" fill="rgb(237,14,5)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.3492%" y="373" width="0.0794%" height="15" fill="rgb(232,14,36)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.3492%" y="357" width="0.0794%" height="15" fill="rgb(234,0,38)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.3492%" y="341" width="0.0794%" height="15" fill="rgb(207,170,14)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.3492%" y="325" width="0.0794%" height="15" fill="rgb(252,45,13)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3492%" y="309" width="0.0794%" height="15" fill="rgb(213,142,7)" fg:x="1151" fg:w="1"/><text x="91.5992%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4286%" y="389" width="0.0794%" height="15" fill="rgb(216,157,23)" fg:x="1152" fg:w="1"/><text x="91.6786%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.4286%" y="373" width="0.0794%" height="15" fill="rgb(212,145,33)" fg:x="1152" fg:w="1"/><text x="91.6786%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="91.4286%" y="357" width="0.0794%" height="15" fill="rgb(233,26,13)" fg:x="1152" fg:w="1"/><text x="91.6786%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.5079%" y="373" width="0.0794%" height="15" fill="rgb(219,196,19)" fg:x="1153" fg:w="1"/><text x="91.7579%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5079%" y="357" width="0.0794%" height="15" fill="rgb(246,56,21)" fg:x="1153" fg:w="1"/><text x="91.7579%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="91.5079%" y="341" width="0.0794%" height="15" fill="rgb(222,28,53)" fg:x="1153" fg:w="1"/><text x="91.7579%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.5079%" y="325" width="0.0794%" height="15" fill="rgb(224,5,27)" fg:x="1153" fg:w="1"/><text x="91.7579%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="91.4286%" y="421" width="0.2381%" height="15" fill="rgb(220,153,33)" fg:x="1152" fg:w="3"/><text x="91.6786%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.4286%" y="405" width="0.2381%" height="15" fill="rgb(226,58,19)" fg:x="1152" fg:w="3"/><text x="91.6786%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.5079%" y="389" width="0.1587%" height="15" fill="rgb(239,112,23)" fg:x="1153" fg:w="2"/><text x="91.7579%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="91.5873%" y="373" width="0.0794%" height="15" fill="rgb(251,213,20)" fg:x="1154" fg:w="1"/><text x="91.8373%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.5873%" y="357" width="0.0794%" height="15" fill="rgb(215,181,21)" fg:x="1154" fg:w="1"/><text x="91.8373%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5873%" y="341" width="0.0794%" height="15" fill="rgb(240,8,35)" fg:x="1154" fg:w="1"/><text x="91.8373%" y="351.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (6 samples, 0.48%)</title><rect x="91.2698%" y="597" width="0.4762%" height="15" fill="rgb(232,203,3)" fg:x="1150" fg:w="6"/><text x="91.5198%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (6 samples, 0.48%)</title><rect x="91.2698%" y="581" width="0.4762%" height="15" fill="rgb(214,202,43)" fg:x="1150" fg:w="6"/><text x="91.5198%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="91.2698%" y="565" width="0.4762%" height="15" fill="rgb(254,35,11)" fg:x="1150" fg:w="6"/><text x="91.5198%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="91.2698%" y="549" width="0.4762%" height="15" fill="rgb(239,173,13)" fg:x="1150" fg:w="6"/><text x="91.5198%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="91.2698%" y="533" width="0.4762%" height="15" fill="rgb(220,141,0)" fg:x="1150" fg:w="6"/><text x="91.5198%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.40%)</title><rect x="91.3492%" y="517" width="0.3968%" height="15" fill="rgb(210,98,12)" fg:x="1151" fg:w="5"/><text x="91.5992%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="91.4286%" y="501" width="0.3175%" height="15" fill="rgb(254,153,22)" fg:x="1152" fg:w="4"/><text x="91.6786%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="91.4286%" y="485" width="0.3175%" height="15" fill="rgb(247,223,17)" fg:x="1152" fg:w="4"/><text x="91.6786%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="91.4286%" y="469" width="0.3175%" height="15" fill="rgb(246,56,7)" fg:x="1152" fg:w="4"/><text x="91.6786%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="91.4286%" y="453" width="0.3175%" height="15" fill="rgb(240,226,12)" fg:x="1152" fg:w="4"/><text x="91.6786%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="91.4286%" y="437" width="0.3175%" height="15" fill="rgb(205,87,46)" fg:x="1152" fg:w="4"/><text x="91.6786%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.6667%" y="421" width="0.0794%" height="15" fill="rgb(245,214,51)" fg:x="1155" fg:w="1"/><text x="91.9167%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.6667%" y="405" width="0.0794%" height="15" fill="rgb(223,172,33)" fg:x="1155" fg:w="1"/><text x="91.9167%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8254%" y="485" width="0.0794%" height="15" fill="rgb(227,203,34)" fg:x="1157" fg:w="1"/><text x="92.0754%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.8254%" y="469" width="0.0794%" height="15" fill="rgb(248,143,44)" fg:x="1157" fg:w="1"/><text x="92.0754%" y="479.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (16 samples, 1.27%)</title><rect x="90.7143%" y="613" width="1.2698%" height="15" fill="rgb(226,162,5)" fg:x="1143" fg:w="16"/><text x="90.9643%" y="623.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="91.7460%" y="597" width="0.2381%" height="15" fill="rgb(211,143,1)" fg:x="1156" fg:w="3"/><text x="91.9960%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="91.7460%" y="581" width="0.2381%" height="15" fill="rgb(224,96,15)" fg:x="1156" fg:w="3"/><text x="91.9960%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="91.7460%" y="565" width="0.2381%" height="15" fill="rgb(222,4,38)" fg:x="1156" fg:w="3"/><text x="91.9960%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.7460%" y="549" width="0.2381%" height="15" fill="rgb(253,228,15)" fg:x="1156" fg:w="3"/><text x="91.9960%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.7460%" y="533" width="0.2381%" height="15" fill="rgb(242,194,12)" fg:x="1156" fg:w="3"/><text x="91.9960%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="91.8254%" y="517" width="0.1587%" height="15" fill="rgb(214,177,31)" fg:x="1157" fg:w="2"/><text x="92.0754%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.8254%" y="501" width="0.1587%" height="15" fill="rgb(226,58,51)" fg:x="1157" fg:w="2"/><text x="92.0754%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9048%" y="485" width="0.0794%" height="15" fill="rgb(250,119,16)" fg:x="1158" fg:w="1"/><text x="92.1548%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9048%" y="469" width="0.0794%" height="15" fill="rgb(223,128,53)" fg:x="1158" fg:w="1"/><text x="92.1548%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.0635%" y="517" width="0.0794%" height="15" fill="rgb(251,199,15)" fg:x="1160" fg:w="1"/><text x="92.3135%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.0635%" y="501" width="0.0794%" height="15" fill="rgb(235,168,42)" fg:x="1160" fg:w="1"/><text x="92.3135%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1429%" y="517" width="0.0794%" height="15" fill="rgb(250,210,17)" fg:x="1161" fg:w="1"/><text x="92.3929%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="92.0635%" y="533" width="0.2381%" height="15" fill="rgb(226,36,41)" fg:x="1160" fg:w="3"/><text x="92.3135%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="92.2222%" y="517" width="0.0794%" height="15" fill="rgb(225,87,10)" fg:x="1162" fg:w="1"/><text x="92.4722%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.2222%" y="501" width="0.0794%" height="15" fill="rgb(228,83,9)" fg:x="1162" fg:w="1"/><text x="92.4722%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynMessage&gt; (6 samples, 0.48%)</title><rect x="91.9841%" y="581" width="0.4762%" height="15" fill="rgb(225,16,36)" fg:x="1159" fg:w="6"/><text x="92.2341%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="91.9841%" y="565" width="0.4762%" height="15" fill="rgb(242,198,13)" fg:x="1159" fg:w="6"/><text x="92.2341%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="91.9841%" y="549" width="0.4762%" height="15" fill="rgb(239,25,51)" fg:x="1159" fg:w="6"/><text x="92.2341%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="92.3016%" y="533" width="0.1587%" height="15" fill="rgb(239,28,37)" fg:x="1163" fg:w="2"/><text x="92.5516%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.4603%" y="549" width="0.0794%" height="15" fill="rgb(234,70,17)" fg:x="1165" fg:w="1"/><text x="92.7103%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="92.4603%" y="533" width="0.0794%" height="15" fill="rgb(231,215,53)" fg:x="1165" fg:w="1"/><text x="92.7103%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4603%" y="517" width="0.0794%" height="15" fill="rgb(218,140,42)" fg:x="1165" fg:w="1"/><text x="92.7103%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="92.5397%" y="549" width="0.0794%" height="15" fill="rgb(233,227,45)" fg:x="1166" fg:w="1"/><text x="92.7897%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="92.5397%" y="533" width="0.0794%" height="15" fill="rgb(225,189,21)" fg:x="1166" fg:w="1"/><text x="92.7897%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.5397%" y="517" width="0.0794%" height="15" fill="rgb(237,176,54)" fg:x="1166" fg:w="1"/><text x="92.7897%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="92.5397%" y="501" width="0.0794%" height="15" fill="rgb(215,131,46)" fg:x="1166" fg:w="1"/><text x="92.7897%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6190%" y="549" width="0.0794%" height="15" fill="rgb(218,95,20)" fg:x="1167" fg:w="1"/><text x="92.8690%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="92.6984%" y="533" width="0.0794%" height="15" fill="rgb(208,198,12)" fg:x="1168" fg:w="1"/><text x="92.9484%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="92.6984%" y="549" width="0.1587%" height="15" fill="rgb(239,107,50)" fg:x="1168" fg:w="2"/><text x="92.9484%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7778%" y="533" width="0.0794%" height="15" fill="rgb(240,217,37)" fg:x="1169" fg:w="1"/><text x="93.0278%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.0952%" y="405" width="0.0794%" height="15" fill="rgb(242,197,49)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.0952%" y="389" width="0.0794%" height="15" fill="rgb(219,171,17)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0952%" y="373" width="0.0794%" height="15" fill="rgb(209,81,40)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0952%" y="357" width="0.0794%" height="15" fill="rgb(237,156,30)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.0952%" y="341" width="0.0794%" height="15" fill="rgb(212,127,16)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.0952%" y="325" width="0.0794%" height="15" fill="rgb(226,66,32)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.0952%" y="309" width="0.0794%" height="15" fill="rgb(245,22,46)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0952%" y="293" width="0.0794%" height="15" fill="rgb(210,112,21)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0952%" y="277" width="0.0794%" height="15" fill="rgb(207,118,39)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.0952%" y="261" width="0.0794%" height="15" fill="rgb(205,206,35)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.0952%" y="245" width="0.0794%" height="15" fill="rgb(222,120,2)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.0952%" y="229" width="0.0794%" height="15" fill="rgb(205,38,18)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.0952%" y="213" width="0.0794%" height="15" fill="rgb(226,61,2)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0952%" y="197" width="0.0794%" height="15" fill="rgb(242,161,23)" fg:x="1173" fg:w="1"/><text x="93.3452%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.1746%" y="389" width="0.0794%" height="15" fill="rgb(213,13,52)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1746%" y="373" width="0.0794%" height="15" fill="rgb(246,209,47)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1746%" y="357" width="0.0794%" height="15" fill="rgb(214,41,3)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.1746%" y="341" width="0.0794%" height="15" fill="rgb(236,119,38)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.1746%" y="325" width="0.0794%" height="15" fill="rgb(218,50,11)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.1746%" y="309" width="0.0794%" height="15" fill="rgb(228,38,11)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1746%" y="293" width="0.0794%" height="15" fill="rgb(212,13,9)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1746%" y="277" width="0.0794%" height="15" fill="rgb(208,211,9)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.1746%" y="261" width="0.0794%" height="15" fill="rgb(239,39,32)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.1746%" y="245" width="0.0794%" height="15" fill="rgb(254,179,26)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.1746%" y="229" width="0.0794%" height="15" fill="rgb(249,165,28)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.1746%" y="213" width="0.0794%" height="15" fill="rgb(225,59,50)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1746%" y="197" width="0.0794%" height="15" fill="rgb(209,122,5)" fg:x="1174" fg:w="1"/><text x="93.4246%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.2540%" y="277" width="0.0794%" height="15" fill="rgb(214,65,34)" fg:x="1175" fg:w="1"/><text x="93.5040%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="93.1746%" y="405" width="0.2381%" height="15" fill="rgb(249,183,32)" fg:x="1174" fg:w="3"/><text x="93.4246%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="93.2540%" y="389" width="0.1587%" height="15" fill="rgb(218,122,24)" fg:x="1175" fg:w="2"/><text x="93.5040%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="93.2540%" y="373" width="0.1587%" height="15" fill="rgb(224,109,18)" fg:x="1175" fg:w="2"/><text x="93.5040%" y="383.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="93.2540%" y="357" width="0.1587%" height="15" fill="rgb(210,68,50)" fg:x="1175" fg:w="2"/><text x="93.5040%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.2540%" y="341" width="0.1587%" height="15" fill="rgb(212,184,34)" fg:x="1175" fg:w="2"/><text x="93.5040%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2540%" y="325" width="0.1587%" height="15" fill="rgb(238,105,48)" fg:x="1175" fg:w="2"/><text x="93.5040%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.2540%" y="309" width="0.1587%" height="15" fill="rgb(222,134,54)" fg:x="1175" fg:w="2"/><text x="93.5040%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2540%" y="293" width="0.1587%" height="15" fill="rgb(246,24,43)" fg:x="1175" fg:w="2"/><text x="93.5040%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3333%" y="277" width="0.0794%" height="15" fill="rgb(227,169,22)" fg:x="1176" fg:w="1"/><text x="93.5833%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3333%" y="261" width="0.0794%" height="15" fill="rgb(253,152,4)" fg:x="1176" fg:w="1"/><text x="93.5833%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3333%" y="245" width="0.0794%" height="15" fill="rgb(219,158,36)" fg:x="1176" fg:w="1"/><text x="93.5833%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="92.9365%" y="485" width="0.5556%" height="15" fill="rgb(251,128,40)" fg:x="1171" fg:w="7"/><text x="93.1865%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="92.9365%" y="469" width="0.5556%" height="15" fill="rgb(254,101,39)" fg:x="1171" fg:w="7"/><text x="93.1865%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (7 samples, 0.56%)</title><rect x="92.9365%" y="453" width="0.5556%" height="15" fill="rgb(221,168,40)" fg:x="1171" fg:w="7"/><text x="93.1865%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (7 samples, 0.56%)</title><rect x="92.9365%" y="437" width="0.5556%" height="15" fill="rgb(221,14,27)" fg:x="1171" fg:w="7"/><text x="93.1865%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="93.0952%" y="421" width="0.3968%" height="15" fill="rgb(207,36,43)" fg:x="1173" fg:w="5"/><text x="93.3452%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4127%" y="405" width="0.0794%" height="15" fill="rgb(240,172,53)" fg:x="1177" fg:w="1"/><text x="93.6627%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4921%" y="437" width="0.0794%" height="15" fill="rgb(241,138,43)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4921%" y="421" width="0.0794%" height="15" fill="rgb(227,78,19)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.4921%" y="405" width="0.0794%" height="15" fill="rgb(215,127,44)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.4921%" y="389" width="0.0794%" height="15" fill="rgb(227,13,10)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.4921%" y="373" width="0.0794%" height="15" fill="rgb(249,177,6)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.4921%" y="357" width="0.0794%" height="15" fill="rgb(215,154,26)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.4921%" y="341" width="0.0794%" height="15" fill="rgb(250,168,20)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.4921%" y="325" width="0.0794%" height="15" fill="rgb(222,53,38)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.4921%" y="309" width="0.0794%" height="15" fill="rgb(245,154,5)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.4921%" y="293" width="0.0794%" height="15" fill="rgb(214,89,50)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.4921%" y="277" width="0.0794%" height="15" fill="rgb(232,73,14)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4921%" y="261" width="0.0794%" height="15" fill="rgb(230,101,20)" fg:x="1178" fg:w="1"/><text x="93.7421%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.4921%" y="453" width="0.1587%" height="15" fill="rgb(208,56,28)" fg:x="1178" fg:w="2"/><text x="93.7421%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5714%" y="437" width="0.0794%" height="15" fill="rgb(247,205,22)" fg:x="1179" fg:w="1"/><text x="93.8214%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5714%" y="421" width="0.0794%" height="15" fill="rgb(252,109,51)" fg:x="1179" fg:w="1"/><text x="93.8214%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.6508%" y="389" width="0.0794%" height="15" fill="rgb(220,40,24)" fg:x="1180" fg:w="1"/><text x="93.9008%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.6508%" y="373" width="0.0794%" height="15" fill="rgb(251,108,7)" fg:x="1180" fg:w="1"/><text x="93.9008%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6508%" y="357" width="0.0794%" height="15" fill="rgb(238,102,51)" fg:x="1180" fg:w="1"/><text x="93.9008%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="93.6508%" y="341" width="0.0794%" height="15" fill="rgb(219,149,34)" fg:x="1180" fg:w="1"/><text x="93.9008%" y="351.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (11 samples, 0.87%)</title><rect x="92.9365%" y="501" width="0.8730%" height="15" fill="rgb(239,70,0)" fg:x="1171" fg:w="11"/><text x="93.1865%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="93.4921%" y="485" width="0.3175%" height="15" fill="rgb(246,214,23)" fg:x="1178" fg:w="4"/><text x="93.7421%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="93.4921%" y="469" width="0.3175%" height="15" fill="rgb(239,221,51)" fg:x="1178" fg:w="4"/><text x="93.7421%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.6508%" y="453" width="0.1587%" height="15" fill="rgb(254,62,14)" fg:x="1180" fg:w="2"/><text x="93.9008%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.6508%" y="437" width="0.1587%" height="15" fill="rgb(253,57,33)" fg:x="1180" fg:w="2"/><text x="93.9008%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="93.6508%" y="421" width="0.1587%" height="15" fill="rgb(229,34,6)" fg:x="1180" fg:w="2"/><text x="93.9008%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="93.6508%" y="405" width="0.1587%" height="15" fill="rgb(235,191,23)" fg:x="1180" fg:w="2"/><text x="93.9008%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.7302%" y="389" width="0.0794%" height="15" fill="rgb(217,207,27)" fg:x="1181" fg:w="1"/><text x="93.9802%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="93.8095%" y="485" width="0.0794%" height="15" fill="rgb(232,41,44)" fg:x="1182" fg:w="1"/><text x="94.0595%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.8095%" y="469" width="0.0794%" height="15" fill="rgb(221,188,19)" fg:x="1182" fg:w="1"/><text x="94.0595%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8095%" y="453" width="0.0794%" height="15" fill="rgb(245,180,45)" fg:x="1182" fg:w="1"/><text x="94.0595%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.8889%" y="453" width="0.1587%" height="15" fill="rgb(250,220,42)" fg:x="1183" fg:w="2"/><text x="94.1389%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.8889%" y="437" width="0.1587%" height="15" fill="rgb(234,16,34)" fg:x="1183" fg:w="2"/><text x="94.1389%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.8889%" y="421" width="0.1587%" height="15" fill="rgb(233,217,23)" fg:x="1183" fg:w="2"/><text x="94.1389%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9683%" y="405" width="0.0794%" height="15" fill="rgb(209,22,46)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.9683%" y="389" width="0.0794%" height="15" fill="rgb(213,101,18)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.9683%" y="373" width="0.0794%" height="15" fill="rgb(215,179,52)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.9683%" y="357" width="0.0794%" height="15" fill="rgb(223,50,25)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.9683%" y="341" width="0.0794%" height="15" fill="rgb(224,51,44)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.9683%" y="325" width="0.0794%" height="15" fill="rgb(224,13,54)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.9683%" y="309" width="0.0794%" height="15" fill="rgb(219,58,47)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.9683%" y="293" width="0.0794%" height="15" fill="rgb(246,124,34)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.9683%" y="277" width="0.0794%" height="15" fill="rgb(245,109,25)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.9683%" y="261" width="0.0794%" height="15" fill="rgb(235,48,23)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.9683%" y="245" width="0.0794%" height="15" fill="rgb(229,203,36)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9683%" y="229" width="0.0794%" height="15" fill="rgb(234,180,9)" fg:x="1184" fg:w="1"/><text x="94.2183%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="94.1270%" y="373" width="0.0794%" height="15" fill="rgb(228,98,45)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1270%" y="357" width="0.0794%" height="15" fill="rgb(240,24,36)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1270%" y="341" width="0.0794%" height="15" fill="rgb(227,154,19)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.1270%" y="325" width="0.0794%" height="15" fill="rgb(231,2,48)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.1270%" y="309" width="0.0794%" height="15" fill="rgb(219,216,0)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.1270%" y="293" width="0.0794%" height="15" fill="rgb(251,88,0)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.1270%" y="277" width="0.0794%" height="15" fill="rgb(242,45,45)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.1270%" y="261" width="0.0794%" height="15" fill="rgb(218,149,45)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.1270%" y="245" width="0.0794%" height="15" fill="rgb(247,194,10)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.1270%" y="229" width="0.0794%" height="15" fill="rgb(234,33,37)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.1270%" y="213" width="0.0794%" height="15" fill="rgb(218,61,13)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.1270%" y="197" width="0.0794%" height="15" fill="rgb(210,80,52)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1270%" y="181" width="0.0794%" height="15" fill="rgb(218,203,27)" fg:x="1186" fg:w="1"/><text x="94.3770%" y="191.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="94.2063%" y="277" width="0.0794%" height="15" fill="rgb(209,126,33)" fg:x="1187" fg:w="1"/><text x="94.4563%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.2857%" y="277" width="0.0794%" height="15" fill="rgb(234,173,41)" fg:x="1188" fg:w="1"/><text x="94.5357%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3651%" y="245" width="0.0794%" height="15" fill="rgb(228,166,9)" fg:x="1189" fg:w="1"/><text x="94.6151%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3651%" y="229" width="0.0794%" height="15" fill="rgb(208,124,43)" fg:x="1189" fg:w="1"/><text x="94.6151%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="94.4444%" y="229" width="0.1587%" height="15" fill="rgb(212,154,38)" fg:x="1190" fg:w="2"/><text x="94.6944%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="94.4444%" y="213" width="0.1587%" height="15" fill="rgb(246,179,35)" fg:x="1190" fg:w="2"/><text x="94.6944%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="94.4444%" y="197" width="0.1587%" height="15" fill="rgb(251,3,50)" fg:x="1190" fg:w="2"/><text x="94.6944%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.5238%" y="181" width="0.0794%" height="15" fill="rgb(219,96,8)" fg:x="1191" fg:w="1"/><text x="94.7738%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="94.3651%" y="277" width="0.3175%" height="15" fill="rgb(251,216,33)" fg:x="1189" fg:w="4"/><text x="94.6151%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="94.3651%" y="261" width="0.3175%" height="15" fill="rgb(243,145,29)" fg:x="1189" fg:w="4"/><text x="94.6151%" y="271.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.4444%" y="245" width="0.2381%" height="15" fill="rgb(210,75,20)" fg:x="1190" fg:w="3"/><text x="94.6944%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6032%" y="229" width="0.0794%" height="15" fill="rgb(235,56,8)" fg:x="1192" fg:w="1"/><text x="94.8532%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6032%" y="213" width="0.0794%" height="15" fill="rgb(226,175,49)" fg:x="1192" fg:w="1"/><text x="94.8532%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6032%" y="197" width="0.0794%" height="15" fill="rgb(242,204,23)" fg:x="1192" fg:w="1"/><text x="94.8532%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6032%" y="181" width="0.0794%" height="15" fill="rgb(225,104,24)" fg:x="1192" fg:w="1"/><text x="94.8532%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6825%" y="245" width="0.0794%" height="15" fill="rgb(253,34,1)" fg:x="1193" fg:w="1"/><text x="94.9325%" y="255.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.63%)</title><rect x="94.2063%" y="341" width="0.6349%" height="15" fill="rgb(233,199,23)" fg:x="1187" fg:w="8"/><text x="94.4563%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.63%)</title><rect x="94.2063%" y="325" width="0.6349%" height="15" fill="rgb(247,7,51)" fg:x="1187" fg:w="8"/><text x="94.4563%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="94.2063%" y="309" width="0.6349%" height="15" fill="rgb(214,146,12)" fg:x="1187" fg:w="8"/><text x="94.4563%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="94.2063%" y="293" width="0.6349%" height="15" fill="rgb(234,181,43)" fg:x="1187" fg:w="8"/><text x="94.4563%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.6825%" y="277" width="0.1587%" height="15" fill="rgb(239,148,6)" fg:x="1193" fg:w="2"/><text x="94.9325%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.6825%" y="261" width="0.1587%" height="15" fill="rgb(206,151,17)" fg:x="1193" fg:w="2"/><text x="94.9325%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.7619%" y="245" width="0.0794%" height="15" fill="rgb(213,215,10)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7619%" y="229" width="0.0794%" height="15" fill="rgb(215,220,44)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7619%" y="213" width="0.0794%" height="15" fill="rgb(245,205,37)" fg:x="1194" fg:w="1"/><text x="95.0119%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="94.8413%" y="293" width="0.2381%" height="15" fill="rgb(245,130,43)" fg:x="1195" fg:w="3"/><text x="95.0913%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="94.9206%" y="277" width="0.1587%" height="15" fill="rgb(231,227,38)" fg:x="1196" fg:w="2"/><text x="95.1706%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="95.1587%" y="229" width="0.1587%" height="15" fill="rgb(233,185,4)" fg:x="1199" fg:w="2"/><text x="95.4087%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.1587%" y="213" width="0.1587%" height="15" fill="rgb(224,154,43)" fg:x="1199" fg:w="2"/><text x="95.4087%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3175%" y="229" width="0.0794%" height="15" fill="rgb(235,156,15)" fg:x="1201" fg:w="1"/><text x="95.5675%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3175%" y="213" width="0.0794%" height="15" fill="rgb(211,55,43)" fg:x="1201" fg:w="1"/><text x="95.5675%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.3968%" y="197" width="0.0794%" height="15" fill="rgb(247,149,40)" fg:x="1202" fg:w="1"/><text x="95.6468%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (19 samples, 1.51%)</title><rect x="94.0476%" y="453" width="1.5079%" height="15" fill="rgb(232,171,16)" fg:x="1185" fg:w="19"/><text x="94.2976%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.51%)</title><rect x="94.0476%" y="437" width="1.5079%" height="15" fill="rgb(215,117,49)" fg:x="1185" fg:w="19"/><text x="94.2976%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.43%)</title><rect x="94.1270%" y="421" width="1.4286%" height="15" fill="rgb(246,194,11)" fg:x="1186" fg:w="18"/><text x="94.3770%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 1.43%)</title><rect x="94.1270%" y="405" width="1.4286%" height="15" fill="rgb(242,101,44)" fg:x="1186" fg:w="18"/><text x="94.3770%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (18 samples, 1.43%)</title><rect x="94.1270%" y="389" width="1.4286%" height="15" fill="rgb(226,174,6)" fg:x="1186" fg:w="18"/><text x="94.3770%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (17 samples, 1.35%)</title><rect x="94.2063%" y="373" width="1.3492%" height="15" fill="rgb(213,150,20)" fg:x="1187" fg:w="17"/><text x="94.4563%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity (17 samples, 1.35%)</title><rect x="94.2063%" y="357" width="1.3492%" height="15" fill="rgb(222,124,42)" fg:x="1187" fg:w="17"/><text x="94.4563%" y="367.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.71%)</title><rect x="94.8413%" y="341" width="0.7143%" height="15" fill="rgb(250,19,47)" fg:x="1195" fg:w="9"/><text x="95.0913%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.71%)</title><rect x="94.8413%" y="325" width="0.7143%" height="15" fill="rgb(241,217,19)" fg:x="1195" fg:w="9"/><text x="95.0913%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="94.8413%" y="309" width="0.7143%" height="15" fill="rgb(207,210,34)" fg:x="1195" fg:w="9"/><text x="95.0913%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="95.0794%" y="293" width="0.4762%" height="15" fill="rgb(244,45,4)" fg:x="1198" fg:w="6"/><text x="95.3294%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="95.0794%" y="277" width="0.4762%" height="15" fill="rgb(252,134,50)" fg:x="1198" fg:w="6"/><text x="95.3294%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="95.0794%" y="261" width="0.4762%" height="15" fill="rgb(238,74,2)" fg:x="1198" fg:w="6"/><text x="95.3294%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.1587%" y="245" width="0.3968%" height="15" fill="rgb(226,58,46)" fg:x="1199" fg:w="5"/><text x="95.4087%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.3968%" y="229" width="0.1587%" height="15" fill="rgb(232,83,35)" fg:x="1202" fg:w="2"/><text x="95.6468%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.3968%" y="213" width="0.1587%" height="15" fill="rgb(212,148,47)" fg:x="1202" fg:w="2"/><text x="95.6468%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4762%" y="197" width="0.0794%" height="15" fill="rgb(235,29,1)" fg:x="1203" fg:w="1"/><text x="95.7262%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.5556%" y="453" width="0.0794%" height="15" fill="rgb(247,55,37)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.5556%" y="437" width="0.0794%" height="15" fill="rgb(222,48,3)" fg:x="1204" fg:w="1"/><text x="95.8056%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="95.6349%" y="453" width="0.0794%" height="15" fill="rgb(234,21,33)" fg:x="1205" fg:w="1"/><text x="95.8849%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.7937%" y="421" width="0.0794%" height="15" fill="rgb(247,178,53)" fg:x="1207" fg:w="1"/><text x="96.0437%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.7937%" y="405" width="0.0794%" height="15" fill="rgb(225,75,7)" fg:x="1207" fg:w="1"/><text x="96.0437%" y="415.50"></text></g><g><title>plugins_core::tools::get_contained_keys (28 samples, 2.22%)</title><rect x="93.8095%" y="501" width="2.2222%" height="15" fill="rgb(219,199,7)" fg:x="1182" fg:w="28"/><text x="94.0595%" y="511.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (27 samples, 2.14%)</title><rect x="93.8889%" y="485" width="2.1429%" height="15" fill="rgb(209,93,42)" fg:x="1183" fg:w="27"/><text x="94.1389%" y="495.50">k..</text></g><g><title>kernel::model::Entity::load_scope (27 samples, 2.14%)</title><rect x="93.8889%" y="469" width="2.1429%" height="15" fill="rgb(240,175,17)" fg:x="1183" fg:w="27"/><text x="94.1389%" y="479.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="95.7143%" y="453" width="0.3175%" height="15" fill="rgb(232,106,7)" fg:x="1206" fg:w="4"/><text x="95.9643%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.7143%" y="437" width="0.3175%" height="15" fill="rgb(242,106,43)" fg:x="1206" fg:w="4"/><text x="95.9643%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="95.8730%" y="421" width="0.1587%" height="15" fill="rgb(242,61,37)" fg:x="1208" fg:w="2"/><text x="96.1230%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="95.8730%" y="405" width="0.1587%" height="15" fill="rgb(205,72,10)" fg:x="1208" fg:w="2"/><text x="96.1230%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.9524%" y="389" width="0.0794%" height="15" fill="rgb(214,184,36)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.9524%" y="373" width="0.0794%" height="15" fill="rgb(206,107,18)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9524%" y="357" width="0.0794%" height="15" fill="rgb(210,75,5)" fg:x="1209" fg:w="1"/><text x="96.2024%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 3.25%)</title><rect x="92.8571%" y="533" width="3.2540%" height="15" fill="rgb(205,3,19)" fg:x="1170" fg:w="41"/><text x="93.1071%" y="543.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 3.25%)</title><rect x="92.8571%" y="517" width="3.2540%" height="15" fill="rgb(207,181,42)" fg:x="1170" fg:w="41"/><text x="93.1071%" y="527.50">&lt;co..</text></g><g><title>plugins_core::tools::get_occupant_keys (1 samples, 0.08%)</title><rect x="96.0317%" y="501" width="0.0794%" height="15" fill="rgb(229,179,43)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="96.0317%" y="485" width="0.0794%" height="15" fill="rgb(246,95,30)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="96.0317%" y="469" width="0.0794%" height="15" fill="rgb(234,144,45)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0317%" y="453" width="0.0794%" height="15" fill="rgb(250,54,25)" fg:x="1210" fg:w="1"/><text x="96.2817%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1905%" y="485" width="0.0794%" height="15" fill="rgb(215,195,40)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1905%" y="469" width="0.0794%" height="15" fill="rgb(233,188,42)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1905%" y="453" width="0.0794%" height="15" fill="rgb(247,227,35)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1905%" y="437" width="0.0794%" height="15" fill="rgb(249,124,27)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1905%" y="421" width="0.0794%" height="15" fill="rgb(219,207,25)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.1905%" y="405" width="0.0794%" height="15" fill="rgb(241,216,47)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.1905%" y="389" width="0.0794%" height="15" fill="rgb(233,82,50)" fg:x="1212" fg:w="1"/><text x="96.4405%" y="399.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="96.8254%" y="277" width="0.0794%" height="15" fill="rgb(232,63,2)" fg:x="1220" fg:w="1"/><text x="97.0754%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.8254%" y="261" width="0.0794%" height="15" fill="rgb(236,184,28)" fg:x="1220" fg:w="1"/><text x="97.0754%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="96.8254%" y="245" width="0.0794%" height="15" fill="rgb(254,63,27)" fg:x="1220" fg:w="1"/><text x="97.0754%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="96.7460%" y="309" width="0.2381%" height="15" fill="rgb(253,106,28)" fg:x="1219" fg:w="3"/><text x="96.9960%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="96.7460%" y="293" width="0.2381%" height="15" fill="rgb(225,141,39)" fg:x="1219" fg:w="3"/><text x="96.9960%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.9048%" y="277" width="0.0794%" height="15" fill="rgb(222,157,20)" fg:x="1221" fg:w="1"/><text x="97.1548%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9048%" y="261" width="0.0794%" height="15" fill="rgb(210,190,9)" fg:x="1221" fg:w="1"/><text x="97.1548%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="96.9841%" y="293" width="0.1587%" height="15" fill="rgb(242,167,7)" fg:x="1222" fg:w="2"/><text x="97.2341%" y="303.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="97.0635%" y="277" width="0.0794%" height="15" fill="rgb(227,82,41)" fg:x="1223" fg:w="1"/><text x="97.3135%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.0635%" y="261" width="0.0794%" height="15" fill="rgb(222,131,13)" fg:x="1223" fg:w="1"/><text x="97.3135%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="97.0635%" y="245" width="0.0794%" height="15" fill="rgb(221,98,26)" fg:x="1223" fg:w="1"/><text x="97.3135%" y="255.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="97.0635%" y="229" width="0.0794%" height="15" fill="rgb(251,63,52)" fg:x="1223" fg:w="1"/><text x="97.3135%" y="239.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.71%)</title><rect x="96.5079%" y="373" width="0.7143%" height="15" fill="rgb(246,25,43)" fg:x="1216" fg:w="9"/><text x="96.7579%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="96.6667%" y="357" width="0.5556%" height="15" fill="rgb(247,167,15)" fg:x="1218" fg:w="7"/><text x="96.9167%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="96.6667%" y="341" width="0.5556%" height="15" fill="rgb(240,104,42)" fg:x="1218" fg:w="7"/><text x="96.9167%" y="351.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.48%)</title><rect x="96.7460%" y="325" width="0.4762%" height="15" fill="rgb(224,54,6)" fg:x="1219" fg:w="6"/><text x="96.9960%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="96.9841%" y="309" width="0.2381%" height="15" fill="rgb(244,108,35)" fg:x="1222" fg:w="3"/><text x="97.2341%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1429%" y="293" width="0.0794%" height="15" fill="rgb(216,154,2)" fg:x="1224" fg:w="1"/><text x="97.3929%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="97.2222%" y="357" width="0.2381%" height="15" fill="rgb(222,8,47)" fg:x="1225" fg:w="3"/><text x="97.4722%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.03%)</title><rect x="96.5079%" y="389" width="1.0317%" height="15" fill="rgb(252,93,1)" fg:x="1216" fg:w="13"/><text x="96.7579%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="97.2222%" y="373" width="0.3175%" height="15" fill="rgb(223,226,51)" fg:x="1225" fg:w="4"/><text x="97.4722%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4603%" y="357" width="0.0794%" height="15" fill="rgb(206,147,9)" fg:x="1228" fg:w="1"/><text x="97.7103%" y="367.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (16 samples, 1.27%)</title><rect x="96.5079%" y="421" width="1.2698%" height="15" fill="rgb(248,180,41)" fg:x="1216" fg:w="16"/><text x="96.7579%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (16 samples, 1.27%)</title><rect x="96.5079%" y="405" width="1.2698%" height="15" fill="rgb(209,47,50)" fg:x="1216" fg:w="16"/><text x="96.7579%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="97.5397%" y="389" width="0.2381%" height="15" fill="rgb(243,65,31)" fg:x="1229" fg:w="3"/><text x="97.7897%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.6190%" y="373" width="0.1587%" height="15" fill="rgb(228,128,1)" fg:x="1230" fg:w="2"/><text x="97.8690%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.51%)</title><rect x="96.3492%" y="437" width="1.5079%" height="15" fill="rgb(231,192,16)" fg:x="1214" fg:w="19"/><text x="96.5992%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.7778%" y="421" width="0.0794%" height="15" fill="rgb(224,26,40)" fg:x="1232" fg:w="1"/><text x="98.0278%" y="431.50"></text></g><g><title>&lt;plugins_rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (23 samples, 1.83%)</title><rect x="96.3492%" y="469" width="1.8254%" height="15" fill="rgb(214,192,17)" fg:x="1214" fg:w="23"/><text x="96.5992%" y="479.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (23 samples, 1.83%)</title><rect x="96.3492%" y="453" width="1.8254%" height="15" fill="rgb(225,147,18)" fg:x="1214" fg:w="23"/><text x="96.5992%" y="463.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="97.8571%" y="437" width="0.3175%" height="15" fill="rgb(205,35,11)" fg:x="1233" fg:w="4"/><text x="98.1071%" y="447.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="97.8571%" y="421" width="0.3175%" height="15" fill="rgb(242,40,42)" fg:x="1233" fg:w="4"/><text x="98.1071%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="98.3333%" y="421" width="0.3175%" height="15" fill="rgb(250,170,13)" fg:x="1239" fg:w="4"/><text x="98.5833%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.6508%" y="421" width="0.1587%" height="15" fill="rgb(240,161,28)" fg:x="1243" fg:w="2"/><text x="98.9008%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.6508%" y="405" width="0.1587%" height="15" fill="rgb(245,179,12)" fg:x="1243" fg:w="2"/><text x="98.9008%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="98.6508%" y="389" width="0.1587%" height="15" fill="rgb(250,92,32)" fg:x="1243" fg:w="2"/><text x="98.9008%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="98.8095%" y="421" width="0.1587%" height="15" fill="rgb(233,10,40)" fg:x="1245" fg:w="2"/><text x="99.0595%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.8095%" y="405" width="0.1587%" height="15" fill="rgb(217,98,1)" fg:x="1245" fg:w="2"/><text x="99.0595%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.8095%" y="389" width="0.1587%" height="15" fill="rgb(238,202,7)" fg:x="1245" fg:w="2"/><text x="99.0595%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8889%" y="373" width="0.0794%" height="15" fill="rgb(222,91,3)" fg:x="1246" fg:w="1"/><text x="99.1389%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.8889%" y="357" width="0.0794%" height="15" fill="rgb(211,170,49)" fg:x="1246" fg:w="1"/><text x="99.1389%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.9683%" y="357" width="0.1587%" height="15" fill="rgb(253,139,18)" fg:x="1247" fg:w="2"/><text x="99.2183%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.9683%" y="341" width="0.1587%" height="15" fill="rgb(222,4,43)" fg:x="1247" fg:w="2"/><text x="99.2183%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="98.9683%" y="421" width="0.2381%" height="15" fill="rgb(207,205,12)" fg:x="1247" fg:w="3"/><text x="99.2183%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="98.9683%" y="405" width="0.2381%" height="15" fill="rgb(216,159,46)" fg:x="1247" fg:w="3"/><text x="99.2183%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="98.9683%" y="389" width="0.2381%" height="15" fill="rgb(236,115,1)" fg:x="1247" fg:w="3"/><text x="99.2183%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="98.9683%" y="373" width="0.2381%" height="15" fill="rgb(251,35,33)" fg:x="1247" fg:w="3"/><text x="99.2183%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="99.1270%" y="357" width="0.0794%" height="15" fill="rgb(248,62,51)" fg:x="1249" fg:w="1"/><text x="99.3770%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="99.2063%" y="421" width="0.0794%" height="15" fill="rgb(254,180,19)" fg:x="1250" fg:w="1"/><text x="99.4563%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="99.2063%" y="405" width="0.0794%" height="15" fill="rgb(217,100,32)" fg:x="1250" fg:w="1"/><text x="99.4563%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2857%" y="405" width="0.0794%" height="15" fill="rgb(224,71,22)" fg:x="1251" fg:w="1"/><text x="99.5357%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2857%" y="389" width="0.0794%" height="15" fill="rgb(251,185,33)" fg:x="1251" fg:w="1"/><text x="99.5357%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="99.3651%" y="341" width="0.0794%" height="15" fill="rgb(209,75,48)" fg:x="1252" fg:w="1"/><text x="99.6151%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="99.3651%" y="325" width="0.0794%" height="15" fill="rgb(253,190,16)" fg:x="1252" fg:w="1"/><text x="99.6151%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="99.3651%" y="373" width="0.1587%" height="15" fill="rgb(226,140,1)" fg:x="1252" fg:w="2"/><text x="99.6151%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="99.3651%" y="357" width="0.1587%" height="15" fill="rgb(206,75,30)" fg:x="1252" fg:w="2"/><text x="99.6151%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4444%" y="341" width="0.0794%" height="15" fill="rgb(231,208,37)" fg:x="1253" fg:w="1"/><text x="99.6944%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="99.3651%" y="389" width="0.3968%" height="15" fill="rgb(238,136,40)" fg:x="1252" fg:w="5"/><text x="99.6151%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="99.5238%" y="373" width="0.2381%" height="15" fill="rgb(247,137,17)" fg:x="1254" fg:w="3"/><text x="99.7738%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="99.6825%" y="357" width="0.0794%" height="15" fill="rgb(240,60,40)" fg:x="1256" fg:w="1"/><text x="99.9325%" y="367.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (93 samples, 7.38%)</title><rect x="92.4603%" y="565" width="7.3810%" height="15" fill="rgb(236,68,50)" fg:x="1165" fg:w="93"/><text x="92.7103%" y="575.50">&lt;plugins_r..</text></g><g><title>core::iter::adapters::try_process (88 samples, 6.98%)</title><rect x="92.8571%" y="549" width="6.9841%" height="15" fill="rgb(230,42,12)" fg:x="1170" fg:w="88"/><text x="93.1071%" y="559.50">core::ite..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (47 samples, 3.73%)</title><rect x="96.1111%" y="533" width="3.7302%" height="15" fill="rgb(219,16,16)" fg:x="1211" fg:w="47"/><text x="96.3611%" y="543.50">allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 3.65%)</title><rect x="96.1905%" y="517" width="3.6508%" height="15" fill="rgb(220,38,35)" fg:x="1212" fg:w="46"/><text x="96.4405%" y="527.50">&lt;cor..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (46 samples, 3.65%)</title><rect x="96.1905%" y="501" width="3.6508%" height="15" fill="rgb(228,33,1)" fg:x="1212" fg:w="46"/><text x="96.4405%" y="511.50">plug..</text></g><g><title>&lt;plugins_rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (45 samples, 3.57%)</title><rect x="96.2698%" y="485" width="3.5714%" height="15" fill="rgb(241,46,31)" fg:x="1213" fg:w="45"/><text x="96.5198%" y="495.50">&lt;plu..</text></g><g><title>kernel::model::EntityPtr::to_json_value (21 samples, 1.67%)</title><rect x="98.1746%" y="469" width="1.6667%" height="15" fill="rgb(232,58,20)" fg:x="1237" fg:w="21"/><text x="98.4246%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (21 samples, 1.67%)</title><rect x="98.1746%" y="453" width="1.6667%" height="15" fill="rgb(206,228,53)" fg:x="1237" fg:w="21"/><text x="98.4246%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.59%)</title><rect x="98.2540%" y="437" width="1.5873%" height="15" fill="rgb(206,88,33)" fg:x="1238" fg:w="20"/><text x="98.5040%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="99.2857%" y="421" width="0.5556%" height="15" fill="rgb(238,69,7)" fg:x="1251" fg:w="7"/><text x="99.5357%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.48%)</title><rect x="99.3651%" y="405" width="0.4762%" height="15" fill="rgb(250,21,46)" fg:x="1252" fg:w="6"/><text x="99.6151%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="99.7619%" y="389" width="0.0794%" height="15" fill="rgb(215,212,21)" fg:x="1257" fg:w="1"/><text x="100.0119%" y="399.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (100 samples, 7.94%)</title><rect x="91.9841%" y="613" width="7.9365%" height="15" fill="rgb(211,35,12)" fg:x="1159" fg:w="100"/><text x="92.2341%" y="623.50">kernel::plu..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (100 samples, 7.94%)</title><rect x="91.9841%" y="597" width="7.9365%" height="15" fill="rgb(231,184,16)" fg:x="1159" fg:w="100"/><text x="92.2341%" y="607.50">&lt;plugins_dy..</text></g><g><title>plugins_rpc::querying::have_surroundings (94 samples, 7.46%)</title><rect x="92.4603%" y="581" width="7.4603%" height="15" fill="rgb(242,140,15)" fg:x="1165" fg:w="94"/><text x="92.7103%" y="591.50">plugins_rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.8413%" y="565" width="0.0794%" height="15" fill="rgb(220,37,14)" fg:x="1258" fg:w="1"/><text x="100.0913%" y="575.50"></text></g><g><title>all (1,260 samples, 100%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(223,146,22)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="1007.50"></text></g><g><title>simple-255e00ed (1,260 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(216,132,15)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="991.50">simple-255e00ed</text></g><g><title>_start (1,260 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(248,83,5)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="975.50">_start</text></g><g><title>__libc_start_main (1,260 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(231,206,48)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="959.50">__libc_start_main</text></g><g><title>main (1,260 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(253,185,37)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="943.50">main</text></g><g><title>std::rt::lang_start_internal (1,260 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(208,21,44)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="927.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,260 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(236,125,4)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,260 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(226,134,25)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,260 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(250,201,12)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="879.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,260 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(225,92,18)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,260 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(227,35,22)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,260 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(214,180,52)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,260 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(233,55,38)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,260 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(249,171,43)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="799.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,260 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(239,87,2)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="783.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,260 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(248,141,5)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,260 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(238,33,42)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="751.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,260 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(231,57,19)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="735.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,260 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(214,78,53)" fg:x="0" fg:w="1260"/><text x="0.2500%" y="719.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (258 samples, 20.48%)</title><rect x="79.5238%" y="693" width="20.4762%" height="15" fill="rgb(206,132,29)" fg:x="1002" fg:w="258"/><text x="79.7738%" y="703.50">&lt;criterion::routine::Function&lt;M,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (258 samples, 20.48%)</title><rect x="79.5238%" y="677" width="20.4762%" height="15" fill="rgb(248,174,31)" fg:x="1002" fg:w="258"/><text x="79.7738%" y="687.50">criterion::bencher::Bencher&lt;M&gt;::..</text></g><g><title>tests::evaluate_text_in_new_domain (258 samples, 20.48%)</title><rect x="79.5238%" y="661" width="20.4762%" height="15" fill="rgb(221,87,13)" fg:x="1002" fg:w="258"/><text x="79.7738%" y="671.50">tests::evaluate_text_in_new_doma..</text></g><g><title>engine::session::Session::evaluate_and_perform (119 samples, 9.44%)</title><rect x="90.5556%" y="645" width="9.4444%" height="15" fill="rgb(223,197,17)" fg:x="1141" fg:w="119"/><text x="90.8056%" y="655.50">engine::sessio..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (119 samples, 9.44%)</title><rect x="90.5556%" y="629" width="9.4444%" height="15" fill="rgb(220,144,50)" fg:x="1141" fg:w="119"/><text x="90.8056%" y="639.50">engine::perfor..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="99.9206%" y="613" width="0.0794%" height="15" fill="rgb(244,201,11)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="623.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="99.9206%" y="597" width="0.0794%" height="15" fill="rgb(249,81,34)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="99.9206%" y="581" width="0.0794%" height="15" fill="rgb(205,161,12)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.9206%" y="565" width="0.0794%" height="15" fill="rgb(252,139,50)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="99.9206%" y="549" width="0.0794%" height="15" fill="rgb(205,169,14)" fg:x="1259" fg:w="1"/><text x="100.1706%" y="559.50"></text></g></svg></svg>