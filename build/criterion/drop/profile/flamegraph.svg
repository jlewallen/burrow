<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="1254"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0797%" y="501" width="0.0797%" height="15" fill="rgb(242,5,29)" fg:x="1" fg:w="1"/><text x="0.3297%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.3190%" y="437" width="0.1595%" height="15" fill="rgb(214,130,32)" fg:x="4" fg:w="2"/><text x="0.5690%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.5582%" y="421" width="0.0797%" height="15" fill="rgb(244,210,16)" fg:x="7" fg:w="1"/><text x="0.8082%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.5582%" y="405" width="0.0797%" height="15" fill="rgb(234,48,26)" fg:x="7" fg:w="1"/><text x="0.8082%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5582%" y="389" width="0.0797%" height="15" fill="rgb(231,82,38)" fg:x="7" fg:w="1"/><text x="0.8082%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.6380%" y="421" width="0.2392%" height="15" fill="rgb(254,128,41)" fg:x="8" fg:w="3"/><text x="0.8880%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.8772%" y="421" width="0.2392%" height="15" fill="rgb(212,73,49)" fg:x="11" fg:w="3"/><text x="1.1272%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0367%" y="405" width="0.0797%" height="15" fill="rgb(205,62,54)" fg:x="13" fg:w="1"/><text x="1.2867%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1962%" y="405" width="0.0797%" height="15" fill="rgb(228,0,8)" fg:x="15" fg:w="1"/><text x="1.4462%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2759%" y="389" width="0.1595%" height="15" fill="rgb(251,28,17)" fg:x="16" fg:w="2"/><text x="1.5259%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5152%" y="373" width="0.0797%" height="15" fill="rgb(238,105,27)" fg:x="19" fg:w="1"/><text x="1.7652%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.5949%" y="373" width="0.1595%" height="15" fill="rgb(237,216,33)" fg:x="20" fg:w="2"/><text x="1.8449%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6746%" y="357" width="0.0797%" height="15" fill="rgb(229,228,25)" fg:x="21" fg:w="1"/><text x="1.9246%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.75%)</title><rect x="0.1595%" y="469" width="1.7544%" height="15" fill="rgb(233,75,23)" fg:x="2" fg:w="22"/><text x="0.4095%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.67%)</title><rect x="0.2392%" y="453" width="1.6746%" height="15" fill="rgb(231,207,16)" fg:x="3" fg:w="21"/><text x="0.4892%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.44%)</title><rect x="0.4785%" y="437" width="1.4354%" height="15" fill="rgb(231,191,45)" fg:x="6" fg:w="18"/><text x="0.7285%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="1.1164%" y="421" width="0.7974%" height="15" fill="rgb(224,133,17)" fg:x="14" fg:w="10"/><text x="1.3664%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="1.2759%" y="405" width="0.6380%" height="15" fill="rgb(209,178,27)" fg:x="16" fg:w="8"/><text x="1.5259%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="1.4354%" y="389" width="0.4785%" height="15" fill="rgb(218,37,11)" fg:x="18" fg:w="6"/><text x="1.6854%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.7544%" y="373" width="0.1595%" height="15" fill="rgb(251,226,25)" fg:x="22" fg:w="2"/><text x="2.0044%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.7544%" y="357" width="0.1595%" height="15" fill="rgb(209,222,27)" fg:x="22" fg:w="2"/><text x="2.0044%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.83%)</title><rect x="0.1595%" y="485" width="1.8341%" height="15" fill="rgb(238,22,21)" fg:x="2" fg:w="23"/><text x="0.4095%" y="495.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9139%" y="469" width="0.0797%" height="15" fill="rgb(233,161,25)" fg:x="24" fg:w="1"/><text x="2.1639%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.07%)</title><rect x="0.0000%" y="549" width="2.0734%" height="15" fill="rgb(226,122,53)" fg:x="0" fg:w="26"/><text x="0.2500%" y="559.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (26 samples, 2.07%)</title><rect x="0.0000%" y="533" width="2.0734%" height="15" fill="rgb(220,123,17)" fg:x="0" fg:w="26"/><text x="0.2500%" y="543.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 1.99%)</title><rect x="0.0797%" y="517" width="1.9936%" height="15" fill="rgb(230,224,35)" fg:x="1" fg:w="25"/><text x="0.3297%" y="527.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (24 samples, 1.91%)</title><rect x="0.1595%" y="501" width="1.9139%" height="15" fill="rgb(246,83,8)" fg:x="2" fg:w="24"/><text x="0.4095%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="1.9936%" y="485" width="0.0797%" height="15" fill="rgb(230,214,17)" fg:x="25" fg:w="1"/><text x="2.2436%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9936%" y="469" width="0.0797%" height="15" fill="rgb(222,97,18)" fg:x="25" fg:w="1"/><text x="2.2436%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="2.0734%" y="501" width="0.1595%" height="15" fill="rgb(206,79,1)" fg:x="26" fg:w="2"/><text x="2.3234%" y="511.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="2.2329%" y="501" width="0.0797%" height="15" fill="rgb(214,121,34)" fg:x="28" fg:w="1"/><text x="2.4829%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="2.3126%" y="485" width="0.1595%" height="15" fill="rgb(249,199,46)" fg:x="29" fg:w="2"/><text x="2.5626%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="2.3126%" y="469" width="0.1595%" height="15" fill="rgb(214,222,46)" fg:x="29" fg:w="2"/><text x="2.5626%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="2.3126%" y="453" width="0.1595%" height="15" fill="rgb(248,168,30)" fg:x="29" fg:w="2"/><text x="2.5626%" y="463.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="2.4721%" y="485" width="0.0797%" height="15" fill="rgb(226,14,28)" fg:x="31" fg:w="1"/><text x="2.7221%" y="495.50"></text></g><g><title>kernel::session::SetSession::new (1 samples, 0.08%)</title><rect x="2.4721%" y="469" width="0.0797%" height="15" fill="rgb(253,123,1)" fg:x="31" fg:w="1"/><text x="2.7221%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.6316%" y="453" width="0.0797%" height="15" fill="rgb(225,24,42)" fg:x="33" fg:w="1"/><text x="2.8816%" y="463.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="2.7113%" y="421" width="0.1595%" height="15" fill="rgb(216,161,37)" fg:x="34" fg:w="2"/><text x="2.9613%" y="431.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.7911%" y="405" width="0.0797%" height="15" fill="rgb(251,164,26)" fg:x="35" fg:w="1"/><text x="3.0411%" y="415.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="2.7113%" y="437" width="0.2392%" height="15" fill="rgb(219,177,3)" fg:x="34" fg:w="3"/><text x="2.9613%" y="447.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="2.8708%" y="421" width="0.0797%" height="15" fill="rgb(222,65,0)" fg:x="36" fg:w="1"/><text x="3.1208%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (19 samples, 1.52%)</title><rect x="2.6316%" y="469" width="1.5152%" height="15" fill="rgb(223,69,54)" fg:x="33" fg:w="19"/><text x="2.8816%" y="479.50"></text></g><g><title>libloading::safe::Library::new (18 samples, 1.44%)</title><rect x="2.7113%" y="453" width="1.4354%" height="15" fill="rgb(235,30,27)" fg:x="34" fg:w="18"/><text x="2.9613%" y="463.50"></text></g><g><title>dlopen (15 samples, 1.20%)</title><rect x="2.9506%" y="437" width="1.1962%" height="15" fill="rgb(220,183,50)" fg:x="37" fg:w="15"/><text x="3.2006%" y="447.50"></text></g><g><title>_dl_catch_error (15 samples, 1.20%)</title><rect x="2.9506%" y="421" width="1.1962%" height="15" fill="rgb(248,198,15)" fg:x="37" fg:w="15"/><text x="3.2006%" y="431.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.20%)</title><rect x="2.9506%" y="405" width="1.1962%" height="15" fill="rgb(222,211,4)" fg:x="37" fg:w="15"/><text x="3.2006%" y="415.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.12%)</title><rect x="3.0303%" y="389" width="1.1164%" height="15" fill="rgb(214,102,34)" fg:x="38" fg:w="14"/><text x="3.2803%" y="399.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.12%)</title><rect x="3.0303%" y="373" width="1.1164%" height="15" fill="rgb(245,92,5)" fg:x="38" fg:w="14"/><text x="3.2803%" y="383.50"></text></g><g><title>_dl_signal_error (2 samples, 0.16%)</title><rect x="3.9872%" y="357" width="0.1595%" height="15" fill="rgb(252,72,51)" fg:x="50" fg:w="2"/><text x="4.2372%" y="367.50"></text></g><g><title>_dl_exception_create (2 samples, 0.16%)</title><rect x="3.9872%" y="341" width="0.1595%" height="15" fill="rgb(252,208,19)" fg:x="50" fg:w="2"/><text x="4.2372%" y="351.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.67%)</title><rect x="2.5518%" y="485" width="1.6746%" height="15" fill="rgb(211,69,7)" fg:x="32" fg:w="21"/><text x="2.8018%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="4.1467%" y="469" width="0.0797%" height="15" fill="rgb(211,27,16)" fg:x="52" fg:w="1"/><text x="4.3967%" y="479.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.1467%" y="453" width="0.0797%" height="15" fill="rgb(219,216,14)" fg:x="52" fg:w="1"/><text x="4.3967%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.2265%" y="469" width="0.1595%" height="15" fill="rgb(219,71,8)" fg:x="53" fg:w="2"/><text x="4.4765%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="4.2265%" y="453" width="0.1595%" height="15" fill="rgb(223,170,53)" fg:x="53" fg:w="2"/><text x="4.4765%" y="463.50"></text></g><g><title>engine::session::Session::initialize (28 samples, 2.23%)</title><rect x="2.3126%" y="501" width="2.2329%" height="15" fill="rgb(246,21,26)" fg:x="29" fg:w="28"/><text x="2.5626%" y="511.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="4.2265%" y="485" width="0.3190%" height="15" fill="rgb(248,20,46)" fg:x="53" fg:w="4"/><text x="4.4765%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="4.3860%" y="469" width="0.1595%" height="15" fill="rgb(252,94,11)" fg:x="55" fg:w="2"/><text x="4.6360%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.3860%" y="453" width="0.1595%" height="15" fill="rgb(236,163,8)" fg:x="55" fg:w="2"/><text x="4.6360%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.3860%" y="437" width="0.1595%" height="15" fill="rgb(217,221,45)" fg:x="55" fg:w="2"/><text x="4.6360%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.3860%" y="421" width="0.1595%" height="15" fill="rgb(238,38,17)" fg:x="55" fg:w="2"/><text x="4.6360%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.3860%" y="405" width="0.1595%" height="15" fill="rgb(242,210,23)" fg:x="55" fg:w="2"/><text x="4.6360%" y="415.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (33 samples, 2.63%)</title><rect x="2.0734%" y="549" width="2.6316%" height="15" fill="rgb(250,86,53)" fg:x="26" fg:w="33"/><text x="2.3234%" y="559.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (33 samples, 2.63%)</title><rect x="2.0734%" y="533" width="2.6316%" height="15" fill="rgb(223,168,25)" fg:x="26" fg:w="33"/><text x="2.3234%" y="543.50">en..</text></g><g><title>engine::session::Session::new (33 samples, 2.63%)</title><rect x="2.0734%" y="517" width="2.6316%" height="15" fill="rgb(251,189,4)" fg:x="26" fg:w="33"/><text x="2.3234%" y="527.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="4.5455%" y="501" width="0.1595%" height="15" fill="rgb(245,19,28)" fg:x="57" fg:w="2"/><text x="4.7955%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="4.5455%" y="485" width="0.1595%" height="15" fill="rgb(207,10,34)" fg:x="57" fg:w="2"/><text x="4.7955%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.5455%" y="469" width="0.1595%" height="15" fill="rgb(235,153,31)" fg:x="57" fg:w="2"/><text x="4.7955%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.7847%" y="533" width="0.0797%" height="15" fill="rgb(228,72,37)" fg:x="60" fg:w="1"/><text x="5.0347%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.8644%" y="533" width="0.0797%" height="15" fill="rgb(215,15,16)" fg:x="61" fg:w="1"/><text x="5.1144%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.8644%" y="517" width="0.0797%" height="15" fill="rgb(250,119,29)" fg:x="61" fg:w="1"/><text x="5.1144%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9442%" y="533" width="0.0797%" height="15" fill="rgb(214,59,1)" fg:x="62" fg:w="1"/><text x="5.1942%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="5.0239%" y="501" width="0.1595%" height="15" fill="rgb(223,109,25)" fg:x="63" fg:w="2"/><text x="5.2739%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="5.0239%" y="517" width="0.2392%" height="15" fill="rgb(230,198,22)" fg:x="63" fg:w="3"/><text x="5.2739%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="5.1834%" y="501" width="0.0797%" height="15" fill="rgb(245,184,46)" fg:x="65" fg:w="1"/><text x="5.4334%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="5.1834%" y="485" width="0.0797%" height="15" fill="rgb(253,73,16)" fg:x="65" fg:w="1"/><text x="5.4334%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="5.1834%" y="469" width="0.0797%" height="15" fill="rgb(206,94,45)" fg:x="65" fg:w="1"/><text x="5.4334%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2632%" y="485" width="0.0797%" height="15" fill="rgb(236,83,27)" fg:x="66" fg:w="1"/><text x="5.5132%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="5.3429%" y="485" width="0.2392%" height="15" fill="rgb(220,196,8)" fg:x="67" fg:w="3"/><text x="5.5929%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="5.3429%" y="469" width="0.2392%" height="15" fill="rgb(254,185,14)" fg:x="67" fg:w="3"/><text x="5.5929%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="5.3429%" y="453" width="0.2392%" height="15" fill="rgb(226,50,22)" fg:x="67" fg:w="3"/><text x="5.5929%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.4226%" y="437" width="0.1595%" height="15" fill="rgb(253,147,0)" fg:x="68" fg:w="2"/><text x="5.6726%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="5.4226%" y="421" width="0.1595%" height="15" fill="rgb(252,46,33)" fg:x="68" fg:w="2"/><text x="5.6726%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="5.4226%" y="405" width="0.1595%" height="15" fill="rgb(242,22,54)" fg:x="68" fg:w="2"/><text x="5.6726%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="5.4226%" y="389" width="0.1595%" height="15" fill="rgb(223,178,32)" fg:x="68" fg:w="2"/><text x="5.6726%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="5.4226%" y="373" width="0.1595%" height="15" fill="rgb(214,106,53)" fg:x="68" fg:w="2"/><text x="5.6726%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.4226%" y="357" width="0.1595%" height="15" fill="rgb(232,65,50)" fg:x="68" fg:w="2"/><text x="5.6726%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="5.4226%" y="341" width="0.1595%" height="15" fill="rgb(231,110,28)" fg:x="68" fg:w="2"/><text x="5.6726%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="5.4226%" y="325" width="0.1595%" height="15" fill="rgb(216,71,40)" fg:x="68" fg:w="2"/><text x="5.6726%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="5.4226%" y="309" width="0.1595%" height="15" fill="rgb(229,89,53)" fg:x="68" fg:w="2"/><text x="5.6726%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="5.4226%" y="293" width="0.1595%" height="15" fill="rgb(210,124,14)" fg:x="68" fg:w="2"/><text x="5.6726%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="5.4226%" y="277" width="0.1595%" height="15" fill="rgb(236,213,6)" fg:x="68" fg:w="2"/><text x="5.6726%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="5.4226%" y="261" width="0.1595%" height="15" fill="rgb(228,41,5)" fg:x="68" fg:w="2"/><text x="5.6726%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.5821%" y="469" width="0.0797%" height="15" fill="rgb(221,167,25)" fg:x="70" fg:w="1"/><text x="5.8321%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.5821%" y="453" width="0.0797%" height="15" fill="rgb(228,144,37)" fg:x="70" fg:w="1"/><text x="5.8321%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.5821%" y="437" width="0.0797%" height="15" fill="rgb(227,189,38)" fg:x="70" fg:w="1"/><text x="5.8321%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="5.6619%" y="421" width="0.3190%" height="15" fill="rgb(218,8,2)" fg:x="71" fg:w="4"/><text x="5.9119%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.6619%" y="405" width="0.3190%" height="15" fill="rgb(209,61,28)" fg:x="71" fg:w="4"/><text x="5.9119%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.7416%" y="389" width="0.2392%" height="15" fill="rgb(233,140,39)" fg:x="72" fg:w="3"/><text x="5.9916%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="5.7416%" y="373" width="0.2392%" height="15" fill="rgb(251,66,48)" fg:x="72" fg:w="3"/><text x="5.9916%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.8214%" y="357" width="0.1595%" height="15" fill="rgb(210,44,45)" fg:x="73" fg:w="2"/><text x="6.0714%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.8214%" y="341" width="0.1595%" height="15" fill="rgb(214,136,46)" fg:x="73" fg:w="2"/><text x="6.0714%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.8214%" y="325" width="0.1595%" height="15" fill="rgb(207,130,50)" fg:x="73" fg:w="2"/><text x="6.0714%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="5.6619%" y="437" width="0.4785%" height="15" fill="rgb(228,102,49)" fg:x="71" fg:w="6"/><text x="5.9119%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.9809%" y="421" width="0.1595%" height="15" fill="rgb(253,55,1)" fg:x="75" fg:w="2"/><text x="6.2309%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.0606%" y="405" width="0.0797%" height="15" fill="rgb(238,222,9)" fg:x="76" fg:w="1"/><text x="6.3106%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.0606%" y="389" width="0.0797%" height="15" fill="rgb(246,99,6)" fg:x="76" fg:w="1"/><text x="6.3106%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.2201%" y="421" width="0.0797%" height="15" fill="rgb(219,110,26)" fg:x="78" fg:w="1"/><text x="6.4701%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.72%)</title><rect x="6.2998%" y="421" width="0.7177%" height="15" fill="rgb(239,160,33)" fg:x="79" fg:w="9"/><text x="6.5498%" y="431.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="6.3796%" y="405" width="0.6380%" height="15" fill="rgb(220,202,23)" fg:x="80" fg:w="8"/><text x="6.6296%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="6.6986%" y="389" width="0.3190%" height="15" fill="rgb(208,80,26)" fg:x="84" fg:w="4"/><text x="6.9486%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.8581%" y="373" width="0.1595%" height="15" fill="rgb(243,85,7)" fg:x="86" fg:w="2"/><text x="7.1081%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.9378%" y="357" width="0.0797%" height="15" fill="rgb(228,77,47)" fg:x="87" fg:w="1"/><text x="7.1878%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.9378%" y="341" width="0.0797%" height="15" fill="rgb(212,226,8)" fg:x="87" fg:w="1"/><text x="7.1878%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.9378%" y="325" width="0.0797%" height="15" fill="rgb(241,120,54)" fg:x="87" fg:w="1"/><text x="7.1878%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.0973%" y="373" width="0.0797%" height="15" fill="rgb(226,80,16)" fg:x="89" fg:w="1"/><text x="7.3473%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.0973%" y="357" width="0.0797%" height="15" fill="rgb(240,76,13)" fg:x="89" fg:w="1"/><text x="7.3473%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.0973%" y="341" width="0.0797%" height="15" fill="rgb(252,74,8)" fg:x="89" fg:w="1"/><text x="7.3473%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.0973%" y="325" width="0.0797%" height="15" fill="rgb(244,155,2)" fg:x="89" fg:w="1"/><text x="7.3473%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.1770%" y="373" width="0.1595%" height="15" fill="rgb(215,81,35)" fg:x="90" fg:w="2"/><text x="7.4270%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.2568%" y="357" width="0.0797%" height="15" fill="rgb(206,55,2)" fg:x="91" fg:w="1"/><text x="7.5068%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="7.0973%" y="405" width="0.3190%" height="15" fill="rgb(231,2,34)" fg:x="89" fg:w="4"/><text x="7.3473%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="7.0973%" y="389" width="0.3190%" height="15" fill="rgb(242,176,48)" fg:x="89" fg:w="4"/><text x="7.3473%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.3365%" y="373" width="0.0797%" height="15" fill="rgb(249,31,36)" fg:x="92" fg:w="1"/><text x="7.5865%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.3365%" y="357" width="0.0797%" height="15" fill="rgb(205,18,17)" fg:x="92" fg:w="1"/><text x="7.5865%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3365%" y="341" width="0.0797%" height="15" fill="rgb(254,130,5)" fg:x="92" fg:w="1"/><text x="7.5865%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="7.4163%" y="405" width="0.3190%" height="15" fill="rgb(229,42,45)" fg:x="93" fg:w="4"/><text x="7.6663%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.4960%" y="389" width="0.2392%" height="15" fill="rgb(245,95,25)" fg:x="94" fg:w="3"/><text x="7.7460%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.6555%" y="373" width="0.0797%" height="15" fill="rgb(249,193,38)" fg:x="96" fg:w="1"/><text x="7.9055%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="7.7352%" y="389" width="0.3190%" height="15" fill="rgb(241,140,43)" fg:x="97" fg:w="4"/><text x="7.9852%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9745%" y="373" width="0.0797%" height="15" fill="rgb(245,78,48)" fg:x="100" fg:w="1"/><text x="8.2245%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.9745%" y="357" width="0.0797%" height="15" fill="rgb(214,92,39)" fg:x="100" fg:w="1"/><text x="8.2245%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.0542%" y="373" width="0.1595%" height="15" fill="rgb(211,189,14)" fg:x="101" fg:w="2"/><text x="8.3042%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.1340%" y="357" width="0.0797%" height="15" fill="rgb(218,7,24)" fg:x="102" fg:w="1"/><text x="8.3840%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.1340%" y="341" width="0.0797%" height="15" fill="rgb(224,200,49)" fg:x="102" fg:w="1"/><text x="8.3840%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.2137%" y="357" width="0.1595%" height="15" fill="rgb(218,210,14)" fg:x="103" fg:w="2"/><text x="8.4637%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.2137%" y="341" width="0.1595%" height="15" fill="rgb(234,142,31)" fg:x="103" fg:w="2"/><text x="8.4637%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.2935%" y="325" width="0.0797%" height="15" fill="rgb(227,165,2)" fg:x="104" fg:w="1"/><text x="8.5435%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2935%" y="309" width="0.0797%" height="15" fill="rgb(232,44,46)" fg:x="104" fg:w="1"/><text x="8.5435%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.2935%" y="293" width="0.0797%" height="15" fill="rgb(236,149,47)" fg:x="104" fg:w="1"/><text x="8.5435%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.2935%" y="277" width="0.0797%" height="15" fill="rgb(227,45,31)" fg:x="104" fg:w="1"/><text x="8.5435%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.2935%" y="261" width="0.0797%" height="15" fill="rgb(240,176,51)" fg:x="104" fg:w="1"/><text x="8.5435%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.3732%" y="341" width="0.1595%" height="15" fill="rgb(249,146,41)" fg:x="105" fg:w="2"/><text x="8.6232%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.4530%" y="325" width="0.0797%" height="15" fill="rgb(213,208,4)" fg:x="106" fg:w="1"/><text x="8.7030%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.4530%" y="309" width="0.0797%" height="15" fill="rgb(245,84,36)" fg:x="106" fg:w="1"/><text x="8.7030%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.4530%" y="293" width="0.0797%" height="15" fill="rgb(254,84,18)" fg:x="106" fg:w="1"/><text x="8.7030%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="8.3732%" y="357" width="0.2392%" height="15" fill="rgb(225,38,54)" fg:x="105" fg:w="3"/><text x="8.6232%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.5327%" y="341" width="0.0797%" height="15" fill="rgb(246,50,30)" fg:x="107" fg:w="1"/><text x="8.7827%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="7.7352%" y="405" width="1.1164%" height="15" fill="rgb(246,148,9)" fg:x="97" fg:w="14"/><text x="7.9852%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="8.0542%" y="389" width="0.7974%" height="15" fill="rgb(223,75,4)" fg:x="101" fg:w="10"/><text x="8.3042%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="8.2137%" y="373" width="0.6380%" height="15" fill="rgb(239,148,41)" fg:x="103" fg:w="8"/><text x="8.4637%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.6124%" y="357" width="0.2392%" height="15" fill="rgb(205,195,3)" fg:x="108" fg:w="3"/><text x="8.8624%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.7719%" y="341" width="0.0797%" height="15" fill="rgb(254,161,1)" fg:x="110" fg:w="1"/><text x="9.0219%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.99%)</title><rect x="7.0175%" y="421" width="1.9936%" height="15" fill="rgb(211,229,8)" fg:x="88" fg:w="25"/><text x="7.2675%" y="431.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.8517%" y="405" width="0.1595%" height="15" fill="rgb(220,97,9)" fg:x="111" fg:w="2"/><text x="9.1017%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.9314%" y="389" width="0.0797%" height="15" fill="rgb(240,218,8)" fg:x="112" fg:w="1"/><text x="9.1814%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (42 samples, 3.35%)</title><rect x="6.1404%" y="437" width="3.3493%" height="15" fill="rgb(250,44,0)" fg:x="77" fg:w="42"/><text x="6.3904%" y="447.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="9.0112%" y="421" width="0.4785%" height="15" fill="rgb(236,41,53)" fg:x="113" fg:w="6"/><text x="9.2612%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="9.0909%" y="405" width="0.3987%" height="15" fill="rgb(218,227,13)" fg:x="114" fg:w="5"/><text x="9.3409%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="9.1707%" y="389" width="0.3190%" height="15" fill="rgb(217,94,32)" fg:x="115" fg:w="4"/><text x="9.4207%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="9.1707%" y="373" width="0.3190%" height="15" fill="rgb(213,217,12)" fg:x="115" fg:w="4"/><text x="9.4207%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.3301%" y="357" width="0.1595%" height="15" fill="rgb(229,13,46)" fg:x="117" fg:w="2"/><text x="9.5801%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.3301%" y="341" width="0.1595%" height="15" fill="rgb(243,139,5)" fg:x="117" fg:w="2"/><text x="9.5801%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (49 samples, 3.91%)</title><rect x="5.6619%" y="453" width="3.9075%" height="15" fill="rgb(249,38,45)" fg:x="71" fg:w="49"/><text x="5.9119%" y="463.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.4896%" y="437" width="0.0797%" height="15" fill="rgb(216,70,11)" fg:x="119" fg:w="1"/><text x="9.7396%" y="447.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="9.6491%" y="421" width="0.3987%" height="15" fill="rgb(253,101,25)" fg:x="121" fg:w="5"/><text x="9.8991%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.0478%" y="405" width="0.1595%" height="15" fill="rgb(207,197,30)" fg:x="126" fg:w="2"/><text x="10.2978%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.2073%" y="405" width="0.0797%" height="15" fill="rgb(238,87,13)" fg:x="128" fg:w="1"/><text x="10.4573%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2073%" y="389" width="0.0797%" height="15" fill="rgb(215,155,8)" fg:x="128" fg:w="1"/><text x="10.4573%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.2871%" y="389" width="0.1595%" height="15" fill="rgb(239,166,38)" fg:x="129" fg:w="2"/><text x="10.5371%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.4466%" y="373" width="0.1595%" height="15" fill="rgb(240,194,35)" fg:x="131" fg:w="2"/><text x="10.6966%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.6061%" y="373" width="0.0797%" height="15" fill="rgb(219,10,44)" fg:x="133" fg:w="1"/><text x="10.8561%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.6061%" y="357" width="0.0797%" height="15" fill="rgb(251,220,35)" fg:x="133" fg:w="1"/><text x="10.8561%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="10.6858%" y="373" width="0.0797%" height="15" fill="rgb(218,117,13)" fg:x="134" fg:w="1"/><text x="10.9358%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.6858%" y="357" width="0.0797%" height="15" fill="rgb(221,213,40)" fg:x="134" fg:w="1"/><text x="10.9358%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.6858%" y="341" width="0.0797%" height="15" fill="rgb(251,224,35)" fg:x="134" fg:w="1"/><text x="10.9358%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.8453%" y="357" width="0.0797%" height="15" fill="rgb(241,33,39)" fg:x="136" fg:w="1"/><text x="11.0953%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8453%" y="341" width="0.0797%" height="15" fill="rgb(222,74,17)" fg:x="136" fg:w="1"/><text x="11.0953%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.44%)</title><rect x="9.5694%" y="453" width="1.4354%" height="15" fill="rgb(225,103,0)" fg:x="120" fg:w="18"/><text x="9.8194%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.44%)</title><rect x="9.5694%" y="437" width="1.4354%" height="15" fill="rgb(240,0,12)" fg:x="120" fg:w="18"/><text x="9.8194%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="10.0478%" y="421" width="0.9569%" height="15" fill="rgb(233,213,37)" fg:x="126" fg:w="12"/><text x="10.2978%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="10.2871%" y="405" width="0.7177%" height="15" fill="rgb(225,84,52)" fg:x="129" fg:w="9"/><text x="10.5371%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="10.4466%" y="389" width="0.5582%" height="15" fill="rgb(247,160,51)" fg:x="131" fg:w="7"/><text x="10.6966%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="10.7656%" y="373" width="0.2392%" height="15" fill="rgb(244,60,51)" fg:x="135" fg:w="3"/><text x="11.0156%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.9250%" y="357" width="0.0797%" height="15" fill="rgb(233,114,7)" fg:x="137" fg:w="1"/><text x="11.1750%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.9250%" y="341" width="0.0797%" height="15" fill="rgb(246,136,16)" fg:x="137" fg:w="1"/><text x="11.1750%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9250%" y="325" width="0.0797%" height="15" fill="rgb(243,114,45)" fg:x="137" fg:w="1"/><text x="11.1750%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="11.0845%" y="437" width="0.0797%" height="15" fill="rgb(247,183,43)" fg:x="139" fg:w="1"/><text x="11.3345%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0845%" y="421" width="0.0797%" height="15" fill="rgb(251,210,42)" fg:x="139" fg:w="1"/><text x="11.3345%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.1643%" y="405" width="0.1595%" height="15" fill="rgb(221,88,35)" fg:x="140" fg:w="2"/><text x="11.4143%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.2440%" y="389" width="0.0797%" height="15" fill="rgb(242,21,20)" fg:x="141" fg:w="1"/><text x="11.4940%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="11.3238%" y="405" width="0.0797%" height="15" fill="rgb(233,226,36)" fg:x="142" fg:w="1"/><text x="11.5738%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.3238%" y="389" width="0.0797%" height="15" fill="rgb(243,189,34)" fg:x="142" fg:w="1"/><text x="11.5738%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="11.3238%" y="373" width="0.0797%" height="15" fill="rgb(207,145,50)" fg:x="142" fg:w="1"/><text x="11.5738%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.3238%" y="357" width="0.0797%" height="15" fill="rgb(242,1,50)" fg:x="142" fg:w="1"/><text x="11.5738%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="11.4035%" y="405" width="0.0797%" height="15" fill="rgb(231,65,32)" fg:x="143" fg:w="1"/><text x="11.6535%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.4035%" y="389" width="0.0797%" height="15" fill="rgb(208,68,49)" fg:x="143" fg:w="1"/><text x="11.6535%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4035%" y="373" width="0.0797%" height="15" fill="rgb(253,54,49)" fg:x="143" fg:w="1"/><text x="11.6535%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4035%" y="357" width="0.0797%" height="15" fill="rgb(245,186,24)" fg:x="143" fg:w="1"/><text x="11.6535%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="11.4833%" y="405" width="0.2392%" height="15" fill="rgb(209,2,41)" fg:x="144" fg:w="3"/><text x="11.7333%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="11.5630%" y="389" width="0.1595%" height="15" fill="rgb(242,208,54)" fg:x="145" fg:w="2"/><text x="11.8130%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.5630%" y="373" width="0.1595%" height="15" fill="rgb(225,9,51)" fg:x="145" fg:w="2"/><text x="11.8130%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6427%" y="357" width="0.0797%" height="15" fill="rgb(207,207,25)" fg:x="146" fg:w="1"/><text x="11.8927%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.6427%" y="341" width="0.0797%" height="15" fill="rgb(253,96,18)" fg:x="146" fg:w="1"/><text x="11.8927%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8820%" y="357" width="0.0797%" height="15" fill="rgb(252,215,20)" fg:x="149" fg:w="1"/><text x="12.1320%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8820%" y="341" width="0.0797%" height="15" fill="rgb(245,227,26)" fg:x="149" fg:w="1"/><text x="12.1320%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8820%" y="325" width="0.0797%" height="15" fill="rgb(241,208,0)" fg:x="149" fg:w="1"/><text x="12.1320%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="11.9617%" y="357" width="0.1595%" height="15" fill="rgb(224,130,10)" fg:x="150" fg:w="2"/><text x="12.2117%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="11.9617%" y="341" width="0.1595%" height="15" fill="rgb(237,29,0)" fg:x="150" fg:w="2"/><text x="12.2117%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="11.9617%" y="325" width="0.1595%" height="15" fill="rgb(219,27,41)" fg:x="150" fg:w="2"/><text x="12.2117%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0415%" y="309" width="0.0797%" height="15" fill="rgb(245,101,19)" fg:x="151" fg:w="1"/><text x="12.2915%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0415%" y="293" width="0.0797%" height="15" fill="rgb(243,44,37)" fg:x="151" fg:w="1"/><text x="12.2915%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.0415%" y="277" width="0.0797%" height="15" fill="rgb(228,213,43)" fg:x="151" fg:w="1"/><text x="12.2915%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="12.2807%" y="341" width="0.0797%" height="15" fill="rgb(219,163,21)" fg:x="154" fg:w="1"/><text x="12.5307%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.4402%" y="325" width="0.1595%" height="15" fill="rgb(234,86,24)" fg:x="156" fg:w="2"/><text x="12.6902%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.4402%" y="309" width="0.1595%" height="15" fill="rgb(225,10,24)" fg:x="156" fg:w="2"/><text x="12.6902%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5199%" y="293" width="0.0797%" height="15" fill="rgb(218,109,7)" fg:x="157" fg:w="1"/><text x="12.7699%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.5997%" y="277" width="0.0797%" height="15" fill="rgb(210,20,26)" fg:x="158" fg:w="1"/><text x="12.8497%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="12.6794%" y="277" width="0.0797%" height="15" fill="rgb(216,18,1)" fg:x="159" fg:w="1"/><text x="12.9294%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7592%" y="261" width="0.0797%" height="15" fill="rgb(206,163,23)" fg:x="160" fg:w="1"/><text x="13.0092%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7592%" y="245" width="0.0797%" height="15" fill="rgb(229,150,31)" fg:x="160" fg:w="1"/><text x="13.0092%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7592%" y="229" width="0.0797%" height="15" fill="rgb(231,10,5)" fg:x="160" fg:w="1"/><text x="13.0092%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="12.5997%" y="309" width="0.3190%" height="15" fill="rgb(250,40,50)" fg:x="158" fg:w="4"/><text x="12.8497%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="12.5997%" y="293" width="0.3190%" height="15" fill="rgb(217,119,7)" fg:x="158" fg:w="4"/><text x="12.8497%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="12.7592%" y="277" width="0.1595%" height="15" fill="rgb(245,214,40)" fg:x="160" fg:w="2"/><text x="13.0092%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8389%" y="261" width="0.0797%" height="15" fill="rgb(216,187,1)" fg:x="161" fg:w="1"/><text x="13.0889%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="12.3604%" y="341" width="0.6380%" height="15" fill="rgb(237,146,21)" fg:x="155" fg:w="8"/><text x="12.6104%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="12.5997%" y="325" width="0.3987%" height="15" fill="rgb(210,174,47)" fg:x="158" fg:w="5"/><text x="12.8497%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9187%" y="309" width="0.0797%" height="15" fill="rgb(218,111,39)" fg:x="162" fg:w="1"/><text x="13.1687%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="11.8820%" y="373" width="1.1962%" height="15" fill="rgb(224,95,19)" fg:x="149" fg:w="15"/><text x="12.1320%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="12.1212%" y="357" width="0.9569%" height="15" fill="rgb(234,15,38)" fg:x="152" fg:w="12"/><text x="12.3712%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9984%" y="341" width="0.0797%" height="15" fill="rgb(246,56,12)" fg:x="163" fg:w="1"/><text x="13.2484%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.28%)</title><rect x="11.8820%" y="389" width="1.2759%" height="15" fill="rgb(247,16,17)" fg:x="149" fg:w="16"/><text x="12.1320%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="13.0781%" y="373" width="0.0797%" height="15" fill="rgb(215,151,11)" fg:x="164" fg:w="1"/><text x="13.3281%" y="383.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="13.0781%" y="357" width="0.0797%" height="15" fill="rgb(225,16,24)" fg:x="164" fg:w="1"/><text x="13.3281%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.0781%" y="341" width="0.0797%" height="15" fill="rgb(217,117,5)" fg:x="164" fg:w="1"/><text x="13.3281%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1579%" y="389" width="0.0797%" height="15" fill="rgb(246,187,53)" fg:x="165" fg:w="1"/><text x="13.4079%" y="399.50"></text></g><g><title>engine::session::Session::flush (104 samples, 8.29%)</title><rect x="5.0239%" y="533" width="8.2935%" height="15" fill="rgb(241,71,40)" fg:x="63" fg:w="104"/><text x="5.2739%" y="543.50">engine::sess..</text></g><g><title>engine::session::state::State::close (101 samples, 8.05%)</title><rect x="5.2632%" y="517" width="8.0542%" height="15" fill="rgb(231,67,39)" fg:x="66" fg:w="101"/><text x="5.5132%" y="527.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (101 samples, 8.05%)</title><rect x="5.2632%" y="501" width="8.0542%" height="15" fill="rgb(222,120,24)" fg:x="66" fg:w="101"/><text x="5.5132%" y="511.50">engine::ses..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (97 samples, 7.74%)</title><rect x="5.5821%" y="485" width="7.7352%" height="15" fill="rgb(248,3,3)" fg:x="70" fg:w="97"/><text x="5.8321%" y="495.50">engine::ses..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (96 samples, 7.66%)</title><rect x="5.6619%" y="469" width="7.6555%" height="15" fill="rgb(228,218,5)" fg:x="71" fg:w="96"/><text x="5.9119%" y="479.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (29 samples, 2.31%)</title><rect x="11.0048%" y="453" width="2.3126%" height="15" fill="rgb(212,202,43)" fg:x="138" fg:w="29"/><text x="11.2548%" y="463.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (27 samples, 2.15%)</title><rect x="11.1643%" y="437" width="2.1531%" height="15" fill="rgb(235,183,2)" fg:x="140" fg:w="27"/><text x="11.4143%" y="447.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.15%)</title><rect x="11.1643%" y="421" width="2.1531%" height="15" fill="rgb(230,165,10)" fg:x="140" fg:w="27"/><text x="11.4143%" y="431.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.59%)</title><rect x="11.7225%" y="405" width="1.5949%" height="15" fill="rgb(219,54,40)" fg:x="147" fg:w="20"/><text x="11.9725%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2376%" y="389" width="0.0797%" height="15" fill="rgb(244,73,9)" fg:x="166" fg:w="1"/><text x="13.4876%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="13.3971%" y="485" width="0.2392%" height="15" fill="rgb(212,32,45)" fg:x="168" fg:w="3"/><text x="13.6471%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="13.4769%" y="469" width="0.1595%" height="15" fill="rgb(205,58,31)" fg:x="169" fg:w="2"/><text x="13.7269%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="13.3971%" y="501" width="0.3190%" height="15" fill="rgb(250,120,43)" fg:x="168" fg:w="4"/><text x="13.6471%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.6364%" y="485" width="0.0797%" height="15" fill="rgb(235,13,10)" fg:x="171" fg:w="1"/><text x="13.8864%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.6364%" y="469" width="0.0797%" height="15" fill="rgb(232,219,31)" fg:x="171" fg:w="1"/><text x="13.8864%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.6364%" y="453" width="0.0797%" height="15" fill="rgb(218,157,51)" fg:x="171" fg:w="1"/><text x="13.8864%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.6364%" y="437" width="0.0797%" height="15" fill="rgb(211,91,52)" fg:x="171" fg:w="1"/><text x="13.8864%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.6364%" y="421" width="0.0797%" height="15" fill="rgb(240,173,1)" fg:x="171" fg:w="1"/><text x="13.8864%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.6364%" y="405" width="0.0797%" height="15" fill="rgb(248,20,47)" fg:x="171" fg:w="1"/><text x="13.8864%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.6364%" y="389" width="0.0797%" height="15" fill="rgb(217,221,40)" fg:x="171" fg:w="1"/><text x="13.8864%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.6364%" y="373" width="0.0797%" height="15" fill="rgb(226,149,51)" fg:x="171" fg:w="1"/><text x="13.8864%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.6364%" y="357" width="0.0797%" height="15" fill="rgb(252,193,7)" fg:x="171" fg:w="1"/><text x="13.8864%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="13.6364%" y="341" width="0.0797%" height="15" fill="rgb(205,123,0)" fg:x="171" fg:w="1"/><text x="13.8864%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.6364%" y="325" width="0.0797%" height="15" fill="rgb(233,173,25)" fg:x="171" fg:w="1"/><text x="13.8864%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.6364%" y="309" width="0.0797%" height="15" fill="rgb(216,63,32)" fg:x="171" fg:w="1"/><text x="13.8864%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.6364%" y="293" width="0.0797%" height="15" fill="rgb(209,56,45)" fg:x="171" fg:w="1"/><text x="13.8864%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.6364%" y="277" width="0.0797%" height="15" fill="rgb(226,111,49)" fg:x="171" fg:w="1"/><text x="13.8864%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.6364%" y="261" width="0.0797%" height="15" fill="rgb(244,181,21)" fg:x="171" fg:w="1"/><text x="13.8864%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.6364%" y="245" width="0.0797%" height="15" fill="rgb(222,126,15)" fg:x="171" fg:w="1"/><text x="13.8864%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.6364%" y="229" width="0.0797%" height="15" fill="rgb(222,95,17)" fg:x="171" fg:w="1"/><text x="13.8864%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.6364%" y="213" width="0.0797%" height="15" fill="rgb(254,46,5)" fg:x="171" fg:w="1"/><text x="13.8864%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.6364%" y="197" width="0.0797%" height="15" fill="rgb(236,216,35)" fg:x="171" fg:w="1"/><text x="13.8864%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.6364%" y="181" width="0.0797%" height="15" fill="rgb(217,187,26)" fg:x="171" fg:w="1"/><text x="13.8864%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.6364%" y="165" width="0.0797%" height="15" fill="rgb(207,192,25)" fg:x="171" fg:w="1"/><text x="13.8864%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.6364%" y="149" width="0.0797%" height="15" fill="rgb(253,135,27)" fg:x="171" fg:w="1"/><text x="13.8864%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.6364%" y="133" width="0.0797%" height="15" fill="rgb(211,122,29)" fg:x="171" fg:w="1"/><text x="13.8864%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.6364%" y="117" width="0.0797%" height="15" fill="rgb(233,162,40)" fg:x="171" fg:w="1"/><text x="13.8864%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="13.6364%" y="101" width="0.0797%" height="15" fill="rgb(222,184,47)" fg:x="171" fg:w="1"/><text x="13.8864%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="13.6364%" y="85" width="0.0797%" height="15" fill="rgb(249,99,23)" fg:x="171" fg:w="1"/><text x="13.8864%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="13.6364%" y="69" width="0.0797%" height="15" fill="rgb(214,60,12)" fg:x="171" fg:w="1"/><text x="13.8864%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.6364%" y="53" width="0.0797%" height="15" fill="rgb(250,229,36)" fg:x="171" fg:w="1"/><text x="13.8864%" y="63.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="13.7161%" y="485" width="0.0797%" height="15" fill="rgb(232,195,10)" fg:x="172" fg:w="1"/><text x="13.9661%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.7161%" y="501" width="0.1595%" height="15" fill="rgb(205,213,31)" fg:x="172" fg:w="2"/><text x="13.9661%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.7959%" y="485" width="0.0797%" height="15" fill="rgb(237,43,8)" fg:x="173" fg:w="1"/><text x="14.0459%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.7959%" y="469" width="0.0797%" height="15" fill="rgb(216,208,3)" fg:x="173" fg:w="1"/><text x="14.0459%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7959%" y="453" width="0.0797%" height="15" fill="rgb(228,179,44)" fg:x="173" fg:w="1"/><text x="14.0459%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7959%" y="437" width="0.0797%" height="15" fill="rgb(230,192,27)" fg:x="173" fg:w="1"/><text x="14.0459%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7959%" y="421" width="0.0797%" height="15" fill="rgb(251,30,38)" fg:x="173" fg:w="1"/><text x="14.0459%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7959%" y="405" width="0.0797%" height="15" fill="rgb(246,55,52)" fg:x="173" fg:w="1"/><text x="14.0459%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.7959%" y="389" width="0.0797%" height="15" fill="rgb(249,79,26)" fg:x="173" fg:w="1"/><text x="14.0459%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7959%" y="373" width="0.0797%" height="15" fill="rgb(220,202,16)" fg:x="173" fg:w="1"/><text x="14.0459%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.7959%" y="357" width="0.0797%" height="15" fill="rgb(250,170,23)" fg:x="173" fg:w="1"/><text x="14.0459%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.7959%" y="341" width="0.0797%" height="15" fill="rgb(230,7,37)" fg:x="173" fg:w="1"/><text x="14.0459%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.7959%" y="325" width="0.0797%" height="15" fill="rgb(213,71,1)" fg:x="173" fg:w="1"/><text x="14.0459%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="13.8756%" y="453" width="0.2392%" height="15" fill="rgb(227,87,39)" fg:x="174" fg:w="3"/><text x="14.1256%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.8756%" y="437" width="0.2392%" height="15" fill="rgb(210,41,29)" fg:x="174" fg:w="3"/><text x="14.1256%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0351%" y="421" width="0.0797%" height="15" fill="rgb(206,191,31)" fg:x="176" fg:w="1"/><text x="14.2851%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0351%" y="405" width="0.0797%" height="15" fill="rgb(247,75,54)" fg:x="176" fg:w="1"/><text x="14.2851%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.0351%" y="389" width="0.0797%" height="15" fill="rgb(208,54,50)" fg:x="176" fg:w="1"/><text x="14.2851%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.0351%" y="373" width="0.0797%" height="15" fill="rgb(214,90,37)" fg:x="176" fg:w="1"/><text x="14.2851%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.0351%" y="357" width="0.0797%" height="15" fill="rgb(220,132,6)" fg:x="176" fg:w="1"/><text x="14.2851%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0351%" y="341" width="0.0797%" height="15" fill="rgb(213,167,7)" fg:x="176" fg:w="1"/><text x="14.2851%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0351%" y="325" width="0.0797%" height="15" fill="rgb(243,36,27)" fg:x="176" fg:w="1"/><text x="14.2851%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.0351%" y="309" width="0.0797%" height="15" fill="rgb(235,147,12)" fg:x="176" fg:w="1"/><text x="14.2851%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.0351%" y="293" width="0.0797%" height="15" fill="rgb(212,198,44)" fg:x="176" fg:w="1"/><text x="14.2851%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.0351%" y="277" width="0.0797%" height="15" fill="rgb(218,68,50)" fg:x="176" fg:w="1"/><text x="14.2851%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.0351%" y="261" width="0.0797%" height="15" fill="rgb(224,79,48)" fg:x="176" fg:w="1"/><text x="14.2851%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0351%" y="245" width="0.0797%" height="15" fill="rgb(213,191,50)" fg:x="176" fg:w="1"/><text x="14.2851%" y="255.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="13.8756%" y="485" width="0.3190%" height="15" fill="rgb(254,146,10)" fg:x="174" fg:w="4"/><text x="14.1256%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="13.8756%" y="469" width="0.3190%" height="15" fill="rgb(215,175,11)" fg:x="174" fg:w="4"/><text x="14.1256%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1148%" y="453" width="0.0797%" height="15" fill="rgb(207,49,7)" fg:x="177" fg:w="1"/><text x="14.3648%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1148%" y="437" width="0.0797%" height="15" fill="rgb(234,144,29)" fg:x="177" fg:w="1"/><text x="14.3648%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1148%" y="421" width="0.0797%" height="15" fill="rgb(213,222,48)" fg:x="177" fg:w="1"/><text x="14.3648%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="13.8756%" y="501" width="0.3987%" height="15" fill="rgb(222,8,6)" fg:x="174" fg:w="5"/><text x="14.1256%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.1946%" y="485" width="0.0797%" height="15" fill="rgb(221,114,49)" fg:x="178" fg:w="1"/><text x="14.4446%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1946%" y="469" width="0.0797%" height="15" fill="rgb(250,140,42)" fg:x="178" fg:w="1"/><text x="14.4446%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3541%" y="325" width="0.0797%" height="15" fill="rgb(250,150,27)" fg:x="180" fg:w="1"/><text x="14.6041%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.3541%" y="309" width="0.0797%" height="15" fill="rgb(252,159,3)" fg:x="180" fg:w="1"/><text x="14.6041%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.3541%" y="293" width="0.0797%" height="15" fill="rgb(241,182,3)" fg:x="180" fg:w="1"/><text x="14.6041%" y="303.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="14.2743%" y="453" width="0.3190%" height="15" fill="rgb(236,3,9)" fg:x="179" fg:w="4"/><text x="14.5243%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.2743%" y="437" width="0.3190%" height="15" fill="rgb(223,227,51)" fg:x="179" fg:w="4"/><text x="14.5243%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.3541%" y="421" width="0.2392%" height="15" fill="rgb(232,133,30)" fg:x="180" fg:w="3"/><text x="14.6041%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.3541%" y="405" width="0.2392%" height="15" fill="rgb(209,93,27)" fg:x="180" fg:w="3"/><text x="14.6041%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.3541%" y="389" width="0.2392%" height="15" fill="rgb(208,108,34)" fg:x="180" fg:w="3"/><text x="14.6041%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.3541%" y="373" width="0.2392%" height="15" fill="rgb(215,189,13)" fg:x="180" fg:w="3"/><text x="14.6041%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="14.3541%" y="357" width="0.2392%" height="15" fill="rgb(206,88,23)" fg:x="180" fg:w="3"/><text x="14.6041%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.3541%" y="341" width="0.2392%" height="15" fill="rgb(240,173,0)" fg:x="180" fg:w="3"/><text x="14.6041%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.4338%" y="325" width="0.1595%" height="15" fill="rgb(223,106,52)" fg:x="181" fg:w="2"/><text x="14.6838%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.4338%" y="309" width="0.1595%" height="15" fill="rgb(206,130,16)" fg:x="181" fg:w="2"/><text x="14.6838%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5136%" y="293" width="0.0797%" height="15" fill="rgb(220,54,25)" fg:x="182" fg:w="1"/><text x="14.7636%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5933%" y="389" width="0.0797%" height="15" fill="rgb(210,4,38)" fg:x="183" fg:w="1"/><text x="14.8433%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5933%" y="373" width="0.0797%" height="15" fill="rgb(238,94,39)" fg:x="183" fg:w="1"/><text x="14.8433%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.5933%" y="421" width="0.1595%" height="15" fill="rgb(234,124,34)" fg:x="183" fg:w="2"/><text x="14.8433%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.5933%" y="405" width="0.1595%" height="15" fill="rgb(221,91,40)" fg:x="183" fg:w="2"/><text x="14.8433%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6730%" y="389" width="0.0797%" height="15" fill="rgb(246,53,28)" fg:x="184" fg:w="1"/><text x="14.9230%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.7528%" y="421" width="0.1595%" height="15" fill="rgb(229,109,7)" fg:x="185" fg:w="2"/><text x="15.0028%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (10 samples, 0.80%)</title><rect x="14.2743%" y="485" width="0.7974%" height="15" fill="rgb(249,117,8)" fg:x="179" fg:w="10"/><text x="14.5243%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (10 samples, 0.80%)</title><rect x="14.2743%" y="469" width="0.7974%" height="15" fill="rgb(210,181,1)" fg:x="179" fg:w="10"/><text x="14.5243%" y="479.50"></text></g><g><title>kernel::model::props::save_props (6 samples, 0.48%)</title><rect x="14.5933%" y="453" width="0.4785%" height="15" fill="rgb(211,66,1)" fg:x="183" fg:w="6"/><text x="14.8433%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="14.5933%" y="437" width="0.4785%" height="15" fill="rgb(221,90,14)" fg:x="183" fg:w="6"/><text x="14.8433%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="14.9123%" y="421" width="0.1595%" height="15" fill="rgb(219,222,44)" fg:x="187" fg:w="2"/><text x="15.1623%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.9123%" y="405" width="0.1595%" height="15" fill="rgb(246,34,33)" fg:x="187" fg:w="2"/><text x="15.1623%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="14.9123%" y="389" width="0.1595%" height="15" fill="rgb(227,135,41)" fg:x="187" fg:w="2"/><text x="15.1623%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.9123%" y="373" width="0.1595%" height="15" fill="rgb(226,15,14)" fg:x="187" fg:w="2"/><text x="15.1623%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="14.9123%" y="357" width="0.1595%" height="15" fill="rgb(236,148,47)" fg:x="187" fg:w="2"/><text x="15.1623%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="14.9123%" y="341" width="0.1595%" height="15" fill="rgb(233,162,52)" fg:x="187" fg:w="2"/><text x="15.1623%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.9123%" y="325" width="0.1595%" height="15" fill="rgb(244,35,28)" fg:x="187" fg:w="2"/><text x="15.1623%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9920%" y="309" width="0.0797%" height="15" fill="rgb(205,121,10)" fg:x="188" fg:w="1"/><text x="15.2420%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9920%" y="293" width="0.0797%" height="15" fill="rgb(250,58,18)" fg:x="188" fg:w="1"/><text x="15.2420%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9920%" y="277" width="0.0797%" height="15" fill="rgb(216,37,13)" fg:x="188" fg:w="1"/><text x="15.2420%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (28 samples, 2.23%)</title><rect x="13.3971%" y="517" width="2.2329%" height="15" fill="rgb(221,215,42)" fg:x="168" fg:w="28"/><text x="13.6471%" y="527.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (17 samples, 1.36%)</title><rect x="14.2743%" y="501" width="1.3557%" height="15" fill="rgb(217,214,19)" fg:x="179" fg:w="17"/><text x="14.5243%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="15.0718%" y="485" width="0.5582%" height="15" fill="rgb(233,139,13)" fg:x="189" fg:w="7"/><text x="15.3218%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="15.0718%" y="469" width="0.5582%" height="15" fill="rgb(247,168,23)" fg:x="189" fg:w="7"/><text x="15.3218%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="15.0718%" y="453" width="0.5582%" height="15" fill="rgb(207,202,1)" fg:x="189" fg:w="7"/><text x="15.3218%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="15.0718%" y="437" width="0.5582%" height="15" fill="rgb(220,155,48)" fg:x="189" fg:w="7"/><text x="15.3218%" y="447.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="15.0718%" y="421" width="0.5582%" height="15" fill="rgb(250,43,26)" fg:x="189" fg:w="7"/><text x="15.3218%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6300%" y="501" width="0.0797%" height="15" fill="rgb(212,190,23)" fg:x="196" fg:w="1"/><text x="15.8800%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7097%" y="501" width="0.0797%" height="15" fill="rgb(216,39,24)" fg:x="197" fg:w="1"/><text x="15.9597%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.7097%" y="485" width="0.0797%" height="15" fill="rgb(252,113,16)" fg:x="197" fg:w="1"/><text x="15.9597%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8692%" y="421" width="0.0797%" height="15" fill="rgb(208,113,19)" fg:x="199" fg:w="1"/><text x="16.1192%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8692%" y="405" width="0.0797%" height="15" fill="rgb(234,107,25)" fg:x="199" fg:w="1"/><text x="16.1192%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8692%" y="389" width="0.0797%" height="15" fill="rgb(234,217,51)" fg:x="199" fg:w="1"/><text x="16.1192%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.9490%" y="373" width="0.0797%" height="15" fill="rgb(251,29,42)" fg:x="200" fg:w="1"/><text x="16.1990%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9490%" y="357" width="0.0797%" height="15" fill="rgb(221,62,51)" fg:x="200" fg:w="1"/><text x="16.1990%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.9490%" y="421" width="0.1595%" height="15" fill="rgb(240,192,43)" fg:x="200" fg:w="2"/><text x="16.1990%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="15.9490%" y="405" width="0.1595%" height="15" fill="rgb(224,157,47)" fg:x="200" fg:w="2"/><text x="16.1990%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.9490%" y="389" width="0.1595%" height="15" fill="rgb(226,84,45)" fg:x="200" fg:w="2"/><text x="16.1990%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.0287%" y="373" width="0.0797%" height="15" fill="rgb(208,207,23)" fg:x="201" fg:w="1"/><text x="16.2787%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1085%" y="325" width="0.0797%" height="15" fill="rgb(253,34,51)" fg:x="202" fg:w="1"/><text x="16.3585%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.1085%" y="309" width="0.0797%" height="15" fill="rgb(227,26,34)" fg:x="202" fg:w="1"/><text x="16.3585%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.1882%" y="293" width="0.0797%" height="15" fill="rgb(245,75,19)" fg:x="203" fg:w="1"/><text x="16.4382%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="15.8692%" y="469" width="0.4785%" height="15" fill="rgb(250,191,31)" fg:x="199" fg:w="6"/><text x="16.1192%" y="479.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="15.8692%" y="453" width="0.4785%" height="15" fill="rgb(224,11,50)" fg:x="199" fg:w="6"/><text x="16.1192%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="15.8692%" y="437" width="0.4785%" height="15" fill="rgb(231,171,7)" fg:x="199" fg:w="6"/><text x="16.1192%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="16.1085%" y="421" width="0.2392%" height="15" fill="rgb(252,214,10)" fg:x="202" fg:w="3"/><text x="16.3585%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.1085%" y="405" width="0.2392%" height="15" fill="rgb(249,45,46)" fg:x="202" fg:w="3"/><text x="16.3585%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="16.1085%" y="389" width="0.2392%" height="15" fill="rgb(240,173,7)" fg:x="202" fg:w="3"/><text x="16.3585%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.1085%" y="373" width="0.2392%" height="15" fill="rgb(235,214,13)" fg:x="202" fg:w="3"/><text x="16.3585%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="16.1085%" y="357" width="0.2392%" height="15" fill="rgb(245,156,8)" fg:x="202" fg:w="3"/><text x="16.3585%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.1085%" y="341" width="0.2392%" height="15" fill="rgb(235,46,12)" fg:x="202" fg:w="3"/><text x="16.3585%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.1882%" y="325" width="0.1595%" height="15" fill="rgb(221,81,14)" fg:x="203" fg:w="2"/><text x="16.4382%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.1882%" y="309" width="0.1595%" height="15" fill="rgb(238,207,9)" fg:x="203" fg:w="2"/><text x="16.4382%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.2679%" y="293" width="0.0797%" height="15" fill="rgb(224,129,35)" fg:x="204" fg:w="1"/><text x="16.5179%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.2679%" y="277" width="0.0797%" height="15" fill="rgb(243,218,34)" fg:x="204" fg:w="1"/><text x="16.5179%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.2679%" y="261" width="0.0797%" height="15" fill="rgb(220,166,13)" fg:x="204" fg:w="1"/><text x="16.5179%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.2679%" y="245" width="0.0797%" height="15" fill="rgb(227,167,49)" fg:x="204" fg:w="1"/><text x="16.5179%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.4274%" y="373" width="0.0797%" height="15" fill="rgb(234,142,12)" fg:x="206" fg:w="1"/><text x="16.6774%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.4274%" y="405" width="0.1595%" height="15" fill="rgb(207,100,48)" fg:x="206" fg:w="2"/><text x="16.6774%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.4274%" y="389" width="0.1595%" height="15" fill="rgb(210,25,14)" fg:x="206" fg:w="2"/><text x="16.6774%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5072%" y="373" width="0.0797%" height="15" fill="rgb(246,116,27)" fg:x="207" fg:w="1"/><text x="16.7572%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5072%" y="357" width="0.0797%" height="15" fill="rgb(214,193,42)" fg:x="207" fg:w="1"/><text x="16.7572%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.5072%" y="341" width="0.0797%" height="15" fill="rgb(214,122,8)" fg:x="207" fg:w="1"/><text x="16.7572%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.5072%" y="325" width="0.0797%" height="15" fill="rgb(244,173,18)" fg:x="207" fg:w="1"/><text x="16.7572%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.5072%" y="309" width="0.0797%" height="15" fill="rgb(232,68,19)" fg:x="207" fg:w="1"/><text x="16.7572%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.5072%" y="293" width="0.0797%" height="15" fill="rgb(236,224,1)" fg:x="207" fg:w="1"/><text x="16.7572%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.5072%" y="277" width="0.0797%" height="15" fill="rgb(240,11,8)" fg:x="207" fg:w="1"/><text x="16.7572%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.5072%" y="261" width="0.0797%" height="15" fill="rgb(244,159,20)" fg:x="207" fg:w="1"/><text x="16.7572%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.5072%" y="245" width="0.0797%" height="15" fill="rgb(240,223,54)" fg:x="207" fg:w="1"/><text x="16.7572%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.5072%" y="229" width="0.0797%" height="15" fill="rgb(237,146,5)" fg:x="207" fg:w="1"/><text x="16.7572%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.5072%" y="213" width="0.0797%" height="15" fill="rgb(218,221,32)" fg:x="207" fg:w="1"/><text x="16.7572%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5072%" y="197" width="0.0797%" height="15" fill="rgb(244,96,26)" fg:x="207" fg:w="1"/><text x="16.7572%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="16.3477%" y="421" width="0.3190%" height="15" fill="rgb(245,184,37)" fg:x="205" fg:w="4"/><text x="16.5977%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5869%" y="405" width="0.0797%" height="15" fill="rgb(248,91,47)" fg:x="208" fg:w="1"/><text x="16.8369%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (12 samples, 0.96%)</title><rect x="15.7895%" y="501" width="0.9569%" height="15" fill="rgb(243,199,8)" fg:x="198" fg:w="12"/><text x="16.0395%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (12 samples, 0.96%)</title><rect x="15.7895%" y="485" width="0.9569%" height="15" fill="rgb(249,12,15)" fg:x="198" fg:w="12"/><text x="16.0395%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="16.3477%" y="469" width="0.3987%" height="15" fill="rgb(245,97,12)" fg:x="205" fg:w="5"/><text x="16.5977%" y="479.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="16.3477%" y="453" width="0.3987%" height="15" fill="rgb(244,61,1)" fg:x="205" fg:w="5"/><text x="16.5977%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="16.3477%" y="437" width="0.3987%" height="15" fill="rgb(222,194,10)" fg:x="205" fg:w="5"/><text x="16.5977%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.6667%" y="421" width="0.0797%" height="15" fill="rgb(226,178,8)" fg:x="209" fg:w="1"/><text x="16.9167%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.6667%" y="405" width="0.0797%" height="15" fill="rgb(241,32,34)" fg:x="209" fg:w="1"/><text x="16.9167%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.6667%" y="389" width="0.0797%" height="15" fill="rgb(254,26,6)" fg:x="209" fg:w="1"/><text x="16.9167%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.6667%" y="373" width="0.0797%" height="15" fill="rgb(249,71,11)" fg:x="209" fg:w="1"/><text x="16.9167%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.6667%" y="357" width="0.0797%" height="15" fill="rgb(232,170,27)" fg:x="209" fg:w="1"/><text x="16.9167%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.7464%" y="501" width="0.0797%" height="15" fill="rgb(214,223,17)" fg:x="210" fg:w="1"/><text x="16.9964%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7464%" y="485" width="0.0797%" height="15" fill="rgb(250,18,15)" fg:x="210" fg:w="1"/><text x="16.9964%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7464%" y="469" width="0.0797%" height="15" fill="rgb(212,153,51)" fg:x="210" fg:w="1"/><text x="16.9964%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7464%" y="453" width="0.0797%" height="15" fill="rgb(219,194,12)" fg:x="210" fg:w="1"/><text x="16.9964%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.7464%" y="437" width="0.0797%" height="15" fill="rgb(212,58,17)" fg:x="210" fg:w="1"/><text x="16.9964%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.7464%" y="421" width="0.0797%" height="15" fill="rgb(254,5,10)" fg:x="210" fg:w="1"/><text x="16.9964%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.7464%" y="405" width="0.0797%" height="15" fill="rgb(246,91,7)" fg:x="210" fg:w="1"/><text x="16.9964%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7464%" y="389" width="0.0797%" height="15" fill="rgb(218,108,49)" fg:x="210" fg:w="1"/><text x="16.9964%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7464%" y="373" width="0.0797%" height="15" fill="rgb(238,123,20)" fg:x="210" fg:w="1"/><text x="16.9964%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.7464%" y="357" width="0.0797%" height="15" fill="rgb(231,69,23)" fg:x="210" fg:w="1"/><text x="16.9964%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.7464%" y="341" width="0.0797%" height="15" fill="rgb(230,209,3)" fg:x="210" fg:w="1"/><text x="16.9964%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.7464%" y="325" width="0.0797%" height="15" fill="rgb(231,19,0)" fg:x="210" fg:w="1"/><text x="16.9964%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.7464%" y="309" width="0.0797%" height="15" fill="rgb(226,192,25)" fg:x="210" fg:w="1"/><text x="16.9964%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7464%" y="293" width="0.0797%" height="15" fill="rgb(223,175,53)" fg:x="210" fg:w="1"/><text x="16.9964%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8262%" y="485" width="0.0797%" height="15" fill="rgb(248,35,51)" fg:x="211" fg:w="1"/><text x="17.0762%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9059%" y="453" width="0.0797%" height="15" fill="rgb(230,37,26)" fg:x="212" fg:w="1"/><text x="17.1559%" y="463.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="16.9059%" y="485" width="0.1595%" height="15" fill="rgb(206,120,22)" fg:x="212" fg:w="2"/><text x="17.1559%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.9059%" y="469" width="0.1595%" height="15" fill="rgb(207,165,28)" fg:x="212" fg:w="2"/><text x="17.1559%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.9856%" y="453" width="0.0797%" height="15" fill="rgb(226,23,46)" fg:x="213" fg:w="1"/><text x="17.2356%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="16.9856%" y="437" width="0.0797%" height="15" fill="rgb(208,130,44)" fg:x="213" fg:w="1"/><text x="17.2356%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.9856%" y="421" width="0.0797%" height="15" fill="rgb(231,67,8)" fg:x="213" fg:w="1"/><text x="17.2356%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9856%" y="405" width="0.0797%" height="15" fill="rgb(205,183,22)" fg:x="213" fg:w="1"/><text x="17.2356%" y="415.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0654%" y="485" width="0.0797%" height="15" fill="rgb(224,47,9)" fg:x="214" fg:w="1"/><text x="17.3154%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.0654%" y="469" width="0.0797%" height="15" fill="rgb(250,183,49)" fg:x="214" fg:w="1"/><text x="17.3154%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0654%" y="453" width="0.0797%" height="15" fill="rgb(220,151,39)" fg:x="214" fg:w="1"/><text x="17.3154%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.0654%" y="437" width="0.0797%" height="15" fill="rgb(220,118,20)" fg:x="214" fg:w="1"/><text x="17.3154%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0654%" y="421" width="0.0797%" height="15" fill="rgb(231,65,51)" fg:x="214" fg:w="1"/><text x="17.3154%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="16.8262%" y="501" width="0.3987%" height="15" fill="rgb(253,125,37)" fg:x="211" fg:w="5"/><text x="17.0762%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="17.1451%" y="485" width="0.0797%" height="15" fill="rgb(232,102,6)" fg:x="215" fg:w="1"/><text x="17.3951%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.1451%" y="469" width="0.0797%" height="15" fill="rgb(251,105,13)" fg:x="215" fg:w="1"/><text x="17.3951%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2249%" y="485" width="0.0797%" height="15" fill="rgb(222,179,29)" fg:x="216" fg:w="1"/><text x="17.4749%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="17.3046%" y="485" width="0.0797%" height="15" fill="rgb(229,180,53)" fg:x="217" fg:w="1"/><text x="17.5546%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.3046%" y="469" width="0.0797%" height="15" fill="rgb(238,104,13)" fg:x="217" fg:w="1"/><text x="17.5546%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3046%" y="453" width="0.0797%" height="15" fill="rgb(210,130,5)" fg:x="217" fg:w="1"/><text x="17.5546%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="17.3844%" y="485" width="0.0797%" height="15" fill="rgb(233,87,49)" fg:x="218" fg:w="1"/><text x="17.6344%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.3844%" y="469" width="0.0797%" height="15" fill="rgb(243,34,9)" fg:x="218" fg:w="1"/><text x="17.6344%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.4641%" y="341" width="0.0797%" height="15" fill="rgb(235,225,10)" fg:x="219" fg:w="1"/><text x="17.7141%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4641%" y="325" width="0.0797%" height="15" fill="rgb(212,0,30)" fg:x="219" fg:w="1"/><text x="17.7141%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.4641%" y="357" width="0.1595%" height="15" fill="rgb(211,177,0)" fg:x="219" fg:w="2"/><text x="17.7141%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5439%" y="341" width="0.0797%" height="15" fill="rgb(225,220,11)" fg:x="220" fg:w="1"/><text x="17.7939%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5439%" y="325" width="0.0797%" height="15" fill="rgb(215,10,13)" fg:x="220" fg:w="1"/><text x="17.7939%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.5439%" y="309" width="0.0797%" height="15" fill="rgb(240,177,14)" fg:x="220" fg:w="1"/><text x="17.7939%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.5439%" y="293" width="0.0797%" height="15" fill="rgb(243,7,39)" fg:x="220" fg:w="1"/><text x="17.7939%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.5439%" y="277" width="0.0797%" height="15" fill="rgb(212,99,0)" fg:x="220" fg:w="1"/><text x="17.7939%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.5439%" y="261" width="0.0797%" height="15" fill="rgb(225,162,48)" fg:x="220" fg:w="1"/><text x="17.7939%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.5439%" y="245" width="0.0797%" height="15" fill="rgb(246,16,25)" fg:x="220" fg:w="1"/><text x="17.7939%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.5439%" y="229" width="0.0797%" height="15" fill="rgb(220,150,2)" fg:x="220" fg:w="1"/><text x="17.7939%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.5439%" y="213" width="0.0797%" height="15" fill="rgb(237,113,11)" fg:x="220" fg:w="1"/><text x="17.7939%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.5439%" y="197" width="0.0797%" height="15" fill="rgb(236,70,20)" fg:x="220" fg:w="1"/><text x="17.7939%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.5439%" y="181" width="0.0797%" height="15" fill="rgb(234,94,7)" fg:x="220" fg:w="1"/><text x="17.7939%" y="191.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="17.5439%" y="165" width="0.0797%" height="15" fill="rgb(250,221,0)" fg:x="220" fg:w="1"/><text x="17.7939%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="17.5439%" y="149" width="0.0797%" height="15" fill="rgb(245,149,46)" fg:x="220" fg:w="1"/><text x="17.7939%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.4641%" y="405" width="0.2392%" height="15" fill="rgb(215,37,27)" fg:x="219" fg:w="3"/><text x="17.7141%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.4641%" y="389" width="0.2392%" height="15" fill="rgb(232,65,3)" fg:x="219" fg:w="3"/><text x="17.7141%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.4641%" y="373" width="0.2392%" height="15" fill="rgb(214,2,16)" fg:x="219" fg:w="3"/><text x="17.7141%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6236%" y="357" width="0.0797%" height="15" fill="rgb(227,131,50)" fg:x="221" fg:w="1"/><text x="17.8736%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7033%" y="405" width="0.0797%" height="15" fill="rgb(247,131,45)" fg:x="222" fg:w="1"/><text x="17.9533%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7033%" y="389" width="0.0797%" height="15" fill="rgb(215,97,47)" fg:x="222" fg:w="1"/><text x="17.9533%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7033%" y="373" width="0.0797%" height="15" fill="rgb(233,143,12)" fg:x="222" fg:w="1"/><text x="17.9533%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7033%" y="357" width="0.0797%" height="15" fill="rgb(222,57,17)" fg:x="222" fg:w="1"/><text x="17.9533%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.7033%" y="341" width="0.0797%" height="15" fill="rgb(214,119,38)" fg:x="222" fg:w="1"/><text x="17.9533%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="17.4641%" y="453" width="0.3987%" height="15" fill="rgb(217,28,47)" fg:x="219" fg:w="5"/><text x="17.7141%" y="463.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="17.4641%" y="437" width="0.3987%" height="15" fill="rgb(231,14,52)" fg:x="219" fg:w="5"/><text x="17.7141%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="17.4641%" y="421" width="0.3987%" height="15" fill="rgb(220,158,18)" fg:x="219" fg:w="5"/><text x="17.7141%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.7831%" y="405" width="0.0797%" height="15" fill="rgb(222,143,46)" fg:x="223" fg:w="1"/><text x="18.0331%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7831%" y="389" width="0.0797%" height="15" fill="rgb(227,165,5)" fg:x="223" fg:w="1"/><text x="18.0331%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.7831%" y="373" width="0.0797%" height="15" fill="rgb(216,222,49)" fg:x="223" fg:w="1"/><text x="18.0331%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7831%" y="357" width="0.0797%" height="15" fill="rgb(238,73,39)" fg:x="223" fg:w="1"/><text x="18.0331%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.7831%" y="341" width="0.0797%" height="15" fill="rgb(252,115,9)" fg:x="223" fg:w="1"/><text x="18.0331%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7831%" y="325" width="0.0797%" height="15" fill="rgb(238,202,4)" fg:x="223" fg:w="1"/><text x="18.0331%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7831%" y="309" width="0.0797%" height="15" fill="rgb(252,153,44)" fg:x="223" fg:w="1"/><text x="18.0331%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8628%" y="405" width="0.0797%" height="15" fill="rgb(235,128,27)" fg:x="224" fg:w="1"/><text x="18.1128%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8628%" y="389" width="0.0797%" height="15" fill="rgb(221,121,47)" fg:x="224" fg:w="1"/><text x="18.1128%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8628%" y="373" width="0.0797%" height="15" fill="rgb(247,211,47)" fg:x="224" fg:w="1"/><text x="18.1128%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8628%" y="357" width="0.0797%" height="15" fill="rgb(252,47,49)" fg:x="224" fg:w="1"/><text x="18.1128%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8628%" y="341" width="0.0797%" height="15" fill="rgb(219,119,53)" fg:x="224" fg:w="1"/><text x="18.1128%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9426%" y="405" width="0.0797%" height="15" fill="rgb(243,165,53)" fg:x="225" fg:w="1"/><text x="18.1926%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.9426%" y="389" width="0.0797%" height="15" fill="rgb(230,12,35)" fg:x="225" fg:w="1"/><text x="18.1926%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9426%" y="373" width="0.0797%" height="15" fill="rgb(239,57,49)" fg:x="225" fg:w="1"/><text x="18.1926%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9426%" y="357" width="0.0797%" height="15" fill="rgb(231,154,7)" fg:x="225" fg:w="1"/><text x="18.1926%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0223%" y="373" width="0.0797%" height="15" fill="rgb(248,81,34)" fg:x="226" fg:w="1"/><text x="18.2723%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.0223%" y="357" width="0.0797%" height="15" fill="rgb(247,9,5)" fg:x="226" fg:w="1"/><text x="18.2723%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.1021%" y="277" width="0.0797%" height="15" fill="rgb(228,172,27)" fg:x="227" fg:w="1"/><text x="18.3521%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="17.4641%" y="485" width="0.7974%" height="15" fill="rgb(230,57,44)" fg:x="219" fg:w="10"/><text x="17.7141%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.80%)</title><rect x="17.4641%" y="469" width="0.7974%" height="15" fill="rgb(249,35,22)" fg:x="219" fg:w="10"/><text x="17.7141%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="17.8628%" y="453" width="0.3987%" height="15" fill="rgb(250,137,27)" fg:x="224" fg:w="5"/><text x="18.1128%" y="463.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="17.8628%" y="437" width="0.3987%" height="15" fill="rgb(251,57,31)" fg:x="224" fg:w="5"/><text x="18.1128%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="17.8628%" y="421" width="0.3987%" height="15" fill="rgb(238,60,0)" fg:x="224" fg:w="5"/><text x="18.1128%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="18.0223%" y="405" width="0.2392%" height="15" fill="rgb(242,185,39)" fg:x="226" fg:w="3"/><text x="18.2723%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0223%" y="389" width="0.2392%" height="15" fill="rgb(240,63,43)" fg:x="226" fg:w="3"/><text x="18.2723%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.1021%" y="373" width="0.1595%" height="15" fill="rgb(236,155,6)" fg:x="227" fg:w="2"/><text x="18.3521%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.1021%" y="357" width="0.1595%" height="15" fill="rgb(215,11,29)" fg:x="227" fg:w="2"/><text x="18.3521%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.1021%" y="341" width="0.1595%" height="15" fill="rgb(228,180,48)" fg:x="227" fg:w="2"/><text x="18.3521%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.1021%" y="325" width="0.1595%" height="15" fill="rgb(241,102,12)" fg:x="227" fg:w="2"/><text x="18.3521%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.1021%" y="309" width="0.1595%" height="15" fill="rgb(246,213,4)" fg:x="227" fg:w="2"/><text x="18.3521%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.1021%" y="293" width="0.1595%" height="15" fill="rgb(218,134,35)" fg:x="227" fg:w="2"/><text x="18.3521%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1818%" y="277" width="0.0797%" height="15" fill="rgb(251,117,35)" fg:x="228" fg:w="1"/><text x="18.4318%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.1818%" y="261" width="0.0797%" height="15" fill="rgb(206,156,45)" fg:x="228" fg:w="1"/><text x="18.4318%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.1818%" y="245" width="0.0797%" height="15" fill="rgb(218,52,27)" fg:x="228" fg:w="1"/><text x="18.4318%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="18.1818%" y="229" width="0.0797%" height="15" fill="rgb(238,83,36)" fg:x="228" fg:w="1"/><text x="18.4318%" y="239.50"></text></g><g><title>plugins_core::build::Build::holding (63 samples, 5.02%)</title><rect x="13.3174%" y="533" width="5.0239%" height="15" fill="rgb(218,53,43)" fg:x="167" fg:w="63"/><text x="13.5674%" y="543.50">plugin..</text></g><g><title>plugins_core::tools::set_container (34 samples, 2.71%)</title><rect x="15.6300%" y="517" width="2.7113%" height="15" fill="rgb(239,54,39)" fg:x="196" fg:w="34"/><text x="15.8800%" y="527.50">pl..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (14 samples, 1.12%)</title><rect x="17.2249%" y="501" width="1.1164%" height="15" fill="rgb(212,198,13)" fg:x="216" fg:w="14"/><text x="17.4749%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="18.2616%" y="485" width="0.0797%" height="15" fill="rgb(234,54,46)" fg:x="229" fg:w="1"/><text x="18.5116%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.2616%" y="469" width="0.0797%" height="15" fill="rgb(217,120,7)" fg:x="229" fg:w="1"/><text x="18.5116%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="18.2616%" y="453" width="0.0797%" height="15" fill="rgb(246,39,15)" fg:x="229" fg:w="1"/><text x="18.5116%" y="463.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="18.2616%" y="437" width="0.0797%" height="15" fill="rgb(242,143,31)" fg:x="229" fg:w="1"/><text x="18.5116%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.2616%" y="421" width="0.0797%" height="15" fill="rgb(252,60,24)" fg:x="229" fg:w="1"/><text x="18.5116%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.2616%" y="405" width="0.0797%" height="15" fill="rgb(249,220,7)" fg:x="229" fg:w="1"/><text x="18.5116%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.2616%" y="389" width="0.0797%" height="15" fill="rgb(236,67,13)" fg:x="229" fg:w="1"/><text x="18.5116%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.5008%" y="357" width="0.0797%" height="15" fill="rgb(210,62,39)" fg:x="232" fg:w="1"/><text x="18.7508%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.5008%" y="341" width="0.0797%" height="15" fill="rgb(219,122,53)" fg:x="232" fg:w="1"/><text x="18.7508%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.5008%" y="325" width="0.0797%" height="15" fill="rgb(218,87,25)" fg:x="232" fg:w="1"/><text x="18.7508%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.5008%" y="309" width="0.0797%" height="15" fill="rgb(234,179,48)" fg:x="232" fg:w="1"/><text x="18.7508%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.5008%" y="293" width="0.0797%" height="15" fill="rgb(248,90,0)" fg:x="232" fg:w="1"/><text x="18.7508%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.5008%" y="277" width="0.0797%" height="15" fill="rgb(207,228,37)" fg:x="232" fg:w="1"/><text x="18.7508%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="18.4211%" y="501" width="0.2392%" height="15" fill="rgb(235,214,15)" fg:x="231" fg:w="3"/><text x="18.6711%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="18.4211%" y="485" width="0.2392%" height="15" fill="rgb(210,144,39)" fg:x="231" fg:w="3"/><text x="18.6711%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="18.4211%" y="469" width="0.2392%" height="15" fill="rgb(222,67,41)" fg:x="231" fg:w="3"/><text x="18.6711%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="18.4211%" y="453" width="0.2392%" height="15" fill="rgb(205,35,37)" fg:x="231" fg:w="3"/><text x="18.6711%" y="463.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="18.4211%" y="437" width="0.2392%" height="15" fill="rgb(216,125,40)" fg:x="231" fg:w="3"/><text x="18.6711%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="18.4211%" y="421" width="0.2392%" height="15" fill="rgb(228,227,20)" fg:x="231" fg:w="3"/><text x="18.6711%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="18.4211%" y="405" width="0.2392%" height="15" fill="rgb(242,173,45)" fg:x="231" fg:w="3"/><text x="18.6711%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="18.5008%" y="389" width="0.1595%" height="15" fill="rgb(215,79,24)" fg:x="232" fg:w="2"/><text x="18.7508%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.5008%" y="373" width="0.1595%" height="15" fill="rgb(238,164,38)" fg:x="232" fg:w="2"/><text x="18.7508%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.5805%" y="357" width="0.0797%" height="15" fill="rgb(245,196,38)" fg:x="233" fg:w="1"/><text x="18.8305%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.5805%" y="341" width="0.0797%" height="15" fill="rgb(231,217,29)" fg:x="233" fg:w="1"/><text x="18.8305%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.5805%" y="325" width="0.0797%" height="15" fill="rgb(245,6,4)" fg:x="233" fg:w="1"/><text x="18.8305%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.5805%" y="309" width="0.0797%" height="15" fill="rgb(214,76,49)" fg:x="233" fg:w="1"/><text x="18.8305%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.5805%" y="293" width="0.0797%" height="15" fill="rgb(205,96,12)" fg:x="233" fg:w="1"/><text x="18.8305%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.5805%" y="277" width="0.0797%" height="15" fill="rgb(243,131,4)" fg:x="233" fg:w="1"/><text x="18.8305%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.5805%" y="261" width="0.0797%" height="15" fill="rgb(214,114,4)" fg:x="233" fg:w="1"/><text x="18.8305%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.5805%" y="245" width="0.0797%" height="15" fill="rgb(234,215,15)" fg:x="233" fg:w="1"/><text x="18.8305%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.5805%" y="229" width="0.0797%" height="15" fill="rgb(250,216,45)" fg:x="233" fg:w="1"/><text x="18.8305%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.5805%" y="213" width="0.0797%" height="15" fill="rgb(236,128,4)" fg:x="233" fg:w="1"/><text x="18.8305%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.5805%" y="197" width="0.0797%" height="15" fill="rgb(234,50,33)" fg:x="233" fg:w="1"/><text x="18.8305%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.5805%" y="181" width="0.0797%" height="15" fill="rgb(253,131,37)" fg:x="233" fg:w="1"/><text x="18.8305%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.5805%" y="165" width="0.0797%" height="15" fill="rgb(218,55,27)" fg:x="233" fg:w="1"/><text x="18.8305%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.5805%" y="149" width="0.0797%" height="15" fill="rgb(241,220,28)" fg:x="233" fg:w="1"/><text x="18.8305%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.5805%" y="133" width="0.0797%" height="15" fill="rgb(241,90,48)" fg:x="233" fg:w="1"/><text x="18.8305%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.5805%" y="117" width="0.0797%" height="15" fill="rgb(216,43,37)" fg:x="233" fg:w="1"/><text x="18.8305%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="18.5805%" y="101" width="0.0797%" height="15" fill="rgb(207,173,9)" fg:x="233" fg:w="1"/><text x="18.8305%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="18.5805%" y="85" width="0.0797%" height="15" fill="rgb(240,126,30)" fg:x="233" fg:w="1"/><text x="18.8305%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="18.5805%" y="69" width="0.0797%" height="15" fill="rgb(228,178,53)" fg:x="233" fg:w="1"/><text x="18.8305%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.5805%" y="53" width="0.0797%" height="15" fill="rgb(217,33,4)" fg:x="233" fg:w="1"/><text x="18.8305%" y="63.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="18.6603%" y="485" width="0.0797%" height="15" fill="rgb(206,124,34)" fg:x="234" fg:w="1"/><text x="18.9103%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.6603%" y="469" width="0.0797%" height="15" fill="rgb(208,122,53)" fg:x="234" fg:w="1"/><text x="18.9103%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.8198%" y="389" width="0.0797%" height="15" fill="rgb(215,202,26)" fg:x="236" fg:w="1"/><text x="19.0698%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8198%" y="373" width="0.0797%" height="15" fill="rgb(232,198,31)" fg:x="236" fg:w="1"/><text x="19.0698%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8198%" y="357" width="0.0797%" height="15" fill="rgb(222,23,35)" fg:x="236" fg:w="1"/><text x="19.0698%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.8198%" y="341" width="0.0797%" height="15" fill="rgb(242,27,53)" fg:x="236" fg:w="1"/><text x="19.0698%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.8198%" y="325" width="0.0797%" height="15" fill="rgb(210,216,42)" fg:x="236" fg:w="1"/><text x="19.0698%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.8198%" y="309" width="0.0797%" height="15" fill="rgb(234,39,38)" fg:x="236" fg:w="1"/><text x="19.0698%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.8198%" y="293" width="0.0797%" height="15" fill="rgb(235,126,54)" fg:x="236" fg:w="1"/><text x="19.0698%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.8198%" y="277" width="0.0797%" height="15" fill="rgb(235,150,33)" fg:x="236" fg:w="1"/><text x="19.0698%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.8198%" y="261" width="0.0797%" height="15" fill="rgb(249,49,53)" fg:x="236" fg:w="1"/><text x="19.0698%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.8198%" y="245" width="0.0797%" height="15" fill="rgb(238,60,50)" fg:x="236" fg:w="1"/><text x="19.0698%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.8198%" y="229" width="0.0797%" height="15" fill="rgb(210,5,2)" fg:x="236" fg:w="1"/><text x="19.0698%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.8198%" y="213" width="0.0797%" height="15" fill="rgb(214,207,24)" fg:x="236" fg:w="1"/><text x="19.0698%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8198%" y="197" width="0.0797%" height="15" fill="rgb(228,173,2)" fg:x="236" fg:w="1"/><text x="19.0698%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.8198%" y="421" width="0.1595%" height="15" fill="rgb(244,26,8)" fg:x="236" fg:w="2"/><text x="19.0698%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.8198%" y="405" width="0.1595%" height="15" fill="rgb(249,153,35)" fg:x="236" fg:w="2"/><text x="19.0698%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8995%" y="389" width="0.0797%" height="15" fill="rgb(221,215,40)" fg:x="237" fg:w="1"/><text x="19.1495%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="18.7400%" y="453" width="0.3987%" height="15" fill="rgb(238,106,35)" fg:x="235" fg:w="5"/><text x="18.9900%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="18.8198%" y="437" width="0.3190%" height="15" fill="rgb(207,195,21)" fg:x="236" fg:w="4"/><text x="19.0698%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.9793%" y="421" width="0.1595%" height="15" fill="rgb(205,43,29)" fg:x="238" fg:w="2"/><text x="19.2293%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="18.6603%" y="501" width="0.6380%" height="15" fill="rgb(236,35,21)" fg:x="234" fg:w="8"/><text x="18.9103%" y="511.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="18.7400%" y="485" width="0.5582%" height="15" fill="rgb(244,74,8)" fg:x="235" fg:w="7"/><text x="18.9900%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="18.7400%" y="469" width="0.5582%" height="15" fill="rgb(241,229,7)" fg:x="235" fg:w="7"/><text x="18.9900%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.1388%" y="453" width="0.1595%" height="15" fill="rgb(212,223,25)" fg:x="240" fg:w="2"/><text x="19.3888%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1388%" y="437" width="0.1595%" height="15" fill="rgb(234,58,53)" fg:x="240" fg:w="2"/><text x="19.3888%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.1388%" y="421" width="0.1595%" height="15" fill="rgb(244,36,1)" fg:x="240" fg:w="2"/><text x="19.3888%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.1388%" y="405" width="0.1595%" height="15" fill="rgb(222,40,54)" fg:x="240" fg:w="2"/><text x="19.3888%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.2185%" y="389" width="0.0797%" height="15" fill="rgb(210,207,39)" fg:x="241" fg:w="1"/><text x="19.4685%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2185%" y="373" width="0.0797%" height="15" fill="rgb(234,52,14)" fg:x="241" fg:w="1"/><text x="19.4685%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2185%" y="357" width="0.0797%" height="15" fill="rgb(239,108,46)" fg:x="241" fg:w="1"/><text x="19.4685%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2185%" y="341" width="0.0797%" height="15" fill="rgb(252,223,5)" fg:x="241" fg:w="1"/><text x="19.4685%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2185%" y="325" width="0.0797%" height="15" fill="rgb(227,181,11)" fg:x="241" fg:w="1"/><text x="19.4685%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2185%" y="309" width="0.0797%" height="15" fill="rgb(248,126,40)" fg:x="241" fg:w="1"/><text x="19.4685%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="19.2185%" y="293" width="0.0797%" height="15" fill="rgb(243,1,18)" fg:x="241" fg:w="1"/><text x="19.4685%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="19.2185%" y="277" width="0.0797%" height="15" fill="rgb(214,145,23)" fg:x="241" fg:w="1"/><text x="19.4685%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2982%" y="453" width="0.0797%" height="15" fill="rgb(241,218,11)" fg:x="242" fg:w="1"/><text x="19.5482%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.2982%" y="437" width="0.0797%" height="15" fill="rgb(214,219,24)" fg:x="242" fg:w="1"/><text x="19.5482%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.2982%" y="421" width="0.0797%" height="15" fill="rgb(235,32,7)" fg:x="242" fg:w="1"/><text x="19.5482%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2982%" y="405" width="0.0797%" height="15" fill="rgb(227,121,28)" fg:x="242" fg:w="1"/><text x="19.5482%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2982%" y="389" width="0.0797%" height="15" fill="rgb(216,129,49)" fg:x="242" fg:w="1"/><text x="19.5482%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.2982%" y="373" width="0.0797%" height="15" fill="rgb(207,194,50)" fg:x="242" fg:w="1"/><text x="19.5482%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.2982%" y="357" width="0.0797%" height="15" fill="rgb(207,4,18)" fg:x="242" fg:w="1"/><text x="19.5482%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.2982%" y="341" width="0.0797%" height="15" fill="rgb(213,50,30)" fg:x="242" fg:w="1"/><text x="19.5482%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2982%" y="325" width="0.0797%" height="15" fill="rgb(208,77,22)" fg:x="242" fg:w="1"/><text x="19.5482%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2982%" y="309" width="0.0797%" height="15" fill="rgb(244,204,34)" fg:x="242" fg:w="1"/><text x="19.5482%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.2982%" y="293" width="0.0797%" height="15" fill="rgb(230,20,17)" fg:x="242" fg:w="1"/><text x="19.5482%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.2982%" y="277" width="0.0797%" height="15" fill="rgb(237,83,15)" fg:x="242" fg:w="1"/><text x="19.5482%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.2982%" y="261" width="0.0797%" height="15" fill="rgb(221,109,25)" fg:x="242" fg:w="1"/><text x="19.5482%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.2982%" y="245" width="0.0797%" height="15" fill="rgb(205,194,52)" fg:x="242" fg:w="1"/><text x="19.5482%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2982%" y="229" width="0.0797%" height="15" fill="rgb(244,173,54)" fg:x="242" fg:w="1"/><text x="19.5482%" y="239.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="19.2982%" y="485" width="0.1595%" height="15" fill="rgb(227,181,18)" fg:x="242" fg:w="2"/><text x="19.5482%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.2982%" y="469" width="0.1595%" height="15" fill="rgb(238,36,30)" fg:x="242" fg:w="2"/><text x="19.5482%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.3780%" y="453" width="0.0797%" height="15" fill="rgb(254,85,0)" fg:x="243" fg:w="1"/><text x="19.6280%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3780%" y="437" width="0.0797%" height="15" fill="rgb(247,63,33)" fg:x="243" fg:w="1"/><text x="19.6280%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.3780%" y="421" width="0.0797%" height="15" fill="rgb(220,7,54)" fg:x="243" fg:w="1"/><text x="19.6280%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3780%" y="405" width="0.0797%" height="15" fill="rgb(238,227,21)" fg:x="243" fg:w="1"/><text x="19.6280%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3780%" y="389" width="0.0797%" height="15" fill="rgb(237,29,31)" fg:x="243" fg:w="1"/><text x="19.6280%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="19.2982%" y="501" width="0.2392%" height="15" fill="rgb(211,21,50)" fg:x="242" fg:w="3"/><text x="19.5482%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.4577%" y="485" width="0.0797%" height="15" fill="rgb(239,119,2)" fg:x="244" fg:w="1"/><text x="19.7077%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5375%" y="357" width="0.0797%" height="15" fill="rgb(250,2,39)" fg:x="245" fg:w="1"/><text x="19.7875%" y="367.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="19.5375%" y="453" width="0.1595%" height="15" fill="rgb(244,46,53)" fg:x="245" fg:w="2"/><text x="19.7875%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.5375%" y="437" width="0.1595%" height="15" fill="rgb(209,21,19)" fg:x="245" fg:w="2"/><text x="19.7875%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.5375%" y="421" width="0.1595%" height="15" fill="rgb(236,145,4)" fg:x="245" fg:w="2"/><text x="19.7875%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.5375%" y="405" width="0.1595%" height="15" fill="rgb(220,133,36)" fg:x="245" fg:w="2"/><text x="19.7875%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.5375%" y="389" width="0.1595%" height="15" fill="rgb(244,18,3)" fg:x="245" fg:w="2"/><text x="19.7875%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.5375%" y="373" width="0.1595%" height="15" fill="rgb(232,171,48)" fg:x="245" fg:w="2"/><text x="19.7875%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6172%" y="357" width="0.0797%" height="15" fill="rgb(223,223,53)" fg:x="246" fg:w="1"/><text x="19.8672%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.6970%" y="421" width="0.2392%" height="15" fill="rgb(246,92,13)" fg:x="247" fg:w="3"/><text x="19.9470%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.7767%" y="405" width="0.1595%" height="15" fill="rgb(229,171,10)" fg:x="248" fg:w="2"/><text x="20.0267%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8565%" y="389" width="0.0797%" height="15" fill="rgb(213,131,26)" fg:x="249" fg:w="1"/><text x="20.1065%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8565%" y="373" width="0.0797%" height="15" fill="rgb(242,87,54)" fg:x="249" fg:w="1"/><text x="20.1065%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9362%" y="357" width="0.0797%" height="15" fill="rgb(237,21,35)" fg:x="250" fg:w="1"/><text x="20.1862%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9362%" y="341" width="0.0797%" height="15" fill="rgb(253,13,47)" fg:x="250" fg:w="1"/><text x="20.1862%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9362%" y="325" width="0.0797%" height="15" fill="rgb(215,122,49)" fg:x="250" fg:w="1"/><text x="20.1862%" y="335.50"></text></g><g><title>plugins_core::build::Build::into_entry (22 samples, 1.75%)</title><rect x="18.3413%" y="533" width="1.7544%" height="15" fill="rgb(209,179,30)" fg:x="230" fg:w="22"/><text x="18.5913%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (21 samples, 1.67%)</title><rect x="18.4211%" y="517" width="1.6746%" height="15" fill="rgb(235,100,24)" fg:x="231" fg:w="21"/><text x="18.6711%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="19.5375%" y="501" width="0.5582%" height="15" fill="rgb(209,67,24)" fg:x="245" fg:w="7"/><text x="19.7875%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="19.5375%" y="485" width="0.5582%" height="15" fill="rgb(206,74,32)" fg:x="245" fg:w="7"/><text x="19.7875%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="19.5375%" y="469" width="0.5582%" height="15" fill="rgb(212,45,25)" fg:x="245" fg:w="7"/><text x="19.7875%" y="479.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="19.6970%" y="453" width="0.3987%" height="15" fill="rgb(239,26,3)" fg:x="247" fg:w="5"/><text x="19.9470%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="19.6970%" y="437" width="0.3987%" height="15" fill="rgb(218,36,15)" fg:x="247" fg:w="5"/><text x="19.9470%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="19.9362%" y="421" width="0.1595%" height="15" fill="rgb(206,108,24)" fg:x="250" fg:w="2"/><text x="20.1862%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.9362%" y="405" width="0.1595%" height="15" fill="rgb(234,204,42)" fg:x="250" fg:w="2"/><text x="20.1862%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="19.9362%" y="389" width="0.1595%" height="15" fill="rgb(229,2,11)" fg:x="250" fg:w="2"/><text x="20.1862%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.9362%" y="373" width="0.1595%" height="15" fill="rgb(221,20,48)" fg:x="250" fg:w="2"/><text x="20.1862%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.0159%" y="357" width="0.0797%" height="15" fill="rgb(244,164,10)" fg:x="251" fg:w="1"/><text x="20.2659%" y="367.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="20.0957%" y="501" width="0.0797%" height="15" fill="rgb(243,229,2)" fg:x="252" fg:w="1"/><text x="20.3457%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.0957%" y="485" width="0.0797%" height="15" fill="rgb(232,131,37)" fg:x="252" fg:w="1"/><text x="20.3457%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.0957%" y="469" width="0.0797%" height="15" fill="rgb(217,156,11)" fg:x="252" fg:w="1"/><text x="20.3457%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="20.0957%" y="453" width="0.0797%" height="15" fill="rgb(239,99,48)" fg:x="252" fg:w="1"/><text x="20.3457%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0957%" y="437" width="0.0797%" height="15" fill="rgb(231,209,9)" fg:x="252" fg:w="1"/><text x="20.3457%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="20.1754%" y="501" width="0.0797%" height="15" fill="rgb(254,97,27)" fg:x="253" fg:w="1"/><text x="20.4254%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.1754%" y="485" width="0.0797%" height="15" fill="rgb(223,151,38)" fg:x="253" fg:w="1"/><text x="20.4254%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="20.0957%" y="533" width="0.2392%" height="15" fill="rgb(219,206,35)" fg:x="252" fg:w="3"/><text x="20.3457%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="20.0957%" y="517" width="0.2392%" height="15" fill="rgb(216,130,31)" fg:x="252" fg:w="3"/><text x="20.3457%" y="527.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="20.2552%" y="501" width="0.0797%" height="15" fill="rgb(251,97,34)" fg:x="254" fg:w="1"/><text x="20.5052%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2552%" y="485" width="0.0797%" height="15" fill="rgb(246,159,47)" fg:x="254" fg:w="1"/><text x="20.5052%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="20.3349%" y="501" width="0.0797%" height="15" fill="rgb(232,87,10)" fg:x="255" fg:w="1"/><text x="20.5849%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="20.4147%" y="485" width="0.0797%" height="15" fill="rgb(249,1,37)" fg:x="256" fg:w="1"/><text x="20.6647%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.4147%" y="469" width="0.0797%" height="15" fill="rgb(239,135,14)" fg:x="256" fg:w="1"/><text x="20.6647%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6539%" y="389" width="0.0797%" height="15" fill="rgb(253,116,46)" fg:x="259" fg:w="1"/><text x="20.9039%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.6539%" y="373" width="0.0797%" height="15" fill="rgb(222,217,37)" fg:x="259" fg:w="1"/><text x="20.9039%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.6539%" y="357" width="0.0797%" height="15" fill="rgb(252,96,8)" fg:x="259" fg:w="1"/><text x="20.9039%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.6539%" y="341" width="0.0797%" height="15" fill="rgb(254,103,41)" fg:x="259" fg:w="1"/><text x="20.9039%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.6539%" y="325" width="0.0797%" height="15" fill="rgb(218,213,19)" fg:x="259" fg:w="1"/><text x="20.9039%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6539%" y="309" width="0.0797%" height="15" fill="rgb(253,95,21)" fg:x="259" fg:w="1"/><text x="20.9039%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.6539%" y="293" width="0.0797%" height="15" fill="rgb(229,26,28)" fg:x="259" fg:w="1"/><text x="20.9039%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.6539%" y="277" width="0.0797%" height="15" fill="rgb(230,129,16)" fg:x="259" fg:w="1"/><text x="20.9039%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.6539%" y="261" width="0.0797%" height="15" fill="rgb(236,126,17)" fg:x="259" fg:w="1"/><text x="20.9039%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.6539%" y="245" width="0.0797%" height="15" fill="rgb(209,33,33)" fg:x="259" fg:w="1"/><text x="20.9039%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.6539%" y="229" width="0.0797%" height="15" fill="rgb(227,85,29)" fg:x="259" fg:w="1"/><text x="20.9039%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6539%" y="213" width="0.0797%" height="15" fill="rgb(241,53,46)" fg:x="259" fg:w="1"/><text x="20.9039%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="20.4944%" y="453" width="0.3190%" height="15" fill="rgb(228,167,53)" fg:x="257" fg:w="4"/><text x="20.7444%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6539%" y="437" width="0.1595%" height="15" fill="rgb(238,195,45)" fg:x="259" fg:w="2"/><text x="20.9039%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6539%" y="421" width="0.1595%" height="15" fill="rgb(252,124,45)" fg:x="259" fg:w="2"/><text x="20.9039%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6539%" y="405" width="0.1595%" height="15" fill="rgb(251,38,35)" fg:x="259" fg:w="2"/><text x="20.9039%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7337%" y="389" width="0.0797%" height="15" fill="rgb(227,33,2)" fg:x="260" fg:w="1"/><text x="20.9837%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="20.3349%" y="517" width="0.5582%" height="15" fill="rgb(223,157,46)" fg:x="255" fg:w="7"/><text x="20.5849%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="20.4147%" y="501" width="0.4785%" height="15" fill="rgb(222,78,41)" fg:x="256" fg:w="6"/><text x="20.6647%" y="511.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="20.4944%" y="485" width="0.3987%" height="15" fill="rgb(248,176,11)" fg:x="257" fg:w="5"/><text x="20.7444%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="20.4944%" y="469" width="0.3987%" height="15" fill="rgb(241,221,18)" fg:x="257" fg:w="5"/><text x="20.7444%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.8134%" y="453" width="0.0797%" height="15" fill="rgb(218,85,22)" fg:x="261" fg:w="1"/><text x="21.0634%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8134%" y="437" width="0.0797%" height="15" fill="rgb(222,223,7)" fg:x="261" fg:w="1"/><text x="21.0634%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.8134%" y="421" width="0.0797%" height="15" fill="rgb(254,59,39)" fg:x="261" fg:w="1"/><text x="21.0634%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8134%" y="405" width="0.0797%" height="15" fill="rgb(247,100,27)" fg:x="261" fg:w="1"/><text x="21.0634%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.8134%" y="389" width="0.0797%" height="15" fill="rgb(237,207,10)" fg:x="261" fg:w="1"/><text x="21.0634%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8134%" y="373" width="0.0797%" height="15" fill="rgb(220,121,28)" fg:x="261" fg:w="1"/><text x="21.0634%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8134%" y="357" width="0.0797%" height="15" fill="rgb(213,223,20)" fg:x="261" fg:w="1"/><text x="21.0634%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8134%" y="341" width="0.0797%" height="15" fill="rgb(205,121,27)" fg:x="261" fg:w="1"/><text x="21.0634%" y="351.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="20.8931%" y="517" width="0.0797%" height="15" fill="rgb(253,24,53)" fg:x="262" fg:w="1"/><text x="21.1431%" y="527.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="20.8931%" y="501" width="0.0797%" height="15" fill="rgb(224,224,47)" fg:x="262" fg:w="1"/><text x="21.1431%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.8931%" y="485" width="0.0797%" height="15" fill="rgb(250,125,36)" fg:x="262" fg:w="1"/><text x="21.1431%" y="495.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="20.8931%" y="469" width="0.0797%" height="15" fill="rgb(240,144,38)" fg:x="262" fg:w="1"/><text x="21.1431%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.8931%" y="453" width="0.0797%" height="15" fill="rgb(250,15,50)" fg:x="262" fg:w="1"/><text x="21.1431%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.8931%" y="437" width="0.0797%" height="15" fill="rgb(210,24,26)" fg:x="262" fg:w="1"/><text x="21.1431%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.1324%" y="325" width="0.1595%" height="15" fill="rgb(234,53,53)" fg:x="265" fg:w="2"/><text x="21.3824%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.2121%" y="309" width="0.0797%" height="15" fill="rgb(208,108,28)" fg:x="266" fg:w="1"/><text x="21.4621%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.2919%" y="325" width="0.0797%" height="15" fill="rgb(227,143,7)" fg:x="267" fg:w="1"/><text x="21.5419%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.2919%" y="309" width="0.0797%" height="15" fill="rgb(238,189,38)" fg:x="267" fg:w="1"/><text x="21.5419%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.2919%" y="293" width="0.0797%" height="15" fill="rgb(222,69,15)" fg:x="267" fg:w="1"/><text x="21.5419%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.2919%" y="277" width="0.0797%" height="15" fill="rgb(213,169,7)" fg:x="267" fg:w="1"/><text x="21.5419%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.2919%" y="261" width="0.0797%" height="15" fill="rgb(251,219,4)" fg:x="267" fg:w="1"/><text x="21.5419%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.2919%" y="245" width="0.0797%" height="15" fill="rgb(241,55,40)" fg:x="267" fg:w="1"/><text x="21.5419%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.2919%" y="229" width="0.0797%" height="15" fill="rgb(243,57,30)" fg:x="267" fg:w="1"/><text x="21.5419%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.2919%" y="213" width="0.0797%" height="15" fill="rgb(234,50,30)" fg:x="267" fg:w="1"/><text x="21.5419%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.2919%" y="197" width="0.0797%" height="15" fill="rgb(239,23,42)" fg:x="267" fg:w="1"/><text x="21.5419%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.2919%" y="181" width="0.0797%" height="15" fill="rgb(217,38,19)" fg:x="267" fg:w="1"/><text x="21.5419%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.2919%" y="165" width="0.0797%" height="15" fill="rgb(215,179,16)" fg:x="267" fg:w="1"/><text x="21.5419%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.2919%" y="149" width="0.0797%" height="15" fill="rgb(254,21,37)" fg:x="267" fg:w="1"/><text x="21.5419%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="21.1324%" y="341" width="0.3190%" height="15" fill="rgb(219,207,48)" fg:x="265" fg:w="4"/><text x="21.3824%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.3716%" y="325" width="0.0797%" height="15" fill="rgb(227,225,41)" fg:x="268" fg:w="1"/><text x="21.6216%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="21.1324%" y="389" width="0.3987%" height="15" fill="rgb(223,130,1)" fg:x="265" fg:w="5"/><text x="21.3824%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="21.1324%" y="373" width="0.3987%" height="15" fill="rgb(249,54,42)" fg:x="265" fg:w="5"/><text x="21.3824%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="21.1324%" y="357" width="0.3987%" height="15" fill="rgb(248,69,25)" fg:x="265" fg:w="5"/><text x="21.3824%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4514%" y="341" width="0.0797%" height="15" fill="rgb(234,21,32)" fg:x="269" fg:w="1"/><text x="21.7014%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.5311%" y="325" width="0.0797%" height="15" fill="rgb(252,136,6)" fg:x="270" fg:w="1"/><text x="21.7811%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.5311%" y="309" width="0.0797%" height="15" fill="rgb(245,87,12)" fg:x="270" fg:w="1"/><text x="21.7811%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.6108%" y="325" width="0.0797%" height="15" fill="rgb(208,12,15)" fg:x="271" fg:w="1"/><text x="21.8608%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6108%" y="309" width="0.0797%" height="15" fill="rgb(250,98,2)" fg:x="271" fg:w="1"/><text x="21.8608%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6906%" y="293" width="0.0797%" height="15" fill="rgb(205,213,15)" fg:x="272" fg:w="1"/><text x="21.9406%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6906%" y="277" width="0.0797%" height="15" fill="rgb(248,192,44)" fg:x="272" fg:w="1"/><text x="21.9406%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.80%)</title><rect x="21.0526%" y="469" width="0.7974%" height="15" fill="rgb(221,89,17)" fg:x="264" fg:w="10"/><text x="21.3026%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="21.0526%" y="453" width="0.7974%" height="15" fill="rgb(209,55,3)" fg:x="264" fg:w="10"/><text x="21.3026%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.80%)</title><rect x="21.0526%" y="437" width="0.7974%" height="15" fill="rgb(247,23,45)" fg:x="264" fg:w="10"/><text x="21.3026%" y="447.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="21.0526%" y="421" width="0.7974%" height="15" fill="rgb(235,152,23)" fg:x="264" fg:w="10"/><text x="21.3026%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="21.0526%" y="405" width="0.7974%" height="15" fill="rgb(244,63,13)" fg:x="264" fg:w="10"/><text x="21.3026%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="21.5311%" y="389" width="0.3190%" height="15" fill="rgb(227,30,37)" fg:x="270" fg:w="4"/><text x="21.7811%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="21.5311%" y="373" width="0.3190%" height="15" fill="rgb(224,49,42)" fg:x="270" fg:w="4"/><text x="21.7811%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="21.5311%" y="357" width="0.3190%" height="15" fill="rgb(218,129,5)" fg:x="270" fg:w="4"/><text x="21.7811%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="21.5311%" y="341" width="0.3190%" height="15" fill="rgb(240,199,54)" fg:x="270" fg:w="4"/><text x="21.7811%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="21.6906%" y="325" width="0.1595%" height="15" fill="rgb(234,31,13)" fg:x="272" fg:w="2"/><text x="21.9406%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.6906%" y="309" width="0.1595%" height="15" fill="rgb(219,73,54)" fg:x="272" fg:w="2"/><text x="21.9406%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.7703%" y="293" width="0.0797%" height="15" fill="rgb(251,162,10)" fg:x="273" fg:w="1"/><text x="22.0203%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.7703%" y="277" width="0.0797%" height="15" fill="rgb(240,138,47)" fg:x="273" fg:w="1"/><text x="22.0203%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7703%" y="261" width="0.0797%" height="15" fill="rgb(216,138,26)" fg:x="273" fg:w="1"/><text x="22.0203%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="21.9298%" y="421" width="0.0797%" height="15" fill="rgb(243,17,35)" fg:x="275" fg:w="1"/><text x="22.1798%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="21.9298%" y="437" width="0.2392%" height="15" fill="rgb(241,60,18)" fg:x="275" fg:w="3"/><text x="22.1798%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="22.0096%" y="421" width="0.1595%" height="15" fill="rgb(234,2,44)" fg:x="276" fg:w="2"/><text x="22.2596%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="22.0096%" y="405" width="0.1595%" height="15" fill="rgb(225,225,33)" fg:x="276" fg:w="2"/><text x="22.2596%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="22.0096%" y="389" width="0.1595%" height="15" fill="rgb(234,50,31)" fg:x="276" fg:w="2"/><text x="22.2596%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="22.0096%" y="373" width="0.1595%" height="15" fill="rgb(249,6,25)" fg:x="276" fg:w="2"/><text x="22.2596%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="22.0096%" y="357" width="0.1595%" height="15" fill="rgb(241,5,17)" fg:x="276" fg:w="2"/><text x="22.2596%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="22.0096%" y="341" width="0.1595%" height="15" fill="rgb(207,116,10)" fg:x="276" fg:w="2"/><text x="22.2596%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="22.0096%" y="325" width="0.1595%" height="15" fill="rgb(222,128,18)" fg:x="276" fg:w="2"/><text x="22.2596%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="22.0096%" y="309" width="0.1595%" height="15" fill="rgb(229,109,25)" fg:x="276" fg:w="2"/><text x="22.2596%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.0893%" y="293" width="0.0797%" height="15" fill="rgb(222,102,25)" fg:x="277" fg:w="1"/><text x="22.3393%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.0893%" y="277" width="0.0797%" height="15" fill="rgb(239,211,5)" fg:x="277" fg:w="1"/><text x="22.3393%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.0893%" y="261" width="0.0797%" height="15" fill="rgb(223,136,26)" fg:x="277" fg:w="1"/><text x="22.3393%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="22.0893%" y="245" width="0.0797%" height="15" fill="rgb(227,30,15)" fg:x="277" fg:w="1"/><text x="22.3393%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="22.0893%" y="229" width="0.0797%" height="15" fill="rgb(247,76,4)" fg:x="277" fg:w="1"/><text x="22.3393%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="22.0893%" y="213" width="0.0797%" height="15" fill="rgb(245,38,48)" fg:x="277" fg:w="1"/><text x="22.3393%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="22.0893%" y="197" width="0.0797%" height="15" fill="rgb(210,220,14)" fg:x="277" fg:w="1"/><text x="22.3393%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.0893%" y="181" width="0.0797%" height="15" fill="rgb(224,60,51)" fg:x="277" fg:w="1"/><text x="22.3393%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.0893%" y="165" width="0.0797%" height="15" fill="rgb(212,133,49)" fg:x="277" fg:w="1"/><text x="22.3393%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.0893%" y="149" width="0.0797%" height="15" fill="rgb(231,39,22)" fg:x="277" fg:w="1"/><text x="22.3393%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="22.0893%" y="133" width="0.0797%" height="15" fill="rgb(236,173,22)" fg:x="277" fg:w="1"/><text x="22.3393%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="22.0893%" y="117" width="0.0797%" height="15" fill="rgb(210,70,0)" fg:x="277" fg:w="1"/><text x="22.3393%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="22.1691%" y="421" width="0.0797%" height="15" fill="rgb(215,170,11)" fg:x="278" fg:w="1"/><text x="22.4191%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="22.1691%" y="405" width="0.0797%" height="15" fill="rgb(220,154,28)" fg:x="278" fg:w="1"/><text x="22.4191%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1691%" y="389" width="0.0797%" height="15" fill="rgb(240,160,41)" fg:x="278" fg:w="1"/><text x="22.4191%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="22.2488%" y="421" width="0.1595%" height="15" fill="rgb(243,215,41)" fg:x="279" fg:w="2"/><text x="22.4988%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.2488%" y="405" width="0.1595%" height="15" fill="rgb(214,208,31)" fg:x="279" fg:w="2"/><text x="22.4988%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3285%" y="389" width="0.0797%" height="15" fill="rgb(247,57,22)" fg:x="280" fg:w="1"/><text x="22.5785%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3285%" y="373" width="0.0797%" height="15" fill="rgb(228,73,52)" fg:x="280" fg:w="1"/><text x="22.5785%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3285%" y="357" width="0.0797%" height="15" fill="rgb(252,60,9)" fg:x="280" fg:w="1"/><text x="22.5785%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3285%" y="341" width="0.0797%" height="15" fill="rgb(233,9,51)" fg:x="280" fg:w="1"/><text x="22.5785%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4083%" y="405" width="0.0797%" height="15" fill="rgb(223,67,14)" fg:x="281" fg:w="1"/><text x="22.6583%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.4083%" y="389" width="0.0797%" height="15" fill="rgb(222,86,2)" fg:x="281" fg:w="1"/><text x="22.6583%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="22.4880%" y="357" width="0.0797%" height="15" fill="rgb(243,58,54)" fg:x="282" fg:w="1"/><text x="22.7380%" y="367.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.48%)</title><rect x="22.1691%" y="437" width="0.4785%" height="15" fill="rgb(210,200,39)" fg:x="278" fg:w="6"/><text x="22.4191%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.4083%" y="421" width="0.2392%" height="15" fill="rgb(238,135,9)" fg:x="281" fg:w="3"/><text x="22.6583%" y="431.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="22.4880%" y="405" width="0.1595%" height="15" fill="rgb(232,179,7)" fg:x="282" fg:w="2"/><text x="22.7380%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.4880%" y="389" width="0.1595%" height="15" fill="rgb(245,65,41)" fg:x="282" fg:w="2"/><text x="22.7380%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="22.4880%" y="373" width="0.1595%" height="15" fill="rgb(227,43,8)" fg:x="282" fg:w="2"/><text x="22.7380%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5678%" y="357" width="0.0797%" height="15" fill="rgb(235,91,14)" fg:x="283" fg:w="1"/><text x="22.8178%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5678%" y="341" width="0.0797%" height="15" fill="rgb(235,219,31)" fg:x="283" fg:w="1"/><text x="22.8178%" y="351.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.6475%" y="389" width="0.1595%" height="15" fill="rgb(227,121,25)" fg:x="284" fg:w="2"/><text x="22.8975%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.6475%" y="373" width="0.1595%" height="15" fill="rgb(254,129,24)" fg:x="284" fg:w="2"/><text x="22.8975%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7273%" y="357" width="0.0797%" height="15" fill="rgb(226,144,49)" fg:x="285" fg:w="1"/><text x="22.9773%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7273%" y="341" width="0.0797%" height="15" fill="rgb(214,187,32)" fg:x="285" fg:w="1"/><text x="22.9773%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7273%" y="325" width="0.0797%" height="15" fill="rgb(243,129,46)" fg:x="285" fg:w="1"/><text x="22.9773%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7273%" y="309" width="0.0797%" height="15" fill="rgb(221,185,35)" fg:x="285" fg:w="1"/><text x="22.9773%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.7273%" y="293" width="0.0797%" height="15" fill="rgb(205,0,32)" fg:x="285" fg:w="1"/><text x="22.9773%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7273%" y="277" width="0.0797%" height="15" fill="rgb(229,179,12)" fg:x="285" fg:w="1"/><text x="22.9773%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7273%" y="261" width="0.0797%" height="15" fill="rgb(252,107,19)" fg:x="285" fg:w="1"/><text x="22.9773%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7273%" y="245" width="0.0797%" height="15" fill="rgb(220,95,27)" fg:x="285" fg:w="1"/><text x="22.9773%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.8070%" y="357" width="0.0797%" height="15" fill="rgb(240,113,40)" fg:x="286" fg:w="1"/><text x="23.0570%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.8070%" y="341" width="0.0797%" height="15" fill="rgb(208,4,43)" fg:x="286" fg:w="1"/><text x="23.0570%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.8070%" y="325" width="0.0797%" height="15" fill="rgb(247,189,30)" fg:x="286" fg:w="1"/><text x="23.0570%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.8070%" y="309" width="0.0797%" height="15" fill="rgb(231,157,17)" fg:x="286" fg:w="1"/><text x="23.0570%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.8070%" y="293" width="0.0797%" height="15" fill="rgb(224,139,6)" fg:x="286" fg:w="1"/><text x="23.0570%" y="303.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="22.6475%" y="421" width="0.3190%" height="15" fill="rgb(223,83,16)" fg:x="284" fg:w="4"/><text x="22.8975%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="22.6475%" y="405" width="0.3190%" height="15" fill="rgb(232,211,20)" fg:x="284" fg:w="4"/><text x="22.8975%" y="415.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="22.8070%" y="389" width="0.1595%" height="15" fill="rgb(225,203,35)" fg:x="286" fg:w="2"/><text x="23.0570%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.8070%" y="373" width="0.1595%" height="15" fill="rgb(215,211,44)" fg:x="286" fg:w="2"/><text x="23.0570%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8868%" y="357" width="0.0797%" height="15" fill="rgb(248,213,26)" fg:x="287" fg:w="1"/><text x="23.1368%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.8868%" y="341" width="0.0797%" height="15" fill="rgb(214,23,52)" fg:x="287" fg:w="1"/><text x="23.1368%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8868%" y="325" width="0.0797%" height="15" fill="rgb(225,173,50)" fg:x="287" fg:w="1"/><text x="23.1368%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.8868%" y="309" width="0.0797%" height="15" fill="rgb(206,150,22)" fg:x="287" fg:w="1"/><text x="23.1368%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.8868%" y="293" width="0.0797%" height="15" fill="rgb(239,64,23)" fg:x="287" fg:w="1"/><text x="23.1368%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8868%" y="277" width="0.0797%" height="15" fill="rgb(242,50,38)" fg:x="287" fg:w="1"/><text x="23.1368%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.8868%" y="261" width="0.0797%" height="15" fill="rgb(217,91,15)" fg:x="287" fg:w="1"/><text x="23.1368%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8868%" y="245" width="0.0797%" height="15" fill="rgb(230,172,6)" fg:x="287" fg:w="1"/><text x="23.1368%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8868%" y="229" width="0.0797%" height="15" fill="rgb(221,98,26)" fg:x="287" fg:w="1"/><text x="23.1368%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="21.9298%" y="453" width="1.1164%" height="15" fill="rgb(227,210,45)" fg:x="275" fg:w="14"/><text x="22.1798%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="22.6475%" y="437" width="0.3987%" height="15" fill="rgb(206,8,30)" fg:x="284" fg:w="5"/><text x="22.8975%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="22.9665%" y="421" width="0.0797%" height="15" fill="rgb(241,219,17)" fg:x="288" fg:w="1"/><text x="23.2165%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9665%" y="405" width="0.0797%" height="15" fill="rgb(247,121,29)" fg:x="288" fg:w="1"/><text x="23.2165%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.0463%" y="437" width="0.0797%" height="15" fill="rgb(219,169,49)" fg:x="289" fg:w="1"/><text x="23.2963%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="23.0463%" y="453" width="0.1595%" height="15" fill="rgb(253,49,49)" fg:x="289" fg:w="2"/><text x="23.2963%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="23.1260%" y="437" width="0.0797%" height="15" fill="rgb(217,178,3)" fg:x="290" fg:w="1"/><text x="23.3760%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1260%" y="421" width="0.0797%" height="15" fill="rgb(234,73,37)" fg:x="290" fg:w="1"/><text x="23.3760%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2057%" y="341" width="0.0797%" height="15" fill="rgb(250,98,22)" fg:x="291" fg:w="1"/><text x="23.4557%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2057%" y="325" width="0.0797%" height="15" fill="rgb(220,108,37)" fg:x="291" fg:w="1"/><text x="23.4557%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2057%" y="309" width="0.0797%" height="15" fill="rgb(225,168,10)" fg:x="291" fg:w="1"/><text x="23.4557%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2057%" y="293" width="0.0797%" height="15" fill="rgb(247,215,21)" fg:x="291" fg:w="1"/><text x="23.4557%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2057%" y="277" width="0.0797%" height="15" fill="rgb(253,189,31)" fg:x="291" fg:w="1"/><text x="23.4557%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.2057%" y="261" width="0.0797%" height="15" fill="rgb(241,54,22)" fg:x="291" fg:w="1"/><text x="23.4557%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.2057%" y="245" width="0.0797%" height="15" fill="rgb(211,87,4)" fg:x="291" fg:w="1"/><text x="23.4557%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.2057%" y="229" width="0.0797%" height="15" fill="rgb(245,112,24)" fg:x="291" fg:w="1"/><text x="23.4557%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="23.2057%" y="213" width="0.0797%" height="15" fill="rgb(235,190,41)" fg:x="291" fg:w="1"/><text x="23.4557%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.2057%" y="197" width="0.0797%" height="15" fill="rgb(214,89,8)" fg:x="291" fg:w="1"/><text x="23.4557%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.2057%" y="357" width="0.1595%" height="15" fill="rgb(249,155,35)" fg:x="291" fg:w="2"/><text x="23.4557%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2855%" y="341" width="0.0797%" height="15" fill="rgb(249,88,26)" fg:x="292" fg:w="1"/><text x="23.5355%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="23.2057%" y="405" width="0.3987%" height="15" fill="rgb(232,56,8)" fg:x="291" fg:w="5"/><text x="23.4557%" y="415.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="23.2057%" y="389" width="0.3987%" height="15" fill="rgb(240,95,3)" fg:x="291" fg:w="5"/><text x="23.4557%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="23.2057%" y="373" width="0.3987%" height="15" fill="rgb(222,44,28)" fg:x="291" fg:w="5"/><text x="23.4557%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.3652%" y="357" width="0.2392%" height="15" fill="rgb(234,16,30)" fg:x="293" fg:w="3"/><text x="23.6152%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.3652%" y="341" width="0.2392%" height="15" fill="rgb(223,26,17)" fg:x="293" fg:w="3"/><text x="23.6152%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.4450%" y="325" width="0.1595%" height="15" fill="rgb(239,187,47)" fg:x="294" fg:w="2"/><text x="23.6950%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.4450%" y="309" width="0.1595%" height="15" fill="rgb(247,102,50)" fg:x="294" fg:w="2"/><text x="23.6950%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.4450%" y="293" width="0.1595%" height="15" fill="rgb(231,216,22)" fg:x="294" fg:w="2"/><text x="23.6950%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.4450%" y="277" width="0.1595%" height="15" fill="rgb(216,201,26)" fg:x="294" fg:w="2"/><text x="23.6950%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5247%" y="261" width="0.0797%" height="15" fill="rgb(214,186,23)" fg:x="295" fg:w="1"/><text x="23.7747%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5247%" y="245" width="0.0797%" height="15" fill="rgb(235,184,4)" fg:x="295" fg:w="1"/><text x="23.7747%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.5247%" y="229" width="0.0797%" height="15" fill="rgb(244,46,17)" fg:x="295" fg:w="1"/><text x="23.7747%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.5247%" y="213" width="0.0797%" height="15" fill="rgb(248,74,46)" fg:x="295" fg:w="1"/><text x="23.7747%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="23.5247%" y="197" width="0.0797%" height="15" fill="rgb(243,79,5)" fg:x="295" fg:w="1"/><text x="23.7747%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6045%" y="357" width="0.1595%" height="15" fill="rgb(213,148,1)" fg:x="296" fg:w="2"/><text x="23.8545%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6045%" y="341" width="0.1595%" height="15" fill="rgb(221,30,0)" fg:x="296" fg:w="2"/><text x="23.8545%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6045%" y="325" width="0.1595%" height="15" fill="rgb(207,85,29)" fg:x="296" fg:w="2"/><text x="23.8545%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6045%" y="309" width="0.1595%" height="15" fill="rgb(239,31,46)" fg:x="296" fg:w="2"/><text x="23.8545%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6842%" y="293" width="0.0797%" height="15" fill="rgb(219,6,1)" fg:x="297" fg:w="1"/><text x="23.9342%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7640%" y="357" width="0.0797%" height="15" fill="rgb(229,90,29)" fg:x="298" fg:w="1"/><text x="24.0140%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.7640%" y="341" width="0.0797%" height="15" fill="rgb(242,201,42)" fg:x="298" fg:w="1"/><text x="24.0140%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7640%" y="325" width="0.0797%" height="15" fill="rgb(243,80,54)" fg:x="298" fg:w="1"/><text x="24.0140%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7640%" y="309" width="0.0797%" height="15" fill="rgb(223,166,15)" fg:x="298" fg:w="1"/><text x="24.0140%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7640%" y="293" width="0.0797%" height="15" fill="rgb(238,78,27)" fg:x="298" fg:w="1"/><text x="24.0140%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7640%" y="277" width="0.0797%" height="15" fill="rgb(235,28,43)" fg:x="298" fg:w="1"/><text x="24.0140%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.7640%" y="261" width="0.0797%" height="15" fill="rgb(240,210,28)" fg:x="298" fg:w="1"/><text x="24.0140%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7640%" y="245" width="0.0797%" height="15" fill="rgb(253,6,46)" fg:x="298" fg:w="1"/><text x="24.0140%" y="255.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="23.2057%" y="437" width="0.7974%" height="15" fill="rgb(250,159,47)" fg:x="291" fg:w="10"/><text x="23.4557%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.80%)</title><rect x="23.2057%" y="421" width="0.7974%" height="15" fill="rgb(216,139,2)" fg:x="291" fg:w="10"/><text x="23.4557%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="23.6045%" y="405" width="0.3987%" height="15" fill="rgb(221,124,44)" fg:x="296" fg:w="5"/><text x="23.8545%" y="415.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="23.6045%" y="389" width="0.3987%" height="15" fill="rgb(205,37,22)" fg:x="296" fg:w="5"/><text x="23.8545%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="23.6045%" y="373" width="0.3987%" height="15" fill="rgb(250,55,8)" fg:x="296" fg:w="5"/><text x="23.8545%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.8437%" y="357" width="0.1595%" height="15" fill="rgb(215,83,48)" fg:x="299" fg:w="2"/><text x="24.0937%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8437%" y="341" width="0.1595%" height="15" fill="rgb(253,2,32)" fg:x="299" fg:w="2"/><text x="24.0937%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.8437%" y="325" width="0.1595%" height="15" fill="rgb(236,67,28)" fg:x="299" fg:w="2"/><text x="24.0937%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8437%" y="309" width="0.1595%" height="15" fill="rgb(252,55,15)" fg:x="299" fg:w="2"/><text x="24.0937%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.8437%" y="293" width="0.1595%" height="15" fill="rgb(243,173,17)" fg:x="299" fg:w="2"/><text x="24.0937%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8437%" y="277" width="0.1595%" height="15" fill="rgb(215,212,13)" fg:x="299" fg:w="2"/><text x="24.0937%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.8437%" y="261" width="0.1595%" height="15" fill="rgb(253,176,6)" fg:x="299" fg:w="2"/><text x="24.0937%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.8437%" y="245" width="0.1595%" height="15" fill="rgb(236,105,26)" fg:x="299" fg:w="2"/><text x="24.0937%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.9234%" y="229" width="0.0797%" height="15" fill="rgb(239,226,32)" fg:x="300" fg:w="1"/><text x="24.1734%" y="239.50"></text></g><g><title>plugins_core::build::Build::leads_to (29 samples, 2.31%)</title><rect x="21.8501%" y="469" width="2.3126%" height="15" fill="rgb(236,104,51)" fg:x="274" fg:w="29"/><text x="22.1001%" y="479.50">p..</text></g><g><title>plugins_core::tools::leads_to (12 samples, 0.96%)</title><rect x="23.2057%" y="453" width="0.9569%" height="15" fill="rgb(220,172,33)" fg:x="291" fg:w="12"/><text x="23.4557%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.0032%" y="437" width="0.1595%" height="15" fill="rgb(224,182,25)" fg:x="301" fg:w="2"/><text x="24.2532%" y="447.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="24.0032%" y="421" width="0.1595%" height="15" fill="rgb(236,184,24)" fg:x="301" fg:w="2"/><text x="24.2532%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.0032%" y="405" width="0.1595%" height="15" fill="rgb(241,221,14)" fg:x="301" fg:w="2"/><text x="24.2532%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="24.0032%" y="389" width="0.1595%" height="15" fill="rgb(227,146,5)" fg:x="301" fg:w="2"/><text x="24.2532%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.0032%" y="373" width="0.1595%" height="15" fill="rgb(214,15,23)" fg:x="301" fg:w="2"/><text x="24.2532%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0829%" y="357" width="0.0797%" height="15" fill="rgb(233,157,31)" fg:x="302" fg:w="1"/><text x="24.3329%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0829%" y="341" width="0.0797%" height="15" fill="rgb(211,27,52)" fg:x="302" fg:w="1"/><text x="24.3329%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1627%" y="373" width="0.0797%" height="15" fill="rgb(212,223,15)" fg:x="303" fg:w="1"/><text x="24.4127%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="24.2424%" y="373" width="0.1595%" height="15" fill="rgb(254,211,0)" fg:x="304" fg:w="2"/><text x="24.4924%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.2424%" y="357" width="0.1595%" height="15" fill="rgb(205,43,38)" fg:x="304" fg:w="2"/><text x="24.4924%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3222%" y="341" width="0.0797%" height="15" fill="rgb(242,206,46)" fg:x="305" fg:w="1"/><text x="24.5722%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (44 samples, 3.51%)</title><rect x="20.9729%" y="517" width="3.5088%" height="15" fill="rgb(220,221,12)" fg:x="263" fg:w="44"/><text x="21.2229%" y="527.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 3.43%)</title><rect x="21.0526%" y="501" width="3.4290%" height="15" fill="rgb(217,156,35)" fg:x="264" fg:w="43"/><text x="21.3026%" y="511.50">&lt;al..</text></g><g><title>plugins_core::build::QuickThing::make (43 samples, 3.43%)</title><rect x="21.0526%" y="485" width="3.4290%" height="15" fill="rgb(207,181,49)" fg:x="264" fg:w="43"/><text x="21.3026%" y="495.50">plu..</text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="24.1627%" y="469" width="0.3190%" height="15" fill="rgb(235,103,47)" fg:x="303" fg:w="4"/><text x="24.4127%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="24.1627%" y="453" width="0.3190%" height="15" fill="rgb(222,63,28)" fg:x="303" fg:w="4"/><text x="24.4127%" y="463.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="24.1627%" y="437" width="0.3190%" height="15" fill="rgb(244,137,21)" fg:x="303" fg:w="4"/><text x="24.4127%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="24.1627%" y="421" width="0.3190%" height="15" fill="rgb(228,35,27)" fg:x="303" fg:w="4"/><text x="24.4127%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="24.1627%" y="405" width="0.3190%" height="15" fill="rgb(226,191,41)" fg:x="303" fg:w="4"/><text x="24.4127%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="24.1627%" y="389" width="0.3190%" height="15" fill="rgb(210,154,3)" fg:x="303" fg:w="4"/><text x="24.4127%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="24.4019%" y="373" width="0.0797%" height="15" fill="rgb(216,60,49)" fg:x="306" fg:w="1"/><text x="24.6519%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.4019%" y="357" width="0.0797%" height="15" fill="rgb(226,17,20)" fg:x="306" fg:w="1"/><text x="24.6519%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.4817%" y="517" width="0.0797%" height="15" fill="rgb(206,115,35)" fg:x="307" fg:w="1"/><text x="24.7317%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5614%" y="485" width="0.0797%" height="15" fill="rgb(227,88,1)" fg:x="308" fg:w="1"/><text x="24.8114%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5614%" y="469" width="0.0797%" height="15" fill="rgb(230,222,24)" fg:x="308" fg:w="1"/><text x="24.8114%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.5614%" y="453" width="0.0797%" height="15" fill="rgb(214,124,32)" fg:x="308" fg:w="1"/><text x="24.8114%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.5614%" y="437" width="0.0797%" height="15" fill="rgb(240,41,36)" fg:x="308" fg:w="1"/><text x="24.8114%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.5614%" y="421" width="0.0797%" height="15" fill="rgb(221,17,52)" fg:x="308" fg:w="1"/><text x="24.8114%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.5614%" y="405" width="0.0797%" height="15" fill="rgb(252,70,16)" fg:x="308" fg:w="1"/><text x="24.8114%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.5614%" y="389" width="0.0797%" height="15" fill="rgb(250,177,4)" fg:x="308" fg:w="1"/><text x="24.8114%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.6411%" y="485" width="0.0797%" height="15" fill="rgb(240,188,47)" fg:x="309" fg:w="1"/><text x="24.8911%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="24.5614%" y="501" width="0.2392%" height="15" fill="rgb(215,92,12)" fg:x="308" fg:w="3"/><text x="24.8114%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7209%" y="485" width="0.0797%" height="15" fill="rgb(242,110,29)" fg:x="310" fg:w="1"/><text x="24.9709%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7209%" y="469" width="0.0797%" height="15" fill="rgb(208,211,26)" fg:x="310" fg:w="1"/><text x="24.9709%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.7209%" y="453" width="0.0797%" height="15" fill="rgb(244,147,6)" fg:x="310" fg:w="1"/><text x="24.9709%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7209%" y="437" width="0.0797%" height="15" fill="rgb(211,130,42)" fg:x="310" fg:w="1"/><text x="24.9709%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="24.8006%" y="453" width="0.0797%" height="15" fill="rgb(220,63,1)" fg:x="311" fg:w="1"/><text x="25.0506%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.8006%" y="437" width="0.0797%" height="15" fill="rgb(241,212,30)" fg:x="311" fg:w="1"/><text x="25.0506%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.8006%" y="421" width="0.0797%" height="15" fill="rgb(233,153,17)" fg:x="311" fg:w="1"/><text x="25.0506%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.8006%" y="405" width="0.0797%" height="15" fill="rgb(236,3,10)" fg:x="311" fg:w="1"/><text x="25.0506%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="24.8804%" y="453" width="0.1595%" height="15" fill="rgb(232,41,21)" fg:x="312" fg:w="2"/><text x="25.1304%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="24.8804%" y="437" width="0.1595%" height="15" fill="rgb(206,63,51)" fg:x="312" fg:w="2"/><text x="25.1304%" y="447.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="24.9601%" y="421" width="0.0797%" height="15" fill="rgb(250,214,3)" fg:x="313" fg:w="1"/><text x="25.2101%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="25.1196%" y="389" width="0.4785%" height="15" fill="rgb(254,89,27)" fg:x="315" fg:w="6"/><text x="25.3696%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="25.3589%" y="373" width="0.2392%" height="15" fill="rgb(249,41,14)" fg:x="318" fg:w="3"/><text x="25.6089%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="25.4386%" y="357" width="0.1595%" height="15" fill="rgb(221,196,51)" fg:x="319" fg:w="2"/><text x="25.6886%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.4386%" y="341" width="0.1595%" height="15" fill="rgb(214,116,26)" fg:x="319" fg:w="2"/><text x="25.6886%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.5183%" y="325" width="0.0797%" height="15" fill="rgb(236,67,7)" fg:x="320" fg:w="1"/><text x="25.7683%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.5183%" y="309" width="0.0797%" height="15" fill="rgb(253,179,32)" fg:x="320" fg:w="1"/><text x="25.7683%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.5183%" y="293" width="0.0797%" height="15" fill="rgb(218,33,15)" fg:x="320" fg:w="1"/><text x="25.7683%" y="303.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="25.1196%" y="405" width="0.5582%" height="15" fill="rgb(217,202,41)" fg:x="315" fg:w="7"/><text x="25.3696%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.5981%" y="389" width="0.0797%" height="15" fill="rgb(234,133,5)" fg:x="321" fg:w="1"/><text x="25.8481%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="25.9171%" y="389" width="0.1595%" height="15" fill="rgb(240,47,40)" fg:x="325" fg:w="2"/><text x="26.1671%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="25.9171%" y="373" width="0.1595%" height="15" fill="rgb(234,166,26)" fg:x="325" fg:w="2"/><text x="26.1671%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.9968%" y="357" width="0.0797%" height="15" fill="rgb(244,125,51)" fg:x="326" fg:w="1"/><text x="26.2468%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.9968%" y="341" width="0.0797%" height="15" fill="rgb(229,171,11)" fg:x="326" fg:w="1"/><text x="26.2468%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="26.0766%" y="389" width="0.3987%" height="15" fill="rgb(224,38,45)" fg:x="327" fg:w="5"/><text x="26.3266%" y="399.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="26.0766%" y="373" width="0.3987%" height="15" fill="rgb(237,27,7)" fg:x="327" fg:w="5"/><text x="26.3266%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.2360%" y="357" width="0.2392%" height="15" fill="rgb(216,52,7)" fg:x="329" fg:w="3"/><text x="26.4860%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.3158%" y="341" width="0.1595%" height="15" fill="rgb(243,11,11)" fg:x="330" fg:w="2"/><text x="26.5658%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.3955%" y="325" width="0.0797%" height="15" fill="rgb(253,167,20)" fg:x="331" fg:w="1"/><text x="26.6455%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.3955%" y="309" width="0.0797%" height="15" fill="rgb(215,207,5)" fg:x="331" fg:w="1"/><text x="26.6455%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.3955%" y="293" width="0.0797%" height="15" fill="rgb(252,127,31)" fg:x="331" fg:w="1"/><text x="26.6455%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="26.5550%" y="341" width="0.3190%" height="15" fill="rgb(209,106,27)" fg:x="333" fg:w="4"/><text x="26.8050%" y="351.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="26.5550%" y="325" width="0.3190%" height="15" fill="rgb(214,220,18)" fg:x="333" fg:w="4"/><text x="26.8050%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="26.6348%" y="309" width="0.2392%" height="15" fill="rgb(237,89,12)" fg:x="334" fg:w="3"/><text x="26.8848%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.7145%" y="293" width="0.1595%" height="15" fill="rgb(209,167,36)" fg:x="335" fg:w="2"/><text x="26.9645%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8740%" y="341" width="0.1595%" height="15" fill="rgb(243,45,22)" fg:x="337" fg:w="2"/><text x="27.1240%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="26.9537%" y="325" width="0.0797%" height="15" fill="rgb(239,2,46)" fg:x="338" fg:w="1"/><text x="27.2037%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.9537%" y="309" width="0.0797%" height="15" fill="rgb(241,101,0)" fg:x="338" fg:w="1"/><text x="27.2037%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="26.5550%" y="373" width="0.5582%" height="15" fill="rgb(244,34,31)" fg:x="333" fg:w="7"/><text x="26.8050%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="26.5550%" y="357" width="0.5582%" height="15" fill="rgb(248,23,22)" fg:x="333" fg:w="7"/><text x="26.8050%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.0335%" y="341" width="0.0797%" height="15" fill="rgb(218,27,48)" fg:x="339" fg:w="1"/><text x="27.2835%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.0335%" y="325" width="0.0797%" height="15" fill="rgb(232,78,1)" fg:x="339" fg:w="1"/><text x="27.2835%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.0335%" y="309" width="0.0797%" height="15" fill="rgb(233,169,12)" fg:x="339" fg:w="1"/><text x="27.2835%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="27.1132%" y="373" width="0.4785%" height="15" fill="rgb(225,222,54)" fg:x="340" fg:w="6"/><text x="27.3632%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="27.2727%" y="357" width="0.3190%" height="15" fill="rgb(245,126,29)" fg:x="342" fg:w="4"/><text x="27.5227%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.6715%" y="357" width="0.0797%" height="15" fill="rgb(241,63,48)" fg:x="347" fg:w="1"/><text x="27.9215%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="27.7512%" y="357" width="0.1595%" height="15" fill="rgb(235,126,38)" fg:x="348" fg:w="2"/><text x="28.0012%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.8309%" y="341" width="0.0797%" height="15" fill="rgb(232,96,49)" fg:x="349" fg:w="1"/><text x="28.0809%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.8309%" y="325" width="0.0797%" height="15" fill="rgb(211,146,40)" fg:x="349" fg:w="1"/><text x="28.0809%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="27.9107%" y="357" width="0.1595%" height="15" fill="rgb(247,93,44)" fg:x="350" fg:w="2"/><text x="28.1607%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.9904%" y="341" width="0.0797%" height="15" fill="rgb(251,41,49)" fg:x="351" fg:w="1"/><text x="28.2404%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.0702%" y="341" width="0.0797%" height="15" fill="rgb(218,155,12)" fg:x="352" fg:w="1"/><text x="28.3202%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="28.1499%" y="341" width="0.5582%" height="15" fill="rgb(221,161,30)" fg:x="353" fg:w="7"/><text x="28.3999%" y="351.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.3892%" y="325" width="0.3190%" height="15" fill="rgb(221,179,11)" fg:x="356" fg:w="4"/><text x="28.6392%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.5486%" y="309" width="0.1595%" height="15" fill="rgb(224,170,48)" fg:x="358" fg:w="2"/><text x="28.7986%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="28.7081%" y="325" width="0.2392%" height="15" fill="rgb(223,117,5)" fg:x="360" fg:w="3"/><text x="28.9581%" y="335.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.7879%" y="309" width="0.1595%" height="15" fill="rgb(209,52,20)" fg:x="361" fg:w="2"/><text x="29.0379%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.8676%" y="293" width="0.0797%" height="15" fill="rgb(209,19,41)" fg:x="362" fg:w="1"/><text x="29.1176%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8676%" y="277" width="0.0797%" height="15" fill="rgb(210,177,12)" fg:x="362" fg:w="1"/><text x="29.1176%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.8676%" y="261" width="0.0797%" height="15" fill="rgb(211,159,37)" fg:x="362" fg:w="1"/><text x="29.1176%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="28.9474%" y="309" width="0.1595%" height="15" fill="rgb(209,20,2)" fg:x="363" fg:w="2"/><text x="29.1974%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.9474%" y="293" width="0.1595%" height="15" fill="rgb(244,3,46)" fg:x="363" fg:w="2"/><text x="29.1974%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.9474%" y="277" width="0.1595%" height="15" fill="rgb(220,94,38)" fg:x="363" fg:w="2"/><text x="29.1974%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.0271%" y="261" width="0.0797%" height="15" fill="rgb(253,14,31)" fg:x="364" fg:w="1"/><text x="29.2771%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="28.7081%" y="341" width="0.4785%" height="15" fill="rgb(234,176,13)" fg:x="360" fg:w="6"/><text x="28.9581%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="28.9474%" y="325" width="0.2392%" height="15" fill="rgb(218,62,25)" fg:x="363" fg:w="3"/><text x="29.1974%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.1069%" y="309" width="0.0797%" height="15" fill="rgb(216,124,40)" fg:x="365" fg:w="1"/><text x="29.3569%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.1069%" y="293" width="0.0797%" height="15" fill="rgb(228,170,12)" fg:x="365" fg:w="1"/><text x="29.3569%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1069%" y="277" width="0.0797%" height="15" fill="rgb(231,226,5)" fg:x="365" fg:w="1"/><text x="29.3569%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.1069%" y="261" width="0.0797%" height="15" fill="rgb(237,122,22)" fg:x="365" fg:w="1"/><text x="29.3569%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.1069%" y="245" width="0.0797%" height="15" fill="rgb(209,185,25)" fg:x="365" fg:w="1"/><text x="29.3569%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.1069%" y="229" width="0.0797%" height="15" fill="rgb(228,200,32)" fg:x="365" fg:w="1"/><text x="29.3569%" y="239.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="28.0702%" y="357" width="1.1962%" height="15" fill="rgb(217,140,10)" fg:x="352" fg:w="15"/><text x="28.3202%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.1866%" y="341" width="0.0797%" height="15" fill="rgb(253,17,24)" fg:x="366" fg:w="1"/><text x="29.4366%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.1866%" y="325" width="0.0797%" height="15" fill="rgb(212,61,6)" fg:x="366" fg:w="1"/><text x="29.4366%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.1866%" y="309" width="0.0797%" height="15" fill="rgb(205,14,25)" fg:x="366" fg:w="1"/><text x="29.4366%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.99%)</title><rect x="27.5917%" y="373" width="1.9936%" height="15" fill="rgb(232,69,41)" fg:x="346" fg:w="25"/><text x="27.8417%" y="383.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="29.2663%" y="357" width="0.3190%" height="15" fill="rgb(241,106,47)" fg:x="367" fg:w="4"/><text x="29.5163%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.4258%" y="341" width="0.1595%" height="15" fill="rgb(210,213,53)" fg:x="369" fg:w="2"/><text x="29.6758%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.4258%" y="325" width="0.1595%" height="15" fill="rgb(253,175,27)" fg:x="369" fg:w="2"/><text x="29.6758%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (40 samples, 3.19%)</title><rect x="26.4753%" y="389" width="3.1898%" height="15" fill="rgb(211,171,24)" fg:x="332" fg:w="40"/><text x="26.7253%" y="399.50">ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.5853%" y="373" width="0.0797%" height="15" fill="rgb(229,80,7)" fg:x="371" fg:w="1"/><text x="29.8353%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.5853%" y="357" width="0.0797%" height="15" fill="rgb(212,46,39)" fg:x="371" fg:w="1"/><text x="29.8353%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.5853%" y="341" width="0.0797%" height="15" fill="rgb(240,80,45)" fg:x="371" fg:w="1"/><text x="29.8353%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (55 samples, 4.39%)</title><rect x="25.6778%" y="405" width="4.3860%" height="15" fill="rgb(253,177,40)" fg:x="322" fg:w="55"/><text x="25.9278%" y="415.50">serde..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="29.6651%" y="389" width="0.3987%" height="15" fill="rgb(249,200,15)" fg:x="372" fg:w="5"/><text x="29.9151%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.8246%" y="373" width="0.2392%" height="15" fill="rgb(217,78,26)" fg:x="374" fg:w="3"/><text x="30.0746%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="29.8246%" y="357" width="0.2392%" height="15" fill="rgb(254,151,32)" fg:x="374" fg:w="3"/><text x="30.0746%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="29.9043%" y="341" width="0.1595%" height="15" fill="rgb(226,165,27)" fg:x="375" fg:w="2"/><text x="30.1543%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="29.9043%" y="325" width="0.1595%" height="15" fill="rgb(250,206,4)" fg:x="375" fg:w="2"/><text x="30.1543%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="29.9043%" y="309" width="0.1595%" height="15" fill="rgb(231,229,27)" fg:x="375" fg:w="2"/><text x="30.1543%" y="319.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (64 samples, 5.10%)</title><rect x="25.0399%" y="421" width="5.1037%" height="15" fill="rgb(239,217,8)" fg:x="314" fg:w="64"/><text x="25.2899%" y="431.50">&lt;serde..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.0638%" y="405" width="0.0797%" height="15" fill="rgb(225,204,27)" fg:x="377" fg:w="1"/><text x="30.3138%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.0638%" y="389" width="0.0797%" height="15" fill="rgb(230,56,32)" fg:x="377" fg:w="1"/><text x="30.3138%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.0638%" y="373" width="0.0797%" height="15" fill="rgb(222,56,27)" fg:x="377" fg:w="1"/><text x="30.3138%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.0638%" y="357" width="0.0797%" height="15" fill="rgb(253,108,27)" fg:x="377" fg:w="1"/><text x="30.3138%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.0638%" y="341" width="0.0797%" height="15" fill="rgb(212,87,36)" fg:x="377" fg:w="1"/><text x="30.3138%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.0638%" y="325" width="0.0797%" height="15" fill="rgb(247,82,36)" fg:x="377" fg:w="1"/><text x="30.3138%" y="335.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="30.1435%" y="389" width="0.2392%" height="15" fill="rgb(222,143,9)" fg:x="378" fg:w="3"/><text x="30.3935%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.3828%" y="389" width="0.0797%" height="15" fill="rgb(238,162,48)" fg:x="381" fg:w="1"/><text x="30.6328%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.5423%" y="373" width="0.1595%" height="15" fill="rgb(221,59,43)" fg:x="383" fg:w="2"/><text x="30.7923%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.7018%" y="373" width="0.0797%" height="15" fill="rgb(205,166,41)" fg:x="385" fg:w="1"/><text x="30.9518%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9410%" y="357" width="0.0797%" height="15" fill="rgb(241,186,40)" fg:x="388" fg:w="1"/><text x="31.1910%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1005%" y="341" width="0.0797%" height="15" fill="rgb(216,119,35)" fg:x="390" fg:w="1"/><text x="31.3505%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.1802%" y="341" width="0.0797%" height="15" fill="rgb(208,68,38)" fg:x="391" fg:w="1"/><text x="31.4302%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1802%" y="325" width="0.0797%" height="15" fill="rgb(217,113,1)" fg:x="391" fg:w="1"/><text x="31.4302%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="31.2600%" y="341" width="0.1595%" height="15" fill="rgb(242,153,3)" fg:x="392" fg:w="2"/><text x="31.5100%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="31.2600%" y="325" width="0.1595%" height="15" fill="rgb(229,76,35)" fg:x="392" fg:w="2"/><text x="31.5100%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.3397%" y="309" width="0.0797%" height="15" fill="rgb(229,125,34)" fg:x="393" fg:w="1"/><text x="31.5897%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4992%" y="325" width="0.0797%" height="15" fill="rgb(238,179,36)" fg:x="395" fg:w="1"/><text x="31.7492%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.5789%" y="309" width="0.1595%" height="15" fill="rgb(244,183,19)" fg:x="396" fg:w="2"/><text x="31.8289%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.67%)</title><rect x="30.1435%" y="421" width="1.6746%" height="15" fill="rgb(216,85,49)" fg:x="378" fg:w="21"/><text x="30.3935%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (21 samples, 1.67%)</title><rect x="30.1435%" y="405" width="1.6746%" height="15" fill="rgb(208,161,47)" fg:x="378" fg:w="21"/><text x="30.3935%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="30.4625%" y="389" width="1.3557%" height="15" fill="rgb(233,210,18)" fg:x="382" fg:w="17"/><text x="30.7125%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="30.7815%" y="373" width="1.0367%" height="15" fill="rgb(205,104,42)" fg:x="386" fg:w="13"/><text x="31.0315%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="31.0207%" y="357" width="0.7974%" height="15" fill="rgb(248,90,43)" fg:x="389" fg:w="10"/><text x="31.2707%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="31.4195%" y="341" width="0.3987%" height="15" fill="rgb(206,198,11)" fg:x="394" fg:w="5"/><text x="31.6695%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="31.5789%" y="325" width="0.2392%" height="15" fill="rgb(239,165,27)" fg:x="396" fg:w="3"/><text x="31.8289%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7384%" y="309" width="0.0797%" height="15" fill="rgb(246,44,32)" fg:x="398" fg:w="1"/><text x="31.9884%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.7384%" y="293" width="0.0797%" height="15" fill="rgb(252,65,42)" fg:x="398" fg:w="1"/><text x="31.9884%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.7384%" y="277" width="0.0797%" height="15" fill="rgb(246,197,18)" fg:x="398" fg:w="1"/><text x="31.9884%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.9777%" y="389" width="0.0797%" height="15" fill="rgb(216,192,4)" fg:x="401" fg:w="1"/><text x="32.2277%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="32.0574%" y="373" width="0.0797%" height="15" fill="rgb(208,117,10)" fg:x="402" fg:w="1"/><text x="32.3074%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.0574%" y="357" width="0.0797%" height="15" fill="rgb(240,61,47)" fg:x="402" fg:w="1"/><text x="32.3074%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0574%" y="341" width="0.0797%" height="15" fill="rgb(228,178,21)" fg:x="402" fg:w="1"/><text x="32.3074%" y="351.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="32.1372%" y="373" width="0.0797%" height="15" fill="rgb(219,96,54)" fg:x="403" fg:w="1"/><text x="32.3872%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (5 samples, 0.40%)</title><rect x="31.8979%" y="405" width="0.3987%" height="15" fill="rgb(250,177,24)" fg:x="400" fg:w="5"/><text x="32.1479%" y="415.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="32.0574%" y="389" width="0.2392%" height="15" fill="rgb(242,154,46)" fg:x="402" fg:w="3"/><text x="32.3074%" y="399.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="32.2169%" y="373" width="0.0797%" height="15" fill="rgb(226,176,29)" fg:x="404" fg:w="1"/><text x="32.4669%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="32.2967%" y="405" width="0.0797%" height="15" fill="rgb(226,29,2)" fg:x="405" fg:w="1"/><text x="32.5467%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.2967%" y="389" width="0.0797%" height="15" fill="rgb(237,104,14)" fg:x="405" fg:w="1"/><text x="32.5467%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4561%" y="373" width="0.0797%" height="15" fill="rgb(245,207,31)" fg:x="407" fg:w="1"/><text x="32.7061%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="32.5359%" y="373" width="0.0797%" height="15" fill="rgb(229,211,45)" fg:x="408" fg:w="1"/><text x="32.7859%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="32.5359%" y="357" width="0.0797%" height="15" fill="rgb(229,113,15)" fg:x="408" fg:w="1"/><text x="32.7859%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="32.6156%" y="373" width="0.3190%" height="15" fill="rgb(237,147,15)" fg:x="409" fg:w="4"/><text x="32.8656%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.8549%" y="357" width="0.0797%" height="15" fill="rgb(244,120,12)" fg:x="412" fg:w="1"/><text x="33.1049%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="32.8549%" y="341" width="0.0797%" height="15" fill="rgb(205,120,12)" fg:x="412" fg:w="1"/><text x="33.1049%" y="351.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.9346%" y="373" width="0.0797%" height="15" fill="rgb(231,26,45)" fg:x="413" fg:w="1"/><text x="33.1846%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.9346%" y="357" width="0.0797%" height="15" fill="rgb(246,98,1)" fg:x="413" fg:w="1"/><text x="33.1846%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.0144%" y="341" width="0.1595%" height="15" fill="rgb(207,68,45)" fg:x="414" fg:w="2"/><text x="33.2644%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1738%" y="309" width="0.0797%" height="15" fill="rgb(231,27,38)" fg:x="416" fg:w="1"/><text x="33.4238%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="33.0144%" y="373" width="0.3190%" height="15" fill="rgb(214,223,3)" fg:x="414" fg:w="4"/><text x="33.2644%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="33.0144%" y="357" width="0.3190%" height="15" fill="rgb(228,195,46)" fg:x="414" fg:w="4"/><text x="33.2644%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.1738%" y="341" width="0.1595%" height="15" fill="rgb(231,100,42)" fg:x="416" fg:w="2"/><text x="33.4238%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.1738%" y="325" width="0.1595%" height="15" fill="rgb(236,53,4)" fg:x="416" fg:w="2"/><text x="33.4238%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.2536%" y="309" width="0.0797%" height="15" fill="rgb(230,152,12)" fg:x="417" fg:w="1"/><text x="33.5036%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.5726%" y="325" width="0.1595%" height="15" fill="rgb(226,101,19)" fg:x="421" fg:w="2"/><text x="33.8226%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.5726%" y="309" width="0.1595%" height="15" fill="rgb(250,149,32)" fg:x="421" fg:w="2"/><text x="33.8226%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.5726%" y="293" width="0.1595%" height="15" fill="rgb(232,178,12)" fg:x="421" fg:w="2"/><text x="33.8226%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="33.7321%" y="309" width="0.0797%" height="15" fill="rgb(246,151,17)" fg:x="423" fg:w="1"/><text x="33.9821%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7321%" y="293" width="0.0797%" height="15" fill="rgb(252,17,51)" fg:x="423" fg:w="1"/><text x="33.9821%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="33.7321%" y="325" width="0.3987%" height="15" fill="rgb(250,207,23)" fg:x="423" fg:w="5"/><text x="33.9821%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="33.8118%" y="309" width="0.3190%" height="15" fill="rgb(205,27,5)" fg:x="424" fg:w="4"/><text x="34.0618%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="33.8915%" y="293" width="0.2392%" height="15" fill="rgb(224,32,19)" fg:x="425" fg:w="3"/><text x="34.1415%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="33.8915%" y="277" width="0.2392%" height="15" fill="rgb(247,214,40)" fg:x="425" fg:w="3"/><text x="34.1415%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0510%" y="261" width="0.0797%" height="15" fill="rgb(239,199,17)" fg:x="427" fg:w="1"/><text x="34.3010%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="34.2105%" y="309" width="0.1595%" height="15" fill="rgb(251,159,9)" fg:x="429" fg:w="2"/><text x="34.4605%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.72%)</title><rect x="34.3700%" y="293" width="0.7177%" height="15" fill="rgb(225,78,32)" fg:x="431" fg:w="9"/><text x="34.6200%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="34.5295%" y="277" width="0.5582%" height="15" fill="rgb(206,97,47)" fg:x="433" fg:w="7"/><text x="34.7795%" y="287.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="34.5295%" y="261" width="0.5582%" height="15" fill="rgb(227,107,4)" fg:x="433" fg:w="7"/><text x="34.7795%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2472%" y="229" width="0.0797%" height="15" fill="rgb(241,146,50)" fg:x="442" fg:w="1"/><text x="35.4972%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2472%" y="213" width="0.0797%" height="15" fill="rgb(232,92,30)" fg:x="442" fg:w="1"/><text x="35.4972%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2472%" y="197" width="0.0797%" height="15" fill="rgb(222,0,40)" fg:x="442" fg:w="1"/><text x="35.4972%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.4067%" y="197" width="0.2392%" height="15" fill="rgb(219,54,33)" fg:x="444" fg:w="3"/><text x="35.6567%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.4067%" y="181" width="0.2392%" height="15" fill="rgb(226,209,28)" fg:x="444" fg:w="3"/><text x="35.6567%" y="191.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="35.4067%" y="165" width="0.2392%" height="15" fill="rgb(254,205,35)" fg:x="444" fg:w="3"/><text x="35.6567%" y="175.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="35.4067%" y="213" width="0.3190%" height="15" fill="rgb(230,159,3)" fg:x="444" fg:w="4"/><text x="35.6567%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.6459%" y="197" width="0.0797%" height="15" fill="rgb(232,190,24)" fg:x="447" fg:w="1"/><text x="35.8959%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="35.6459%" y="181" width="0.0797%" height="15" fill="rgb(217,227,44)" fg:x="447" fg:w="1"/><text x="35.8959%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="35.1675%" y="277" width="0.6380%" height="15" fill="rgb(236,211,1)" fg:x="441" fg:w="8"/><text x="35.4175%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="35.2472%" y="261" width="0.5582%" height="15" fill="rgb(250,127,46)" fg:x="442" fg:w="7"/><text x="35.4972%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="35.2472%" y="245" width="0.5582%" height="15" fill="rgb(229,213,6)" fg:x="442" fg:w="7"/><text x="35.4972%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="35.3270%" y="229" width="0.4785%" height="15" fill="rgb(237,15,36)" fg:x="443" fg:w="6"/><text x="35.5770%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7257%" y="213" width="0.0797%" height="15" fill="rgb(213,131,41)" fg:x="448" fg:w="1"/><text x="35.9757%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.39%)</title><rect x="33.4928%" y="357" width="2.3923%" height="15" fill="rgb(225,82,44)" fg:x="420" fg:w="30"/><text x="33.7428%" y="367.50">&lt;s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (30 samples, 2.39%)</title><rect x="33.4928%" y="341" width="2.3923%" height="15" fill="rgb(249,42,11)" fg:x="420" fg:w="30"/><text x="33.7428%" y="351.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 1.75%)</title><rect x="34.1308%" y="325" width="1.7544%" height="15" fill="rgb(253,11,29)" fg:x="428" fg:w="22"/><text x="34.3808%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.52%)</title><rect x="34.3700%" y="309" width="1.5152%" height="15" fill="rgb(206,8,54)" fg:x="431" fg:w="19"/><text x="34.6200%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="35.0877%" y="293" width="0.7974%" height="15" fill="rgb(222,186,2)" fg:x="440" fg:w="10"/><text x="35.3377%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.8054%" y="277" width="0.0797%" height="15" fill="rgb(221,206,53)" fg:x="449" fg:w="1"/><text x="36.0554%" y="287.50"></text></g><g><title>engine::session::Session::flush (143 samples, 11.40%)</title><rect x="24.5614%" y="517" width="11.4035%" height="15" fill="rgb(230,150,21)" fg:x="308" fg:w="143"/><text x="24.8114%" y="527.50">engine::session::..</text></g><g><title>engine::session::Session::save_changes (140 samples, 11.16%)</title><rect x="24.8006%" y="501" width="11.1643%" height="15" fill="rgb(253,202,10)" fg:x="311" fg:w="140"/><text x="25.0506%" y="511.50">engine::session:..</text></g><g><title>engine::session::state::State::close (140 samples, 11.16%)</title><rect x="24.8006%" y="485" width="11.1643%" height="15" fill="rgb(238,109,40)" fg:x="311" fg:w="140"/><text x="25.0506%" y="495.50">engine::session:..</text></g><g><title>engine::session::state::State::flush_entities (140 samples, 11.16%)</title><rect x="24.8006%" y="469" width="11.1643%" height="15" fill="rgb(247,120,22)" fg:x="311" fg:w="140"/><text x="25.0506%" y="479.50">engine::session:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (137 samples, 10.93%)</title><rect x="25.0399%" y="453" width="10.9250%" height="15" fill="rgb(207,43,30)" fg:x="314" fg:w="137"/><text x="25.2899%" y="463.50">engine::session:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (137 samples, 10.93%)</title><rect x="25.0399%" y="437" width="10.9250%" height="15" fill="rgb(213,211,24)" fg:x="314" fg:w="137"/><text x="25.2899%" y="447.50">engine::session:..</text></g><g><title>kernel::model::any_entity_changes (52 samples, 4.15%)</title><rect x="31.8182%" y="421" width="4.1467%" height="15" fill="rgb(239,73,39)" fg:x="399" fg:w="52"/><text x="32.0682%" y="431.50">kerne..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (45 samples, 3.59%)</title><rect x="32.3764%" y="405" width="3.5885%" height="15" fill="rgb(245,182,19)" fg:x="406" fg:w="45"/><text x="32.6264%" y="415.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (44 samples, 3.51%)</title><rect x="32.4561%" y="389" width="3.5088%" height="15" fill="rgb(247,143,26)" fg:x="407" fg:w="44"/><text x="32.7061%" y="399.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.63%)</title><rect x="33.3333%" y="373" width="2.6316%" height="15" fill="rgb(228,191,23)" fg:x="418" fg:w="33"/><text x="33.5833%" y="383.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8852%" y="357" width="0.0797%" height="15" fill="rgb(253,165,31)" fg:x="450" fg:w="1"/><text x="36.1352%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="35.9649%" y="485" width="0.0797%" height="15" fill="rgb(234,138,20)" fg:x="451" fg:w="1"/><text x="36.2149%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="35.9649%" y="469" width="0.0797%" height="15" fill="rgb(218,191,29)" fg:x="451" fg:w="1"/><text x="36.2149%" y="479.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="35.9649%" y="453" width="0.0797%" height="15" fill="rgb(221,157,19)" fg:x="451" fg:w="1"/><text x="36.2149%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9649%" y="437" width="0.0797%" height="15" fill="rgb(237,26,42)" fg:x="451" fg:w="1"/><text x="36.2149%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (2 samples, 0.16%)</title><rect x="35.9649%" y="501" width="0.1595%" height="15" fill="rgb(220,163,24)" fg:x="451" fg:w="2"/><text x="36.2149%" y="511.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="36.0447%" y="485" width="0.0797%" height="15" fill="rgb(242,115,20)" fg:x="452" fg:w="1"/><text x="36.2947%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="35.9649%" y="517" width="0.2392%" height="15" fill="rgb(210,206,9)" fg:x="451" fg:w="3"/><text x="36.2149%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="36.1244%" y="501" width="0.0797%" height="15" fill="rgb(208,71,17)" fg:x="453" fg:w="1"/><text x="36.3744%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.1244%" y="485" width="0.0797%" height="15" fill="rgb(233,7,5)" fg:x="453" fg:w="1"/><text x="36.3744%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.2041%" y="341" width="0.0797%" height="15" fill="rgb(207,92,33)" fg:x="454" fg:w="1"/><text x="36.4541%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.2041%" y="325" width="0.0797%" height="15" fill="rgb(218,87,9)" fg:x="454" fg:w="1"/><text x="36.4541%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="36.2041%" y="309" width="0.0797%" height="15" fill="rgb(219,47,37)" fg:x="454" fg:w="1"/><text x="36.4541%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="36.2041%" y="293" width="0.0797%" height="15" fill="rgb(221,152,34)" fg:x="454" fg:w="1"/><text x="36.4541%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="36.2041%" y="277" width="0.0797%" height="15" fill="rgb(235,176,21)" fg:x="454" fg:w="1"/><text x="36.4541%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="36.2041%" y="261" width="0.0797%" height="15" fill="rgb(232,212,21)" fg:x="454" fg:w="1"/><text x="36.4541%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.08%)</title><rect x="36.2041%" y="245" width="0.0797%" height="15" fill="rgb(245,82,39)" fg:x="454" fg:w="1"/><text x="36.4541%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="36.2041%" y="485" width="0.2392%" height="15" fill="rgb(241,52,51)" fg:x="454" fg:w="3"/><text x="36.4541%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="36.2041%" y="469" width="0.2392%" height="15" fill="rgb(219,91,24)" fg:x="454" fg:w="3"/><text x="36.4541%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="36.2041%" y="453" width="0.2392%" height="15" fill="rgb(241,142,12)" fg:x="454" fg:w="3"/><text x="36.4541%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="36.2041%" y="437" width="0.2392%" height="15" fill="rgb(230,27,9)" fg:x="454" fg:w="3"/><text x="36.4541%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="36.2041%" y="421" width="0.2392%" height="15" fill="rgb(249,181,32)" fg:x="454" fg:w="3"/><text x="36.4541%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="36.2041%" y="405" width="0.2392%" height="15" fill="rgb(230,107,3)" fg:x="454" fg:w="3"/><text x="36.4541%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="36.2041%" y="389" width="0.2392%" height="15" fill="rgb(246,204,14)" fg:x="454" fg:w="3"/><text x="36.4541%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="36.2041%" y="373" width="0.2392%" height="15" fill="rgb(213,192,47)" fg:x="454" fg:w="3"/><text x="36.4541%" y="383.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="36.2041%" y="357" width="0.2392%" height="15" fill="rgb(240,44,36)" fg:x="454" fg:w="3"/><text x="36.4541%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="36.2839%" y="341" width="0.1595%" height="15" fill="rgb(244,209,38)" fg:x="455" fg:w="2"/><text x="36.5339%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="36.2839%" y="325" width="0.1595%" height="15" fill="rgb(219,34,37)" fg:x="455" fg:w="2"/><text x="36.5339%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="36.2839%" y="309" width="0.1595%" height="15" fill="rgb(210,28,6)" fg:x="455" fg:w="2"/><text x="36.5339%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="36.2839%" y="293" width="0.1595%" height="15" fill="rgb(244,110,52)" fg:x="455" fg:w="2"/><text x="36.5339%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="36.2839%" y="277" width="0.1595%" height="15" fill="rgb(254,124,47)" fg:x="455" fg:w="2"/><text x="36.5339%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="36.2839%" y="261" width="0.1595%" height="15" fill="rgb(254,110,13)" fg:x="455" fg:w="2"/><text x="36.5339%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="36.2839%" y="245" width="0.1595%" height="15" fill="rgb(252,57,21)" fg:x="455" fg:w="2"/><text x="36.5339%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="36.2839%" y="229" width="0.1595%" height="15" fill="rgb(242,60,45)" fg:x="455" fg:w="2"/><text x="36.5339%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="36.2839%" y="213" width="0.1595%" height="15" fill="rgb(234,49,30)" fg:x="455" fg:w="2"/><text x="36.5339%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="36.2839%" y="197" width="0.1595%" height="15" fill="rgb(218,98,6)" fg:x="455" fg:w="2"/><text x="36.5339%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="36.2839%" y="181" width="0.1595%" height="15" fill="rgb(220,174,29)" fg:x="455" fg:w="2"/><text x="36.5339%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="36.2839%" y="165" width="0.1595%" height="15" fill="rgb(236,163,23)" fg:x="455" fg:w="2"/><text x="36.5339%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="36.2839%" y="149" width="0.1595%" height="15" fill="rgb(242,114,45)" fg:x="455" fg:w="2"/><text x="36.5339%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="36.2839%" y="133" width="0.1595%" height="15" fill="rgb(232,10,53)" fg:x="455" fg:w="2"/><text x="36.5339%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="36.2839%" y="117" width="0.1595%" height="15" fill="rgb(245,108,29)" fg:x="455" fg:w="2"/><text x="36.5339%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="36.2839%" y="101" width="0.1595%" height="15" fill="rgb(240,89,53)" fg:x="455" fg:w="2"/><text x="36.5339%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="36.2839%" y="85" width="0.1595%" height="15" fill="rgb(226,60,45)" fg:x="455" fg:w="2"/><text x="36.5339%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="36.2839%" y="69" width="0.1595%" height="15" fill="rgb(230,41,44)" fg:x="455" fg:w="2"/><text x="36.5339%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="36.2839%" y="53" width="0.1595%" height="15" fill="rgb(230,26,20)" fg:x="455" fg:w="2"/><text x="36.5339%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="36.2839%" y="37" width="0.1595%" height="15" fill="rgb(237,170,32)" fg:x="455" fg:w="2"/><text x="36.5339%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4434%" y="373" width="0.0797%" height="15" fill="rgb(212,35,42)" fg:x="457" fg:w="1"/><text x="36.6934%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4434%" y="357" width="0.0797%" height="15" fill="rgb(227,31,34)" fg:x="457" fg:w="1"/><text x="36.6934%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.4434%" y="437" width="0.2392%" height="15" fill="rgb(216,19,18)" fg:x="457" fg:w="3"/><text x="36.6934%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.4434%" y="421" width="0.2392%" height="15" fill="rgb(211,133,42)" fg:x="457" fg:w="3"/><text x="36.6934%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.4434%" y="405" width="0.2392%" height="15" fill="rgb(244,66,13)" fg:x="457" fg:w="3"/><text x="36.6934%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.4434%" y="389" width="0.2392%" height="15" fill="rgb(218,185,50)" fg:x="457" fg:w="3"/><text x="36.6934%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.5231%" y="373" width="0.1595%" height="15" fill="rgb(219,149,13)" fg:x="458" fg:w="2"/><text x="36.7731%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.5231%" y="357" width="0.1595%" height="15" fill="rgb(221,125,0)" fg:x="458" fg:w="2"/><text x="36.7731%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="36.5231%" y="341" width="0.1595%" height="15" fill="rgb(247,126,27)" fg:x="458" fg:w="2"/><text x="36.7731%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="36.5231%" y="325" width="0.1595%" height="15" fill="rgb(250,138,30)" fg:x="458" fg:w="2"/><text x="36.7731%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="36.5231%" y="309" width="0.1595%" height="15" fill="rgb(230,151,9)" fg:x="458" fg:w="2"/><text x="36.7731%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="36.5231%" y="293" width="0.1595%" height="15" fill="rgb(233,80,38)" fg:x="458" fg:w="2"/><text x="36.7731%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="36.5231%" y="277" width="0.1595%" height="15" fill="rgb(232,68,43)" fg:x="458" fg:w="2"/><text x="36.7731%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="36.5231%" y="261" width="0.1595%" height="15" fill="rgb(254,5,50)" fg:x="458" fg:w="2"/><text x="36.7731%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="36.5231%" y="245" width="0.1595%" height="15" fill="rgb(225,45,5)" fg:x="458" fg:w="2"/><text x="36.7731%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="36.5231%" y="229" width="0.1595%" height="15" fill="rgb(239,22,3)" fg:x="458" fg:w="2"/><text x="36.7731%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="36.5231%" y="213" width="0.1595%" height="15" fill="rgb(243,129,0)" fg:x="458" fg:w="2"/><text x="36.7731%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="36.5231%" y="197" width="0.1595%" height="15" fill="rgb(223,164,0)" fg:x="458" fg:w="2"/><text x="36.7731%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="36.4434%" y="485" width="0.3987%" height="15" fill="rgb(221,46,29)" fg:x="457" fg:w="5"/><text x="36.6934%" y="495.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="36.4434%" y="469" width="0.3987%" height="15" fill="rgb(205,97,47)" fg:x="457" fg:w="5"/><text x="36.6934%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="36.4434%" y="453" width="0.3987%" height="15" fill="rgb(249,14,8)" fg:x="457" fg:w="5"/><text x="36.6934%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.6826%" y="437" width="0.1595%" height="15" fill="rgb(216,77,3)" fg:x="460" fg:w="2"/><text x="36.9326%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.6826%" y="421" width="0.1595%" height="15" fill="rgb(206,168,54)" fg:x="460" fg:w="2"/><text x="36.9326%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.6826%" y="405" width="0.1595%" height="15" fill="rgb(236,3,41)" fg:x="460" fg:w="2"/><text x="36.9326%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.6826%" y="389" width="0.1595%" height="15" fill="rgb(231,132,24)" fg:x="460" fg:w="2"/><text x="36.9326%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.6826%" y="373" width="0.1595%" height="15" fill="rgb(227,221,40)" fg:x="460" fg:w="2"/><text x="36.9326%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.6826%" y="357" width="0.1595%" height="15" fill="rgb(233,151,11)" fg:x="460" fg:w="2"/><text x="36.9326%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7624%" y="341" width="0.0797%" height="15" fill="rgb(247,81,35)" fg:x="461" fg:w="1"/><text x="37.0124%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7624%" y="325" width="0.0797%" height="15" fill="rgb(243,128,48)" fg:x="461" fg:w="1"/><text x="37.0124%" y="335.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="36.7624%" y="309" width="0.0797%" height="15" fill="rgb(253,16,10)" fg:x="461" fg:w="1"/><text x="37.0124%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.8421%" y="453" width="0.0797%" height="15" fill="rgb(228,67,27)" fg:x="462" fg:w="1"/><text x="37.0921%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="36.9219%" y="453" width="0.0797%" height="15" fill="rgb(231,105,25)" fg:x="463" fg:w="1"/><text x="37.1719%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.9219%" y="437" width="0.0797%" height="15" fill="rgb(213,166,47)" fg:x="463" fg:w="1"/><text x="37.1719%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.9219%" y="421" width="0.0797%" height="15" fill="rgb(209,27,10)" fg:x="463" fg:w="1"/><text x="37.1719%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="36.8421%" y="485" width="0.2392%" height="15" fill="rgb(241,44,30)" fg:x="462" fg:w="3"/><text x="37.0921%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="36.8421%" y="469" width="0.2392%" height="15" fill="rgb(223,216,15)" fg:x="462" fg:w="3"/><text x="37.0921%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0016%" y="453" width="0.0797%" height="15" fill="rgb(227,14,7)" fg:x="464" fg:w="1"/><text x="37.2516%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.0016%" y="437" width="0.0797%" height="15" fill="rgb(237,14,5)" fg:x="464" fg:w="1"/><text x="37.2516%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.0016%" y="421" width="0.0797%" height="15" fill="rgb(232,14,36)" fg:x="464" fg:w="1"/><text x="37.2516%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="37.0813%" y="469" width="0.1595%" height="15" fill="rgb(234,0,38)" fg:x="465" fg:w="2"/><text x="37.3313%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="37.0813%" y="453" width="0.1595%" height="15" fill="rgb(207,170,14)" fg:x="465" fg:w="2"/><text x="37.3313%" y="463.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="37.0813%" y="437" width="0.1595%" height="15" fill="rgb(252,45,13)" fg:x="465" fg:w="2"/><text x="37.3313%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="37.0813%" y="421" width="0.1595%" height="15" fill="rgb(213,142,7)" fg:x="465" fg:w="2"/><text x="37.3313%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="37.0813%" y="405" width="0.1595%" height="15" fill="rgb(216,157,23)" fg:x="465" fg:w="2"/><text x="37.3313%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.1611%" y="389" width="0.0797%" height="15" fill="rgb(212,145,33)" fg:x="466" fg:w="1"/><text x="37.4111%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="37.1611%" y="373" width="0.0797%" height="15" fill="rgb(233,26,13)" fg:x="466" fg:w="1"/><text x="37.4111%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.1611%" y="357" width="0.0797%" height="15" fill="rgb(219,196,19)" fg:x="466" fg:w="1"/><text x="37.4111%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.1611%" y="341" width="0.0797%" height="15" fill="rgb(246,56,21)" fg:x="466" fg:w="1"/><text x="37.4111%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="37.1611%" y="325" width="0.0797%" height="15" fill="rgb(222,28,53)" fg:x="466" fg:w="1"/><text x="37.4111%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.1611%" y="309" width="0.0797%" height="15" fill="rgb(224,5,27)" fg:x="466" fg:w="1"/><text x="37.4111%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="37.1611%" y="293" width="0.0797%" height="15" fill="rgb(220,153,33)" fg:x="466" fg:w="1"/><text x="37.4111%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="37.1611%" y="277" width="0.0797%" height="15" fill="rgb(226,58,19)" fg:x="466" fg:w="1"/><text x="37.4111%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="37.0813%" y="485" width="0.2392%" height="15" fill="rgb(239,112,23)" fg:x="465" fg:w="3"/><text x="37.3313%" y="495.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="37.2408%" y="469" width="0.0797%" height="15" fill="rgb(251,213,20)" fg:x="467" fg:w="1"/><text x="37.4908%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2408%" y="453" width="0.0797%" height="15" fill="rgb(215,181,21)" fg:x="467" fg:w="1"/><text x="37.4908%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2408%" y="437" width="0.0797%" height="15" fill="rgb(240,8,35)" fg:x="467" fg:w="1"/><text x="37.4908%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="36.2041%" y="501" width="1.1962%" height="15" fill="rgb(232,203,3)" fg:x="454" fg:w="15"/><text x="36.4541%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="37.3206%" y="485" width="0.0797%" height="15" fill="rgb(214,202,43)" fg:x="468" fg:w="1"/><text x="37.5706%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3206%" y="469" width="0.0797%" height="15" fill="rgb(254,35,11)" fg:x="468" fg:w="1"/><text x="37.5706%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3206%" y="453" width="0.0797%" height="15" fill="rgb(239,173,13)" fg:x="468" fg:w="1"/><text x="37.5706%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.3206%" y="437" width="0.0797%" height="15" fill="rgb(220,141,0)" fg:x="468" fg:w="1"/><text x="37.5706%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.3206%" y="421" width="0.0797%" height="15" fill="rgb(210,98,12)" fg:x="468" fg:w="1"/><text x="37.5706%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.3206%" y="405" width="0.0797%" height="15" fill="rgb(254,153,22)" fg:x="468" fg:w="1"/><text x="37.5706%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.3206%" y="389" width="0.0797%" height="15" fill="rgb(247,223,17)" fg:x="468" fg:w="1"/><text x="37.5706%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.3206%" y="373" width="0.0797%" height="15" fill="rgb(246,56,7)" fg:x="468" fg:w="1"/><text x="37.5706%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.3206%" y="357" width="0.0797%" height="15" fill="rgb(240,226,12)" fg:x="468" fg:w="1"/><text x="37.5706%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.3206%" y="341" width="0.0797%" height="15" fill="rgb(205,87,46)" fg:x="468" fg:w="1"/><text x="37.5706%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.3206%" y="325" width="0.0797%" height="15" fill="rgb(245,214,51)" fg:x="468" fg:w="1"/><text x="37.5706%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.3206%" y="309" width="0.0797%" height="15" fill="rgb(223,172,33)" fg:x="468" fg:w="1"/><text x="37.5706%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3206%" y="293" width="0.0797%" height="15" fill="rgb(227,203,34)" fg:x="468" fg:w="1"/><text x="37.5706%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="37.4801%" y="485" width="0.1595%" height="15" fill="rgb(248,143,44)" fg:x="470" fg:w="2"/><text x="37.7301%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="37.4801%" y="469" width="0.1595%" height="15" fill="rgb(226,162,5)" fg:x="470" fg:w="2"/><text x="37.7301%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.4801%" y="453" width="0.1595%" height="15" fill="rgb(211,143,1)" fg:x="470" fg:w="2"/><text x="37.7301%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="37.6396%" y="485" width="0.0797%" height="15" fill="rgb(224,96,15)" fg:x="472" fg:w="1"/><text x="37.8896%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="37.6396%" y="469" width="0.0797%" height="15" fill="rgb(222,4,38)" fg:x="472" fg:w="1"/><text x="37.8896%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.7193%" y="357" width="0.0797%" height="15" fill="rgb(253,228,15)" fg:x="473" fg:w="1"/><text x="37.9693%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7193%" y="341" width="0.0797%" height="15" fill="rgb(242,194,12)" fg:x="473" fg:w="1"/><text x="37.9693%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7990%" y="357" width="0.0797%" height="15" fill="rgb(214,177,31)" fg:x="474" fg:w="1"/><text x="38.0490%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7990%" y="341" width="0.0797%" height="15" fill="rgb(226,58,51)" fg:x="474" fg:w="1"/><text x="38.0490%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.7990%" y="325" width="0.0797%" height="15" fill="rgb(250,119,16)" fg:x="474" fg:w="1"/><text x="38.0490%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.7990%" y="309" width="0.0797%" height="15" fill="rgb(223,128,53)" fg:x="474" fg:w="1"/><text x="38.0490%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.7990%" y="293" width="0.0797%" height="15" fill="rgb(251,199,15)" fg:x="474" fg:w="1"/><text x="38.0490%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7990%" y="277" width="0.0797%" height="15" fill="rgb(235,168,42)" fg:x="474" fg:w="1"/><text x="38.0490%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7990%" y="261" width="0.0797%" height="15" fill="rgb(250,210,17)" fg:x="474" fg:w="1"/><text x="38.0490%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.7990%" y="245" width="0.0797%" height="15" fill="rgb(226,36,41)" fg:x="474" fg:w="1"/><text x="38.0490%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="37.7990%" y="229" width="0.0797%" height="15" fill="rgb(225,87,10)" fg:x="474" fg:w="1"/><text x="38.0490%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="37.7990%" y="213" width="0.0797%" height="15" fill="rgb(228,83,9)" fg:x="474" fg:w="1"/><text x="38.0490%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.7193%" y="373" width="0.2392%" height="15" fill="rgb(225,16,36)" fg:x="473" fg:w="3"/><text x="37.9693%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8788%" y="357" width="0.0797%" height="15" fill="rgb(242,198,13)" fg:x="475" fg:w="1"/><text x="38.1288%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="37.7193%" y="405" width="0.3190%" height="15" fill="rgb(239,25,51)" fg:x="473" fg:w="4"/><text x="37.9693%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="37.7193%" y="389" width="0.3190%" height="15" fill="rgb(239,28,37)" fg:x="473" fg:w="4"/><text x="37.9693%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9585%" y="373" width="0.0797%" height="15" fill="rgb(234,70,17)" fg:x="476" fg:w="1"/><text x="38.2085%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.0383%" y="405" width="0.0797%" height="15" fill="rgb(231,215,53)" fg:x="477" fg:w="1"/><text x="38.2883%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.1180%" y="405" width="0.0797%" height="15" fill="rgb(218,140,42)" fg:x="478" fg:w="1"/><text x="38.3680%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.1180%" y="389" width="0.0797%" height="15" fill="rgb(233,227,45)" fg:x="478" fg:w="1"/><text x="38.3680%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.1180%" y="373" width="0.0797%" height="15" fill="rgb(225,189,21)" fg:x="478" fg:w="1"/><text x="38.3680%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1180%" y="357" width="0.0797%" height="15" fill="rgb(237,176,54)" fg:x="478" fg:w="1"/><text x="38.3680%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="37.7193%" y="453" width="0.7177%" height="15" fill="rgb(215,131,46)" fg:x="473" fg:w="9"/><text x="37.9693%" y="463.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="37.7193%" y="437" width="0.7177%" height="15" fill="rgb(218,95,20)" fg:x="473" fg:w="9"/><text x="37.9693%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="37.7193%" y="421" width="0.7177%" height="15" fill="rgb(208,198,12)" fg:x="473" fg:w="9"/><text x="37.9693%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="38.1978%" y="405" width="0.2392%" height="15" fill="rgb(239,107,50)" fg:x="479" fg:w="3"/><text x="38.4478%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.1978%" y="389" width="0.2392%" height="15" fill="rgb(240,217,37)" fg:x="479" fg:w="3"/><text x="38.4478%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.3573%" y="373" width="0.0797%" height="15" fill="rgb(242,197,49)" fg:x="481" fg:w="1"/><text x="38.6073%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3573%" y="357" width="0.0797%" height="15" fill="rgb(219,171,17)" fg:x="481" fg:w="1"/><text x="38.6073%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.3573%" y="341" width="0.0797%" height="15" fill="rgb(209,81,40)" fg:x="481" fg:w="1"/><text x="38.6073%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3573%" y="325" width="0.0797%" height="15" fill="rgb(237,156,30)" fg:x="481" fg:w="1"/><text x="38.6073%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.3573%" y="309" width="0.0797%" height="15" fill="rgb(212,127,16)" fg:x="481" fg:w="1"/><text x="38.6073%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3573%" y="293" width="0.0797%" height="15" fill="rgb(226,66,32)" fg:x="481" fg:w="1"/><text x="38.6073%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.5167%" y="373" width="0.1595%" height="15" fill="rgb(245,22,46)" fg:x="483" fg:w="2"/><text x="38.7667%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.5167%" y="357" width="0.1595%" height="15" fill="rgb(210,112,21)" fg:x="483" fg:w="2"/><text x="38.7667%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.5965%" y="341" width="0.0797%" height="15" fill="rgb(207,118,39)" fg:x="484" fg:w="1"/><text x="38.8465%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.6762%" y="373" width="0.0797%" height="15" fill="rgb(205,206,35)" fg:x="485" fg:w="1"/><text x="38.9262%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.6762%" y="357" width="0.0797%" height="15" fill="rgb(222,120,2)" fg:x="485" fg:w="1"/><text x="38.9262%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.6762%" y="341" width="0.0797%" height="15" fill="rgb(205,38,18)" fg:x="485" fg:w="1"/><text x="38.9262%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.6762%" y="325" width="0.0797%" height="15" fill="rgb(226,61,2)" fg:x="485" fg:w="1"/><text x="38.9262%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.6762%" y="309" width="0.0797%" height="15" fill="rgb(242,161,23)" fg:x="485" fg:w="1"/><text x="38.9262%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.6762%" y="293" width="0.0797%" height="15" fill="rgb(213,13,52)" fg:x="485" fg:w="1"/><text x="38.9262%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.6762%" y="277" width="0.0797%" height="15" fill="rgb(246,209,47)" fg:x="485" fg:w="1"/><text x="38.9262%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.6762%" y="261" width="0.0797%" height="15" fill="rgb(214,41,3)" fg:x="485" fg:w="1"/><text x="38.9262%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.6762%" y="245" width="0.0797%" height="15" fill="rgb(236,119,38)" fg:x="485" fg:w="1"/><text x="38.9262%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.6762%" y="229" width="0.0797%" height="15" fill="rgb(218,50,11)" fg:x="485" fg:w="1"/><text x="38.9262%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.6762%" y="213" width="0.0797%" height="15" fill="rgb(228,38,11)" fg:x="485" fg:w="1"/><text x="38.9262%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="38.5167%" y="405" width="0.3190%" height="15" fill="rgb(212,13,9)" fg:x="483" fg:w="4"/><text x="38.7667%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="38.5167%" y="389" width="0.3190%" height="15" fill="rgb(208,211,9)" fg:x="483" fg:w="4"/><text x="38.7667%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.7560%" y="373" width="0.0797%" height="15" fill="rgb(239,39,32)" fg:x="486" fg:w="1"/><text x="39.0060%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.8357%" y="373" width="0.0797%" height="15" fill="rgb(254,179,26)" fg:x="487" fg:w="1"/><text x="39.0857%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.9952%" y="309" width="0.0797%" height="15" fill="rgb(249,165,28)" fg:x="489" fg:w="1"/><text x="39.2452%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9952%" y="293" width="0.0797%" height="15" fill="rgb(225,59,50)" fg:x="489" fg:w="1"/><text x="39.2452%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.0750%" y="293" width="0.0797%" height="15" fill="rgb(209,122,5)" fg:x="490" fg:w="1"/><text x="39.3250%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.0750%" y="277" width="0.0797%" height="15" fill="rgb(214,65,34)" fg:x="490" fg:w="1"/><text x="39.3250%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.0750%" y="309" width="0.1595%" height="15" fill="rgb(249,183,32)" fg:x="490" fg:w="2"/><text x="39.3250%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.1547%" y="293" width="0.0797%" height="15" fill="rgb(218,122,24)" fg:x="491" fg:w="1"/><text x="39.4047%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (20 samples, 1.59%)</title><rect x="37.7193%" y="485" width="1.5949%" height="15" fill="rgb(224,109,18)" fg:x="473" fg:w="20"/><text x="37.9693%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (20 samples, 1.59%)</title><rect x="37.7193%" y="469" width="1.5949%" height="15" fill="rgb(210,68,50)" fg:x="473" fg:w="20"/><text x="37.9693%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="38.4370%" y="453" width="0.8772%" height="15" fill="rgb(212,184,34)" fg:x="482" fg:w="11"/><text x="38.6870%" y="463.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="38.5167%" y="437" width="0.7974%" height="15" fill="rgb(238,105,48)" fg:x="483" fg:w="10"/><text x="38.7667%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="38.5167%" y="421" width="0.7974%" height="15" fill="rgb(222,134,54)" fg:x="483" fg:w="10"/><text x="38.7667%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="38.8357%" y="405" width="0.4785%" height="15" fill="rgb(246,24,43)" fg:x="487" fg:w="6"/><text x="39.0857%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="38.8357%" y="389" width="0.4785%" height="15" fill="rgb(227,169,22)" fg:x="487" fg:w="6"/><text x="39.0857%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="38.9155%" y="373" width="0.3987%" height="15" fill="rgb(253,152,4)" fg:x="488" fg:w="5"/><text x="39.1655%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="38.9155%" y="357" width="0.3987%" height="15" fill="rgb(219,158,36)" fg:x="488" fg:w="5"/><text x="39.1655%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="38.9155%" y="341" width="0.3987%" height="15" fill="rgb(251,128,40)" fg:x="488" fg:w="5"/><text x="39.1655%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="38.9155%" y="325" width="0.3987%" height="15" fill="rgb(254,101,39)" fg:x="488" fg:w="5"/><text x="39.1655%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.2344%" y="309" width="0.0797%" height="15" fill="rgb(221,168,40)" fg:x="492" fg:w="1"/><text x="39.4844%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.2344%" y="293" width="0.0797%" height="15" fill="rgb(221,14,27)" fg:x="492" fg:w="1"/><text x="39.4844%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="39.3142%" y="421" width="0.0797%" height="15" fill="rgb(207,36,43)" fg:x="493" fg:w="1"/><text x="39.5642%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="39.3142%" y="485" width="0.1595%" height="15" fill="rgb(240,172,53)" fg:x="493" fg:w="2"/><text x="39.5642%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="39.3142%" y="469" width="0.1595%" height="15" fill="rgb(241,138,43)" fg:x="493" fg:w="2"/><text x="39.5642%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.3142%" y="453" width="0.1595%" height="15" fill="rgb(227,78,19)" fg:x="493" fg:w="2"/><text x="39.5642%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="39.3142%" y="437" width="0.1595%" height="15" fill="rgb(215,127,44)" fg:x="493" fg:w="2"/><text x="39.5642%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.3939%" y="421" width="0.0797%" height="15" fill="rgb(227,13,10)" fg:x="494" fg:w="1"/><text x="39.6439%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3939%" y="405" width="0.0797%" height="15" fill="rgb(249,177,6)" fg:x="494" fg:w="1"/><text x="39.6439%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3939%" y="389" width="0.0797%" height="15" fill="rgb(215,154,26)" fg:x="494" fg:w="1"/><text x="39.6439%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="39.4737%" y="469" width="0.0797%" height="15" fill="rgb(250,168,20)" fg:x="495" fg:w="1"/><text x="39.7237%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.4737%" y="453" width="0.0797%" height="15" fill="rgb(222,53,38)" fg:x="495" fg:w="1"/><text x="39.7237%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.5534%" y="437" width="0.1595%" height="15" fill="rgb(245,154,5)" fg:x="496" fg:w="2"/><text x="39.8034%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.5534%" y="421" width="0.1595%" height="15" fill="rgb(214,89,50)" fg:x="496" fg:w="2"/><text x="39.8034%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="39.5534%" y="405" width="0.1595%" height="15" fill="rgb(232,73,14)" fg:x="496" fg:w="2"/><text x="39.8034%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="39.5534%" y="389" width="0.1595%" height="15" fill="rgb(230,101,20)" fg:x="496" fg:w="2"/><text x="39.8034%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="39.5534%" y="373" width="0.1595%" height="15" fill="rgb(208,56,28)" fg:x="496" fg:w="2"/><text x="39.8034%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.5534%" y="357" width="0.1595%" height="15" fill="rgb(247,205,22)" fg:x="496" fg:w="2"/><text x="39.8034%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.5534%" y="341" width="0.1595%" height="15" fill="rgb(252,109,51)" fg:x="496" fg:w="2"/><text x="39.8034%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="39.5534%" y="325" width="0.1595%" height="15" fill="rgb(220,40,24)" fg:x="496" fg:w="2"/><text x="39.8034%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="39.5534%" y="309" width="0.1595%" height="15" fill="rgb(251,108,7)" fg:x="496" fg:w="2"/><text x="39.8034%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="39.5534%" y="293" width="0.1595%" height="15" fill="rgb(238,102,51)" fg:x="496" fg:w="2"/><text x="39.8034%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="39.5534%" y="277" width="0.1595%" height="15" fill="rgb(219,149,34)" fg:x="496" fg:w="2"/><text x="39.8034%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="39.5534%" y="261" width="0.1595%" height="15" fill="rgb(239,70,0)" fg:x="496" fg:w="2"/><text x="39.8034%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="39.7129%" y="421" width="0.0797%" height="15" fill="rgb(246,214,23)" fg:x="498" fg:w="1"/><text x="39.9629%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.7129%" y="405" width="0.0797%" height="15" fill="rgb(239,221,51)" fg:x="498" fg:w="1"/><text x="39.9629%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.7927%" y="341" width="0.1595%" height="15" fill="rgb(254,62,14)" fg:x="499" fg:w="2"/><text x="40.0427%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.7927%" y="325" width="0.1595%" height="15" fill="rgb(253,57,33)" fg:x="499" fg:w="2"/><text x="40.0427%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.7927%" y="309" width="0.1595%" height="15" fill="rgb(229,34,6)" fg:x="499" fg:w="2"/><text x="40.0427%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="39.7927%" y="293" width="0.1595%" height="15" fill="rgb(235,191,23)" fg:x="499" fg:w="2"/><text x="40.0427%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="39.7927%" y="277" width="0.1595%" height="15" fill="rgb(217,207,27)" fg:x="499" fg:w="2"/><text x="40.0427%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="39.7927%" y="261" width="0.1595%" height="15" fill="rgb(232,41,44)" fg:x="499" fg:w="2"/><text x="40.0427%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.7927%" y="245" width="0.1595%" height="15" fill="rgb(221,188,19)" fg:x="499" fg:w="2"/><text x="40.0427%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.7927%" y="229" width="0.1595%" height="15" fill="rgb(245,180,45)" fg:x="499" fg:w="2"/><text x="40.0427%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="39.7927%" y="213" width="0.1595%" height="15" fill="rgb(250,220,42)" fg:x="499" fg:w="2"/><text x="40.0427%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="39.7927%" y="197" width="0.1595%" height="15" fill="rgb(234,16,34)" fg:x="499" fg:w="2"/><text x="40.0427%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="39.7927%" y="181" width="0.1595%" height="15" fill="rgb(233,217,23)" fg:x="499" fg:w="2"/><text x="40.0427%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="39.7927%" y="165" width="0.1595%" height="15" fill="rgb(209,22,46)" fg:x="499" fg:w="2"/><text x="40.0427%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8724%" y="149" width="0.0797%" height="15" fill="rgb(213,101,18)" fg:x="500" fg:w="1"/><text x="40.1224%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.7927%" y="389" width="0.2392%" height="15" fill="rgb(215,179,52)" fg:x="499" fg:w="3"/><text x="40.0427%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.7927%" y="373" width="0.2392%" height="15" fill="rgb(223,50,25)" fg:x="499" fg:w="3"/><text x="40.0427%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.7927%" y="357" width="0.2392%" height="15" fill="rgb(224,51,44)" fg:x="499" fg:w="3"/><text x="40.0427%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9522%" y="341" width="0.0797%" height="15" fill="rgb(224,13,54)" fg:x="501" fg:w="1"/><text x="40.2022%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.0319%" y="389" width="0.1595%" height="15" fill="rgb(219,58,47)" fg:x="502" fg:w="2"/><text x="40.2819%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="40.0319%" y="373" width="0.1595%" height="15" fill="rgb(246,124,34)" fg:x="502" fg:w="2"/><text x="40.2819%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.0319%" y="357" width="0.1595%" height="15" fill="rgb(245,109,25)" fg:x="502" fg:w="2"/><text x="40.2819%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="40.0319%" y="341" width="0.1595%" height="15" fill="rgb(235,48,23)" fg:x="502" fg:w="2"/><text x="40.2819%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1116%" y="325" width="0.0797%" height="15" fill="rgb(229,203,36)" fg:x="503" fg:w="1"/><text x="40.3616%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.1914%" y="293" width="0.0797%" height="15" fill="rgb(234,180,9)" fg:x="504" fg:w="1"/><text x="40.4414%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="39.7129%" y="437" width="0.7177%" height="15" fill="rgb(228,98,45)" fg:x="498" fg:w="9"/><text x="39.9629%" y="447.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="39.7927%" y="421" width="0.6380%" height="15" fill="rgb(240,24,36)" fg:x="499" fg:w="8"/><text x="40.0427%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="39.7927%" y="405" width="0.6380%" height="15" fill="rgb(227,154,19)" fg:x="499" fg:w="8"/><text x="40.0427%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.1914%" y="389" width="0.2392%" height="15" fill="rgb(231,2,48)" fg:x="504" fg:w="3"/><text x="40.4414%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.1914%" y="373" width="0.2392%" height="15" fill="rgb(219,216,0)" fg:x="504" fg:w="3"/><text x="40.4414%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.1914%" y="357" width="0.2392%" height="15" fill="rgb(251,88,0)" fg:x="504" fg:w="3"/><text x="40.4414%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.1914%" y="341" width="0.2392%" height="15" fill="rgb(242,45,45)" fg:x="504" fg:w="3"/><text x="40.4414%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.1914%" y="325" width="0.2392%" height="15" fill="rgb(218,149,45)" fg:x="504" fg:w="3"/><text x="40.4414%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.1914%" y="309" width="0.2392%" height="15" fill="rgb(247,194,10)" fg:x="504" fg:w="3"/><text x="40.4414%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.2711%" y="293" width="0.1595%" height="15" fill="rgb(234,33,37)" fg:x="505" fg:w="2"/><text x="40.5211%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.2711%" y="277" width="0.1595%" height="15" fill="rgb(218,61,13)" fg:x="505" fg:w="2"/><text x="40.5211%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.3509%" y="261" width="0.0797%" height="15" fill="rgb(210,80,52)" fg:x="506" fg:w="1"/><text x="40.6009%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3509%" y="245" width="0.0797%" height="15" fill="rgb(218,203,27)" fg:x="506" fg:w="1"/><text x="40.6009%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.5104%" y="325" width="0.0797%" height="15" fill="rgb(209,126,33)" fg:x="508" fg:w="1"/><text x="40.7604%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.5104%" y="309" width="0.0797%" height="15" fill="rgb(234,173,41)" fg:x="508" fg:w="1"/><text x="40.7604%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.5104%" y="293" width="0.0797%" height="15" fill="rgb(228,166,9)" fg:x="508" fg:w="1"/><text x="40.7604%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.5104%" y="277" width="0.0797%" height="15" fill="rgb(208,124,43)" fg:x="508" fg:w="1"/><text x="40.7604%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.5104%" y="261" width="0.0797%" height="15" fill="rgb(212,154,38)" fg:x="508" fg:w="1"/><text x="40.7604%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.5104%" y="245" width="0.0797%" height="15" fill="rgb(246,179,35)" fg:x="508" fg:w="1"/><text x="40.7604%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.5104%" y="229" width="0.0797%" height="15" fill="rgb(251,3,50)" fg:x="508" fg:w="1"/><text x="40.7604%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.5104%" y="213" width="0.0797%" height="15" fill="rgb(219,96,8)" fg:x="508" fg:w="1"/><text x="40.7604%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.5104%" y="197" width="0.0797%" height="15" fill="rgb(251,216,33)" fg:x="508" fg:w="1"/><text x="40.7604%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.5104%" y="181" width="0.0797%" height="15" fill="rgb(243,145,29)" fg:x="508" fg:w="1"/><text x="40.7604%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.5104%" y="165" width="0.0797%" height="15" fill="rgb(210,75,20)" fg:x="508" fg:w="1"/><text x="40.7604%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.5104%" y="149" width="0.0797%" height="15" fill="rgb(235,56,8)" fg:x="508" fg:w="1"/><text x="40.7604%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.5104%" y="357" width="0.2392%" height="15" fill="rgb(226,175,49)" fg:x="508" fg:w="3"/><text x="40.7604%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.5104%" y="341" width="0.2392%" height="15" fill="rgb(242,204,23)" fg:x="508" fg:w="3"/><text x="40.7604%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.5901%" y="325" width="0.1595%" height="15" fill="rgb(225,104,24)" fg:x="509" fg:w="2"/><text x="40.8401%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7496%" y="357" width="0.0797%" height="15" fill="rgb(253,34,1)" fg:x="511" fg:w="1"/><text x="40.9996%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7496%" y="341" width="0.0797%" height="15" fill="rgb(233,199,23)" fg:x="511" fg:w="1"/><text x="40.9996%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.7496%" y="325" width="0.0797%" height="15" fill="rgb(247,7,51)" fg:x="511" fg:w="1"/><text x="40.9996%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.7496%" y="309" width="0.0797%" height="15" fill="rgb(214,146,12)" fg:x="511" fg:w="1"/><text x="40.9996%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.7496%" y="293" width="0.0797%" height="15" fill="rgb(234,181,43)" fg:x="511" fg:w="1"/><text x="40.9996%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.7496%" y="277" width="0.0797%" height="15" fill="rgb(239,148,6)" fg:x="511" fg:w="1"/><text x="40.9996%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.7496%" y="261" width="0.0797%" height="15" fill="rgb(206,151,17)" fg:x="511" fg:w="1"/><text x="40.9996%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="40.4306%" y="389" width="0.4785%" height="15" fill="rgb(213,215,10)" fg:x="507" fg:w="6"/><text x="40.6806%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="40.4306%" y="373" width="0.4785%" height="15" fill="rgb(215,220,44)" fg:x="507" fg:w="6"/><text x="40.6806%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8293%" y="357" width="0.0797%" height="15" fill="rgb(245,205,37)" fg:x="512" fg:w="1"/><text x="41.0793%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.9091%" y="389" width="0.0797%" height="15" fill="rgb(245,130,43)" fg:x="513" fg:w="1"/><text x="41.1591%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.9091%" y="373" width="0.0797%" height="15" fill="rgb(231,227,38)" fg:x="513" fg:w="1"/><text x="41.1591%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.9091%" y="357" width="0.0797%" height="15" fill="rgb(233,185,4)" fg:x="513" fg:w="1"/><text x="41.1591%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.9091%" y="341" width="0.0797%" height="15" fill="rgb(224,154,43)" fg:x="513" fg:w="1"/><text x="41.1591%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.9091%" y="325" width="0.0797%" height="15" fill="rgb(235,156,15)" fg:x="513" fg:w="1"/><text x="41.1591%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9888%" y="293" width="0.0797%" height="15" fill="rgb(211,55,43)" fg:x="514" fg:w="1"/><text x="41.2388%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.9888%" y="277" width="0.0797%" height="15" fill="rgb(247,149,40)" fg:x="514" fg:w="1"/><text x="41.2388%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0686%" y="261" width="0.0797%" height="15" fill="rgb(232,171,16)" fg:x="515" fg:w="1"/><text x="41.3186%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.9888%" y="357" width="0.2392%" height="15" fill="rgb(215,117,49)" fg:x="514" fg:w="3"/><text x="41.2388%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.9888%" y="341" width="0.2392%" height="15" fill="rgb(246,194,11)" fg:x="514" fg:w="3"/><text x="41.2388%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.9888%" y="325" width="0.2392%" height="15" fill="rgb(242,101,44)" fg:x="514" fg:w="3"/><text x="41.2388%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.9888%" y="309" width="0.2392%" height="15" fill="rgb(226,174,6)" fg:x="514" fg:w="3"/><text x="41.2388%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.0686%" y="293" width="0.1595%" height="15" fill="rgb(213,150,20)" fg:x="515" fg:w="2"/><text x="41.3186%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.0686%" y="277" width="0.1595%" height="15" fill="rgb(222,124,42)" fg:x="515" fg:w="2"/><text x="41.3186%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.1483%" y="261" width="0.0797%" height="15" fill="rgb(250,19,47)" fg:x="516" fg:w="1"/><text x="41.3983%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (22 samples, 1.75%)</title><rect x="39.5534%" y="469" width="1.7544%" height="15" fill="rgb(241,217,19)" fg:x="496" fg:w="22"/><text x="39.8034%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (22 samples, 1.75%)</title><rect x="39.5534%" y="453" width="1.7544%" height="15" fill="rgb(207,210,34)" fg:x="496" fg:w="22"/><text x="39.8034%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="40.4306%" y="437" width="0.8772%" height="15" fill="rgb(244,45,4)" fg:x="507" fg:w="11"/><text x="40.6806%" y="447.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.88%)</title><rect x="40.4306%" y="421" width="0.8772%" height="15" fill="rgb(252,134,50)" fg:x="507" fg:w="11"/><text x="40.6806%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="40.4306%" y="405" width="0.8772%" height="15" fill="rgb(238,74,2)" fg:x="507" fg:w="11"/><text x="40.6806%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="40.9888%" y="389" width="0.3190%" height="15" fill="rgb(226,58,46)" fg:x="514" fg:w="4"/><text x="41.2388%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="40.9888%" y="373" width="0.3190%" height="15" fill="rgb(232,83,35)" fg:x="514" fg:w="4"/><text x="41.2388%" y="383.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="41.2281%" y="357" width="0.0797%" height="15" fill="rgb(212,148,47)" fg:x="517" fg:w="1"/><text x="41.4781%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (66 samples, 5.26%)</title><rect x="36.2041%" y="517" width="5.2632%" height="15" fill="rgb(235,29,1)" fg:x="454" fg:w="66"/><text x="36.4541%" y="527.50">plugin..</text></g><g><title>plugins_core::tools::set_container (51 samples, 4.07%)</title><rect x="37.4003%" y="501" width="4.0670%" height="15" fill="rgb(247,55,37)" fg:x="469" fg:w="51"/><text x="37.6503%" y="511.50">plug..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (25 samples, 1.99%)</title><rect x="39.4737%" y="485" width="1.9936%" height="15" fill="rgb(222,48,3)" fg:x="495" fg:w="25"/><text x="39.7237%" y="495.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="41.3078%" y="469" width="0.1595%" height="15" fill="rgb(234,21,33)" fg:x="518" fg:w="2"/><text x="41.5578%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.3078%" y="453" width="0.1595%" height="15" fill="rgb(247,178,53)" fg:x="518" fg:w="2"/><text x="41.5578%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="41.3876%" y="437" width="0.0797%" height="15" fill="rgb(225,75,7)" fg:x="519" fg:w="1"/><text x="41.6376%" y="447.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="41.3876%" y="421" width="0.0797%" height="15" fill="rgb(219,199,7)" fg:x="519" fg:w="1"/><text x="41.6376%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.3876%" y="405" width="0.0797%" height="15" fill="rgb(209,93,42)" fg:x="519" fg:w="1"/><text x="41.6376%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.3876%" y="389" width="0.0797%" height="15" fill="rgb(240,175,17)" fg:x="519" fg:w="1"/><text x="41.6376%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.3876%" y="373" width="0.0797%" height="15" fill="rgb(232,106,7)" fg:x="519" fg:w="1"/><text x="41.6376%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.3876%" y="357" width="0.0797%" height="15" fill="rgb(242,106,43)" fg:x="519" fg:w="1"/><text x="41.6376%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.3876%" y="341" width="0.0797%" height="15" fill="rgb(242,61,37)" fg:x="519" fg:w="1"/><text x="41.6376%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.3876%" y="325" width="0.0797%" height="15" fill="rgb(205,72,10)" fg:x="519" fg:w="1"/><text x="41.6376%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.3876%" y="309" width="0.0797%" height="15" fill="rgb(214,184,36)" fg:x="519" fg:w="1"/><text x="41.6376%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.3876%" y="293" width="0.0797%" height="15" fill="rgb(206,107,18)" fg:x="519" fg:w="1"/><text x="41.6376%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.3876%" y="277" width="0.0797%" height="15" fill="rgb(210,75,5)" fg:x="519" fg:w="1"/><text x="41.6376%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.3876%" y="261" width="0.0797%" height="15" fill="rgb(205,3,19)" fg:x="519" fg:w="1"/><text x="41.6376%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.4673%" y="373" width="0.1595%" height="15" fill="rgb(207,181,42)" fg:x="520" fg:w="2"/><text x="41.7173%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5470%" y="357" width="0.0797%" height="15" fill="rgb(229,179,43)" fg:x="521" fg:w="1"/><text x="41.7970%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.4673%" y="405" width="0.3190%" height="15" fill="rgb(246,95,30)" fg:x="520" fg:w="4"/><text x="41.7173%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="41.4673%" y="389" width="0.3190%" height="15" fill="rgb(234,144,45)" fg:x="520" fg:w="4"/><text x="41.7173%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.6268%" y="373" width="0.1595%" height="15" fill="rgb(250,54,25)" fg:x="522" fg:w="2"/><text x="41.8768%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="41.4673%" y="437" width="0.4785%" height="15" fill="rgb(215,195,40)" fg:x="520" fg:w="6"/><text x="41.7173%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="41.4673%" y="421" width="0.4785%" height="15" fill="rgb(233,188,42)" fg:x="520" fg:w="6"/><text x="41.7173%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.7863%" y="405" width="0.1595%" height="15" fill="rgb(247,227,35)" fg:x="524" fg:w="2"/><text x="42.0363%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.7863%" y="389" width="0.1595%" height="15" fill="rgb(249,124,27)" fg:x="524" fg:w="2"/><text x="42.0363%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="41.7863%" y="373" width="0.1595%" height="15" fill="rgb(219,207,25)" fg:x="524" fg:w="2"/><text x="42.0363%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="41.7863%" y="357" width="0.1595%" height="15" fill="rgb(241,216,47)" fg:x="524" fg:w="2"/><text x="42.0363%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="41.7863%" y="341" width="0.1595%" height="15" fill="rgb(233,82,50)" fg:x="524" fg:w="2"/><text x="42.0363%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="41.7863%" y="325" width="0.1595%" height="15" fill="rgb(232,63,2)" fg:x="524" fg:w="2"/><text x="42.0363%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="41.7863%" y="309" width="0.1595%" height="15" fill="rgb(236,184,28)" fg:x="524" fg:w="2"/><text x="42.0363%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="41.7863%" y="293" width="0.1595%" height="15" fill="rgb(254,63,27)" fg:x="524" fg:w="2"/><text x="42.0363%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="41.7863%" y="277" width="0.1595%" height="15" fill="rgb(253,106,28)" fg:x="524" fg:w="2"/><text x="42.0363%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="41.7863%" y="261" width="0.1595%" height="15" fill="rgb(225,141,39)" fg:x="524" fg:w="2"/><text x="42.0363%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="41.7863%" y="245" width="0.1595%" height="15" fill="rgb(222,157,20)" fg:x="524" fg:w="2"/><text x="42.0363%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.7863%" y="229" width="0.1595%" height="15" fill="rgb(210,190,9)" fg:x="524" fg:w="2"/><text x="42.0363%" y="239.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="41.4673%" y="517" width="0.6380%" height="15" fill="rgb(242,167,7)" fg:x="520" fg:w="8"/><text x="41.7173%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="41.4673%" y="501" width="0.6380%" height="15" fill="rgb(227,82,41)" fg:x="520" fg:w="8"/><text x="41.7173%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="41.4673%" y="485" width="0.6380%" height="15" fill="rgb(222,131,13)" fg:x="520" fg:w="8"/><text x="41.7173%" y="495.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="41.4673%" y="469" width="0.6380%" height="15" fill="rgb(221,98,26)" fg:x="520" fg:w="8"/><text x="41.7173%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="41.4673%" y="453" width="0.6380%" height="15" fill="rgb(251,63,52)" fg:x="520" fg:w="8"/><text x="41.7173%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.9458%" y="437" width="0.1595%" height="15" fill="rgb(246,25,43)" fg:x="526" fg:w="2"/><text x="42.1958%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0255%" y="421" width="0.0797%" height="15" fill="rgb(247,167,15)" fg:x="527" fg:w="1"/><text x="42.2755%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.0255%" y="405" width="0.0797%" height="15" fill="rgb(240,104,42)" fg:x="527" fg:w="1"/><text x="42.2755%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0255%" y="389" width="0.0797%" height="15" fill="rgb(224,54,6)" fg:x="527" fg:w="1"/><text x="42.2755%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.0255%" y="373" width="0.0797%" height="15" fill="rgb(244,108,35)" fg:x="527" fg:w="1"/><text x="42.2755%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0255%" y="357" width="0.0797%" height="15" fill="rgb(216,154,2)" fg:x="527" fg:w="1"/><text x="42.2755%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.0255%" y="341" width="0.0797%" height="15" fill="rgb(222,8,47)" fg:x="527" fg:w="1"/><text x="42.2755%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0255%" y="325" width="0.0797%" height="15" fill="rgb(252,93,1)" fg:x="527" fg:w="1"/><text x="42.2755%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0255%" y="309" width="0.0797%" height="15" fill="rgb(223,226,51)" fg:x="527" fg:w="1"/><text x="42.2755%" y="319.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="42.1053%" y="485" width="0.0797%" height="15" fill="rgb(206,147,9)" fg:x="528" fg:w="1"/><text x="42.3553%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1053%" y="469" width="0.0797%" height="15" fill="rgb(248,180,41)" fg:x="528" fg:w="1"/><text x="42.3553%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1053%" y="453" width="0.0797%" height="15" fill="rgb(209,47,50)" fg:x="528" fg:w="1"/><text x="42.3553%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="42.1053%" y="437" width="0.0797%" height="15" fill="rgb(243,65,31)" fg:x="528" fg:w="1"/><text x="42.3553%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1850%" y="469" width="0.0797%" height="15" fill="rgb(228,128,1)" fg:x="529" fg:w="1"/><text x="42.4350%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2648%" y="453" width="0.0797%" height="15" fill="rgb(231,192,16)" fg:x="530" fg:w="1"/><text x="42.5148%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="42.1053%" y="517" width="0.3190%" height="15" fill="rgb(224,26,40)" fg:x="528" fg:w="4"/><text x="42.3553%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="42.1053%" y="501" width="0.3190%" height="15" fill="rgb(214,192,17)" fg:x="528" fg:w="4"/><text x="42.3553%" y="511.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="42.1850%" y="485" width="0.2392%" height="15" fill="rgb(225,147,18)" fg:x="529" fg:w="3"/><text x="42.4350%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="42.2648%" y="469" width="0.1595%" height="15" fill="rgb(205,35,11)" fg:x="530" fg:w="2"/><text x="42.5148%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="42.3445%" y="453" width="0.0797%" height="15" fill="rgb(242,40,42)" fg:x="531" fg:w="1"/><text x="42.5945%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.3445%" y="437" width="0.0797%" height="15" fill="rgb(250,170,13)" fg:x="531" fg:w="1"/><text x="42.5945%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="42.3445%" y="421" width="0.0797%" height="15" fill="rgb(240,161,28)" fg:x="531" fg:w="1"/><text x="42.5945%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.3445%" y="405" width="0.0797%" height="15" fill="rgb(245,179,12)" fg:x="531" fg:w="1"/><text x="42.5945%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.3445%" y="389" width="0.0797%" height="15" fill="rgb(250,92,32)" fg:x="531" fg:w="1"/><text x="42.5945%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="42.3445%" y="373" width="0.0797%" height="15" fill="rgb(233,10,40)" fg:x="531" fg:w="1"/><text x="42.5945%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.3445%" y="357" width="0.0797%" height="15" fill="rgb(217,98,1)" fg:x="531" fg:w="1"/><text x="42.5945%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="42.3445%" y="341" width="0.0797%" height="15" fill="rgb(238,202,7)" fg:x="531" fg:w="1"/><text x="42.5945%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.3445%" y="325" width="0.0797%" height="15" fill="rgb(222,91,3)" fg:x="531" fg:w="1"/><text x="42.5945%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.3445%" y="309" width="0.0797%" height="15" fill="rgb(211,170,49)" fg:x="531" fg:w="1"/><text x="42.5945%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="42.4242%" y="485" width="0.1595%" height="15" fill="rgb(253,139,18)" fg:x="532" fg:w="2"/><text x="42.6742%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="42.4242%" y="469" width="0.1595%" height="15" fill="rgb(222,4,43)" fg:x="532" fg:w="2"/><text x="42.6742%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="42.4242%" y="453" width="0.1595%" height="15" fill="rgb(207,205,12)" fg:x="532" fg:w="2"/><text x="42.6742%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="42.4242%" y="437" width="0.1595%" height="15" fill="rgb(216,159,46)" fg:x="532" fg:w="2"/><text x="42.6742%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.4242%" y="421" width="0.1595%" height="15" fill="rgb(236,115,1)" fg:x="532" fg:w="2"/><text x="42.6742%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.4242%" y="405" width="0.1595%" height="15" fill="rgb(251,35,33)" fg:x="532" fg:w="2"/><text x="42.6742%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="42.4242%" y="389" width="0.1595%" height="15" fill="rgb(248,62,51)" fg:x="532" fg:w="2"/><text x="42.6742%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="42.4242%" y="373" width="0.1595%" height="15" fill="rgb(254,180,19)" fg:x="532" fg:w="2"/><text x="42.6742%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.4242%" y="357" width="0.1595%" height="15" fill="rgb(217,100,32)" fg:x="532" fg:w="2"/><text x="42.6742%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.4242%" y="341" width="0.1595%" height="15" fill="rgb(224,71,22)" fg:x="532" fg:w="2"/><text x="42.6742%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="42.4242%" y="325" width="0.1595%" height="15" fill="rgb(251,185,33)" fg:x="532" fg:w="2"/><text x="42.6742%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="42.4242%" y="309" width="0.1595%" height="15" fill="rgb(209,75,48)" fg:x="532" fg:w="2"/><text x="42.6742%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.4242%" y="293" width="0.1595%" height="15" fill="rgb(253,190,16)" fg:x="532" fg:w="2"/><text x="42.6742%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.4242%" y="277" width="0.1595%" height="15" fill="rgb(226,140,1)" fg:x="532" fg:w="2"/><text x="42.6742%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="42.4242%" y="261" width="0.1595%" height="15" fill="rgb(206,75,30)" fg:x="532" fg:w="2"/><text x="42.6742%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="42.4242%" y="245" width="0.1595%" height="15" fill="rgb(231,208,37)" fg:x="532" fg:w="2"/><text x="42.6742%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="42.4242%" y="229" width="0.1595%" height="15" fill="rgb(238,136,40)" fg:x="532" fg:w="2"/><text x="42.6742%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="42.4242%" y="213" width="0.1595%" height="15" fill="rgb(247,137,17)" fg:x="532" fg:w="2"/><text x="42.6742%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="42.4242%" y="197" width="0.1595%" height="15" fill="rgb(240,60,40)" fg:x="532" fg:w="2"/><text x="42.6742%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="42.4242%" y="181" width="0.1595%" height="15" fill="rgb(236,68,50)" fg:x="532" fg:w="2"/><text x="42.6742%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="42.4242%" y="165" width="0.1595%" height="15" fill="rgb(230,42,12)" fg:x="532" fg:w="2"/><text x="42.6742%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="42.4242%" y="149" width="0.1595%" height="15" fill="rgb(219,16,16)" fg:x="532" fg:w="2"/><text x="42.6742%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="42.4242%" y="133" width="0.1595%" height="15" fill="rgb(220,38,35)" fg:x="532" fg:w="2"/><text x="42.6742%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="42.4242%" y="117" width="0.1595%" height="15" fill="rgb(228,33,1)" fg:x="532" fg:w="2"/><text x="42.6742%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="42.4242%" y="101" width="0.1595%" height="15" fill="rgb(241,46,31)" fg:x="532" fg:w="2"/><text x="42.6742%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="42.4242%" y="85" width="0.1595%" height="15" fill="rgb(232,58,20)" fg:x="532" fg:w="2"/><text x="42.6742%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="42.4242%" y="69" width="0.1595%" height="15" fill="rgb(206,228,53)" fg:x="532" fg:w="2"/><text x="42.6742%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="42.4242%" y="53" width="0.1595%" height="15" fill="rgb(206,88,33)" fg:x="532" fg:w="2"/><text x="42.6742%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="42.4242%" y="37" width="0.1595%" height="15" fill="rgb(238,69,7)" fg:x="532" fg:w="2"/><text x="42.6742%" y="47.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.5837%" y="421" width="0.0797%" height="15" fill="rgb(250,21,46)" fg:x="534" fg:w="1"/><text x="42.8337%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5837%" y="405" width="0.0797%" height="15" fill="rgb(215,212,21)" fg:x="534" fg:w="1"/><text x="42.8337%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="42.5837%" y="453" width="0.1595%" height="15" fill="rgb(211,35,12)" fg:x="534" fg:w="2"/><text x="42.8337%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="42.5837%" y="437" width="0.1595%" height="15" fill="rgb(231,184,16)" fg:x="534" fg:w="2"/><text x="42.8337%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.6635%" y="421" width="0.0797%" height="15" fill="rgb(242,140,15)" fg:x="535" fg:w="1"/><text x="42.9135%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="42.7432%" y="437" width="0.0797%" height="15" fill="rgb(220,37,14)" fg:x="536" fg:w="1"/><text x="42.9932%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="42.5837%" y="485" width="0.3190%" height="15" fill="rgb(223,146,22)" fg:x="534" fg:w="4"/><text x="42.8337%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="42.5837%" y="469" width="0.3190%" height="15" fill="rgb(216,132,15)" fg:x="534" fg:w="4"/><text x="42.8337%" y="479.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="42.7432%" y="453" width="0.1595%" height="15" fill="rgb(248,83,5)" fg:x="536" fg:w="2"/><text x="42.9932%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.8230%" y="437" width="0.0797%" height="15" fill="rgb(231,206,48)" fg:x="537" fg:w="1"/><text x="43.0730%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="42.8230%" y="421" width="0.0797%" height="15" fill="rgb(253,185,37)" fg:x="537" fg:w="1"/><text x="43.0730%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.8230%" y="405" width="0.0797%" height="15" fill="rgb(208,21,44)" fg:x="537" fg:w="1"/><text x="43.0730%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="42.8230%" y="389" width="0.0797%" height="15" fill="rgb(236,125,4)" fg:x="537" fg:w="1"/><text x="43.0730%" y="399.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="42.9027%" y="437" width="0.0797%" height="15" fill="rgb(226,134,25)" fg:x="538" fg:w="1"/><text x="43.1527%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9027%" y="421" width="0.0797%" height="15" fill="rgb(250,201,12)" fg:x="538" fg:w="1"/><text x="43.1527%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9027%" y="405" width="0.0797%" height="15" fill="rgb(225,92,18)" fg:x="538" fg:w="1"/><text x="43.1527%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9825%" y="405" width="0.0797%" height="15" fill="rgb(227,35,22)" fg:x="539" fg:w="1"/><text x="43.2325%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9825%" y="389" width="0.0797%" height="15" fill="rgb(214,180,52)" fg:x="539" fg:w="1"/><text x="43.2325%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9825%" y="373" width="0.0797%" height="15" fill="rgb(233,55,38)" fg:x="539" fg:w="1"/><text x="43.2325%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9825%" y="357" width="0.0797%" height="15" fill="rgb(249,171,43)" fg:x="539" fg:w="1"/><text x="43.2325%" y="367.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="42.9825%" y="437" width="0.1595%" height="15" fill="rgb(239,87,2)" fg:x="539" fg:w="2"/><text x="43.2325%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="42.9825%" y="421" width="0.1595%" height="15" fill="rgb(248,141,5)" fg:x="539" fg:w="2"/><text x="43.2325%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0622%" y="405" width="0.0797%" height="15" fill="rgb(238,33,42)" fg:x="540" fg:w="1"/><text x="43.3122%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0622%" y="389" width="0.0797%" height="15" fill="rgb(231,57,19)" fg:x="540" fg:w="1"/><text x="43.3122%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.0622%" y="373" width="0.0797%" height="15" fill="rgb(214,78,53)" fg:x="540" fg:w="1"/><text x="43.3122%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0622%" y="357" width="0.0797%" height="15" fill="rgb(206,132,29)" fg:x="540" fg:w="1"/><text x="43.3122%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="43.0622%" y="341" width="0.0797%" height="15" fill="rgb(248,174,31)" fg:x="540" fg:w="1"/><text x="43.3122%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.0622%" y="325" width="0.0797%" height="15" fill="rgb(221,87,13)" fg:x="540" fg:w="1"/><text x="43.3122%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2217%" y="405" width="0.0797%" height="15" fill="rgb(223,197,17)" fg:x="542" fg:w="1"/><text x="43.4717%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2217%" y="389" width="0.0797%" height="15" fill="rgb(220,144,50)" fg:x="542" fg:w="1"/><text x="43.4717%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2217%" y="373" width="0.0797%" height="15" fill="rgb(244,201,11)" fg:x="542" fg:w="1"/><text x="43.4717%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.2217%" y="357" width="0.0797%" height="15" fill="rgb(249,81,34)" fg:x="542" fg:w="1"/><text x="43.4717%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2217%" y="341" width="0.0797%" height="15" fill="rgb(205,161,12)" fg:x="542" fg:w="1"/><text x="43.4717%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="42.9027%" y="469" width="0.4785%" height="15" fill="rgb(252,139,50)" fg:x="538" fg:w="6"/><text x="43.1527%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="42.9027%" y="453" width="0.4785%" height="15" fill="rgb(205,169,14)" fg:x="538" fg:w="6"/><text x="43.1527%" y="463.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="43.1419%" y="437" width="0.2392%" height="15" fill="rgb(248,198,33)" fg:x="541" fg:w="3"/><text x="43.3919%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="43.1419%" y="421" width="0.2392%" height="15" fill="rgb(236,23,21)" fg:x="541" fg:w="3"/><text x="43.3919%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="43.3014%" y="405" width="0.0797%" height="15" fill="rgb(231,13,38)" fg:x="543" fg:w="1"/><text x="43.5514%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.3014%" y="389" width="0.0797%" height="15" fill="rgb(239,139,21)" fg:x="543" fg:w="1"/><text x="43.5514%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="43.3014%" y="373" width="0.0797%" height="15" fill="rgb(222,164,45)" fg:x="543" fg:w="1"/><text x="43.5514%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.3014%" y="357" width="0.0797%" height="15" fill="rgb(230,52,27)" fg:x="543" fg:w="1"/><text x="43.5514%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="43.3014%" y="341" width="0.0797%" height="15" fill="rgb(227,143,42)" fg:x="543" fg:w="1"/><text x="43.5514%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="43.3014%" y="325" width="0.0797%" height="15" fill="rgb(249,127,1)" fg:x="543" fg:w="1"/><text x="43.5514%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.3014%" y="309" width="0.0797%" height="15" fill="rgb(243,107,26)" fg:x="543" fg:w="1"/><text x="43.5514%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.3014%" y="293" width="0.0797%" height="15" fill="rgb(225,7,45)" fg:x="543" fg:w="1"/><text x="43.5514%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="42.4242%" y="501" width="1.0367%" height="15" fill="rgb(241,88,38)" fg:x="532" fg:w="13"/><text x="42.6742%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="42.9027%" y="485" width="0.5582%" height="15" fill="rgb(226,121,9)" fg:x="538" fg:w="7"/><text x="43.1527%" y="495.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="43.3812%" y="469" width="0.0797%" height="15" fill="rgb(253,60,29)" fg:x="544" fg:w="1"/><text x="43.6312%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.4609%" y="485" width="0.0797%" height="15" fill="rgb(244,181,39)" fg:x="545" fg:w="1"/><text x="43.7109%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.5407%" y="453" width="0.0797%" height="15" fill="rgb(252,203,31)" fg:x="546" fg:w="1"/><text x="43.7907%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="43.5407%" y="437" width="0.0797%" height="15" fill="rgb(224,120,8)" fg:x="546" fg:w="1"/><text x="43.7907%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="43.5407%" y="421" width="0.0797%" height="15" fill="rgb(205,171,54)" fg:x="546" fg:w="1"/><text x="43.7907%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.5407%" y="405" width="0.0797%" height="15" fill="rgb(235,89,11)" fg:x="546" fg:w="1"/><text x="43.7907%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.5407%" y="389" width="0.0797%" height="15" fill="rgb(212,180,28)" fg:x="546" fg:w="1"/><text x="43.7907%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.5407%" y="373" width="0.0797%" height="15" fill="rgb(247,84,49)" fg:x="546" fg:w="1"/><text x="43.7907%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.5407%" y="357" width="0.0797%" height="15" fill="rgb(236,187,52)" fg:x="546" fg:w="1"/><text x="43.7907%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6204%" y="437" width="0.0797%" height="15" fill="rgb(227,24,15)" fg:x="547" fg:w="1"/><text x="43.8704%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6204%" y="421" width="0.0797%" height="15" fill="rgb(227,211,13)" fg:x="547" fg:w="1"/><text x="43.8704%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.6204%" y="405" width="0.0797%" height="15" fill="rgb(245,52,14)" fg:x="547" fg:w="1"/><text x="43.8704%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.6204%" y="389" width="0.0797%" height="15" fill="rgb(225,185,13)" fg:x="547" fg:w="1"/><text x="43.8704%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.6204%" y="373" width="0.0797%" height="15" fill="rgb(217,160,29)" fg:x="547" fg:w="1"/><text x="43.8704%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.6204%" y="357" width="0.0797%" height="15" fill="rgb(216,115,53)" fg:x="547" fg:w="1"/><text x="43.8704%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.6204%" y="341" width="0.0797%" height="15" fill="rgb(236,99,5)" fg:x="547" fg:w="1"/><text x="43.8704%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.7002%" y="277" width="0.0797%" height="15" fill="rgb(222,60,38)" fg:x="548" fg:w="1"/><text x="43.9502%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.7799%" y="277" width="0.0797%" height="15" fill="rgb(212,82,22)" fg:x="549" fg:w="1"/><text x="44.0299%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.7799%" y="261" width="0.0797%" height="15" fill="rgb(214,48,28)" fg:x="549" fg:w="1"/><text x="44.0299%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="43.5407%" y="485" width="0.3987%" height="15" fill="rgb(245,196,50)" fg:x="546" fg:w="5"/><text x="43.7907%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="43.5407%" y="469" width="0.3987%" height="15" fill="rgb(225,159,46)" fg:x="546" fg:w="5"/><text x="43.7907%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="43.6204%" y="453" width="0.3190%" height="15" fill="rgb(207,195,48)" fg:x="547" fg:w="4"/><text x="43.8704%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="43.7002%" y="437" width="0.2392%" height="15" fill="rgb(240,73,3)" fg:x="548" fg:w="3"/><text x="43.9502%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="43.7002%" y="421" width="0.2392%" height="15" fill="rgb(245,57,23)" fg:x="548" fg:w="3"/><text x="43.9502%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.7002%" y="405" width="0.2392%" height="15" fill="rgb(240,75,18)" fg:x="548" fg:w="3"/><text x="43.9502%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.7002%" y="389" width="0.2392%" height="15" fill="rgb(238,168,12)" fg:x="548" fg:w="3"/><text x="43.9502%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.7002%" y="373" width="0.2392%" height="15" fill="rgb(226,20,40)" fg:x="548" fg:w="3"/><text x="43.9502%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.7002%" y="357" width="0.2392%" height="15" fill="rgb(224,130,35)" fg:x="548" fg:w="3"/><text x="43.9502%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="43.7002%" y="341" width="0.2392%" height="15" fill="rgb(225,63,41)" fg:x="548" fg:w="3"/><text x="43.9502%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.7002%" y="325" width="0.2392%" height="15" fill="rgb(219,3,3)" fg:x="548" fg:w="3"/><text x="43.9502%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.7002%" y="309" width="0.2392%" height="15" fill="rgb(218,157,4)" fg:x="548" fg:w="3"/><text x="43.9502%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.7002%" y="293" width="0.2392%" height="15" fill="rgb(232,76,36)" fg:x="548" fg:w="3"/><text x="43.9502%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="43.8596%" y="277" width="0.0797%" height="15" fill="rgb(247,36,0)" fg:x="550" fg:w="1"/><text x="44.1096%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="43.9394%" y="485" width="0.1595%" height="15" fill="rgb(205,2,34)" fg:x="551" fg:w="2"/><text x="44.1894%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.9394%" y="469" width="0.1595%" height="15" fill="rgb(239,136,13)" fg:x="551" fg:w="2"/><text x="44.1894%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="44.0191%" y="453" width="0.0797%" height="15" fill="rgb(253,122,12)" fg:x="552" fg:w="1"/><text x="44.2691%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.0989%" y="469" width="0.0797%" height="15" fill="rgb(222,174,7)" fg:x="553" fg:w="1"/><text x="44.3489%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="44.0989%" y="453" width="0.0797%" height="15" fill="rgb(208,191,42)" fg:x="553" fg:w="1"/><text x="44.3489%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1786%" y="469" width="0.0797%" height="15" fill="rgb(237,212,15)" fg:x="554" fg:w="1"/><text x="44.4286%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.1786%" y="453" width="0.0797%" height="15" fill="rgb(215,65,20)" fg:x="554" fg:w="1"/><text x="44.4286%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="44.1786%" y="437" width="0.0797%" height="15" fill="rgb(232,103,11)" fg:x="554" fg:w="1"/><text x="44.4286%" y="447.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="44.2584%" y="469" width="0.0797%" height="15" fill="rgb(235,148,18)" fg:x="555" fg:w="1"/><text x="44.5084%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.2584%" y="453" width="0.0797%" height="15" fill="rgb(240,173,7)" fg:x="555" fg:w="1"/><text x="44.5084%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2584%" y="437" width="0.0797%" height="15" fill="rgb(228,182,25)" fg:x="555" fg:w="1"/><text x="44.5084%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="44.0989%" y="485" width="0.3190%" height="15" fill="rgb(247,3,52)" fg:x="553" fg:w="4"/><text x="44.3489%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="44.3381%" y="469" width="0.0797%" height="15" fill="rgb(226,155,8)" fg:x="556" fg:w="1"/><text x="44.5881%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.3381%" y="453" width="0.0797%" height="15" fill="rgb(243,195,38)" fg:x="556" fg:w="1"/><text x="44.5881%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="44.3381%" y="437" width="0.0797%" height="15" fill="rgb(254,181,33)" fg:x="556" fg:w="1"/><text x="44.5881%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.3381%" y="421" width="0.0797%" height="15" fill="rgb(232,98,23)" fg:x="556" fg:w="1"/><text x="44.5881%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.3381%" y="405" width="0.0797%" height="15" fill="rgb(205,23,10)" fg:x="556" fg:w="1"/><text x="44.5881%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="44.4976%" y="421" width="0.0797%" height="15" fill="rgb(212,124,38)" fg:x="558" fg:w="1"/><text x="44.7476%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.5774%" y="421" width="0.0797%" height="15" fill="rgb(228,207,2)" fg:x="559" fg:w="1"/><text x="44.8274%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6571%" y="373" width="0.0797%" height="15" fill="rgb(215,120,22)" fg:x="560" fg:w="1"/><text x="44.9071%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6571%" y="357" width="0.0797%" height="15" fill="rgb(251,172,33)" fg:x="560" fg:w="1"/><text x="44.9071%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6571%" y="341" width="0.0797%" height="15" fill="rgb(250,83,2)" fg:x="560" fg:w="1"/><text x="44.9071%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6571%" y="325" width="0.0797%" height="15" fill="rgb(210,132,53)" fg:x="560" fg:w="1"/><text x="44.9071%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6571%" y="309" width="0.0797%" height="15" fill="rgb(221,208,36)" fg:x="560" fg:w="1"/><text x="44.9071%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.6571%" y="389" width="0.1595%" height="15" fill="rgb(205,192,46)" fg:x="560" fg:w="2"/><text x="44.9071%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7368%" y="373" width="0.0797%" height="15" fill="rgb(223,163,14)" fg:x="561" fg:w="1"/><text x="44.9868%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.8166%" y="389" width="0.0797%" height="15" fill="rgb(218,41,28)" fg:x="562" fg:w="1"/><text x="45.0666%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.8166%" y="373" width="0.0797%" height="15" fill="rgb(235,104,10)" fg:x="562" fg:w="1"/><text x="45.0666%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.8166%" y="357" width="0.0797%" height="15" fill="rgb(246,17,4)" fg:x="562" fg:w="1"/><text x="45.0666%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="44.4976%" y="437" width="0.4785%" height="15" fill="rgb(240,7,16)" fg:x="558" fg:w="6"/><text x="44.7476%" y="447.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="44.6571%" y="421" width="0.3190%" height="15" fill="rgb(213,160,23)" fg:x="560" fg:w="4"/><text x="44.9071%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="44.6571%" y="405" width="0.3190%" height="15" fill="rgb(251,179,49)" fg:x="560" fg:w="4"/><text x="44.9071%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.8963%" y="389" width="0.0797%" height="15" fill="rgb(247,198,10)" fg:x="563" fg:w="1"/><text x="45.1463%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8963%" y="373" width="0.0797%" height="15" fill="rgb(220,65,29)" fg:x="563" fg:w="1"/><text x="45.1463%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.8963%" y="357" width="0.0797%" height="15" fill="rgb(237,171,28)" fg:x="563" fg:w="1"/><text x="45.1463%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8963%" y="341" width="0.0797%" height="15" fill="rgb(228,44,26)" fg:x="563" fg:w="1"/><text x="45.1463%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.8963%" y="325" width="0.0797%" height="15" fill="rgb(216,210,27)" fg:x="563" fg:w="1"/><text x="45.1463%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.8963%" y="309" width="0.0797%" height="15" fill="rgb(252,10,17)" fg:x="563" fg:w="1"/><text x="45.1463%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9761%" y="325" width="0.0797%" height="15" fill="rgb(214,172,30)" fg:x="564" fg:w="1"/><text x="45.2261%" y="335.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (311 samples, 24.80%)</title><rect x="20.3349%" y="533" width="24.8006%" height="15" fill="rgb(253,130,48)" fg:x="255" fg:w="311"/><text x="20.5849%" y="543.50">plugins_core::build::BuildSurroundings::..</text></g><g><title>plugins_core::build::Build::occupying (34 samples, 2.71%)</title><rect x="42.4242%" y="517" width="2.7113%" height="15" fill="rgb(226,99,43)" fg:x="532" fg:w="34"/><text x="42.6742%" y="527.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (21 samples, 1.67%)</title><rect x="43.4609%" y="501" width="1.6746%" height="15" fill="rgb(239,111,26)" fg:x="545" fg:w="21"/><text x="43.7109%" y="511.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (9 samples, 0.72%)</title><rect x="44.4179%" y="485" width="0.7177%" height="15" fill="rgb(240,27,53)" fg:x="557" fg:w="9"/><text x="44.6679%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="44.4179%" y="469" width="0.7177%" height="15" fill="rgb(254,163,12)" fg:x="557" fg:w="9"/><text x="44.6679%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="44.4179%" y="453" width="0.7177%" height="15" fill="rgb(225,51,48)" fg:x="557" fg:w="9"/><text x="44.6679%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="44.9761%" y="437" width="0.1595%" height="15" fill="rgb(205,19,32)" fg:x="564" fg:w="2"/><text x="45.2261%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="44.9761%" y="421" width="0.1595%" height="15" fill="rgb(218,119,26)" fg:x="564" fg:w="2"/><text x="45.2261%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="44.9761%" y="405" width="0.1595%" height="15" fill="rgb(231,173,33)" fg:x="564" fg:w="2"/><text x="45.2261%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.9761%" y="389" width="0.1595%" height="15" fill="rgb(241,100,29)" fg:x="564" fg:w="2"/><text x="45.2261%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="44.9761%" y="373" width="0.1595%" height="15" fill="rgb(250,194,34)" fg:x="564" fg:w="2"/><text x="45.2261%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.9761%" y="357" width="0.1595%" height="15" fill="rgb(215,23,50)" fg:x="564" fg:w="2"/><text x="45.2261%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.9761%" y="341" width="0.1595%" height="15" fill="rgb(206,49,37)" fg:x="564" fg:w="2"/><text x="45.2261%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.0558%" y="325" width="0.0797%" height="15" fill="rgb(247,39,21)" fg:x="565" fg:w="1"/><text x="45.3058%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0558%" y="309" width="0.0797%" height="15" fill="rgb(209,220,15)" fg:x="565" fg:w="1"/><text x="45.3058%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.2951%" y="437" width="0.0797%" height="15" fill="rgb(206,41,33)" fg:x="568" fg:w="1"/><text x="45.5451%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.2951%" y="421" width="0.0797%" height="15" fill="rgb(221,225,45)" fg:x="568" fg:w="1"/><text x="45.5451%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="45.3748%" y="437" width="0.1595%" height="15" fill="rgb(216,27,18)" fg:x="569" fg:w="2"/><text x="45.6248%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="45.2951%" y="485" width="0.3987%" height="15" fill="rgb(250,193,34)" fg:x="568" fg:w="5"/><text x="45.5451%" y="495.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="45.2951%" y="469" width="0.3987%" height="15" fill="rgb(227,215,20)" fg:x="568" fg:w="5"/><text x="45.5451%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="45.2951%" y="453" width="0.3987%" height="15" fill="rgb(242,211,27)" fg:x="568" fg:w="5"/><text x="45.5451%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.5343%" y="437" width="0.1595%" height="15" fill="rgb(229,190,30)" fg:x="571" fg:w="2"/><text x="45.7843%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.5343%" y="421" width="0.1595%" height="15" fill="rgb(253,31,29)" fg:x="571" fg:w="2"/><text x="45.7843%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="45.6938%" y="485" width="0.0797%" height="15" fill="rgb(229,177,52)" fg:x="573" fg:w="1"/><text x="45.9438%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="45.6938%" y="469" width="0.0797%" height="15" fill="rgb(226,88,8)" fg:x="573" fg:w="1"/><text x="45.9438%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.6938%" y="453" width="0.0797%" height="15" fill="rgb(214,55,27)" fg:x="573" fg:w="1"/><text x="45.9438%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.6938%" y="437" width="0.0797%" height="15" fill="rgb(233,202,5)" fg:x="573" fg:w="1"/><text x="45.9438%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8533%" y="405" width="0.0797%" height="15" fill="rgb(251,49,30)" fg:x="575" fg:w="1"/><text x="46.1033%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8533%" y="389" width="0.0797%" height="15" fill="rgb(235,18,52)" fg:x="575" fg:w="1"/><text x="46.1033%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8533%" y="373" width="0.0797%" height="15" fill="rgb(250,111,51)" fg:x="575" fg:w="1"/><text x="46.1033%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8533%" y="357" width="0.0797%" height="15" fill="rgb(218,13,25)" fg:x="575" fg:w="1"/><text x="46.1033%" y="367.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="45.8533%" y="437" width="0.2392%" height="15" fill="rgb(248,96,7)" fg:x="575" fg:w="3"/><text x="46.1033%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="45.8533%" y="421" width="0.2392%" height="15" fill="rgb(217,31,15)" fg:x="575" fg:w="3"/><text x="46.1033%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.9330%" y="405" width="0.1595%" height="15" fill="rgb(228,59,49)" fg:x="576" fg:w="2"/><text x="46.1830%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9330%" y="389" width="0.1595%" height="15" fill="rgb(210,152,38)" fg:x="576" fg:w="2"/><text x="46.1830%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.9330%" y="373" width="0.1595%" height="15" fill="rgb(206,71,11)" fg:x="576" fg:w="2"/><text x="46.1830%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9330%" y="357" width="0.1595%" height="15" fill="rgb(244,199,5)" fg:x="576" fg:w="2"/><text x="46.1830%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="45.9330%" y="341" width="0.1595%" height="15" fill="rgb(253,49,1)" fg:x="576" fg:w="2"/><text x="46.1830%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9330%" y="325" width="0.1595%" height="15" fill="rgb(225,206,40)" fg:x="576" fg:w="2"/><text x="46.1830%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.0128%" y="309" width="0.0797%" height="15" fill="rgb(243,116,47)" fg:x="577" fg:w="1"/><text x="46.2628%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.0128%" y="293" width="0.0797%" height="15" fill="rgb(219,225,16)" fg:x="577" fg:w="1"/><text x="46.2628%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="45.2153%" y="501" width="1.0367%" height="15" fill="rgb(233,29,47)" fg:x="567" fg:w="13"/><text x="45.4653%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="45.7735%" y="485" width="0.4785%" height="15" fill="rgb(250,179,18)" fg:x="574" fg:w="6"/><text x="46.0235%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="45.7735%" y="469" width="0.4785%" height="15" fill="rgb(215,176,6)" fg:x="574" fg:w="6"/><text x="46.0235%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="45.7735%" y="453" width="0.4785%" height="15" fill="rgb(214,117,39)" fg:x="574" fg:w="6"/><text x="46.0235%" y="463.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="46.0925%" y="437" width="0.1595%" height="15" fill="rgb(247,183,36)" fg:x="578" fg:w="2"/><text x="46.3425%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="46.0925%" y="421" width="0.1595%" height="15" fill="rgb(237,200,3)" fg:x="578" fg:w="2"/><text x="46.3425%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="46.0925%" y="405" width="0.1595%" height="15" fill="rgb(212,220,24)" fg:x="578" fg:w="2"/><text x="46.3425%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.1722%" y="389" width="0.0797%" height="15" fill="rgb(245,216,20)" fg:x="579" fg:w="1"/><text x="46.4222%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="46.1722%" y="373" width="0.0797%" height="15" fill="rgb(219,124,7)" fg:x="579" fg:w="1"/><text x="46.4222%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.1722%" y="357" width="0.0797%" height="15" fill="rgb(227,167,8)" fg:x="579" fg:w="1"/><text x="46.4222%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="46.1722%" y="341" width="0.0797%" height="15" fill="rgb(241,37,2)" fg:x="579" fg:w="1"/><text x="46.4222%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="46.1722%" y="325" width="0.0797%" height="15" fill="rgb(238,134,33)" fg:x="579" fg:w="1"/><text x="46.4222%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.1722%" y="309" width="0.0797%" height="15" fill="rgb(248,48,27)" fg:x="579" fg:w="1"/><text x="46.4222%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="46.2520%" y="485" width="0.0797%" height="15" fill="rgb(212,14,16)" fg:x="580" fg:w="1"/><text x="46.5020%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="46.2520%" y="469" width="0.0797%" height="15" fill="rgb(217,205,37)" fg:x="580" fg:w="1"/><text x="46.5020%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="46.2520%" y="453" width="0.0797%" height="15" fill="rgb(233,185,47)" fg:x="580" fg:w="1"/><text x="46.5020%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="46.2520%" y="437" width="0.0797%" height="15" fill="rgb(244,88,8)" fg:x="580" fg:w="1"/><text x="46.5020%" y="447.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="46.2520%" y="421" width="0.0797%" height="15" fill="rgb(213,0,20)" fg:x="580" fg:w="1"/><text x="46.5020%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="46.2520%" y="405" width="0.0797%" height="15" fill="rgb(238,159,36)" fg:x="580" fg:w="1"/><text x="46.5020%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.2520%" y="389" width="0.0797%" height="15" fill="rgb(253,173,17)" fg:x="580" fg:w="1"/><text x="46.5020%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.2520%" y="373" width="0.0797%" height="15" fill="rgb(221,23,28)" fg:x="580" fg:w="1"/><text x="46.5020%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.2520%" y="357" width="0.0797%" height="15" fill="rgb(218,113,15)" fg:x="580" fg:w="1"/><text x="46.5020%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.2520%" y="341" width="0.0797%" height="15" fill="rgb(233,58,3)" fg:x="580" fg:w="1"/><text x="46.5020%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.2520%" y="325" width="0.0797%" height="15" fill="rgb(250,46,35)" fg:x="580" fg:w="1"/><text x="46.5020%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.2520%" y="309" width="0.0797%" height="15" fill="rgb(210,169,11)" fg:x="580" fg:w="1"/><text x="46.5020%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="46.3317%" y="469" width="0.0797%" height="15" fill="rgb(246,88,19)" fg:x="581" fg:w="1"/><text x="46.5817%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="46.3317%" y="453" width="0.0797%" height="15" fill="rgb(206,81,49)" fg:x="581" fg:w="1"/><text x="46.5817%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.3317%" y="437" width="0.0797%" height="15" fill="rgb(232,144,18)" fg:x="581" fg:w="1"/><text x="46.5817%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="46.2520%" y="501" width="0.2392%" height="15" fill="rgb(235,2,27)" fg:x="580" fg:w="3"/><text x="46.5020%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="46.3317%" y="485" width="0.1595%" height="15" fill="rgb(239,157,39)" fg:x="581" fg:w="2"/><text x="46.5817%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="46.4115%" y="469" width="0.0797%" height="15" fill="rgb(220,11,17)" fg:x="582" fg:w="1"/><text x="46.6615%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="46.4115%" y="453" width="0.0797%" height="15" fill="rgb(243,94,50)" fg:x="582" fg:w="1"/><text x="46.6615%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.4115%" y="437" width="0.0797%" height="15" fill="rgb(218,22,0)" fg:x="582" fg:w="1"/><text x="46.6615%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (18 samples, 1.44%)</title><rect x="45.1356%" y="533" width="1.4354%" height="15" fill="rgb(249,70,21)" fg:x="566" fg:w="18"/><text x="45.3856%" y="543.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.44%)</title><rect x="45.1356%" y="517" width="1.4354%" height="15" fill="rgb(245,111,46)" fg:x="566" fg:w="18"/><text x="45.3856%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="46.4912%" y="501" width="0.0797%" height="15" fill="rgb(244,183,12)" fg:x="583" fg:w="1"/><text x="46.7412%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="46.4912%" y="485" width="0.0797%" height="15" fill="rgb(207,117,0)" fg:x="583" fg:w="1"/><text x="46.7412%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="46.4912%" y="469" width="0.0797%" height="15" fill="rgb(206,20,43)" fg:x="583" fg:w="1"/><text x="46.7412%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="46.4912%" y="453" width="0.0797%" height="15" fill="rgb(221,104,11)" fg:x="583" fg:w="1"/><text x="46.7412%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="46.4912%" y="437" width="0.0797%" height="15" fill="rgb(254,36,50)" fg:x="583" fg:w="1"/><text x="46.7412%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.4912%" y="421" width="0.0797%" height="15" fill="rgb(252,17,15)" fg:x="583" fg:w="1"/><text x="46.7412%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="46.4912%" y="405" width="0.0797%" height="15" fill="rgb(219,129,43)" fg:x="583" fg:w="1"/><text x="46.7412%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.4912%" y="389" width="0.0797%" height="15" fill="rgb(205,34,45)" fg:x="583" fg:w="1"/><text x="46.7412%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="46.4912%" y="373" width="0.0797%" height="15" fill="rgb(251,201,32)" fg:x="583" fg:w="1"/><text x="46.7412%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="46.4912%" y="357" width="0.0797%" height="15" fill="rgb(205,56,0)" fg:x="583" fg:w="1"/><text x="46.7412%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="46.4912%" y="341" width="0.0797%" height="15" fill="rgb(211,193,27)" fg:x="583" fg:w="1"/><text x="46.7412%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="46.4912%" y="325" width="0.0797%" height="15" fill="rgb(231,100,42)" fg:x="583" fg:w="1"/><text x="46.7412%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="46.7305%" y="485" width="0.0797%" height="15" fill="rgb(245,85,27)" fg:x="586" fg:w="1"/><text x="46.9805%" y="495.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="46.7305%" y="469" width="0.0797%" height="15" fill="rgb(241,76,24)" fg:x="586" fg:w="1"/><text x="46.9805%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7305%" y="453" width="0.0797%" height="15" fill="rgb(249,157,15)" fg:x="586" fg:w="1"/><text x="46.9805%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="46.6507%" y="501" width="0.2392%" height="15" fill="rgb(222,218,25)" fg:x="585" fg:w="3"/><text x="46.9007%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="46.8102%" y="485" width="0.0797%" height="15" fill="rgb(252,156,52)" fg:x="587" fg:w="1"/><text x="47.0602%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="46.8102%" y="469" width="0.0797%" height="15" fill="rgb(211,185,7)" fg:x="587" fg:w="1"/><text x="47.0602%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.8102%" y="453" width="0.0797%" height="15" fill="rgb(234,108,24)" fg:x="587" fg:w="1"/><text x="47.0602%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.8102%" y="437" width="0.0797%" height="15" fill="rgb(227,218,2)" fg:x="587" fg:w="1"/><text x="47.0602%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.8102%" y="421" width="0.0797%" height="15" fill="rgb(224,0,36)" fg:x="587" fg:w="1"/><text x="47.0602%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="46.8102%" y="405" width="0.0797%" height="15" fill="rgb(233,201,10)" fg:x="587" fg:w="1"/><text x="47.0602%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="46.8102%" y="389" width="0.0797%" height="15" fill="rgb(252,209,14)" fg:x="587" fg:w="1"/><text x="47.0602%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.8102%" y="373" width="0.0797%" height="15" fill="rgb(205,93,49)" fg:x="587" fg:w="1"/><text x="47.0602%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.8102%" y="357" width="0.0797%" height="15" fill="rgb(234,116,45)" fg:x="587" fg:w="1"/><text x="47.0602%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="46.8102%" y="341" width="0.0797%" height="15" fill="rgb(248,89,35)" fg:x="587" fg:w="1"/><text x="47.0602%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="46.8102%" y="325" width="0.0797%" height="15" fill="rgb(233,167,45)" fg:x="587" fg:w="1"/><text x="47.0602%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.8102%" y="309" width="0.0797%" height="15" fill="rgb(248,228,14)" fg:x="587" fg:w="1"/><text x="47.0602%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.8102%" y="293" width="0.0797%" height="15" fill="rgb(246,91,14)" fg:x="587" fg:w="1"/><text x="47.0602%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="46.8102%" y="277" width="0.0797%" height="15" fill="rgb(227,142,5)" fg:x="587" fg:w="1"/><text x="47.0602%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.8900%" y="421" width="0.0797%" height="15" fill="rgb(221,63,33)" fg:x="588" fg:w="1"/><text x="47.1400%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8900%" y="405" width="0.0797%" height="15" fill="rgb(233,49,0)" fg:x="588" fg:w="1"/><text x="47.1400%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.8900%" y="453" width="0.1595%" height="15" fill="rgb(251,115,38)" fg:x="588" fg:w="2"/><text x="47.1400%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.8900%" y="437" width="0.1595%" height="15" fill="rgb(231,214,32)" fg:x="588" fg:w="2"/><text x="47.1400%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9697%" y="421" width="0.0797%" height="15" fill="rgb(248,73,46)" fg:x="589" fg:w="1"/><text x="47.2197%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="46.8900%" y="501" width="0.2392%" height="15" fill="rgb(237,156,4)" fg:x="588" fg:w="3"/><text x="47.1400%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="46.8900%" y="485" width="0.2392%" height="15" fill="rgb(227,132,2)" fg:x="588" fg:w="3"/><text x="47.1400%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="46.8900%" y="469" width="0.2392%" height="15" fill="rgb(248,161,9)" fg:x="588" fg:w="3"/><text x="47.1400%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.0494%" y="453" width="0.0797%" height="15" fill="rgb(238,77,38)" fg:x="590" fg:w="1"/><text x="47.2994%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.0494%" y="437" width="0.0797%" height="15" fill="rgb(222,166,40)" fg:x="590" fg:w="1"/><text x="47.2994%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.0494%" y="421" width="0.0797%" height="15" fill="rgb(214,168,45)" fg:x="590" fg:w="1"/><text x="47.2994%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.0494%" y="405" width="0.0797%" height="15" fill="rgb(226,64,37)" fg:x="590" fg:w="1"/><text x="47.2994%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="47.0494%" y="389" width="0.0797%" height="15" fill="rgb(232,210,43)" fg:x="590" fg:w="1"/><text x="47.2994%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.1292%" y="485" width="0.0797%" height="15" fill="rgb(214,76,33)" fg:x="591" fg:w="1"/><text x="47.3792%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2089%" y="421" width="0.0797%" height="15" fill="rgb(210,78,5)" fg:x="592" fg:w="1"/><text x="47.4589%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2089%" y="405" width="0.0797%" height="15" fill="rgb(211,107,37)" fg:x="592" fg:w="1"/><text x="47.4589%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2089%" y="389" width="0.0797%" height="15" fill="rgb(249,67,16)" fg:x="592" fg:w="1"/><text x="47.4589%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.2089%" y="373" width="0.0797%" height="15" fill="rgb(222,114,31)" fg:x="592" fg:w="1"/><text x="47.4589%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2089%" y="357" width="0.0797%" height="15" fill="rgb(242,118,19)" fg:x="592" fg:w="1"/><text x="47.4589%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2089%" y="341" width="0.0797%" height="15" fill="rgb(223,115,1)" fg:x="592" fg:w="1"/><text x="47.4589%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.2089%" y="325" width="0.0797%" height="15" fill="rgb(241,182,54)" fg:x="592" fg:w="1"/><text x="47.4589%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.2089%" y="309" width="0.0797%" height="15" fill="rgb(244,166,36)" fg:x="592" fg:w="1"/><text x="47.4589%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.2089%" y="293" width="0.0797%" height="15" fill="rgb(241,52,43)" fg:x="592" fg:w="1"/><text x="47.4589%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.2089%" y="277" width="0.0797%" height="15" fill="rgb(236,82,9)" fg:x="592" fg:w="1"/><text x="47.4589%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.2089%" y="261" width="0.0797%" height="15" fill="rgb(241,119,0)" fg:x="592" fg:w="1"/><text x="47.4589%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.2089%" y="245" width="0.0797%" height="15" fill="rgb(221,19,22)" fg:x="592" fg:w="1"/><text x="47.4589%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.2089%" y="229" width="0.0797%" height="15" fill="rgb(254,144,35)" fg:x="592" fg:w="1"/><text x="47.4589%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.2089%" y="213" width="0.0797%" height="15" fill="rgb(246,132,30)" fg:x="592" fg:w="1"/><text x="47.4589%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.2089%" y="197" width="0.0797%" height="15" fill="rgb(234,69,28)" fg:x="592" fg:w="1"/><text x="47.4589%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2089%" y="181" width="0.0797%" height="15" fill="rgb(219,106,47)" fg:x="592" fg:w="1"/><text x="47.4589%" y="191.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="47.2089%" y="453" width="0.1595%" height="15" fill="rgb(218,79,24)" fg:x="592" fg:w="2"/><text x="47.4589%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="47.2089%" y="437" width="0.1595%" height="15" fill="rgb(225,26,21)" fg:x="592" fg:w="2"/><text x="47.4589%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.2887%" y="421" width="0.0797%" height="15" fill="rgb(217,68,49)" fg:x="593" fg:w="1"/><text x="47.5387%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2887%" y="405" width="0.0797%" height="15" fill="rgb(220,204,28)" fg:x="593" fg:w="1"/><text x="47.5387%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.2887%" y="389" width="0.0797%" height="15" fill="rgb(237,208,43)" fg:x="593" fg:w="1"/><text x="47.5387%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2887%" y="373" width="0.0797%" height="15" fill="rgb(213,97,42)" fg:x="593" fg:w="1"/><text x="47.5387%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="47.2887%" y="357" width="0.0797%" height="15" fill="rgb(238,96,52)" fg:x="593" fg:w="1"/><text x="47.5387%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2887%" y="341" width="0.0797%" height="15" fill="rgb(228,14,13)" fg:x="593" fg:w="1"/><text x="47.5387%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.2887%" y="325" width="0.0797%" height="15" fill="rgb(219,123,13)" fg:x="593" fg:w="1"/><text x="47.5387%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2887%" y="309" width="0.0797%" height="15" fill="rgb(216,144,17)" fg:x="593" fg:w="1"/><text x="47.5387%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2887%" y="293" width="0.0797%" height="15" fill="rgb(230,228,29)" fg:x="593" fg:w="1"/><text x="47.5387%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3684%" y="341" width="0.0797%" height="15" fill="rgb(233,18,5)" fg:x="594" fg:w="1"/><text x="47.6184%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="46.6507%" y="517" width="0.8772%" height="15" fill="rgb(233,197,12)" fg:x="585" fg:w="11"/><text x="46.9007%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="47.1292%" y="501" width="0.3987%" height="15" fill="rgb(234,140,29)" fg:x="591" fg:w="5"/><text x="47.3792%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="47.2089%" y="485" width="0.3190%" height="15" fill="rgb(233,113,19)" fg:x="592" fg:w="4"/><text x="47.4589%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="47.2089%" y="469" width="0.3190%" height="15" fill="rgb(246,209,13)" fg:x="592" fg:w="4"/><text x="47.4589%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="47.3684%" y="453" width="0.1595%" height="15" fill="rgb(242,79,54)" fg:x="594" fg:w="2"/><text x="47.6184%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="47.3684%" y="437" width="0.1595%" height="15" fill="rgb(219,73,16)" fg:x="594" fg:w="2"/><text x="47.6184%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="47.3684%" y="421" width="0.1595%" height="15" fill="rgb(224,52,10)" fg:x="594" fg:w="2"/><text x="47.6184%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.3684%" y="405" width="0.1595%" height="15" fill="rgb(237,179,5)" fg:x="594" fg:w="2"/><text x="47.6184%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="47.3684%" y="389" width="0.1595%" height="15" fill="rgb(231,20,6)" fg:x="594" fg:w="2"/><text x="47.6184%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.3684%" y="373" width="0.1595%" height="15" fill="rgb(253,171,45)" fg:x="594" fg:w="2"/><text x="47.6184%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="47.3684%" y="357" width="0.1595%" height="15" fill="rgb(230,75,49)" fg:x="594" fg:w="2"/><text x="47.6184%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="47.4482%" y="341" width="0.0797%" height="15" fill="rgb(216,83,46)" fg:x="595" fg:w="1"/><text x="47.6982%" y="351.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="47.5279%" y="517" width="0.0797%" height="15" fill="rgb(236,56,9)" fg:x="596" fg:w="1"/><text x="47.7779%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="47.5279%" y="501" width="0.0797%" height="15" fill="rgb(215,28,34)" fg:x="596" fg:w="1"/><text x="47.7779%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="47.5279%" y="485" width="0.0797%" height="15" fill="rgb(230,222,20)" fg:x="596" fg:w="1"/><text x="47.7779%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="47.5279%" y="469" width="0.0797%" height="15" fill="rgb(235,209,51)" fg:x="596" fg:w="1"/><text x="47.7779%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.5279%" y="453" width="0.0797%" height="15" fill="rgb(235,167,1)" fg:x="596" fg:w="1"/><text x="47.7779%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.6874%" y="469" width="0.0797%" height="15" fill="rgb(248,220,0)" fg:x="598" fg:w="1"/><text x="47.9374%" y="479.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="47.6077%" y="485" width="0.2392%" height="15" fill="rgb(239,0,18)" fg:x="597" fg:w="3"/><text x="47.8577%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="47.7671%" y="469" width="0.0797%" height="15" fill="rgb(229,179,11)" fg:x="599" fg:w="1"/><text x="48.0171%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="47.7671%" y="453" width="0.0797%" height="15" fill="rgb(226,116,53)" fg:x="599" fg:w="1"/><text x="48.0171%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.7671%" y="437" width="0.0797%" height="15" fill="rgb(218,1,49)" fg:x="599" fg:w="1"/><text x="48.0171%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="47.7671%" y="421" width="0.0797%" height="15" fill="rgb(208,184,47)" fg:x="599" fg:w="1"/><text x="48.0171%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.7671%" y="405" width="0.0797%" height="15" fill="rgb(238,174,3)" fg:x="599" fg:w="1"/><text x="48.0171%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="47.7671%" y="389" width="0.0797%" height="15" fill="rgb(247,188,6)" fg:x="599" fg:w="1"/><text x="48.0171%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="47.7671%" y="373" width="0.0797%" height="15" fill="rgb(211,165,46)" fg:x="599" fg:w="1"/><text x="48.0171%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="47.7671%" y="357" width="0.0797%" height="15" fill="rgb(222,190,10)" fg:x="599" fg:w="1"/><text x="48.0171%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="47.7671%" y="341" width="0.0797%" height="15" fill="rgb(206,185,3)" fg:x="599" fg:w="1"/><text x="48.0171%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (17 samples, 1.36%)</title><rect x="46.5710%" y="533" width="1.3557%" height="15" fill="rgb(244,125,37)" fg:x="584" fg:w="17"/><text x="46.8210%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="47.6077%" y="517" width="0.3190%" height="15" fill="rgb(211,43,7)" fg:x="597" fg:w="4"/><text x="47.8577%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="47.6077%" y="501" width="0.3190%" height="15" fill="rgb(250,41,42)" fg:x="597" fg:w="4"/><text x="47.8577%" y="511.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="47.8469%" y="485" width="0.0797%" height="15" fill="rgb(254,54,42)" fg:x="600" fg:w="1"/><text x="48.0969%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.8469%" y="469" width="0.0797%" height="15" fill="rgb(213,71,43)" fg:x="600" fg:w="1"/><text x="48.0969%" y="479.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (543 samples, 43.30%)</title><rect x="4.7049%" y="549" width="43.3014%" height="15" fill="rgb(249,3,44)" fg:x="59" fg:w="543"/><text x="4.9549%" y="559.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="47.9266%" y="533" width="0.0797%" height="15" fill="rgb(229,80,41)" fg:x="601" fg:w="1"/><text x="48.1766%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (4 samples, 0.32%)</title><rect x="48.0064%" y="549" width="0.3190%" height="15" fill="rgb(231,25,28)" fg:x="602" fg:w="4"/><text x="48.2564%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.32%)</title><rect x="48.0064%" y="533" width="0.3190%" height="15" fill="rgb(208,79,48)" fg:x="602" fg:w="4"/><text x="48.2564%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.32%)</title><rect x="48.0064%" y="517" width="0.3190%" height="15" fill="rgb(207,196,38)" fg:x="602" fg:w="4"/><text x="48.2564%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="48.0861%" y="501" width="0.2392%" height="15" fill="rgb(228,105,49)" fg:x="603" fg:w="3"/><text x="48.3361%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.2456%" y="485" width="0.0797%" height="15" fill="rgb(237,99,15)" fg:x="605" fg:w="1"/><text x="48.4956%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="48.3254%" y="517" width="0.2392%" height="15" fill="rgb(224,207,46)" fg:x="606" fg:w="3"/><text x="48.5754%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="48.3254%" y="501" width="0.2392%" height="15" fill="rgb(249,117,50)" fg:x="606" fg:w="3"/><text x="48.5754%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.4848%" y="485" width="0.0797%" height="15" fill="rgb(248,17,13)" fg:x="608" fg:w="1"/><text x="48.7348%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="48.3254%" y="533" width="0.3190%" height="15" fill="rgb(228,187,36)" fg:x="606" fg:w="4"/><text x="48.5754%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="48.5646%" y="517" width="0.0797%" height="15" fill="rgb(234,132,20)" fg:x="609" fg:w="1"/><text x="48.8146%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="48.6443%" y="533" width="0.0797%" height="15" fill="rgb(209,170,46)" fg:x="610" fg:w="1"/><text x="48.8943%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="48.6443%" y="517" width="0.0797%" height="15" fill="rgb(237,23,19)" fg:x="610" fg:w="1"/><text x="48.8943%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.6443%" y="501" width="0.0797%" height="15" fill="rgb(227,21,26)" fg:x="610" fg:w="1"/><text x="48.8943%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.6443%" y="485" width="0.0797%" height="15" fill="rgb(222,220,48)" fg:x="610" fg:w="1"/><text x="48.8943%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="48.6443%" y="469" width="0.0797%" height="15" fill="rgb(214,9,16)" fg:x="610" fg:w="1"/><text x="48.8943%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="48.6443%" y="453" width="0.0797%" height="15" fill="rgb(209,73,30)" fg:x="610" fg:w="1"/><text x="48.8943%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="48.6443%" y="437" width="0.0797%" height="15" fill="rgb(207,20,33)" fg:x="610" fg:w="1"/><text x="48.8943%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="48.6443%" y="421" width="0.0797%" height="15" fill="rgb(219,153,12)" fg:x="610" fg:w="1"/><text x="48.8943%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.6443%" y="405" width="0.0797%" height="15" fill="rgb(235,97,25)" fg:x="610" fg:w="1"/><text x="48.8943%" y="415.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="48.6443%" y="389" width="0.0797%" height="15" fill="rgb(244,30,34)" fg:x="610" fg:w="1"/><text x="48.8943%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.6443%" y="373" width="0.0797%" height="15" fill="rgb(214,106,45)" fg:x="610" fg:w="1"/><text x="48.8943%" y="383.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="48.7241%" y="533" width="0.0797%" height="15" fill="rgb(226,41,9)" fg:x="611" fg:w="1"/><text x="48.9741%" y="543.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="48.7241%" y="517" width="0.0797%" height="15" fill="rgb(253,139,29)" fg:x="611" fg:w="1"/><text x="48.9741%" y="527.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="48.7241%" y="501" width="0.0797%" height="15" fill="rgb(213,205,39)" fg:x="611" fg:w="1"/><text x="48.9741%" y="511.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="48.7241%" y="485" width="0.0797%" height="15" fill="rgb(209,27,10)" fg:x="611" fg:w="1"/><text x="48.9741%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="48.7241%" y="469" width="0.0797%" height="15" fill="rgb(249,142,16)" fg:x="611" fg:w="1"/><text x="48.9741%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="48.7241%" y="453" width="0.0797%" height="15" fill="rgb(242,65,12)" fg:x="611" fg:w="1"/><text x="48.9741%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="48.7241%" y="437" width="0.0797%" height="15" fill="rgb(232,48,10)" fg:x="611" fg:w="1"/><text x="48.9741%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="48.8836%" y="501" width="0.0797%" height="15" fill="rgb(253,67,19)" fg:x="613" fg:w="1"/><text x="49.1336%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.8836%" y="485" width="0.0797%" height="15" fill="rgb(227,93,29)" fg:x="613" fg:w="1"/><text x="49.1336%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.8836%" y="469" width="0.0797%" height="15" fill="rgb(226,189,53)" fg:x="613" fg:w="1"/><text x="49.1336%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="48.8836%" y="453" width="0.0797%" height="15" fill="rgb(223,224,1)" fg:x="613" fg:w="1"/><text x="49.1336%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="48.9633%" y="469" width="0.0797%" height="15" fill="rgb(221,84,32)" fg:x="614" fg:w="1"/><text x="49.2133%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9633%" y="453" width="0.0797%" height="15" fill="rgb(214,189,28)" fg:x="614" fg:w="1"/><text x="49.2133%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9633%" y="437" width="0.0797%" height="15" fill="rgb(234,7,52)" fg:x="614" fg:w="1"/><text x="49.2133%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.9633%" y="421" width="0.0797%" height="15" fill="rgb(249,73,31)" fg:x="614" fg:w="1"/><text x="49.2133%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.9633%" y="405" width="0.0797%" height="15" fill="rgb(253,153,41)" fg:x="614" fg:w="1"/><text x="49.2133%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.9633%" y="389" width="0.0797%" height="15" fill="rgb(249,52,34)" fg:x="614" fg:w="1"/><text x="49.2133%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9633%" y="373" width="0.0797%" height="15" fill="rgb(236,177,47)" fg:x="614" fg:w="1"/><text x="49.2133%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9633%" y="357" width="0.0797%" height="15" fill="rgb(252,185,45)" fg:x="614" fg:w="1"/><text x="49.2133%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.9633%" y="341" width="0.0797%" height="15" fill="rgb(251,15,30)" fg:x="614" fg:w="1"/><text x="49.2133%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.9633%" y="325" width="0.0797%" height="15" fill="rgb(233,31,4)" fg:x="614" fg:w="1"/><text x="49.2133%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.9633%" y="309" width="0.0797%" height="15" fill="rgb(254,44,24)" fg:x="614" fg:w="1"/><text x="49.2133%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.9633%" y="293" width="0.0797%" height="15" fill="rgb(218,54,1)" fg:x="614" fg:w="1"/><text x="49.2133%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9633%" y="277" width="0.0797%" height="15" fill="rgb(243,209,39)" fg:x="614" fg:w="1"/><text x="49.2133%" y="287.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="48.9633%" y="501" width="0.2392%" height="15" fill="rgb(206,75,33)" fg:x="614" fg:w="3"/><text x="49.2133%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="48.9633%" y="485" width="0.2392%" height="15" fill="rgb(223,108,18)" fg:x="614" fg:w="3"/><text x="49.2133%" y="495.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="49.0431%" y="469" width="0.1595%" height="15" fill="rgb(244,89,31)" fg:x="615" fg:w="2"/><text x="49.2931%" y="479.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="49.1228%" y="453" width="0.0797%" height="15" fill="rgb(222,167,27)" fg:x="616" fg:w="1"/><text x="49.3728%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="49.2823%" y="453" width="0.3190%" height="15" fill="rgb(247,41,16)" fg:x="618" fg:w="4"/><text x="49.5323%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="49.2823%" y="437" width="0.3190%" height="15" fill="rgb(233,168,40)" fg:x="618" fg:w="4"/><text x="49.5323%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="49.3620%" y="421" width="0.2392%" height="15" fill="rgb(205,211,8)" fg:x="619" fg:w="3"/><text x="49.6120%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="49.3620%" y="405" width="0.2392%" height="15" fill="rgb(238,105,11)" fg:x="619" fg:w="3"/><text x="49.6120%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="49.4418%" y="389" width="0.1595%" height="15" fill="rgb(223,142,52)" fg:x="620" fg:w="2"/><text x="49.6918%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.8405%" y="437" width="0.0797%" height="15" fill="rgb(238,51,33)" fg:x="625" fg:w="1"/><text x="50.0905%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="49.9203%" y="437" width="0.0797%" height="15" fill="rgb(231,188,43)" fg:x="626" fg:w="1"/><text x="50.1703%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.9203%" y="421" width="0.0797%" height="15" fill="rgb(216,92,17)" fg:x="626" fg:w="1"/><text x="50.1703%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="49.9203%" y="405" width="0.0797%" height="15" fill="rgb(228,2,40)" fg:x="626" fg:w="1"/><text x="50.1703%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9203%" y="389" width="0.0797%" height="15" fill="rgb(226,73,15)" fg:x="626" fg:w="1"/><text x="50.1703%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="50.0000%" y="437" width="0.5582%" height="15" fill="rgb(227,66,46)" fg:x="627" fg:w="7"/><text x="50.2500%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="50.2392%" y="421" width="0.3190%" height="15" fill="rgb(209,71,6)" fg:x="630" fg:w="4"/><text x="50.4892%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.4785%" y="405" width="0.0797%" height="15" fill="rgb(246,100,25)" fg:x="633" fg:w="1"/><text x="50.7285%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.4785%" y="389" width="0.0797%" height="15" fill="rgb(248,185,27)" fg:x="633" fg:w="1"/><text x="50.7285%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="50.7177%" y="389" width="0.3987%" height="15" fill="rgb(225,118,47)" fg:x="636" fg:w="5"/><text x="50.9677%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="50.8772%" y="373" width="0.2392%" height="15" fill="rgb(220,185,44)" fg:x="638" fg:w="3"/><text x="51.1272%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="50.8772%" y="357" width="0.2392%" height="15" fill="rgb(227,95,24)" fg:x="638" fg:w="3"/><text x="51.1272%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.0367%" y="341" width="0.0797%" height="15" fill="rgb(252,84,24)" fg:x="640" fg:w="1"/><text x="51.2867%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="51.1164%" y="389" width="0.1595%" height="15" fill="rgb(240,34,44)" fg:x="641" fg:w="2"/><text x="51.3664%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="51.1164%" y="373" width="0.1595%" height="15" fill="rgb(209,72,54)" fg:x="641" fg:w="2"/><text x="51.3664%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="51.1164%" y="357" width="0.1595%" height="15" fill="rgb(226,19,45)" fg:x="641" fg:w="2"/><text x="51.3664%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.1962%" y="341" width="0.0797%" height="15" fill="rgb(246,7,45)" fg:x="642" fg:w="1"/><text x="51.4462%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.1962%" y="325" width="0.0797%" height="15" fill="rgb(225,45,2)" fg:x="642" fg:w="1"/><text x="51.4462%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="50.7177%" y="421" width="0.6380%" height="15" fill="rgb(221,80,29)" fg:x="636" fg:w="8"/><text x="50.9677%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="50.7177%" y="405" width="0.6380%" height="15" fill="rgb(228,11,19)" fg:x="636" fg:w="8"/><text x="50.9677%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="51.2759%" y="389" width="0.0797%" height="15" fill="rgb(243,17,21)" fg:x="643" fg:w="1"/><text x="51.5259%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="51.2759%" y="373" width="0.0797%" height="15" fill="rgb(243,88,8)" fg:x="643" fg:w="1"/><text x="51.5259%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="51.3557%" y="421" width="0.3190%" height="15" fill="rgb(214,17,9)" fg:x="644" fg:w="4"/><text x="51.6057%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="51.4354%" y="405" width="0.2392%" height="15" fill="rgb(232,169,15)" fg:x="645" fg:w="3"/><text x="51.6854%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="51.4354%" y="389" width="0.2392%" height="15" fill="rgb(232,86,53)" fg:x="645" fg:w="3"/><text x="51.6854%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="51.5152%" y="373" width="0.1595%" height="15" fill="rgb(222,100,4)" fg:x="646" fg:w="2"/><text x="51.7652%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="51.8341%" y="405" width="0.3190%" height="15" fill="rgb(253,151,38)" fg:x="650" fg:w="4"/><text x="52.0841%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="51.9936%" y="389" width="0.1595%" height="15" fill="rgb(238,215,29)" fg:x="652" fg:w="2"/><text x="52.2436%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="52.0734%" y="373" width="0.0797%" height="15" fill="rgb(205,128,53)" fg:x="653" fg:w="1"/><text x="52.3234%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="52.0734%" y="357" width="0.0797%" height="15" fill="rgb(248,183,14)" fg:x="653" fg:w="1"/><text x="52.3234%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="52.3126%" y="389" width="0.2392%" height="15" fill="rgb(244,172,35)" fg:x="656" fg:w="3"/><text x="52.5626%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="52.3126%" y="373" width="0.2392%" height="15" fill="rgb(234,93,19)" fg:x="656" fg:w="3"/><text x="52.5626%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="52.3923%" y="357" width="0.1595%" height="15" fill="rgb(227,109,7)" fg:x="657" fg:w="2"/><text x="52.6423%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.4721%" y="341" width="0.0797%" height="15" fill="rgb(233,136,54)" fg:x="658" fg:w="1"/><text x="52.7221%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="52.5518%" y="373" width="0.1595%" height="15" fill="rgb(233,19,40)" fg:x="659" fg:w="2"/><text x="52.8018%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="52.6316%" y="357" width="0.0797%" height="15" fill="rgb(247,41,18)" fg:x="660" fg:w="1"/><text x="52.8816%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="52.7911%" y="357" width="0.0797%" height="15" fill="rgb(220,34,34)" fg:x="662" fg:w="1"/><text x="53.0411%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="52.7113%" y="373" width="0.3190%" height="15" fill="rgb(222,135,32)" fg:x="661" fg:w="4"/><text x="52.9613%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="52.8708%" y="357" width="0.1595%" height="15" fill="rgb(214,80,19)" fg:x="663" fg:w="2"/><text x="53.1208%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="52.8708%" y="341" width="0.1595%" height="15" fill="rgb(234,54,46)" fg:x="663" fg:w="2"/><text x="53.1208%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.8708%" y="325" width="0.1595%" height="15" fill="rgb(251,48,23)" fg:x="663" fg:w="2"/><text x="53.1208%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.9506%" y="309" width="0.0797%" height="15" fill="rgb(254,109,52)" fg:x="664" fg:w="1"/><text x="53.2006%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.9506%" y="293" width="0.0797%" height="15" fill="rgb(240,186,19)" fg:x="664" fg:w="1"/><text x="53.2006%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="52.9506%" y="277" width="0.0797%" height="15" fill="rgb(246,187,17)" fg:x="664" fg:w="1"/><text x="53.2006%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="52.5518%" y="389" width="0.5582%" height="15" fill="rgb(212,21,5)" fg:x="659" fg:w="7"/><text x="52.8018%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="53.0303%" y="373" width="0.0797%" height="15" fill="rgb(225,185,18)" fg:x="665" fg:w="1"/><text x="53.2803%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.0303%" y="357" width="0.0797%" height="15" fill="rgb(245,114,17)" fg:x="665" fg:w="1"/><text x="53.2803%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.0303%" y="341" width="0.0797%" height="15" fill="rgb(223,164,24)" fg:x="665" fg:w="1"/><text x="53.2803%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="52.1531%" y="405" width="1.0367%" height="15" fill="rgb(211,228,3)" fg:x="654" fg:w="13"/><text x="52.4031%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="53.1100%" y="389" width="0.0797%" height="15" fill="rgb(223,16,38)" fg:x="666" fg:w="1"/><text x="53.3600%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.1100%" y="373" width="0.0797%" height="15" fill="rgb(207,31,54)" fg:x="666" fg:w="1"/><text x="53.3600%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.1100%" y="357" width="0.0797%" height="15" fill="rgb(220,39,11)" fg:x="666" fg:w="1"/><text x="53.3600%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.59%)</title><rect x="51.6746%" y="421" width="1.5949%" height="15" fill="rgb(235,185,0)" fg:x="648" fg:w="20"/><text x="51.9246%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="53.1898%" y="405" width="0.0797%" height="15" fill="rgb(249,39,18)" fg:x="667" fg:w="1"/><text x="53.4398%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="53.1898%" y="389" width="0.0797%" height="15" fill="rgb(240,110,33)" fg:x="667" fg:w="1"/><text x="53.4398%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.1898%" y="373" width="0.0797%" height="15" fill="rgb(210,92,42)" fg:x="667" fg:w="1"/><text x="53.4398%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.95%)</title><rect x="50.5582%" y="437" width="2.9506%" height="15" fill="rgb(218,215,28)" fg:x="634" fg:w="37"/><text x="50.8082%" y="447.50">ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="53.2695%" y="421" width="0.2392%" height="15" fill="rgb(238,215,36)" fg:x="668" fg:w="3"/><text x="53.5195%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="53.3493%" y="405" width="0.1595%" height="15" fill="rgb(220,31,10)" fg:x="669" fg:w="2"/><text x="53.5993%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.3493%" y="389" width="0.1595%" height="15" fill="rgb(212,93,14)" fg:x="669" fg:w="2"/><text x="53.5993%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (60 samples, 4.78%)</title><rect x="49.2823%" y="469" width="4.7847%" height="15" fill="rgb(254,207,2)" fg:x="618" fg:w="60"/><text x="49.5323%" y="479.50">&lt;serde..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (56 samples, 4.47%)</title><rect x="49.6013%" y="453" width="4.4657%" height="15" fill="rgb(205,57,44)" fg:x="622" fg:w="56"/><text x="49.8513%" y="463.50">serde..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="53.5088%" y="437" width="0.5582%" height="15" fill="rgb(226,151,19)" fg:x="671" fg:w="7"/><text x="53.7588%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="53.7480%" y="421" width="0.3190%" height="15" fill="rgb(230,72,30)" fg:x="674" fg:w="4"/><text x="53.9980%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="53.8278%" y="405" width="0.2392%" height="15" fill="rgb(244,0,8)" fg:x="675" fg:w="3"/><text x="54.0778%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.0670%" y="437" width="0.1595%" height="15" fill="rgb(230,192,6)" fg:x="678" fg:w="2"/><text x="54.3170%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.2265%" y="437" width="0.1595%" height="15" fill="rgb(233,207,13)" fg:x="680" fg:w="2"/><text x="54.4765%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3860%" y="421" width="0.0797%" height="15" fill="rgb(206,227,7)" fg:x="682" fg:w="1"/><text x="54.6360%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4657%" y="405" width="0.0797%" height="15" fill="rgb(213,217,25)" fg:x="683" fg:w="1"/><text x="54.7157%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="54.5455%" y="405" width="0.2392%" height="15" fill="rgb(249,75,4)" fg:x="684" fg:w="3"/><text x="54.7955%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.6252%" y="389" width="0.1595%" height="15" fill="rgb(225,114,18)" fg:x="685" fg:w="2"/><text x="54.8752%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.7847%" y="389" width="0.0797%" height="15" fill="rgb(211,162,40)" fg:x="687" fg:w="1"/><text x="55.0347%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.8644%" y="389" width="0.0797%" height="15" fill="rgb(206,49,29)" fg:x="688" fg:w="1"/><text x="55.1144%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.9442%" y="357" width="0.0797%" height="15" fill="rgb(244,8,6)" fg:x="689" fg:w="1"/><text x="55.1942%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="54.9442%" y="389" width="0.1595%" height="15" fill="rgb(231,194,28)" fg:x="689" fg:w="2"/><text x="55.1942%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="54.9442%" y="373" width="0.1595%" height="15" fill="rgb(210,69,5)" fg:x="689" fg:w="2"/><text x="55.1942%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.0239%" y="357" width="0.0797%" height="15" fill="rgb(216,186,12)" fg:x="690" fg:w="1"/><text x="55.2739%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="55.1037%" y="373" width="0.0797%" height="15" fill="rgb(238,61,15)" fg:x="691" fg:w="1"/><text x="55.3537%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.2632%" y="357" width="0.1595%" height="15" fill="rgb(226,104,1)" fg:x="693" fg:w="2"/><text x="55.5132%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="54.0670%" y="469" width="1.5152%" height="15" fill="rgb(229,128,15)" fg:x="678" fg:w="19"/><text x="54.3170%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="54.0670%" y="453" width="1.5152%" height="15" fill="rgb(247,110,15)" fg:x="678" fg:w="19"/><text x="54.3170%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="54.3860%" y="437" width="1.1962%" height="15" fill="rgb(210,74,48)" fg:x="682" fg:w="15"/><text x="54.6360%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="54.4657%" y="421" width="1.1164%" height="15" fill="rgb(246,121,10)" fg:x="683" fg:w="14"/><text x="54.7157%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="54.7847%" y="405" width="0.7974%" height="15" fill="rgb(214,156,37)" fg:x="687" fg:w="10"/><text x="55.0347%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="55.1037%" y="389" width="0.4785%" height="15" fill="rgb(214,210,34)" fg:x="691" fg:w="6"/><text x="55.3537%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="55.1834%" y="373" width="0.3987%" height="15" fill="rgb(237,93,35)" fg:x="692" fg:w="5"/><text x="55.4334%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="55.4226%" y="357" width="0.1595%" height="15" fill="rgb(206,36,8)" fg:x="695" fg:w="2"/><text x="55.6726%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="55.5821%" y="469" width="0.0797%" height="15" fill="rgb(208,151,12)" fg:x="697" fg:w="1"/><text x="55.8321%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="55.8214%" y="405" width="0.2392%" height="15" fill="rgb(225,133,52)" fg:x="700" fg:w="3"/><text x="56.0714%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.0606%" y="405" width="0.0797%" height="15" fill="rgb(231,71,53)" fg:x="703" fg:w="1"/><text x="56.3106%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.0606%" y="389" width="0.0797%" height="15" fill="rgb(243,76,21)" fg:x="703" fg:w="1"/><text x="56.3106%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="56.2201%" y="389" width="0.1595%" height="15" fill="rgb(252,144,3)" fg:x="705" fg:w="2"/><text x="56.4701%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.2201%" y="373" width="0.1595%" height="15" fill="rgb(231,199,10)" fg:x="705" fg:w="2"/><text x="56.4701%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.3796%" y="373" width="0.0797%" height="15" fill="rgb(215,18,11)" fg:x="707" fg:w="1"/><text x="56.6296%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.4593%" y="373" width="0.0797%" height="15" fill="rgb(241,65,24)" fg:x="708" fg:w="1"/><text x="56.7093%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.8581%" y="357" width="0.0797%" height="15" fill="rgb(251,192,38)" fg:x="713" fg:w="1"/><text x="57.1081%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="56.9378%" y="357" width="0.1595%" height="15" fill="rgb(205,9,35)" fg:x="714" fg:w="2"/><text x="57.1878%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.0175%" y="341" width="0.0797%" height="15" fill="rgb(229,225,49)" fg:x="715" fg:w="1"/><text x="57.2675%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="57.0973%" y="357" width="0.0797%" height="15" fill="rgb(207,125,39)" fg:x="716" fg:w="1"/><text x="57.3473%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="57.0973%" y="341" width="0.0797%" height="15" fill="rgb(222,78,19)" fg:x="716" fg:w="1"/><text x="57.3473%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.0973%" y="325" width="0.0797%" height="15" fill="rgb(248,207,20)" fg:x="716" fg:w="1"/><text x="57.3473%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2568%" y="325" width="0.0797%" height="15" fill="rgb(205,103,49)" fg:x="718" fg:w="1"/><text x="57.5068%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.67%)</title><rect x="55.7416%" y="437" width="1.6746%" height="15" fill="rgb(216,42,28)" fg:x="699" fg:w="21"/><text x="55.9916%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (21 samples, 1.67%)</title><rect x="55.7416%" y="421" width="1.6746%" height="15" fill="rgb(213,205,53)" fg:x="699" fg:w="21"/><text x="55.9916%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="56.1404%" y="405" width="1.2759%" height="15" fill="rgb(239,140,53)" fg:x="704" fg:w="16"/><text x="56.3904%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="56.3796%" y="389" width="1.0367%" height="15" fill="rgb(248,95,9)" fg:x="707" fg:w="13"/><text x="56.6296%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="56.5391%" y="373" width="0.8772%" height="15" fill="rgb(254,58,47)" fg:x="709" fg:w="11"/><text x="56.7891%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="57.1770%" y="357" width="0.2392%" height="15" fill="rgb(234,227,14)" fg:x="717" fg:w="3"/><text x="57.4270%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="57.1770%" y="341" width="0.2392%" height="15" fill="rgb(205,192,45)" fg:x="717" fg:w="3"/><text x="57.4270%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.3365%" y="325" width="0.0797%" height="15" fill="rgb(253,187,31)" fg:x="719" fg:w="1"/><text x="57.5865%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.3365%" y="309" width="0.0797%" height="15" fill="rgb(222,6,32)" fg:x="719" fg:w="1"/><text x="57.5865%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="57.7352%" y="373" width="0.0797%" height="15" fill="rgb(249,190,19)" fg:x="724" fg:w="1"/><text x="57.9852%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="57.7352%" y="357" width="0.0797%" height="15" fill="rgb(251,28,20)" fg:x="724" fg:w="1"/><text x="57.9852%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="57.8150%" y="373" width="0.1595%" height="15" fill="rgb(210,223,40)" fg:x="725" fg:w="2"/><text x="58.0650%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="57.8150%" y="357" width="0.1595%" height="15" fill="rgb(216,137,22)" fg:x="725" fg:w="2"/><text x="58.0650%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="57.4960%" y="421" width="0.5582%" height="15" fill="rgb(247,39,34)" fg:x="721" fg:w="7"/><text x="57.7460%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="57.4960%" y="405" width="0.5582%" height="15" fill="rgb(239,43,50)" fg:x="721" fg:w="7"/><text x="57.7460%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="57.7352%" y="389" width="0.3190%" height="15" fill="rgb(241,212,9)" fg:x="724" fg:w="4"/><text x="57.9852%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="57.9745%" y="373" width="0.0797%" height="15" fill="rgb(205,8,2)" fg:x="727" fg:w="1"/><text x="58.2245%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="58.0542%" y="421" width="0.0797%" height="15" fill="rgb(217,173,54)" fg:x="728" fg:w="1"/><text x="58.3042%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (32 samples, 2.55%)</title><rect x="55.6619%" y="453" width="2.5518%" height="15" fill="rgb(208,149,52)" fg:x="698" fg:w="32"/><text x="55.9119%" y="463.50">&lt;k..</text></g><g><title>treediff::diff::diff (10 samples, 0.80%)</title><rect x="57.4163%" y="437" width="0.7974%" height="15" fill="rgb(239,99,40)" fg:x="720" fg:w="10"/><text x="57.6663%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="58.1340%" y="421" width="0.0797%" height="15" fill="rgb(233,214,26)" fg:x="729" fg:w="1"/><text x="58.3840%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="58.1340%" y="405" width="0.0797%" height="15" fill="rgb(231,225,37)" fg:x="729" fg:w="1"/><text x="58.3840%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1340%" y="389" width="0.0797%" height="15" fill="rgb(252,55,35)" fg:x="729" fg:w="1"/><text x="58.3840%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="58.2137%" y="453" width="0.1595%" height="15" fill="rgb(239,43,18)" fg:x="730" fg:w="2"/><text x="58.4637%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="58.3732%" y="421" width="0.4785%" height="15" fill="rgb(251,125,49)" fg:x="732" fg:w="6"/><text x="58.6232%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.6922%" y="405" width="0.1595%" height="15" fill="rgb(212,83,54)" fg:x="736" fg:w="2"/><text x="58.9422%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="58.7719%" y="389" width="0.0797%" height="15" fill="rgb(250,75,6)" fg:x="737" fg:w="1"/><text x="59.0219%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="58.8517%" y="421" width="0.0797%" height="15" fill="rgb(252,36,40)" fg:x="738" fg:w="1"/><text x="59.1017%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="58.8517%" y="405" width="0.0797%" height="15" fill="rgb(230,91,51)" fg:x="738" fg:w="1"/><text x="59.1017%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.8517%" y="389" width="0.0797%" height="15" fill="rgb(212,92,28)" fg:x="738" fg:w="1"/><text x="59.1017%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="59.0909%" y="389" width="0.1595%" height="15" fill="rgb(227,13,22)" fg:x="741" fg:w="2"/><text x="59.3409%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="59.2504%" y="373" width="0.3190%" height="15" fill="rgb(239,204,32)" fg:x="743" fg:w="4"/><text x="59.5004%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="59.2504%" y="357" width="0.3190%" height="15" fill="rgb(228,49,41)" fg:x="743" fg:w="4"/><text x="59.5004%" y="367.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="59.2504%" y="341" width="0.3190%" height="15" fill="rgb(206,95,6)" fg:x="743" fg:w="4"/><text x="59.5004%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="59.6491%" y="357" width="0.0797%" height="15" fill="rgb(251,20,14)" fg:x="748" fg:w="1"/><text x="59.8991%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7289%" y="325" width="0.0797%" height="15" fill="rgb(214,99,28)" fg:x="749" fg:w="1"/><text x="59.9789%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7289%" y="309" width="0.0797%" height="15" fill="rgb(239,122,54)" fg:x="749" fg:w="1"/><text x="59.9789%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.7289%" y="293" width="0.0797%" height="15" fill="rgb(218,217,46)" fg:x="749" fg:w="1"/><text x="59.9789%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="59.7289%" y="341" width="0.1595%" height="15" fill="rgb(249,106,28)" fg:x="749" fg:w="2"/><text x="59.9789%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="59.8086%" y="325" width="0.0797%" height="15" fill="rgb(250,158,18)" fg:x="750" fg:w="1"/><text x="60.0586%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.8086%" y="309" width="0.0797%" height="15" fill="rgb(226,137,29)" fg:x="750" fg:w="1"/><text x="60.0586%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="59.5694%" y="373" width="0.3987%" height="15" fill="rgb(210,188,1)" fg:x="747" fg:w="5"/><text x="59.8194%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="59.7289%" y="357" width="0.2392%" height="15" fill="rgb(227,84,42)" fg:x="749" fg:w="3"/><text x="59.9789%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.8884%" y="341" width="0.0797%" height="15" fill="rgb(222,147,48)" fg:x="751" fg:w="1"/><text x="60.1384%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.2073%" y="341" width="0.2392%" height="15" fill="rgb(241,150,43)" fg:x="755" fg:w="3"/><text x="60.4573%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3668%" y="325" width="0.0797%" height="15" fill="rgb(206,139,52)" fg:x="757" fg:w="1"/><text x="60.6168%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.3668%" y="309" width="0.0797%" height="15" fill="rgb(230,63,14)" fg:x="757" fg:w="1"/><text x="60.6168%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="60.6061%" y="325" width="0.0797%" height="15" fill="rgb(247,8,20)" fg:x="760" fg:w="1"/><text x="60.8561%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.8453%" y="277" width="0.2392%" height="15" fill="rgb(213,115,4)" fg:x="763" fg:w="3"/><text x="61.0953%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0048%" y="261" width="0.0797%" height="15" fill="rgb(241,79,49)" fg:x="765" fg:w="1"/><text x="61.2548%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.1643%" y="261" width="0.0797%" height="15" fill="rgb(222,42,35)" fg:x="767" fg:w="1"/><text x="61.4143%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="61.2440%" y="261" width="0.5582%" height="15" fill="rgb(247,59,23)" fg:x="768" fg:w="7"/><text x="61.4940%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="61.4833%" y="245" width="0.3190%" height="15" fill="rgb(247,93,18)" fg:x="771" fg:w="4"/><text x="61.7333%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="61.4833%" y="229" width="0.3190%" height="15" fill="rgb(249,107,47)" fg:x="771" fg:w="4"/><text x="61.7333%" y="239.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="61.4833%" y="213" width="0.3190%" height="15" fill="rgb(219,27,1)" fg:x="771" fg:w="4"/><text x="61.7333%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="61.8022%" y="261" width="0.0797%" height="15" fill="rgb(217,82,32)" fg:x="775" fg:w="1"/><text x="62.0522%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="60.8453%" y="293" width="1.1164%" height="15" fill="rgb(250,129,47)" fg:x="763" fg:w="14"/><text x="61.0953%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="61.0845%" y="277" width="0.8772%" height="15" fill="rgb(253,88,35)" fg:x="766" fg:w="11"/><text x="61.3345%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8820%" y="261" width="0.0797%" height="15" fill="rgb(245,221,14)" fg:x="776" fg:w="1"/><text x="62.1320%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="60.6858%" y="325" width="1.3557%" height="15" fill="rgb(217,119,54)" fg:x="761" fg:w="17"/><text x="60.9358%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.28%)</title><rect x="60.7656%" y="309" width="1.2759%" height="15" fill="rgb(247,128,31)" fg:x="762" fg:w="16"/><text x="61.0156%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9617%" y="293" width="0.0797%" height="15" fill="rgb(211,99,22)" fg:x="777" fg:w="1"/><text x="62.2117%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (36 samples, 2.87%)</title><rect x="59.2504%" y="389" width="2.8708%" height="15" fill="rgb(212,20,17)" fg:x="743" fg:w="36"/><text x="59.5004%" y="399.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (27 samples, 2.15%)</title><rect x="59.9681%" y="373" width="2.1531%" height="15" fill="rgb(209,159,29)" fg:x="752" fg:w="27"/><text x="60.2181%" y="383.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.91%)</title><rect x="60.2073%" y="357" width="1.9139%" height="15" fill="rgb(222,177,53)" fg:x="755" fg:w="24"/><text x="60.4573%" y="367.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 1.67%)</title><rect x="60.4466%" y="341" width="1.6746%" height="15" fill="rgb(234,46,43)" fg:x="758" fg:w="21"/><text x="60.6966%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0415%" y="325" width="0.0797%" height="15" fill="rgb(208,108,14)" fg:x="778" fg:w="1"/><text x="62.2915%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (44 samples, 3.51%)</title><rect x="59.0112%" y="405" width="3.5088%" height="15" fill="rgb(226,78,53)" fg:x="740" fg:w="44"/><text x="59.2612%" y="415.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="62.1212%" y="389" width="0.3987%" height="15" fill="rgb(230,20,41)" fg:x="779" fg:w="5"/><text x="62.3712%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="62.2010%" y="373" width="0.3190%" height="15" fill="rgb(213,195,35)" fg:x="780" fg:w="4"/><text x="62.4510%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (58 samples, 4.63%)</title><rect x="58.3732%" y="453" width="4.6252%" height="15" fill="rgb(242,62,36)" fg:x="732" fg:w="58"/><text x="58.6232%" y="463.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (58 samples, 4.63%)</title><rect x="58.3732%" y="437" width="4.6252%" height="15" fill="rgb(222,210,37)" fg:x="732" fg:w="58"/><text x="58.6232%" y="447.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (51 samples, 4.07%)</title><rect x="58.9314%" y="421" width="4.0670%" height="15" fill="rgb(232,107,19)" fg:x="739" fg:w="51"/><text x="59.1814%" y="431.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="62.5199%" y="405" width="0.4785%" height="15" fill="rgb(235,85,17)" fg:x="784" fg:w="6"/><text x="62.7699%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="62.7592%" y="389" width="0.2392%" height="15" fill="rgb(219,195,31)" fg:x="787" fg:w="3"/><text x="63.0092%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.8389%" y="373" width="0.1595%" height="15" fill="rgb(231,183,30)" fg:x="788" fg:w="2"/><text x="63.0889%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.2376%" y="341" width="0.0797%" height="15" fill="rgb(212,0,11)" fg:x="793" fg:w="1"/><text x="63.4876%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="63.4769%" y="277" width="0.1595%" height="15" fill="rgb(249,53,54)" fg:x="796" fg:w="2"/><text x="63.7269%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="63.4769%" y="261" width="0.1595%" height="15" fill="rgb(211,118,13)" fg:x="796" fg:w="2"/><text x="63.7269%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="63.4769%" y="309" width="0.2392%" height="15" fill="rgb(237,42,9)" fg:x="796" fg:w="3"/><text x="63.7269%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.4769%" y="293" width="0.2392%" height="15" fill="rgb(227,68,32)" fg:x="796" fg:w="3"/><text x="63.7269%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.6364%" y="277" width="0.0797%" height="15" fill="rgb(238,10,7)" fg:x="798" fg:w="1"/><text x="63.8864%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.6364%" y="261" width="0.0797%" height="15" fill="rgb(224,42,12)" fg:x="798" fg:w="1"/><text x="63.8864%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="63.8756%" y="229" width="0.2392%" height="15" fill="rgb(252,190,5)" fg:x="801" fg:w="3"/><text x="64.1256%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.8756%" y="213" width="0.2392%" height="15" fill="rgb(220,214,39)" fg:x="801" fg:w="3"/><text x="64.1256%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.9553%" y="197" width="0.1595%" height="15" fill="rgb(247,98,4)" fg:x="802" fg:w="2"/><text x="64.2053%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.0351%" y="181" width="0.0797%" height="15" fill="rgb(211,60,12)" fg:x="803" fg:w="1"/><text x="64.2851%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0351%" y="165" width="0.0797%" height="15" fill="rgb(224,42,10)" fg:x="803" fg:w="1"/><text x="64.2851%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="63.7959%" y="261" width="0.4785%" height="15" fill="rgb(217,167,4)" fg:x="800" fg:w="6"/><text x="64.0459%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="63.7959%" y="245" width="0.4785%" height="15" fill="rgb(253,18,17)" fg:x="800" fg:w="6"/><text x="64.0459%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.1148%" y="229" width="0.1595%" height="15" fill="rgb(249,186,44)" fg:x="804" fg:w="2"/><text x="64.3648%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.1946%" y="213" width="0.0797%" height="15" fill="rgb(254,124,54)" fg:x="805" fg:w="1"/><text x="64.4446%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="63.7161%" y="293" width="0.7177%" height="15" fill="rgb(220,124,39)" fg:x="799" fg:w="9"/><text x="63.9661%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="63.7161%" y="277" width="0.7177%" height="15" fill="rgb(225,96,46)" fg:x="799" fg:w="9"/><text x="63.9661%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.2743%" y="261" width="0.1595%" height="15" fill="rgb(221,106,12)" fg:x="806" fg:w="2"/><text x="64.5243%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.2743%" y="245" width="0.1595%" height="15" fill="rgb(227,133,23)" fg:x="806" fg:w="2"/><text x="64.5243%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.2743%" y="229" width="0.1595%" height="15" fill="rgb(216,44,52)" fg:x="806" fg:w="2"/><text x="64.5243%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="64.4338%" y="293" width="0.2392%" height="15" fill="rgb(239,149,7)" fg:x="808" fg:w="3"/><text x="64.6838%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.5136%" y="277" width="0.1595%" height="15" fill="rgb(211,157,31)" fg:x="809" fg:w="2"/><text x="64.7636%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.28%)</title><rect x="63.4769%" y="325" width="1.2759%" height="15" fill="rgb(206,215,22)" fg:x="796" fg:w="16"/><text x="63.7269%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="63.7161%" y="309" width="1.0367%" height="15" fill="rgb(208,113,15)" fg:x="799" fg:w="13"/><text x="63.9661%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6730%" y="293" width="0.0797%" height="15" fill="rgb(207,189,15)" fg:x="811" fg:w="1"/><text x="64.9230%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6730%" y="277" width="0.0797%" height="15" fill="rgb(231,115,4)" fg:x="811" fg:w="1"/><text x="64.9230%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6730%" y="261" width="0.0797%" height="15" fill="rgb(253,117,2)" fg:x="811" fg:w="1"/><text x="64.9230%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="64.7528%" y="325" width="0.1595%" height="15" fill="rgb(248,48,24)" fg:x="812" fg:w="2"/><text x="65.0028%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="64.7528%" y="309" width="0.1595%" height="15" fill="rgb(241,28,46)" fg:x="812" fg:w="2"/><text x="65.0028%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.9123%" y="293" width="0.1595%" height="15" fill="rgb(216,165,52)" fg:x="814" fg:w="2"/><text x="65.1623%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.07%)</title><rect x="63.0781%" y="357" width="2.0734%" height="15" fill="rgb(220,222,34)" fg:x="791" fg:w="26"/><text x="63.3281%" y="367.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.83%)</title><rect x="63.3174%" y="341" width="1.8341%" height="15" fill="rgb(247,222,49)" fg:x="794" fg:w="23"/><text x="63.5674%" y="351.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.9123%" y="325" width="0.2392%" height="15" fill="rgb(240,10,31)" fg:x="814" fg:w="3"/><text x="65.1623%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.9123%" y="309" width="0.2392%" height="15" fill="rgb(221,199,35)" fg:x="814" fg:w="3"/><text x="65.1623%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="65.0718%" y="293" width="0.0797%" height="15" fill="rgb(230,223,11)" fg:x="816" fg:w="1"/><text x="65.3218%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="65.2313%" y="341" width="0.1595%" height="15" fill="rgb(218,82,45)" fg:x="818" fg:w="2"/><text x="65.4813%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="65.1515%" y="357" width="0.3190%" height="15" fill="rgb(233,213,33)" fg:x="817" fg:w="4"/><text x="65.4015%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3907%" y="341" width="0.0797%" height="15" fill="rgb(210,143,52)" fg:x="820" fg:w="1"/><text x="65.6407%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 2.63%)</title><rect x="62.9984%" y="389" width="2.6316%" height="15" fill="rgb(206,95,4)" fg:x="790" fg:w="33"/><text x="63.2484%" y="399.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.55%)</title><rect x="63.0781%" y="373" width="2.5518%" height="15" fill="rgb(246,164,46)" fg:x="791" fg:w="32"/><text x="63.3281%" y="383.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.4705%" y="357" width="0.1595%" height="15" fill="rgb(213,210,47)" fg:x="821" fg:w="2"/><text x="65.7205%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.4705%" y="341" width="0.1595%" height="15" fill="rgb(210,12,38)" fg:x="821" fg:w="2"/><text x="65.7205%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.4705%" y="325" width="0.1595%" height="15" fill="rgb(252,192,54)" fg:x="821" fg:w="2"/><text x="65.7205%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="65.6300%" y="389" width="0.2392%" height="15" fill="rgb(242,92,6)" fg:x="823" fg:w="3"/><text x="65.8800%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="65.7097%" y="373" width="0.1595%" height="15" fill="rgb(253,154,15)" fg:x="824" fg:w="2"/><text x="65.9597%" y="383.50"></text></g><g><title>engine::session::state::State::close (216 samples, 17.22%)</title><rect x="48.8038%" y="533" width="17.2249%" height="15" fill="rgb(209,20,43)" fg:x="612" fg:w="216"/><text x="49.0538%" y="543.50">engine::session::state::Sta..</text></g><g><title>engine::session::state::State::flush_entities (215 samples, 17.15%)</title><rect x="48.8836%" y="517" width="17.1451%" height="15" fill="rgb(232,28,49)" fg:x="613" fg:w="215"/><text x="49.1336%" y="527.50">engine::session::state::Sta..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (211 samples, 16.83%)</title><rect x="49.2026%" y="501" width="16.8262%" height="15" fill="rgb(248,131,53)" fg:x="617" fg:w="211"/><text x="49.4526%" y="511.50">engine::session::internal:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (211 samples, 16.83%)</title><rect x="49.2026%" y="485" width="16.8262%" height="15" fill="rgb(214,16,30)" fg:x="617" fg:w="211"/><text x="49.4526%" y="495.50">engine::session::state::Sa..</text></g><g><title>kernel::model::any_entity_changes (130 samples, 10.37%)</title><rect x="55.6619%" y="469" width="10.3668%" height="15" fill="rgb(245,16,0)" fg:x="698" fg:w="130"/><text x="55.9119%" y="479.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (38 samples, 3.03%)</title><rect x="62.9984%" y="453" width="3.0303%" height="15" fill="rgb(245,17,35)" fg:x="790" fg:w="38"/><text x="63.2484%" y="463.50">ser..</text></g><g><title>serde_json::de::from_trait (38 samples, 3.03%)</title><rect x="62.9984%" y="437" width="3.0303%" height="15" fill="rgb(249,27,53)" fg:x="790" fg:w="38"/><text x="63.2484%" y="447.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (38 samples, 3.03%)</title><rect x="62.9984%" y="421" width="3.0303%" height="15" fill="rgb(214,73,24)" fg:x="790" fg:w="38"/><text x="63.2484%" y="431.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (38 samples, 3.03%)</title><rect x="62.9984%" y="405" width="3.0303%" height="15" fill="rgb(223,84,37)" fg:x="790" fg:w="38"/><text x="63.2484%" y="415.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.8692%" y="389" width="0.1595%" height="15" fill="rgb(210,109,28)" fg:x="826" fg:w="2"/><text x="66.1192%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9490%" y="373" width="0.0797%" height="15" fill="rgb(208,186,6)" fg:x="827" fg:w="1"/><text x="66.1990%" y="383.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="66.0287%" y="533" width="0.0797%" height="15" fill="rgb(235,201,30)" fg:x="828" fg:w="1"/><text x="66.2787%" y="543.50"></text></g><g><title>engine::session::Session::close (224 samples, 17.86%)</title><rect x="48.3254%" y="549" width="17.8628%" height="15" fill="rgb(216,198,48)" fg:x="606" fg:w="224"/><text x="48.5754%" y="559.50">engine::session::Session::cl..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="66.1085%" y="533" width="0.0797%" height="15" fill="rgb(254,186,25)" fg:x="829" fg:w="1"/><text x="66.3585%" y="543.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="66.1085%" y="517" width="0.0797%" height="15" fill="rgb(227,87,5)" fg:x="829" fg:w="1"/><text x="66.3585%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="66.1085%" y="501" width="0.0797%" height="15" fill="rgb(236,205,25)" fg:x="829" fg:w="1"/><text x="66.3585%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="66.1085%" y="485" width="0.0797%" height="15" fill="rgb(229,99,32)" fg:x="829" fg:w="1"/><text x="66.3585%" y="495.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="66.1085%" y="469" width="0.0797%" height="15" fill="rgb(231,177,31)" fg:x="829" fg:w="1"/><text x="66.3585%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="66.3477%" y="405" width="0.0797%" height="15" fill="rgb(246,15,2)" fg:x="832" fg:w="1"/><text x="66.5977%" y="415.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.3477%" y="389" width="0.0797%" height="15" fill="rgb(207,39,15)" fg:x="832" fg:w="1"/><text x="66.5977%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4274%" y="389" width="0.0797%" height="15" fill="rgb(207,44,9)" fg:x="833" fg:w="1"/><text x="66.6774%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4274%" y="373" width="0.0797%" height="15" fill="rgb(225,224,33)" fg:x="833" fg:w="1"/><text x="66.6774%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4274%" y="357" width="0.0797%" height="15" fill="rgb(252,151,3)" fg:x="833" fg:w="1"/><text x="66.6774%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4274%" y="341" width="0.0797%" height="15" fill="rgb(211,140,13)" fg:x="833" fg:w="1"/><text x="66.6774%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4274%" y="325" width="0.0797%" height="15" fill="rgb(239,225,17)" fg:x="833" fg:w="1"/><text x="66.6774%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4274%" y="309" width="0.0797%" height="15" fill="rgb(223,170,52)" fg:x="833" fg:w="1"/><text x="66.6774%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4274%" y="293" width="0.0797%" height="15" fill="rgb(212,64,21)" fg:x="833" fg:w="1"/><text x="66.6774%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.4274%" y="277" width="0.0797%" height="15" fill="rgb(236,126,48)" fg:x="833" fg:w="1"/><text x="66.6774%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.4274%" y="261" width="0.0797%" height="15" fill="rgb(209,135,11)" fg:x="833" fg:w="1"/><text x="66.6774%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.4274%" y="245" width="0.0797%" height="15" fill="rgb(228,126,40)" fg:x="833" fg:w="1"/><text x="66.6774%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.4274%" y="229" width="0.0797%" height="15" fill="rgb(205,196,36)" fg:x="833" fg:w="1"/><text x="66.6774%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4274%" y="213" width="0.0797%" height="15" fill="rgb(243,160,33)" fg:x="833" fg:w="1"/><text x="66.6774%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="66.3477%" y="437" width="0.3190%" height="15" fill="rgb(210,84,20)" fg:x="832" fg:w="4"/><text x="66.5977%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="66.3477%" y="421" width="0.3190%" height="15" fill="rgb(228,213,30)" fg:x="832" fg:w="4"/><text x="66.5977%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="66.4274%" y="405" width="0.2392%" height="15" fill="rgb(252,33,45)" fg:x="833" fg:w="3"/><text x="66.6774%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="66.5072%" y="389" width="0.1595%" height="15" fill="rgb(254,227,20)" fg:x="834" fg:w="2"/><text x="66.7572%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="66.5072%" y="373" width="0.1595%" height="15" fill="rgb(228,192,2)" fg:x="834" fg:w="2"/><text x="66.7572%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.5072%" y="357" width="0.1595%" height="15" fill="rgb(233,32,8)" fg:x="834" fg:w="2"/><text x="66.7572%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.5072%" y="341" width="0.1595%" height="15" fill="rgb(220,146,47)" fg:x="834" fg:w="2"/><text x="66.7572%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="66.5072%" y="325" width="0.1595%" height="15" fill="rgb(246,194,1)" fg:x="834" fg:w="2"/><text x="66.7572%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.5869%" y="309" width="0.0797%" height="15" fill="rgb(218,203,9)" fg:x="835" fg:w="1"/><text x="66.8369%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.5869%" y="293" width="0.0797%" height="15" fill="rgb(237,97,14)" fg:x="835" fg:w="1"/><text x="66.8369%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.5869%" y="277" width="0.0797%" height="15" fill="rgb(239,76,15)" fg:x="835" fg:w="1"/><text x="66.8369%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.5869%" y="261" width="0.0797%" height="15" fill="rgb(222,53,45)" fg:x="835" fg:w="1"/><text x="66.8369%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.5869%" y="245" width="0.0797%" height="15" fill="rgb(237,88,5)" fg:x="835" fg:w="1"/><text x="66.8369%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.5869%" y="229" width="0.0797%" height="15" fill="rgb(218,223,35)" fg:x="835" fg:w="1"/><text x="66.8369%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.5869%" y="213" width="0.0797%" height="15" fill="rgb(243,229,38)" fg:x="835" fg:w="1"/><text x="66.8369%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.5869%" y="197" width="0.0797%" height="15" fill="rgb(240,75,41)" fg:x="835" fg:w="1"/><text x="66.8369%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.5869%" y="181" width="0.0797%" height="15" fill="rgb(209,110,37)" fg:x="835" fg:w="1"/><text x="66.8369%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.5869%" y="165" width="0.0797%" height="15" fill="rgb(221,130,46)" fg:x="835" fg:w="1"/><text x="66.8369%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.5869%" y="149" width="0.0797%" height="15" fill="rgb(237,160,20)" fg:x="835" fg:w="1"/><text x="66.8369%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.5869%" y="133" width="0.0797%" height="15" fill="rgb(234,126,24)" fg:x="835" fg:w="1"/><text x="66.8369%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.5869%" y="117" width="0.0797%" height="15" fill="rgb(207,177,9)" fg:x="835" fg:w="1"/><text x="66.8369%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.5869%" y="101" width="0.0797%" height="15" fill="rgb(231,191,33)" fg:x="835" fg:w="1"/><text x="66.8369%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="66.5869%" y="85" width="0.0797%" height="15" fill="rgb(207,42,1)" fg:x="835" fg:w="1"/><text x="66.8369%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="66.5869%" y="69" width="0.0797%" height="15" fill="rgb(218,34,50)" fg:x="835" fg:w="1"/><text x="66.8369%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="66.5869%" y="53" width="0.0797%" height="15" fill="rgb(254,126,39)" fg:x="835" fg:w="1"/><text x="66.8369%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.5869%" y="37" width="0.0797%" height="15" fill="rgb(251,17,26)" fg:x="835" fg:w="1"/><text x="66.8369%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="66.6667%" y="437" width="0.1595%" height="15" fill="rgb(252,215,34)" fg:x="836" fg:w="2"/><text x="66.9167%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7464%" y="421" width="0.0797%" height="15" fill="rgb(217,120,44)" fg:x="837" fg:w="1"/><text x="66.9964%" y="431.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="66.9856%" y="373" width="0.0797%" height="15" fill="rgb(211,31,11)" fg:x="840" fg:w="1"/><text x="67.2356%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9856%" y="357" width="0.0797%" height="15" fill="rgb(222,69,51)" fg:x="840" fg:w="1"/><text x="67.2356%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9856%" y="341" width="0.0797%" height="15" fill="rgb(215,229,42)" fg:x="840" fg:w="1"/><text x="67.2356%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.9856%" y="325" width="0.0797%" height="15" fill="rgb(212,102,15)" fg:x="840" fg:w="1"/><text x="67.2356%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.9856%" y="309" width="0.0797%" height="15" fill="rgb(205,179,41)" fg:x="840" fg:w="1"/><text x="67.2356%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.9856%" y="293" width="0.0797%" height="15" fill="rgb(219,148,46)" fg:x="840" fg:w="1"/><text x="67.2356%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9856%" y="277" width="0.0797%" height="15" fill="rgb(243,40,19)" fg:x="840" fg:w="1"/><text x="67.2356%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9856%" y="261" width="0.0797%" height="15" fill="rgb(208,206,34)" fg:x="840" fg:w="1"/><text x="67.2356%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.9856%" y="245" width="0.0797%" height="15" fill="rgb(244,184,38)" fg:x="840" fg:w="1"/><text x="67.2356%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.9856%" y="229" width="0.0797%" height="15" fill="rgb(244,151,47)" fg:x="840" fg:w="1"/><text x="67.2356%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.9856%" y="213" width="0.0797%" height="15" fill="rgb(236,134,42)" fg:x="840" fg:w="1"/><text x="67.2356%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.9856%" y="197" width="0.0797%" height="15" fill="rgb(233,93,22)" fg:x="840" fg:w="1"/><text x="67.2356%" y="207.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="66.9856%" y="181" width="0.0797%" height="15" fill="rgb(211,202,10)" fg:x="840" fg:w="1"/><text x="67.2356%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="66.9856%" y="165" width="0.0797%" height="15" fill="rgb(240,63,8)" fg:x="840" fg:w="1"/><text x="67.2356%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0654%" y="357" width="0.0797%" height="15" fill="rgb(214,9,4)" fg:x="841" fg:w="1"/><text x="67.3154%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0654%" y="341" width="0.0797%" height="15" fill="rgb(243,66,45)" fg:x="841" fg:w="1"/><text x="67.3154%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="67.1451%" y="309" width="0.0797%" height="15" fill="rgb(220,50,42)" fg:x="842" fg:w="1"/><text x="67.3951%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.1451%" y="293" width="0.0797%" height="15" fill="rgb(220,134,27)" fg:x="842" fg:w="1"/><text x="67.3951%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.3046%" y="277" width="0.0797%" height="15" fill="rgb(246,151,50)" fg:x="844" fg:w="1"/><text x="67.5546%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4641%" y="149" width="0.0797%" height="15" fill="rgb(238,216,27)" fg:x="846" fg:w="1"/><text x="67.7141%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="67.1451%" y="325" width="0.4785%" height="15" fill="rgb(250,92,11)" fg:x="842" fg:w="6"/><text x="67.3951%" y="335.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="67.2249%" y="309" width="0.3987%" height="15" fill="rgb(248,183,6)" fg:x="843" fg:w="5"/><text x="67.4749%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="67.2249%" y="293" width="0.3987%" height="15" fill="rgb(211,204,50)" fg:x="843" fg:w="5"/><text x="67.4749%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.3844%" y="277" width="0.2392%" height="15" fill="rgb(252,55,47)" fg:x="845" fg:w="3"/><text x="67.6344%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.3844%" y="261" width="0.2392%" height="15" fill="rgb(240,198,32)" fg:x="845" fg:w="3"/><text x="67.6344%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.3844%" y="245" width="0.2392%" height="15" fill="rgb(224,203,19)" fg:x="845" fg:w="3"/><text x="67.6344%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.3844%" y="229" width="0.2392%" height="15" fill="rgb(205,27,16)" fg:x="845" fg:w="3"/><text x="67.6344%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="67.3844%" y="213" width="0.2392%" height="15" fill="rgb(224,226,17)" fg:x="845" fg:w="3"/><text x="67.6344%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.3844%" y="197" width="0.2392%" height="15" fill="rgb(205,216,54)" fg:x="845" fg:w="3"/><text x="67.6344%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.3844%" y="181" width="0.2392%" height="15" fill="rgb(248,168,46)" fg:x="845" fg:w="3"/><text x="67.6344%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.3844%" y="165" width="0.2392%" height="15" fill="rgb(226,111,45)" fg:x="845" fg:w="3"/><text x="67.6344%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5439%" y="149" width="0.0797%" height="15" fill="rgb(231,15,9)" fg:x="847" fg:w="1"/><text x="67.7939%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5439%" y="133" width="0.0797%" height="15" fill="rgb(243,168,3)" fg:x="847" fg:w="1"/><text x="67.7939%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="67.5439%" y="117" width="0.0797%" height="15" fill="rgb(221,220,54)" fg:x="847" fg:w="1"/><text x="67.7939%" y="127.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.5439%" y="101" width="0.0797%" height="15" fill="rgb(232,174,38)" fg:x="847" fg:w="1"/><text x="67.7939%" y="111.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="67.5439%" y="85" width="0.0797%" height="15" fill="rgb(205,14,38)" fg:x="847" fg:w="1"/><text x="67.7939%" y="95.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="67.1451%" y="357" width="0.5582%" height="15" fill="rgb(234,89,19)" fg:x="842" fg:w="7"/><text x="67.3951%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (7 samples, 0.56%)</title><rect x="67.1451%" y="341" width="0.5582%" height="15" fill="rgb(216,68,51)" fg:x="842" fg:w="7"/><text x="67.3951%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="67.6236%" y="325" width="0.0797%" height="15" fill="rgb(213,49,2)" fg:x="848" fg:w="1"/><text x="67.8736%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="67.6236%" y="309" width="0.0797%" height="15" fill="rgb(242,146,30)" fg:x="848" fg:w="1"/><text x="67.8736%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="67.6236%" y="293" width="0.0797%" height="15" fill="rgb(224,188,11)" fg:x="848" fg:w="1"/><text x="67.8736%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.6236%" y="277" width="0.0797%" height="15" fill="rgb(213,159,11)" fg:x="848" fg:w="1"/><text x="67.8736%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6236%" y="261" width="0.0797%" height="15" fill="rgb(229,13,31)" fg:x="848" fg:w="1"/><text x="67.8736%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.6236%" y="245" width="0.0797%" height="15" fill="rgb(209,103,11)" fg:x="848" fg:w="1"/><text x="67.8736%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6236%" y="229" width="0.0797%" height="15" fill="rgb(206,3,4)" fg:x="848" fg:w="1"/><text x="67.8736%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.6236%" y="213" width="0.0797%" height="15" fill="rgb(252,10,49)" fg:x="848" fg:w="1"/><text x="67.8736%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6236%" y="197" width="0.0797%" height="15" fill="rgb(217,160,32)" fg:x="848" fg:w="1"/><text x="67.8736%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.6236%" y="181" width="0.0797%" height="15" fill="rgb(249,196,0)" fg:x="848" fg:w="1"/><text x="67.8736%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6236%" y="165" width="0.0797%" height="15" fill="rgb(213,17,48)" fg:x="848" fg:w="1"/><text x="67.8736%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6236%" y="149" width="0.0797%" height="15" fill="rgb(206,42,46)" fg:x="848" fg:w="1"/><text x="67.8736%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.7831%" y="261" width="0.0797%" height="15" fill="rgb(212,105,24)" fg:x="850" fg:w="1"/><text x="68.0331%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.7831%" y="245" width="0.0797%" height="15" fill="rgb(243,216,30)" fg:x="850" fg:w="1"/><text x="68.0331%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.7831%" y="229" width="0.0797%" height="15" fill="rgb(207,121,3)" fg:x="850" fg:w="1"/><text x="68.0331%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.9426%" y="229" width="0.0797%" height="15" fill="rgb(249,78,0)" fg:x="852" fg:w="1"/><text x="68.1926%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1021%" y="197" width="0.0797%" height="15" fill="rgb(244,151,32)" fg:x="854" fg:w="1"/><text x="68.3521%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1021%" y="181" width="0.0797%" height="15" fill="rgb(228,63,25)" fg:x="854" fg:w="1"/><text x="68.3521%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1021%" y="165" width="0.0797%" height="15" fill="rgb(231,158,23)" fg:x="854" fg:w="1"/><text x="68.3521%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.1021%" y="213" width="0.1595%" height="15" fill="rgb(248,107,23)" fg:x="854" fg:w="2"/><text x="68.3521%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.1818%" y="197" width="0.0797%" height="15" fill="rgb(215,168,21)" fg:x="855" fg:w="1"/><text x="68.4318%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.1818%" y="181" width="0.0797%" height="15" fill="rgb(227,83,22)" fg:x="855" fg:w="1"/><text x="68.4318%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.1818%" y="165" width="0.0797%" height="15" fill="rgb(217,118,43)" fg:x="855" fg:w="1"/><text x="68.4318%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.1818%" y="149" width="0.0797%" height="15" fill="rgb(229,220,41)" fg:x="855" fg:w="1"/><text x="68.4318%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.1818%" y="133" width="0.0797%" height="15" fill="rgb(254,146,46)" fg:x="855" fg:w="1"/><text x="68.4318%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1818%" y="117" width="0.0797%" height="15" fill="rgb(233,208,31)" fg:x="855" fg:w="1"/><text x="68.4318%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.2616%" y="181" width="0.0797%" height="15" fill="rgb(222,162,7)" fg:x="856" fg:w="1"/><text x="68.5116%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.2616%" y="165" width="0.0797%" height="15" fill="rgb(230,117,45)" fg:x="856" fg:w="1"/><text x="68.5116%" y="175.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="67.7033%" y="341" width="0.7177%" height="15" fill="rgb(239,163,6)" fg:x="849" fg:w="9"/><text x="67.9533%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="67.7033%" y="325" width="0.7177%" height="15" fill="rgb(246,130,17)" fg:x="849" fg:w="9"/><text x="67.9533%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="67.7033%" y="309" width="0.7177%" height="15" fill="rgb(216,84,5)" fg:x="849" fg:w="9"/><text x="67.9533%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="67.7033%" y="293" width="0.7177%" height="15" fill="rgb(230,200,21)" fg:x="849" fg:w="9"/><text x="67.9533%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="67.7033%" y="277" width="0.7177%" height="15" fill="rgb(224,2,8)" fg:x="849" fg:w="9"/><text x="67.9533%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="67.8628%" y="261" width="0.5582%" height="15" fill="rgb(238,178,10)" fg:x="851" fg:w="7"/><text x="68.1128%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="67.8628%" y="245" width="0.5582%" height="15" fill="rgb(242,153,24)" fg:x="851" fg:w="7"/><text x="68.1128%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="68.0223%" y="229" width="0.3987%" height="15" fill="rgb(242,32,48)" fg:x="853" fg:w="5"/><text x="68.2723%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.2616%" y="213" width="0.1595%" height="15" fill="rgb(227,36,0)" fg:x="856" fg:w="2"/><text x="68.5116%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.2616%" y="197" width="0.1595%" height="15" fill="rgb(251,33,35)" fg:x="856" fg:w="2"/><text x="68.5116%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3413%" y="181" width="0.0797%" height="15" fill="rgb(232,168,51)" fg:x="857" fg:w="1"/><text x="68.5913%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5008%" y="309" width="0.0797%" height="15" fill="rgb(228,56,10)" fg:x="859" fg:w="1"/><text x="68.7508%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.5805%" y="277" width="0.0797%" height="15" fill="rgb(231,10,26)" fg:x="860" fg:w="1"/><text x="68.8305%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5805%" y="261" width="0.0797%" height="15" fill="rgb(226,202,12)" fg:x="860" fg:w="1"/><text x="68.8305%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.7400%" y="229" width="0.0797%" height="15" fill="rgb(251,49,21)" fg:x="862" fg:w="1"/><text x="68.9900%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.7400%" y="213" width="0.0797%" height="15" fill="rgb(206,228,28)" fg:x="862" fg:w="1"/><text x="68.9900%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.7400%" y="197" width="0.0797%" height="15" fill="rgb(205,198,31)" fg:x="862" fg:w="1"/><text x="68.9900%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.7400%" y="181" width="0.0797%" height="15" fill="rgb(213,69,1)" fg:x="862" fg:w="1"/><text x="68.9900%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.7400%" y="165" width="0.0797%" height="15" fill="rgb(209,177,9)" fg:x="862" fg:w="1"/><text x="68.9900%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.7400%" y="149" width="0.0797%" height="15" fill="rgb(227,119,30)" fg:x="862" fg:w="1"/><text x="68.9900%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.7400%" y="133" width="0.0797%" height="15" fill="rgb(234,106,41)" fg:x="862" fg:w="1"/><text x="68.9900%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.7400%" y="117" width="0.0797%" height="15" fill="rgb(244,103,47)" fg:x="862" fg:w="1"/><text x="68.9900%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.7400%" y="101" width="0.0797%" height="15" fill="rgb(212,211,25)" fg:x="862" fg:w="1"/><text x="68.9900%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7400%" y="85" width="0.0797%" height="15" fill="rgb(208,63,53)" fg:x="862" fg:w="1"/><text x="68.9900%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.8198%" y="213" width="0.1595%" height="15" fill="rgb(213,176,21)" fg:x="863" fg:w="2"/><text x="69.0698%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.8198%" y="197" width="0.1595%" height="15" fill="rgb(243,124,12)" fg:x="863" fg:w="2"/><text x="69.0698%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.8198%" y="181" width="0.1595%" height="15" fill="rgb(239,2,35)" fg:x="863" fg:w="2"/><text x="69.0698%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8995%" y="165" width="0.0797%" height="15" fill="rgb(253,169,22)" fg:x="864" fg:w="1"/><text x="69.1495%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="68.6603%" y="261" width="0.3987%" height="15" fill="rgb(254,51,12)" fg:x="861" fg:w="5"/><text x="68.9103%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.7400%" y="245" width="0.3190%" height="15" fill="rgb(244,17,47)" fg:x="862" fg:w="4"/><text x="68.9900%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="68.8198%" y="229" width="0.2392%" height="15" fill="rgb(251,45,46)" fg:x="863" fg:w="3"/><text x="69.0698%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="68.9793%" y="213" width="0.0797%" height="15" fill="rgb(223,87,43)" fg:x="865" fg:w="1"/><text x="69.2293%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.1388%" y="229" width="0.0797%" height="15" fill="rgb(230,132,31)" fg:x="867" fg:w="1"/><text x="69.3888%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="69.0590%" y="261" width="0.2392%" height="15" fill="rgb(206,99,1)" fg:x="866" fg:w="3"/><text x="69.3090%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="69.0590%" y="245" width="0.2392%" height="15" fill="rgb(227,110,25)" fg:x="866" fg:w="3"/><text x="69.3090%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.2185%" y="229" width="0.0797%" height="15" fill="rgb(217,182,7)" fg:x="868" fg:w="1"/><text x="69.4685%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.2185%" y="213" width="0.0797%" height="15" fill="rgb(250,176,4)" fg:x="868" fg:w="1"/><text x="69.4685%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="69.2982%" y="213" width="0.2392%" height="15" fill="rgb(244,98,30)" fg:x="869" fg:w="3"/><text x="69.5482%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="69.2982%" y="197" width="0.2392%" height="15" fill="rgb(228,150,42)" fg:x="869" fg:w="3"/><text x="69.5482%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.3780%" y="181" width="0.1595%" height="15" fill="rgb(231,91,46)" fg:x="870" fg:w="2"/><text x="69.6280%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.3780%" y="165" width="0.1595%" height="15" fill="rgb(252,161,32)" fg:x="870" fg:w="2"/><text x="69.6280%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.4577%" y="149" width="0.0797%" height="15" fill="rgb(236,69,41)" fg:x="871" fg:w="1"/><text x="69.7077%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (24 samples, 1.91%)</title><rect x="67.7033%" y="357" width="1.9139%" height="15" fill="rgb(212,160,3)" fg:x="849" fg:w="24"/><text x="67.9533%" y="367.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.20%)</title><rect x="68.4211%" y="341" width="1.1962%" height="15" fill="rgb(216,5,50)" fg:x="858" fg:w="15"/><text x="68.6711%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="68.4211%" y="325" width="1.1962%" height="15" fill="rgb(241,138,25)" fg:x="858" fg:w="15"/><text x="68.6711%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.04%)</title><rect x="68.5805%" y="309" width="1.0367%" height="15" fill="rgb(239,42,18)" fg:x="860" fg:w="13"/><text x="68.8305%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="68.5805%" y="293" width="1.0367%" height="15" fill="rgb(239,40,7)" fg:x="860" fg:w="13"/><text x="68.8305%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.96%)</title><rect x="68.6603%" y="277" width="0.9569%" height="15" fill="rgb(239,11,31)" fg:x="861" fg:w="12"/><text x="68.9103%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.2982%" y="261" width="0.3190%" height="15" fill="rgb(224,77,40)" fg:x="869" fg:w="4"/><text x="69.5482%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.2982%" y="245" width="0.3190%" height="15" fill="rgb(226,15,5)" fg:x="869" fg:w="4"/><text x="69.5482%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="69.2982%" y="229" width="0.3190%" height="15" fill="rgb(254,188,5)" fg:x="869" fg:w="4"/><text x="69.5482%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.5375%" y="213" width="0.0797%" height="15" fill="rgb(241,148,52)" fg:x="872" fg:w="1"/><text x="69.7875%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.5375%" y="197" width="0.0797%" height="15" fill="rgb(251,48,36)" fg:x="872" fg:w="1"/><text x="69.7875%" y="207.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="69.6172%" y="341" width="0.0797%" height="15" fill="rgb(243,83,13)" fg:x="873" fg:w="1"/><text x="69.8672%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6970%" y="245" width="0.0797%" height="15" fill="rgb(210,105,0)" fg:x="874" fg:w="1"/><text x="69.9470%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6970%" y="229" width="0.0797%" height="15" fill="rgb(239,60,36)" fg:x="874" fg:w="1"/><text x="69.9470%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6970%" y="309" width="0.1595%" height="15" fill="rgb(210,20,0)" fg:x="874" fg:w="2"/><text x="69.9470%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6970%" y="293" width="0.1595%" height="15" fill="rgb(244,26,53)" fg:x="874" fg:w="2"/><text x="69.9470%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6970%" y="277" width="0.1595%" height="15" fill="rgb(240,100,49)" fg:x="874" fg:w="2"/><text x="69.9470%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.6970%" y="261" width="0.1595%" height="15" fill="rgb(250,46,45)" fg:x="874" fg:w="2"/><text x="69.9470%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7767%" y="245" width="0.0797%" height="15" fill="rgb(220,181,29)" fg:x="875" fg:w="1"/><text x="70.0267%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (37 samples, 2.95%)</title><rect x="66.9856%" y="389" width="2.9506%" height="15" fill="rgb(213,137,33)" fg:x="840" fg:w="37"/><text x="67.2356%" y="399.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (36 samples, 2.87%)</title><rect x="67.0654%" y="373" width="2.8708%" height="15" fill="rgb(213,27,48)" fg:x="841" fg:w="36"/><text x="67.3154%" y="383.50">en..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="69.6172%" y="357" width="0.3190%" height="15" fill="rgb(245,180,39)" fg:x="873" fg:w="4"/><text x="69.8672%" y="367.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="69.6970%" y="341" width="0.2392%" height="15" fill="rgb(212,158,42)" fg:x="874" fg:w="3"/><text x="69.9470%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="69.6970%" y="325" width="0.2392%" height="15" fill="rgb(228,193,18)" fg:x="874" fg:w="3"/><text x="69.9470%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.8565%" y="309" width="0.0797%" height="15" fill="rgb(245,172,29)" fg:x="876" fg:w="1"/><text x="70.1065%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8565%" y="293" width="0.0797%" height="15" fill="rgb(207,98,24)" fg:x="876" fg:w="1"/><text x="70.1065%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.8565%" y="277" width="0.0797%" height="15" fill="rgb(249,92,26)" fg:x="876" fg:w="1"/><text x="70.1065%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8565%" y="261" width="0.0797%" height="15" fill="rgb(217,176,26)" fg:x="876" fg:w="1"/><text x="70.1065%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.8565%" y="245" width="0.0797%" height="15" fill="rgb(221,8,39)" fg:x="876" fg:w="1"/><text x="70.1065%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8565%" y="229" width="0.0797%" height="15" fill="rgb(208,90,18)" fg:x="876" fg:w="1"/><text x="70.1065%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (39 samples, 3.11%)</title><rect x="66.9059%" y="405" width="3.1100%" height="15" fill="rgb(207,202,30)" fg:x="839" fg:w="39"/><text x="67.1559%" y="415.50">&lt;en..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="69.9362%" y="389" width="0.0797%" height="15" fill="rgb(231,124,22)" fg:x="877" fg:w="1"/><text x="70.1862%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.0957%" y="373" width="0.0797%" height="15" fill="rgb(206,15,5)" fg:x="879" fg:w="1"/><text x="70.3457%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.0957%" y="357" width="0.0797%" height="15" fill="rgb(239,16,52)" fg:x="879" fg:w="1"/><text x="70.3457%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1754%" y="373" width="0.0797%" height="15" fill="rgb(245,213,29)" fg:x="880" fg:w="1"/><text x="70.4254%" y="383.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (53 samples, 4.23%)</title><rect x="66.3477%" y="453" width="4.2265%" height="15" fill="rgb(213,203,36)" fg:x="832" fg:w="53"/><text x="66.5977%" y="463.50">&lt;plug..</text></g><g><title>kernel::model::entry::Entry::scope (47 samples, 3.75%)</title><rect x="66.8262%" y="437" width="3.7480%" height="15" fill="rgb(209,55,18)" fg:x="838" fg:w="47"/><text x="67.0762%" y="447.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (47 samples, 3.75%)</title><rect x="66.8262%" y="421" width="3.7480%" height="15" fill="rgb(207,133,49)" fg:x="838" fg:w="47"/><text x="67.0762%" y="431.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="70.0159%" y="405" width="0.5582%" height="15" fill="rgb(240,33,46)" fg:x="878" fg:w="7"/><text x="70.2659%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="70.0957%" y="389" width="0.4785%" height="15" fill="rgb(212,35,2)" fg:x="879" fg:w="6"/><text x="70.3457%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="70.2552%" y="373" width="0.3190%" height="15" fill="rgb(231,119,28)" fg:x="881" fg:w="4"/><text x="70.5052%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="70.2552%" y="357" width="0.3190%" height="15" fill="rgb(252,178,7)" fg:x="881" fg:w="4"/><text x="70.5052%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="70.4944%" y="341" width="0.0797%" height="15" fill="rgb(251,91,4)" fg:x="884" fg:w="1"/><text x="70.7444%" y="351.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (55 samples, 4.39%)</title><rect x="66.2679%" y="469" width="4.3860%" height="15" fill="rgb(233,122,19)" fg:x="831" fg:w="55"/><text x="66.5179%" y="479.50">&lt;engi..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="70.5742%" y="453" width="0.0797%" height="15" fill="rgb(231,208,46)" fg:x="885" fg:w="1"/><text x="70.8242%" y="463.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="70.5742%" y="437" width="0.0797%" height="15" fill="rgb(243,15,41)" fg:x="885" fg:w="1"/><text x="70.8242%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="70.5742%" y="421" width="0.0797%" height="15" fill="rgb(210,32,43)" fg:x="885" fg:w="1"/><text x="70.8242%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="70.5742%" y="405" width="0.0797%" height="15" fill="rgb(222,177,15)" fg:x="885" fg:w="1"/><text x="70.8242%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="70.5742%" y="389" width="0.0797%" height="15" fill="rgb(244,121,34)" fg:x="885" fg:w="1"/><text x="70.8242%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.5742%" y="373" width="0.0797%" height="15" fill="rgb(234,138,4)" fg:x="885" fg:w="1"/><text x="70.8242%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.5742%" y="357" width="0.0797%" height="15" fill="rgb(240,97,48)" fg:x="885" fg:w="1"/><text x="70.8242%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.5742%" y="341" width="0.0797%" height="15" fill="rgb(237,65,54)" fg:x="885" fg:w="1"/><text x="70.8242%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="70.5742%" y="325" width="0.0797%" height="15" fill="rgb(214,25,24)" fg:x="885" fg:w="1"/><text x="70.8242%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="70.5742%" y="309" width="0.0797%" height="15" fill="rgb(213,5,3)" fg:x="885" fg:w="1"/><text x="70.8242%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.5742%" y="293" width="0.0797%" height="15" fill="rgb(219,81,29)" fg:x="885" fg:w="1"/><text x="70.8242%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.5742%" y="277" width="0.0797%" height="15" fill="rgb(220,43,48)" fg:x="885" fg:w="1"/><text x="70.8242%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="70.5742%" y="261" width="0.0797%" height="15" fill="rgb(239,157,2)" fg:x="885" fg:w="1"/><text x="70.8242%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="70.5742%" y="245" width="0.0797%" height="15" fill="rgb(213,104,43)" fg:x="885" fg:w="1"/><text x="70.8242%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.5742%" y="229" width="0.0797%" height="15" fill="rgb(237,84,9)" fg:x="885" fg:w="1"/><text x="70.8242%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.5742%" y="213" width="0.0797%" height="15" fill="rgb(252,6,33)" fg:x="885" fg:w="1"/><text x="70.8242%" y="223.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="70.5742%" y="197" width="0.0797%" height="15" fill="rgb(251,172,22)" fg:x="885" fg:w="1"/><text x="70.8242%" y="207.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6539%" y="469" width="0.0797%" height="15" fill="rgb(244,91,53)" fg:x="886" fg:w="1"/><text x="70.9039%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6539%" y="453" width="0.0797%" height="15" fill="rgb(219,29,30)" fg:x="886" fg:w="1"/><text x="70.9039%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6539%" y="437" width="0.0797%" height="15" fill="rgb(213,3,15)" fg:x="886" fg:w="1"/><text x="70.9039%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.6539%" y="421" width="0.0797%" height="15" fill="rgb(208,25,28)" fg:x="886" fg:w="1"/><text x="70.9039%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.6539%" y="405" width="0.0797%" height="15" fill="rgb(252,144,25)" fg:x="886" fg:w="1"/><text x="70.9039%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.6539%" y="389" width="0.0797%" height="15" fill="rgb(226,220,25)" fg:x="886" fg:w="1"/><text x="70.9039%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.6539%" y="373" width="0.0797%" height="15" fill="rgb(212,131,28)" fg:x="886" fg:w="1"/><text x="70.9039%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.6539%" y="357" width="0.0797%" height="15" fill="rgb(219,143,52)" fg:x="886" fg:w="1"/><text x="70.9039%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (61 samples, 4.86%)</title><rect x="66.1882%" y="533" width="4.8644%" height="15" fill="rgb(215,56,7)" fg:x="830" fg:w="61"/><text x="66.4382%" y="543.50">&lt;engin..</text></g><g><title>kernel::plugins::mw::apply_middleware (61 samples, 4.86%)</title><rect x="66.1882%" y="517" width="4.8644%" height="15" fill="rgb(239,59,51)" fg:x="830" fg:w="61"/><text x="66.4382%" y="527.50">kernel..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (61 samples, 4.86%)</title><rect x="66.1882%" y="501" width="4.8644%" height="15" fill="rgb(209,215,4)" fg:x="830" fg:w="61"/><text x="66.4382%" y="511.50">kernel..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (60 samples, 4.78%)</title><rect x="66.2679%" y="485" width="4.7847%" height="15" fill="rgb(221,118,39)" fg:x="831" fg:w="60"/><text x="66.5179%" y="495.50">&lt;engin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="70.7337%" y="469" width="0.3190%" height="15" fill="rgb(236,6,44)" fg:x="887" fg:w="4"/><text x="70.9837%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="70.7337%" y="453" width="0.3190%" height="15" fill="rgb(216,122,9)" fg:x="887" fg:w="4"/><text x="70.9837%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="70.7337%" y="437" width="0.3190%" height="15" fill="rgb(244,134,42)" fg:x="887" fg:w="4"/><text x="70.9837%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="70.8134%" y="421" width="0.2392%" height="15" fill="rgb(209,189,35)" fg:x="888" fg:w="3"/><text x="71.0634%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="70.8134%" y="405" width="0.2392%" height="15" fill="rgb(250,47,36)" fg:x="888" fg:w="3"/><text x="71.0634%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.24%)</title><rect x="70.8134%" y="389" width="0.2392%" height="15" fill="rgb(252,112,4)" fg:x="888" fg:w="3"/><text x="71.0634%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.24%)</title><rect x="70.8134%" y="373" width="0.2392%" height="15" fill="rgb(221,79,51)" fg:x="888" fg:w="3"/><text x="71.0634%" y="383.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="70.8134%" y="357" width="0.2392%" height="15" fill="rgb(232,65,53)" fg:x="888" fg:w="3"/><text x="71.0634%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (3 samples, 0.24%)</title><rect x="70.8134%" y="341" width="0.2392%" height="15" fill="rgb(211,37,7)" fg:x="888" fg:w="3"/><text x="71.0634%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="70.8931%" y="325" width="0.1595%" height="15" fill="rgb(234,221,18)" fg:x="889" fg:w="2"/><text x="71.1431%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="71.0526%" y="517" width="0.0797%" height="15" fill="rgb(220,158,26)" fg:x="891" fg:w="1"/><text x="71.3026%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0526%" y="501" width="0.0797%" height="15" fill="rgb(220,70,6)" fg:x="891" fg:w="1"/><text x="71.3026%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0526%" y="485" width="0.0797%" height="15" fill="rgb(250,39,48)" fg:x="891" fg:w="1"/><text x="71.3026%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0526%" y="469" width="0.0797%" height="15" fill="rgb(206,40,27)" fg:x="891" fg:w="1"/><text x="71.3026%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0526%" y="453" width="0.0797%" height="15" fill="rgb(247,80,36)" fg:x="891" fg:w="1"/><text x="71.3026%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0526%" y="437" width="0.0797%" height="15" fill="rgb(222,9,20)" fg:x="891" fg:w="1"/><text x="71.3026%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0526%" y="421" width="0.0797%" height="15" fill="rgb(217,26,45)" fg:x="891" fg:w="1"/><text x="71.3026%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0526%" y="405" width="0.0797%" height="15" fill="rgb(221,67,14)" fg:x="891" fg:w="1"/><text x="71.3026%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.0526%" y="389" width="0.0797%" height="15" fill="rgb(248,100,24)" fg:x="891" fg:w="1"/><text x="71.3026%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.0526%" y="373" width="0.0797%" height="15" fill="rgb(230,187,16)" fg:x="891" fg:w="1"/><text x="71.3026%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.0526%" y="357" width="0.0797%" height="15" fill="rgb(205,108,13)" fg:x="891" fg:w="1"/><text x="71.3026%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.0526%" y="341" width="0.0797%" height="15" fill="rgb(235,71,51)" fg:x="891" fg:w="1"/><text x="71.3026%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0526%" y="325" width="0.0797%" height="15" fill="rgb(251,172,48)" fg:x="891" fg:w="1"/><text x="71.3026%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.2121%" y="469" width="0.0797%" height="15" fill="rgb(240,96,49)" fg:x="893" fg:w="1"/><text x="71.4621%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="71.2121%" y="453" width="0.0797%" height="15" fill="rgb(235,46,36)" fg:x="893" fg:w="1"/><text x="71.4621%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.2121%" y="437" width="0.0797%" height="15" fill="rgb(244,3,49)" fg:x="893" fg:w="1"/><text x="71.4621%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2121%" y="421" width="0.0797%" height="15" fill="rgb(206,78,54)" fg:x="893" fg:w="1"/><text x="71.4621%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2121%" y="405" width="0.0797%" height="15" fill="rgb(208,85,42)" fg:x="893" fg:w="1"/><text x="71.4621%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2121%" y="389" width="0.0797%" height="15" fill="rgb(219,196,21)" fg:x="893" fg:w="1"/><text x="71.4621%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2121%" y="373" width="0.0797%" height="15" fill="rgb(238,19,9)" fg:x="893" fg:w="1"/><text x="71.4621%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2121%" y="357" width="0.0797%" height="15" fill="rgb(206,86,13)" fg:x="893" fg:w="1"/><text x="71.4621%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.2121%" y="341" width="0.0797%" height="15" fill="rgb(214,123,40)" fg:x="893" fg:w="1"/><text x="71.4621%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.2121%" y="325" width="0.0797%" height="15" fill="rgb(243,53,5)" fg:x="893" fg:w="1"/><text x="71.4621%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.2121%" y="309" width="0.0797%" height="15" fill="rgb(254,186,31)" fg:x="893" fg:w="1"/><text x="71.4621%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.2121%" y="293" width="0.0797%" height="15" fill="rgb(221,216,25)" fg:x="893" fg:w="1"/><text x="71.4621%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.2121%" y="277" width="0.0797%" height="15" fill="rgb(248,107,42)" fg:x="893" fg:w="1"/><text x="71.4621%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.2121%" y="261" width="0.0797%" height="15" fill="rgb(221,85,43)" fg:x="893" fg:w="1"/><text x="71.4621%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.2121%" y="245" width="0.0797%" height="15" fill="rgb(225,34,24)" fg:x="893" fg:w="1"/><text x="71.4621%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.2121%" y="229" width="0.0797%" height="15" fill="rgb(211,119,1)" fg:x="893" fg:w="1"/><text x="71.4621%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.2121%" y="213" width="0.0797%" height="15" fill="rgb(254,216,46)" fg:x="893" fg:w="1"/><text x="71.4621%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.2121%" y="197" width="0.0797%" height="15" fill="rgb(238,11,38)" fg:x="893" fg:w="1"/><text x="71.4621%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2919%" y="389" width="0.0797%" height="15" fill="rgb(233,50,15)" fg:x="894" fg:w="1"/><text x="71.5419%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2919%" y="373" width="0.0797%" height="15" fill="rgb(217,181,29)" fg:x="894" fg:w="1"/><text x="71.5419%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.2919%" y="421" width="0.1595%" height="15" fill="rgb(214,56,3)" fg:x="894" fg:w="2"/><text x="71.5419%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.2919%" y="405" width="0.1595%" height="15" fill="rgb(230,69,45)" fg:x="894" fg:w="2"/><text x="71.5419%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3716%" y="389" width="0.0797%" height="15" fill="rgb(224,201,50)" fg:x="895" fg:w="1"/><text x="71.6216%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4514%" y="325" width="0.0797%" height="15" fill="rgb(217,228,18)" fg:x="896" fg:w="1"/><text x="71.7014%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4514%" y="309" width="0.0797%" height="15" fill="rgb(239,33,44)" fg:x="896" fg:w="1"/><text x="71.7014%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="71.2121%" y="501" width="0.3987%" height="15" fill="rgb(248,210,23)" fg:x="893" fg:w="5"/><text x="71.4621%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="71.2121%" y="485" width="0.3987%" height="15" fill="rgb(253,135,8)" fg:x="893" fg:w="5"/><text x="71.4621%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="71.2919%" y="469" width="0.3190%" height="15" fill="rgb(217,98,21)" fg:x="894" fg:w="4"/><text x="71.5419%" y="479.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="71.2919%" y="453" width="0.3190%" height="15" fill="rgb(253,130,21)" fg:x="894" fg:w="4"/><text x="71.5419%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="71.2919%" y="437" width="0.3190%" height="15" fill="rgb(207,81,54)" fg:x="894" fg:w="4"/><text x="71.5419%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.4514%" y="421" width="0.1595%" height="15" fill="rgb(232,48,33)" fg:x="896" fg:w="2"/><text x="71.7014%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.4514%" y="405" width="0.1595%" height="15" fill="rgb(211,9,35)" fg:x="896" fg:w="2"/><text x="71.7014%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.4514%" y="389" width="0.1595%" height="15" fill="rgb(205,152,21)" fg:x="896" fg:w="2"/><text x="71.7014%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.4514%" y="373" width="0.1595%" height="15" fill="rgb(249,21,27)" fg:x="896" fg:w="2"/><text x="71.7014%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="71.4514%" y="357" width="0.1595%" height="15" fill="rgb(252,29,24)" fg:x="896" fg:w="2"/><text x="71.7014%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.4514%" y="341" width="0.1595%" height="15" fill="rgb(230,130,50)" fg:x="896" fg:w="2"/><text x="71.7014%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5311%" y="325" width="0.0797%" height="15" fill="rgb(239,144,14)" fg:x="897" fg:w="1"/><text x="71.7811%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5311%" y="309" width="0.0797%" height="15" fill="rgb(227,111,50)" fg:x="897" fg:w="1"/><text x="71.7811%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5311%" y="293" width="0.0797%" height="15" fill="rgb(254,84,20)" fg:x="897" fg:w="1"/><text x="71.7811%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5311%" y="277" width="0.0797%" height="15" fill="rgb(232,90,48)" fg:x="897" fg:w="1"/><text x="71.7811%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5311%" y="261" width="0.0797%" height="15" fill="rgb(253,63,47)" fg:x="897" fg:w="1"/><text x="71.7811%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5311%" y="245" width="0.0797%" height="15" fill="rgb(251,146,35)" fg:x="897" fg:w="1"/><text x="71.7811%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.7703%" y="341" width="0.0797%" height="15" fill="rgb(229,192,35)" fg:x="900" fg:w="1"/><text x="72.0203%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.6906%" y="357" width="0.2392%" height="15" fill="rgb(225,68,9)" fg:x="899" fg:w="3"/><text x="71.9406%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.8501%" y="341" width="0.0797%" height="15" fill="rgb(214,97,34)" fg:x="901" fg:w="1"/><text x="72.1001%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.8501%" y="325" width="0.0797%" height="15" fill="rgb(253,31,26)" fg:x="901" fg:w="1"/><text x="72.1001%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="71.9298%" y="325" width="0.1595%" height="15" fill="rgb(225,151,47)" fg:x="902" fg:w="2"/><text x="72.1798%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.9298%" y="309" width="0.1595%" height="15" fill="rgb(206,185,9)" fg:x="902" fg:w="2"/><text x="72.1798%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0893%" y="325" width="0.0797%" height="15" fill="rgb(249,65,17)" fg:x="904" fg:w="1"/><text x="72.3393%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0893%" y="309" width="0.0797%" height="15" fill="rgb(220,110,10)" fg:x="904" fg:w="1"/><text x="72.3393%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="72.0893%" y="293" width="0.0797%" height="15" fill="rgb(222,198,49)" fg:x="904" fg:w="1"/><text x="72.3393%" y="303.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="71.6108%" y="485" width="0.6380%" height="15" fill="rgb(239,81,13)" fg:x="898" fg:w="8"/><text x="71.8608%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="71.6108%" y="469" width="0.6380%" height="15" fill="rgb(216,128,11)" fg:x="898" fg:w="8"/><text x="71.8608%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="71.6108%" y="453" width="0.6380%" height="15" fill="rgb(247,156,8)" fg:x="898" fg:w="8"/><text x="71.8608%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="71.6108%" y="437" width="0.6380%" height="15" fill="rgb(219,173,1)" fg:x="898" fg:w="8"/><text x="71.8608%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="71.6108%" y="421" width="0.6380%" height="15" fill="rgb(227,42,24)" fg:x="898" fg:w="8"/><text x="71.8608%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="71.6108%" y="405" width="0.6380%" height="15" fill="rgb(253,219,50)" fg:x="898" fg:w="8"/><text x="71.8608%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="71.6108%" y="389" width="0.6380%" height="15" fill="rgb(215,191,54)" fg:x="898" fg:w="8"/><text x="71.8608%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="71.6906%" y="373" width="0.5582%" height="15" fill="rgb(238,83,12)" fg:x="899" fg:w="7"/><text x="71.9406%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="71.9298%" y="357" width="0.3190%" height="15" fill="rgb(205,124,9)" fg:x="902" fg:w="4"/><text x="72.1798%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="71.9298%" y="341" width="0.3190%" height="15" fill="rgb(253,174,7)" fg:x="902" fg:w="4"/><text x="72.1798%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.1691%" y="325" width="0.0797%" height="15" fill="rgb(206,134,49)" fg:x="905" fg:w="1"/><text x="72.4191%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="72.1691%" y="309" width="0.0797%" height="15" fill="rgb(221,89,20)" fg:x="905" fg:w="1"/><text x="72.4191%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="72.5678%" y="357" width="0.0797%" height="15" fill="rgb(240,205,13)" fg:x="910" fg:w="1"/><text x="72.8178%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="72.5678%" y="341" width="0.0797%" height="15" fill="rgb(237,174,32)" fg:x="910" fg:w="1"/><text x="72.8178%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.5678%" y="325" width="0.0797%" height="15" fill="rgb(226,12,15)" fg:x="910" fg:w="1"/><text x="72.8178%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5678%" y="309" width="0.0797%" height="15" fill="rgb(245,160,52)" fg:x="910" fg:w="1"/><text x="72.8178%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="72.3285%" y="405" width="0.3987%" height="15" fill="rgb(253,80,21)" fg:x="907" fg:w="5"/><text x="72.5785%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="72.3285%" y="389" width="0.3987%" height="15" fill="rgb(231,225,22)" fg:x="907" fg:w="5"/><text x="72.5785%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (5 samples, 0.40%)</title><rect x="72.3285%" y="373" width="0.3987%" height="15" fill="rgb(253,185,12)" fg:x="907" fg:w="5"/><text x="72.5785%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="72.6475%" y="357" width="0.0797%" height="15" fill="rgb(234,197,21)" fg:x="911" fg:w="1"/><text x="72.8975%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6475%" y="341" width="0.0797%" height="15" fill="rgb(210,47,30)" fg:x="911" fg:w="1"/><text x="72.8975%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="72.7273%" y="405" width="0.2392%" height="15" fill="rgb(246,139,27)" fg:x="912" fg:w="3"/><text x="72.9773%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="72.7273%" y="389" width="0.2392%" height="15" fill="rgb(226,130,16)" fg:x="912" fg:w="3"/><text x="72.9773%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="72.8070%" y="373" width="0.1595%" height="15" fill="rgb(237,208,20)" fg:x="913" fg:w="2"/><text x="73.0570%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="72.8070%" y="357" width="0.1595%" height="15" fill="rgb(245,186,28)" fg:x="913" fg:w="2"/><text x="73.0570%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="72.8868%" y="341" width="0.0797%" height="15" fill="rgb(238,105,39)" fg:x="914" fg:w="1"/><text x="73.1368%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="73.0463%" y="357" width="0.0797%" height="15" fill="rgb(253,228,11)" fg:x="916" fg:w="1"/><text x="73.2963%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="73.0463%" y="341" width="0.0797%" height="15" fill="rgb(224,136,38)" fg:x="916" fg:w="1"/><text x="73.2963%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0463%" y="325" width="0.0797%" height="15" fill="rgb(211,3,25)" fg:x="916" fg:w="1"/><text x="73.2963%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.0463%" y="309" width="0.0797%" height="15" fill="rgb(238,66,34)" fg:x="916" fg:w="1"/><text x="73.2963%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.2057%" y="325" width="0.0797%" height="15" fill="rgb(223,188,11)" fg:x="918" fg:w="1"/><text x="73.4557%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.2057%" y="309" width="0.0797%" height="15" fill="rgb(221,10,35)" fg:x="918" fg:w="1"/><text x="73.4557%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2057%" y="293" width="0.0797%" height="15" fill="rgb(223,18,44)" fg:x="918" fg:w="1"/><text x="73.4557%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (22 samples, 1.75%)</title><rect x="71.6108%" y="501" width="1.7544%" height="15" fill="rgb(220,97,41)" fg:x="898" fg:w="22"/><text x="71.8608%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.12%)</title><rect x="72.2488%" y="485" width="1.1164%" height="15" fill="rgb(206,95,45)" fg:x="906" fg:w="14"/><text x="72.4988%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="72.2488%" y="469" width="1.1164%" height="15" fill="rgb(209,96,13)" fg:x="906" fg:w="14"/><text x="72.4988%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.04%)</title><rect x="72.3285%" y="453" width="1.0367%" height="15" fill="rgb(237,39,34)" fg:x="907" fg:w="13"/><text x="72.5785%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="72.3285%" y="437" width="1.0367%" height="15" fill="rgb(213,49,47)" fg:x="907" fg:w="13"/><text x="72.5785%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.04%)</title><rect x="72.3285%" y="421" width="1.0367%" height="15" fill="rgb(205,107,27)" fg:x="907" fg:w="13"/><text x="72.5785%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="72.9665%" y="405" width="0.3987%" height="15" fill="rgb(212,142,9)" fg:x="915" fg:w="5"/><text x="73.2165%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="72.9665%" y="389" width="0.3987%" height="15" fill="rgb(226,182,0)" fg:x="915" fg:w="5"/><text x="73.2165%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="73.0463%" y="373" width="0.3190%" height="15" fill="rgb(231,3,53)" fg:x="916" fg:w="4"/><text x="73.2963%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="73.1260%" y="357" width="0.2392%" height="15" fill="rgb(246,111,28)" fg:x="917" fg:w="3"/><text x="73.3760%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.2057%" y="341" width="0.1595%" height="15" fill="rgb(254,183,7)" fg:x="918" fg:w="2"/><text x="73.4557%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="73.2855%" y="325" width="0.0797%" height="15" fill="rgb(247,177,28)" fg:x="919" fg:w="1"/><text x="73.5355%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.2855%" y="309" width="0.0797%" height="15" fill="rgb(244,43,1)" fg:x="919" fg:w="1"/><text x="73.5355%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.2855%" y="293" width="0.0797%" height="15" fill="rgb(207,2,35)" fg:x="919" fg:w="1"/><text x="73.5355%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="73.2855%" y="277" width="0.0797%" height="15" fill="rgb(213,83,22)" fg:x="919" fg:w="1"/><text x="73.5355%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.2855%" y="261" width="0.0797%" height="15" fill="rgb(246,212,13)" fg:x="919" fg:w="1"/><text x="73.5355%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.2855%" y="245" width="0.0797%" height="15" fill="rgb(213,127,46)" fg:x="919" fg:w="1"/><text x="73.5355%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.2855%" y="229" width="0.0797%" height="15" fill="rgb(219,215,39)" fg:x="919" fg:w="1"/><text x="73.5355%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.3652%" y="453" width="0.0797%" height="15" fill="rgb(227,99,17)" fg:x="920" fg:w="1"/><text x="73.6152%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.3652%" y="437" width="0.0797%" height="15" fill="rgb(208,155,18)" fg:x="920" fg:w="1"/><text x="73.6152%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.3652%" y="421" width="0.0797%" height="15" fill="rgb(223,204,38)" fg:x="920" fg:w="1"/><text x="73.6152%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3652%" y="405" width="0.0797%" height="15" fill="rgb(212,114,21)" fg:x="920" fg:w="1"/><text x="73.6152%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.3652%" y="389" width="0.0797%" height="15" fill="rgb(250,74,13)" fg:x="920" fg:w="1"/><text x="73.6152%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.3652%" y="373" width="0.0797%" height="15" fill="rgb(234,7,1)" fg:x="920" fg:w="1"/><text x="73.6152%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.3652%" y="357" width="0.0797%" height="15" fill="rgb(207,138,31)" fg:x="920" fg:w="1"/><text x="73.6152%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.3652%" y="341" width="0.0797%" height="15" fill="rgb(215,186,42)" fg:x="920" fg:w="1"/><text x="73.6152%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.3652%" y="325" width="0.0797%" height="15" fill="rgb(229,205,49)" fg:x="920" fg:w="1"/><text x="73.6152%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.3652%" y="309" width="0.0797%" height="15" fill="rgb(216,156,32)" fg:x="920" fg:w="1"/><text x="73.6152%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.3652%" y="293" width="0.0797%" height="15" fill="rgb(238,7,21)" fg:x="920" fg:w="1"/><text x="73.6152%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.3652%" y="277" width="0.0797%" height="15" fill="rgb(249,190,22)" fg:x="920" fg:w="1"/><text x="73.6152%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.3652%" y="261" width="0.0797%" height="15" fill="rgb(253,51,31)" fg:x="920" fg:w="1"/><text x="73.6152%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.3652%" y="245" width="0.0797%" height="15" fill="rgb(237,90,54)" fg:x="920" fg:w="1"/><text x="73.6152%" y="255.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="73.3652%" y="229" width="0.0797%" height="15" fill="rgb(250,214,33)" fg:x="920" fg:w="1"/><text x="73.6152%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.4450%" y="357" width="0.0797%" height="15" fill="rgb(237,10,49)" fg:x="921" fg:w="1"/><text x="73.6950%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (32 samples, 2.55%)</title><rect x="71.0526%" y="533" width="2.5518%" height="15" fill="rgb(241,56,36)" fg:x="891" fg:w="32"/><text x="71.3026%" y="543.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (31 samples, 2.47%)</title><rect x="71.1324%" y="517" width="2.4721%" height="15" fill="rgb(227,164,12)" fg:x="892" fg:w="31"/><text x="71.3824%" y="527.50">en..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="73.3652%" y="501" width="0.2392%" height="15" fill="rgb(249,149,35)" fg:x="920" fg:w="3"/><text x="73.6152%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="73.3652%" y="485" width="0.2392%" height="15" fill="rgb(238,227,50)" fg:x="920" fg:w="3"/><text x="73.6152%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="73.3652%" y="469" width="0.2392%" height="15" fill="rgb(235,102,45)" fg:x="920" fg:w="3"/><text x="73.6152%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.4450%" y="453" width="0.1595%" height="15" fill="rgb(211,10,38)" fg:x="921" fg:w="2"/><text x="73.6950%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.4450%" y="437" width="0.1595%" height="15" fill="rgb(219,77,48)" fg:x="921" fg:w="2"/><text x="73.6950%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.4450%" y="421" width="0.1595%" height="15" fill="rgb(246,6,15)" fg:x="921" fg:w="2"/><text x="73.6950%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.4450%" y="405" width="0.1595%" height="15" fill="rgb(207,220,2)" fg:x="921" fg:w="2"/><text x="73.6950%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="73.4450%" y="389" width="0.1595%" height="15" fill="rgb(242,48,14)" fg:x="921" fg:w="2"/><text x="73.6950%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.4450%" y="373" width="0.1595%" height="15" fill="rgb(218,19,27)" fg:x="921" fg:w="2"/><text x="73.6950%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.5247%" y="357" width="0.0797%" height="15" fill="rgb(228,0,35)" fg:x="922" fg:w="1"/><text x="73.7747%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.5247%" y="341" width="0.0797%" height="15" fill="rgb(244,142,54)" fg:x="922" fg:w="1"/><text x="73.7747%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.5247%" y="325" width="0.0797%" height="15" fill="rgb(243,217,40)" fg:x="922" fg:w="1"/><text x="73.7747%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.6045%" y="485" width="0.0797%" height="15" fill="rgb(207,114,16)" fg:x="923" fg:w="1"/><text x="73.8545%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="73.7640%" y="437" width="0.0797%" height="15" fill="rgb(224,33,25)" fg:x="925" fg:w="1"/><text x="74.0140%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="73.7640%" y="453" width="0.1595%" height="15" fill="rgb(230,93,54)" fg:x="925" fg:w="2"/><text x="74.0140%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.8437%" y="437" width="0.0797%" height="15" fill="rgb(224,56,24)" fg:x="926" fg:w="1"/><text x="74.0937%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.8437%" y="421" width="0.0797%" height="15" fill="rgb(235,189,50)" fg:x="926" fg:w="1"/><text x="74.0937%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8437%" y="405" width="0.0797%" height="15" fill="rgb(242,173,8)" fg:x="926" fg:w="1"/><text x="74.0937%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8437%" y="389" width="0.0797%" height="15" fill="rgb(209,206,10)" fg:x="926" fg:w="1"/><text x="74.0937%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8437%" y="373" width="0.0797%" height="15" fill="rgb(213,182,44)" fg:x="926" fg:w="1"/><text x="74.0937%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8437%" y="357" width="0.0797%" height="15" fill="rgb(243,51,15)" fg:x="926" fg:w="1"/><text x="74.0937%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.8437%" y="341" width="0.0797%" height="15" fill="rgb(241,13,14)" fg:x="926" fg:w="1"/><text x="74.0937%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.8437%" y="325" width="0.0797%" height="15" fill="rgb(239,147,24)" fg:x="926" fg:w="1"/><text x="74.0937%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.8437%" y="309" width="0.0797%" height="15" fill="rgb(223,129,16)" fg:x="926" fg:w="1"/><text x="74.0937%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.8437%" y="293" width="0.0797%" height="15" fill="rgb(209,169,13)" fg:x="926" fg:w="1"/><text x="74.0937%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.8437%" y="277" width="0.0797%" height="15" fill="rgb(235,159,41)" fg:x="926" fg:w="1"/><text x="74.0937%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.8437%" y="261" width="0.0797%" height="15" fill="rgb(223,219,48)" fg:x="926" fg:w="1"/><text x="74.0937%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.8437%" y="245" width="0.0797%" height="15" fill="rgb(236,80,13)" fg:x="926" fg:w="1"/><text x="74.0937%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.8437%" y="229" width="0.0797%" height="15" fill="rgb(213,5,6)" fg:x="926" fg:w="1"/><text x="74.0937%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.8437%" y="213" width="0.0797%" height="15" fill="rgb(205,59,21)" fg:x="926" fg:w="1"/><text x="74.0937%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.8437%" y="197" width="0.0797%" height="15" fill="rgb(247,137,35)" fg:x="926" fg:w="1"/><text x="74.0937%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.8437%" y="181" width="0.0797%" height="15" fill="rgb(242,208,28)" fg:x="926" fg:w="1"/><text x="74.0937%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8437%" y="165" width="0.0797%" height="15" fill="rgb(245,62,25)" fg:x="926" fg:w="1"/><text x="74.0937%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9234%" y="405" width="0.0797%" height="15" fill="rgb(233,99,54)" fg:x="927" fg:w="1"/><text x="74.1734%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9234%" y="389" width="0.0797%" height="15" fill="rgb(213,10,37)" fg:x="927" fg:w="1"/><text x="74.1734%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9234%" y="373" width="0.0797%" height="15" fill="rgb(235,143,30)" fg:x="927" fg:w="1"/><text x="74.1734%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.9234%" y="357" width="0.0797%" height="15" fill="rgb(250,146,33)" fg:x="927" fg:w="1"/><text x="74.1734%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.9234%" y="341" width="0.0797%" height="15" fill="rgb(226,198,42)" fg:x="927" fg:w="1"/><text x="74.1734%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.9234%" y="325" width="0.0797%" height="15" fill="rgb(222,55,6)" fg:x="927" fg:w="1"/><text x="74.1734%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.9234%" y="309" width="0.0797%" height="15" fill="rgb(213,224,31)" fg:x="927" fg:w="1"/><text x="74.1734%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.9234%" y="293" width="0.0797%" height="15" fill="rgb(226,103,35)" fg:x="927" fg:w="1"/><text x="74.1734%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.9234%" y="277" width="0.0797%" height="15" fill="rgb(205,66,45)" fg:x="927" fg:w="1"/><text x="74.1734%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.9234%" y="261" width="0.0797%" height="15" fill="rgb(226,51,42)" fg:x="927" fg:w="1"/><text x="74.1734%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.9234%" y="245" width="0.0797%" height="15" fill="rgb(206,69,1)" fg:x="927" fg:w="1"/><text x="74.1734%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.9234%" y="229" width="0.0797%" height="15" fill="rgb(213,228,47)" fg:x="927" fg:w="1"/><text x="74.1734%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.9234%" y="213" width="0.0797%" height="15" fill="rgb(224,204,18)" fg:x="927" fg:w="1"/><text x="74.1734%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.9234%" y="197" width="0.0797%" height="15" fill="rgb(253,187,47)" fg:x="927" fg:w="1"/><text x="74.1734%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9234%" y="181" width="0.0797%" height="15" fill="rgb(232,61,2)" fg:x="927" fg:w="1"/><text x="74.1734%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0032%" y="341" width="0.0797%" height="15" fill="rgb(213,132,35)" fg:x="928" fg:w="1"/><text x="74.2532%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="73.6842%" y="485" width="0.4785%" height="15" fill="rgb(247,33,21)" fg:x="924" fg:w="6"/><text x="73.9342%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="73.7640%" y="469" width="0.3987%" height="15" fill="rgb(233,71,46)" fg:x="925" fg:w="5"/><text x="74.0140%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="73.9234%" y="453" width="0.2392%" height="15" fill="rgb(222,173,43)" fg:x="927" fg:w="3"/><text x="74.1734%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="73.9234%" y="437" width="0.2392%" height="15" fill="rgb(249,218,47)" fg:x="927" fg:w="3"/><text x="74.1734%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="73.9234%" y="421" width="0.2392%" height="15" fill="rgb(254,185,48)" fg:x="927" fg:w="3"/><text x="74.1734%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.0032%" y="405" width="0.1595%" height="15" fill="rgb(252,165,50)" fg:x="928" fg:w="2"/><text x="74.2532%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.0032%" y="389" width="0.1595%" height="15" fill="rgb(206,219,6)" fg:x="928" fg:w="2"/><text x="74.2532%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.0032%" y="373" width="0.1595%" height="15" fill="rgb(212,212,45)" fg:x="928" fg:w="2"/><text x="74.2532%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.0032%" y="357" width="0.1595%" height="15" fill="rgb(221,31,9)" fg:x="928" fg:w="2"/><text x="74.2532%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.0829%" y="341" width="0.0797%" height="15" fill="rgb(234,198,39)" fg:x="929" fg:w="1"/><text x="74.3329%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.0829%" y="325" width="0.0797%" height="15" fill="rgb(252,145,46)" fg:x="929" fg:w="1"/><text x="74.3329%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.0829%" y="309" width="0.0797%" height="15" fill="rgb(237,149,0)" fg:x="929" fg:w="1"/><text x="74.3329%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.0829%" y="293" width="0.0797%" height="15" fill="rgb(229,65,5)" fg:x="929" fg:w="1"/><text x="74.3329%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="74.0829%" y="277" width="0.0797%" height="15" fill="rgb(235,60,36)" fg:x="929" fg:w="1"/><text x="74.3329%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.2424%" y="421" width="0.0797%" height="15" fill="rgb(222,47,18)" fg:x="931" fg:w="1"/><text x="74.4924%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2424%" y="405" width="0.0797%" height="15" fill="rgb(235,114,22)" fg:x="931" fg:w="1"/><text x="74.4924%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3222%" y="421" width="0.0797%" height="15" fill="rgb(209,167,11)" fg:x="932" fg:w="1"/><text x="74.5722%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.5614%" y="389" width="0.0797%" height="15" fill="rgb(251,73,18)" fg:x="935" fg:w="1"/><text x="74.8114%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.6411%" y="389" width="0.1595%" height="15" fill="rgb(217,60,17)" fg:x="936" fg:w="2"/><text x="74.8911%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7209%" y="373" width="0.0797%" height="15" fill="rgb(224,36,37)" fg:x="937" fg:w="1"/><text x="74.9709%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7209%" y="357" width="0.0797%" height="15" fill="rgb(211,21,32)" fg:x="937" fg:w="1"/><text x="74.9709%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.9601%" y="261" width="0.0797%" height="15" fill="rgb(231,55,48)" fg:x="940" fg:w="1"/><text x="75.2101%" y="271.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="74.1627%" y="469" width="0.9569%" height="15" fill="rgb(227,42,18)" fg:x="930" fg:w="12"/><text x="74.4127%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="74.1627%" y="453" width="0.9569%" height="15" fill="rgb(217,2,27)" fg:x="930" fg:w="12"/><text x="74.4127%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="74.1627%" y="437" width="0.9569%" height="15" fill="rgb(251,138,23)" fg:x="930" fg:w="12"/><text x="74.4127%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="74.4019%" y="421" width="0.7177%" height="15" fill="rgb(226,184,11)" fg:x="933" fg:w="9"/><text x="74.6519%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="74.4019%" y="405" width="0.7177%" height="15" fill="rgb(242,142,12)" fg:x="933" fg:w="9"/><text x="74.6519%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="74.8006%" y="389" width="0.3190%" height="15" fill="rgb(234,187,18)" fg:x="938" fg:w="4"/><text x="75.0506%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.8804%" y="373" width="0.2392%" height="15" fill="rgb(237,44,42)" fg:x="939" fg:w="3"/><text x="75.1304%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.9601%" y="357" width="0.1595%" height="15" fill="rgb(211,90,23)" fg:x="940" fg:w="2"/><text x="75.2101%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.9601%" y="341" width="0.1595%" height="15" fill="rgb(207,81,18)" fg:x="940" fg:w="2"/><text x="75.2101%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.9601%" y="325" width="0.1595%" height="15" fill="rgb(222,107,28)" fg:x="940" fg:w="2"/><text x="75.2101%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.9601%" y="309" width="0.1595%" height="15" fill="rgb(237,83,52)" fg:x="940" fg:w="2"/><text x="75.2101%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.9601%" y="293" width="0.1595%" height="15" fill="rgb(208,67,11)" fg:x="940" fg:w="2"/><text x="75.2101%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.9601%" y="277" width="0.1595%" height="15" fill="rgb(249,157,49)" fg:x="940" fg:w="2"/><text x="75.2101%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.0399%" y="261" width="0.0797%" height="15" fill="rgb(243,200,1)" fg:x="941" fg:w="1"/><text x="75.2899%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0399%" y="245" width="0.0797%" height="15" fill="rgb(225,162,37)" fg:x="941" fg:w="1"/><text x="75.2899%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.0399%" y="229" width="0.0797%" height="15" fill="rgb(242,92,13)" fg:x="941" fg:w="1"/><text x="75.2899%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.1994%" y="405" width="0.0797%" height="15" fill="rgb(220,43,36)" fg:x="943" fg:w="1"/><text x="75.4494%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="75.2791%" y="245" width="0.0797%" height="15" fill="rgb(213,165,48)" fg:x="944" fg:w="1"/><text x="75.5291%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2791%" y="229" width="0.0797%" height="15" fill="rgb(227,200,9)" fg:x="944" fg:w="1"/><text x="75.5291%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.2791%" y="357" width="0.1595%" height="15" fill="rgb(221,222,28)" fg:x="944" fg:w="2"/><text x="75.5291%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.2791%" y="341" width="0.1595%" height="15" fill="rgb(223,142,26)" fg:x="944" fg:w="2"/><text x="75.5291%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.2791%" y="325" width="0.1595%" height="15" fill="rgb(243,46,9)" fg:x="944" fg:w="2"/><text x="75.5291%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.2791%" y="309" width="0.1595%" height="15" fill="rgb(250,56,11)" fg:x="944" fg:w="2"/><text x="75.5291%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="75.2791%" y="293" width="0.1595%" height="15" fill="rgb(229,113,5)" fg:x="944" fg:w="2"/><text x="75.5291%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.2791%" y="277" width="0.1595%" height="15" fill="rgb(244,108,28)" fg:x="944" fg:w="2"/><text x="75.5291%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.2791%" y="261" width="0.1595%" height="15" fill="rgb(242,119,50)" fg:x="944" fg:w="2"/><text x="75.5291%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.3589%" y="245" width="0.0797%" height="15" fill="rgb(224,164,23)" fg:x="945" fg:w="1"/><text x="75.6089%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="75.2791%" y="389" width="0.2392%" height="15" fill="rgb(214,227,44)" fg:x="944" fg:w="3"/><text x="75.5291%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.2791%" y="373" width="0.2392%" height="15" fill="rgb(238,202,4)" fg:x="944" fg:w="3"/><text x="75.5291%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.4386%" y="357" width="0.0797%" height="15" fill="rgb(213,190,30)" fg:x="946" fg:w="1"/><text x="75.6886%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="75.4386%" y="341" width="0.0797%" height="15" fill="rgb(239,15,2)" fg:x="946" fg:w="1"/><text x="75.6886%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4386%" y="325" width="0.0797%" height="15" fill="rgb(249,229,4)" fg:x="946" fg:w="1"/><text x="75.6886%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5981%" y="341" width="0.0797%" height="15" fill="rgb(239,75,44)" fg:x="948" fg:w="1"/><text x="75.8481%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="75.5183%" y="389" width="0.2392%" height="15" fill="rgb(251,206,23)" fg:x="947" fg:w="3"/><text x="75.7683%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="75.5183%" y="373" width="0.2392%" height="15" fill="rgb(215,208,0)" fg:x="947" fg:w="3"/><text x="75.7683%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="75.5183%" y="357" width="0.2392%" height="15" fill="rgb(230,75,50)" fg:x="947" fg:w="3"/><text x="75.7683%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.6778%" y="341" width="0.0797%" height="15" fill="rgb(246,180,39)" fg:x="949" fg:w="1"/><text x="75.9278%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.6778%" y="325" width="0.0797%" height="15" fill="rgb(249,175,24)" fg:x="949" fg:w="1"/><text x="75.9278%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="75.7576%" y="357" width="0.2392%" height="15" fill="rgb(247,176,22)" fg:x="950" fg:w="3"/><text x="76.0076%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.7576%" y="341" width="0.2392%" height="15" fill="rgb(241,100,24)" fg:x="950" fg:w="3"/><text x="76.0076%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.7576%" y="325" width="0.2392%" height="15" fill="rgb(233,4,35)" fg:x="950" fg:w="3"/><text x="76.0076%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="75.7576%" y="309" width="0.2392%" height="15" fill="rgb(211,164,46)" fg:x="950" fg:w="3"/><text x="76.0076%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.7576%" y="293" width="0.2392%" height="15" fill="rgb(242,99,53)" fg:x="950" fg:w="3"/><text x="76.0076%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.7576%" y="277" width="0.2392%" height="15" fill="rgb(243,45,33)" fg:x="950" fg:w="3"/><text x="76.0076%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="75.7576%" y="261" width="0.2392%" height="15" fill="rgb(217,55,21)" fg:x="950" fg:w="3"/><text x="76.0076%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.7576%" y="245" width="0.2392%" height="15" fill="rgb(245,145,46)" fg:x="950" fg:w="3"/><text x="76.0076%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.7576%" y="229" width="0.2392%" height="15" fill="rgb(215,112,45)" fg:x="950" fg:w="3"/><text x="76.0076%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.9171%" y="213" width="0.0797%" height="15" fill="rgb(228,104,16)" fg:x="952" fg:w="1"/><text x="76.1671%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9171%" y="197" width="0.0797%" height="15" fill="rgb(239,186,38)" fg:x="952" fg:w="1"/><text x="76.1671%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.9171%" y="181" width="0.0797%" height="15" fill="rgb(228,38,35)" fg:x="952" fg:w="1"/><text x="76.1671%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="75.1994%" y="437" width="0.8772%" height="15" fill="rgb(251,42,40)" fg:x="943" fg:w="11"/><text x="75.4494%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="75.1994%" y="421" width="0.8772%" height="15" fill="rgb(210,51,19)" fg:x="943" fg:w="11"/><text x="75.4494%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.80%)</title><rect x="75.2791%" y="405" width="0.7974%" height="15" fill="rgb(236,94,42)" fg:x="944" fg:w="10"/><text x="75.5291%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="75.7576%" y="389" width="0.3190%" height="15" fill="rgb(239,167,16)" fg:x="950" fg:w="4"/><text x="76.0076%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.7576%" y="373" width="0.3190%" height="15" fill="rgb(252,175,31)" fg:x="950" fg:w="4"/><text x="76.0076%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9968%" y="357" width="0.0797%" height="15" fill="rgb(206,166,30)" fg:x="953" fg:w="1"/><text x="76.2468%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (27 samples, 2.15%)</title><rect x="74.1627%" y="485" width="2.1531%" height="15" fill="rgb(206,209,37)" fg:x="930" fg:w="27"/><text x="74.4127%" y="495.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.20%)</title><rect x="75.1196%" y="469" width="1.1962%" height="15" fill="rgb(226,91,4)" fg:x="942" fg:w="15"/><text x="75.3696%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="75.1196%" y="453" width="1.1962%" height="15" fill="rgb(222,167,0)" fg:x="942" fg:w="15"/><text x="75.3696%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="76.0766%" y="437" width="0.2392%" height="15" fill="rgb(211,70,14)" fg:x="954" fg:w="3"/><text x="76.3266%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.0766%" y="421" width="0.2392%" height="15" fill="rgb(214,84,42)" fg:x="954" fg:w="3"/><text x="76.3266%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.2360%" y="405" width="0.0797%" height="15" fill="rgb(235,157,37)" fg:x="956" fg:w="1"/><text x="76.4860%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3158%" y="469" width="0.0797%" height="15" fill="rgb(225,13,6)" fg:x="957" fg:w="1"/><text x="76.5658%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="76.3158%" y="485" width="0.3190%" height="15" fill="rgb(205,202,1)" fg:x="957" fg:w="4"/><text x="76.5658%" y="495.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.3955%" y="469" width="0.2392%" height="15" fill="rgb(232,195,26)" fg:x="958" fg:w="3"/><text x="76.6455%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.3955%" y="453" width="0.2392%" height="15" fill="rgb(208,102,26)" fg:x="958" fg:w="3"/><text x="76.6455%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.4753%" y="437" width="0.1595%" height="15" fill="rgb(215,41,39)" fg:x="959" fg:w="2"/><text x="76.7253%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.4753%" y="421" width="0.1595%" height="15" fill="rgb(247,139,11)" fg:x="959" fg:w="2"/><text x="76.7253%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.4753%" y="405" width="0.1595%" height="15" fill="rgb(243,99,6)" fg:x="959" fg:w="2"/><text x="76.7253%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.4753%" y="389" width="0.1595%" height="15" fill="rgb(230,168,48)" fg:x="959" fg:w="2"/><text x="76.7253%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.4753%" y="373" width="0.1595%" height="15" fill="rgb(238,227,13)" fg:x="959" fg:w="2"/><text x="76.7253%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.4753%" y="357" width="0.1595%" height="15" fill="rgb(209,109,13)" fg:x="959" fg:w="2"/><text x="76.7253%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.4753%" y="341" width="0.1595%" height="15" fill="rgb(228,195,1)" fg:x="959" fg:w="2"/><text x="76.7253%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.4753%" y="325" width="0.1595%" height="15" fill="rgb(230,218,0)" fg:x="959" fg:w="2"/><text x="76.7253%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (39 samples, 3.11%)</title><rect x="73.6045%" y="517" width="3.1100%" height="15" fill="rgb(206,1,45)" fg:x="923" fg:w="39"/><text x="73.8545%" y="527.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (39 samples, 3.11%)</title><rect x="73.6045%" y="501" width="3.1100%" height="15" fill="rgb(209,124,26)" fg:x="923" fg:w="39"/><text x="73.8545%" y="511.50">eng..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6348%" y="485" width="0.0797%" height="15" fill="rgb(220,59,8)" fg:x="961" fg:w="1"/><text x="76.8848%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.7145%" y="389" width="0.0797%" height="15" fill="rgb(251,41,37)" fg:x="962" fg:w="1"/><text x="76.9645%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.7145%" y="373" width="0.0797%" height="15" fill="rgb(239,152,21)" fg:x="962" fg:w="1"/><text x="76.9645%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="76.7145%" y="357" width="0.0797%" height="15" fill="rgb(226,32,1)" fg:x="962" fg:w="1"/><text x="76.9645%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="76.7145%" y="341" width="0.0797%" height="15" fill="rgb(230,154,36)" fg:x="962" fg:w="1"/><text x="76.9645%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="76.7145%" y="325" width="0.0797%" height="15" fill="rgb(208,228,43)" fg:x="962" fg:w="1"/><text x="76.9645%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="76.7145%" y="309" width="0.0797%" height="15" fill="rgb(214,203,3)" fg:x="962" fg:w="1"/><text x="76.9645%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.7145%" y="293" width="0.0797%" height="15" fill="rgb(207,149,29)" fg:x="962" fg:w="1"/><text x="76.9645%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (42 samples, 3.35%)</title><rect x="73.6045%" y="533" width="3.3493%" height="15" fill="rgb(250,105,7)" fg:x="923" fg:w="42"/><text x="73.8545%" y="543.50">&lt;en..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="76.7145%" y="517" width="0.2392%" height="15" fill="rgb(232,222,16)" fg:x="962" fg:w="3"/><text x="76.9645%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="76.7145%" y="501" width="0.2392%" height="15" fill="rgb(209,32,24)" fg:x="962" fg:w="3"/><text x="76.9645%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="76.7145%" y="485" width="0.2392%" height="15" fill="rgb(225,13,6)" fg:x="962" fg:w="3"/><text x="76.9645%" y="495.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="76.7145%" y="469" width="0.2392%" height="15" fill="rgb(245,226,26)" fg:x="962" fg:w="3"/><text x="76.9645%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="76.7145%" y="453" width="0.2392%" height="15" fill="rgb(229,178,27)" fg:x="962" fg:w="3"/><text x="76.9645%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="76.7145%" y="437" width="0.2392%" height="15" fill="rgb(205,227,28)" fg:x="962" fg:w="3"/><text x="76.9645%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="76.7145%" y="421" width="0.2392%" height="15" fill="rgb(210,191,45)" fg:x="962" fg:w="3"/><text x="76.9645%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="76.7145%" y="405" width="0.2392%" height="15" fill="rgb(206,124,16)" fg:x="962" fg:w="3"/><text x="76.9645%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.7943%" y="389" width="0.1595%" height="15" fill="rgb(210,162,0)" fg:x="963" fg:w="2"/><text x="77.0443%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.7943%" y="373" width="0.1595%" height="15" fill="rgb(211,54,38)" fg:x="963" fg:w="2"/><text x="77.0443%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.7943%" y="357" width="0.1595%" height="15" fill="rgb(248,192,3)" fg:x="963" fg:w="2"/><text x="77.0443%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="76.7943%" y="341" width="0.1595%" height="15" fill="rgb(233,187,18)" fg:x="963" fg:w="2"/><text x="77.0443%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="76.7943%" y="325" width="0.1595%" height="15" fill="rgb(237,208,14)" fg:x="963" fg:w="2"/><text x="77.0443%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="76.7943%" y="309" width="0.1595%" height="15" fill="rgb(212,77,1)" fg:x="963" fg:w="2"/><text x="77.0443%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="76.7943%" y="293" width="0.1595%" height="15" fill="rgb(210,163,22)" fg:x="963" fg:w="2"/><text x="77.0443%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.7943%" y="277" width="0.1595%" height="15" fill="rgb(250,58,28)" fg:x="963" fg:w="2"/><text x="77.0443%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="76.7943%" y="261" width="0.1595%" height="15" fill="rgb(254,28,41)" fg:x="963" fg:w="2"/><text x="77.0443%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="76.7943%" y="245" width="0.1595%" height="15" fill="rgb(237,162,36)" fg:x="963" fg:w="2"/><text x="77.0443%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="76.7943%" y="229" width="0.1595%" height="15" fill="rgb(232,56,6)" fg:x="963" fg:w="2"/><text x="77.0443%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="76.7943%" y="213" width="0.1595%" height="15" fill="rgb(216,127,42)" fg:x="963" fg:w="2"/><text x="77.0443%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="76.7943%" y="197" width="0.1595%" height="15" fill="rgb(241,69,15)" fg:x="963" fg:w="2"/><text x="77.0443%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="76.7943%" y="181" width="0.1595%" height="15" fill="rgb(227,180,19)" fg:x="963" fg:w="2"/><text x="77.0443%" y="191.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="76.7943%" y="165" width="0.1595%" height="15" fill="rgb(231,188,29)" fg:x="963" fg:w="2"/><text x="77.0443%" y="175.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="76.7943%" y="149" width="0.1595%" height="15" fill="rgb(224,176,27)" fg:x="963" fg:w="2"/><text x="77.0443%" y="159.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="76.9537%" y="469" width="0.0797%" height="15" fill="rgb(249,214,19)" fg:x="965" fg:w="1"/><text x="77.2037%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="76.9537%" y="453" width="0.0797%" height="15" fill="rgb(240,0,4)" fg:x="965" fg:w="1"/><text x="77.2037%" y="463.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="76.9537%" y="533" width="0.1595%" height="15" fill="rgb(233,28,41)" fg:x="965" fg:w="2"/><text x="77.2037%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="76.9537%" y="517" width="0.1595%" height="15" fill="rgb(220,90,51)" fg:x="965" fg:w="2"/><text x="77.2037%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="76.9537%" y="501" width="0.1595%" height="15" fill="rgb(250,52,22)" fg:x="965" fg:w="2"/><text x="77.2037%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="76.9537%" y="485" width="0.1595%" height="15" fill="rgb(231,152,36)" fg:x="965" fg:w="2"/><text x="77.2037%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0335%" y="469" width="0.0797%" height="15" fill="rgb(250,218,4)" fg:x="966" fg:w="1"/><text x="77.2835%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1132%" y="517" width="0.0797%" height="15" fill="rgb(210,38,21)" fg:x="967" fg:w="1"/><text x="77.3632%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1132%" y="501" width="0.0797%" height="15" fill="rgb(230,75,13)" fg:x="967" fg:w="1"/><text x="77.3632%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.1132%" y="485" width="0.0797%" height="15" fill="rgb(250,68,53)" fg:x="967" fg:w="1"/><text x="77.3632%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.1132%" y="469" width="0.0797%" height="15" fill="rgb(250,210,16)" fg:x="967" fg:w="1"/><text x="77.3632%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.1132%" y="453" width="0.0797%" height="15" fill="rgb(240,132,5)" fg:x="967" fg:w="1"/><text x="77.3632%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.1132%" y="437" width="0.0797%" height="15" fill="rgb(222,148,48)" fg:x="967" fg:w="1"/><text x="77.3632%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.1132%" y="421" width="0.0797%" height="15" fill="rgb(247,181,24)" fg:x="967" fg:w="1"/><text x="77.3632%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.1132%" y="405" width="0.0797%" height="15" fill="rgb(239,5,31)" fg:x="967" fg:w="1"/><text x="77.3632%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.1132%" y="389" width="0.0797%" height="15" fill="rgb(241,152,38)" fg:x="967" fg:w="1"/><text x="77.3632%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.1132%" y="373" width="0.0797%" height="15" fill="rgb(246,200,37)" fg:x="967" fg:w="1"/><text x="77.3632%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.1132%" y="357" width="0.0797%" height="15" fill="rgb(243,210,26)" fg:x="967" fg:w="1"/><text x="77.3632%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1132%" y="341" width="0.0797%" height="15" fill="rgb(222,22,22)" fg:x="967" fg:w="1"/><text x="77.3632%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1930%" y="517" width="0.0797%" height="15" fill="rgb(208,129,28)" fg:x="968" fg:w="1"/><text x="77.4430%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2727%" y="517" width="0.0797%" height="15" fill="rgb(254,169,28)" fg:x="969" fg:w="1"/><text x="77.5227%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.3525%" y="517" width="0.0797%" height="15" fill="rgb(225,45,17)" fg:x="970" fg:w="1"/><text x="77.6025%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5120%" y="453" width="0.0797%" height="15" fill="rgb(232,199,2)" fg:x="972" fg:w="1"/><text x="77.7620%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5120%" y="437" width="0.0797%" height="15" fill="rgb(235,33,40)" fg:x="972" fg:w="1"/><text x="77.7620%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.5120%" y="421" width="0.0797%" height="15" fill="rgb(237,89,50)" fg:x="972" fg:w="1"/><text x="77.7620%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.5120%" y="405" width="0.0797%" height="15" fill="rgb(238,126,5)" fg:x="972" fg:w="1"/><text x="77.7620%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.5120%" y="389" width="0.0797%" height="15" fill="rgb(247,214,42)" fg:x="972" fg:w="1"/><text x="77.7620%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.5120%" y="373" width="0.0797%" height="15" fill="rgb(238,60,45)" fg:x="972" fg:w="1"/><text x="77.7620%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.5120%" y="357" width="0.0797%" height="15" fill="rgb(225,69,44)" fg:x="972" fg:w="1"/><text x="77.7620%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.5120%" y="341" width="0.0797%" height="15" fill="rgb(241,13,44)" fg:x="972" fg:w="1"/><text x="77.7620%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.5120%" y="325" width="0.0797%" height="15" fill="rgb(227,121,22)" fg:x="972" fg:w="1"/><text x="77.7620%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.5120%" y="309" width="0.0797%" height="15" fill="rgb(231,160,23)" fg:x="972" fg:w="1"/><text x="77.7620%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.5120%" y="293" width="0.0797%" height="15" fill="rgb(250,179,43)" fg:x="972" fg:w="1"/><text x="77.7620%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5120%" y="277" width="0.0797%" height="15" fill="rgb(233,54,46)" fg:x="972" fg:w="1"/><text x="77.7620%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="77.4322%" y="485" width="0.2392%" height="15" fill="rgb(247,120,42)" fg:x="971" fg:w="3"/><text x="77.6822%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="77.4322%" y="469" width="0.2392%" height="15" fill="rgb(221,219,12)" fg:x="971" fg:w="3"/><text x="77.6822%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5917%" y="453" width="0.0797%" height="15" fill="rgb(211,126,8)" fg:x="973" fg:w="1"/><text x="77.8417%" y="463.50"></text></g><g><title>engine::users::model::username_to_key (10 samples, 0.80%)</title><rect x="77.1132%" y="533" width="0.7974%" height="15" fill="rgb(218,154,33)" fg:x="967" fg:w="10"/><text x="77.3632%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="77.4322%" y="517" width="0.4785%" height="15" fill="rgb(212,199,16)" fg:x="971" fg:w="6"/><text x="77.6822%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="77.4322%" y="501" width="0.4785%" height="15" fill="rgb(236,215,46)" fg:x="971" fg:w="6"/><text x="77.6822%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.6715%" y="485" width="0.2392%" height="15" fill="rgb(232,32,22)" fg:x="974" fg:w="3"/><text x="77.9215%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.6715%" y="469" width="0.2392%" height="15" fill="rgb(234,79,15)" fg:x="974" fg:w="3"/><text x="77.9215%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="77.7512%" y="453" width="0.1595%" height="15" fill="rgb(235,187,47)" fg:x="975" fg:w="2"/><text x="78.0012%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7512%" y="437" width="0.1595%" height="15" fill="rgb(244,69,37)" fg:x="975" fg:w="2"/><text x="78.0012%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8309%" y="421" width="0.0797%" height="15" fill="rgb(249,140,25)" fg:x="976" fg:w="1"/><text x="78.0809%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8309%" y="405" width="0.0797%" height="15" fill="rgb(213,69,8)" fg:x="976" fg:w="1"/><text x="78.0809%" y="415.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="77.9107%" y="533" width="0.0797%" height="15" fill="rgb(220,136,2)" fg:x="977" fg:w="1"/><text x="78.1607%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.9107%" y="517" width="0.0797%" height="15" fill="rgb(237,50,36)" fg:x="977" fg:w="1"/><text x="78.1607%" y="527.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (149 samples, 11.88%)</title><rect x="66.1882%" y="549" width="11.8820%" height="15" fill="rgb(226,18,11)" fg:x="830" fg:w="149"/><text x="66.4382%" y="559.50">engine::session::S..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.9904%" y="533" width="0.0797%" height="15" fill="rgb(243,156,2)" fg:x="978" fg:w="1"/><text x="78.2404%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.9904%" y="517" width="0.0797%" height="15" fill="rgb(218,8,34)" fg:x="978" fg:w="1"/><text x="78.2404%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.9904%" y="501" width="0.0797%" height="15" fill="rgb(250,94,35)" fg:x="978" fg:w="1"/><text x="78.2404%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.9904%" y="485" width="0.0797%" height="15" fill="rgb(229,127,21)" fg:x="978" fg:w="1"/><text x="78.2404%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.9904%" y="469" width="0.0797%" height="15" fill="rgb(234,49,5)" fg:x="978" fg:w="1"/><text x="78.2404%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="77.9904%" y="453" width="0.0797%" height="15" fill="rgb(248,12,16)" fg:x="978" fg:w="1"/><text x="78.2404%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.9904%" y="437" width="0.0797%" height="15" fill="rgb(208,220,31)" fg:x="978" fg:w="1"/><text x="78.2404%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.9904%" y="421" width="0.0797%" height="15" fill="rgb(243,184,0)" fg:x="978" fg:w="1"/><text x="78.2404%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.9904%" y="405" width="0.0797%" height="15" fill="rgb(217,38,21)" fg:x="978" fg:w="1"/><text x="78.2404%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.9904%" y="389" width="0.0797%" height="15" fill="rgb(239,120,45)" fg:x="978" fg:w="1"/><text x="78.2404%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.9904%" y="373" width="0.0797%" height="15" fill="rgb(235,33,2)" fg:x="978" fg:w="1"/><text x="78.2404%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.9904%" y="357" width="0.0797%" height="15" fill="rgb(249,161,5)" fg:x="978" fg:w="1"/><text x="78.2404%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.9904%" y="341" width="0.0797%" height="15" fill="rgb(250,165,48)" fg:x="978" fg:w="1"/><text x="78.2404%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.9904%" y="325" width="0.0797%" height="15" fill="rgb(221,23,45)" fg:x="978" fg:w="1"/><text x="78.2404%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.9904%" y="309" width="0.0797%" height="15" fill="rgb(217,108,46)" fg:x="978" fg:w="1"/><text x="78.2404%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.9904%" y="293" width="0.0797%" height="15" fill="rgb(254,26,35)" fg:x="978" fg:w="1"/><text x="78.2404%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.9904%" y="277" width="0.0797%" height="15" fill="rgb(218,223,28)" fg:x="978" fg:w="1"/><text x="78.2404%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.9904%" y="261" width="0.0797%" height="15" fill="rgb(242,27,47)" fg:x="978" fg:w="1"/><text x="78.2404%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.9904%" y="245" width="0.0797%" height="15" fill="rgb(218,39,35)" fg:x="978" fg:w="1"/><text x="78.2404%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.9904%" y="229" width="0.0797%" height="15" fill="rgb(232,127,16)" fg:x="978" fg:w="1"/><text x="78.2404%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0702%" y="533" width="0.0797%" height="15" fill="rgb(231,219,51)" fg:x="979" fg:w="1"/><text x="78.3202%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (981 samples, 78.23%)</title><rect x="0.0000%" y="597" width="78.2297%" height="15" fill="rgb(217,220,46)" fg:x="0" fg:w="981"/><text x="0.2500%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (981 samples, 78.23%)</title><rect x="0.0000%" y="581" width="78.2297%" height="15" fill="rgb(230,75,1)" fg:x="0" fg:w="981"/><text x="0.2500%" y="591.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (981 samples, 78.23%)</title><rect x="0.0000%" y="565" width="78.2297%" height="15" fill="rgb(218,2,8)" fg:x="0" fg:w="981"/><text x="0.2500%" y="575.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="78.0702%" y="549" width="0.1595%" height="15" fill="rgb(206,111,30)" fg:x="979" fg:w="2"/><text x="78.3202%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="78.1499%" y="533" width="0.0797%" height="15" fill="rgb(209,135,6)" fg:x="980" fg:w="1"/><text x="78.3999%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3094%" y="501" width="0.0797%" height="15" fill="rgb(205,169,10)" fg:x="982" fg:w="1"/><text x="78.5594%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3892%" y="437" width="0.0797%" height="15" fill="rgb(212,204,38)" fg:x="983" fg:w="1"/><text x="78.6392%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.4689%" y="437" width="0.1595%" height="15" fill="rgb(205,199,14)" fg:x="984" fg:w="2"/><text x="78.7189%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5486%" y="421" width="0.0797%" height="15" fill="rgb(212,4,6)" fg:x="985" fg:w="1"/><text x="78.7986%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.7081%" y="421" width="0.0797%" height="15" fill="rgb(250,15,10)" fg:x="987" fg:w="1"/><text x="78.9581%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.7081%" y="405" width="0.0797%" height="15" fill="rgb(212,49,51)" fg:x="987" fg:w="1"/><text x="78.9581%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7081%" y="389" width="0.0797%" height="15" fill="rgb(235,21,9)" fg:x="987" fg:w="1"/><text x="78.9581%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7879%" y="389" width="0.0797%" height="15" fill="rgb(251,31,32)" fg:x="988" fg:w="1"/><text x="79.0379%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="78.3094%" y="517" width="0.6380%" height="15" fill="rgb(246,23,9)" fg:x="982" fg:w="8"/><text x="78.5594%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="78.3892%" y="501" width="0.5582%" height="15" fill="rgb(225,216,14)" fg:x="983" fg:w="7"/><text x="78.6392%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="78.3892%" y="485" width="0.5582%" height="15" fill="rgb(215,200,26)" fg:x="983" fg:w="7"/><text x="78.6392%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="78.3892%" y="469" width="0.5582%" height="15" fill="rgb(237,130,47)" fg:x="983" fg:w="7"/><text x="78.6392%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="78.3892%" y="453" width="0.5582%" height="15" fill="rgb(247,74,14)" fg:x="983" fg:w="7"/><text x="78.6392%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.6284%" y="437" width="0.3190%" height="15" fill="rgb(254,97,46)" fg:x="986" fg:w="4"/><text x="78.8784%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.7879%" y="421" width="0.1595%" height="15" fill="rgb(234,191,1)" fg:x="988" fg:w="2"/><text x="79.0379%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.7879%" y="405" width="0.1595%" height="15" fill="rgb(215,165,14)" fg:x="988" fg:w="2"/><text x="79.0379%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.8676%" y="389" width="0.0797%" height="15" fill="rgb(230,182,6)" fg:x="989" fg:w="1"/><text x="79.1176%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8676%" y="373" width="0.0797%" height="15" fill="rgb(210,127,39)" fg:x="989" fg:w="1"/><text x="79.1176%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="78.2297%" y="549" width="0.7974%" height="15" fill="rgb(223,212,51)" fg:x="981" fg:w="10"/><text x="78.4797%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (9 samples, 0.72%)</title><rect x="78.3094%" y="533" width="0.7177%" height="15" fill="rgb(226,176,43)" fg:x="982" fg:w="9"/><text x="78.5594%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9474%" y="517" width="0.0797%" height="15" fill="rgb(222,155,4)" fg:x="990" fg:w="1"/><text x="79.1974%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="79.1069%" y="517" width="0.0797%" height="15" fill="rgb(215,149,7)" fg:x="992" fg:w="1"/><text x="79.3569%" y="527.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (2 samples, 0.16%)</title><rect x="79.1866%" y="469" width="0.1595%" height="15" fill="rgb(252,199,23)" fg:x="993" fg:w="2"/><text x="79.4366%" y="479.50"></text></g><g><title>libloading::safe::Library::new (2 samples, 0.16%)</title><rect x="79.1866%" y="453" width="0.1595%" height="15" fill="rgb(245,52,29)" fg:x="993" fg:w="2"/><text x="79.4366%" y="463.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="79.1866%" y="437" width="0.1595%" height="15" fill="rgb(221,228,19)" fg:x="993" fg:w="2"/><text x="79.4366%" y="447.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="79.2663%" y="421" width="0.0797%" height="15" fill="rgb(253,101,6)" fg:x="994" fg:w="1"/><text x="79.5163%" y="431.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (4 samples, 0.32%)</title><rect x="79.1866%" y="485" width="0.3190%" height="15" fill="rgb(211,130,8)" fg:x="993" fg:w="4"/><text x="79.4366%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="79.3461%" y="469" width="0.1595%" height="15" fill="rgb(238,37,53)" fg:x="995" fg:w="2"/><text x="79.5961%" y="479.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="79.3461%" y="453" width="0.1595%" height="15" fill="rgb(235,145,5)" fg:x="995" fg:w="2"/><text x="79.5961%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (7 samples, 0.56%)</title><rect x="79.0271%" y="549" width="0.5582%" height="15" fill="rgb(244,12,43)" fg:x="991" fg:w="7"/><text x="79.2771%" y="559.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (7 samples, 0.56%)</title><rect x="79.0271%" y="533" width="0.5582%" height="15" fill="rgb(246,195,24)" fg:x="991" fg:w="7"/><text x="79.2771%" y="543.50"></text></g><g><title>engine::session::Session::new (5 samples, 0.40%)</title><rect x="79.1866%" y="517" width="0.3987%" height="15" fill="rgb(235,163,6)" fg:x="993" fg:w="5"/><text x="79.4366%" y="527.50"></text></g><g><title>engine::session::Session::initialize (5 samples, 0.40%)</title><rect x="79.1866%" y="501" width="0.3987%" height="15" fill="rgb(236,218,17)" fg:x="993" fg:w="5"/><text x="79.4366%" y="511.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="79.5056%" y="485" width="0.0797%" height="15" fill="rgb(235,12,38)" fg:x="997" fg:w="1"/><text x="79.7556%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="79.5056%" y="469" width="0.0797%" height="15" fill="rgb(225,195,33)" fg:x="997" fg:w="1"/><text x="79.7556%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.5056%" y="453" width="0.0797%" height="15" fill="rgb(238,54,35)" fg:x="997" fg:w="1"/><text x="79.7556%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="79.5853%" y="517" width="0.0797%" height="15" fill="rgb(238,33,7)" fg:x="998" fg:w="1"/><text x="79.8353%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5853%" y="501" width="0.0797%" height="15" fill="rgb(245,5,14)" fg:x="998" fg:w="1"/><text x="79.8353%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.6651%" y="469" width="0.0797%" height="15" fill="rgb(251,95,31)" fg:x="999" fg:w="1"/><text x="79.9151%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.7448%" y="421" width="0.1595%" height="15" fill="rgb(222,15,46)" fg:x="1000" fg:w="2"/><text x="79.9948%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.7448%" y="405" width="0.1595%" height="15" fill="rgb(226,182,24)" fg:x="1000" fg:w="2"/><text x="79.9948%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.7448%" y="389" width="0.1595%" height="15" fill="rgb(229,105,41)" fg:x="1000" fg:w="2"/><text x="79.9948%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.7448%" y="373" width="0.1595%" height="15" fill="rgb(216,99,53)" fg:x="1000" fg:w="2"/><text x="79.9948%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="79.7448%" y="437" width="0.2392%" height="15" fill="rgb(253,26,20)" fg:x="1000" fg:w="3"/><text x="79.9948%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.9043%" y="421" width="0.0797%" height="15" fill="rgb(249,155,28)" fg:x="1002" fg:w="1"/><text x="80.1543%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.9043%" y="405" width="0.0797%" height="15" fill="rgb(241,221,2)" fg:x="1002" fg:w="1"/><text x="80.1543%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.9043%" y="389" width="0.0797%" height="15" fill="rgb(219,124,6)" fg:x="1002" fg:w="1"/><text x="80.1543%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.1435%" y="309" width="0.0797%" height="15" fill="rgb(233,37,6)" fg:x="1005" fg:w="1"/><text x="80.3935%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.0638%" y="389" width="0.2392%" height="15" fill="rgb(238,20,14)" fg:x="1004" fg:w="3"/><text x="80.3138%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.0638%" y="373" width="0.2392%" height="15" fill="rgb(232,106,27)" fg:x="1004" fg:w="3"/><text x="80.3138%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.1435%" y="357" width="0.1595%" height="15" fill="rgb(246,157,24)" fg:x="1005" fg:w="2"/><text x="80.3935%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.1435%" y="341" width="0.1595%" height="15" fill="rgb(214,153,10)" fg:x="1005" fg:w="2"/><text x="80.3935%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.1435%" y="325" width="0.1595%" height="15" fill="rgb(212,94,6)" fg:x="1005" fg:w="2"/><text x="80.3935%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.2233%" y="309" width="0.0797%" height="15" fill="rgb(254,25,27)" fg:x="1006" fg:w="1"/><text x="80.4733%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="80.0638%" y="405" width="0.3190%" height="15" fill="rgb(250,43,52)" fg:x="1004" fg:w="4"/><text x="80.3138%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3030%" y="389" width="0.0797%" height="15" fill="rgb(221,226,40)" fg:x="1007" fg:w="1"/><text x="80.5530%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.3030%" y="373" width="0.0797%" height="15" fill="rgb(235,162,34)" fg:x="1007" fg:w="1"/><text x="80.5530%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.3030%" y="357" width="0.0797%" height="15" fill="rgb(239,24,26)" fg:x="1007" fg:w="1"/><text x="80.5530%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.3828%" y="405" width="0.0797%" height="15" fill="rgb(244,226,11)" fg:x="1008" fg:w="1"/><text x="80.6328%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3828%" y="389" width="0.0797%" height="15" fill="rgb(225,23,10)" fg:x="1008" fg:w="1"/><text x="80.6328%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="79.9841%" y="421" width="0.7177%" height="15" fill="rgb(249,125,6)" fg:x="1003" fg:w="9"/><text x="80.2341%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.4625%" y="405" width="0.2392%" height="15" fill="rgb(246,212,12)" fg:x="1009" fg:w="3"/><text x="80.7125%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.4625%" y="389" width="0.2392%" height="15" fill="rgb(230,43,32)" fg:x="1009" fg:w="3"/><text x="80.7125%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.4625%" y="373" width="0.2392%" height="15" fill="rgb(210,95,23)" fg:x="1009" fg:w="3"/><text x="80.7125%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.5423%" y="357" width="0.1595%" height="15" fill="rgb(229,103,33)" fg:x="1010" fg:w="2"/><text x="80.7923%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.6220%" y="341" width="0.0797%" height="15" fill="rgb(222,104,27)" fg:x="1011" fg:w="1"/><text x="80.8720%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.6220%" y="325" width="0.0797%" height="15" fill="rgb(239,221,23)" fg:x="1011" fg:w="1"/><text x="80.8720%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.20%)</title><rect x="79.7448%" y="453" width="1.1962%" height="15" fill="rgb(222,98,21)" fg:x="1000" fg:w="15"/><text x="79.9948%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="79.9841%" y="437" width="0.9569%" height="15" fill="rgb(231,101,20)" fg:x="1003" fg:w="12"/><text x="80.2341%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.7018%" y="421" width="0.2392%" height="15" fill="rgb(215,150,22)" fg:x="1012" fg:w="3"/><text x="80.9518%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8612%" y="405" width="0.0797%" height="15" fill="rgb(248,3,34)" fg:x="1014" fg:w="1"/><text x="81.1112%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8612%" y="389" width="0.0797%" height="15" fill="rgb(220,141,21)" fg:x="1014" fg:w="1"/><text x="81.1112%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.9410%" y="421" width="0.0797%" height="15" fill="rgb(223,41,48)" fg:x="1015" fg:w="1"/><text x="81.1910%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.0207%" y="405" width="0.0797%" height="15" fill="rgb(247,12,5)" fg:x="1016" fg:w="1"/><text x="81.2707%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="81.1005%" y="373" width="0.0797%" height="15" fill="rgb(206,173,10)" fg:x="1017" fg:w="1"/><text x="81.3505%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.1005%" y="357" width="0.0797%" height="15" fill="rgb(233,214,37)" fg:x="1017" fg:w="1"/><text x="81.3505%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.1005%" y="341" width="0.0797%" height="15" fill="rgb(238,86,43)" fg:x="1017" fg:w="1"/><text x="81.3505%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.1005%" y="325" width="0.0797%" height="15" fill="rgb(212,182,8)" fg:x="1017" fg:w="1"/><text x="81.3505%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="80.9410%" y="453" width="0.3987%" height="15" fill="rgb(240,91,47)" fg:x="1015" fg:w="5"/><text x="81.1910%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="80.9410%" y="437" width="0.3987%" height="15" fill="rgb(209,138,26)" fg:x="1015" fg:w="5"/><text x="81.1910%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="81.0207%" y="421" width="0.3190%" height="15" fill="rgb(231,163,20)" fg:x="1016" fg:w="4"/><text x="81.2707%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.1005%" y="405" width="0.2392%" height="15" fill="rgb(214,91,54)" fg:x="1017" fg:w="3"/><text x="81.3505%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.1005%" y="389" width="0.2392%" height="15" fill="rgb(230,32,17)" fg:x="1017" fg:w="3"/><text x="81.3505%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.1802%" y="373" width="0.1595%" height="15" fill="rgb(231,34,34)" fg:x="1018" fg:w="2"/><text x="81.4302%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.2600%" y="357" width="0.0797%" height="15" fill="rgb(224,228,27)" fg:x="1019" fg:w="1"/><text x="81.5100%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.2600%" y="341" width="0.0797%" height="15" fill="rgb(219,35,40)" fg:x="1019" fg:w="1"/><text x="81.5100%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.3397%" y="405" width="0.1595%" height="15" fill="rgb(234,42,8)" fg:x="1020" fg:w="2"/><text x="81.5897%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4195%" y="389" width="0.0797%" height="15" fill="rgb(226,75,22)" fg:x="1021" fg:w="1"/><text x="81.6695%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.4195%" y="373" width="0.0797%" height="15" fill="rgb(242,203,28)" fg:x="1021" fg:w="1"/><text x="81.6695%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4992%" y="405" width="0.0797%" height="15" fill="rgb(221,3,9)" fg:x="1022" fg:w="1"/><text x="81.7492%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="81.4992%" y="389" width="0.0797%" height="15" fill="rgb(214,34,31)" fg:x="1022" fg:w="1"/><text x="81.7492%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7384%" y="357" width="0.0797%" height="15" fill="rgb(252,119,15)" fg:x="1025" fg:w="1"/><text x="81.9884%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7384%" y="341" width="0.0797%" height="15" fill="rgb(244,224,31)" fg:x="1025" fg:w="1"/><text x="81.9884%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7384%" y="325" width="0.0797%" height="15" fill="rgb(215,8,51)" fg:x="1025" fg:w="1"/><text x="81.9884%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.8182%" y="357" width="0.0797%" height="15" fill="rgb(207,24,1)" fg:x="1026" fg:w="1"/><text x="82.0682%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8979%" y="325" width="0.0797%" height="15" fill="rgb(245,90,0)" fg:x="1027" fg:w="1"/><text x="82.1479%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8979%" y="309" width="0.0797%" height="15" fill="rgb(246,43,48)" fg:x="1027" fg:w="1"/><text x="82.1479%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8979%" y="293" width="0.0797%" height="15" fill="rgb(252,218,10)" fg:x="1027" fg:w="1"/><text x="82.1479%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.0574%" y="309" width="0.0797%" height="15" fill="rgb(231,24,35)" fg:x="1029" fg:w="1"/><text x="82.3074%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.1372%" y="277" width="0.0797%" height="15" fill="rgb(225,66,19)" fg:x="1030" fg:w="1"/><text x="82.3872%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2169%" y="229" width="0.0797%" height="15" fill="rgb(214,96,51)" fg:x="1031" fg:w="1"/><text x="82.4669%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2169%" y="213" width="0.0797%" height="15" fill="rgb(251,151,47)" fg:x="1031" fg:w="1"/><text x="82.4669%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2169%" y="197" width="0.0797%" height="15" fill="rgb(236,79,14)" fg:x="1031" fg:w="1"/><text x="82.4669%" y="207.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="82.1372%" y="309" width="0.2392%" height="15" fill="rgb(210,205,11)" fg:x="1030" fg:w="3"/><text x="82.3872%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="82.1372%" y="293" width="0.2392%" height="15" fill="rgb(233,142,53)" fg:x="1030" fg:w="3"/><text x="82.3872%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.2169%" y="277" width="0.1595%" height="15" fill="rgb(212,116,48)" fg:x="1031" fg:w="2"/><text x="82.4669%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2169%" y="261" width="0.1595%" height="15" fill="rgb(234,55,33)" fg:x="1031" fg:w="2"/><text x="82.4669%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.2169%" y="245" width="0.1595%" height="15" fill="rgb(253,92,27)" fg:x="1031" fg:w="2"/><text x="82.4669%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.2967%" y="229" width="0.0797%" height="15" fill="rgb(220,7,35)" fg:x="1032" fg:w="1"/><text x="82.5467%" y="239.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.87%)</title><rect x="79.5853%" y="533" width="2.8708%" height="15" fill="rgb(246,124,6)" fg:x="998" fg:w="36"/><text x="79.8353%" y="543.50">en..</text></g><g><title>engine::session::state::State::close (35 samples, 2.79%)</title><rect x="79.6651%" y="517" width="2.7911%" height="15" fill="rgb(212,111,51)" fg:x="999" fg:w="35"/><text x="79.9151%" y="527.50">en..</text></g><g><title>engine::session::state::State::flush_entities (35 samples, 2.79%)</title><rect x="79.6651%" y="501" width="2.7911%" height="15" fill="rgb(253,116,7)" fg:x="999" fg:w="35"/><text x="79.9151%" y="511.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (35 samples, 2.79%)</title><rect x="79.6651%" y="485" width="2.7911%" height="15" fill="rgb(213,145,18)" fg:x="999" fg:w="35"/><text x="79.9151%" y="495.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (34 samples, 2.71%)</title><rect x="79.7448%" y="469" width="2.7113%" height="15" fill="rgb(219,149,7)" fg:x="1000" fg:w="34"/><text x="79.9948%" y="479.50">en..</text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.12%)</title><rect x="81.3397%" y="453" width="1.1164%" height="15" fill="rgb(225,156,20)" fg:x="1020" fg:w="14"/><text x="81.5897%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.12%)</title><rect x="81.3397%" y="437" width="1.1164%" height="15" fill="rgb(211,98,19)" fg:x="1020" fg:w="14"/><text x="81.5897%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.12%)</title><rect x="81.3397%" y="421" width="1.1164%" height="15" fill="rgb(231,192,31)" fg:x="1020" fg:w="14"/><text x="81.5897%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="81.5789%" y="405" width="0.8772%" height="15" fill="rgb(249,95,19)" fg:x="1023" fg:w="11"/><text x="81.8289%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="81.6587%" y="389" width="0.7974%" height="15" fill="rgb(247,101,36)" fg:x="1024" fg:w="10"/><text x="81.9087%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="81.6587%" y="373" width="0.7974%" height="15" fill="rgb(221,45,43)" fg:x="1024" fg:w="10"/><text x="81.9087%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="81.8979%" y="357" width="0.5582%" height="15" fill="rgb(220,42,1)" fg:x="1027" fg:w="7"/><text x="82.1479%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="81.8979%" y="341" width="0.5582%" height="15" fill="rgb(236,19,24)" fg:x="1027" fg:w="7"/><text x="82.1479%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="81.9777%" y="325" width="0.4785%" height="15" fill="rgb(225,192,6)" fg:x="1028" fg:w="6"/><text x="82.2277%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3764%" y="309" width="0.0797%" height="15" fill="rgb(242,30,19)" fg:x="1033" fg:w="1"/><text x="82.6264%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.5359%" y="501" width="0.0797%" height="15" fill="rgb(240,36,6)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.5359%" y="485" width="0.0797%" height="15" fill="rgb(246,40,28)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.5359%" y="469" width="0.0797%" height="15" fill="rgb(225,155,33)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5359%" y="453" width="0.0797%" height="15" fill="rgb(240,65,18)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5359%" y="437" width="0.0797%" height="15" fill="rgb(217,0,48)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5359%" y="421" width="0.0797%" height="15" fill="rgb(217,80,15)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5359%" y="405" width="0.0797%" height="15" fill="rgb(253,43,51)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5359%" y="389" width="0.0797%" height="15" fill="rgb(246,60,4)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5359%" y="373" width="0.0797%" height="15" fill="rgb(230,40,54)" fg:x="1035" fg:w="1"/><text x="82.7859%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6156%" y="421" width="0.0797%" height="15" fill="rgb(208,20,44)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6156%" y="405" width="0.0797%" height="15" fill="rgb(230,22,22)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6156%" y="389" width="0.0797%" height="15" fill="rgb(207,57,4)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6156%" y="373" width="0.0797%" height="15" fill="rgb(242,130,33)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6156%" y="357" width="0.0797%" height="15" fill="rgb(218,66,43)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6156%" y="341" width="0.0797%" height="15" fill="rgb(236,105,16)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.6156%" y="325" width="0.0797%" height="15" fill="rgb(230,46,15)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.6156%" y="309" width="0.0797%" height="15" fill="rgb(251,172,40)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.6156%" y="293" width="0.0797%" height="15" fill="rgb(225,217,32)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6156%" y="277" width="0.0797%" height="15" fill="rgb(243,10,29)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6156%" y="261" width="0.0797%" height="15" fill="rgb(207,102,10)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.6156%" y="245" width="0.0797%" height="15" fill="rgb(241,125,5)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.6156%" y="229" width="0.0797%" height="15" fill="rgb(230,125,29)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.6156%" y="213" width="0.0797%" height="15" fill="rgb(223,65,44)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.6156%" y="197" width="0.0797%" height="15" fill="rgb(224,188,28)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6156%" y="181" width="0.0797%" height="15" fill="rgb(254,197,27)" fg:x="1036" fg:w="1"/><text x="82.8656%" y="191.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.6156%" y="485" width="0.1595%" height="15" fill="rgb(220,200,25)" fg:x="1036" fg:w="2"/><text x="82.8656%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.6156%" y="469" width="0.1595%" height="15" fill="rgb(239,225,54)" fg:x="1036" fg:w="2"/><text x="82.8656%" y="479.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="82.6156%" y="453" width="0.1595%" height="15" fill="rgb(211,59,40)" fg:x="1036" fg:w="2"/><text x="82.8656%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="82.6156%" y="437" width="0.1595%" height="15" fill="rgb(213,176,46)" fg:x="1036" fg:w="2"/><text x="82.8656%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6954%" y="421" width="0.0797%" height="15" fill="rgb(226,99,4)" fg:x="1037" fg:w="1"/><text x="82.9454%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.6954%" y="405" width="0.0797%" height="15" fill="rgb(239,203,43)" fg:x="1037" fg:w="1"/><text x="82.9454%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6954%" y="389" width="0.0797%" height="15" fill="rgb(246,1,45)" fg:x="1037" fg:w="1"/><text x="82.9454%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.6954%" y="373" width="0.0797%" height="15" fill="rgb(231,42,52)" fg:x="1037" fg:w="1"/><text x="82.9454%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6954%" y="357" width="0.0797%" height="15" fill="rgb(240,13,50)" fg:x="1037" fg:w="1"/><text x="82.9454%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6954%" y="341" width="0.0797%" height="15" fill="rgb(225,81,14)" fg:x="1037" fg:w="1"/><text x="82.9454%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6954%" y="325" width="0.0797%" height="15" fill="rgb(216,182,23)" fg:x="1037" fg:w="1"/><text x="82.9454%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="82.5359%" y="517" width="0.7974%" height="15" fill="rgb(233,137,19)" fg:x="1035" fg:w="10"/><text x="82.7859%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="82.6156%" y="501" width="0.7177%" height="15" fill="rgb(242,61,46)" fg:x="1036" fg:w="9"/><text x="82.8656%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="82.7751%" y="485" width="0.5582%" height="15" fill="rgb(221,168,51)" fg:x="1038" fg:w="7"/><text x="83.0251%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="82.7751%" y="469" width="0.5582%" height="15" fill="rgb(238,48,15)" fg:x="1038" fg:w="7"/><text x="83.0251%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="82.7751%" y="453" width="0.5582%" height="15" fill="rgb(216,13,16)" fg:x="1038" fg:w="7"/><text x="83.0251%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="82.7751%" y="437" width="0.5582%" height="15" fill="rgb(223,185,34)" fg:x="1038" fg:w="7"/><text x="83.0251%" y="447.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="82.7751%" y="421" width="0.5582%" height="15" fill="rgb(228,94,42)" fg:x="1038" fg:w="7"/><text x="83.0251%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="83.3333%" y="501" width="0.0797%" height="15" fill="rgb(218,166,43)" fg:x="1045" fg:w="1"/><text x="83.5833%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="83.3333%" y="485" width="0.0797%" height="15" fill="rgb(232,30,50)" fg:x="1045" fg:w="1"/><text x="83.5833%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3333%" y="469" width="0.0797%" height="15" fill="rgb(245,206,45)" fg:x="1045" fg:w="1"/><text x="83.5833%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.4131%" y="501" width="0.0797%" height="15" fill="rgb(220,56,22)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="83.4131%" y="485" width="0.0797%" height="15" fill="rgb(239,129,38)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.4131%" y="469" width="0.0797%" height="15" fill="rgb(207,68,41)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.4131%" y="453" width="0.0797%" height="15" fill="rgb(221,21,7)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.4131%" y="437" width="0.0797%" height="15" fill="rgb(240,33,25)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4131%" y="421" width="0.0797%" height="15" fill="rgb(242,119,10)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4131%" y="405" width="0.0797%" height="15" fill="rgb(214,149,40)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4131%" y="389" width="0.0797%" height="15" fill="rgb(228,25,36)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4131%" y="373" width="0.0797%" height="15" fill="rgb(222,59,15)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.4131%" y="357" width="0.0797%" height="15" fill="rgb(218,170,0)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4131%" y="341" width="0.0797%" height="15" fill="rgb(232,173,23)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4131%" y="325" width="0.0797%" height="15" fill="rgb(218,116,1)" fg:x="1046" fg:w="1"/><text x="83.6631%" y="335.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.4928%" y="501" width="0.0797%" height="15" fill="rgb(207,34,4)" fg:x="1047" fg:w="1"/><text x="83.7428%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4928%" y="485" width="0.0797%" height="15" fill="rgb(229,54,52)" fg:x="1047" fg:w="1"/><text x="83.7428%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.4928%" y="469" width="0.0797%" height="15" fill="rgb(211,86,23)" fg:x="1047" fg:w="1"/><text x="83.7428%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4928%" y="453" width="0.0797%" height="15" fill="rgb(254,153,34)" fg:x="1047" fg:w="1"/><text x="83.7428%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4928%" y="437" width="0.0797%" height="15" fill="rgb(219,220,14)" fg:x="1047" fg:w="1"/><text x="83.7428%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.5726%" y="485" width="0.0797%" height="15" fill="rgb(247,8,26)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="83.5726%" y="469" width="0.0797%" height="15" fill="rgb(213,129,42)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5726%" y="453" width="0.0797%" height="15" fill="rgb(225,95,41)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5726%" y="437" width="0.0797%" height="15" fill="rgb(215,134,24)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.5726%" y="421" width="0.0797%" height="15" fill="rgb(235,23,54)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.5726%" y="405" width="0.0797%" height="15" fill="rgb(229,96,31)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.5726%" y="389" width="0.0797%" height="15" fill="rgb(206,111,12)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5726%" y="373" width="0.0797%" height="15" fill="rgb(222,177,8)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.5726%" y="357" width="0.0797%" height="15" fill="rgb(251,36,52)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.5726%" y="341" width="0.0797%" height="15" fill="rgb(216,182,29)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.5726%" y="325" width="0.0797%" height="15" fill="rgb(241,145,50)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.5726%" y="309" width="0.0797%" height="15" fill="rgb(231,71,35)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.5726%" y="293" width="0.0797%" height="15" fill="rgb(218,22,17)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5726%" y="277" width="0.0797%" height="15" fill="rgb(225,227,6)" fg:x="1048" fg:w="1"/><text x="83.8226%" y="287.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.28%)</title><rect x="82.4561%" y="533" width="1.2759%" height="15" fill="rgb(224,204,17)" fg:x="1034" fg:w="16"/><text x="82.7061%" y="543.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="83.3333%" y="517" width="0.3987%" height="15" fill="rgb(227,61,28)" fg:x="1045" fg:w="5"/><text x="83.5833%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="83.5726%" y="501" width="0.1595%" height="15" fill="rgb(242,148,23)" fg:x="1048" fg:w="2"/><text x="83.8226%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="83.6523%" y="485" width="0.0797%" height="15" fill="rgb(237,105,33)" fg:x="1049" fg:w="1"/><text x="83.9023%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.6523%" y="469" width="0.0797%" height="15" fill="rgb(238,218,40)" fg:x="1049" fg:w="1"/><text x="83.9023%" y="479.50"></text></g><g><title>kernel::model::base::Kind::new (1 samples, 0.08%)</title><rect x="83.6523%" y="453" width="0.0797%" height="15" fill="rgb(209,126,11)" fg:x="1049" fg:w="1"/><text x="83.9023%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="83.7321%" y="501" width="0.0797%" height="15" fill="rgb(245,90,11)" fg:x="1050" fg:w="1"/><text x="83.9821%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.8118%" y="453" width="0.0797%" height="15" fill="rgb(211,195,10)" fg:x="1051" fg:w="1"/><text x="84.0618%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.8118%" y="437" width="0.0797%" height="15" fill="rgb(231,45,45)" fg:x="1051" fg:w="1"/><text x="84.0618%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.8118%" y="421" width="0.0797%" height="15" fill="rgb(246,100,43)" fg:x="1051" fg:w="1"/><text x="84.0618%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.8118%" y="405" width="0.0797%" height="15" fill="rgb(241,193,8)" fg:x="1051" fg:w="1"/><text x="84.0618%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8118%" y="389" width="0.0797%" height="15" fill="rgb(208,76,19)" fg:x="1051" fg:w="1"/><text x="84.0618%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.8118%" y="501" width="0.1595%" height="15" fill="rgb(223,69,40)" fg:x="1051" fg:w="2"/><text x="84.0618%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.8118%" y="485" width="0.1595%" height="15" fill="rgb(207,120,39)" fg:x="1051" fg:w="2"/><text x="84.0618%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.8118%" y="469" width="0.1595%" height="15" fill="rgb(212,209,28)" fg:x="1051" fg:w="2"/><text x="84.0618%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8915%" y="453" width="0.0797%" height="15" fill="rgb(246,82,29)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8915%" y="437" width="0.0797%" height="15" fill="rgb(239,6,40)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8915%" y="421" width="0.0797%" height="15" fill="rgb(228,181,35)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8915%" y="405" width="0.0797%" height="15" fill="rgb(238,151,2)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.8915%" y="389" width="0.0797%" height="15" fill="rgb(236,94,18)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8915%" y="373" width="0.0797%" height="15" fill="rgb(208,38,14)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8915%" y="357" width="0.0797%" height="15" fill="rgb(234,215,27)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8915%" y="341" width="0.0797%" height="15" fill="rgb(254,211,53)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.8915%" y="325" width="0.0797%" height="15" fill="rgb(216,175,11)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8915%" y="309" width="0.0797%" height="15" fill="rgb(246,179,26)" fg:x="1052" fg:w="1"/><text x="84.1415%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9713%" y="357" width="0.0797%" height="15" fill="rgb(249,19,52)" fg:x="1053" fg:w="1"/><text x="84.2213%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9713%" y="341" width="0.0797%" height="15" fill="rgb(230,42,52)" fg:x="1053" fg:w="1"/><text x="84.2213%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.9713%" y="421" width="0.1595%" height="15" fill="rgb(221,171,0)" fg:x="1053" fg:w="2"/><text x="84.2213%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.9713%" y="405" width="0.1595%" height="15" fill="rgb(222,177,40)" fg:x="1053" fg:w="2"/><text x="84.2213%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.9713%" y="389" width="0.1595%" height="15" fill="rgb(247,34,16)" fg:x="1053" fg:w="2"/><text x="84.2213%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.9713%" y="373" width="0.1595%" height="15" fill="rgb(213,217,37)" fg:x="1053" fg:w="2"/><text x="84.2213%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0510%" y="357" width="0.0797%" height="15" fill="rgb(231,189,24)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0510%" y="341" width="0.0797%" height="15" fill="rgb(214,22,9)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.0510%" y="325" width="0.0797%" height="15" fill="rgb(212,70,22)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.0510%" y="309" width="0.0797%" height="15" fill="rgb(249,64,51)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.0510%" y="293" width="0.0797%" height="15" fill="rgb(249,148,20)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.0510%" y="277" width="0.0797%" height="15" fill="rgb(246,46,48)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.0510%" y="261" width="0.0797%" height="15" fill="rgb(217,34,48)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.0510%" y="245" width="0.0797%" height="15" fill="rgb(222,45,26)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.0510%" y="229" width="0.0797%" height="15" fill="rgb(230,201,36)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.0510%" y="213" width="0.0797%" height="15" fill="rgb(217,30,43)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.0510%" y="197" width="0.0797%" height="15" fill="rgb(230,197,40)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.0510%" y="181" width="0.0797%" height="15" fill="rgb(239,181,18)" fg:x="1054" fg:w="1"/><text x="84.3010%" y="191.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="84.1308%" y="341" width="0.0797%" height="15" fill="rgb(222,60,39)" fg:x="1055" fg:w="1"/><text x="84.3808%" y="351.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="83.7321%" y="533" width="0.5582%" height="15" fill="rgb(210,60,22)" fg:x="1050" fg:w="7"/><text x="83.9821%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="83.7321%" y="517" width="0.5582%" height="15" fill="rgb(239,213,48)" fg:x="1050" fg:w="7"/><text x="83.9821%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="83.9713%" y="501" width="0.3190%" height="15" fill="rgb(253,214,23)" fg:x="1053" fg:w="4"/><text x="84.2213%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="83.9713%" y="485" width="0.3190%" height="15" fill="rgb(211,98,45)" fg:x="1053" fg:w="4"/><text x="84.2213%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="83.9713%" y="469" width="0.3190%" height="15" fill="rgb(239,130,44)" fg:x="1053" fg:w="4"/><text x="84.2213%" y="479.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="83.9713%" y="453" width="0.3190%" height="15" fill="rgb(222,181,35)" fg:x="1053" fg:w="4"/><text x="84.2213%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="83.9713%" y="437" width="0.3190%" height="15" fill="rgb(219,219,49)" fg:x="1053" fg:w="4"/><text x="84.2213%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="84.1308%" y="421" width="0.1595%" height="15" fill="rgb(227,161,51)" fg:x="1055" fg:w="2"/><text x="84.3808%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.1308%" y="405" width="0.1595%" height="15" fill="rgb(239,112,27)" fg:x="1055" fg:w="2"/><text x="84.3808%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="84.1308%" y="389" width="0.1595%" height="15" fill="rgb(248,122,18)" fg:x="1055" fg:w="2"/><text x="84.3808%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.1308%" y="373" width="0.1595%" height="15" fill="rgb(245,130,23)" fg:x="1055" fg:w="2"/><text x="84.3808%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="84.1308%" y="357" width="0.1595%" height="15" fill="rgb(211,225,28)" fg:x="1055" fg:w="2"/><text x="84.3808%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2105%" y="341" width="0.0797%" height="15" fill="rgb(242,105,44)" fg:x="1056" fg:w="1"/><text x="84.4605%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2105%" y="325" width="0.0797%" height="15" fill="rgb(216,183,46)" fg:x="1056" fg:w="1"/><text x="84.4605%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2105%" y="309" width="0.0797%" height="15" fill="rgb(227,112,9)" fg:x="1056" fg:w="1"/><text x="84.4605%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2105%" y="293" width="0.0797%" height="15" fill="rgb(244,21,0)" fg:x="1056" fg:w="1"/><text x="84.4605%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2105%" y="277" width="0.0797%" height="15" fill="rgb(236,185,14)" fg:x="1056" fg:w="1"/><text x="84.4605%" y="287.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="84.2903%" y="533" width="0.0797%" height="15" fill="rgb(236,170,30)" fg:x="1057" fg:w="1"/><text x="84.5403%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="84.2903%" y="517" width="0.0797%" height="15" fill="rgb(209,198,51)" fg:x="1057" fg:w="1"/><text x="84.5403%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.2903%" y="501" width="0.0797%" height="15" fill="rgb(205,171,26)" fg:x="1057" fg:w="1"/><text x="84.5403%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.2903%" y="485" width="0.0797%" height="15" fill="rgb(246,41,49)" fg:x="1057" fg:w="1"/><text x="84.5403%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2903%" y="469" width="0.0797%" height="15" fill="rgb(240,229,12)" fg:x="1057" fg:w="1"/><text x="84.5403%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2903%" y="453" width="0.0797%" height="15" fill="rgb(212,8,54)" fg:x="1057" fg:w="1"/><text x="84.5403%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2903%" y="437" width="0.0797%" height="15" fill="rgb(230,114,13)" fg:x="1057" fg:w="1"/><text x="84.5403%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2903%" y="421" width="0.0797%" height="15" fill="rgb(229,130,28)" fg:x="1057" fg:w="1"/><text x="84.5403%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3700%" y="421" width="0.0797%" height="15" fill="rgb(206,139,15)" fg:x="1058" fg:w="1"/><text x="84.6200%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3700%" y="405" width="0.0797%" height="15" fill="rgb(241,188,35)" fg:x="1058" fg:w="1"/><text x="84.6200%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3700%" y="389" width="0.0797%" height="15" fill="rgb(208,224,26)" fg:x="1058" fg:w="1"/><text x="84.6200%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3700%" y="373" width="0.0797%" height="15" fill="rgb(251,131,28)" fg:x="1058" fg:w="1"/><text x="84.6200%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.3700%" y="453" width="0.1595%" height="15" fill="rgb(208,153,1)" fg:x="1058" fg:w="2"/><text x="84.6200%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.3700%" y="437" width="0.1595%" height="15" fill="rgb(234,33,36)" fg:x="1058" fg:w="2"/><text x="84.6200%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4498%" y="421" width="0.0797%" height="15" fill="rgb(246,42,29)" fg:x="1059" fg:w="1"/><text x="84.6998%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="84.3700%" y="517" width="0.2392%" height="15" fill="rgb(251,114,16)" fg:x="1058" fg:w="3"/><text x="84.6200%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="84.3700%" y="501" width="0.2392%" height="15" fill="rgb(233,13,38)" fg:x="1058" fg:w="3"/><text x="84.6200%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="84.3700%" y="485" width="0.2392%" height="15" fill="rgb(247,120,19)" fg:x="1058" fg:w="3"/><text x="84.6200%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.3700%" y="469" width="0.2392%" height="15" fill="rgb(205,11,16)" fg:x="1058" fg:w="3"/><text x="84.6200%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5295%" y="453" width="0.0797%" height="15" fill="rgb(228,185,19)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5295%" y="437" width="0.0797%" height="15" fill="rgb(239,88,52)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5295%" y="421" width="0.0797%" height="15" fill="rgb(219,23,1)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5295%" y="405" width="0.0797%" height="15" fill="rgb(253,177,16)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5295%" y="389" width="0.0797%" height="15" fill="rgb(225,150,40)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5295%" y="373" width="0.0797%" height="15" fill="rgb(208,108,30)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5295%" y="357" width="0.0797%" height="15" fill="rgb(214,122,4)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.5295%" y="341" width="0.0797%" height="15" fill="rgb(229,74,37)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.5295%" y="325" width="0.0797%" height="15" fill="rgb(233,61,41)" fg:x="1060" fg:w="1"/><text x="84.7795%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6093%" y="517" width="0.0797%" height="15" fill="rgb(238,191,5)" fg:x="1061" fg:w="1"/><text x="84.8593%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="84.6890%" y="437" width="0.0797%" height="15" fill="rgb(233,78,24)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="84.6890%" y="421" width="0.0797%" height="15" fill="rgb(211,142,8)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="84.6890%" y="405" width="0.0797%" height="15" fill="rgb(253,38,53)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.6890%" y="389" width="0.0797%" height="15" fill="rgb(234,63,51)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.6890%" y="373" width="0.0797%" height="15" fill="rgb(205,23,31)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.6890%" y="357" width="0.0797%" height="15" fill="rgb(210,184,50)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="84.6890%" y="341" width="0.0797%" height="15" fill="rgb(222,112,26)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="84.6890%" y="325" width="0.0797%" height="15" fill="rgb(250,98,18)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.6890%" y="309" width="0.0797%" height="15" fill="rgb(250,34,12)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="84.6890%" y="293" width="0.0797%" height="15" fill="rgb(236,141,30)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="84.6890%" y="277" width="0.0797%" height="15" fill="rgb(246,134,38)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="84.6890%" y="261" width="0.0797%" height="15" fill="rgb(240,114,4)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="271.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.6890%" y="245" width="0.0797%" height="15" fill="rgb(243,113,39)" fg:x="1062" fg:w="1"/><text x="84.9390%" y="255.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="84.6890%" y="469" width="0.1595%" height="15" fill="rgb(239,215,4)" fg:x="1062" fg:w="2"/><text x="84.9390%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="84.6890%" y="453" width="0.1595%" height="15" fill="rgb(236,229,45)" fg:x="1062" fg:w="2"/><text x="84.9390%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.7687%" y="437" width="0.0797%" height="15" fill="rgb(242,2,6)" fg:x="1063" fg:w="1"/><text x="85.0187%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.7687%" y="421" width="0.0797%" height="15" fill="rgb(239,108,21)" fg:x="1063" fg:w="1"/><text x="85.0187%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7687%" y="405" width="0.0797%" height="15" fill="rgb(215,168,34)" fg:x="1063" fg:w="1"/><text x="85.0187%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7687%" y="389" width="0.0797%" height="15" fill="rgb(238,31,17)" fg:x="1063" fg:w="1"/><text x="85.0187%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7687%" y="373" width="0.0797%" height="15" fill="rgb(220,133,11)" fg:x="1063" fg:w="1"/><text x="85.0187%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7687%" y="357" width="0.0797%" height="15" fill="rgb(212,158,23)" fg:x="1063" fg:w="1"/><text x="85.0187%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.8485%" y="437" width="0.0797%" height="15" fill="rgb(223,172,7)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.8485%" y="421" width="0.0797%" height="15" fill="rgb(244,3,52)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.8485%" y="405" width="0.0797%" height="15" fill="rgb(207,69,27)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8485%" y="389" width="0.0797%" height="15" fill="rgb(213,136,45)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8485%" y="373" width="0.0797%" height="15" fill="rgb(218,79,17)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8485%" y="357" width="0.0797%" height="15" fill="rgb(216,106,36)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8485%" y="341" width="0.0797%" height="15" fill="rgb(251,27,45)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.8485%" y="325" width="0.0797%" height="15" fill="rgb(232,21,34)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8485%" y="309" width="0.0797%" height="15" fill="rgb(249,191,16)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.8485%" y="293" width="0.0797%" height="15" fill="rgb(224,88,20)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8485%" y="277" width="0.0797%" height="15" fill="rgb(237,93,27)" fg:x="1064" fg:w="1"/><text x="85.0985%" y="287.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.9282%" y="389" width="0.0797%" height="15" fill="rgb(226,198,48)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.9282%" y="373" width="0.0797%" height="15" fill="rgb(207,162,53)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9282%" y="357" width="0.0797%" height="15" fill="rgb(207,169,9)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9282%" y="341" width="0.0797%" height="15" fill="rgb(224,166,46)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9282%" y="325" width="0.0797%" height="15" fill="rgb(233,26,6)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9282%" y="309" width="0.0797%" height="15" fill="rgb(218,106,45)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.9282%" y="293" width="0.0797%" height="15" fill="rgb(240,217,4)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9282%" y="277" width="0.0797%" height="15" fill="rgb(246,171,10)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9282%" y="261" width="0.0797%" height="15" fill="rgb(223,197,30)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9282%" y="245" width="0.0797%" height="15" fill="rgb(207,92,16)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.9282%" y="229" width="0.0797%" height="15" fill="rgb(211,6,44)" fg:x="1065" fg:w="1"/><text x="85.1782%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="84.8485%" y="453" width="0.2392%" height="15" fill="rgb(219,139,2)" fg:x="1064" fg:w="3"/><text x="85.0985%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="84.9282%" y="437" width="0.1595%" height="15" fill="rgb(224,103,21)" fg:x="1065" fg:w="2"/><text x="85.1782%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.9282%" y="421" width="0.1595%" height="15" fill="rgb(254,110,48)" fg:x="1065" fg:w="2"/><text x="85.1782%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="84.9282%" y="405" width="0.1595%" height="15" fill="rgb(212,88,19)" fg:x="1065" fg:w="2"/><text x="85.1782%" y="415.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.0080%" y="389" width="0.0797%" height="15" fill="rgb(248,103,6)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.0080%" y="373" width="0.0797%" height="15" fill="rgb(214,53,46)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0080%" y="357" width="0.0797%" height="15" fill="rgb(236,190,24)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.0080%" y="341" width="0.0797%" height="15" fill="rgb(254,58,28)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0080%" y="325" width="0.0797%" height="15" fill="rgb(243,63,27)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.0080%" y="309" width="0.0797%" height="15" fill="rgb(206,81,20)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.0080%" y="293" width="0.0797%" height="15" fill="rgb(252,69,51)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0080%" y="277" width="0.0797%" height="15" fill="rgb(222,213,4)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.0080%" y="261" width="0.0797%" height="15" fill="rgb(226,198,12)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0080%" y="245" width="0.0797%" height="15" fill="rgb(248,115,11)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0080%" y="229" width="0.0797%" height="15" fill="rgb(221,148,54)" fg:x="1066" fg:w="1"/><text x="85.2580%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0877%" y="325" width="0.0797%" height="15" fill="rgb(214,209,51)" fg:x="1067" fg:w="1"/><text x="85.3377%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0877%" y="309" width="0.0797%" height="15" fill="rgb(249,116,53)" fg:x="1067" fg:w="1"/><text x="85.3377%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.0877%" y="405" width="0.1595%" height="15" fill="rgb(248,170,1)" fg:x="1067" fg:w="2"/><text x="85.3377%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.0877%" y="389" width="0.1595%" height="15" fill="rgb(244,105,10)" fg:x="1067" fg:w="2"/><text x="85.3377%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.0877%" y="373" width="0.1595%" height="15" fill="rgb(229,100,5)" fg:x="1067" fg:w="2"/><text x="85.3377%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.0877%" y="357" width="0.1595%" height="15" fill="rgb(233,221,39)" fg:x="1067" fg:w="2"/><text x="85.3377%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.0877%" y="341" width="0.1595%" height="15" fill="rgb(233,88,21)" fg:x="1067" fg:w="2"/><text x="85.3377%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1675%" y="325" width="0.0797%" height="15" fill="rgb(206,13,0)" fg:x="1068" fg:w="1"/><text x="85.4175%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1675%" y="309" width="0.0797%" height="15" fill="rgb(242,15,35)" fg:x="1068" fg:w="1"/><text x="85.4175%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.1675%" y="293" width="0.0797%" height="15" fill="rgb(247,142,41)" fg:x="1068" fg:w="1"/><text x="85.4175%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1675%" y="277" width="0.0797%" height="15" fill="rgb(245,51,29)" fg:x="1068" fg:w="1"/><text x="85.4175%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.1675%" y="261" width="0.0797%" height="15" fill="rgb(228,209,43)" fg:x="1068" fg:w="1"/><text x="85.4175%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="85.0877%" y="437" width="0.3190%" height="15" fill="rgb(233,185,9)" fg:x="1067" fg:w="4"/><text x="85.3377%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="85.0877%" y="421" width="0.3190%" height="15" fill="rgb(226,93,0)" fg:x="1067" fg:w="4"/><text x="85.3377%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.2472%" y="405" width="0.1595%" height="15" fill="rgb(245,194,43)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.2472%" y="389" width="0.1595%" height="15" fill="rgb(211,145,34)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.2472%" y="373" width="0.1595%" height="15" fill="rgb(231,228,28)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.2472%" y="357" width="0.1595%" height="15" fill="rgb(236,149,4)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.2472%" y="341" width="0.1595%" height="15" fill="rgb(234,114,38)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.2472%" y="325" width="0.1595%" height="15" fill="rgb(246,132,51)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.2472%" y="309" width="0.1595%" height="15" fill="rgb(251,137,22)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.2472%" y="293" width="0.1595%" height="15" fill="rgb(243,59,52)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.2472%" y="277" width="0.1595%" height="15" fill="rgb(239,56,28)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.2472%" y="261" width="0.1595%" height="15" fill="rgb(218,168,27)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.2472%" y="245" width="0.1595%" height="15" fill="rgb(232,165,11)" fg:x="1069" fg:w="2"/><text x="85.4972%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.80%)</title><rect x="84.6890%" y="517" width="0.7974%" height="15" fill="rgb(253,55,41)" fg:x="1062" fg:w="10"/><text x="84.9390%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="84.6890%" y="501" width="0.7974%" height="15" fill="rgb(233,206,24)" fg:x="1062" fg:w="10"/><text x="84.9390%" y="511.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="84.6890%" y="485" width="0.7974%" height="15" fill="rgb(220,199,8)" fg:x="1062" fg:w="10"/><text x="84.9390%" y="495.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.64%)</title><rect x="84.8485%" y="469" width="0.6380%" height="15" fill="rgb(254,65,26)" fg:x="1064" fg:w="8"/><text x="85.0985%" y="479.50"></text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.40%)</title><rect x="85.0877%" y="453" width="0.3987%" height="15" fill="rgb(253,102,23)" fg:x="1067" fg:w="5"/><text x="85.3377%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.4067%" y="437" width="0.0797%" height="15" fill="rgb(231,103,35)" fg:x="1071" fg:w="1"/><text x="85.6567%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4067%" y="421" width="0.0797%" height="15" fill="rgb(238,26,10)" fg:x="1071" fg:w="1"/><text x="85.6567%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.4067%" y="405" width="0.0797%" height="15" fill="rgb(234,191,34)" fg:x="1071" fg:w="1"/><text x="85.6567%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.4067%" y="389" width="0.0797%" height="15" fill="rgb(206,210,9)" fg:x="1071" fg:w="1"/><text x="85.6567%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.4864%" y="501" width="0.0797%" height="15" fill="rgb(219,155,3)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4864%" y="485" width="0.0797%" height="15" fill="rgb(221,62,52)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4864%" y="469" width="0.0797%" height="15" fill="rgb(215,197,36)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.4864%" y="453" width="0.0797%" height="15" fill="rgb(226,222,6)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.4864%" y="437" width="0.0797%" height="15" fill="rgb(215,58,28)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.4864%" y="421" width="0.0797%" height="15" fill="rgb(212,148,2)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4864%" y="405" width="0.0797%" height="15" fill="rgb(208,21,42)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4864%" y="389" width="0.0797%" height="15" fill="rgb(209,107,26)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.4864%" y="373" width="0.0797%" height="15" fill="rgb(254,60,47)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.4864%" y="357" width="0.0797%" height="15" fill="rgb(207,226,45)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.4864%" y="341" width="0.0797%" height="15" fill="rgb(223,124,22)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.4864%" y="325" width="0.0797%" height="15" fill="rgb(240,162,13)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4864%" y="309" width="0.0797%" height="15" fill="rgb(244,199,31)" fg:x="1072" fg:w="1"/><text x="85.7364%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="85.5662%" y="453" width="0.1595%" height="15" fill="rgb(207,92,16)" fg:x="1073" fg:w="2"/><text x="85.8162%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="85.5662%" y="437" width="0.1595%" height="15" fill="rgb(215,31,19)" fg:x="1073" fg:w="2"/><text x="85.8162%" y="447.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="85.5662%" y="421" width="0.1595%" height="15" fill="rgb(245,118,14)" fg:x="1073" fg:w="2"/><text x="85.8162%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6459%" y="405" width="0.0797%" height="15" fill="rgb(248,12,46)" fg:x="1074" fg:w="1"/><text x="85.8959%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.7257%" y="405" width="0.0797%" height="15" fill="rgb(209,119,0)" fg:x="1075" fg:w="1"/><text x="85.9757%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.7257%" y="389" width="0.0797%" height="15" fill="rgb(254,51,44)" fg:x="1075" fg:w="1"/><text x="85.9757%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="85.8054%" y="389" width="0.2392%" height="15" fill="rgb(253,182,35)" fg:x="1076" fg:w="3"/><text x="86.0554%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.8852%" y="373" width="0.1595%" height="15" fill="rgb(205,198,39)" fg:x="1077" fg:w="2"/><text x="86.1352%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.9649%" y="357" width="0.0797%" height="15" fill="rgb(251,175,48)" fg:x="1078" fg:w="1"/><text x="86.2149%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.1244%" y="373" width="0.0797%" height="15" fill="rgb(239,38,17)" fg:x="1080" fg:w="1"/><text x="86.3744%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1244%" y="357" width="0.0797%" height="15" fill="rgb(212,101,8)" fg:x="1080" fg:w="1"/><text x="86.3744%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.1244%" y="341" width="0.0797%" height="15" fill="rgb(228,35,17)" fg:x="1080" fg:w="1"/><text x="86.3744%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.2041%" y="373" width="0.1595%" height="15" fill="rgb(214,95,8)" fg:x="1081" fg:w="2"/><text x="86.4541%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.4434%" y="341" width="0.1595%" height="15" fill="rgb(210,176,35)" fg:x="1084" fg:w="2"/><text x="86.6934%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.5231%" y="325" width="0.0797%" height="15" fill="rgb(226,4,3)" fg:x="1085" fg:w="1"/><text x="86.7731%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.5231%" y="309" width="0.0797%" height="15" fill="rgb(232,133,14)" fg:x="1085" fg:w="1"/><text x="86.7731%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.5231%" y="293" width="0.0797%" height="15" fill="rgb(250,191,8)" fg:x="1085" fg:w="1"/><text x="86.7731%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.5231%" y="277" width="0.0797%" height="15" fill="rgb(213,12,45)" fg:x="1085" fg:w="1"/><text x="86.7731%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.5231%" y="261" width="0.0797%" height="15" fill="rgb(233,78,26)" fg:x="1085" fg:w="1"/><text x="86.7731%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.6029%" y="325" width="0.0797%" height="15" fill="rgb(245,222,11)" fg:x="1086" fg:w="1"/><text x="86.8529%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.6029%" y="309" width="0.0797%" height="15" fill="rgb(216,174,12)" fg:x="1086" fg:w="1"/><text x="86.8529%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.6029%" y="293" width="0.0797%" height="15" fill="rgb(213,15,9)" fg:x="1086" fg:w="1"/><text x="86.8529%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.6029%" y="277" width="0.0797%" height="15" fill="rgb(238,103,32)" fg:x="1086" fg:w="1"/><text x="86.8529%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.6826%" y="325" width="0.1595%" height="15" fill="rgb(245,85,15)" fg:x="1087" fg:w="2"/><text x="86.9326%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.6826%" y="309" width="0.1595%" height="15" fill="rgb(254,204,5)" fg:x="1087" fg:w="2"/><text x="86.9326%" y="319.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.6826%" y="293" width="0.1595%" height="15" fill="rgb(231,178,15)" fg:x="1087" fg:w="2"/><text x="86.9326%" y="303.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.7624%" y="277" width="0.0797%" height="15" fill="rgb(248,151,3)" fg:x="1088" fg:w="1"/><text x="87.0124%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="86.3636%" y="357" width="0.5582%" height="15" fill="rgb(250,139,13)" fg:x="1083" fg:w="7"/><text x="86.6136%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="86.6029%" y="341" width="0.3190%" height="15" fill="rgb(243,107,53)" fg:x="1086" fg:w="4"/><text x="86.8529%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.8421%" y="325" width="0.0797%" height="15" fill="rgb(232,81,15)" fg:x="1089" fg:w="1"/><text x="87.0921%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.8421%" y="309" width="0.0797%" height="15" fill="rgb(225,187,48)" fg:x="1089" fg:w="1"/><text x="87.0921%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.8421%" y="293" width="0.0797%" height="15" fill="rgb(205,116,12)" fg:x="1089" fg:w="1"/><text x="87.0921%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="86.3636%" y="373" width="0.7177%" height="15" fill="rgb(220,222,31)" fg:x="1083" fg:w="9"/><text x="86.6136%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.9219%" y="357" width="0.1595%" height="15" fill="rgb(233,187,49)" fg:x="1090" fg:w="2"/><text x="87.1719%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.9219%" y="341" width="0.1595%" height="15" fill="rgb(211,168,53)" fg:x="1090" fg:w="2"/><text x="87.1719%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.0016%" y="325" width="0.0797%" height="15" fill="rgb(206,160,16)" fg:x="1091" fg:w="1"/><text x="87.2516%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="86.0447%" y="389" width="1.1164%" height="15" fill="rgb(254,164,13)" fg:x="1079" fg:w="14"/><text x="86.2947%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.0813%" y="373" width="0.0797%" height="15" fill="rgb(229,45,30)" fg:x="1092" fg:w="1"/><text x="87.3313%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.59%)</title><rect x="85.7257%" y="421" width="1.5949%" height="15" fill="rgb(237,32,10)" fg:x="1075" fg:w="20"/><text x="85.9757%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="85.8054%" y="405" width="1.5152%" height="15" fill="rgb(251,20,47)" fg:x="1076" fg:w="19"/><text x="86.0554%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.1611%" y="389" width="0.1595%" height="15" fill="rgb(251,116,12)" fg:x="1093" fg:w="2"/><text x="87.4111%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.1611%" y="373" width="0.1595%" height="15" fill="rgb(214,227,27)" fg:x="1093" fg:w="2"/><text x="87.4111%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.1611%" y="357" width="0.1595%" height="15" fill="rgb(248,10,53)" fg:x="1093" fg:w="2"/><text x="87.4111%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.2408%" y="341" width="0.0797%" height="15" fill="rgb(221,176,25)" fg:x="1094" fg:w="1"/><text x="87.4908%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3206%" y="389" width="0.0797%" height="15" fill="rgb(205,70,46)" fg:x="1095" fg:w="1"/><text x="87.5706%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4003%" y="357" width="0.0797%" height="15" fill="rgb(217,45,38)" fg:x="1096" fg:w="1"/><text x="87.6503%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.3206%" y="421" width="0.2392%" height="15" fill="rgb(243,6,54)" fg:x="1095" fg:w="3"/><text x="87.5706%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="87.3206%" y="405" width="0.2392%" height="15" fill="rgb(242,76,23)" fg:x="1095" fg:w="3"/><text x="87.5706%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.4003%" y="389" width="0.1595%" height="15" fill="rgb(239,166,0)" fg:x="1096" fg:w="2"/><text x="87.6503%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.4003%" y="373" width="0.1595%" height="15" fill="rgb(238,174,32)" fg:x="1096" fg:w="2"/><text x="87.6503%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4801%" y="357" width="0.0797%" height="15" fill="rgb(238,124,44)" fg:x="1097" fg:w="1"/><text x="87.7301%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4801%" y="341" width="0.0797%" height="15" fill="rgb(206,185,9)" fg:x="1097" fg:w="1"/><text x="87.7301%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4801%" y="325" width="0.0797%" height="15" fill="rgb(215,157,17)" fg:x="1097" fg:w="1"/><text x="87.7301%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4801%" y="309" width="0.0797%" height="15" fill="rgb(251,17,29)" fg:x="1097" fg:w="1"/><text x="87.7301%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4801%" y="293" width="0.0797%" height="15" fill="rgb(227,113,27)" fg:x="1097" fg:w="1"/><text x="87.7301%" y="303.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="87.5598%" y="405" width="0.0797%" height="15" fill="rgb(217,226,24)" fg:x="1098" fg:w="1"/><text x="87.8098%" y="415.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="87.5598%" y="389" width="0.0797%" height="15" fill="rgb(251,99,38)" fg:x="1098" fg:w="1"/><text x="87.8098%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.7193%" y="373" width="0.1595%" height="15" fill="rgb(231,147,19)" fg:x="1100" fg:w="2"/><text x="87.9693%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.8788%" y="373" width="0.0797%" height="15" fill="rgb(230,86,8)" fg:x="1102" fg:w="1"/><text x="88.1288%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.8788%" y="357" width="0.0797%" height="15" fill="rgb(237,159,39)" fg:x="1102" fg:w="1"/><text x="88.1288%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.8788%" y="341" width="0.0797%" height="15" fill="rgb(247,179,47)" fg:x="1102" fg:w="1"/><text x="88.1288%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9585%" y="277" width="0.0797%" height="15" fill="rgb(253,152,26)" fg:x="1103" fg:w="1"/><text x="88.2085%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9585%" y="261" width="0.0797%" height="15" fill="rgb(222,211,15)" fg:x="1103" fg:w="1"/><text x="88.2085%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="87.9585%" y="293" width="0.1595%" height="15" fill="rgb(236,193,6)" fg:x="1103" fg:w="2"/><text x="88.2085%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.0383%" y="277" width="0.0797%" height="15" fill="rgb(226,206,10)" fg:x="1104" fg:w="1"/><text x="88.2883%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0383%" y="261" width="0.0797%" height="15" fill="rgb(213,125,22)" fg:x="1104" fg:w="1"/><text x="88.2883%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="87.9585%" y="325" width="0.2392%" height="15" fill="rgb(221,66,28)" fg:x="1103" fg:w="3"/><text x="88.2085%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="87.9585%" y="309" width="0.2392%" height="15" fill="rgb(222,84,53)" fg:x="1103" fg:w="3"/><text x="88.2085%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1180%" y="293" width="0.0797%" height="15" fill="rgb(243,50,15)" fg:x="1105" fg:w="1"/><text x="88.3680%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="87.9585%" y="357" width="0.4785%" height="15" fill="rgb(208,184,23)" fg:x="1103" fg:w="6"/><text x="88.2085%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="87.9585%" y="341" width="0.4785%" height="15" fill="rgb(221,83,2)" fg:x="1103" fg:w="6"/><text x="88.2085%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="88.1978%" y="325" width="0.2392%" height="15" fill="rgb(236,53,24)" fg:x="1106" fg:w="3"/><text x="88.4478%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="88.1978%" y="309" width="0.2392%" height="15" fill="rgb(244,171,29)" fg:x="1106" fg:w="3"/><text x="88.4478%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="88.1978%" y="293" width="0.2392%" height="15" fill="rgb(205,19,11)" fg:x="1106" fg:w="3"/><text x="88.4478%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="88.1978%" y="277" width="0.2392%" height="15" fill="rgb(207,108,29)" fg:x="1106" fg:w="3"/><text x="88.4478%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2775%" y="261" width="0.1595%" height="15" fill="rgb(236,215,43)" fg:x="1107" fg:w="2"/><text x="88.5275%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.2775%" y="245" width="0.1595%" height="15" fill="rgb(213,58,35)" fg:x="1107" fg:w="2"/><text x="88.5275%" y="255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2775%" y="229" width="0.1595%" height="15" fill="rgb(220,211,46)" fg:x="1107" fg:w="2"/><text x="88.5275%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.2775%" y="213" width="0.1595%" height="15" fill="rgb(212,134,16)" fg:x="1107" fg:w="2"/><text x="88.5275%" y="223.50"></text></g><g><title>engine::session::Session::flush (38 samples, 3.03%)</title><rect x="85.4864%" y="517" width="3.0303%" height="15" fill="rgb(232,90,44)" fg:x="1072" fg:w="38"/><text x="85.7364%" y="527.50">eng..</text></g><g><title>engine::session::Session::save_changes (37 samples, 2.95%)</title><rect x="85.5662%" y="501" width="2.9506%" height="15" fill="rgb(212,18,36)" fg:x="1073" fg:w="37"/><text x="85.8162%" y="511.50">eng..</text></g><g><title>engine::session::state::State::close (37 samples, 2.95%)</title><rect x="85.5662%" y="485" width="2.9506%" height="15" fill="rgb(206,112,24)" fg:x="1073" fg:w="37"/><text x="85.8162%" y="495.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (37 samples, 2.95%)</title><rect x="85.5662%" y="469" width="2.9506%" height="15" fill="rgb(238,223,40)" fg:x="1073" fg:w="37"/><text x="85.8162%" y="479.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (35 samples, 2.79%)</title><rect x="85.7257%" y="453" width="2.7911%" height="15" fill="rgb(226,169,20)" fg:x="1075" fg:w="35"/><text x="85.9757%" y="463.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (35 samples, 2.79%)</title><rect x="85.7257%" y="437" width="2.7911%" height="15" fill="rgb(241,64,52)" fg:x="1075" fg:w="35"/><text x="85.9757%" y="447.50">en..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="87.5598%" y="421" width="0.9569%" height="15" fill="rgb(228,120,25)" fg:x="1098" fg:w="12"/><text x="87.8098%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="87.6396%" y="405" width="0.8772%" height="15" fill="rgb(234,108,19)" fg:x="1099" fg:w="11"/><text x="87.8896%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="87.6396%" y="389" width="0.8772%" height="15" fill="rgb(236,133,29)" fg:x="1099" fg:w="11"/><text x="87.8896%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="87.9585%" y="373" width="0.5582%" height="15" fill="rgb(246,174,53)" fg:x="1103" fg:w="7"/><text x="88.2085%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4370%" y="357" width="0.0797%" height="15" fill="rgb(210,105,35)" fg:x="1109" fg:w="1"/><text x="88.6870%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="88.5167%" y="501" width="0.0797%" height="15" fill="rgb(225,27,26)" fg:x="1110" fg:w="1"/><text x="88.7667%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="88.5167%" y="485" width="0.0797%" height="15" fill="rgb(233,2,39)" fg:x="1110" fg:w="1"/><text x="88.7667%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="88.5167%" y="469" width="0.0797%" height="15" fill="rgb(219,164,26)" fg:x="1110" fg:w="1"/><text x="88.7667%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5167%" y="453" width="0.0797%" height="15" fill="rgb(236,211,5)" fg:x="1110" fg:w="1"/><text x="88.7667%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="88.5167%" y="517" width="0.1595%" height="15" fill="rgb(244,227,23)" fg:x="1110" fg:w="2"/><text x="88.7667%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="88.5965%" y="501" width="0.0797%" height="15" fill="rgb(230,184,8)" fg:x="1111" fg:w="1"/><text x="88.8465%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.5965%" y="485" width="0.0797%" height="15" fill="rgb(217,125,48)" fg:x="1111" fg:w="1"/><text x="88.8465%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="88.5965%" y="469" width="0.0797%" height="15" fill="rgb(223,192,47)" fg:x="1111" fg:w="1"/><text x="88.8465%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="88.6762%" y="485" width="0.0797%" height="15" fill="rgb(226,119,10)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.6762%" y="469" width="0.0797%" height="15" fill="rgb(221,49,29)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.6762%" y="453" width="0.0797%" height="15" fill="rgb(217,205,19)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.6762%" y="437" width="0.0797%" height="15" fill="rgb(242,104,7)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.6762%" y="421" width="0.0797%" height="15" fill="rgb(209,154,48)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.6762%" y="405" width="0.0797%" height="15" fill="rgb(219,213,46)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.6762%" y="389" width="0.0797%" height="15" fill="rgb(229,105,38)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.6762%" y="373" width="0.0797%" height="15" fill="rgb(205,151,5)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.6762%" y="357" width="0.0797%" height="15" fill="rgb(248,115,40)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6762%" y="341" width="0.0797%" height="15" fill="rgb(206,179,2)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6762%" y="325" width="0.0797%" height="15" fill="rgb(230,103,24)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.6762%" y="309" width="0.0797%" height="15" fill="rgb(218,152,4)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.6762%" y="293" width="0.0797%" height="15" fill="rgb(236,161,54)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.6762%" y="277" width="0.0797%" height="15" fill="rgb(226,65,17)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.6762%" y="261" width="0.0797%" height="15" fill="rgb(221,134,44)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.6762%" y="245" width="0.0797%" height="15" fill="rgb(251,129,4)" fg:x="1112" fg:w="1"/><text x="88.9262%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="88.6762%" y="501" width="0.1595%" height="15" fill="rgb(244,32,34)" fg:x="1112" fg:w="2"/><text x="88.9262%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.7560%" y="485" width="0.0797%" height="15" fill="rgb(251,224,37)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.7560%" y="469" width="0.0797%" height="15" fill="rgb(248,117,31)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.7560%" y="453" width="0.0797%" height="15" fill="rgb(222,208,37)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="463.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.7560%" y="437" width="0.0797%" height="15" fill="rgb(234,211,25)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.7560%" y="421" width="0.0797%" height="15" fill="rgb(211,72,6)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7560%" y="405" width="0.0797%" height="15" fill="rgb(249,198,38)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.7560%" y="389" width="0.0797%" height="15" fill="rgb(221,86,51)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7560%" y="373" width="0.0797%" height="15" fill="rgb(226,178,43)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.7560%" y="357" width="0.0797%" height="15" fill="rgb(215,145,7)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.7560%" y="341" width="0.0797%" height="15" fill="rgb(250,202,36)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7560%" y="325" width="0.0797%" height="15" fill="rgb(215,86,13)" fg:x="1113" fg:w="1"/><text x="89.0060%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.8357%" y="405" width="0.0797%" height="15" fill="rgb(221,134,12)" fg:x="1114" fg:w="1"/><text x="89.0857%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="88.8357%" y="389" width="0.0797%" height="15" fill="rgb(213,82,10)" fg:x="1114" fg:w="1"/><text x="89.0857%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="88.8357%" y="485" width="0.2392%" height="15" fill="rgb(214,142,0)" fg:x="1114" fg:w="3"/><text x="89.0857%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="88.8357%" y="469" width="0.2392%" height="15" fill="rgb(205,145,9)" fg:x="1114" fg:w="3"/><text x="89.0857%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="88.8357%" y="453" width="0.2392%" height="15" fill="rgb(244,214,8)" fg:x="1114" fg:w="3"/><text x="89.0857%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="88.8357%" y="437" width="0.2392%" height="15" fill="rgb(224,72,51)" fg:x="1114" fg:w="3"/><text x="89.0857%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="88.8357%" y="421" width="0.2392%" height="15" fill="rgb(233,137,37)" fg:x="1114" fg:w="3"/><text x="89.0857%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.9155%" y="405" width="0.1595%" height="15" fill="rgb(208,71,28)" fg:x="1115" fg:w="2"/><text x="89.1655%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.9155%" y="389" width="0.1595%" height="15" fill="rgb(226,31,7)" fg:x="1115" fg:w="2"/><text x="89.1655%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.9155%" y="373" width="0.1595%" height="15" fill="rgb(229,62,18)" fg:x="1115" fg:w="2"/><text x="89.1655%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.9155%" y="357" width="0.1595%" height="15" fill="rgb(226,74,28)" fg:x="1115" fg:w="2"/><text x="89.1655%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="88.9155%" y="341" width="0.1595%" height="15" fill="rgb(214,170,18)" fg:x="1115" fg:w="2"/><text x="89.1655%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.9155%" y="325" width="0.1595%" height="15" fill="rgb(227,229,35)" fg:x="1115" fg:w="2"/><text x="89.1655%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.9155%" y="309" width="0.1595%" height="15" fill="rgb(225,181,39)" fg:x="1115" fg:w="2"/><text x="89.1655%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.9155%" y="293" width="0.1595%" height="15" fill="rgb(253,124,44)" fg:x="1115" fg:w="2"/><text x="89.1655%" y="303.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="89.0750%" y="485" width="0.1595%" height="15" fill="rgb(220,75,18)" fg:x="1117" fg:w="2"/><text x="89.3250%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="89.1547%" y="469" width="0.0797%" height="15" fill="rgb(239,175,43)" fg:x="1118" fg:w="1"/><text x="89.4047%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.2344%" y="325" width="0.0797%" height="15" fill="rgb(228,112,50)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.2344%" y="309" width="0.0797%" height="15" fill="rgb(232,105,36)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.2344%" y="293" width="0.0797%" height="15" fill="rgb(227,137,47)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.2344%" y="277" width="0.0797%" height="15" fill="rgb(217,51,9)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.2344%" y="261" width="0.0797%" height="15" fill="rgb(245,117,0)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.2344%" y="245" width="0.0797%" height="15" fill="rgb(252,52,30)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.2344%" y="229" width="0.0797%" height="15" fill="rgb(227,85,33)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.2344%" y="213" width="0.0797%" height="15" fill="rgb(220,157,20)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.2344%" y="197" width="0.0797%" height="15" fill="rgb(254,14,34)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.2344%" y="181" width="0.0797%" height="15" fill="rgb(216,103,41)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.2344%" y="165" width="0.0797%" height="15" fill="rgb(245,221,9)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.2344%" y="149" width="0.0797%" height="15" fill="rgb(254,136,47)" fg:x="1119" fg:w="1"/><text x="89.4844%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3142%" y="325" width="0.0797%" height="15" fill="rgb(235,71,46)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3142%" y="309" width="0.0797%" height="15" fill="rgb(242,154,29)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.3142%" y="293" width="0.0797%" height="15" fill="rgb(210,65,31)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.3142%" y="277" width="0.0797%" height="15" fill="rgb(244,9,50)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.3142%" y="261" width="0.0797%" height="15" fill="rgb(215,141,38)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3142%" y="245" width="0.0797%" height="15" fill="rgb(241,129,6)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3142%" y="229" width="0.0797%" height="15" fill="rgb(253,169,4)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.3142%" y="213" width="0.0797%" height="15" fill="rgb(237,82,36)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.3142%" y="197" width="0.0797%" height="15" fill="rgb(209,171,11)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.3142%" y="181" width="0.0797%" height="15" fill="rgb(242,19,22)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.3142%" y="165" width="0.0797%" height="15" fill="rgb(251,122,24)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3142%" y="149" width="0.0797%" height="15" fill="rgb(226,166,42)" fg:x="1120" fg:w="1"/><text x="89.5642%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="89.2344%" y="389" width="0.2392%" height="15" fill="rgb(244,101,48)" fg:x="1119" fg:w="3"/><text x="89.4844%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="89.2344%" y="373" width="0.2392%" height="15" fill="rgb(227,125,1)" fg:x="1119" fg:w="3"/><text x="89.4844%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="89.2344%" y="357" width="0.2392%" height="15" fill="rgb(206,79,43)" fg:x="1119" fg:w="3"/><text x="89.4844%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="89.2344%" y="341" width="0.2392%" height="15" fill="rgb(241,109,41)" fg:x="1119" fg:w="3"/><text x="89.4844%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3939%" y="325" width="0.0797%" height="15" fill="rgb(219,73,4)" fg:x="1121" fg:w="1"/><text x="89.6439%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="89.2344%" y="437" width="0.3190%" height="15" fill="rgb(239,25,41)" fg:x="1119" fg:w="4"/><text x="89.4844%" y="447.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="89.2344%" y="421" width="0.3190%" height="15" fill="rgb(208,88,46)" fg:x="1119" fg:w="4"/><text x="89.4844%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="89.2344%" y="405" width="0.3190%" height="15" fill="rgb(239,184,9)" fg:x="1119" fg:w="4"/><text x="89.4844%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.4737%" y="389" width="0.0797%" height="15" fill="rgb(223,114,13)" fg:x="1122" fg:w="1"/><text x="89.7237%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4737%" y="373" width="0.0797%" height="15" fill="rgb(214,28,42)" fg:x="1122" fg:w="1"/><text x="89.7237%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.4737%" y="357" width="0.0797%" height="15" fill="rgb(252,32,44)" fg:x="1122" fg:w="1"/><text x="89.7237%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4737%" y="341" width="0.0797%" height="15" fill="rgb(231,159,4)" fg:x="1122" fg:w="1"/><text x="89.7237%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.4737%" y="325" width="0.0797%" height="15" fill="rgb(210,35,26)" fg:x="1122" fg:w="1"/><text x="89.7237%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4737%" y="309" width="0.0797%" height="15" fill="rgb(208,190,37)" fg:x="1122" fg:w="1"/><text x="89.7237%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.4737%" y="293" width="0.0797%" height="15" fill="rgb(226,148,22)" fg:x="1122" fg:w="1"/><text x="89.7237%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.4737%" y="277" width="0.0797%" height="15" fill="rgb(242,153,24)" fg:x="1122" fg:w="1"/><text x="89.7237%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5534%" y="325" width="0.0797%" height="15" fill="rgb(213,133,7)" fg:x="1123" fg:w="1"/><text x="89.8034%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5534%" y="309" width="0.0797%" height="15" fill="rgb(248,206,18)" fg:x="1123" fg:w="1"/><text x="89.8034%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.5534%" y="373" width="0.1595%" height="15" fill="rgb(233,157,4)" fg:x="1123" fg:w="2"/><text x="89.8034%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.5534%" y="357" width="0.1595%" height="15" fill="rgb(249,179,32)" fg:x="1123" fg:w="2"/><text x="89.8034%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.5534%" y="341" width="0.1595%" height="15" fill="rgb(248,69,35)" fg:x="1123" fg:w="2"/><text x="89.8034%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.6332%" y="325" width="0.0797%" height="15" fill="rgb(249,158,38)" fg:x="1124" fg:w="1"/><text x="89.8832%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="89.5534%" y="389" width="0.2392%" height="15" fill="rgb(223,18,43)" fg:x="1123" fg:w="3"/><text x="89.8034%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7129%" y="373" width="0.0797%" height="15" fill="rgb(238,42,45)" fg:x="1125" fg:w="1"/><text x="89.9629%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7927%" y="389" width="0.0797%" height="15" fill="rgb(219,65,47)" fg:x="1126" fg:w="1"/><text x="90.0427%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.7927%" y="373" width="0.0797%" height="15" fill="rgb(248,153,12)" fg:x="1126" fg:w="1"/><text x="90.0427%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7927%" y="357" width="0.0797%" height="15" fill="rgb(240,118,4)" fg:x="1126" fg:w="1"/><text x="90.0427%" y="367.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.28%)</title><rect x="88.6762%" y="517" width="1.2759%" height="15" fill="rgb(250,96,34)" fg:x="1112" fg:w="16"/><text x="88.9262%" y="527.50"></text></g><g><title>plugins_core::tools::set_container (14 samples, 1.12%)</title><rect x="88.8357%" y="501" width="1.1164%" height="15" fill="rgb(221,15,4)" fg:x="1114" fg:w="14"/><text x="89.0857%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="89.2344%" y="485" width="0.7177%" height="15" fill="rgb(217,149,33)" fg:x="1119" fg:w="9"/><text x="89.4844%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="89.2344%" y="469" width="0.7177%" height="15" fill="rgb(213,58,29)" fg:x="1119" fg:w="9"/><text x="89.4844%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.72%)</title><rect x="89.2344%" y="453" width="0.7177%" height="15" fill="rgb(236,218,9)" fg:x="1119" fg:w="9"/><text x="89.4844%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="89.5534%" y="437" width="0.3987%" height="15" fill="rgb(248,40,19)" fg:x="1123" fg:w="5"/><text x="89.8034%" y="447.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="89.5534%" y="421" width="0.3987%" height="15" fill="rgb(212,17,6)" fg:x="1123" fg:w="5"/><text x="89.8034%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="89.5534%" y="405" width="0.3987%" height="15" fill="rgb(206,212,20)" fg:x="1123" fg:w="5"/><text x="89.8034%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8724%" y="389" width="0.0797%" height="15" fill="rgb(229,80,37)" fg:x="1127" fg:w="1"/><text x="90.1224%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8724%" y="373" width="0.0797%" height="15" fill="rgb(253,8,37)" fg:x="1127" fg:w="1"/><text x="90.1224%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8724%" y="357" width="0.0797%" height="15" fill="rgb(215,16,43)" fg:x="1127" fg:w="1"/><text x="90.1224%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8724%" y="341" width="0.0797%" height="15" fill="rgb(236,219,16)" fg:x="1127" fg:w="1"/><text x="90.1224%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.8724%" y="325" width="0.0797%" height="15" fill="rgb(251,0,3)" fg:x="1127" fg:w="1"/><text x="90.1224%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9522%" y="437" width="0.0797%" height="15" fill="rgb(207,133,37)" fg:x="1128" fg:w="1"/><text x="90.2022%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9522%" y="421" width="0.0797%" height="15" fill="rgb(250,143,20)" fg:x="1128" fg:w="1"/><text x="90.2022%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9522%" y="405" width="0.0797%" height="15" fill="rgb(242,19,50)" fg:x="1128" fg:w="1"/><text x="90.2022%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9522%" y="389" width="0.0797%" height="15" fill="rgb(206,124,43)" fg:x="1128" fg:w="1"/><text x="90.2022%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9522%" y="373" width="0.0797%" height="15" fill="rgb(229,4,38)" fg:x="1128" fg:w="1"/><text x="90.2022%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9522%" y="357" width="0.0797%" height="15" fill="rgb(247,220,45)" fg:x="1128" fg:w="1"/><text x="90.2022%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0319%" y="437" width="0.0797%" height="15" fill="rgb(247,195,0)" fg:x="1129" fg:w="1"/><text x="90.2819%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.0319%" y="421" width="0.0797%" height="15" fill="rgb(252,12,19)" fg:x="1129" fg:w="1"/><text x="90.2819%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0319%" y="405" width="0.0797%" height="15" fill="rgb(222,49,50)" fg:x="1129" fg:w="1"/><text x="90.2819%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0319%" y="389" width="0.0797%" height="15" fill="rgb(209,157,28)" fg:x="1129" fg:w="1"/><text x="90.2819%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0319%" y="373" width="0.0797%" height="15" fill="rgb(238,174,24)" fg:x="1129" fg:w="1"/><text x="90.2819%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.0319%" y="357" width="0.0797%" height="15" fill="rgb(224,17,28)" fg:x="1129" fg:w="1"/><text x="90.2819%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0319%" y="341" width="0.0797%" height="15" fill="rgb(249,7,29)" fg:x="1129" fg:w="1"/><text x="90.2819%" y="351.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="89.9522%" y="517" width="0.2392%" height="15" fill="rgb(243,178,4)" fg:x="1128" fg:w="3"/><text x="90.2022%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="89.9522%" y="501" width="0.2392%" height="15" fill="rgb(246,138,35)" fg:x="1128" fg:w="3"/><text x="90.2022%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="89.9522%" y="485" width="0.2392%" height="15" fill="rgb(251,85,18)" fg:x="1128" fg:w="3"/><text x="90.2022%" y="495.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="89.9522%" y="469" width="0.2392%" height="15" fill="rgb(254,55,9)" fg:x="1128" fg:w="3"/><text x="90.2022%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="89.9522%" y="453" width="0.2392%" height="15" fill="rgb(248,4,50)" fg:x="1128" fg:w="3"/><text x="90.2022%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1116%" y="437" width="0.0797%" height="15" fill="rgb(215,208,14)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1116%" y="421" width="0.0797%" height="15" fill="rgb(218,37,18)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1116%" y="405" width="0.0797%" height="15" fill="rgb(206,104,13)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1116%" y="389" width="0.0797%" height="15" fill="rgb(248,94,22)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.1116%" y="373" width="0.0797%" height="15" fill="rgb(235,42,46)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1116%" y="357" width="0.0797%" height="15" fill="rgb(220,228,48)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1116%" y="341" width="0.0797%" height="15" fill="rgb(216,58,12)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1116%" y="325" width="0.0797%" height="15" fill="rgb(223,97,52)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1116%" y="309" width="0.0797%" height="15" fill="rgb(208,159,17)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1116%" y="293" width="0.0797%" height="15" fill="rgb(215,172,9)" fg:x="1130" fg:w="1"/><text x="90.3616%" y="303.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.1914%" y="437" width="0.0797%" height="15" fill="rgb(252,175,30)" fg:x="1131" fg:w="1"/><text x="90.4414%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.1914%" y="421" width="0.0797%" height="15" fill="rgb(209,159,10)" fg:x="1131" fg:w="1"/><text x="90.4414%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1914%" y="405" width="0.0797%" height="15" fill="rgb(229,73,51)" fg:x="1131" fg:w="1"/><text x="90.4414%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1914%" y="389" width="0.0797%" height="15" fill="rgb(208,212,43)" fg:x="1131" fg:w="1"/><text x="90.4414%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.1914%" y="373" width="0.0797%" height="15" fill="rgb(254,123,53)" fg:x="1131" fg:w="1"/><text x="90.4414%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2711%" y="405" width="0.0797%" height="15" fill="rgb(254,128,49)" fg:x="1132" fg:w="1"/><text x="90.5211%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2711%" y="389" width="0.0797%" height="15" fill="rgb(246,16,16)" fg:x="1132" fg:w="1"/><text x="90.5211%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2711%" y="373" width="0.0797%" height="15" fill="rgb(209,200,1)" fg:x="1132" fg:w="1"/><text x="90.5211%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2711%" y="357" width="0.0797%" height="15" fill="rgb(235,9,3)" fg:x="1132" fg:w="1"/><text x="90.5211%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2711%" y="341" width="0.0797%" height="15" fill="rgb(233,121,54)" fg:x="1132" fg:w="1"/><text x="90.5211%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="90.1914%" y="501" width="0.2392%" height="15" fill="rgb(236,80,25)" fg:x="1131" fg:w="3"/><text x="90.4414%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="90.1914%" y="485" width="0.2392%" height="15" fill="rgb(220,44,24)" fg:x="1131" fg:w="3"/><text x="90.4414%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="90.1914%" y="469" width="0.2392%" height="15" fill="rgb(236,225,16)" fg:x="1131" fg:w="3"/><text x="90.4414%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="90.1914%" y="453" width="0.2392%" height="15" fill="rgb(237,140,0)" fg:x="1131" fg:w="3"/><text x="90.4414%" y="463.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="90.2711%" y="437" width="0.1595%" height="15" fill="rgb(243,225,53)" fg:x="1132" fg:w="2"/><text x="90.5211%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="90.2711%" y="421" width="0.1595%" height="15" fill="rgb(240,140,30)" fg:x="1132" fg:w="2"/><text x="90.5211%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3509%" y="405" width="0.0797%" height="15" fill="rgb(217,51,16)" fg:x="1133" fg:w="1"/><text x="90.6009%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="90.4306%" y="485" width="0.0797%" height="15" fill="rgb(245,75,50)" fg:x="1134" fg:w="1"/><text x="90.6806%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.4306%" y="469" width="0.0797%" height="15" fill="rgb(208,174,22)" fg:x="1134" fg:w="1"/><text x="90.6806%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4306%" y="453" width="0.0797%" height="15" fill="rgb(219,98,50)" fg:x="1134" fg:w="1"/><text x="90.6806%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5104%" y="469" width="0.0797%" height="15" fill="rgb(243,138,3)" fg:x="1135" fg:w="1"/><text x="90.7604%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="90.5104%" y="485" width="0.1595%" height="15" fill="rgb(243,132,26)" fg:x="1135" fg:w="2"/><text x="90.7604%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="90.5901%" y="469" width="0.0797%" height="15" fill="rgb(250,201,8)" fg:x="1136" fg:w="1"/><text x="90.8401%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.5901%" y="453" width="0.0797%" height="15" fill="rgb(213,91,26)" fg:x="1136" fg:w="1"/><text x="90.8401%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="90.5901%" y="437" width="0.0797%" height="15" fill="rgb(229,117,1)" fg:x="1136" fg:w="1"/><text x="90.8401%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="90.5901%" y="421" width="0.0797%" height="15" fill="rgb(229,24,6)" fg:x="1136" fg:w="1"/><text x="90.8401%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6699%" y="421" width="0.0797%" height="15" fill="rgb(206,69,11)" fg:x="1137" fg:w="1"/><text x="90.9199%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7496%" y="389" width="0.0797%" height="15" fill="rgb(234,111,34)" fg:x="1138" fg:w="1"/><text x="90.9996%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7496%" y="373" width="0.0797%" height="15" fill="rgb(213,187,51)" fg:x="1138" fg:w="1"/><text x="90.9996%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7496%" y="357" width="0.0797%" height="15" fill="rgb(207,45,11)" fg:x="1138" fg:w="1"/><text x="90.9996%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7496%" y="341" width="0.0797%" height="15" fill="rgb(225,151,47)" fg:x="1138" fg:w="1"/><text x="90.9996%" y="351.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (82 samples, 6.54%)</title><rect x="84.3700%" y="533" width="6.5391%" height="15" fill="rgb(211,226,5)" fg:x="1058" fg:w="82"/><text x="84.6200%" y="543.50">plugins_c..</text></g><g><title>plugins_core::build::Build::occupying (9 samples, 0.72%)</title><rect x="90.1914%" y="517" width="0.7177%" height="15" fill="rgb(214,83,52)" fg:x="1131" fg:w="9"/><text x="90.4414%" y="527.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="90.4306%" y="501" width="0.4785%" height="15" fill="rgb(229,49,53)" fg:x="1134" fg:w="6"/><text x="90.6806%" y="511.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="90.6699%" y="485" width="0.2392%" height="15" fill="rgb(246,8,28)" fg:x="1137" fg:w="3"/><text x="90.9199%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="90.6699%" y="469" width="0.2392%" height="15" fill="rgb(207,28,41)" fg:x="1137" fg:w="3"/><text x="90.9199%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="90.6699%" y="453" width="0.2392%" height="15" fill="rgb(254,22,25)" fg:x="1137" fg:w="3"/><text x="90.9199%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.6699%" y="437" width="0.2392%" height="15" fill="rgb(209,120,42)" fg:x="1137" fg:w="3"/><text x="90.9199%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.7496%" y="421" width="0.1595%" height="15" fill="rgb(216,194,18)" fg:x="1138" fg:w="2"/><text x="90.9996%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.7496%" y="405" width="0.1595%" height="15" fill="rgb(213,70,17)" fg:x="1138" fg:w="2"/><text x="90.9996%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.8293%" y="389" width="0.0797%" height="15" fill="rgb(228,66,19)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.8293%" y="373" width="0.0797%" height="15" fill="rgb(236,221,54)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.8293%" y="357" width="0.0797%" height="15" fill="rgb(207,175,15)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.8293%" y="341" width="0.0797%" height="15" fill="rgb(234,76,8)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.8293%" y="325" width="0.0797%" height="15" fill="rgb(243,106,0)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.8293%" y="309" width="0.0797%" height="15" fill="rgb(208,48,19)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.8293%" y="293" width="0.0797%" height="15" fill="rgb(251,50,29)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.8293%" y="277" width="0.0797%" height="15" fill="rgb(222,31,49)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="90.8293%" y="261" width="0.0797%" height="15" fill="rgb(232,33,18)" fg:x="1139" fg:w="1"/><text x="91.0793%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.9091%" y="341" width="0.0797%" height="15" fill="rgb(209,1,44)" fg:x="1140" fg:w="1"/><text x="91.1591%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.9091%" y="325" width="0.0797%" height="15" fill="rgb(211,7,1)" fg:x="1140" fg:w="1"/><text x="91.1591%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9091%" y="309" width="0.0797%" height="15" fill="rgb(224,111,27)" fg:x="1140" fg:w="1"/><text x="91.1591%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.9091%" y="485" width="0.1595%" height="15" fill="rgb(252,195,39)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.9091%" y="469" width="0.1595%" height="15" fill="rgb(237,198,5)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.9091%" y="453" width="0.1595%" height="15" fill="rgb(232,148,1)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.9091%" y="437" width="0.1595%" height="15" fill="rgb(249,41,3)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.9091%" y="421" width="0.1595%" height="15" fill="rgb(215,14,33)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.9091%" y="405" width="0.1595%" height="15" fill="rgb(209,146,24)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.9091%" y="389" width="0.1595%" height="15" fill="rgb(219,51,47)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="90.9091%" y="373" width="0.1595%" height="15" fill="rgb(234,217,40)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.9091%" y="357" width="0.1595%" height="15" fill="rgb(228,34,26)" fg:x="1140" fg:w="2"/><text x="91.1591%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9888%" y="341" width="0.0797%" height="15" fill="rgb(224,50,29)" fg:x="1141" fg:w="1"/><text x="91.2388%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9888%" y="325" width="0.0797%" height="15" fill="rgb(205,79,51)" fg:x="1141" fg:w="1"/><text x="91.2388%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9888%" y="309" width="0.0797%" height="15" fill="rgb(218,136,28)" fg:x="1141" fg:w="1"/><text x="91.2388%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0686%" y="405" width="0.0797%" height="15" fill="rgb(220,150,10)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0686%" y="389" width="0.0797%" height="15" fill="rgb(242,158,47)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.0686%" y="373" width="0.0797%" height="15" fill="rgb(209,68,0)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.0686%" y="357" width="0.0797%" height="15" fill="rgb(208,13,41)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.0686%" y="341" width="0.0797%" height="15" fill="rgb(226,201,7)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.0686%" y="325" width="0.0797%" height="15" fill="rgb(236,103,26)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.0686%" y="309" width="0.0797%" height="15" fill="rgb(243,162,8)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.0686%" y="293" width="0.0797%" height="15" fill="rgb(237,225,11)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.0686%" y="277" width="0.0797%" height="15" fill="rgb(247,186,32)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.0686%" y="261" width="0.0797%" height="15" fill="rgb(215,26,28)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.0686%" y="245" width="0.0797%" height="15" fill="rgb(208,121,6)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.0686%" y="229" width="0.0797%" height="15" fill="rgb(225,91,3)" fg:x="1142" fg:w="1"/><text x="91.3186%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="91.1483%" y="389" width="0.0797%" height="15" fill="rgb(246,119,36)" fg:x="1143" fg:w="1"/><text x="91.3983%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="90.9091%" y="501" width="0.3987%" height="15" fill="rgb(254,173,2)" fg:x="1140" fg:w="5"/><text x="91.1591%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="91.0686%" y="485" width="0.2392%" height="15" fill="rgb(209,87,54)" fg:x="1142" fg:w="3"/><text x="91.3186%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="91.0686%" y="469" width="0.2392%" height="15" fill="rgb(223,216,20)" fg:x="1142" fg:w="3"/><text x="91.3186%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="91.0686%" y="453" width="0.2392%" height="15" fill="rgb(220,31,8)" fg:x="1142" fg:w="3"/><text x="91.3186%" y="463.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="91.0686%" y="437" width="0.2392%" height="15" fill="rgb(220,185,15)" fg:x="1142" fg:w="3"/><text x="91.3186%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="91.0686%" y="421" width="0.2392%" height="15" fill="rgb(247,190,50)" fg:x="1142" fg:w="3"/><text x="91.3186%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="91.1483%" y="405" width="0.1595%" height="15" fill="rgb(239,173,47)" fg:x="1143" fg:w="2"/><text x="91.3983%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.2281%" y="389" width="0.0797%" height="15" fill="rgb(218,190,42)" fg:x="1144" fg:w="1"/><text x="91.4781%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="91.2281%" y="373" width="0.0797%" height="15" fill="rgb(251,207,16)" fg:x="1144" fg:w="1"/><text x="91.4781%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.2281%" y="357" width="0.0797%" height="15" fill="rgb(222,199,47)" fg:x="1144" fg:w="1"/><text x="91.4781%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.2281%" y="341" width="0.0797%" height="15" fill="rgb(245,190,7)" fg:x="1144" fg:w="1"/><text x="91.4781%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="91.2281%" y="325" width="0.0797%" height="15" fill="rgb(239,85,38)" fg:x="1144" fg:w="1"/><text x="91.4781%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.2281%" y="309" width="0.0797%" height="15" fill="rgb(229,69,51)" fg:x="1144" fg:w="1"/><text x="91.4781%" y="319.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="91.2281%" y="293" width="0.0797%" height="15" fill="rgb(231,104,51)" fg:x="1144" fg:w="1"/><text x="91.4781%" y="303.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="90.9091%" y="533" width="0.4785%" height="15" fill="rgb(235,49,4)" fg:x="1140" fg:w="6"/><text x="91.1591%" y="543.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="90.9091%" y="517" width="0.4785%" height="15" fill="rgb(246,166,20)" fg:x="1140" fg:w="6"/><text x="91.1591%" y="527.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="91.3078%" y="501" width="0.0797%" height="15" fill="rgb(230,119,37)" fg:x="1145" fg:w="1"/><text x="91.5578%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="91.3078%" y="485" width="0.0797%" height="15" fill="rgb(234,77,34)" fg:x="1145" fg:w="1"/><text x="91.5578%" y="495.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="91.3078%" y="469" width="0.0797%" height="15" fill="rgb(211,222,33)" fg:x="1145" fg:w="1"/><text x="91.5578%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3078%" y="453" width="0.0797%" height="15" fill="rgb(226,45,42)" fg:x="1145" fg:w="1"/><text x="91.5578%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="91.3876%" y="501" width="0.0797%" height="15" fill="rgb(215,174,28)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="91.3876%" y="485" width="0.0797%" height="15" fill="rgb(254,173,49)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="91.3876%" y="469" width="0.0797%" height="15" fill="rgb(229,191,6)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.3876%" y="453" width="0.0797%" height="15" fill="rgb(212,145,22)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.3876%" y="437" width="0.0797%" height="15" fill="rgb(226,6,51)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.3876%" y="421" width="0.0797%" height="15" fill="rgb(227,128,8)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="91.3876%" y="405" width="0.0797%" height="15" fill="rgb(205,24,10)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.3876%" y="389" width="0.0797%" height="15" fill="rgb(217,147,27)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.3876%" y="373" width="0.0797%" height="15" fill="rgb(250,82,42)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.3876%" y="357" width="0.0797%" height="15" fill="rgb(248,93,17)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="91.3876%" y="341" width="0.0797%" height="15" fill="rgb(254,212,40)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.3876%" y="325" width="0.0797%" height="15" fill="rgb(229,209,2)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.3876%" y="309" width="0.0797%" height="15" fill="rgb(211,50,43)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.3876%" y="293" width="0.0797%" height="15" fill="rgb(245,196,29)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.3876%" y="277" width="0.0797%" height="15" fill="rgb(216,132,13)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.3876%" y="261" width="0.0797%" height="15" fill="rgb(251,108,21)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="91.3876%" y="245" width="0.0797%" height="15" fill="rgb(229,174,54)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="91.3876%" y="229" width="0.0797%" height="15" fill="rgb(211,175,47)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="91.3876%" y="213" width="0.0797%" height="15" fill="rgb(234,5,37)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="91.3876%" y="197" width="0.0797%" height="15" fill="rgb(244,150,43)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="91.3876%" y="181" width="0.0797%" height="15" fill="rgb(242,172,38)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="91.3876%" y="165" width="0.0797%" height="15" fill="rgb(205,27,8)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="91.3876%" y="149" width="0.0797%" height="15" fill="rgb(217,57,3)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="91.3876%" y="133" width="0.0797%" height="15" fill="rgb(242,21,38)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.3876%" y="117" width="0.0797%" height="15" fill="rgb(209,64,43)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="91.3876%" y="101" width="0.0797%" height="15" fill="rgb(222,2,46)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="91.3876%" y="85" width="0.0797%" height="15" fill="rgb(218,19,44)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="91.3876%" y="69" width="0.0797%" height="15" fill="rgb(240,203,42)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.3876%" y="53" width="0.0797%" height="15" fill="rgb(229,23,45)" fg:x="1146" fg:w="1"/><text x="91.6376%" y="63.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="91.3876%" y="517" width="0.3190%" height="15" fill="rgb(205,228,51)" fg:x="1146" fg:w="4"/><text x="91.6376%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="91.4673%" y="501" width="0.2392%" height="15" fill="rgb(239,36,20)" fg:x="1147" fg:w="3"/><text x="91.7173%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="91.4673%" y="485" width="0.2392%" height="15" fill="rgb(248,172,27)" fg:x="1147" fg:w="3"/><text x="91.7173%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="91.4673%" y="469" width="0.2392%" height="15" fill="rgb(244,55,32)" fg:x="1147" fg:w="3"/><text x="91.7173%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.4673%" y="453" width="0.2392%" height="15" fill="rgb(215,97,16)" fg:x="1147" fg:w="3"/><text x="91.7173%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.4673%" y="437" width="0.2392%" height="15" fill="rgb(224,80,29)" fg:x="1147" fg:w="3"/><text x="91.7173%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.4673%" y="421" width="0.2392%" height="15" fill="rgb(216,93,47)" fg:x="1147" fg:w="3"/><text x="91.7173%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.4673%" y="405" width="0.2392%" height="15" fill="rgb(238,159,10)" fg:x="1147" fg:w="3"/><text x="91.7173%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="91.4673%" y="389" width="0.2392%" height="15" fill="rgb(223,98,29)" fg:x="1147" fg:w="3"/><text x="91.7173%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.5470%" y="373" width="0.1595%" height="15" fill="rgb(210,176,23)" fg:x="1148" fg:w="2"/><text x="91.7970%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.5470%" y="357" width="0.1595%" height="15" fill="rgb(242,162,27)" fg:x="1148" fg:w="2"/><text x="91.7970%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.5470%" y="341" width="0.1595%" height="15" fill="rgb(245,109,32)" fg:x="1148" fg:w="2"/><text x="91.7970%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="91.5470%" y="325" width="0.1595%" height="15" fill="rgb(248,87,8)" fg:x="1148" fg:w="2"/><text x="91.7970%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.5470%" y="309" width="0.1595%" height="15" fill="rgb(250,160,50)" fg:x="1148" fg:w="2"/><text x="91.7970%" y="319.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="91.7065%" y="517" width="0.1595%" height="15" fill="rgb(246,165,25)" fg:x="1150" fg:w="2"/><text x="91.9565%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="91.7863%" y="501" width="0.0797%" height="15" fill="rgb(249,219,3)" fg:x="1151" fg:w="1"/><text x="92.0363%" y="511.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (155 samples, 12.36%)</title><rect x="79.5853%" y="549" width="12.3604%" height="15" fill="rgb(226,66,5)" fg:x="998" fg:w="155"/><text x="79.8353%" y="559.50">&lt;tests::HoldingKey..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="91.3876%" y="533" width="0.5582%" height="15" fill="rgb(250,220,43)" fg:x="1146" fg:w="7"/><text x="91.6376%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="91.8660%" y="517" width="0.0797%" height="15" fill="rgb(225,111,31)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="91.8660%" y="501" width="0.0797%" height="15" fill="rgb(248,106,18)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="511.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="91.8660%" y="485" width="0.0797%" height="15" fill="rgb(220,226,45)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="91.8660%" y="469" width="0.0797%" height="15" fill="rgb(208,58,53)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8660%" y="453" width="0.0797%" height="15" fill="rgb(209,133,1)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.8660%" y="437" width="0.0797%" height="15" fill="rgb(228,216,27)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8660%" y="421" width="0.0797%" height="15" fill="rgb(238,155,2)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.8660%" y="405" width="0.0797%" height="15" fill="rgb(244,99,37)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="91.8660%" y="389" width="0.0797%" height="15" fill="rgb(254,32,3)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="91.8660%" y="373" width="0.0797%" height="15" fill="rgb(234,46,50)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.8660%" y="357" width="0.0797%" height="15" fill="rgb(232,118,51)" fg:x="1152" fg:w="1"/><text x="92.1160%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.9458%" y="549" width="0.0797%" height="15" fill="rgb(207,24,32)" fg:x="1153" fg:w="1"/><text x="92.1958%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.1053%" y="437" width="0.0797%" height="15" fill="rgb(208,107,43)" fg:x="1155" fg:w="1"/><text x="92.3553%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.1053%" y="421" width="0.0797%" height="15" fill="rgb(231,28,9)" fg:x="1155" fg:w="1"/><text x="92.3553%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.1053%" y="405" width="0.0797%" height="15" fill="rgb(241,204,15)" fg:x="1155" fg:w="1"/><text x="92.3553%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.1053%" y="389" width="0.0797%" height="15" fill="rgb(214,54,15)" fg:x="1155" fg:w="1"/><text x="92.3553%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.1053%" y="373" width="0.0797%" height="15" fill="rgb(230,12,28)" fg:x="1155" fg:w="1"/><text x="92.3553%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.1053%" y="357" width="0.0797%" height="15" fill="rgb(221,171,5)" fg:x="1155" fg:w="1"/><text x="92.3553%" y="367.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="92.0255%" y="533" width="0.2392%" height="15" fill="rgb(207,72,25)" fg:x="1154" fg:w="3"/><text x="92.2755%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.1053%" y="517" width="0.1595%" height="15" fill="rgb(249,79,37)" fg:x="1155" fg:w="2"/><text x="92.3553%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.1053%" y="501" width="0.1595%" height="15" fill="rgb(209,98,49)" fg:x="1155" fg:w="2"/><text x="92.3553%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="92.1053%" y="485" width="0.1595%" height="15" fill="rgb(221,62,13)" fg:x="1155" fg:w="2"/><text x="92.3553%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="92.1053%" y="469" width="0.1595%" height="15" fill="rgb(223,39,6)" fg:x="1155" fg:w="2"/><text x="92.3553%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="92.1053%" y="453" width="0.1595%" height="15" fill="rgb(246,163,20)" fg:x="1155" fg:w="2"/><text x="92.3553%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.1850%" y="437" width="0.0797%" height="15" fill="rgb(211,111,29)" fg:x="1156" fg:w="1"/><text x="92.4350%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.1850%" y="421" width="0.0797%" height="15" fill="rgb(243,118,5)" fg:x="1156" fg:w="1"/><text x="92.4350%" y="431.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="92.2648%" y="533" width="0.0797%" height="15" fill="rgb(240,144,52)" fg:x="1157" fg:w="1"/><text x="92.5148%" y="543.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="92.2648%" y="517" width="0.0797%" height="15" fill="rgb(244,158,36)" fg:x="1157" fg:w="1"/><text x="92.5148%" y="527.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="92.2648%" y="501" width="0.0797%" height="15" fill="rgb(241,109,37)" fg:x="1157" fg:w="1"/><text x="92.5148%" y="511.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="92.2648%" y="485" width="0.0797%" height="15" fill="rgb(213,95,32)" fg:x="1157" fg:w="1"/><text x="92.5148%" y="495.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="92.2648%" y="469" width="0.0797%" height="15" fill="rgb(252,193,9)" fg:x="1157" fg:w="1"/><text x="92.5148%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="92.2648%" y="453" width="0.0797%" height="15" fill="rgb(225,213,21)" fg:x="1157" fg:w="1"/><text x="92.5148%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="92.2648%" y="437" width="0.0797%" height="15" fill="rgb(220,172,46)" fg:x="1157" fg:w="1"/><text x="92.5148%" y="447.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="92.2648%" y="421" width="0.0797%" height="15" fill="rgb(235,75,41)" fg:x="1157" fg:w="1"/><text x="92.5148%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3445%" y="469" width="0.0797%" height="15" fill="rgb(213,86,9)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3445%" y="453" width="0.0797%" height="15" fill="rgb(238,127,51)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.3445%" y="437" width="0.0797%" height="15" fill="rgb(215,2,54)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.3445%" y="421" width="0.0797%" height="15" fill="rgb(245,80,6)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.3445%" y="405" width="0.0797%" height="15" fill="rgb(233,106,42)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.3445%" y="389" width="0.0797%" height="15" fill="rgb(244,86,38)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.3445%" y="373" width="0.0797%" height="15" fill="rgb(242,167,7)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.3445%" y="357" width="0.0797%" height="15" fill="rgb(218,216,3)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.3445%" y="341" width="0.0797%" height="15" fill="rgb(206,136,36)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.3445%" y="325" width="0.0797%" height="15" fill="rgb(206,206,15)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.3445%" y="309" width="0.0797%" height="15" fill="rgb(207,163,34)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3445%" y="293" width="0.0797%" height="15" fill="rgb(240,127,22)" fg:x="1158" fg:w="1"/><text x="92.5945%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.4242%" y="437" width="0.0797%" height="15" fill="rgb(227,49,5)" fg:x="1159" fg:w="1"/><text x="92.6742%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.4242%" y="421" width="0.0797%" height="15" fill="rgb(231,8,6)" fg:x="1159" fg:w="1"/><text x="92.6742%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.4242%" y="405" width="0.0797%" height="15" fill="rgb(223,21,24)" fg:x="1159" fg:w="1"/><text x="92.6742%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.4242%" y="389" width="0.0797%" height="15" fill="rgb(244,44,52)" fg:x="1159" fg:w="1"/><text x="92.6742%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="92.4242%" y="453" width="0.1595%" height="15" fill="rgb(207,73,28)" fg:x="1159" fg:w="2"/><text x="92.6742%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.5040%" y="437" width="0.0797%" height="15" fill="rgb(234,215,10)" fg:x="1160" fg:w="1"/><text x="92.7540%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.5040%" y="421" width="0.0797%" height="15" fill="rgb(236,85,3)" fg:x="1160" fg:w="1"/><text x="92.7540%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="92.5837%" y="437" width="0.0797%" height="15" fill="rgb(236,102,39)" fg:x="1161" fg:w="1"/><text x="92.8337%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.5837%" y="421" width="0.0797%" height="15" fill="rgb(243,50,8)" fg:x="1161" fg:w="1"/><text x="92.8337%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="92.6635%" y="389" width="0.0797%" height="15" fill="rgb(207,111,4)" fg:x="1162" fg:w="1"/><text x="92.9135%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.6635%" y="373" width="0.0797%" height="15" fill="rgb(230,52,42)" fg:x="1162" fg:w="1"/><text x="92.9135%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.6635%" y="357" width="0.0797%" height="15" fill="rgb(252,178,50)" fg:x="1162" fg:w="1"/><text x="92.9135%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="92.6635%" y="421" width="0.1595%" height="15" fill="rgb(234,46,35)" fg:x="1162" fg:w="2"/><text x="92.9135%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.6635%" y="405" width="0.1595%" height="15" fill="rgb(228,69,37)" fg:x="1162" fg:w="2"/><text x="92.9135%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.7432%" y="389" width="0.0797%" height="15" fill="rgb(221,21,11)" fg:x="1163" fg:w="1"/><text x="92.9932%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.7432%" y="373" width="0.0797%" height="15" fill="rgb(223,56,9)" fg:x="1163" fg:w="1"/><text x="92.9932%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.7432%" y="357" width="0.0797%" height="15" fill="rgb(234,30,19)" fg:x="1163" fg:w="1"/><text x="92.9932%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="92.8230%" y="421" width="0.3190%" height="15" fill="rgb(211,64,54)" fg:x="1164" fg:w="4"/><text x="93.0730%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.9825%" y="405" width="0.1595%" height="15" fill="rgb(250,189,5)" fg:x="1166" fg:w="2"/><text x="93.2325%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="92.9825%" y="389" width="0.1595%" height="15" fill="rgb(214,180,13)" fg:x="1166" fg:w="2"/><text x="93.2325%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.0622%" y="373" width="0.0797%" height="15" fill="rgb(238,40,40)" fg:x="1167" fg:w="1"/><text x="93.3122%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.1419%" y="405" width="0.0797%" height="15" fill="rgb(214,101,38)" fg:x="1168" fg:w="1"/><text x="93.3919%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.1419%" y="389" width="0.0797%" height="15" fill="rgb(242,65,53)" fg:x="1168" fg:w="1"/><text x="93.3919%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.1419%" y="373" width="0.0797%" height="15" fill="rgb(230,22,45)" fg:x="1168" fg:w="1"/><text x="93.3919%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="93.3014%" y="373" width="0.0797%" height="15" fill="rgb(223,77,1)" fg:x="1170" fg:w="1"/><text x="93.5514%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.3014%" y="357" width="0.0797%" height="15" fill="rgb(227,33,37)" fg:x="1170" fg:w="1"/><text x="93.5514%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="92.6635%" y="437" width="0.8772%" height="15" fill="rgb(224,148,39)" fg:x="1162" fg:w="11"/><text x="92.9135%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="93.1419%" y="421" width="0.3987%" height="15" fill="rgb(232,212,39)" fg:x="1168" fg:w="5"/><text x="93.3919%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="93.2217%" y="405" width="0.3190%" height="15" fill="rgb(251,172,7)" fg:x="1169" fg:w="4"/><text x="93.4717%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="93.3014%" y="389" width="0.2392%" height="15" fill="rgb(219,39,9)" fg:x="1170" fg:w="3"/><text x="93.5514%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="93.3812%" y="373" width="0.1595%" height="15" fill="rgb(228,118,14)" fg:x="1171" fg:w="2"/><text x="93.6312%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="93.3812%" y="357" width="0.1595%" height="15" fill="rgb(207,140,10)" fg:x="1171" fg:w="2"/><text x="93.6312%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="93.3812%" y="341" width="0.1595%" height="15" fill="rgb(227,111,53)" fg:x="1171" fg:w="2"/><text x="93.6312%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="93.3812%" y="325" width="0.1595%" height="15" fill="rgb(216,165,16)" fg:x="1171" fg:w="2"/><text x="93.6312%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4609%" y="309" width="0.0797%" height="15" fill="rgb(226,111,18)" fg:x="1172" fg:w="1"/><text x="93.7109%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="92.5837%" y="453" width="1.0367%" height="15" fill="rgb(251,27,17)" fg:x="1161" fg:w="13"/><text x="92.8337%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.5407%" y="437" width="0.0797%" height="15" fill="rgb(254,69,9)" fg:x="1173" fg:w="1"/><text x="93.7907%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.5407%" y="421" width="0.0797%" height="15" fill="rgb(234,140,37)" fg:x="1173" fg:w="1"/><text x="93.7907%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.5407%" y="405" width="0.0797%" height="15" fill="rgb(220,93,8)" fg:x="1173" fg:w="1"/><text x="93.7907%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.5407%" y="389" width="0.0797%" height="15" fill="rgb(236,113,3)" fg:x="1173" fg:w="1"/><text x="93.7907%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.5407%" y="373" width="0.0797%" height="15" fill="rgb(234,108,23)" fg:x="1173" fg:w="1"/><text x="93.7907%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.5407%" y="357" width="0.0797%" height="15" fill="rgb(205,114,34)" fg:x="1173" fg:w="1"/><text x="93.7907%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="92.4242%" y="469" width="1.2759%" height="15" fill="rgb(236,200,45)" fg:x="1159" fg:w="16"/><text x="92.6742%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.6204%" y="453" width="0.0797%" height="15" fill="rgb(227,194,29)" fg:x="1174" fg:w="1"/><text x="93.8704%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.7002%" y="437" width="0.0797%" height="15" fill="rgb(250,76,42)" fg:x="1175" fg:w="1"/><text x="93.9502%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.7799%" y="421" width="0.0797%" height="15" fill="rgb(208,128,8)" fg:x="1176" fg:w="1"/><text x="94.0299%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.7799%" y="405" width="0.0797%" height="15" fill="rgb(229,209,35)" fg:x="1176" fg:w="1"/><text x="94.0299%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="93.8596%" y="389" width="0.1595%" height="15" fill="rgb(215,39,53)" fg:x="1177" fg:w="2"/><text x="94.1096%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.0191%" y="373" width="0.0797%" height="15" fill="rgb(219,123,41)" fg:x="1179" fg:w="1"/><text x="94.2691%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.0989%" y="357" width="0.0797%" height="15" fill="rgb(212,158,18)" fg:x="1180" fg:w="1"/><text x="94.3489%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="93.7002%" y="469" width="0.5582%" height="15" fill="rgb(234,196,53)" fg:x="1175" fg:w="7"/><text x="93.9502%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="93.7002%" y="453" width="0.5582%" height="15" fill="rgb(210,139,12)" fg:x="1175" fg:w="7"/><text x="93.9502%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="93.7799%" y="437" width="0.4785%" height="15" fill="rgb(220,116,54)" fg:x="1176" fg:w="6"/><text x="94.0299%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="93.8596%" y="421" width="0.3987%" height="15" fill="rgb(247,103,28)" fg:x="1177" fg:w="5"/><text x="94.1096%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="93.8596%" y="405" width="0.3987%" height="15" fill="rgb(253,156,45)" fg:x="1177" fg:w="5"/><text x="94.1096%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="94.0191%" y="389" width="0.2392%" height="15" fill="rgb(237,157,52)" fg:x="1179" fg:w="3"/><text x="94.2691%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.0989%" y="373" width="0.1595%" height="15" fill="rgb(253,112,16)" fg:x="1180" fg:w="2"/><text x="94.3489%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.1786%" y="357" width="0.0797%" height="15" fill="rgb(234,70,18)" fg:x="1181" fg:w="1"/><text x="94.4286%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="94.2584%" y="389" width="0.1595%" height="15" fill="rgb(247,138,19)" fg:x="1182" fg:w="2"/><text x="94.5084%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3381%" y="373" width="0.0797%" height="15" fill="rgb(207,171,1)" fg:x="1183" fg:w="1"/><text x="94.5881%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="94.4179%" y="373" width="0.1595%" height="15" fill="rgb(239,213,3)" fg:x="1184" fg:w="2"/><text x="94.6679%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4976%" y="357" width="0.0797%" height="15" fill="rgb(226,112,4)" fg:x="1185" fg:w="1"/><text x="94.7476%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5774%" y="357" width="0.0797%" height="15" fill="rgb(252,170,12)" fg:x="1186" fg:w="1"/><text x="94.8274%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="94.6571%" y="325" width="0.1595%" height="15" fill="rgb(241,106,13)" fg:x="1187" fg:w="2"/><text x="94.9071%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="94.2584%" y="437" width="0.6380%" height="15" fill="rgb(225,73,23)" fg:x="1182" fg:w="8"/><text x="94.5084%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="94.2584%" y="421" width="0.6380%" height="15" fill="rgb(251,227,29)" fg:x="1182" fg:w="8"/><text x="94.5084%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="94.2584%" y="405" width="0.6380%" height="15" fill="rgb(237,144,13)" fg:x="1182" fg:w="8"/><text x="94.5084%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="94.4179%" y="389" width="0.4785%" height="15" fill="rgb(232,106,46)" fg:x="1184" fg:w="6"/><text x="94.6679%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="94.5774%" y="373" width="0.3190%" height="15" fill="rgb(245,154,53)" fg:x="1186" fg:w="4"/><text x="94.8274%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="94.6571%" y="357" width="0.2392%" height="15" fill="rgb(212,119,47)" fg:x="1187" fg:w="3"/><text x="94.9071%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="94.6571%" y="341" width="0.2392%" height="15" fill="rgb(253,135,25)" fg:x="1187" fg:w="3"/><text x="94.9071%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.8166%" y="325" width="0.0797%" height="15" fill="rgb(253,208,39)" fg:x="1189" fg:w="1"/><text x="95.0666%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="95.1356%" y="373" width="0.1595%" height="15" fill="rgb(226,64,12)" fg:x="1193" fg:w="2"/><text x="95.3856%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="95.1356%" y="357" width="0.1595%" height="15" fill="rgb(214,162,37)" fg:x="1193" fg:w="2"/><text x="95.3856%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="95.0558%" y="389" width="0.3190%" height="15" fill="rgb(250,104,5)" fg:x="1192" fg:w="4"/><text x="95.3058%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="95.2951%" y="373" width="0.0797%" height="15" fill="rgb(220,202,50)" fg:x="1195" fg:w="1"/><text x="95.5451%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="95.2951%" y="357" width="0.0797%" height="15" fill="rgb(248,67,38)" fg:x="1195" fg:w="1"/><text x="95.5451%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.2951%" y="341" width="0.0797%" height="15" fill="rgb(242,94,35)" fg:x="1195" fg:w="1"/><text x="95.5451%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (15 samples, 1.20%)</title><rect x="94.2584%" y="453" width="1.1962%" height="15" fill="rgb(209,78,37)" fg:x="1182" fg:w="15"/><text x="94.5084%" y="463.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="94.8963%" y="437" width="0.5582%" height="15" fill="rgb(230,126,47)" fg:x="1190" fg:w="7"/><text x="95.1463%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="94.8963%" y="421" width="0.5582%" height="15" fill="rgb(222,110,35)" fg:x="1190" fg:w="7"/><text x="95.1463%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="94.8963%" y="405" width="0.5582%" height="15" fill="rgb(233,154,20)" fg:x="1190" fg:w="7"/><text x="95.1463%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.3748%" y="389" width="0.0797%" height="15" fill="rgb(223,53,50)" fg:x="1196" fg:w="1"/><text x="95.6248%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5343%" y="421" width="0.0797%" height="15" fill="rgb(251,27,26)" fg:x="1198" fg:w="1"/><text x="95.7843%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="95.6140%" y="421" width="0.0797%" height="15" fill="rgb(223,189,16)" fg:x="1199" fg:w="1"/><text x="95.8640%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="95.6140%" y="405" width="0.0797%" height="15" fill="rgb(207,5,54)" fg:x="1199" fg:w="1"/><text x="95.8640%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="95.7735%" y="389" width="0.0797%" height="15" fill="rgb(254,124,50)" fg:x="1201" fg:w="1"/><text x="96.0235%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="95.7735%" y="373" width="0.0797%" height="15" fill="rgb(253,193,24)" fg:x="1201" fg:w="1"/><text x="96.0235%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="95.6938%" y="421" width="0.2392%" height="15" fill="rgb(235,170,24)" fg:x="1200" fg:w="3"/><text x="95.9438%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="95.7735%" y="405" width="0.1595%" height="15" fill="rgb(222,212,52)" fg:x="1201" fg:w="2"/><text x="96.0235%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8533%" y="389" width="0.0797%" height="15" fill="rgb(223,17,45)" fg:x="1202" fg:w="1"/><text x="96.1033%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.0925%" y="373" width="0.1595%" height="15" fill="rgb(227,103,26)" fg:x="1205" fg:w="2"/><text x="96.3425%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1722%" y="357" width="0.0797%" height="15" fill="rgb(251,151,25)" fg:x="1206" fg:w="1"/><text x="96.4222%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="96.1722%" y="341" width="0.0797%" height="15" fill="rgb(248,144,29)" fg:x="1206" fg:w="1"/><text x="96.4222%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="96.2520%" y="373" width="0.0797%" height="15" fill="rgb(245,97,16)" fg:x="1207" fg:w="1"/><text x="96.5020%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="96.2520%" y="357" width="0.0797%" height="15" fill="rgb(220,200,29)" fg:x="1207" fg:w="1"/><text x="96.5020%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="96.2520%" y="341" width="0.0797%" height="15" fill="rgb(206,38,29)" fg:x="1207" fg:w="1"/><text x="96.5020%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="96.2520%" y="325" width="0.0797%" height="15" fill="rgb(245,19,52)" fg:x="1207" fg:w="1"/><text x="96.5020%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="96.3317%" y="357" width="0.0797%" height="15" fill="rgb(205,67,43)" fg:x="1208" fg:w="1"/><text x="96.5817%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="96.4115%" y="357" width="0.0797%" height="15" fill="rgb(217,128,23)" fg:x="1209" fg:w="1"/><text x="96.6615%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4912%" y="341" width="0.0797%" height="15" fill="rgb(210,109,28)" fg:x="1210" fg:w="1"/><text x="96.7412%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5710%" y="245" width="0.0797%" height="15" fill="rgb(233,181,7)" fg:x="1211" fg:w="1"/><text x="96.8210%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5710%" y="229" width="0.0797%" height="15" fill="rgb(244,11,22)" fg:x="1211" fg:w="1"/><text x="96.8210%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5710%" y="213" width="0.0797%" height="15" fill="rgb(205,124,54)" fg:x="1211" fg:w="1"/><text x="96.8210%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="96.5710%" y="261" width="0.1595%" height="15" fill="rgb(218,21,27)" fg:x="1211" fg:w="2"/><text x="96.8210%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="96.6507%" y="245" width="0.0797%" height="15" fill="rgb(224,153,33)" fg:x="1212" fg:w="1"/><text x="96.9007%" y="255.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.36%)</title><rect x="95.4545%" y="453" width="1.3557%" height="15" fill="rgb(240,219,28)" fg:x="1197" fg:w="17"/><text x="95.7045%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="95.4545%" y="437" width="1.3557%" height="15" fill="rgb(214,80,29)" fg:x="1197" fg:w="17"/><text x="95.7045%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="95.9330%" y="421" width="0.8772%" height="15" fill="rgb(247,148,44)" fg:x="1203" fg:w="11"/><text x="96.1830%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="96.0128%" y="405" width="0.7974%" height="15" fill="rgb(243,110,30)" fg:x="1204" fg:w="10"/><text x="96.2628%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="96.0128%" y="389" width="0.7974%" height="15" fill="rgb(243,173,41)" fg:x="1204" fg:w="10"/><text x="96.2628%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="96.3317%" y="373" width="0.4785%" height="15" fill="rgb(225,160,47)" fg:x="1208" fg:w="6"/><text x="96.5817%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="96.4912%" y="357" width="0.3190%" height="15" fill="rgb(215,44,21)" fg:x="1210" fg:w="4"/><text x="96.7412%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="96.5710%" y="341" width="0.2392%" height="15" fill="rgb(248,90,3)" fg:x="1211" fg:w="3"/><text x="96.8210%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="96.5710%" y="325" width="0.2392%" height="15" fill="rgb(220,196,49)" fg:x="1211" fg:w="3"/><text x="96.8210%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="96.5710%" y="309" width="0.2392%" height="15" fill="rgb(217,138,14)" fg:x="1211" fg:w="3"/><text x="96.8210%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="96.5710%" y="293" width="0.2392%" height="15" fill="rgb(219,111,20)" fg:x="1211" fg:w="3"/><text x="96.8210%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="96.5710%" y="277" width="0.2392%" height="15" fill="rgb(218,114,4)" fg:x="1211" fg:w="3"/><text x="96.8210%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7305%" y="261" width="0.0797%" height="15" fill="rgb(238,133,3)" fg:x="1213" fg:w="1"/><text x="96.9805%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8900%" y="293" width="0.0797%" height="15" fill="rgb(224,95,0)" fg:x="1215" fg:w="1"/><text x="97.1400%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8900%" y="277" width="0.0797%" height="15" fill="rgb(220,169,35)" fg:x="1215" fg:w="1"/><text x="97.1400%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8900%" y="261" width="0.0797%" height="15" fill="rgb(242,116,47)" fg:x="1215" fg:w="1"/><text x="97.1400%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.8900%" y="245" width="0.0797%" height="15" fill="rgb(251,42,20)" fg:x="1215" fg:w="1"/><text x="97.1400%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8900%" y="229" width="0.0797%" height="15" fill="rgb(234,7,34)" fg:x="1215" fg:w="1"/><text x="97.1400%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.8900%" y="213" width="0.0797%" height="15" fill="rgb(243,208,13)" fg:x="1215" fg:w="1"/><text x="97.1400%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="96.8900%" y="197" width="0.0797%" height="15" fill="rgb(227,33,28)" fg:x="1215" fg:w="1"/><text x="97.1400%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.8900%" y="325" width="0.1595%" height="15" fill="rgb(250,47,37)" fg:x="1215" fg:w="2"/><text x="97.1400%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.8900%" y="309" width="0.1595%" height="15" fill="rgb(235,111,52)" fg:x="1215" fg:w="2"/><text x="97.1400%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.9697%" y="293" width="0.0797%" height="15" fill="rgb(223,64,28)" fg:x="1216" fg:w="1"/><text x="97.2197%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.8102%" y="389" width="0.3190%" height="15" fill="rgb(236,67,22)" fg:x="1214" fg:w="4"/><text x="97.0602%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.8102%" y="373" width="0.3190%" height="15" fill="rgb(243,79,24)" fg:x="1214" fg:w="4"/><text x="97.0602%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.8102%" y="357" width="0.3190%" height="15" fill="rgb(241,225,22)" fg:x="1214" fg:w="4"/><text x="97.0602%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.8102%" y="341" width="0.3190%" height="15" fill="rgb(228,214,26)" fg:x="1214" fg:w="4"/><text x="97.0602%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.0494%" y="325" width="0.0797%" height="15" fill="rgb(219,84,52)" fg:x="1217" fg:w="1"/><text x="97.2994%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="97.0494%" y="309" width="0.0797%" height="15" fill="rgb(220,12,22)" fg:x="1217" fg:w="1"/><text x="97.2994%" y="319.50"></text></g><g><title>engine::session::Session::close (66 samples, 5.26%)</title><rect x="92.0255%" y="549" width="5.2632%" height="15" fill="rgb(219,9,49)" fg:x="1154" fg:w="66"/><text x="92.2755%" y="559.50">engine..</text></g><g><title>engine::session::state::State::close (62 samples, 4.94%)</title><rect x="92.3445%" y="533" width="4.9442%" height="15" fill="rgb(237,40,43)" fg:x="1158" fg:w="62"/><text x="92.5945%" y="543.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (62 samples, 4.94%)</title><rect x="92.3445%" y="517" width="4.9442%" height="15" fill="rgb(212,189,32)" fg:x="1158" fg:w="62"/><text x="92.5945%" y="527.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (62 samples, 4.94%)</title><rect x="92.3445%" y="501" width="4.9442%" height="15" fill="rgb(247,48,9)" fg:x="1158" fg:w="62"/><text x="92.5945%" y="511.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (62 samples, 4.94%)</title><rect x="92.3445%" y="485" width="4.9442%" height="15" fill="rgb(247,112,3)" fg:x="1158" fg:w="62"/><text x="92.5945%" y="495.50">engine..</text></g><g><title>kernel::model::any_entity_changes (38 samples, 3.03%)</title><rect x="94.2584%" y="469" width="3.0303%" height="15" fill="rgb(243,110,18)" fg:x="1182" fg:w="38"/><text x="94.5084%" y="479.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="96.8102%" y="453" width="0.4785%" height="15" fill="rgb(233,223,44)" fg:x="1214" fg:w="6"/><text x="97.0602%" y="463.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="96.8102%" y="437" width="0.4785%" height="15" fill="rgb(245,160,20)" fg:x="1214" fg:w="6"/><text x="97.0602%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="96.8102%" y="421" width="0.4785%" height="15" fill="rgb(225,37,1)" fg:x="1214" fg:w="6"/><text x="97.0602%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="96.8102%" y="405" width="0.4785%" height="15" fill="rgb(253,227,39)" fg:x="1214" fg:w="6"/><text x="97.0602%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.1292%" y="389" width="0.1595%" height="15" fill="rgb(240,179,26)" fg:x="1218" fg:w="2"/><text x="97.3792%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.1292%" y="373" width="0.1595%" height="15" fill="rgb(237,212,23)" fg:x="1218" fg:w="2"/><text x="97.3792%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2089%" y="357" width="0.0797%" height="15" fill="rgb(221,38,11)" fg:x="1219" fg:w="1"/><text x="97.4589%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="97.5279%" y="357" width="0.0797%" height="15" fill="rgb(215,85,6)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="97.5279%" y="341" width="0.0797%" height="15" fill="rgb(239,64,14)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.5279%" y="325" width="0.0797%" height="15" fill="rgb(215,150,32)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.5279%" y="309" width="0.0797%" height="15" fill="rgb(238,15,13)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.5279%" y="293" width="0.0797%" height="15" fill="rgb(251,87,8)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5279%" y="277" width="0.0797%" height="15" fill="rgb(206,86,1)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5279%" y="261" width="0.0797%" height="15" fill="rgb(208,151,45)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5279%" y="245" width="0.0797%" height="15" fill="rgb(231,181,24)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5279%" y="229" width="0.0797%" height="15" fill="rgb(240,106,29)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5279%" y="213" width="0.0797%" height="15" fill="rgb(227,166,11)" fg:x="1223" fg:w="1"/><text x="97.7779%" y="223.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="97.6077%" y="341" width="0.0797%" height="15" fill="rgb(254,14,34)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.6077%" y="325" width="0.0797%" height="15" fill="rgb(223,222,6)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6077%" y="309" width="0.0797%" height="15" fill="rgb(245,69,24)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.6077%" y="293" width="0.0797%" height="15" fill="rgb(213,193,7)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6077%" y="277" width="0.0797%" height="15" fill="rgb(237,92,51)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.6077%" y="261" width="0.0797%" height="15" fill="rgb(225,194,6)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6077%" y="245" width="0.0797%" height="15" fill="rgb(205,159,49)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.6077%" y="229" width="0.0797%" height="15" fill="rgb(219,69,2)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6077%" y="213" width="0.0797%" height="15" fill="rgb(215,107,24)" fg:x="1224" fg:w="1"/><text x="97.8577%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6874%" y="261" width="0.0797%" height="15" fill="rgb(249,208,29)" fg:x="1225" fg:w="1"/><text x="97.9374%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6874%" y="245" width="0.0797%" height="15" fill="rgb(213,147,10)" fg:x="1225" fg:w="1"/><text x="97.9374%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6874%" y="229" width="0.0797%" height="15" fill="rgb(254,140,42)" fg:x="1225" fg:w="1"/><text x="97.9374%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6874%" y="213" width="0.0797%" height="15" fill="rgb(249,9,15)" fg:x="1225" fg:w="1"/><text x="97.9374%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6874%" y="197" width="0.0797%" height="15" fill="rgb(210,19,33)" fg:x="1225" fg:w="1"/><text x="97.9374%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6874%" y="181" width="0.0797%" height="15" fill="rgb(241,121,22)" fg:x="1225" fg:w="1"/><text x="97.9374%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6874%" y="165" width="0.0797%" height="15" fill="rgb(244,69,52)" fg:x="1225" fg:w="1"/><text x="97.9374%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6874%" y="149" width="0.0797%" height="15" fill="rgb(244,191,54)" fg:x="1225" fg:w="1"/><text x="97.9374%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7671%" y="197" width="0.0797%" height="15" fill="rgb(250,3,53)" fg:x="1226" fg:w="1"/><text x="98.0171%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="97.5279%" y="405" width="0.3987%" height="15" fill="rgb(205,77,3)" fg:x="1223" fg:w="5"/><text x="97.7779%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="97.5279%" y="389" width="0.3987%" height="15" fill="rgb(207,155,3)" fg:x="1223" fg:w="5"/><text x="97.7779%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="97.5279%" y="373" width="0.3987%" height="15" fill="rgb(224,79,2)" fg:x="1223" fg:w="5"/><text x="97.7779%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="97.6077%" y="357" width="0.3190%" height="15" fill="rgb(243,172,5)" fg:x="1224" fg:w="4"/><text x="97.8577%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="97.6874%" y="341" width="0.2392%" height="15" fill="rgb(217,23,43)" fg:x="1225" fg:w="3"/><text x="97.9374%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.6874%" y="325" width="0.2392%" height="15" fill="rgb(223,109,20)" fg:x="1225" fg:w="3"/><text x="97.9374%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="97.6874%" y="309" width="0.2392%" height="15" fill="rgb(232,159,21)" fg:x="1225" fg:w="3"/><text x="97.9374%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.6874%" y="293" width="0.2392%" height="15" fill="rgb(219,58,2)" fg:x="1225" fg:w="3"/><text x="97.9374%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.6874%" y="277" width="0.2392%" height="15" fill="rgb(241,56,8)" fg:x="1225" fg:w="3"/><text x="97.9374%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.7671%" y="261" width="0.1595%" height="15" fill="rgb(249,10,27)" fg:x="1226" fg:w="2"/><text x="98.0171%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="97.7671%" y="245" width="0.1595%" height="15" fill="rgb(248,177,5)" fg:x="1226" fg:w="2"/><text x="98.0171%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.7671%" y="229" width="0.1595%" height="15" fill="rgb(239,12,30)" fg:x="1226" fg:w="2"/><text x="98.0171%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.7671%" y="213" width="0.1595%" height="15" fill="rgb(229,164,25)" fg:x="1226" fg:w="2"/><text x="98.0171%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.8469%" y="197" width="0.0797%" height="15" fill="rgb(231,217,50)" fg:x="1227" fg:w="1"/><text x="98.0969%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.8469%" y="181" width="0.0797%" height="15" fill="rgb(247,99,32)" fg:x="1227" fg:w="1"/><text x="98.0969%" y="191.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9266%" y="405" width="0.0797%" height="15" fill="rgb(240,74,50)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9266%" y="389" width="0.0797%" height="15" fill="rgb(218,54,8)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9266%" y="373" width="0.0797%" height="15" fill="rgb(227,132,20)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9266%" y="357" width="0.0797%" height="15" fill="rgb(232,134,12)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9266%" y="341" width="0.0797%" height="15" fill="rgb(250,129,18)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.9266%" y="325" width="0.0797%" height="15" fill="rgb(232,129,47)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.9266%" y="309" width="0.0797%" height="15" fill="rgb(230,31,40)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.9266%" y="293" width="0.0797%" height="15" fill="rgb(232,126,10)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.9266%" y="277" width="0.0797%" height="15" fill="rgb(205,46,31)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.9266%" y="261" width="0.0797%" height="15" fill="rgb(232,37,37)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.9266%" y="245" width="0.0797%" height="15" fill="rgb(240,91,16)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.9266%" y="229" width="0.0797%" height="15" fill="rgb(224,160,9)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.9266%" y="213" width="0.0797%" height="15" fill="rgb(215,116,14)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.9266%" y="197" width="0.0797%" height="15" fill="rgb(235,46,36)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9266%" y="181" width="0.0797%" height="15" fill="rgb(238,39,28)" fg:x="1228" fg:w="1"/><text x="98.1766%" y="191.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (7 samples, 0.56%)</title><rect x="97.5279%" y="469" width="0.5582%" height="15" fill="rgb(242,125,29)" fg:x="1223" fg:w="7"/><text x="97.7779%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.56%)</title><rect x="97.5279%" y="453" width="0.5582%" height="15" fill="rgb(238,211,30)" fg:x="1223" fg:w="7"/><text x="97.7779%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="97.5279%" y="437" width="0.5582%" height="15" fill="rgb(227,201,28)" fg:x="1223" fg:w="7"/><text x="97.7779%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="97.5279%" y="421" width="0.5582%" height="15" fill="rgb(238,77,29)" fg:x="1223" fg:w="7"/><text x="97.7779%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0064%" y="405" width="0.0797%" height="15" fill="rgb(213,221,40)" fg:x="1229" fg:w="1"/><text x="98.2564%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0064%" y="389" width="0.0797%" height="15" fill="rgb(226,220,44)" fg:x="1229" fg:w="1"/><text x="98.2564%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0064%" y="373" width="0.0797%" height="15" fill="rgb(228,90,23)" fg:x="1229" fg:w="1"/><text x="98.2564%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0064%" y="357" width="0.0797%" height="15" fill="rgb(235,72,29)" fg:x="1229" fg:w="1"/><text x="98.2564%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0064%" y="341" width="0.0797%" height="15" fill="rgb(248,117,39)" fg:x="1229" fg:w="1"/><text x="98.2564%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="98.0861%" y="341" width="0.0797%" height="15" fill="rgb(225,43,28)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="351.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="98.0861%" y="325" width="0.0797%" height="15" fill="rgb(240,93,4)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0861%" y="309" width="0.0797%" height="15" fill="rgb(234,178,27)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0861%" y="293" width="0.0797%" height="15" fill="rgb(254,88,22)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0861%" y="277" width="0.0797%" height="15" fill="rgb(240,206,50)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0861%" y="261" width="0.0797%" height="15" fill="rgb(249,103,8)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0861%" y="245" width="0.0797%" height="15" fill="rgb(241,178,36)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0861%" y="229" width="0.0797%" height="15" fill="rgb(246,110,15)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0861%" y="213" width="0.0797%" height="15" fill="rgb(207,14,43)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0861%" y="197" width="0.0797%" height="15" fill="rgb(253,219,19)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0861%" y="181" width="0.0797%" height="15" fill="rgb(216,126,5)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0861%" y="165" width="0.0797%" height="15" fill="rgb(218,78,42)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0861%" y="149" width="0.0797%" height="15" fill="rgb(215,154,40)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0861%" y="133" width="0.0797%" height="15" fill="rgb(235,129,32)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0861%" y="117" width="0.0797%" height="15" fill="rgb(218,51,8)" fg:x="1230" fg:w="1"/><text x="98.3361%" y="127.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (11 samples, 0.88%)</title><rect x="97.3684%" y="533" width="0.8772%" height="15" fill="rgb(245,48,4)" fg:x="1221" fg:w="11"/><text x="97.6184%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (10 samples, 0.80%)</title><rect x="97.4482%" y="517" width="0.7974%" height="15" fill="rgb(250,175,12)" fg:x="1222" fg:w="10"/><text x="97.6982%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (10 samples, 0.80%)</title><rect x="97.4482%" y="501" width="0.7974%" height="15" fill="rgb(237,95,40)" fg:x="1222" fg:w="10"/><text x="97.6982%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (9 samples, 0.72%)</title><rect x="97.5279%" y="485" width="0.7177%" height="15" fill="rgb(244,120,0)" fg:x="1223" fg:w="9"/><text x="97.7779%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="98.0861%" y="469" width="0.1595%" height="15" fill="rgb(241,19,42)" fg:x="1230" fg:w="2"/><text x="98.3361%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="98.0861%" y="453" width="0.1595%" height="15" fill="rgb(217,174,48)" fg:x="1230" fg:w="2"/><text x="98.3361%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="98.0861%" y="437" width="0.1595%" height="15" fill="rgb(239,36,38)" fg:x="1230" fg:w="2"/><text x="98.3361%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="98.0861%" y="421" width="0.1595%" height="15" fill="rgb(220,63,49)" fg:x="1230" fg:w="2"/><text x="98.3361%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="98.0861%" y="405" width="0.1595%" height="15" fill="rgb(240,101,13)" fg:x="1230" fg:w="2"/><text x="98.3361%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="98.0861%" y="389" width="0.1595%" height="15" fill="rgb(209,184,51)" fg:x="1230" fg:w="2"/><text x="98.3361%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="98.0861%" y="373" width="0.1595%" height="15" fill="rgb(206,136,39)" fg:x="1230" fg:w="2"/><text x="98.3361%" y="383.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="98.0861%" y="357" width="0.1595%" height="15" fill="rgb(254,47,45)" fg:x="1230" fg:w="2"/><text x="98.3361%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1659%" y="341" width="0.0797%" height="15" fill="rgb(252,103,20)" fg:x="1231" fg:w="1"/><text x="98.4159%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.2456%" y="501" width="0.0797%" height="15" fill="rgb(230,69,12)" fg:x="1232" fg:w="1"/><text x="98.4956%" y="511.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="98.2456%" y="485" width="0.0797%" height="15" fill="rgb(219,2,28)" fg:x="1232" fg:w="1"/><text x="98.4956%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.2456%" y="469" width="0.0797%" height="15" fill="rgb(210,9,12)" fg:x="1232" fg:w="1"/><text x="98.4956%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.2456%" y="453" width="0.0797%" height="15" fill="rgb(235,99,33)" fg:x="1232" fg:w="1"/><text x="98.4956%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.2456%" y="437" width="0.0797%" height="15" fill="rgb(230,11,38)" fg:x="1232" fg:w="1"/><text x="98.4956%" y="447.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="98.2456%" y="421" width="0.0797%" height="15" fill="rgb(217,129,0)" fg:x="1232" fg:w="1"/><text x="98.4956%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3254%" y="309" width="0.0797%" height="15" fill="rgb(222,198,4)" fg:x="1233" fg:w="1"/><text x="98.5754%" y="319.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.3254%" y="485" width="0.1595%" height="15" fill="rgb(246,170,27)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3254%" y="469" width="0.1595%" height="15" fill="rgb(229,17,28)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3254%" y="453" width="0.1595%" height="15" fill="rgb(233,198,48)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3254%" y="437" width="0.1595%" height="15" fill="rgb(238,103,23)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3254%" y="421" width="0.1595%" height="15" fill="rgb(206,91,41)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3254%" y="405" width="0.1595%" height="15" fill="rgb(227,34,25)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3254%" y="389" width="0.1595%" height="15" fill="rgb(210,110,44)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3254%" y="373" width="0.1595%" height="15" fill="rgb(216,189,8)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3254%" y="357" width="0.1595%" height="15" fill="rgb(234,9,46)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3254%" y="341" width="0.1595%" height="15" fill="rgb(251,200,5)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3254%" y="325" width="0.1595%" height="15" fill="rgb(238,165,37)" fg:x="1233" fg:w="2"/><text x="98.5754%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.4051%" y="309" width="0.0797%" height="15" fill="rgb(232,77,38)" fg:x="1234" fg:w="1"/><text x="98.6551%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.5646%" y="405" width="0.0797%" height="15" fill="rgb(253,179,33)" fg:x="1236" fg:w="1"/><text x="98.8146%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5646%" y="389" width="0.0797%" height="15" fill="rgb(240,13,35)" fg:x="1236" fg:w="1"/><text x="98.8146%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.5646%" y="373" width="0.0797%" height="15" fill="rgb(242,150,49)" fg:x="1236" fg:w="1"/><text x="98.8146%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5646%" y="357" width="0.0797%" height="15" fill="rgb(237,176,28)" fg:x="1236" fg:w="1"/><text x="98.8146%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.5646%" y="341" width="0.0797%" height="15" fill="rgb(214,176,33)" fg:x="1236" fg:w="1"/><text x="98.8146%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5646%" y="325" width="0.0797%" height="15" fill="rgb(214,25,12)" fg:x="1236" fg:w="1"/><text x="98.8146%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="98.3254%" y="501" width="0.5582%" height="15" fill="rgb(238,190,20)" fg:x="1233" fg:w="7"/><text x="98.5754%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="98.4848%" y="485" width="0.3987%" height="15" fill="rgb(208,11,19)" fg:x="1235" fg:w="5"/><text x="98.7348%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.4848%" y="469" width="0.3987%" height="15" fill="rgb(239,90,4)" fg:x="1235" fg:w="5"/><text x="98.7348%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.5646%" y="453" width="0.3190%" height="15" fill="rgb(248,110,3)" fg:x="1236" fg:w="4"/><text x="98.8146%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.5646%" y="437" width="0.3190%" height="15" fill="rgb(210,41,30)" fg:x="1236" fg:w="4"/><text x="98.8146%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.5646%" y="421" width="0.3190%" height="15" fill="rgb(239,36,8)" fg:x="1236" fg:w="4"/><text x="98.8146%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="98.6443%" y="405" width="0.2392%" height="15" fill="rgb(237,201,47)" fg:x="1237" fg:w="3"/><text x="98.8943%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="98.6443%" y="389" width="0.2392%" height="15" fill="rgb(224,140,29)" fg:x="1237" fg:w="3"/><text x="98.8943%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="98.6443%" y="373" width="0.2392%" height="15" fill="rgb(231,209,17)" fg:x="1237" fg:w="3"/><text x="98.8943%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.7241%" y="357" width="0.1595%" height="15" fill="rgb(249,196,1)" fg:x="1238" fg:w="2"/><text x="98.9741%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.7241%" y="341" width="0.1595%" height="15" fill="rgb(223,207,51)" fg:x="1238" fg:w="2"/><text x="98.9741%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.8038%" y="325" width="0.0797%" height="15" fill="rgb(210,14,40)" fg:x="1239" fg:w="1"/><text x="99.0538%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="98.2456%" y="517" width="0.7177%" height="15" fill="rgb(250,20,52)" fg:x="1232" fg:w="9"/><text x="98.4956%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.8836%" y="501" width="0.0797%" height="15" fill="rgb(241,46,11)" fg:x="1240" fg:w="1"/><text x="99.1336%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.8836%" y="485" width="0.0797%" height="15" fill="rgb(219,105,5)" fg:x="1240" fg:w="1"/><text x="99.1336%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.80%)</title><rect x="98.2456%" y="533" width="0.7974%" height="15" fill="rgb(252,77,35)" fg:x="1232" fg:w="10"/><text x="98.4956%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="98.9633%" y="517" width="0.0797%" height="15" fill="rgb(243,119,2)" fg:x="1241" fg:w="1"/><text x="99.2133%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.0431%" y="453" width="0.0797%" height="15" fill="rgb(206,82,28)" fg:x="1242" fg:w="1"/><text x="99.2931%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.0431%" y="437" width="0.0797%" height="15" fill="rgb(227,120,12)" fg:x="1242" fg:w="1"/><text x="99.2931%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.0431%" y="421" width="0.0797%" height="15" fill="rgb(229,134,41)" fg:x="1242" fg:w="1"/><text x="99.2931%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0431%" y="405" width="0.0797%" height="15" fill="rgb(239,96,32)" fg:x="1242" fg:w="1"/><text x="99.2931%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0431%" y="389" width="0.0797%" height="15" fill="rgb(225,46,27)" fg:x="1242" fg:w="1"/><text x="99.2931%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0431%" y="373" width="0.0797%" height="15" fill="rgb(215,168,2)" fg:x="1242" fg:w="1"/><text x="99.2931%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0431%" y="357" width="0.0797%" height="15" fill="rgb(207,170,52)" fg:x="1242" fg:w="1"/><text x="99.2931%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0431%" y="341" width="0.0797%" height="15" fill="rgb(237,198,36)" fg:x="1242" fg:w="1"/><text x="99.2931%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="99.0431%" y="485" width="0.1595%" height="15" fill="rgb(213,27,14)" fg:x="1242" fg:w="2"/><text x="99.2931%" y="495.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="99.0431%" y="469" width="0.1595%" height="15" fill="rgb(218,77,5)" fg:x="1242" fg:w="2"/><text x="99.2931%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="99.1228%" y="453" width="0.0797%" height="15" fill="rgb(230,219,39)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.1228%" y="437" width="0.0797%" height="15" fill="rgb(245,177,7)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.1228%" y="421" width="0.0797%" height="15" fill="rgb(246,44,46)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1228%" y="405" width="0.0797%" height="15" fill="rgb(207,173,15)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.1228%" y="389" width="0.0797%" height="15" fill="rgb(245,170,50)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1228%" y="373" width="0.0797%" height="15" fill="rgb(233,156,21)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1228%" y="357" width="0.0797%" height="15" fill="rgb(253,146,27)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.1228%" y="341" width="0.0797%" height="15" fill="rgb(247,66,29)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.1228%" y="325" width="0.0797%" height="15" fill="rgb(218,207,26)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.1228%" y="309" width="0.0797%" height="15" fill="rgb(234,93,26)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.1228%" y="293" width="0.0797%" height="15" fill="rgb(214,75,48)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.1228%" y="277" width="0.0797%" height="15" fill="rgb(229,119,22)" fg:x="1243" fg:w="1"/><text x="99.3728%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2026%" y="389" width="0.0797%" height="15" fill="rgb(226,153,19)" fg:x="1244" fg:w="1"/><text x="99.4526%" y="399.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.2026%" y="469" width="0.1595%" height="15" fill="rgb(220,204,36)" fg:x="1244" fg:w="2"/><text x="99.4526%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.2026%" y="453" width="0.1595%" height="15" fill="rgb(253,181,43)" fg:x="1244" fg:w="2"/><text x="99.4526%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2026%" y="437" width="0.1595%" height="15" fill="rgb(211,41,51)" fg:x="1244" fg:w="2"/><text x="99.4526%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.2026%" y="421" width="0.1595%" height="15" fill="rgb(207,215,0)" fg:x="1244" fg:w="2"/><text x="99.4526%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2026%" y="405" width="0.1595%" height="15" fill="rgb(212,153,10)" fg:x="1244" fg:w="2"/><text x="99.4526%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2823%" y="389" width="0.0797%" height="15" fill="rgb(251,171,36)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2823%" y="373" width="0.0797%" height="15" fill="rgb(225,219,41)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2823%" y="357" width="0.0797%" height="15" fill="rgb(208,200,1)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2823%" y="341" width="0.0797%" height="15" fill="rgb(206,75,47)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2823%" y="325" width="0.0797%" height="15" fill="rgb(248,3,16)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2823%" y="309" width="0.0797%" height="15" fill="rgb(242,157,36)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2823%" y="293" width="0.0797%" height="15" fill="rgb(215,175,11)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2823%" y="277" width="0.0797%" height="15" fill="rgb(252,222,22)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2823%" y="261" width="0.0797%" height="15" fill="rgb(250,121,35)" fg:x="1245" fg:w="1"/><text x="99.5323%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.3620%" y="437" width="0.0797%" height="15" fill="rgb(233,120,49)" fg:x="1246" fg:w="1"/><text x="99.6120%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3620%" y="421" width="0.0797%" height="15" fill="rgb(205,201,14)" fg:x="1246" fg:w="1"/><text x="99.6120%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3620%" y="405" width="0.0797%" height="15" fill="rgb(219,58,45)" fg:x="1246" fg:w="1"/><text x="99.6120%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3620%" y="389" width="0.0797%" height="15" fill="rgb(251,65,12)" fg:x="1246" fg:w="1"/><text x="99.6120%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3620%" y="373" width="0.0797%" height="15" fill="rgb(224,47,31)" fg:x="1246" fg:w="1"/><text x="99.6120%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.3620%" y="357" width="0.0797%" height="15" fill="rgb(233,74,26)" fg:x="1246" fg:w="1"/><text x="99.6120%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.3620%" y="341" width="0.0797%" height="15" fill="rgb(231,211,31)" fg:x="1246" fg:w="1"/><text x="99.6120%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.3620%" y="325" width="0.0797%" height="15" fill="rgb(239,167,5)" fg:x="1246" fg:w="1"/><text x="99.6120%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="99.2026%" y="485" width="0.3987%" height="15" fill="rgb(241,85,0)" fg:x="1244" fg:w="5"/><text x="99.4526%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.3620%" y="469" width="0.2392%" height="15" fill="rgb(229,130,21)" fg:x="1246" fg:w="3"/><text x="99.6120%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.3620%" y="453" width="0.2392%" height="15" fill="rgb(254,84,49)" fg:x="1246" fg:w="3"/><text x="99.6120%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.4418%" y="437" width="0.1595%" height="15" fill="rgb(235,85,21)" fg:x="1247" fg:w="2"/><text x="99.6918%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5215%" y="421" width="0.0797%" height="15" fill="rgb(246,128,52)" fg:x="1248" fg:w="1"/><text x="99.7715%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.6013%" y="485" width="0.0797%" height="15" fill="rgb(243,114,49)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.6013%" y="469" width="0.0797%" height="15" fill="rgb(240,224,22)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.6013%" y="453" width="0.0797%" height="15" fill="rgb(247,201,52)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6013%" y="437" width="0.0797%" height="15" fill="rgb(231,70,45)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6013%" y="421" width="0.0797%" height="15" fill="rgb(217,215,20)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6013%" y="405" width="0.0797%" height="15" fill="rgb(226,170,30)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6013%" y="389" width="0.0797%" height="15" fill="rgb(220,190,43)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.6013%" y="373" width="0.0797%" height="15" fill="rgb(218,20,18)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6013%" y="357" width="0.0797%" height="15" fill="rgb(245,37,26)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.6013%" y="341" width="0.0797%" height="15" fill="rgb(241,127,29)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.6013%" y="325" width="0.0797%" height="15" fill="rgb(241,33,26)" fg:x="1249" fg:w="1"/><text x="99.8513%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="99.0431%" y="517" width="0.7177%" height="15" fill="rgb(220,106,21)" fg:x="1242" fg:w="9"/><text x="99.2931%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="99.0431%" y="501" width="0.7177%" height="15" fill="rgb(225,125,35)" fg:x="1242" fg:w="9"/><text x="99.2931%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.6810%" y="485" width="0.0797%" height="15" fill="rgb(248,80,22)" fg:x="1250" fg:w="1"/><text x="99.9310%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (10 samples, 0.80%)</title><rect x="99.0431%" y="533" width="0.7974%" height="15" fill="rgb(231,117,39)" fg:x="1242" fg:w="10"/><text x="99.2931%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.7608%" y="517" width="0.0797%" height="15" fill="rgb(239,183,16)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.7608%" y="501" width="0.0797%" height="15" fill="rgb(221,61,19)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.7608%" y="485" width="0.0797%" height="15" fill="rgb(239,196,44)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7608%" y="469" width="0.0797%" height="15" fill="rgb(206,113,19)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7608%" y="453" width="0.0797%" height="15" fill="rgb(245,114,12)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7608%" y="437" width="0.0797%" height="15" fill="rgb(247,89,39)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7608%" y="421" width="0.0797%" height="15" fill="rgb(213,85,14)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7608%" y="405" width="0.0797%" height="15" fill="rgb(249,206,33)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7608%" y="389" width="0.0797%" height="15" fill="rgb(235,167,47)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.7608%" y="373" width="0.0797%" height="15" fill="rgb(217,177,16)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.7608%" y="357" width="0.0797%" height="15" fill="rgb(250,228,29)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.7608%" y="341" width="0.0797%" height="15" fill="rgb(216,195,42)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.7608%" y="325" width="0.0797%" height="15" fill="rgb(232,192,32)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.7608%" y="309" width="0.0797%" height="15" fill="rgb(211,8,47)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.7608%" y="293" width="0.0797%" height="15" fill="rgb(251,201,9)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.7608%" y="277" width="0.0797%" height="15" fill="rgb(206,185,47)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.7608%" y="261" width="0.0797%" height="15" fill="rgb(245,54,32)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.7608%" y="245" width="0.0797%" height="15" fill="rgb(208,1,8)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.7608%" y="229" width="0.0797%" height="15" fill="rgb(228,57,24)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.7608%" y="213" width="0.0797%" height="15" fill="rgb(251,24,8)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.7608%" y="197" width="0.0797%" height="15" fill="rgb(236,196,50)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.7608%" y="181" width="0.0797%" height="15" fill="rgb(246,222,29)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.7608%" y="165" width="0.0797%" height="15" fill="rgb(211,34,40)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.7608%" y="149" width="0.0797%" height="15" fill="rgb(210,66,51)" fg:x="1251" fg:w="1"/><text x="100.0108%" y="159.50"></text></g><g><title>all (1,254 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(250,56,43)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="911.50"></text></g><g><title>simple-484c7248 (1,254 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(240,111,50)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="895.50">simple-484c7248</text></g><g><title>_start (1,254 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(209,117,13)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="879.50">_start</text></g><g><title>__libc_start_main (1,254 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(232,164,45)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="863.50">__libc_start_main</text></g><g><title>main (1,254 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(205,69,32)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (1,254 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(240,147,45)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,254 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(221,94,48)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,254 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(249,209,17)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,254 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(228,57,28)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="783.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,254 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(250,133,26)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="767.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,254 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(254,15,16)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,254 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(209,147,42)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,254 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(208,5,29)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="719.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,254 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(250,73,31)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="703.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,254 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(238,45,10)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="687.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,254 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(214,104,5)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="671.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,254 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(242,217,19)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="655.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,254 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(246,113,27)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="639.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,254 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(221,34,27)" fg:x="0" fg:w="1254"/><text x="0.2500%" y="623.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (273 samples, 21.77%)</title><rect x="78.2297%" y="597" width="21.7703%" height="15" fill="rgb(246,109,6)" fg:x="981" fg:w="273"/><text x="78.4797%" y="607.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (273 samples, 21.77%)</title><rect x="78.2297%" y="581" width="21.7703%" height="15" fill="rgb(217,12,25)" fg:x="981" fg:w="273"/><text x="78.4797%" y="591.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (273 samples, 21.77%)</title><rect x="78.2297%" y="565" width="21.7703%" height="15" fill="rgb(250,195,5)" fg:x="981" fg:w="273"/><text x="78.4797%" y="575.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (34 samples, 2.71%)</title><rect x="97.2887%" y="549" width="2.7113%" height="15" fill="rgb(244,140,45)" fg:x="1220" fg:w="34"/><text x="97.5387%" y="559.50">en..</text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.8405%" y="533" width="0.1595%" height="15" fill="rgb(230,64,14)" fg:x="1252" fg:w="2"/><text x="100.0905%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.8405%" y="517" width="0.1595%" height="15" fill="rgb(206,27,27)" fg:x="1252" fg:w="2"/><text x="100.0905%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.8405%" y="501" width="0.1595%" height="15" fill="rgb(230,14,50)" fg:x="1252" fg:w="2"/><text x="100.0905%" y="511.50"></text></g></svg></svg>