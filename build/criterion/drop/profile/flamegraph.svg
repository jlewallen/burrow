<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1077.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1077.00"> </text><svg id="frames" x="10" width="1180" total_samples="1233"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1622%" y="677" width="0.0811%" height="15" fill="rgb(244,78,51)" fg:x="2" fg:w="1"/><text x="0.4122%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.2433%" y="677" width="0.2433%" height="15" fill="rgb(217,66,21)" fg:x="3" fg:w="3"/><text x="0.4933%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.3244%" y="661" width="0.1622%" height="15" fill="rgb(247,101,42)" fg:x="4" fg:w="2"/><text x="0.5744%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4866%" y="645" width="0.0811%" height="15" fill="rgb(227,81,39)" fg:x="6" fg:w="1"/><text x="0.7366%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.6488%" y="613" width="0.1622%" height="15" fill="rgb(220,223,44)" fg:x="8" fg:w="2"/><text x="0.8988%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8110%" y="597" width="0.0811%" height="15" fill="rgb(205,218,2)" fg:x="10" fg:w="1"/><text x="1.0610%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8921%" y="565" width="0.0811%" height="15" fill="rgb(212,207,28)" fg:x="11" fg:w="1"/><text x="1.1421%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9732%" y="565" width="0.0811%" height="15" fill="rgb(224,12,41)" fg:x="12" fg:w="1"/><text x="1.2232%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.41%)</title><rect x="0.8110%" y="613" width="0.4055%" height="15" fill="rgb(216,118,12)" fg:x="10" fg:w="5"/><text x="1.0610%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="0.8921%" y="597" width="0.3244%" height="15" fill="rgb(252,97,46)" fg:x="11" fg:w="4"/><text x="1.1421%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="0.8921%" y="581" width="0.3244%" height="15" fill="rgb(244,206,19)" fg:x="11" fg:w="4"/><text x="1.1421%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.0543%" y="565" width="0.1622%" height="15" fill="rgb(231,84,31)" fg:x="13" fg:w="2"/><text x="1.3043%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.0543%" y="549" width="0.1622%" height="15" fill="rgb(244,133,0)" fg:x="13" fg:w="2"/><text x="1.3043%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="0.6488%" y="629" width="0.6488%" height="15" fill="rgb(223,15,50)" fg:x="8" fg:w="8"/><text x="0.8988%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2165%" y="613" width="0.0811%" height="15" fill="rgb(250,118,49)" fg:x="15" fg:w="1"/><text x="1.4665%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="0.4866%" y="661" width="0.8921%" height="15" fill="rgb(248,25,38)" fg:x="6" fg:w="11"/><text x="0.7366%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (10 samples, 0.81%)</title><rect x="0.5677%" y="645" width="0.8110%" height="15" fill="rgb(215,70,14)" fg:x="7" fg:w="10"/><text x="0.8177%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="1.2976%" y="629" width="0.0811%" height="15" fill="rgb(215,28,15)" fg:x="16" fg:w="1"/><text x="1.5476%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2976%" y="613" width="0.0811%" height="15" fill="rgb(243,6,28)" fg:x="16" fg:w="1"/><text x="1.5476%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.38%)</title><rect x="0.0811%" y="693" width="1.3788%" height="15" fill="rgb(222,130,1)" fg:x="1" fg:w="17"/><text x="0.3311%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (12 samples, 0.97%)</title><rect x="0.4866%" y="677" width="0.9732%" height="15" fill="rgb(236,166,44)" fg:x="6" fg:w="12"/><text x="0.7366%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3788%" y="661" width="0.0811%" height="15" fill="rgb(221,108,14)" fg:x="17" fg:w="1"/><text x="1.6288%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.0276%" y="549" width="0.0811%" height="15" fill="rgb(252,3,45)" fg:x="25" fg:w="1"/><text x="2.2776%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="2.1898%" y="501" width="0.0811%" height="15" fill="rgb(237,68,30)" fg:x="27" fg:w="1"/><text x="2.4398%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.1898%" y="485" width="0.0811%" height="15" fill="rgb(211,79,22)" fg:x="27" fg:w="1"/><text x="2.4398%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="2.1087%" y="549" width="0.2433%" height="15" fill="rgb(252,185,21)" fg:x="26" fg:w="3"/><text x="2.3587%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="2.1087%" y="533" width="0.2433%" height="15" fill="rgb(225,189,26)" fg:x="26" fg:w="3"/><text x="2.3587%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.1898%" y="517" width="0.1622%" height="15" fill="rgb(241,30,40)" fg:x="27" fg:w="2"/><text x="2.4398%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="2.2709%" y="501" width="0.0811%" height="15" fill="rgb(235,215,44)" fg:x="28" fg:w="1"/><text x="2.5209%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.2709%" y="485" width="0.0811%" height="15" fill="rgb(205,8,29)" fg:x="28" fg:w="1"/><text x="2.5209%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="2.2709%" y="469" width="0.0811%" height="15" fill="rgb(241,137,42)" fg:x="28" fg:w="1"/><text x="2.5209%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.4331%" y="517" width="0.0811%" height="15" fill="rgb(237,155,2)" fg:x="30" fg:w="1"/><text x="2.6831%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.5142%" y="485" width="0.0811%" height="15" fill="rgb(245,29,42)" fg:x="31" fg:w="1"/><text x="2.7642%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="2.5142%" y="469" width="0.0811%" height="15" fill="rgb(234,101,35)" fg:x="31" fg:w="1"/><text x="2.7642%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (12 samples, 0.97%)</title><rect x="1.7032%" y="613" width="0.9732%" height="15" fill="rgb(228,64,37)" fg:x="21" fg:w="12"/><text x="1.9532%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (12 samples, 0.97%)</title><rect x="1.7032%" y="597" width="0.9732%" height="15" fill="rgb(217,214,36)" fg:x="21" fg:w="12"/><text x="1.9532%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.89%)</title><rect x="1.7843%" y="581" width="0.8921%" height="15" fill="rgb(243,70,3)" fg:x="22" fg:w="11"/><text x="2.0343%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="1.7843%" y="565" width="0.8921%" height="15" fill="rgb(253,158,52)" fg:x="22" fg:w="11"/><text x="2.0343%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="2.3520%" y="549" width="0.3244%" height="15" fill="rgb(234,111,54)" fg:x="29" fg:w="4"/><text x="2.6020%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="2.4331%" y="533" width="0.2433%" height="15" fill="rgb(217,70,32)" fg:x="30" fg:w="3"/><text x="2.6831%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="2.5142%" y="517" width="0.1622%" height="15" fill="rgb(234,18,33)" fg:x="31" fg:w="2"/><text x="2.7642%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="2.5142%" y="501" width="0.1622%" height="15" fill="rgb(234,12,49)" fg:x="31" fg:w="2"/><text x="2.7642%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.5953%" y="485" width="0.0811%" height="15" fill="rgb(236,10,21)" fg:x="32" fg:w="1"/><text x="2.8453%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.5953%" y="469" width="0.0811%" height="15" fill="rgb(248,182,45)" fg:x="32" fg:w="1"/><text x="2.8453%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.5953%" y="453" width="0.0811%" height="15" fill="rgb(217,95,36)" fg:x="32" fg:w="1"/><text x="2.8453%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="2.5953%" y="437" width="0.0811%" height="15" fill="rgb(212,110,31)" fg:x="32" fg:w="1"/><text x="2.8453%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.5953%" y="421" width="0.0811%" height="15" fill="rgb(206,32,53)" fg:x="32" fg:w="1"/><text x="2.8453%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.6764%" y="565" width="0.0811%" height="15" fill="rgb(246,141,37)" fg:x="33" fg:w="1"/><text x="2.9264%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.7575%" y="565" width="0.0811%" height="15" fill="rgb(219,16,7)" fg:x="34" fg:w="1"/><text x="3.0075%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.8386%" y="533" width="0.0811%" height="15" fill="rgb(230,205,45)" fg:x="35" fg:w="1"/><text x="3.0886%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.8386%" y="517" width="0.0811%" height="15" fill="rgb(231,43,49)" fg:x="35" fg:w="1"/><text x="3.0886%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (17 samples, 1.38%)</title><rect x="1.6221%" y="661" width="1.3788%" height="15" fill="rgb(212,106,34)" fg:x="20" fg:w="17"/><text x="1.8721%" y="671.50"></text></g><g><title>engine::internal::Entities::prepare_entity (17 samples, 1.38%)</title><rect x="1.6221%" y="645" width="1.3788%" height="15" fill="rgb(206,83,17)" fg:x="20" fg:w="17"/><text x="1.8721%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity (17 samples, 1.38%)</title><rect x="1.6221%" y="629" width="1.3788%" height="15" fill="rgb(244,154,49)" fg:x="20" fg:w="17"/><text x="1.8721%" y="639.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="2.6764%" y="613" width="0.3244%" height="15" fill="rgb(244,149,49)" fg:x="33" fg:w="4"/><text x="2.9264%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="2.6764%" y="597" width="0.3244%" height="15" fill="rgb(227,134,18)" fg:x="33" fg:w="4"/><text x="2.9264%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="2.6764%" y="581" width="0.3244%" height="15" fill="rgb(237,116,36)" fg:x="33" fg:w="4"/><text x="2.9264%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.8386%" y="565" width="0.1622%" height="15" fill="rgb(205,129,40)" fg:x="35" fg:w="2"/><text x="3.0886%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.8386%" y="549" width="0.1622%" height="15" fill="rgb(236,178,4)" fg:x="35" fg:w="2"/><text x="3.0886%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.9197%" y="533" width="0.0811%" height="15" fill="rgb(251,76,53)" fg:x="36" fg:w="1"/><text x="3.1697%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.9197%" y="517" width="0.0811%" height="15" fill="rgb(242,92,40)" fg:x="36" fg:w="1"/><text x="3.1697%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.9197%" y="501" width="0.0811%" height="15" fill="rgb(209,45,30)" fg:x="36" fg:w="1"/><text x="3.1697%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.9197%" y="485" width="0.0811%" height="15" fill="rgb(218,157,36)" fg:x="36" fg:w="1"/><text x="3.1697%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.9197%" y="469" width="0.0811%" height="15" fill="rgb(222,186,16)" fg:x="36" fg:w="1"/><text x="3.1697%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="2.9197%" y="453" width="0.0811%" height="15" fill="rgb(254,72,35)" fg:x="36" fg:w="1"/><text x="3.1697%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.0008%" y="661" width="0.0811%" height="15" fill="rgb(224,25,35)" fg:x="37" fg:w="1"/><text x="3.2508%" y="671.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.0819%" y="661" width="0.0811%" height="15" fill="rgb(206,135,52)" fg:x="38" fg:w="1"/><text x="3.3319%" y="671.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.24%)</title><rect x="3.1630%" y="661" width="0.2433%" height="15" fill="rgb(229,174,47)" fg:x="39" fg:w="3"/><text x="3.4130%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="3.1630%" y="645" width="0.2433%" height="15" fill="rgb(242,184,21)" fg:x="39" fg:w="3"/><text x="3.4130%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="3.2441%" y="629" width="0.1622%" height="15" fill="rgb(213,22,45)" fg:x="40" fg:w="2"/><text x="3.4941%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="3.3252%" y="613" width="0.0811%" height="15" fill="rgb(237,81,54)" fg:x="41" fg:w="1"/><text x="3.5752%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="3.3252%" y="597" width="0.0811%" height="15" fill="rgb(248,177,18)" fg:x="41" fg:w="1"/><text x="3.5752%" y="607.50"></text></g><g><title>engine::internal::EntityMap::new (1 samples, 0.08%)</title><rect x="3.4063%" y="661" width="0.0811%" height="15" fill="rgb(254,31,16)" fg:x="42" fg:w="1"/><text x="3.6563%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="3.5685%" y="613" width="0.0811%" height="15" fill="rgb(235,20,31)" fg:x="44" fg:w="1"/><text x="3.8185%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="3.5685%" y="597" width="0.0811%" height="15" fill="rgb(240,56,43)" fg:x="44" fg:w="1"/><text x="3.8185%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="3.5685%" y="581" width="0.0811%" height="15" fill="rgb(237,197,51)" fg:x="44" fg:w="1"/><text x="3.8185%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="3.5685%" y="565" width="0.0811%" height="15" fill="rgb(241,162,44)" fg:x="44" fg:w="1"/><text x="3.8185%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.5685%" y="549" width="0.0811%" height="15" fill="rgb(224,23,20)" fg:x="44" fg:w="1"/><text x="3.8185%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.5685%" y="533" width="0.0811%" height="15" fill="rgb(250,109,34)" fg:x="44" fg:w="1"/><text x="3.8185%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="3.5685%" y="517" width="0.0811%" height="15" fill="rgb(214,175,50)" fg:x="44" fg:w="1"/><text x="3.8185%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="3.5685%" y="501" width="0.0811%" height="15" fill="rgb(213,182,5)" fg:x="44" fg:w="1"/><text x="3.8185%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="3.5685%" y="485" width="0.0811%" height="15" fill="rgb(209,199,19)" fg:x="44" fg:w="1"/><text x="3.8185%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="3.5685%" y="469" width="0.0811%" height="15" fill="rgb(236,224,42)" fg:x="44" fg:w="1"/><text x="3.8185%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.5685%" y="453" width="0.0811%" height="15" fill="rgb(246,226,29)" fg:x="44" fg:w="1"/><text x="3.8185%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.5685%" y="437" width="0.0811%" height="15" fill="rgb(227,223,11)" fg:x="44" fg:w="1"/><text x="3.8185%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.5685%" y="421" width="0.0811%" height="15" fill="rgb(219,7,51)" fg:x="44" fg:w="1"/><text x="3.8185%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="3.5685%" y="405" width="0.0811%" height="15" fill="rgb(245,167,10)" fg:x="44" fg:w="1"/><text x="3.8185%" y="415.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="3.6496%" y="613" width="0.0811%" height="15" fill="rgb(237,224,16)" fg:x="45" fg:w="1"/><text x="3.8996%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8118%" y="597" width="0.0811%" height="15" fill="rgb(226,132,13)" fg:x="47" fg:w="1"/><text x="4.0618%" y="607.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="3.8929%" y="597" width="0.2433%" height="15" fill="rgb(214,140,3)" fg:x="48" fg:w="3"/><text x="4.1429%" y="607.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="3.9740%" y="581" width="0.1622%" height="15" fill="rgb(221,177,4)" fg:x="49" fg:w="2"/><text x="4.2240%" y="591.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="4.2174%" y="549" width="0.0811%" height="15" fill="rgb(238,139,3)" fg:x="52" fg:w="1"/><text x="4.4674%" y="559.50"></text></g><g><title>dlopen (28 samples, 2.27%)</title><rect x="4.1363%" y="597" width="2.2709%" height="15" fill="rgb(216,17,39)" fg:x="51" fg:w="28"/><text x="4.3863%" y="607.50">d..</text></g><g><title>_dl_catch_error (28 samples, 2.27%)</title><rect x="4.1363%" y="581" width="2.2709%" height="15" fill="rgb(238,120,9)" fg:x="51" fg:w="28"/><text x="4.3863%" y="591.50">_..</text></g><g><title>_dl_catch_exception (28 samples, 2.27%)</title><rect x="4.1363%" y="565" width="2.2709%" height="15" fill="rgb(244,92,53)" fg:x="51" fg:w="28"/><text x="4.3863%" y="575.50">_..</text></g><g><title>_dl_catch_exception (26 samples, 2.11%)</title><rect x="4.2985%" y="549" width="2.1087%" height="15" fill="rgb(224,148,33)" fg:x="53" fg:w="26"/><text x="4.5485%" y="559.50">_..</text></g><g><title>_dl_catch_exception (26 samples, 2.11%)</title><rect x="4.2985%" y="533" width="2.1087%" height="15" fill="rgb(243,6,36)" fg:x="53" fg:w="26"/><text x="4.5485%" y="543.50">_..</text></g><g><title>libloading::os::unix::Library::open (34 samples, 2.76%)</title><rect x="3.7307%" y="613" width="2.7575%" height="15" fill="rgb(230,102,11)" fg:x="46" fg:w="34"/><text x="3.9807%" y="623.50">li..</text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="6.4071%" y="597" width="0.0811%" height="15" fill="rgb(234,148,36)" fg:x="79" fg:w="1"/><text x="6.6571%" y="607.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="6.4071%" y="581" width="0.0811%" height="15" fill="rgb(251,153,25)" fg:x="79" fg:w="1"/><text x="6.6571%" y="591.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="6.4071%" y="565" width="0.0811%" height="15" fill="rgb(215,129,8)" fg:x="79" fg:w="1"/><text x="6.6571%" y="575.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="6.4071%" y="549" width="0.0811%" height="15" fill="rgb(224,128,35)" fg:x="79" fg:w="1"/><text x="6.6571%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.08%)</title><rect x="6.4071%" y="533" width="0.0811%" height="15" fill="rgb(237,56,52)" fg:x="79" fg:w="1"/><text x="6.6571%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.08%)</title><rect x="6.4071%" y="517" width="0.0811%" height="15" fill="rgb(234,213,19)" fg:x="79" fg:w="1"/><text x="6.6571%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.08%)</title><rect x="6.4071%" y="501" width="0.0811%" height="15" fill="rgb(252,82,23)" fg:x="79" fg:w="1"/><text x="6.6571%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1 samples, 0.08%)</title><rect x="6.4071%" y="485" width="0.0811%" height="15" fill="rgb(254,201,21)" fg:x="79" fg:w="1"/><text x="6.6571%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.08%)</title><rect x="6.4071%" y="469" width="0.0811%" height="15" fill="rgb(250,186,11)" fg:x="79" fg:w="1"/><text x="6.6571%" y="479.50"></text></g><g><title>engine::session::Session::initialize (38 samples, 3.08%)</title><rect x="3.4874%" y="661" width="3.0819%" height="15" fill="rgb(211,174,5)" fg:x="43" fg:w="38"/><text x="3.7374%" y="671.50">eng..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (38 samples, 3.08%)</title><rect x="3.4874%" y="645" width="3.0819%" height="15" fill="rgb(214,121,10)" fg:x="43" fg:w="38"/><text x="3.7374%" y="655.50">ker..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (37 samples, 3.00%)</title><rect x="3.5685%" y="629" width="3.0008%" height="15" fill="rgb(241,66,2)" fg:x="44" fg:w="37"/><text x="3.8185%" y="639.50">&lt;pl..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="6.4882%" y="613" width="0.0811%" height="15" fill="rgb(220,167,19)" fg:x="80" fg:w="1"/><text x="6.7382%" y="623.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="6.4882%" y="597" width="0.0811%" height="15" fill="rgb(231,54,50)" fg:x="80" fg:w="1"/><text x="6.7382%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (65 samples, 5.27%)</title><rect x="1.4599%" y="693" width="5.2717%" height="15" fill="rgb(239,217,53)" fg:x="18" fg:w="65"/><text x="1.7099%" y="703.50">&lt;engin..</text></g><g><title>engine::session::Session::new (65 samples, 5.27%)</title><rect x="1.4599%" y="677" width="5.2717%" height="15" fill="rgb(248,8,0)" fg:x="18" fg:w="65"/><text x="1.7099%" y="687.50">engine..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="6.5693%" y="661" width="0.1622%" height="15" fill="rgb(229,118,37)" fg:x="81" fg:w="2"/><text x="6.8193%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="6.5693%" y="645" width="0.1622%" height="15" fill="rgb(253,223,43)" fg:x="81" fg:w="2"/><text x="6.8193%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="6.5693%" y="629" width="0.1622%" height="15" fill="rgb(211,77,36)" fg:x="81" fg:w="2"/><text x="6.8193%" y="639.50"></text></g><g><title>&lt;plugins_core::moving::MovingPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="6.6504%" y="613" width="0.0811%" height="15" fill="rgb(219,3,53)" fg:x="82" fg:w="1"/><text x="6.9004%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="6.8127%" y="677" width="0.2433%" height="15" fill="rgb(244,45,42)" fg:x="84" fg:w="3"/><text x="7.0627%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="6.8127%" y="661" width="0.2433%" height="15" fill="rgb(225,95,27)" fg:x="84" fg:w="3"/><text x="7.0627%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.8938%" y="645" width="0.1622%" height="15" fill="rgb(207,74,8)" fg:x="85" fg:w="2"/><text x="7.1438%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="6.8938%" y="629" width="0.1622%" height="15" fill="rgb(243,63,36)" fg:x="85" fg:w="2"/><text x="7.1438%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="6.8938%" y="613" width="0.1622%" height="15" fill="rgb(211,180,12)" fg:x="85" fg:w="2"/><text x="7.1438%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="6.8938%" y="597" width="0.1622%" height="15" fill="rgb(254,166,49)" fg:x="85" fg:w="2"/><text x="7.1438%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="6.8938%" y="581" width="0.1622%" height="15" fill="rgb(205,19,0)" fg:x="85" fg:w="2"/><text x="7.1438%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="6.8938%" y="565" width="0.1622%" height="15" fill="rgb(224,172,32)" fg:x="85" fg:w="2"/><text x="7.1438%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="6.8938%" y="549" width="0.1622%" height="15" fill="rgb(254,136,30)" fg:x="85" fg:w="2"/><text x="7.1438%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="6.8938%" y="533" width="0.1622%" height="15" fill="rgb(246,19,35)" fg:x="85" fg:w="2"/><text x="7.1438%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="6.8938%" y="517" width="0.1622%" height="15" fill="rgb(219,24,36)" fg:x="85" fg:w="2"/><text x="7.1438%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="6.8938%" y="501" width="0.1622%" height="15" fill="rgb(251,55,1)" fg:x="85" fg:w="2"/><text x="7.1438%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="6.8938%" y="485" width="0.1622%" height="15" fill="rgb(218,117,39)" fg:x="85" fg:w="2"/><text x="7.1438%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="7.0560%" y="677" width="0.0811%" height="15" fill="rgb(248,169,11)" fg:x="87" fg:w="1"/><text x="7.3060%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="7.0560%" y="661" width="0.0811%" height="15" fill="rgb(244,40,44)" fg:x="87" fg:w="1"/><text x="7.3060%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="7.1371%" y="645" width="0.0811%" height="15" fill="rgb(234,62,37)" fg:x="88" fg:w="1"/><text x="7.3871%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="7.2182%" y="613" width="0.0811%" height="15" fill="rgb(207,117,42)" fg:x="89" fg:w="1"/><text x="7.4682%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.2182%" y="645" width="0.1622%" height="15" fill="rgb(213,43,2)" fg:x="89" fg:w="2"/><text x="7.4682%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="7.2182%" y="629" width="0.1622%" height="15" fill="rgb(244,202,51)" fg:x="89" fg:w="2"/><text x="7.4682%" y="639.50"></text></g><g><title>engine::session::Session::save_entity (1 samples, 0.08%)</title><rect x="7.2993%" y="613" width="0.0811%" height="15" fill="rgb(253,174,46)" fg:x="90" fg:w="1"/><text x="7.5493%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2993%" y="597" width="0.0811%" height="15" fill="rgb(251,23,1)" fg:x="90" fg:w="1"/><text x="7.5493%" y="607.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="7.3804%" y="645" width="0.0811%" height="15" fill="rgb(253,26,1)" fg:x="91" fg:w="1"/><text x="7.6304%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="7.3804%" y="629" width="0.0811%" height="15" fill="rgb(216,89,31)" fg:x="91" fg:w="1"/><text x="7.6304%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="7.3804%" y="613" width="0.0811%" height="15" fill="rgb(209,109,5)" fg:x="91" fg:w="1"/><text x="7.6304%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.3804%" y="597" width="0.0811%" height="15" fill="rgb(229,63,13)" fg:x="91" fg:w="1"/><text x="7.6304%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.3804%" y="581" width="0.0811%" height="15" fill="rgb(238,137,54)" fg:x="91" fg:w="1"/><text x="7.6304%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="7.4615%" y="581" width="0.4866%" height="15" fill="rgb(228,1,9)" fg:x="92" fg:w="6"/><text x="7.7115%" y="591.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="7.4615%" y="565" width="0.4866%" height="15" fill="rgb(249,120,48)" fg:x="92" fg:w="6"/><text x="7.7115%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.41%)</title><rect x="7.5426%" y="549" width="0.4055%" height="15" fill="rgb(209,72,36)" fg:x="93" fg:w="5"/><text x="7.7926%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.41%)</title><rect x="7.5426%" y="533" width="0.4055%" height="15" fill="rgb(247,98,49)" fg:x="93" fg:w="5"/><text x="7.7926%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="7.4615%" y="597" width="0.5677%" height="15" fill="rgb(233,75,36)" fg:x="92" fg:w="7"/><text x="7.7115%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9481%" y="581" width="0.0811%" height="15" fill="rgb(225,14,24)" fg:x="98" fg:w="1"/><text x="8.1981%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.4347%" y="533" width="0.0811%" height="15" fill="rgb(237,193,20)" fg:x="104" fg:w="1"/><text x="8.6847%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="8.1914%" y="581" width="0.4055%" height="15" fill="rgb(239,122,19)" fg:x="101" fg:w="5"/><text x="8.4414%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="8.2725%" y="565" width="0.3244%" height="15" fill="rgb(231,220,10)" fg:x="102" fg:w="4"/><text x="8.5225%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="8.3536%" y="549" width="0.2433%" height="15" fill="rgb(220,66,15)" fg:x="103" fg:w="3"/><text x="8.6036%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.5158%" y="533" width="0.0811%" height="15" fill="rgb(215,171,52)" fg:x="105" fg:w="1"/><text x="8.7658%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.6780%" y="565" width="0.0811%" height="15" fill="rgb(241,169,50)" fg:x="107" fg:w="1"/><text x="8.9280%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.7591%" y="533" width="0.0811%" height="15" fill="rgb(236,189,0)" fg:x="108" fg:w="1"/><text x="9.0091%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.7591%" y="517" width="0.0811%" height="15" fill="rgb(217,147,20)" fg:x="108" fg:w="1"/><text x="9.0091%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.7591%" y="501" width="0.0811%" height="15" fill="rgb(206,188,39)" fg:x="108" fg:w="1"/><text x="9.0091%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.7591%" y="485" width="0.0811%" height="15" fill="rgb(227,118,25)" fg:x="108" fg:w="1"/><text x="9.0091%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.8402%" y="533" width="0.0811%" height="15" fill="rgb(248,171,40)" fg:x="109" fg:w="1"/><text x="9.0902%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.8402%" y="517" width="0.0811%" height="15" fill="rgb(251,90,54)" fg:x="109" fg:w="1"/><text x="9.0902%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.8402%" y="501" width="0.0811%" height="15" fill="rgb(234,11,46)" fg:x="109" fg:w="1"/><text x="9.0902%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.8402%" y="485" width="0.0811%" height="15" fill="rgb(229,134,13)" fg:x="109" fg:w="1"/><text x="9.0902%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8402%" y="469" width="0.0811%" height="15" fill="rgb(223,129,3)" fg:x="109" fg:w="1"/><text x="9.0902%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="8.7591%" y="565" width="0.3244%" height="15" fill="rgb(221,124,13)" fg:x="108" fg:w="4"/><text x="9.0091%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="8.7591%" y="549" width="0.3244%" height="15" fill="rgb(234,3,18)" fg:x="108" fg:w="4"/><text x="9.0091%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.9213%" y="533" width="0.1622%" height="15" fill="rgb(249,199,20)" fg:x="110" fg:w="2"/><text x="9.1713%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.0024%" y="517" width="0.0811%" height="15" fill="rgb(224,134,6)" fg:x="111" fg:w="1"/><text x="9.2524%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.0835%" y="565" width="0.0811%" height="15" fill="rgb(254,83,26)" fg:x="112" fg:w="1"/><text x="9.3335%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.0835%" y="549" width="0.0811%" height="15" fill="rgb(217,88,9)" fg:x="112" fg:w="1"/><text x="9.3335%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.1646%" y="549" width="0.1622%" height="15" fill="rgb(225,73,2)" fg:x="113" fg:w="2"/><text x="9.4146%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.3268%" y="533" width="0.0811%" height="15" fill="rgb(226,44,39)" fg:x="115" fg:w="1"/><text x="9.5768%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.3268%" y="517" width="0.0811%" height="15" fill="rgb(228,53,17)" fg:x="115" fg:w="1"/><text x="9.5768%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.57%)</title><rect x="9.4079%" y="533" width="0.5677%" height="15" fill="rgb(212,27,27)" fg:x="116" fg:w="7"/><text x="9.6579%" y="543.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="9.5702%" y="517" width="0.4055%" height="15" fill="rgb(241,50,6)" fg:x="118" fg:w="5"/><text x="9.8202%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.8135%" y="501" width="0.1622%" height="15" fill="rgb(225,28,51)" fg:x="121" fg:w="2"/><text x="10.0635%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.8946%" y="485" width="0.0811%" height="15" fill="rgb(215,33,16)" fg:x="122" fg:w="1"/><text x="10.1446%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="9.1646%" y="565" width="0.8921%" height="15" fill="rgb(243,40,39)" fg:x="113" fg:w="11"/><text x="9.4146%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="9.3268%" y="549" width="0.7299%" height="15" fill="rgb(225,11,42)" fg:x="115" fg:w="9"/><text x="9.5768%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.9757%" y="533" width="0.0811%" height="15" fill="rgb(241,220,38)" fg:x="123" fg:w="1"/><text x="10.2257%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.9757%" y="517" width="0.0811%" height="15" fill="rgb(244,52,35)" fg:x="123" fg:w="1"/><text x="10.2257%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.70%)</title><rect x="8.5969%" y="581" width="1.7032%" height="15" fill="rgb(246,42,46)" fg:x="106" fg:w="21"/><text x="8.8469%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.0568%" y="565" width="0.2433%" height="15" fill="rgb(205,184,13)" fg:x="124" fg:w="3"/><text x="10.3068%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.1379%" y="549" width="0.1622%" height="15" fill="rgb(209,48,36)" fg:x="125" fg:w="2"/><text x="10.3879%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.43%)</title><rect x="8.0292%" y="597" width="2.4331%" height="15" fill="rgb(244,34,51)" fg:x="99" fg:w="30"/><text x="8.2792%" y="607.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.3001%" y="581" width="0.1622%" height="15" fill="rgb(221,107,33)" fg:x="127" fg:w="2"/><text x="10.5501%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.3001%" y="565" width="0.1622%" height="15" fill="rgb(224,203,12)" fg:x="127" fg:w="2"/><text x="10.5501%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.3001%" y="549" width="0.1622%" height="15" fill="rgb(230,215,18)" fg:x="127" fg:w="2"/><text x="10.5501%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.3812%" y="533" width="0.0811%" height="15" fill="rgb(206,185,35)" fg:x="128" fg:w="1"/><text x="10.6312%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (38 samples, 3.08%)</title><rect x="7.4615%" y="613" width="3.0819%" height="15" fill="rgb(228,140,34)" fg:x="92" fg:w="38"/><text x="7.7115%" y="623.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.4623%" y="597" width="0.0811%" height="15" fill="rgb(208,93,13)" fg:x="129" fg:w="1"/><text x="10.7123%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.4623%" y="581" width="0.0811%" height="15" fill="rgb(221,193,39)" fg:x="129" fg:w="1"/><text x="10.7123%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.4623%" y="565" width="0.0811%" height="15" fill="rgb(241,132,34)" fg:x="129" fg:w="1"/><text x="10.7123%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.4623%" y="549" width="0.0811%" height="15" fill="rgb(221,141,10)" fg:x="129" fg:w="1"/><text x="10.7123%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.4623%" y="533" width="0.0811%" height="15" fill="rgb(226,90,31)" fg:x="129" fg:w="1"/><text x="10.7123%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.4623%" y="517" width="0.0811%" height="15" fill="rgb(243,75,5)" fg:x="129" fg:w="1"/><text x="10.7123%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5434%" y="581" width="0.0811%" height="15" fill="rgb(227,156,21)" fg:x="130" fg:w="1"/><text x="10.7934%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="10.7056%" y="565" width="0.2433%" height="15" fill="rgb(250,195,8)" fg:x="132" fg:w="3"/><text x="10.9556%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9489%" y="565" width="0.0811%" height="15" fill="rgb(220,134,5)" fg:x="135" fg:w="1"/><text x="11.1989%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.1922%" y="549" width="0.0811%" height="15" fill="rgb(246,106,34)" fg:x="138" fg:w="1"/><text x="11.4422%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.1922%" y="533" width="0.0811%" height="15" fill="rgb(205,1,4)" fg:x="138" fg:w="1"/><text x="11.4422%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2733%" y="533" width="0.0811%" height="15" fill="rgb(224,151,29)" fg:x="139" fg:w="1"/><text x="11.5233%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.3544%" y="533" width="0.0811%" height="15" fill="rgb(251,196,0)" fg:x="140" fg:w="1"/><text x="11.6044%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="11.4355%" y="533" width="0.0811%" height="15" fill="rgb(212,127,0)" fg:x="141" fg:w="1"/><text x="11.6855%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.4355%" y="517" width="0.0811%" height="15" fill="rgb(236,71,53)" fg:x="141" fg:w="1"/><text x="11.6855%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.4355%" y="501" width="0.0811%" height="15" fill="rgb(227,99,0)" fg:x="141" fg:w="1"/><text x="11.6855%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="10.5434%" y="613" width="1.0543%" height="15" fill="rgb(239,89,21)" fg:x="130" fg:w="13"/><text x="10.7934%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="10.5434%" y="597" width="1.0543%" height="15" fill="rgb(243,122,19)" fg:x="130" fg:w="13"/><text x="10.7934%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="10.6245%" y="581" width="0.9732%" height="15" fill="rgb(229,192,45)" fg:x="131" fg:w="12"/><text x="10.8745%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="11.0300%" y="565" width="0.5677%" height="15" fill="rgb(235,165,35)" fg:x="136" fg:w="7"/><text x="11.2800%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="11.2733%" y="549" width="0.3244%" height="15" fill="rgb(253,202,0)" fg:x="139" fg:w="4"/><text x="11.5233%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.5166%" y="533" width="0.0811%" height="15" fill="rgb(235,51,20)" fg:x="142" fg:w="1"/><text x="11.7666%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.6788%" y="565" width="0.1622%" height="15" fill="rgb(218,95,46)" fg:x="144" fg:w="2"/><text x="11.9288%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.7599%" y="549" width="0.0811%" height="15" fill="rgb(212,81,10)" fg:x="145" fg:w="1"/><text x="12.0099%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.7599%" y="533" width="0.0811%" height="15" fill="rgb(240,59,0)" fg:x="145" fg:w="1"/><text x="12.0099%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="11.8410%" y="565" width="0.1622%" height="15" fill="rgb(212,191,42)" fg:x="146" fg:w="2"/><text x="12.0910%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="11.8410%" y="549" width="0.1622%" height="15" fill="rgb(233,140,3)" fg:x="146" fg:w="2"/><text x="12.0910%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9221%" y="533" width="0.0811%" height="15" fill="rgb(215,69,23)" fg:x="147" fg:w="1"/><text x="12.1721%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9221%" y="517" width="0.0811%" height="15" fill="rgb(240,202,20)" fg:x="147" fg:w="1"/><text x="12.1721%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.9221%" y="501" width="0.0811%" height="15" fill="rgb(209,146,50)" fg:x="147" fg:w="1"/><text x="12.1721%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0032%" y="533" width="0.0811%" height="15" fill="rgb(253,102,54)" fg:x="148" fg:w="1"/><text x="12.2532%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="12.0843%" y="517" width="0.0811%" height="15" fill="rgb(250,173,47)" fg:x="149" fg:w="1"/><text x="12.3343%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.3277%" y="501" width="0.1622%" height="15" fill="rgb(232,142,7)" fg:x="152" fg:w="2"/><text x="12.5777%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4088%" y="485" width="0.0811%" height="15" fill="rgb(230,157,47)" fg:x="153" fg:w="1"/><text x="12.6588%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4088%" y="469" width="0.0811%" height="15" fill="rgb(214,177,35)" fg:x="153" fg:w="1"/><text x="12.6588%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4088%" y="453" width="0.0811%" height="15" fill="rgb(234,119,46)" fg:x="153" fg:w="1"/><text x="12.6588%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4088%" y="437" width="0.0811%" height="15" fill="rgb(241,180,50)" fg:x="153" fg:w="1"/><text x="12.6588%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4088%" y="421" width="0.0811%" height="15" fill="rgb(221,54,25)" fg:x="153" fg:w="1"/><text x="12.6588%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (7 samples, 0.57%)</title><rect x="12.0032%" y="565" width="0.5677%" height="15" fill="rgb(209,157,44)" fg:x="148" fg:w="7"/><text x="12.2532%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.57%)</title><rect x="12.0032%" y="549" width="0.5677%" height="15" fill="rgb(246,115,41)" fg:x="148" fg:w="7"/><text x="12.2532%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="12.0843%" y="533" width="0.4866%" height="15" fill="rgb(229,86,1)" fg:x="149" fg:w="6"/><text x="12.3343%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (5 samples, 0.41%)</title><rect x="12.1655%" y="517" width="0.4055%" height="15" fill="rgb(240,108,53)" fg:x="150" fg:w="5"/><text x="12.4155%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4899%" y="501" width="0.0811%" height="15" fill="rgb(227,134,2)" fg:x="154" fg:w="1"/><text x="12.7399%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5710%" y="549" width="0.0811%" height="15" fill="rgb(213,129,25)" fg:x="155" fg:w="1"/><text x="12.8210%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8954%" y="517" width="0.0811%" height="15" fill="rgb(226,35,21)" fg:x="159" fg:w="1"/><text x="13.1454%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.9765%" y="485" width="0.0811%" height="15" fill="rgb(208,129,26)" fg:x="160" fg:w="1"/><text x="13.2265%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.9765%" y="469" width="0.0811%" height="15" fill="rgb(224,83,6)" fg:x="160" fg:w="1"/><text x="13.2265%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="12.9765%" y="517" width="0.1622%" height="15" fill="rgb(227,52,39)" fg:x="160" fg:w="2"/><text x="13.2265%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.9765%" y="501" width="0.1622%" height="15" fill="rgb(241,30,17)" fg:x="160" fg:w="2"/><text x="13.2265%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0576%" y="485" width="0.0811%" height="15" fill="rgb(246,186,42)" fg:x="161" fg:w="1"/><text x="13.3076%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (22 samples, 1.78%)</title><rect x="11.6788%" y="597" width="1.7843%" height="15" fill="rgb(221,169,15)" fg:x="144" fg:w="22"/><text x="11.9288%" y="607.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.78%)</title><rect x="11.6788%" y="581" width="1.7843%" height="15" fill="rgb(235,108,21)" fg:x="144" fg:w="22"/><text x="11.9288%" y="591.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.89%)</title><rect x="12.5710%" y="565" width="0.8921%" height="15" fill="rgb(219,148,30)" fg:x="155" fg:w="11"/><text x="12.8210%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (10 samples, 0.81%)</title><rect x="12.6521%" y="549" width="0.8110%" height="15" fill="rgb(220,109,5)" fg:x="156" fg:w="10"/><text x="12.9021%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="12.7332%" y="533" width="0.7299%" height="15" fill="rgb(213,203,48)" fg:x="157" fg:w="9"/><text x="12.9832%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="13.1387%" y="517" width="0.3244%" height="15" fill="rgb(244,71,33)" fg:x="162" fg:w="4"/><text x="13.3887%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="13.2198%" y="501" width="0.2433%" height="15" fill="rgb(209,23,2)" fg:x="163" fg:w="3"/><text x="13.4698%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.3009%" y="485" width="0.1622%" height="15" fill="rgb(219,97,7)" fg:x="164" fg:w="2"/><text x="13.5509%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.3820%" y="469" width="0.0811%" height="15" fill="rgb(216,161,23)" fg:x="165" fg:w="1"/><text x="13.6320%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3820%" y="453" width="0.0811%" height="15" fill="rgb(207,45,42)" fg:x="165" fg:w="1"/><text x="13.6320%" y="463.50"></text></g><g><title>kernel::compare::any_entity_changes (24 samples, 1.95%)</title><rect x="11.5977%" y="613" width="1.9465%" height="15" fill="rgb(241,61,4)" fg:x="143" fg:w="24"/><text x="11.8477%" y="623.50">k..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="13.4631%" y="597" width="0.0811%" height="15" fill="rgb(236,170,1)" fg:x="166" fg:w="1"/><text x="13.7131%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="13.4631%" y="581" width="0.0811%" height="15" fill="rgb(239,72,5)" fg:x="166" fg:w="1"/><text x="13.7131%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.4631%" y="565" width="0.0811%" height="15" fill="rgb(214,13,50)" fg:x="166" fg:w="1"/><text x="13.7131%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4631%" y="549" width="0.0811%" height="15" fill="rgb(224,88,9)" fg:x="166" fg:w="1"/><text x="13.7131%" y="559.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (78 samples, 6.33%)</title><rect x="7.4615%" y="645" width="6.3260%" height="15" fill="rgb(238,192,34)" fg:x="92" fg:w="78"/><text x="7.7115%" y="655.50">engine::..</text></g><g><title>engine::session::Session::check_for_changes (78 samples, 6.33%)</title><rect x="7.4615%" y="629" width="6.3260%" height="15" fill="rgb(217,203,50)" fg:x="92" fg:w="78"/><text x="7.7115%" y="639.50">engine::..</text></g><g><title>kernel::model::Entity::set_gid (3 samples, 0.24%)</title><rect x="13.5442%" y="613" width="0.2433%" height="15" fill="rgb(241,123,32)" fg:x="167" fg:w="3"/><text x="13.7942%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="13.5442%" y="597" width="0.2433%" height="15" fill="rgb(248,151,39)" fg:x="167" fg:w="3"/><text x="13.7942%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.7064%" y="581" width="0.0811%" height="15" fill="rgb(208,89,6)" fg:x="169" fg:w="1"/><text x="13.9564%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.7064%" y="565" width="0.0811%" height="15" fill="rgb(254,43,26)" fg:x="169" fg:w="1"/><text x="13.9564%" y="575.50"></text></g><g><title>engine::session::Session::flush (83 samples, 6.73%)</title><rect x="7.1371%" y="677" width="6.7315%" height="15" fill="rgb(216,158,13)" fg:x="88" fg:w="83"/><text x="7.3871%" y="687.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (83 samples, 6.73%)</title><rect x="7.1371%" y="661" width="6.7315%" height="15" fill="rgb(212,47,37)" fg:x="88" fg:w="83"/><text x="7.3871%" y="671.50">engine::s..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="13.7875%" y="645" width="0.0811%" height="15" fill="rgb(254,16,10)" fg:x="170" fg:w="1"/><text x="14.0375%" y="655.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="13.7875%" y="629" width="0.0811%" height="15" fill="rgb(223,228,16)" fg:x="170" fg:w="1"/><text x="14.0375%" y="639.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="13.7875%" y="613" width="0.0811%" height="15" fill="rgb(249,108,50)" fg:x="170" fg:w="1"/><text x="14.0375%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="13.7875%" y="597" width="0.0811%" height="15" fill="rgb(208,220,5)" fg:x="170" fg:w="1"/><text x="14.0375%" y="607.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="13.7875%" y="581" width="0.0811%" height="15" fill="rgb(217,89,48)" fg:x="170" fg:w="1"/><text x="14.0375%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="13.7875%" y="565" width="0.0811%" height="15" fill="rgb(212,113,41)" fg:x="170" fg:w="1"/><text x="14.0375%" y="575.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="13.7875%" y="549" width="0.0811%" height="15" fill="rgb(231,127,5)" fg:x="170" fg:w="1"/><text x="14.0375%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="13.8686%" y="645" width="0.0811%" height="15" fill="rgb(217,141,17)" fg:x="171" fg:w="1"/><text x="14.1186%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (3 samples, 0.24%)</title><rect x="13.9497%" y="645" width="0.2433%" height="15" fill="rgb(245,125,54)" fg:x="172" fg:w="3"/><text x="14.1997%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="14.1119%" y="629" width="0.0811%" height="15" fill="rgb(248,125,3)" fg:x="174" fg:w="1"/><text x="14.3619%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.1119%" y="613" width="0.0811%" height="15" fill="rgb(236,119,51)" fg:x="174" fg:w="1"/><text x="14.3619%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.1930%" y="645" width="0.0811%" height="15" fill="rgb(239,99,8)" fg:x="175" fg:w="1"/><text x="14.4430%" y="655.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="14.2741%" y="613" width="0.2433%" height="15" fill="rgb(224,228,4)" fg:x="176" fg:w="3"/><text x="14.5241%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.2741%" y="597" width="0.2433%" height="15" fill="rgb(220,131,45)" fg:x="176" fg:w="3"/><text x="14.5241%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="14.2741%" y="581" width="0.2433%" height="15" fill="rgb(215,62,5)" fg:x="176" fg:w="3"/><text x="14.5241%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="14.3552%" y="565" width="0.1622%" height="15" fill="rgb(253,12,24)" fg:x="177" fg:w="2"/><text x="14.6052%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.3552%" y="549" width="0.1622%" height="15" fill="rgb(248,120,50)" fg:x="177" fg:w="2"/><text x="14.6052%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.3552%" y="533" width="0.1622%" height="15" fill="rgb(245,194,10)" fg:x="177" fg:w="2"/><text x="14.6052%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.4363%" y="517" width="0.0811%" height="15" fill="rgb(241,149,38)" fg:x="178" fg:w="1"/><text x="14.6863%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4363%" y="501" width="0.0811%" height="15" fill="rgb(219,215,7)" fg:x="178" fg:w="1"/><text x="14.6863%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.41%)</title><rect x="14.2741%" y="645" width="0.4055%" height="15" fill="rgb(208,120,31)" fg:x="176" fg:w="5"/><text x="14.5241%" y="655.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.41%)</title><rect x="14.2741%" y="629" width="0.4055%" height="15" fill="rgb(244,30,8)" fg:x="176" fg:w="5"/><text x="14.5241%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="14.5174%" y="613" width="0.1622%" height="15" fill="rgb(238,35,44)" fg:x="179" fg:w="2"/><text x="14.7674%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.5174%" y="597" width="0.1622%" height="15" fill="rgb(243,218,37)" fg:x="179" fg:w="2"/><text x="14.7674%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="14.5174%" y="581" width="0.1622%" height="15" fill="rgb(218,169,10)" fg:x="179" fg:w="2"/><text x="14.7674%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.5174%" y="565" width="0.1622%" height="15" fill="rgb(221,144,10)" fg:x="179" fg:w="2"/><text x="14.7674%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.5174%" y="549" width="0.1622%" height="15" fill="rgb(226,41,38)" fg:x="179" fg:w="2"/><text x="14.7674%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.89%)</title><rect x="13.8686%" y="677" width="0.8921%" height="15" fill="rgb(228,3,1)" fg:x="171" fg:w="11"/><text x="14.1186%" y="687.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.89%)</title><rect x="13.8686%" y="661" width="0.8921%" height="15" fill="rgb(209,129,12)" fg:x="171" fg:w="11"/><text x="14.1186%" y="671.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="14.6796%" y="645" width="0.0811%" height="15" fill="rgb(213,136,33)" fg:x="181" fg:w="1"/><text x="14.9296%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="14.6796%" y="629" width="0.0811%" height="15" fill="rgb(209,181,29)" fg:x="181" fg:w="1"/><text x="14.9296%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="14.6796%" y="613" width="0.0811%" height="15" fill="rgb(234,173,18)" fg:x="181" fg:w="1"/><text x="14.9296%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="14.6796%" y="597" width="0.0811%" height="15" fill="rgb(227,73,47)" fg:x="181" fg:w="1"/><text x="14.9296%" y="607.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="14.6796%" y="581" width="0.0811%" height="15" fill="rgb(234,9,34)" fg:x="181" fg:w="1"/><text x="14.9296%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="14.7607%" y="645" width="0.0811%" height="15" fill="rgb(235,172,15)" fg:x="182" fg:w="1"/><text x="15.0107%" y="655.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="14.7607%" y="629" width="0.0811%" height="15" fill="rgb(245,61,2)" fg:x="182" fg:w="1"/><text x="15.0107%" y="639.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="14.7607%" y="613" width="0.0811%" height="15" fill="rgb(238,39,47)" fg:x="182" fg:w="1"/><text x="15.0107%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7607%" y="597" width="0.0811%" height="15" fill="rgb(234,37,24)" fg:x="182" fg:w="1"/><text x="15.0107%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7607%" y="581" width="0.0811%" height="15" fill="rgb(248,223,24)" fg:x="182" fg:w="1"/><text x="15.0107%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7607%" y="565" width="0.0811%" height="15" fill="rgb(223,12,15)" fg:x="182" fg:w="1"/><text x="15.0107%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.7607%" y="549" width="0.0811%" height="15" fill="rgb(249,6,3)" fg:x="182" fg:w="1"/><text x="15.0107%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.7607%" y="533" width="0.0811%" height="15" fill="rgb(237,105,33)" fg:x="182" fg:w="1"/><text x="15.0107%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.7607%" y="517" width="0.0811%" height="15" fill="rgb(252,208,35)" fg:x="182" fg:w="1"/><text x="15.0107%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7607%" y="501" width="0.0811%" height="15" fill="rgb(215,181,35)" fg:x="182" fg:w="1"/><text x="15.0107%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7607%" y="485" width="0.0811%" height="15" fill="rgb(246,212,3)" fg:x="182" fg:w="1"/><text x="15.0107%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.7607%" y="469" width="0.0811%" height="15" fill="rgb(247,156,24)" fg:x="182" fg:w="1"/><text x="15.0107%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="14.7607%" y="677" width="0.1622%" height="15" fill="rgb(248,9,31)" fg:x="182" fg:w="2"/><text x="15.0107%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="14.7607%" y="661" width="0.1622%" height="15" fill="rgb(234,26,45)" fg:x="182" fg:w="2"/><text x="15.0107%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="14.8418%" y="645" width="0.0811%" height="15" fill="rgb(249,11,32)" fg:x="183" fg:w="1"/><text x="15.0918%" y="655.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="14.8418%" y="629" width="0.0811%" height="15" fill="rgb(249,162,33)" fg:x="183" fg:w="1"/><text x="15.0918%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="14.8418%" y="613" width="0.0811%" height="15" fill="rgb(232,4,32)" fg:x="183" fg:w="1"/><text x="15.0918%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="14.9230%" y="645" width="0.0811%" height="15" fill="rgb(212,5,45)" fg:x="184" fg:w="1"/><text x="15.1730%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="14.9230%" y="677" width="0.1622%" height="15" fill="rgb(227,95,13)" fg:x="184" fg:w="2"/><text x="15.1730%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="14.9230%" y="661" width="0.1622%" height="15" fill="rgb(223,205,10)" fg:x="184" fg:w="2"/><text x="15.1730%" y="671.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="15.0041%" y="645" width="0.0811%" height="15" fill="rgb(222,178,8)" fg:x="185" fg:w="1"/><text x="15.2541%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0041%" y="629" width="0.0811%" height="15" fill="rgb(216,13,22)" fg:x="185" fg:w="1"/><text x="15.2541%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="15.0852%" y="645" width="0.0811%" height="15" fill="rgb(240,167,12)" fg:x="186" fg:w="1"/><text x="15.3352%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.0852%" y="629" width="0.0811%" height="15" fill="rgb(235,68,35)" fg:x="186" fg:w="1"/><text x="15.3352%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.0852%" y="613" width="0.0811%" height="15" fill="rgb(253,40,27)" fg:x="186" fg:w="1"/><text x="15.3352%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.0852%" y="597" width="0.0811%" height="15" fill="rgb(214,19,28)" fg:x="186" fg:w="1"/><text x="15.3352%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.0852%" y="581" width="0.0811%" height="15" fill="rgb(210,167,45)" fg:x="186" fg:w="1"/><text x="15.3352%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.0852%" y="565" width="0.0811%" height="15" fill="rgb(232,97,40)" fg:x="186" fg:w="1"/><text x="15.3352%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.0852%" y="549" width="0.0811%" height="15" fill="rgb(250,35,23)" fg:x="186" fg:w="1"/><text x="15.3352%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.0852%" y="533" width="0.0811%" height="15" fill="rgb(248,47,53)" fg:x="186" fg:w="1"/><text x="15.3352%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.0852%" y="517" width="0.0811%" height="15" fill="rgb(226,58,50)" fg:x="186" fg:w="1"/><text x="15.3352%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.0852%" y="501" width="0.0811%" height="15" fill="rgb(217,105,26)" fg:x="186" fg:w="1"/><text x="15.3352%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.0852%" y="485" width="0.0811%" height="15" fill="rgb(208,64,1)" fg:x="186" fg:w="1"/><text x="15.3352%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.0852%" y="469" width="0.0811%" height="15" fill="rgb(214,80,1)" fg:x="186" fg:w="1"/><text x="15.3352%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.0852%" y="453" width="0.0811%" height="15" fill="rgb(206,175,26)" fg:x="186" fg:w="1"/><text x="15.3352%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.0852%" y="437" width="0.0811%" height="15" fill="rgb(235,156,37)" fg:x="186" fg:w="1"/><text x="15.3352%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.0852%" y="421" width="0.0811%" height="15" fill="rgb(213,100,9)" fg:x="186" fg:w="1"/><text x="15.3352%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="15.0852%" y="661" width="0.1622%" height="15" fill="rgb(241,15,13)" fg:x="186" fg:w="2"/><text x="15.3352%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="15.1663%" y="645" width="0.0811%" height="15" fill="rgb(205,97,43)" fg:x="187" fg:w="1"/><text x="15.4163%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1663%" y="629" width="0.0811%" height="15" fill="rgb(216,106,32)" fg:x="187" fg:w="1"/><text x="15.4163%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1663%" y="613" width="0.0811%" height="15" fill="rgb(226,200,8)" fg:x="187" fg:w="1"/><text x="15.4163%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.1663%" y="597" width="0.0811%" height="15" fill="rgb(244,54,29)" fg:x="187" fg:w="1"/><text x="15.4163%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.1663%" y="581" width="0.0811%" height="15" fill="rgb(252,169,12)" fg:x="187" fg:w="1"/><text x="15.4163%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.1663%" y="565" width="0.0811%" height="15" fill="rgb(231,199,11)" fg:x="187" fg:w="1"/><text x="15.4163%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.1663%" y="549" width="0.0811%" height="15" fill="rgb(233,191,18)" fg:x="187" fg:w="1"/><text x="15.4163%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.1663%" y="533" width="0.0811%" height="15" fill="rgb(215,83,47)" fg:x="187" fg:w="1"/><text x="15.4163%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.1663%" y="517" width="0.0811%" height="15" fill="rgb(251,67,19)" fg:x="187" fg:w="1"/><text x="15.4163%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.1663%" y="501" width="0.0811%" height="15" fill="rgb(240,7,20)" fg:x="187" fg:w="1"/><text x="15.4163%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.1663%" y="485" width="0.0811%" height="15" fill="rgb(210,150,26)" fg:x="187" fg:w="1"/><text x="15.4163%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.1663%" y="469" width="0.0811%" height="15" fill="rgb(228,75,42)" fg:x="187" fg:w="1"/><text x="15.4163%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1663%" y="453" width="0.0811%" height="15" fill="rgb(237,134,48)" fg:x="187" fg:w="1"/><text x="15.4163%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2474%" y="629" width="0.0811%" height="15" fill="rgb(205,80,50)" fg:x="188" fg:w="1"/><text x="15.4974%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="15.3285%" y="613" width="0.0811%" height="15" fill="rgb(217,74,48)" fg:x="189" fg:w="1"/><text x="15.5785%" y="623.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="15.3285%" y="597" width="0.0811%" height="15" fill="rgb(205,82,50)" fg:x="189" fg:w="1"/><text x="15.5785%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3285%" y="581" width="0.0811%" height="15" fill="rgb(228,1,33)" fg:x="189" fg:w="1"/><text x="15.5785%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.4096%" y="565" width="0.0811%" height="15" fill="rgb(214,50,23)" fg:x="190" fg:w="1"/><text x="15.6596%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.4096%" y="549" width="0.0811%" height="15" fill="rgb(210,62,9)" fg:x="190" fg:w="1"/><text x="15.6596%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.4096%" y="533" width="0.0811%" height="15" fill="rgb(210,104,37)" fg:x="190" fg:w="1"/><text x="15.6596%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.4096%" y="517" width="0.0811%" height="15" fill="rgb(232,104,43)" fg:x="190" fg:w="1"/><text x="15.6596%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.4096%" y="501" width="0.0811%" height="15" fill="rgb(244,52,6)" fg:x="190" fg:w="1"/><text x="15.6596%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.4096%" y="485" width="0.0811%" height="15" fill="rgb(211,174,52)" fg:x="190" fg:w="1"/><text x="15.6596%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.4096%" y="469" width="0.0811%" height="15" fill="rgb(229,48,4)" fg:x="190" fg:w="1"/><text x="15.6596%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.4096%" y="453" width="0.0811%" height="15" fill="rgb(205,155,16)" fg:x="190" fg:w="1"/><text x="15.6596%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="15.4096%" y="613" width="0.1622%" height="15" fill="rgb(211,141,53)" fg:x="190" fg:w="2"/><text x="15.6596%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="15.4096%" y="597" width="0.1622%" height="15" fill="rgb(240,148,11)" fg:x="190" fg:w="2"/><text x="15.6596%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="15.4096%" y="581" width="0.1622%" height="15" fill="rgb(214,45,23)" fg:x="190" fg:w="2"/><text x="15.6596%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="15.4907%" y="565" width="0.0811%" height="15" fill="rgb(248,74,26)" fg:x="191" fg:w="1"/><text x="15.7407%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="15.4907%" y="549" width="0.0811%" height="15" fill="rgb(218,121,16)" fg:x="191" fg:w="1"/><text x="15.7407%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.4907%" y="533" width="0.0811%" height="15" fill="rgb(218,10,47)" fg:x="191" fg:w="1"/><text x="15.7407%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.4907%" y="517" width="0.0811%" height="15" fill="rgb(227,99,14)" fg:x="191" fg:w="1"/><text x="15.7407%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="15.5718%" y="597" width="0.0811%" height="15" fill="rgb(229,83,46)" fg:x="192" fg:w="1"/><text x="15.8218%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.5718%" y="581" width="0.0811%" height="15" fill="rgb(228,25,1)" fg:x="192" fg:w="1"/><text x="15.8218%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="15.6529%" y="581" width="0.0811%" height="15" fill="rgb(252,190,15)" fg:x="193" fg:w="1"/><text x="15.9029%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.6529%" y="565" width="0.0811%" height="15" fill="rgb(213,103,51)" fg:x="193" fg:w="1"/><text x="15.9029%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6529%" y="549" width="0.0811%" height="15" fill="rgb(220,38,44)" fg:x="193" fg:w="1"/><text x="15.9029%" y="559.50"></text></g><g><title>plugins_core::build::Build::leads_to (3 samples, 0.24%)</title><rect x="15.5718%" y="613" width="0.2433%" height="15" fill="rgb(210,45,26)" fg:x="192" fg:w="3"/><text x="15.8218%" y="623.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="15.6529%" y="597" width="0.1622%" height="15" fill="rgb(205,95,48)" fg:x="193" fg:w="2"/><text x="15.9029%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="15.7340%" y="581" width="0.0811%" height="15" fill="rgb(225,179,37)" fg:x="194" fg:w="1"/><text x="15.9840%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="15.7340%" y="565" width="0.0811%" height="15" fill="rgb(230,209,3)" fg:x="194" fg:w="1"/><text x="15.9840%" y="575.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7340%" y="549" width="0.0811%" height="15" fill="rgb(248,12,46)" fg:x="194" fg:w="1"/><text x="15.9840%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7340%" y="533" width="0.0811%" height="15" fill="rgb(234,18,0)" fg:x="194" fg:w="1"/><text x="15.9840%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7340%" y="517" width="0.0811%" height="15" fill="rgb(238,197,14)" fg:x="194" fg:w="1"/><text x="15.9840%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7340%" y="501" width="0.0811%" height="15" fill="rgb(251,162,48)" fg:x="194" fg:w="1"/><text x="15.9840%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.7340%" y="485" width="0.0811%" height="15" fill="rgb(237,73,42)" fg:x="194" fg:w="1"/><text x="15.9840%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.65%)</title><rect x="15.2474%" y="661" width="0.6488%" height="15" fill="rgb(211,108,8)" fg:x="188" fg:w="8"/><text x="15.4974%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="15.2474%" y="645" width="0.6488%" height="15" fill="rgb(213,45,22)" fg:x="188" fg:w="8"/><text x="15.4974%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.57%)</title><rect x="15.3285%" y="629" width="0.5677%" height="15" fill="rgb(252,154,5)" fg:x="189" fg:w="7"/><text x="15.5785%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="15.8151%" y="613" width="0.0811%" height="15" fill="rgb(221,79,52)" fg:x="195" fg:w="1"/><text x="16.0651%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8151%" y="597" width="0.0811%" height="15" fill="rgb(229,220,36)" fg:x="195" fg:w="1"/><text x="16.0651%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8151%" y="581" width="0.0811%" height="15" fill="rgb(211,17,16)" fg:x="195" fg:w="1"/><text x="16.0651%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8151%" y="565" width="0.0811%" height="15" fill="rgb(222,55,31)" fg:x="195" fg:w="1"/><text x="16.0651%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.8151%" y="549" width="0.0811%" height="15" fill="rgb(221,221,31)" fg:x="195" fg:w="1"/><text x="16.0651%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.8151%" y="533" width="0.0811%" height="15" fill="rgb(227,168,26)" fg:x="195" fg:w="1"/><text x="16.0651%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.8151%" y="517" width="0.0811%" height="15" fill="rgb(224,139,9)" fg:x="195" fg:w="1"/><text x="16.0651%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8151%" y="501" width="0.0811%" height="15" fill="rgb(254,172,0)" fg:x="195" fg:w="1"/><text x="16.0651%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.8151%" y="485" width="0.0811%" height="15" fill="rgb(235,203,1)" fg:x="195" fg:w="1"/><text x="16.0651%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.8151%" y="469" width="0.0811%" height="15" fill="rgb(216,205,24)" fg:x="195" fg:w="1"/><text x="16.0651%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="15.8962%" y="629" width="0.1622%" height="15" fill="rgb(233,24,6)" fg:x="196" fg:w="2"/><text x="16.1462%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.9773%" y="613" width="0.0811%" height="15" fill="rgb(244,110,9)" fg:x="197" fg:w="1"/><text x="16.2273%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.9773%" y="597" width="0.0811%" height="15" fill="rgb(239,222,42)" fg:x="197" fg:w="1"/><text x="16.2273%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.9773%" y="581" width="0.0811%" height="15" fill="rgb(218,145,13)" fg:x="197" fg:w="1"/><text x="16.2273%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.0584%" y="597" width="0.0811%" height="15" fill="rgb(207,69,11)" fg:x="198" fg:w="1"/><text x="16.3084%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.0584%" y="613" width="0.1622%" height="15" fill="rgb(220,223,22)" fg:x="198" fg:w="2"/><text x="16.3084%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1395%" y="597" width="0.0811%" height="15" fill="rgb(245,102,5)" fg:x="199" fg:w="1"/><text x="16.3895%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="16.1395%" y="581" width="0.0811%" height="15" fill="rgb(211,148,2)" fg:x="199" fg:w="1"/><text x="16.3895%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1395%" y="565" width="0.0811%" height="15" fill="rgb(241,13,44)" fg:x="199" fg:w="1"/><text x="16.3895%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="16.0584%" y="629" width="0.2433%" height="15" fill="rgb(219,137,21)" fg:x="198" fg:w="3"/><text x="16.3084%" y="639.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="16.2206%" y="613" width="0.0811%" height="15" fill="rgb(242,206,5)" fg:x="200" fg:w="1"/><text x="16.4706%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2206%" y="597" width="0.0811%" height="15" fill="rgb(217,114,22)" fg:x="200" fg:w="1"/><text x="16.4706%" y="607.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="16.3017%" y="629" width="0.0811%" height="15" fill="rgb(253,206,42)" fg:x="201" fg:w="1"/><text x="16.5517%" y="639.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="16.3828%" y="629" width="0.0811%" height="15" fill="rgb(236,102,18)" fg:x="202" fg:w="1"/><text x="16.6328%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="16.3828%" y="613" width="0.0811%" height="15" fill="rgb(208,59,49)" fg:x="202" fg:w="1"/><text x="16.6328%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="16.3828%" y="597" width="0.0811%" height="15" fill="rgb(215,194,28)" fg:x="202" fg:w="1"/><text x="16.6328%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="16.4639%" y="613" width="0.0811%" height="15" fill="rgb(243,207,11)" fg:x="203" fg:w="1"/><text x="16.7139%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="16.5450%" y="597" width="0.0811%" height="15" fill="rgb(254,179,35)" fg:x="204" fg:w="1"/><text x="16.7950%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.5450%" y="581" width="0.0811%" height="15" fill="rgb(235,97,3)" fg:x="204" fg:w="1"/><text x="16.7950%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="16.6261%" y="565" width="0.2433%" height="15" fill="rgb(215,155,33)" fg:x="205" fg:w="3"/><text x="16.8761%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.6261%" y="549" width="0.2433%" height="15" fill="rgb(223,128,12)" fg:x="205" fg:w="3"/><text x="16.8761%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.7072%" y="533" width="0.1622%" height="15" fill="rgb(208,157,18)" fg:x="206" fg:w="2"/><text x="16.9572%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.7883%" y="517" width="0.0811%" height="15" fill="rgb(249,70,54)" fg:x="207" fg:w="1"/><text x="17.0383%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.7883%" y="501" width="0.0811%" height="15" fill="rgb(244,118,24)" fg:x="207" fg:w="1"/><text x="17.0383%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.7883%" y="485" width="0.0811%" height="15" fill="rgb(211,54,0)" fg:x="207" fg:w="1"/><text x="17.0383%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.7883%" y="469" width="0.0811%" height="15" fill="rgb(245,137,45)" fg:x="207" fg:w="1"/><text x="17.0383%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.41%)</title><rect x="16.6261%" y="581" width="0.4055%" height="15" fill="rgb(232,154,31)" fg:x="205" fg:w="5"/><text x="16.8761%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.8694%" y="565" width="0.1622%" height="15" fill="rgb(253,6,39)" fg:x="208" fg:w="2"/><text x="17.1194%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.9505%" y="549" width="0.0811%" height="15" fill="rgb(234,183,24)" fg:x="209" fg:w="1"/><text x="17.2005%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.9505%" y="533" width="0.0811%" height="15" fill="rgb(252,84,40)" fg:x="209" fg:w="1"/><text x="17.2005%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.9505%" y="517" width="0.0811%" height="15" fill="rgb(224,65,2)" fg:x="209" fg:w="1"/><text x="17.2005%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.9505%" y="501" width="0.0811%" height="15" fill="rgb(229,38,24)" fg:x="209" fg:w="1"/><text x="17.2005%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.9505%" y="485" width="0.0811%" height="15" fill="rgb(218,131,50)" fg:x="209" fg:w="1"/><text x="17.2005%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="17.1127%" y="565" width="0.0811%" height="15" fill="rgb(233,106,18)" fg:x="211" fg:w="1"/><text x="17.3627%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.1938%" y="565" width="0.0811%" height="15" fill="rgb(220,216,11)" fg:x="212" fg:w="1"/><text x="17.4438%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.1938%" y="549" width="0.0811%" height="15" fill="rgb(251,100,45)" fg:x="212" fg:w="1"/><text x="17.4438%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.1938%" y="533" width="0.0811%" height="15" fill="rgb(235,143,32)" fg:x="212" fg:w="1"/><text x="17.4438%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.1938%" y="517" width="0.0811%" height="15" fill="rgb(248,124,34)" fg:x="212" fg:w="1"/><text x="17.4438%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="17.2749%" y="565" width="0.4055%" height="15" fill="rgb(225,221,4)" fg:x="213" fg:w="5"/><text x="17.5249%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.4371%" y="549" width="0.2433%" height="15" fill="rgb(242,27,43)" fg:x="215" fg:w="3"/><text x="17.6871%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="17.4371%" y="533" width="0.2433%" height="15" fill="rgb(227,54,8)" fg:x="215" fg:w="3"/><text x="17.6871%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.5182%" y="517" width="0.1622%" height="15" fill="rgb(253,139,49)" fg:x="216" fg:w="2"/><text x="17.7682%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.5994%" y="501" width="0.0811%" height="15" fill="rgb(231,26,43)" fg:x="217" fg:w="1"/><text x="17.8494%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.5994%" y="485" width="0.0811%" height="15" fill="rgb(207,121,39)" fg:x="217" fg:w="1"/><text x="17.8494%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.5994%" y="469" width="0.0811%" height="15" fill="rgb(223,101,35)" fg:x="217" fg:w="1"/><text x="17.8494%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="17.6805%" y="549" width="0.0811%" height="15" fill="rgb(232,87,23)" fg:x="218" fg:w="1"/><text x="17.9305%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.7616%" y="517" width="0.0811%" height="15" fill="rgb(225,180,29)" fg:x="219" fg:w="1"/><text x="18.0116%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="17.7616%" y="549" width="0.1622%" height="15" fill="rgb(225,25,17)" fg:x="219" fg:w="2"/><text x="18.0116%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="17.7616%" y="533" width="0.1622%" height="15" fill="rgb(223,8,52)" fg:x="219" fg:w="2"/><text x="18.0116%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.8427%" y="517" width="0.0811%" height="15" fill="rgb(246,42,21)" fg:x="220" fg:w="1"/><text x="18.0927%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.8427%" y="501" width="0.0811%" height="15" fill="rgb(205,64,43)" fg:x="220" fg:w="1"/><text x="18.0927%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.0049%" y="533" width="0.1622%" height="15" fill="rgb(221,160,13)" fg:x="222" fg:w="2"/><text x="18.2549%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.0860%" y="517" width="0.0811%" height="15" fill="rgb(239,58,35)" fg:x="223" fg:w="1"/><text x="18.3360%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.0860%" y="501" width="0.0811%" height="15" fill="rgb(251,26,40)" fg:x="223" fg:w="1"/><text x="18.3360%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.2482%" y="517" width="0.1622%" height="15" fill="rgb(247,0,4)" fg:x="225" fg:w="2"/><text x="18.4982%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="18.1671%" y="533" width="0.3244%" height="15" fill="rgb(218,130,10)" fg:x="224" fg:w="4"/><text x="18.4171%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.4104%" y="517" width="0.0811%" height="15" fill="rgb(239,32,7)" fg:x="227" fg:w="1"/><text x="18.6604%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.4104%" y="501" width="0.0811%" height="15" fill="rgb(210,192,24)" fg:x="227" fg:w="1"/><text x="18.6604%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.4104%" y="485" width="0.0811%" height="15" fill="rgb(226,212,17)" fg:x="227" fg:w="1"/><text x="18.6604%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="17.6805%" y="565" width="0.9732%" height="15" fill="rgb(219,201,28)" fg:x="218" fg:w="12"/><text x="17.9305%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="17.9238%" y="549" width="0.7299%" height="15" fill="rgb(235,207,41)" fg:x="221" fg:w="9"/><text x="18.1738%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.4915%" y="533" width="0.1622%" height="15" fill="rgb(241,95,54)" fg:x="228" fg:w="2"/><text x="18.7415%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.5726%" y="517" width="0.0811%" height="15" fill="rgb(248,12,23)" fg:x="229" fg:w="1"/><text x="18.8226%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.03%)</title><rect x="17.0316%" y="581" width="2.0276%" height="15" fill="rgb(228,173,4)" fg:x="210" fg:w="25"/><text x="17.2816%" y="591.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="18.6537%" y="565" width="0.4055%" height="15" fill="rgb(254,99,5)" fg:x="230" fg:w="5"/><text x="18.9037%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="18.7348%" y="549" width="0.3244%" height="15" fill="rgb(212,184,17)" fg:x="231" fg:w="4"/><text x="18.9848%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9781%" y="533" width="0.0811%" height="15" fill="rgb(252,174,1)" fg:x="234" fg:w="1"/><text x="19.2281%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.9781%" y="517" width="0.0811%" height="15" fill="rgb(241,118,51)" fg:x="234" fg:w="1"/><text x="19.2281%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.9781%" y="501" width="0.0811%" height="15" fill="rgb(227,94,47)" fg:x="234" fg:w="1"/><text x="19.2281%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.9781%" y="485" width="0.0811%" height="15" fill="rgb(229,104,2)" fg:x="234" fg:w="1"/><text x="19.2281%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.60%)</title><rect x="16.6261%" y="597" width="2.5953%" height="15" fill="rgb(219,28,31)" fg:x="205" fg:w="32"/><text x="16.8761%" y="607.50">&lt;s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.0592%" y="581" width="0.1622%" height="15" fill="rgb(233,109,36)" fg:x="235" fg:w="2"/><text x="19.3092%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.1403%" y="565" width="0.0811%" height="15" fill="rgb(246,88,11)" fg:x="236" fg:w="1"/><text x="19.3903%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.1403%" y="549" width="0.0811%" height="15" fill="rgb(209,212,17)" fg:x="236" fg:w="1"/><text x="19.3903%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.1403%" y="533" width="0.0811%" height="15" fill="rgb(243,59,29)" fg:x="236" fg:w="1"/><text x="19.3903%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.1403%" y="517" width="0.0811%" height="15" fill="rgb(244,205,48)" fg:x="236" fg:w="1"/><text x="19.3903%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1403%" y="501" width="0.0811%" height="15" fill="rgb(227,30,6)" fg:x="236" fg:w="1"/><text x="19.3903%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.2214%" y="565" width="0.1622%" height="15" fill="rgb(220,205,48)" fg:x="237" fg:w="2"/><text x="19.4714%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3836%" y="549" width="0.0811%" height="15" fill="rgb(250,94,14)" fg:x="239" fg:w="1"/><text x="19.6336%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4647%" y="533" width="0.0811%" height="15" fill="rgb(216,119,42)" fg:x="240" fg:w="1"/><text x="19.7147%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.7891%" y="517" width="0.0811%" height="15" fill="rgb(232,155,0)" fg:x="244" fg:w="1"/><text x="20.0391%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="19.2214%" y="597" width="0.7299%" height="15" fill="rgb(212,24,32)" fg:x="237" fg:w="9"/><text x="19.4714%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="19.2214%" y="581" width="0.7299%" height="15" fill="rgb(216,69,20)" fg:x="237" fg:w="9"/><text x="19.4714%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="19.3836%" y="565" width="0.5677%" height="15" fill="rgb(229,73,31)" fg:x="239" fg:w="7"/><text x="19.6336%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="19.4647%" y="549" width="0.4866%" height="15" fill="rgb(224,219,20)" fg:x="240" fg:w="6"/><text x="19.7147%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="19.5458%" y="533" width="0.4055%" height="15" fill="rgb(215,146,41)" fg:x="241" fg:w="5"/><text x="19.7958%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="19.8702%" y="517" width="0.0811%" height="15" fill="rgb(244,71,31)" fg:x="245" fg:w="1"/><text x="20.1202%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.8702%" y="501" width="0.0811%" height="15" fill="rgb(224,24,11)" fg:x="245" fg:w="1"/><text x="20.1202%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="20.2758%" y="549" width="0.2433%" height="15" fill="rgb(229,76,15)" fg:x="250" fg:w="3"/><text x="20.5258%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.5191%" y="549" width="0.0811%" height="15" fill="rgb(209,93,2)" fg:x="253" fg:w="1"/><text x="20.7691%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="20.5191%" y="533" width="0.0811%" height="15" fill="rgb(216,200,50)" fg:x="253" fg:w="1"/><text x="20.7691%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="20.6002%" y="549" width="0.0811%" height="15" fill="rgb(211,67,34)" fg:x="254" fg:w="1"/><text x="20.8502%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.6002%" y="533" width="0.0811%" height="15" fill="rgb(225,87,47)" fg:x="254" fg:w="1"/><text x="20.8502%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6002%" y="517" width="0.0811%" height="15" fill="rgb(217,185,16)" fg:x="254" fg:w="1"/><text x="20.8502%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6002%" y="501" width="0.0811%" height="15" fill="rgb(205,0,0)" fg:x="254" fg:w="1"/><text x="20.8502%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6002%" y="485" width="0.0811%" height="15" fill="rgb(207,116,45)" fg:x="254" fg:w="1"/><text x="20.8502%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6813%" y="517" width="0.0811%" height="15" fill="rgb(221,156,26)" fg:x="255" fg:w="1"/><text x="20.9313%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.8435%" y="469" width="0.1622%" height="15" fill="rgb(213,140,4)" fg:x="257" fg:w="2"/><text x="21.0935%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="20.7624%" y="485" width="0.3244%" height="15" fill="rgb(231,224,15)" fg:x="256" fg:w="4"/><text x="21.0124%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="21.0057%" y="469" width="0.0811%" height="15" fill="rgb(244,76,20)" fg:x="259" fg:w="1"/><text x="21.2557%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0868%" y="469" width="0.0811%" height="15" fill="rgb(238,117,7)" fg:x="260" fg:w="1"/><text x="21.3368%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0868%" y="453" width="0.0811%" height="15" fill="rgb(235,1,10)" fg:x="260" fg:w="1"/><text x="21.3368%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0868%" y="437" width="0.0811%" height="15" fill="rgb(216,165,6)" fg:x="260" fg:w="1"/><text x="21.3368%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1679%" y="437" width="0.0811%" height="15" fill="rgb(246,91,35)" fg:x="261" fg:w="1"/><text x="21.4179%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1679%" y="421" width="0.0811%" height="15" fill="rgb(228,96,24)" fg:x="261" fg:w="1"/><text x="21.4179%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1679%" y="405" width="0.0811%" height="15" fill="rgb(254,217,53)" fg:x="261" fg:w="1"/><text x="21.4179%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="21.0868%" y="485" width="0.2433%" height="15" fill="rgb(209,60,0)" fg:x="260" fg:w="3"/><text x="21.3368%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="21.1679%" y="469" width="0.1622%" height="15" fill="rgb(250,93,26)" fg:x="261" fg:w="2"/><text x="21.4179%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.1679%" y="453" width="0.1622%" height="15" fill="rgb(211,9,40)" fg:x="261" fg:w="2"/><text x="21.4179%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.2490%" y="437" width="0.0811%" height="15" fill="rgb(242,57,20)" fg:x="262" fg:w="1"/><text x="21.4990%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (9 samples, 0.73%)</title><rect x="20.6813%" y="549" width="0.7299%" height="15" fill="rgb(248,85,48)" fg:x="255" fg:w="9"/><text x="20.9313%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="20.6813%" y="533" width="0.7299%" height="15" fill="rgb(212,117,2)" fg:x="255" fg:w="9"/><text x="20.9313%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="20.7624%" y="517" width="0.6488%" height="15" fill="rgb(243,19,3)" fg:x="256" fg:w="8"/><text x="21.0124%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (8 samples, 0.65%)</title><rect x="20.7624%" y="501" width="0.6488%" height="15" fill="rgb(232,217,24)" fg:x="256" fg:w="8"/><text x="21.0124%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.3301%" y="485" width="0.0811%" height="15" fill="rgb(224,175,40)" fg:x="263" fg:w="1"/><text x="21.5801%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.4923%" y="533" width="0.0811%" height="15" fill="rgb(212,162,32)" fg:x="265" fg:w="1"/><text x="21.7423%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.4923%" y="517" width="0.0811%" height="15" fill="rgb(215,9,4)" fg:x="265" fg:w="1"/><text x="21.7423%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6545%" y="501" width="0.0811%" height="15" fill="rgb(242,42,7)" fg:x="267" fg:w="1"/><text x="21.9045%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="21.7356%" y="501" width="0.1622%" height="15" fill="rgb(242,184,45)" fg:x="268" fg:w="2"/><text x="21.9856%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="21.7356%" y="485" width="0.1622%" height="15" fill="rgb(228,111,51)" fg:x="268" fg:w="2"/><text x="21.9856%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="21.7356%" y="469" width="0.1622%" height="15" fill="rgb(236,147,17)" fg:x="268" fg:w="2"/><text x="21.9856%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.7356%" y="453" width="0.1622%" height="15" fill="rgb(210,75,22)" fg:x="268" fg:w="2"/><text x="21.9856%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.7356%" y="437" width="0.1622%" height="15" fill="rgb(217,159,45)" fg:x="268" fg:w="2"/><text x="21.9856%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.8167%" y="421" width="0.0811%" height="15" fill="rgb(245,165,53)" fg:x="269" fg:w="1"/><text x="22.0667%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.8978%" y="485" width="0.0811%" height="15" fill="rgb(251,190,50)" fg:x="270" fg:w="1"/><text x="22.1478%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="21.5734%" y="517" width="0.4866%" height="15" fill="rgb(208,203,29)" fg:x="266" fg:w="6"/><text x="21.8234%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="21.8978%" y="501" width="0.1622%" height="15" fill="rgb(207,209,35)" fg:x="270" fg:w="2"/><text x="22.1478%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.9789%" y="485" width="0.0811%" height="15" fill="rgb(230,144,49)" fg:x="271" fg:w="1"/><text x="22.2289%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9789%" y="469" width="0.0811%" height="15" fill="rgb(229,31,6)" fg:x="271" fg:w="1"/><text x="22.2289%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (25 samples, 2.03%)</title><rect x="20.1135%" y="581" width="2.0276%" height="15" fill="rgb(251,129,24)" fg:x="248" fg:w="25"/><text x="20.3635%" y="591.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.03%)</title><rect x="20.1135%" y="565" width="2.0276%" height="15" fill="rgb(235,105,15)" fg:x="248" fg:w="25"/><text x="20.3635%" y="575.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.73%)</title><rect x="21.4112%" y="549" width="0.7299%" height="15" fill="rgb(216,52,43)" fg:x="264" fg:w="9"/><text x="21.6612%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (7 samples, 0.57%)</title><rect x="21.5734%" y="533" width="0.5677%" height="15" fill="rgb(238,144,41)" fg:x="266" fg:w="7"/><text x="21.8234%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="22.0600%" y="517" width="0.0811%" height="15" fill="rgb(243,63,9)" fg:x="272" fg:w="1"/><text x="22.3100%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.0600%" y="501" width="0.0811%" height="15" fill="rgb(246,208,1)" fg:x="272" fg:w="1"/><text x="22.3100%" y="511.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (71 samples, 5.76%)</title><rect x="16.4639%" y="629" width="5.7583%" height="15" fill="rgb(233,182,18)" fg:x="203" fg:w="71"/><text x="16.7139%" y="639.50">engine:..</text></g><g><title>engine::session::Session::check_for_changes (70 samples, 5.68%)</title><rect x="16.5450%" y="613" width="5.6772%" height="15" fill="rgb(242,224,8)" fg:x="204" fg:w="70"/><text x="16.7950%" y="623.50">engine:..</text></g><g><title>kernel::compare::any_entity_changes (28 samples, 2.27%)</title><rect x="19.9513%" y="597" width="2.2709%" height="15" fill="rgb(243,54,37)" fg:x="246" fg:w="28"/><text x="20.2013%" y="607.50">k..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="22.1411%" y="581" width="0.0811%" height="15" fill="rgb(233,192,12)" fg:x="273" fg:w="1"/><text x="22.3911%" y="591.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="22.1411%" y="565" width="0.0811%" height="15" fill="rgb(251,192,53)" fg:x="273" fg:w="1"/><text x="22.3911%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.1411%" y="549" width="0.0811%" height="15" fill="rgb(246,141,26)" fg:x="273" fg:w="1"/><text x="22.3911%" y="559.50"></text></g><g><title>engine::session::Session::flush (79 samples, 6.41%)</title><rect x="15.8962%" y="661" width="6.4071%" height="15" fill="rgb(239,195,19)" fg:x="196" fg:w="79"/><text x="16.1462%" y="671.50">engine::..</text></g><g><title>engine::session::Session::save_entity_changes (79 samples, 6.41%)</title><rect x="15.8962%" y="645" width="6.4071%" height="15" fill="rgb(241,16,39)" fg:x="196" fg:w="79"/><text x="16.1462%" y="655.50">engine::..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="22.2222%" y="629" width="0.0811%" height="15" fill="rgb(223,13,53)" fg:x="274" fg:w="1"/><text x="22.4722%" y="639.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="22.2222%" y="613" width="0.0811%" height="15" fill="rgb(214,227,0)" fg:x="274" fg:w="1"/><text x="22.4722%" y="623.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="22.2222%" y="597" width="0.0811%" height="15" fill="rgb(228,103,26)" fg:x="274" fg:w="1"/><text x="22.4722%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="22.2222%" y="581" width="0.0811%" height="15" fill="rgb(254,177,53)" fg:x="274" fg:w="1"/><text x="22.4722%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="22.2222%" y="565" width="0.0811%" height="15" fill="rgb(208,201,34)" fg:x="274" fg:w="1"/><text x="22.4722%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="22.2222%" y="549" width="0.0811%" height="15" fill="rgb(212,39,5)" fg:x="274" fg:w="1"/><text x="22.4722%" y="559.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="22.2222%" y="533" width="0.0811%" height="15" fill="rgb(246,117,3)" fg:x="274" fg:w="1"/><text x="22.4722%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="22.3033%" y="661" width="0.0811%" height="15" fill="rgb(244,118,39)" fg:x="275" fg:w="1"/><text x="22.5533%" y="671.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="22.3033%" y="645" width="0.0811%" height="15" fill="rgb(241,64,10)" fg:x="275" fg:w="1"/><text x="22.5533%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.3033%" y="629" width="0.0811%" height="15" fill="rgb(229,39,44)" fg:x="275" fg:w="1"/><text x="22.5533%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.3033%" y="613" width="0.0811%" height="15" fill="rgb(230,226,3)" fg:x="275" fg:w="1"/><text x="22.5533%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="22.3033%" y="597" width="0.0811%" height="15" fill="rgb(222,13,42)" fg:x="275" fg:w="1"/><text x="22.5533%" y="607.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="22.3844%" y="613" width="0.1622%" height="15" fill="rgb(247,180,54)" fg:x="276" fg:w="2"/><text x="22.6344%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="22.3844%" y="597" width="0.1622%" height="15" fill="rgb(205,96,16)" fg:x="276" fg:w="2"/><text x="22.6344%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4655%" y="581" width="0.0811%" height="15" fill="rgb(205,100,21)" fg:x="277" fg:w="1"/><text x="22.7155%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4655%" y="565" width="0.0811%" height="15" fill="rgb(248,51,4)" fg:x="277" fg:w="1"/><text x="22.7155%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4655%" y="549" width="0.0811%" height="15" fill="rgb(217,197,30)" fg:x="277" fg:w="1"/><text x="22.7155%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.4655%" y="533" width="0.0811%" height="15" fill="rgb(240,179,40)" fg:x="277" fg:w="1"/><text x="22.7155%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.4655%" y="517" width="0.0811%" height="15" fill="rgb(212,185,35)" fg:x="277" fg:w="1"/><text x="22.7155%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.4655%" y="501" width="0.0811%" height="15" fill="rgb(251,222,31)" fg:x="277" fg:w="1"/><text x="22.7155%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4655%" y="485" width="0.0811%" height="15" fill="rgb(208,140,36)" fg:x="277" fg:w="1"/><text x="22.7155%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4655%" y="469" width="0.0811%" height="15" fill="rgb(220,148,1)" fg:x="277" fg:w="1"/><text x="22.7155%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.4655%" y="453" width="0.0811%" height="15" fill="rgb(254,4,28)" fg:x="277" fg:w="1"/><text x="22.7155%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.4655%" y="437" width="0.0811%" height="15" fill="rgb(222,185,44)" fg:x="277" fg:w="1"/><text x="22.7155%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.4655%" y="421" width="0.0811%" height="15" fill="rgb(215,74,39)" fg:x="277" fg:w="1"/><text x="22.7155%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.4655%" y="405" width="0.0811%" height="15" fill="rgb(247,86,4)" fg:x="277" fg:w="1"/><text x="22.7155%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4655%" y="389" width="0.0811%" height="15" fill="rgb(231,105,32)" fg:x="277" fg:w="1"/><text x="22.7155%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="22.3844%" y="629" width="0.2433%" height="15" fill="rgb(222,65,35)" fg:x="276" fg:w="3"/><text x="22.6344%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="22.5466%" y="613" width="0.0811%" height="15" fill="rgb(218,145,35)" fg:x="278" fg:w="1"/><text x="22.7966%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.5466%" y="597" width="0.0811%" height="15" fill="rgb(208,7,15)" fg:x="278" fg:w="1"/><text x="22.7966%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.5466%" y="581" width="0.0811%" height="15" fill="rgb(209,83,13)" fg:x="278" fg:w="1"/><text x="22.7966%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.5466%" y="565" width="0.0811%" height="15" fill="rgb(218,3,10)" fg:x="278" fg:w="1"/><text x="22.7966%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.5466%" y="549" width="0.0811%" height="15" fill="rgb(211,219,4)" fg:x="278" fg:w="1"/><text x="22.7966%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.5466%" y="533" width="0.0811%" height="15" fill="rgb(228,194,12)" fg:x="278" fg:w="1"/><text x="22.7966%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.5466%" y="517" width="0.0811%" height="15" fill="rgb(210,175,7)" fg:x="278" fg:w="1"/><text x="22.7966%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.5466%" y="501" width="0.0811%" height="15" fill="rgb(243,132,6)" fg:x="278" fg:w="1"/><text x="22.7966%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.5466%" y="485" width="0.0811%" height="15" fill="rgb(207,72,18)" fg:x="278" fg:w="1"/><text x="22.7966%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="22.5466%" y="469" width="0.0811%" height="15" fill="rgb(236,1,18)" fg:x="278" fg:w="1"/><text x="22.7966%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.5466%" y="453" width="0.0811%" height="15" fill="rgb(227,0,18)" fg:x="278" fg:w="1"/><text x="22.7966%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.5466%" y="437" width="0.0811%" height="15" fill="rgb(247,37,5)" fg:x="278" fg:w="1"/><text x="22.7966%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.30%)</title><rect x="22.3844%" y="645" width="1.2976%" height="15" fill="rgb(237,179,24)" fg:x="276" fg:w="16"/><text x="22.6344%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (13 samples, 1.05%)</title><rect x="22.6277%" y="629" width="1.0543%" height="15" fill="rgb(226,53,20)" fg:x="279" fg:w="13"/><text x="22.8777%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (13 samples, 1.05%)</title><rect x="22.6277%" y="613" width="1.0543%" height="15" fill="rgb(247,75,7)" fg:x="279" fg:w="13"/><text x="22.8777%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 1.05%)</title><rect x="22.6277%" y="597" width="1.0543%" height="15" fill="rgb(233,96,12)" fg:x="279" fg:w="13"/><text x="22.8777%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 1.05%)</title><rect x="22.6277%" y="581" width="1.0543%" height="15" fill="rgb(224,125,0)" fg:x="279" fg:w="13"/><text x="22.8777%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 1.05%)</title><rect x="22.6277%" y="565" width="1.0543%" height="15" fill="rgb(224,92,25)" fg:x="279" fg:w="13"/><text x="22.8777%" y="575.50"></text></g><g><title>__libc_malloc (13 samples, 1.05%)</title><rect x="22.6277%" y="549" width="1.0543%" height="15" fill="rgb(224,42,24)" fg:x="279" fg:w="13"/><text x="22.8777%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="23.6821%" y="629" width="0.0811%" height="15" fill="rgb(234,132,49)" fg:x="292" fg:w="1"/><text x="23.9321%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="23.6821%" y="613" width="0.0811%" height="15" fill="rgb(248,100,35)" fg:x="292" fg:w="1"/><text x="23.9321%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6821%" y="597" width="0.0811%" height="15" fill="rgb(239,94,40)" fg:x="292" fg:w="1"/><text x="23.9321%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7632%" y="565" width="0.0811%" height="15" fill="rgb(235,139,28)" fg:x="293" fg:w="1"/><text x="24.0132%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="23.7632%" y="597" width="0.1622%" height="15" fill="rgb(217,144,7)" fg:x="293" fg:w="2"/><text x="24.0132%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.7632%" y="581" width="0.1622%" height="15" fill="rgb(227,55,4)" fg:x="293" fg:w="2"/><text x="24.0132%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.8443%" y="565" width="0.0811%" height="15" fill="rgb(252,82,54)" fg:x="294" fg:w="1"/><text x="24.0943%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="23.8443%" y="549" width="0.0811%" height="15" fill="rgb(245,172,4)" fg:x="294" fg:w="1"/><text x="24.0943%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.8443%" y="533" width="0.0811%" height="15" fill="rgb(207,26,27)" fg:x="294" fg:w="1"/><text x="24.0943%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8443%" y="517" width="0.0811%" height="15" fill="rgb(252,98,18)" fg:x="294" fg:w="1"/><text x="24.0943%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9254%" y="565" width="0.0811%" height="15" fill="rgb(244,8,26)" fg:x="295" fg:w="1"/><text x="24.1754%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9254%" y="549" width="0.0811%" height="15" fill="rgb(237,173,45)" fg:x="295" fg:w="1"/><text x="24.1754%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9254%" y="533" width="0.0811%" height="15" fill="rgb(208,213,49)" fg:x="295" fg:w="1"/><text x="24.1754%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.70%)</title><rect x="22.3844%" y="661" width="1.7032%" height="15" fill="rgb(212,122,37)" fg:x="276" fg:w="21"/><text x="22.6344%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.41%)</title><rect x="23.6821%" y="645" width="0.4055%" height="15" fill="rgb(213,80,17)" fg:x="292" fg:w="5"/><text x="23.9321%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="23.7632%" y="629" width="0.3244%" height="15" fill="rgb(206,210,43)" fg:x="293" fg:w="4"/><text x="24.0132%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.32%)</title><rect x="23.7632%" y="613" width="0.3244%" height="15" fill="rgb(229,214,3)" fg:x="293" fg:w="4"/><text x="24.0132%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="23.9254%" y="597" width="0.1622%" height="15" fill="rgb(235,213,29)" fg:x="295" fg:w="2"/><text x="24.1754%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.9254%" y="581" width="0.1622%" height="15" fill="rgb(248,135,26)" fg:x="295" fg:w="2"/><text x="24.1754%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="24.0065%" y="565" width="0.0811%" height="15" fill="rgb(242,188,12)" fg:x="296" fg:w="1"/><text x="24.2565%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0876%" y="613" width="0.0811%" height="15" fill="rgb(245,38,12)" fg:x="297" fg:w="1"/><text x="24.3376%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0876%" y="597" width="0.0811%" height="15" fill="rgb(218,42,13)" fg:x="297" fg:w="1"/><text x="24.3376%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0876%" y="581" width="0.0811%" height="15" fill="rgb(238,132,49)" fg:x="297" fg:w="1"/><text x="24.3376%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.0876%" y="565" width="0.0811%" height="15" fill="rgb(209,196,19)" fg:x="297" fg:w="1"/><text x="24.3376%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.0876%" y="549" width="0.0811%" height="15" fill="rgb(244,131,22)" fg:x="297" fg:w="1"/><text x="24.3376%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.0876%" y="533" width="0.0811%" height="15" fill="rgb(223,18,34)" fg:x="297" fg:w="1"/><text x="24.3376%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.0876%" y="517" width="0.0811%" height="15" fill="rgb(252,124,54)" fg:x="297" fg:w="1"/><text x="24.3376%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.0876%" y="501" width="0.0811%" height="15" fill="rgb(229,106,42)" fg:x="297" fg:w="1"/><text x="24.3376%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="24.0876%" y="661" width="0.1622%" height="15" fill="rgb(221,129,1)" fg:x="297" fg:w="2"/><text x="24.3376%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="24.0876%" y="645" width="0.1622%" height="15" fill="rgb(229,74,15)" fg:x="297" fg:w="2"/><text x="24.3376%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="24.0876%" y="629" width="0.1622%" height="15" fill="rgb(210,206,50)" fg:x="297" fg:w="2"/><text x="24.3376%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="24.1687%" y="613" width="0.0811%" height="15" fill="rgb(251,114,31)" fg:x="298" fg:w="1"/><text x="24.4187%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1687%" y="597" width="0.0811%" height="15" fill="rgb(215,225,28)" fg:x="298" fg:w="1"/><text x="24.4187%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.1687%" y="581" width="0.0811%" height="15" fill="rgb(237,109,14)" fg:x="298" fg:w="1"/><text x="24.4187%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="24.2498%" y="661" width="0.0811%" height="15" fill="rgb(230,13,37)" fg:x="299" fg:w="1"/><text x="24.4998%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="24.3309%" y="629" width="0.0811%" height="15" fill="rgb(231,40,28)" fg:x="300" fg:w="1"/><text x="24.5809%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="24.3309%" y="613" width="0.0811%" height="15" fill="rgb(231,202,18)" fg:x="300" fg:w="1"/><text x="24.5809%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3309%" y="597" width="0.0811%" height="15" fill="rgb(225,33,18)" fg:x="300" fg:w="1"/><text x="24.5809%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="24.3309%" y="645" width="0.1622%" height="15" fill="rgb(223,64,47)" fg:x="300" fg:w="2"/><text x="24.5809%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="24.4120%" y="629" width="0.0811%" height="15" fill="rgb(234,114,13)" fg:x="301" fg:w="1"/><text x="24.6620%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4120%" y="613" width="0.0811%" height="15" fill="rgb(248,56,40)" fg:x="301" fg:w="1"/><text x="24.6620%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4120%" y="597" width="0.0811%" height="15" fill="rgb(221,194,21)" fg:x="301" fg:w="1"/><text x="24.6620%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.4120%" y="581" width="0.0811%" height="15" fill="rgb(242,108,46)" fg:x="301" fg:w="1"/><text x="24.6620%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.4120%" y="565" width="0.0811%" height="15" fill="rgb(220,106,10)" fg:x="301" fg:w="1"/><text x="24.6620%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.4120%" y="549" width="0.0811%" height="15" fill="rgb(211,88,4)" fg:x="301" fg:w="1"/><text x="24.6620%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.4120%" y="533" width="0.0811%" height="15" fill="rgb(214,95,34)" fg:x="301" fg:w="1"/><text x="24.6620%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.4120%" y="517" width="0.0811%" height="15" fill="rgb(250,160,33)" fg:x="301" fg:w="1"/><text x="24.6620%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="24.5742%" y="629" width="0.0811%" height="15" fill="rgb(225,29,10)" fg:x="303" fg:w="1"/><text x="24.8242%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.5742%" y="613" width="0.0811%" height="15" fill="rgb(224,28,30)" fg:x="303" fg:w="1"/><text x="24.8242%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.6553%" y="597" width="0.0811%" height="15" fill="rgb(231,77,4)" fg:x="304" fg:w="1"/><text x="24.9053%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (2 samples, 0.16%)</title><rect x="24.6553%" y="629" width="0.1622%" height="15" fill="rgb(209,63,21)" fg:x="304" fg:w="2"/><text x="24.9053%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="24.6553%" y="613" width="0.1622%" height="15" fill="rgb(226,22,11)" fg:x="304" fg:w="2"/><text x="24.9053%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.7364%" y="597" width="0.0811%" height="15" fill="rgb(216,82,30)" fg:x="305" fg:w="1"/><text x="24.9864%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="24.8175%" y="629" width="0.0811%" height="15" fill="rgb(246,227,38)" fg:x="306" fg:w="1"/><text x="25.0675%" y="639.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="24.8175%" y="613" width="0.0811%" height="15" fill="rgb(251,203,53)" fg:x="306" fg:w="1"/><text x="25.0675%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8175%" y="597" width="0.0811%" height="15" fill="rgb(254,101,1)" fg:x="306" fg:w="1"/><text x="25.0675%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8175%" y="581" width="0.0811%" height="15" fill="rgb(241,180,5)" fg:x="306" fg:w="1"/><text x="25.0675%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.8175%" y="565" width="0.0811%" height="15" fill="rgb(218,168,4)" fg:x="306" fg:w="1"/><text x="25.0675%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.8175%" y="549" width="0.0811%" height="15" fill="rgb(224,223,32)" fg:x="306" fg:w="1"/><text x="25.0675%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.8175%" y="533" width="0.0811%" height="15" fill="rgb(236,106,22)" fg:x="306" fg:w="1"/><text x="25.0675%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.8175%" y="517" width="0.0811%" height="15" fill="rgb(206,121,5)" fg:x="306" fg:w="1"/><text x="25.0675%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.8175%" y="501" width="0.0811%" height="15" fill="rgb(233,87,28)" fg:x="306" fg:w="1"/><text x="25.0675%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.9797%" y="597" width="0.0811%" height="15" fill="rgb(236,137,17)" fg:x="308" fg:w="1"/><text x="25.2297%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="24.8986%" y="629" width="0.2433%" height="15" fill="rgb(209,183,38)" fg:x="307" fg:w="3"/><text x="25.1486%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="24.8986%" y="613" width="0.2433%" height="15" fill="rgb(206,162,44)" fg:x="307" fg:w="3"/><text x="25.1486%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="25.0608%" y="597" width="0.0811%" height="15" fill="rgb(237,70,39)" fg:x="309" fg:w="1"/><text x="25.3108%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.0608%" y="581" width="0.0811%" height="15" fill="rgb(212,176,5)" fg:x="309" fg:w="1"/><text x="25.3108%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.0608%" y="565" width="0.0811%" height="15" fill="rgb(232,95,16)" fg:x="309" fg:w="1"/><text x="25.3108%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="25.0608%" y="549" width="0.0811%" height="15" fill="rgb(219,115,35)" fg:x="309" fg:w="1"/><text x="25.3108%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.0608%" y="533" width="0.0811%" height="15" fill="rgb(251,67,27)" fg:x="309" fg:w="1"/><text x="25.3108%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0608%" y="517" width="0.0811%" height="15" fill="rgb(222,95,40)" fg:x="309" fg:w="1"/><text x="25.3108%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0608%" y="501" width="0.0811%" height="15" fill="rgb(250,35,16)" fg:x="309" fg:w="1"/><text x="25.3108%" y="511.50"></text></g><g><title>plugins_core::build::Build::occupying (12 samples, 0.97%)</title><rect x="24.3309%" y="661" width="0.9732%" height="15" fill="rgb(224,86,44)" fg:x="300" fg:w="12"/><text x="24.5809%" y="671.50"></text></g><g><title>plugins_core::tools::set_occupying (10 samples, 0.81%)</title><rect x="24.4931%" y="645" width="0.8110%" height="15" fill="rgb(237,53,53)" fg:x="302" fg:w="10"/><text x="24.7431%" y="655.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="25.1419%" y="629" width="0.1622%" height="15" fill="rgb(208,171,33)" fg:x="310" fg:w="2"/><text x="25.3919%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="25.1419%" y="613" width="0.1622%" height="15" fill="rgb(222,64,27)" fg:x="310" fg:w="2"/><text x="25.3919%" y="623.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="25.1419%" y="597" width="0.1622%" height="15" fill="rgb(221,121,35)" fg:x="310" fg:w="2"/><text x="25.3919%" y="607.50"></text></g><g><title>kernel::model::Props::property_named (2 samples, 0.16%)</title><rect x="25.1419%" y="581" width="0.1622%" height="15" fill="rgb(228,137,42)" fg:x="310" fg:w="2"/><text x="25.3919%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.2230%" y="565" width="0.0811%" height="15" fill="rgb(227,54,21)" fg:x="311" fg:w="1"/><text x="25.4730%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="25.3041%" y="613" width="0.0811%" height="15" fill="rgb(240,168,33)" fg:x="312" fg:w="1"/><text x="25.5541%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (128 samples, 10.38%)</title><rect x="15.0852%" y="677" width="10.3812%" height="15" fill="rgb(243,159,6)" fg:x="186" fg:w="128"/><text x="15.3352%" y="687.50">plugins_core::b..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.16%)</title><rect x="25.3041%" y="661" width="0.1622%" height="15" fill="rgb(205,211,41)" fg:x="312" fg:w="2"/><text x="25.5541%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="25.3041%" y="645" width="0.1622%" height="15" fill="rgb(253,30,1)" fg:x="312" fg:w="2"/><text x="25.5541%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="25.3041%" y="629" width="0.1622%" height="15" fill="rgb(226,80,18)" fg:x="312" fg:w="2"/><text x="25.5541%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="25.3852%" y="613" width="0.0811%" height="15" fill="rgb(253,156,46)" fg:x="313" fg:w="1"/><text x="25.6352%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.3852%" y="597" width="0.0811%" height="15" fill="rgb(248,87,27)" fg:x="313" fg:w="1"/><text x="25.6352%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.3852%" y="581" width="0.0811%" height="15" fill="rgb(227,122,2)" fg:x="313" fg:w="1"/><text x="25.6352%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.3852%" y="565" width="0.0811%" height="15" fill="rgb(229,94,39)" fg:x="313" fg:w="1"/><text x="25.6352%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.3852%" y="549" width="0.0811%" height="15" fill="rgb(225,173,31)" fg:x="313" fg:w="1"/><text x="25.6352%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.3852%" y="533" width="0.0811%" height="15" fill="rgb(239,176,30)" fg:x="313" fg:w="1"/><text x="25.6352%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.3852%" y="517" width="0.0811%" height="15" fill="rgb(212,104,21)" fg:x="313" fg:w="1"/><text x="25.6352%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.3852%" y="501" width="0.0811%" height="15" fill="rgb(240,209,40)" fg:x="313" fg:w="1"/><text x="25.6352%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.3852%" y="485" width="0.0811%" height="15" fill="rgb(234,195,5)" fg:x="313" fg:w="1"/><text x="25.6352%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="25.4663%" y="677" width="0.1622%" height="15" fill="rgb(238,213,1)" fg:x="314" fg:w="2"/><text x="25.7163%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="25.4663%" y="661" width="0.1622%" height="15" fill="rgb(235,182,54)" fg:x="314" fg:w="2"/><text x="25.7163%" y="671.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="25.5474%" y="645" width="0.0811%" height="15" fill="rgb(229,50,46)" fg:x="315" fg:w="1"/><text x="25.7974%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="25.5474%" y="629" width="0.0811%" height="15" fill="rgb(219,145,13)" fg:x="315" fg:w="1"/><text x="25.7974%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="25.5474%" y="613" width="0.0811%" height="15" fill="rgb(220,226,10)" fg:x="315" fg:w="1"/><text x="25.7974%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="25.7097%" y="613" width="0.1622%" height="15" fill="rgb(248,47,30)" fg:x="317" fg:w="2"/><text x="25.9597%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="25.7097%" y="597" width="0.1622%" height="15" fill="rgb(231,209,44)" fg:x="317" fg:w="2"/><text x="25.9597%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.7908%" y="581" width="0.0811%" height="15" fill="rgb(209,80,30)" fg:x="318" fg:w="1"/><text x="26.0408%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.7908%" y="565" width="0.0811%" height="15" fill="rgb(232,9,14)" fg:x="318" fg:w="1"/><text x="26.0408%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.7908%" y="549" width="0.0811%" height="15" fill="rgb(243,91,43)" fg:x="318" fg:w="1"/><text x="26.0408%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.7908%" y="533" width="0.0811%" height="15" fill="rgb(231,90,52)" fg:x="318" fg:w="1"/><text x="26.0408%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.7908%" y="517" width="0.0811%" height="15" fill="rgb(253,192,44)" fg:x="318" fg:w="1"/><text x="26.0408%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.7908%" y="501" width="0.0811%" height="15" fill="rgb(241,66,31)" fg:x="318" fg:w="1"/><text x="26.0408%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="25.7908%" y="485" width="0.0811%" height="15" fill="rgb(235,81,37)" fg:x="318" fg:w="1"/><text x="26.0408%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="25.7908%" y="469" width="0.0811%" height="15" fill="rgb(223,221,9)" fg:x="318" fg:w="1"/><text x="26.0408%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="25.7097%" y="629" width="0.2433%" height="15" fill="rgb(242,180,7)" fg:x="317" fg:w="3"/><text x="25.9597%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="25.8719%" y="613" width="0.0811%" height="15" fill="rgb(243,78,19)" fg:x="319" fg:w="1"/><text x="26.1219%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.8719%" y="597" width="0.0811%" height="15" fill="rgb(233,23,17)" fg:x="319" fg:w="1"/><text x="26.1219%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.8719%" y="581" width="0.0811%" height="15" fill="rgb(252,122,45)" fg:x="319" fg:w="1"/><text x="26.1219%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.8719%" y="565" width="0.0811%" height="15" fill="rgb(247,108,20)" fg:x="319" fg:w="1"/><text x="26.1219%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.8719%" y="549" width="0.0811%" height="15" fill="rgb(235,84,21)" fg:x="319" fg:w="1"/><text x="26.1219%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.8719%" y="533" width="0.0811%" height="15" fill="rgb(247,129,10)" fg:x="319" fg:w="1"/><text x="26.1219%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.8719%" y="517" width="0.0811%" height="15" fill="rgb(208,173,14)" fg:x="319" fg:w="1"/><text x="26.1219%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.8719%" y="501" width="0.0811%" height="15" fill="rgb(236,31,38)" fg:x="319" fg:w="1"/><text x="26.1219%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.8719%" y="485" width="0.0811%" height="15" fill="rgb(232,65,17)" fg:x="319" fg:w="1"/><text x="26.1219%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="25.8719%" y="469" width="0.0811%" height="15" fill="rgb(224,45,49)" fg:x="319" fg:w="1"/><text x="26.1219%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.8719%" y="453" width="0.0811%" height="15" fill="rgb(225,2,53)" fg:x="319" fg:w="1"/><text x="26.1219%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.8719%" y="437" width="0.0811%" height="15" fill="rgb(248,210,53)" fg:x="319" fg:w="1"/><text x="26.1219%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.8719%" y="421" width="0.0811%" height="15" fill="rgb(211,1,30)" fg:x="319" fg:w="1"/><text x="26.1219%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="25.8719%" y="405" width="0.0811%" height="15" fill="rgb(224,96,15)" fg:x="319" fg:w="1"/><text x="26.1219%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="25.7097%" y="645" width="0.3244%" height="15" fill="rgb(252,45,11)" fg:x="317" fg:w="4"/><text x="25.9597%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="25.9530%" y="629" width="0.0811%" height="15" fill="rgb(220,125,38)" fg:x="320" fg:w="1"/><text x="26.2030%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="25.9530%" y="613" width="0.0811%" height="15" fill="rgb(243,161,33)" fg:x="320" fg:w="1"/><text x="26.2030%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.9530%" y="597" width="0.0811%" height="15" fill="rgb(248,197,34)" fg:x="320" fg:w="1"/><text x="26.2030%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.9530%" y="581" width="0.0811%" height="15" fill="rgb(228,165,23)" fg:x="320" fg:w="1"/><text x="26.2030%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.9530%" y="565" width="0.0811%" height="15" fill="rgb(236,94,38)" fg:x="320" fg:w="1"/><text x="26.2030%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.9530%" y="549" width="0.0811%" height="15" fill="rgb(220,13,23)" fg:x="320" fg:w="1"/><text x="26.2030%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.9530%" y="533" width="0.0811%" height="15" fill="rgb(234,26,39)" fg:x="320" fg:w="1"/><text x="26.2030%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.9530%" y="517" width="0.0811%" height="15" fill="rgb(205,117,44)" fg:x="320" fg:w="1"/><text x="26.2030%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.9530%" y="501" width="0.0811%" height="15" fill="rgb(250,42,2)" fg:x="320" fg:w="1"/><text x="26.2030%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.9530%" y="485" width="0.0811%" height="15" fill="rgb(223,83,14)" fg:x="320" fg:w="1"/><text x="26.2030%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.9530%" y="469" width="0.0811%" height="15" fill="rgb(241,147,50)" fg:x="320" fg:w="1"/><text x="26.2030%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.9530%" y="453" width="0.0811%" height="15" fill="rgb(218,90,6)" fg:x="320" fg:w="1"/><text x="26.2030%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.9530%" y="437" width="0.0811%" height="15" fill="rgb(210,191,5)" fg:x="320" fg:w="1"/><text x="26.2030%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.9530%" y="421" width="0.0811%" height="15" fill="rgb(225,139,19)" fg:x="320" fg:w="1"/><text x="26.2030%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="26.0341%" y="645" width="0.1622%" height="15" fill="rgb(210,1,33)" fg:x="321" fg:w="2"/><text x="26.2841%" y="655.50"></text></g><g><title>kernel::model::Entity::new_blank (2 samples, 0.16%)</title><rect x="26.0341%" y="629" width="0.1622%" height="15" fill="rgb(213,50,3)" fg:x="321" fg:w="2"/><text x="26.2841%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="26.1152%" y="613" width="0.0811%" height="15" fill="rgb(234,227,4)" fg:x="322" fg:w="1"/><text x="26.3652%" y="623.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (241 samples, 19.55%)</title><rect x="6.7315%" y="693" width="19.5458%" height="15" fill="rgb(246,63,5)" fg:x="83" fg:w="241"/><text x="6.9815%" y="703.50">&lt;tests::HoldingKeyInVessel as t..</text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.65%)</title><rect x="25.6285%" y="677" width="0.6488%" height="15" fill="rgb(245,136,27)" fg:x="316" fg:w="8"/><text x="25.8785%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.65%)</title><rect x="25.6285%" y="661" width="0.6488%" height="15" fill="rgb(247,199,27)" fg:x="316" fg:w="8"/><text x="25.8785%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="26.1963%" y="645" width="0.0811%" height="15" fill="rgb(252,158,49)" fg:x="323" fg:w="1"/><text x="26.4463%" y="655.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="26.1963%" y="629" width="0.0811%" height="15" fill="rgb(254,73,1)" fg:x="323" fg:w="1"/><text x="26.4463%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.1963%" y="613" width="0.0811%" height="15" fill="rgb(248,93,19)" fg:x="323" fg:w="1"/><text x="26.4463%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.1963%" y="597" width="0.0811%" height="15" fill="rgb(206,67,5)" fg:x="323" fg:w="1"/><text x="26.4463%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="26.2774%" y="693" width="0.1622%" height="15" fill="rgb(209,210,4)" fg:x="324" fg:w="2"/><text x="26.5274%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="26.2774%" y="677" width="0.1622%" height="15" fill="rgb(214,185,36)" fg:x="324" fg:w="2"/><text x="26.5274%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="26.2774%" y="661" width="0.1622%" height="15" fill="rgb(233,191,26)" fg:x="324" fg:w="2"/><text x="26.5274%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="26.2774%" y="645" width="0.1622%" height="15" fill="rgb(248,94,17)" fg:x="324" fg:w="2"/><text x="26.5274%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.2774%" y="629" width="0.1622%" height="15" fill="rgb(250,64,4)" fg:x="324" fg:w="2"/><text x="26.5274%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.4396%" y="677" width="0.0811%" height="15" fill="rgb(218,41,53)" fg:x="326" fg:w="1"/><text x="26.6896%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.4396%" y="661" width="0.0811%" height="15" fill="rgb(251,176,28)" fg:x="326" fg:w="1"/><text x="26.6896%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.4396%" y="645" width="0.0811%" height="15" fill="rgb(247,22,9)" fg:x="326" fg:w="1"/><text x="26.6896%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.4396%" y="629" width="0.0811%" height="15" fill="rgb(218,201,14)" fg:x="326" fg:w="1"/><text x="26.6896%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="26.4396%" y="613" width="0.0811%" height="15" fill="rgb(218,94,10)" fg:x="326" fg:w="1"/><text x="26.6896%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="26.4396%" y="597" width="0.0811%" height="15" fill="rgb(222,183,52)" fg:x="326" fg:w="1"/><text x="26.6896%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="26.4396%" y="581" width="0.0811%" height="15" fill="rgb(242,140,25)" fg:x="326" fg:w="1"/><text x="26.6896%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.4396%" y="565" width="0.0811%" height="15" fill="rgb(235,197,38)" fg:x="326" fg:w="1"/><text x="26.6896%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.4396%" y="549" width="0.0811%" height="15" fill="rgb(237,136,15)" fg:x="326" fg:w="1"/><text x="26.6896%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="26.4396%" y="533" width="0.0811%" height="15" fill="rgb(223,44,49)" fg:x="326" fg:w="1"/><text x="26.6896%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="26.4396%" y="517" width="0.0811%" height="15" fill="rgb(227,71,15)" fg:x="326" fg:w="1"/><text x="26.6896%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.4396%" y="501" width="0.0811%" height="15" fill="rgb(225,153,20)" fg:x="326" fg:w="1"/><text x="26.6896%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.4396%" y="485" width="0.0811%" height="15" fill="rgb(210,190,26)" fg:x="326" fg:w="1"/><text x="26.6896%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.4396%" y="469" width="0.0811%" height="15" fill="rgb(223,147,5)" fg:x="326" fg:w="1"/><text x="26.6896%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.4396%" y="453" width="0.0811%" height="15" fill="rgb(207,14,23)" fg:x="326" fg:w="1"/><text x="26.6896%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.4396%" y="437" width="0.0811%" height="15" fill="rgb(211,195,53)" fg:x="326" fg:w="1"/><text x="26.6896%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.4396%" y="421" width="0.0811%" height="15" fill="rgb(237,75,46)" fg:x="326" fg:w="1"/><text x="26.6896%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.4396%" y="405" width="0.0811%" height="15" fill="rgb(254,55,14)" fg:x="326" fg:w="1"/><text x="26.6896%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.4396%" y="389" width="0.0811%" height="15" fill="rgb(230,185,30)" fg:x="326" fg:w="1"/><text x="26.6896%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.6829%" y="645" width="0.0811%" height="15" fill="rgb(220,14,11)" fg:x="329" fg:w="1"/><text x="26.9329%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.6829%" y="629" width="0.0811%" height="15" fill="rgb(215,169,44)" fg:x="329" fg:w="1"/><text x="26.9329%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.6829%" y="613" width="0.0811%" height="15" fill="rgb(253,203,20)" fg:x="329" fg:w="1"/><text x="26.9329%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="26.6018%" y="661" width="0.2433%" height="15" fill="rgb(229,225,17)" fg:x="328" fg:w="3"/><text x="26.8518%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="26.7640%" y="645" width="0.0811%" height="15" fill="rgb(236,76,26)" fg:x="330" fg:w="1"/><text x="27.0140%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="26.8451%" y="661" width="0.0811%" height="15" fill="rgb(234,15,30)" fg:x="331" fg:w="1"/><text x="27.0951%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::rollback (1 samples, 0.08%)</title><rect x="26.9262%" y="661" width="0.0811%" height="15" fill="rgb(211,113,48)" fg:x="332" fg:w="1"/><text x="27.1762%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="27.0073%" y="661" width="0.1622%" height="15" fill="rgb(221,31,36)" fg:x="333" fg:w="2"/><text x="27.2573%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="27.0884%" y="645" width="0.0811%" height="15" fill="rgb(215,118,52)" fg:x="334" fg:w="1"/><text x="27.3384%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="27.0884%" y="629" width="0.0811%" height="15" fill="rgb(241,151,27)" fg:x="334" fg:w="1"/><text x="27.3384%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.2506%" y="613" width="0.1622%" height="15" fill="rgb(253,51,3)" fg:x="336" fg:w="2"/><text x="27.5006%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.3317%" y="597" width="0.0811%" height="15" fill="rgb(216,201,24)" fg:x="337" fg:w="1"/><text x="27.5817%" y="607.50"></text></g><g><title>engine::identifiers::model::get_gid (4 samples, 0.32%)</title><rect x="27.1695%" y="661" width="0.3244%" height="15" fill="rgb(231,107,4)" fg:x="335" fg:w="4"/><text x="27.4195%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="27.2506%" y="645" width="0.2433%" height="15" fill="rgb(243,97,54)" fg:x="336" fg:w="3"/><text x="27.5006%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="27.2506%" y="629" width="0.2433%" height="15" fill="rgb(221,32,51)" fg:x="336" fg:w="3"/><text x="27.5006%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.4128%" y="613" width="0.0811%" height="15" fill="rgb(218,171,35)" fg:x="338" fg:w="1"/><text x="27.6628%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="27.4128%" y="597" width="0.0811%" height="15" fill="rgb(214,20,53)" fg:x="338" fg:w="1"/><text x="27.6628%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4939%" y="613" width="0.0811%" height="15" fill="rgb(239,9,52)" fg:x="339" fg:w="1"/><text x="27.7439%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="27.4939%" y="645" width="0.1622%" height="15" fill="rgb(215,114,45)" fg:x="339" fg:w="2"/><text x="27.7439%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="27.4939%" y="629" width="0.1622%" height="15" fill="rgb(208,118,9)" fg:x="339" fg:w="2"/><text x="27.7439%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.5750%" y="613" width="0.0811%" height="15" fill="rgb(235,7,39)" fg:x="340" fg:w="1"/><text x="27.8250%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="27.6561%" y="629" width="0.0811%" height="15" fill="rgb(243,225,15)" fg:x="341" fg:w="1"/><text x="27.9061%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.6561%" y="613" width="0.0811%" height="15" fill="rgb(225,216,18)" fg:x="341" fg:w="1"/><text x="27.9061%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.6561%" y="597" width="0.0811%" height="15" fill="rgb(233,36,38)" fg:x="341" fg:w="1"/><text x="27.9061%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.6561%" y="581" width="0.0811%" height="15" fill="rgb(239,88,23)" fg:x="341" fg:w="1"/><text x="27.9061%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.6561%" y="565" width="0.0811%" height="15" fill="rgb(219,181,35)" fg:x="341" fg:w="1"/><text x="27.9061%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.6561%" y="549" width="0.0811%" height="15" fill="rgb(215,18,46)" fg:x="341" fg:w="1"/><text x="27.9061%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.6561%" y="533" width="0.0811%" height="15" fill="rgb(241,38,11)" fg:x="341" fg:w="1"/><text x="27.9061%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.7372%" y="613" width="0.0811%" height="15" fill="rgb(248,169,45)" fg:x="342" fg:w="1"/><text x="27.9872%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="27.8183%" y="597" width="0.2433%" height="15" fill="rgb(239,50,49)" fg:x="343" fg:w="3"/><text x="28.0683%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="27.8183%" y="581" width="0.2433%" height="15" fill="rgb(231,96,31)" fg:x="343" fg:w="3"/><text x="28.0683%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.8994%" y="565" width="0.1622%" height="15" fill="rgb(224,193,37)" fg:x="344" fg:w="2"/><text x="28.1494%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.8994%" y="549" width="0.1622%" height="15" fill="rgb(227,153,50)" fg:x="344" fg:w="2"/><text x="28.1494%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.9805%" y="533" width="0.0811%" height="15" fill="rgb(249,228,3)" fg:x="345" fg:w="1"/><text x="28.2305%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.9805%" y="517" width="0.0811%" height="15" fill="rgb(219,164,43)" fg:x="345" fg:w="1"/><text x="28.2305%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.9805%" y="501" width="0.0811%" height="15" fill="rgb(216,45,41)" fg:x="345" fg:w="1"/><text x="28.2305%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="27.8183%" y="613" width="0.5677%" height="15" fill="rgb(210,226,51)" fg:x="343" fg:w="7"/><text x="28.0683%" y="623.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="28.0616%" y="597" width="0.3244%" height="15" fill="rgb(209,117,49)" fg:x="346" fg:w="4"/><text x="28.3116%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.7916%" y="597" width="0.1622%" height="15" fill="rgb(206,196,24)" fg:x="355" fg:w="2"/><text x="29.0416%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.7916%" y="581" width="0.1622%" height="15" fill="rgb(253,218,3)" fg:x="355" fg:w="2"/><text x="29.0416%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.8727%" y="565" width="0.0811%" height="15" fill="rgb(252,166,2)" fg:x="356" fg:w="1"/><text x="29.1227%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8727%" y="549" width="0.0811%" height="15" fill="rgb(236,218,26)" fg:x="356" fg:w="1"/><text x="29.1227%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.9538%" y="581" width="0.0811%" height="15" fill="rgb(254,84,19)" fg:x="357" fg:w="1"/><text x="29.2038%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="28.9538%" y="565" width="0.0811%" height="15" fill="rgb(219,137,29)" fg:x="357" fg:w="1"/><text x="29.2038%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="28.9538%" y="549" width="0.0811%" height="15" fill="rgb(227,47,52)" fg:x="357" fg:w="1"/><text x="29.2038%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.0349%" y="581" width="0.1622%" height="15" fill="rgb(229,167,24)" fg:x="358" fg:w="2"/><text x="29.2849%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.0349%" y="565" width="0.1622%" height="15" fill="rgb(233,164,1)" fg:x="358" fg:w="2"/><text x="29.2849%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.1160%" y="549" width="0.0811%" height="15" fill="rgb(218,88,48)" fg:x="359" fg:w="1"/><text x="29.3660%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.1971%" y="565" width="0.1622%" height="15" fill="rgb(226,214,24)" fg:x="360" fg:w="2"/><text x="29.4471%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="29.4404%" y="549" width="0.3244%" height="15" fill="rgb(233,29,12)" fg:x="363" fg:w="4"/><text x="29.6904%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.6026%" y="533" width="0.1622%" height="15" fill="rgb(219,120,34)" fg:x="365" fg:w="2"/><text x="29.8526%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.6026%" y="517" width="0.1622%" height="15" fill="rgb(226,78,44)" fg:x="365" fg:w="2"/><text x="29.8526%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="29.3593%" y="565" width="0.4866%" height="15" fill="rgb(240,15,48)" fg:x="362" fg:w="6"/><text x="29.6093%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="29.7648%" y="549" width="0.0811%" height="15" fill="rgb(253,176,7)" fg:x="367" fg:w="1"/><text x="30.0148%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="28.9538%" y="597" width="1.0543%" height="15" fill="rgb(206,166,28)" fg:x="357" fg:w="13"/><text x="29.2038%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="29.1971%" y="581" width="0.8110%" height="15" fill="rgb(241,53,51)" fg:x="360" fg:w="10"/><text x="29.4471%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.8459%" y="565" width="0.1622%" height="15" fill="rgb(249,112,30)" fg:x="368" fg:w="2"/><text x="30.0959%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.8459%" y="549" width="0.1622%" height="15" fill="rgb(217,85,30)" fg:x="368" fg:w="2"/><text x="30.0959%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.9270%" y="533" width="0.0811%" height="15" fill="rgb(233,49,7)" fg:x="369" fg:w="1"/><text x="30.1770%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.78%)</title><rect x="28.3861%" y="613" width="1.7843%" height="15" fill="rgb(234,109,9)" fg:x="350" fg:w="22"/><text x="28.6361%" y="623.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.0081%" y="597" width="0.1622%" height="15" fill="rgb(253,95,22)" fg:x="370" fg:w="2"/><text x="30.2581%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.0081%" y="581" width="0.1622%" height="15" fill="rgb(233,176,25)" fg:x="370" fg:w="2"/><text x="30.2581%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.0081%" y="565" width="0.1622%" height="15" fill="rgb(236,33,39)" fg:x="370" fg:w="2"/><text x="30.2581%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="30.0081%" y="549" width="0.1622%" height="15" fill="rgb(223,226,42)" fg:x="370" fg:w="2"/><text x="30.2581%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="30.0081%" y="533" width="0.1622%" height="15" fill="rgb(216,99,33)" fg:x="370" fg:w="2"/><text x="30.2581%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.0892%" y="517" width="0.0811%" height="15" fill="rgb(235,84,23)" fg:x="371" fg:w="1"/><text x="30.3392%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (31 samples, 2.51%)</title><rect x="27.7372%" y="629" width="2.5142%" height="15" fill="rgb(232,2,27)" fg:x="342" fg:w="31"/><text x="27.9872%" y="639.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.1703%" y="613" width="0.0811%" height="15" fill="rgb(241,23,22)" fg:x="372" fg:w="1"/><text x="30.4203%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.1703%" y="597" width="0.0811%" height="15" fill="rgb(211,73,27)" fg:x="372" fg:w="1"/><text x="30.4203%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.1703%" y="581" width="0.0811%" height="15" fill="rgb(235,109,49)" fg:x="372" fg:w="1"/><text x="30.4203%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.1703%" y="565" width="0.0811%" height="15" fill="rgb(230,99,29)" fg:x="372" fg:w="1"/><text x="30.4203%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.1703%" y="549" width="0.0811%" height="15" fill="rgb(245,199,7)" fg:x="372" fg:w="1"/><text x="30.4203%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1703%" y="533" width="0.0811%" height="15" fill="rgb(217,179,10)" fg:x="372" fg:w="1"/><text x="30.4203%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.2514%" y="597" width="0.1622%" height="15" fill="rgb(254,99,47)" fg:x="373" fg:w="2"/><text x="30.5014%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.4947%" y="581" width="0.0811%" height="15" fill="rgb(251,121,7)" fg:x="376" fg:w="1"/><text x="30.7447%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.5758%" y="581" width="0.0811%" height="15" fill="rgb(250,177,26)" fg:x="377" fg:w="1"/><text x="30.8258%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.6569%" y="565" width="0.1622%" height="15" fill="rgb(232,88,15)" fg:x="378" fg:w="2"/><text x="30.9069%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.8191%" y="565" width="0.0811%" height="15" fill="rgb(251,54,54)" fg:x="380" fg:w="1"/><text x="31.0691%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.0624%" y="549" width="0.0811%" height="15" fill="rgb(208,177,15)" fg:x="383" fg:w="1"/><text x="31.3124%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="30.2514%" y="629" width="0.9732%" height="15" fill="rgb(205,97,32)" fg:x="373" fg:w="12"/><text x="30.5014%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="30.2514%" y="613" width="0.9732%" height="15" fill="rgb(217,192,13)" fg:x="373" fg:w="12"/><text x="30.5014%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="30.4136%" y="597" width="0.8110%" height="15" fill="rgb(215,163,41)" fg:x="375" fg:w="10"/><text x="30.6636%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="30.6569%" y="581" width="0.5677%" height="15" fill="rgb(246,83,29)" fg:x="378" fg:w="7"/><text x="30.9069%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="30.9002%" y="565" width="0.3244%" height="15" fill="rgb(219,2,45)" fg:x="381" fg:w="4"/><text x="31.1502%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.1436%" y="549" width="0.0811%" height="15" fill="rgb(242,215,33)" fg:x="384" fg:w="1"/><text x="31.3936%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.1436%" y="533" width="0.0811%" height="15" fill="rgb(217,1,6)" fg:x="384" fg:w="1"/><text x="31.3936%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.2247%" y="613" width="0.0811%" height="15" fill="rgb(207,85,52)" fg:x="385" fg:w="1"/><text x="31.4747%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.3869%" y="581" width="0.0811%" height="15" fill="rgb(231,171,19)" fg:x="387" fg:w="1"/><text x="31.6369%" y="591.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="31.6302%" y="565" width="0.3244%" height="15" fill="rgb(207,128,4)" fg:x="390" fg:w="4"/><text x="31.8802%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="31.9546%" y="565" width="0.3244%" height="15" fill="rgb(219,208,4)" fg:x="394" fg:w="4"/><text x="32.2046%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1979%" y="549" width="0.0811%" height="15" fill="rgb(235,161,42)" fg:x="397" fg:w="1"/><text x="32.4479%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.4412%" y="549" width="0.0811%" height="15" fill="rgb(247,218,18)" fg:x="400" fg:w="1"/><text x="32.6912%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.6845%" y="533" width="0.1622%" height="15" fill="rgb(232,114,51)" fg:x="403" fg:w="2"/><text x="32.9345%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.6845%" y="517" width="0.1622%" height="15" fill="rgb(222,95,3)" fg:x="403" fg:w="2"/><text x="32.9345%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="32.8467%" y="533" width="0.3244%" height="15" fill="rgb(240,65,29)" fg:x="405" fg:w="4"/><text x="33.0967%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="32.8467%" y="517" width="0.3244%" height="15" fill="rgb(249,209,20)" fg:x="405" fg:w="4"/><text x="33.0967%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="32.9278%" y="501" width="0.2433%" height="15" fill="rgb(241,48,37)" fg:x="406" fg:w="3"/><text x="33.1778%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (24 samples, 1.95%)</title><rect x="31.3058%" y="613" width="1.9465%" height="15" fill="rgb(230,140,42)" fg:x="386" fg:w="24"/><text x="31.5558%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (24 samples, 1.95%)</title><rect x="31.3058%" y="597" width="1.9465%" height="15" fill="rgb(230,176,45)" fg:x="386" fg:w="24"/><text x="31.5558%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.78%)</title><rect x="31.4680%" y="581" width="1.7843%" height="15" fill="rgb(245,112,21)" fg:x="388" fg:w="22"/><text x="31.7180%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="32.2790%" y="565" width="0.9732%" height="15" fill="rgb(207,183,35)" fg:x="398" fg:w="12"/><text x="32.5290%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="32.5223%" y="549" width="0.7299%" height="15" fill="rgb(227,44,33)" fg:x="401" fg:w="9"/><text x="32.7723%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.1711%" y="533" width="0.0811%" height="15" fill="rgb(246,120,21)" fg:x="409" fg:w="1"/><text x="33.4211%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.5766%" y="581" width="0.1622%" height="15" fill="rgb(235,57,52)" fg:x="414" fg:w="2"/><text x="33.8266%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.7388%" y="581" width="0.1622%" height="15" fill="rgb(238,84,10)" fg:x="416" fg:w="2"/><text x="33.9888%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.8200%" y="565" width="0.0811%" height="15" fill="rgb(251,200,32)" fg:x="417" fg:w="1"/><text x="34.0700%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="33.8200%" y="549" width="0.0811%" height="15" fill="rgb(247,159,13)" fg:x="417" fg:w="1"/><text x="34.0700%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="33.8200%" y="533" width="0.0811%" height="15" fill="rgb(238,64,4)" fg:x="417" fg:w="1"/><text x="34.0700%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.9011%" y="581" width="0.0811%" height="15" fill="rgb(221,131,51)" fg:x="418" fg:w="1"/><text x="34.1511%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.9011%" y="565" width="0.0811%" height="15" fill="rgb(242,5,29)" fg:x="418" fg:w="1"/><text x="34.1511%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="34.0633%" y="565" width="0.0811%" height="15" fill="rgb(214,130,32)" fg:x="420" fg:w="1"/><text x="34.3133%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="33.9822%" y="581" width="0.2433%" height="15" fill="rgb(244,210,16)" fg:x="419" fg:w="3"/><text x="34.2322%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.1444%" y="565" width="0.0811%" height="15" fill="rgb(234,48,26)" fg:x="421" fg:w="1"/><text x="34.3944%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1444%" y="549" width="0.0811%" height="15" fill="rgb(231,82,38)" fg:x="421" fg:w="1"/><text x="34.3944%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1444%" y="533" width="0.0811%" height="15" fill="rgb(254,128,41)" fg:x="421" fg:w="1"/><text x="34.3944%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.2255%" y="549" width="0.1622%" height="15" fill="rgb(212,73,49)" fg:x="422" fg:w="2"/><text x="34.4755%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (5 samples, 0.41%)</title><rect x="34.2255%" y="581" width="0.4055%" height="15" fill="rgb(205,62,54)" fg:x="422" fg:w="5"/><text x="34.4755%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.41%)</title><rect x="34.2255%" y="565" width="0.4055%" height="15" fill="rgb(228,0,8)" fg:x="422" fg:w="5"/><text x="34.4755%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.3877%" y="549" width="0.2433%" height="15" fill="rgb(251,28,17)" fg:x="424" fg:w="3"/><text x="34.6377%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6310%" y="549" width="0.0811%" height="15" fill="rgb(238,105,27)" fg:x="427" fg:w="1"/><text x="34.8810%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6310%" y="533" width="0.0811%" height="15" fill="rgb(237,216,33)" fg:x="427" fg:w="1"/><text x="34.8810%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6310%" y="517" width="0.0811%" height="15" fill="rgb(229,228,25)" fg:x="427" fg:w="1"/><text x="34.8810%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.1176%" y="533" width="0.3244%" height="15" fill="rgb(233,75,23)" fg:x="433" fg:w="4"/><text x="35.3676%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.1987%" y="517" width="0.2433%" height="15" fill="rgb(231,207,16)" fg:x="434" fg:w="3"/><text x="35.4487%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.2798%" y="501" width="0.1622%" height="15" fill="rgb(231,191,45)" fg:x="435" fg:w="2"/><text x="35.5298%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.4420%" y="501" width="0.0811%" height="15" fill="rgb(224,133,17)" fg:x="437" fg:w="1"/><text x="35.6920%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (14 samples, 1.14%)</title><rect x="34.6310%" y="581" width="1.1354%" height="15" fill="rgb(209,178,27)" fg:x="427" fg:w="14"/><text x="34.8810%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.14%)</title><rect x="34.6310%" y="565" width="1.1354%" height="15" fill="rgb(218,37,11)" fg:x="427" fg:w="14"/><text x="34.8810%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="34.7121%" y="549" width="1.0543%" height="15" fill="rgb(251,226,25)" fg:x="428" fg:w="13"/><text x="34.9621%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="35.4420%" y="533" width="0.3244%" height="15" fill="rgb(209,222,27)" fg:x="437" fg:w="4"/><text x="35.6920%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="35.4420%" y="517" width="0.3244%" height="15" fill="rgb(238,22,21)" fg:x="437" fg:w="4"/><text x="35.6920%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="35.5231%" y="501" width="0.2433%" height="15" fill="rgb(233,161,25)" fg:x="438" fg:w="3"/><text x="35.7731%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="35.5231%" y="485" width="0.2433%" height="15" fill="rgb(226,122,53)" fg:x="438" fg:w="3"/><text x="35.7731%" y="495.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="35.5231%" y="469" width="0.2433%" height="15" fill="rgb(220,123,17)" fg:x="438" fg:w="3"/><text x="35.7731%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.9286%" y="533" width="0.1622%" height="15" fill="rgb(230,224,35)" fg:x="443" fg:w="2"/><text x="36.1786%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.9286%" y="517" width="0.1622%" height="15" fill="rgb(246,83,8)" fg:x="443" fg:w="2"/><text x="36.1786%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.9286%" y="501" width="0.1622%" height="15" fill="rgb(230,214,17)" fg:x="443" fg:w="2"/><text x="36.1786%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.1719%" y="501" width="0.0811%" height="15" fill="rgb(222,97,18)" fg:x="446" fg:w="1"/><text x="36.4219%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.3341%" y="485" width="0.1622%" height="15" fill="rgb(206,79,1)" fg:x="448" fg:w="2"/><text x="36.5841%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.3341%" y="469" width="0.1622%" height="15" fill="rgb(214,121,34)" fg:x="448" fg:w="2"/><text x="36.5841%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="36.3341%" y="453" width="0.1622%" height="15" fill="rgb(249,199,46)" fg:x="448" fg:w="2"/><text x="36.5841%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.57%)</title><rect x="36.0908%" y="533" width="0.5677%" height="15" fill="rgb(214,222,46)" fg:x="445" fg:w="7"/><text x="36.3408%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="36.0908%" y="517" width="0.5677%" height="15" fill="rgb(248,168,30)" fg:x="445" fg:w="7"/><text x="36.3408%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="36.2530%" y="501" width="0.4055%" height="15" fill="rgb(226,14,28)" fg:x="447" fg:w="5"/><text x="36.5030%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="36.4964%" y="485" width="0.1622%" height="15" fill="rgb(253,123,1)" fg:x="450" fg:w="2"/><text x="36.7464%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="36.7397%" y="517" width="0.2433%" height="15" fill="rgb(225,24,42)" fg:x="453" fg:w="3"/><text x="36.9897%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.9830%" y="517" width="0.0811%" height="15" fill="rgb(216,161,37)" fg:x="456" fg:w="1"/><text x="37.2330%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2263%" y="469" width="0.0811%" height="15" fill="rgb(251,164,26)" fg:x="459" fg:w="1"/><text x="37.4763%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="37.0641%" y="517" width="0.3244%" height="15" fill="rgb(219,177,3)" fg:x="457" fg:w="4"/><text x="37.3141%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="37.1452%" y="501" width="0.2433%" height="15" fill="rgb(222,65,0)" fg:x="458" fg:w="3"/><text x="37.3952%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.2263%" y="485" width="0.1622%" height="15" fill="rgb(223,69,54)" fg:x="459" fg:w="2"/><text x="37.4763%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.3074%" y="469" width="0.0811%" height="15" fill="rgb(235,30,27)" fg:x="460" fg:w="1"/><text x="37.5574%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (53 samples, 4.30%)</title><rect x="33.2522%" y="613" width="4.2985%" height="15" fill="rgb(220,183,50)" fg:x="410" fg:w="53"/><text x="33.5022%" y="623.50">kerne..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (51 samples, 4.14%)</title><rect x="33.4144%" y="597" width="4.1363%" height="15" fill="rgb(248,198,15)" fg:x="412" fg:w="51"/><text x="33.6644%" y="607.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.78%)</title><rect x="35.7664%" y="581" width="1.7843%" height="15" fill="rgb(222,211,4)" fg:x="441" fg:w="22"/><text x="36.0164%" y="591.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (21 samples, 1.70%)</title><rect x="35.8475%" y="565" width="1.7032%" height="15" fill="rgb(214,102,34)" fg:x="442" fg:w="21"/><text x="36.0975%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.70%)</title><rect x="35.8475%" y="549" width="1.7032%" height="15" fill="rgb(245,92,5)" fg:x="442" fg:w="21"/><text x="36.0975%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.89%)</title><rect x="36.6586%" y="533" width="0.8921%" height="15" fill="rgb(252,72,51)" fg:x="452" fg:w="11"/><text x="36.9086%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.3885%" y="517" width="0.1622%" height="15" fill="rgb(252,208,19)" fg:x="461" fg:w="2"/><text x="37.6385%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.2806%" y="437" width="0.1622%" height="15" fill="rgb(211,69,7)" fg:x="472" fg:w="2"/><text x="38.5306%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.2806%" y="421" width="0.1622%" height="15" fill="rgb(211,27,16)" fg:x="472" fg:w="2"/><text x="38.5306%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="38.1184%" y="469" width="0.4055%" height="15" fill="rgb(219,216,14)" fg:x="470" fg:w="5"/><text x="38.3684%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="38.1995%" y="453" width="0.3244%" height="15" fill="rgb(219,71,8)" fg:x="471" fg:w="4"/><text x="38.4495%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.4428%" y="437" width="0.0811%" height="15" fill="rgb(223,170,53)" fg:x="474" fg:w="1"/><text x="38.6928%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="38.6861%" y="453" width="0.2433%" height="15" fill="rgb(246,21,26)" fg:x="477" fg:w="3"/><text x="38.9361%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.7672%" y="437" width="0.1622%" height="15" fill="rgb(248,20,46)" fg:x="478" fg:w="2"/><text x="39.0172%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.7672%" y="421" width="0.1622%" height="15" fill="rgb(252,94,11)" fg:x="478" fg:w="2"/><text x="39.0172%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8483%" y="405" width="0.0811%" height="15" fill="rgb(236,163,8)" fg:x="479" fg:w="1"/><text x="39.0983%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.9294%" y="453" width="0.1622%" height="15" fill="rgb(217,221,45)" fg:x="480" fg:w="2"/><text x="39.1794%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.9294%" y="437" width="0.1622%" height="15" fill="rgb(238,38,17)" fg:x="480" fg:w="2"/><text x="39.1794%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.38%)</title><rect x="38.0373%" y="485" width="1.3788%" height="15" fill="rgb(242,210,23)" fg:x="469" fg:w="17"/><text x="38.2873%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="38.5239%" y="469" width="0.8921%" height="15" fill="rgb(250,86,53)" fg:x="475" fg:w="11"/><text x="38.7739%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="39.0916%" y="453" width="0.3244%" height="15" fill="rgb(223,168,25)" fg:x="482" fg:w="4"/><text x="39.3416%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="39.1727%" y="437" width="0.2433%" height="15" fill="rgb(251,189,4)" fg:x="483" fg:w="3"/><text x="39.4227%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="39.1727%" y="421" width="0.2433%" height="15" fill="rgb(245,19,28)" fg:x="483" fg:w="3"/><text x="39.4227%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="39.4161%" y="485" width="0.1622%" height="15" fill="rgb(207,10,34)" fg:x="486" fg:w="2"/><text x="39.6661%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="39.4161%" y="469" width="0.1622%" height="15" fill="rgb(235,153,31)" fg:x="486" fg:w="2"/><text x="39.6661%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.87%)</title><rect x="37.9562%" y="517" width="1.8654%" height="15" fill="rgb(228,72,37)" fg:x="468" fg:w="23"/><text x="38.2062%" y="527.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.87%)</title><rect x="37.9562%" y="501" width="1.8654%" height="15" fill="rgb(215,15,16)" fg:x="468" fg:w="23"/><text x="38.2062%" y="511.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="39.5783%" y="485" width="0.2433%" height="15" fill="rgb(250,119,29)" fg:x="488" fg:w="3"/><text x="39.8283%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.6594%" y="469" width="0.1622%" height="15" fill="rgb(214,59,1)" fg:x="489" fg:w="2"/><text x="39.9094%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7405%" y="453" width="0.0811%" height="15" fill="rgb(223,109,25)" fg:x="490" fg:w="1"/><text x="39.9905%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="39.9838%" y="501" width="0.0811%" height="15" fill="rgb(230,198,22)" fg:x="493" fg:w="1"/><text x="40.2338%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="39.8216%" y="517" width="0.3244%" height="15" fill="rgb(245,184,46)" fg:x="491" fg:w="4"/><text x="40.0716%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.0649%" y="501" width="0.0811%" height="15" fill="rgb(253,73,16)" fg:x="494" fg:w="1"/><text x="40.3149%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (35 samples, 2.84%)</title><rect x="37.6318%" y="549" width="2.8386%" height="15" fill="rgb(206,94,45)" fg:x="464" fg:w="35"/><text x="37.8818%" y="559.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.60%)</title><rect x="37.8751%" y="533" width="2.5953%" height="15" fill="rgb(236,83,27)" fg:x="467" fg:w="32"/><text x="38.1251%" y="543.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="40.1460%" y="517" width="0.3244%" height="15" fill="rgb(220,196,8)" fg:x="495" fg:w="4"/><text x="40.3960%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="40.1460%" y="501" width="0.3244%" height="15" fill="rgb(254,185,14)" fg:x="495" fg:w="4"/><text x="40.3960%" y="511.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="40.1460%" y="485" width="0.3244%" height="15" fill="rgb(226,50,22)" fg:x="495" fg:w="4"/><text x="40.3960%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="40.5515%" y="533" width="0.2433%" height="15" fill="rgb(253,147,0)" fg:x="500" fg:w="3"/><text x="40.8015%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (7 samples, 0.57%)</title><rect x="40.4704%" y="549" width="0.5677%" height="15" fill="rgb(252,46,33)" fg:x="499" fg:w="7"/><text x="40.7204%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="40.7948%" y="533" width="0.2433%" height="15" fill="rgb(242,22,54)" fg:x="503" fg:w="3"/><text x="41.0448%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (46 samples, 3.73%)</title><rect x="37.5507%" y="613" width="3.7307%" height="15" fill="rgb(223,178,32)" fg:x="463" fg:w="46"/><text x="37.8007%" y="623.50">serd..</text></g><g><title>serde_json::de::from_trait (46 samples, 3.73%)</title><rect x="37.5507%" y="597" width="3.7307%" height="15" fill="rgb(214,106,53)" fg:x="463" fg:w="46"/><text x="37.8007%" y="607.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (45 samples, 3.65%)</title><rect x="37.6318%" y="581" width="3.6496%" height="15" fill="rgb(232,65,50)" fg:x="464" fg:w="45"/><text x="37.8818%" y="591.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (45 samples, 3.65%)</title><rect x="37.6318%" y="565" width="3.6496%" height="15" fill="rgb(231,110,28)" fg:x="464" fg:w="45"/><text x="37.8818%" y="575.50">&lt;ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.0381%" y="549" width="0.2433%" height="15" fill="rgb(216,71,40)" fg:x="506" fg:w="3"/><text x="41.2881%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.16%)</title><rect x="41.9303%" y="549" width="0.1622%" height="15" fill="rgb(229,89,53)" fg:x="517" fg:w="2"/><text x="42.1803%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="42.0114%" y="533" width="0.0811%" height="15" fill="rgb(210,124,14)" fg:x="518" fg:w="1"/><text x="42.2614%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.0114%" y="517" width="0.0811%" height="15" fill="rgb(236,213,6)" fg:x="518" fg:w="1"/><text x="42.2614%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="42.0925%" y="549" width="0.0811%" height="15" fill="rgb(228,41,5)" fg:x="519" fg:w="1"/><text x="42.3425%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.65%)</title><rect x="41.6058%" y="581" width="0.6488%" height="15" fill="rgb(221,167,25)" fg:x="513" fg:w="8"/><text x="41.8558%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="41.8491%" y="565" width="0.4055%" height="15" fill="rgb(228,144,37)" fg:x="516" fg:w="5"/><text x="42.0991%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.1736%" y="549" width="0.0811%" height="15" fill="rgb(227,189,38)" fg:x="520" fg:w="1"/><text x="42.4236%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.89%)</title><rect x="41.4436%" y="597" width="0.8921%" height="15" fill="rgb(218,8,2)" fg:x="511" fg:w="11"/><text x="41.6936%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.2547%" y="581" width="0.0811%" height="15" fill="rgb(209,61,28)" fg:x="521" fg:w="1"/><text x="42.5047%" y="591.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (184 samples, 14.92%)</title><rect x="27.4939%" y="661" width="14.9230%" height="15" fill="rgb(233,140,39)" fg:x="339" fg:w="184"/><text x="27.7439%" y="671.50">engine::internal::Entit..</text></g><g><title>engine::session::Session::check_for_changes (182 samples, 14.76%)</title><rect x="27.6561%" y="645" width="14.7607%" height="15" fill="rgb(251,66,48)" fg:x="341" fg:w="182"/><text x="27.9061%" y="655.50">engine::session::Sessio..</text></g><g><title>kernel::compare::any_entity_changes (138 samples, 11.19%)</title><rect x="31.2247%" y="629" width="11.1922%" height="15" fill="rgb(210,44,45)" fg:x="385" fg:w="138"/><text x="31.4747%" y="639.50">kernel::compare:..</text></g><g><title>treediff::diff::diff (14 samples, 1.14%)</title><rect x="41.2814%" y="613" width="1.1354%" height="15" fill="rgb(214,136,46)" fg:x="509" fg:w="14"/><text x="41.5314%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3358%" y="597" width="0.0811%" height="15" fill="rgb(207,130,50)" fg:x="522" fg:w="1"/><text x="42.5858%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="42.4169%" y="629" width="0.0811%" height="15" fill="rgb(228,102,49)" fg:x="523" fg:w="1"/><text x="42.6669%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4169%" y="613" width="0.0811%" height="15" fill="rgb(253,55,1)" fg:x="523" fg:w="1"/><text x="42.6669%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4169%" y="597" width="0.0811%" height="15" fill="rgb(238,222,9)" fg:x="523" fg:w="1"/><text x="42.6669%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.4169%" y="581" width="0.0811%" height="15" fill="rgb(246,99,6)" fg:x="523" fg:w="1"/><text x="42.6669%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.4169%" y="565" width="0.0811%" height="15" fill="rgb(219,110,26)" fg:x="523" fg:w="1"/><text x="42.6669%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.4169%" y="549" width="0.0811%" height="15" fill="rgb(239,160,33)" fg:x="523" fg:w="1"/><text x="42.6669%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.4169%" y="533" width="0.0811%" height="15" fill="rgb(220,202,23)" fg:x="523" fg:w="1"/><text x="42.6669%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.4169%" y="517" width="0.0811%" height="15" fill="rgb(208,80,26)" fg:x="523" fg:w="1"/><text x="42.6669%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="42.4169%" y="645" width="0.1622%" height="15" fill="rgb(243,85,7)" fg:x="523" fg:w="2"/><text x="42.6669%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="42.4980%" y="629" width="0.0811%" height="15" fill="rgb(228,77,47)" fg:x="524" fg:w="1"/><text x="42.7480%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.4980%" y="613" width="0.0811%" height="15" fill="rgb(212,226,8)" fg:x="524" fg:w="1"/><text x="42.7480%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.4980%" y="597" width="0.0811%" height="15" fill="rgb(241,120,54)" fg:x="524" fg:w="1"/><text x="42.7480%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.4980%" y="581" width="0.0811%" height="15" fill="rgb(226,80,16)" fg:x="524" fg:w="1"/><text x="42.7480%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.4980%" y="565" width="0.0811%" height="15" fill="rgb(240,76,13)" fg:x="524" fg:w="1"/><text x="42.7480%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="42.4980%" y="549" width="0.0811%" height="15" fill="rgb(252,74,8)" fg:x="524" fg:w="1"/><text x="42.7480%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="42.4980%" y="533" width="0.0811%" height="15" fill="rgb(244,155,2)" fg:x="524" fg:w="1"/><text x="42.7480%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.4980%" y="517" width="0.0811%" height="15" fill="rgb(215,81,35)" fg:x="524" fg:w="1"/><text x="42.7480%" y="527.50"></text></g><g><title>engine::session::Session::world (3 samples, 0.24%)</title><rect x="42.4169%" y="661" width="0.2433%" height="15" fill="rgb(206,55,2)" fg:x="523" fg:w="3"/><text x="42.6669%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5791%" y="645" width="0.0811%" height="15" fill="rgb(231,2,34)" fg:x="525" fg:w="1"/><text x="42.8291%" y="655.50"></text></g><g><title>engine::session::Session::save_entity_changes (200 samples, 16.22%)</title><rect x="26.5207%" y="677" width="16.2206%" height="15" fill="rgb(242,176,48)" fg:x="327" fg:w="200"/><text x="26.7707%" y="687.50">engine::session::Session:..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="42.6602%" y="661" width="0.0811%" height="15" fill="rgb(249,31,36)" fg:x="526" fg:w="1"/><text x="42.9102%" y="671.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="42.6602%" y="645" width="0.0811%" height="15" fill="rgb(205,18,17)" fg:x="526" fg:w="1"/><text x="42.9102%" y="655.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="42.6602%" y="629" width="0.0811%" height="15" fill="rgb(254,130,5)" fg:x="526" fg:w="1"/><text x="42.9102%" y="639.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="42.6602%" y="613" width="0.0811%" height="15" fill="rgb(229,42,45)" fg:x="526" fg:w="1"/><text x="42.9102%" y="623.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="42.6602%" y="597" width="0.0811%" height="15" fill="rgb(245,95,25)" fg:x="526" fg:w="1"/><text x="42.9102%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.6602%" y="581" width="0.0811%" height="15" fill="rgb(249,193,38)" fg:x="526" fg:w="1"/><text x="42.9102%" y="591.50"></text></g><g><title>engine::session::Session::close (202 samples, 16.38%)</title><rect x="26.4396%" y="693" width="16.3828%" height="15" fill="rgb(241,140,43)" fg:x="326" fg:w="202"/><text x="26.6896%" y="703.50">engine::session::Session:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="42.7413%" y="677" width="0.0811%" height="15" fill="rgb(245,78,48)" fg:x="527" fg:w="1"/><text x="42.9913%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::deliver (1 samples, 0.08%)</title><rect x="42.7413%" y="661" width="0.0811%" height="15" fill="rgb(214,92,39)" fg:x="527" fg:w="1"/><text x="42.9913%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="42.9035%" y="645" width="0.0811%" height="15" fill="rgb(211,189,14)" fg:x="529" fg:w="1"/><text x="43.1535%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.9035%" y="629" width="0.0811%" height="15" fill="rgb(218,7,24)" fg:x="529" fg:w="1"/><text x="43.1535%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="43.2279%" y="533" width="0.0811%" height="15" fill="rgb(224,200,49)" fg:x="533" fg:w="1"/><text x="43.4779%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="43.2279%" y="517" width="0.0811%" height="15" fill="rgb(218,210,14)" fg:x="533" fg:w="1"/><text x="43.4779%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (2 samples, 0.16%)</title><rect x="43.2279%" y="549" width="0.1622%" height="15" fill="rgb(234,142,31)" fg:x="533" fg:w="2"/><text x="43.4779%" y="559.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="43.3090%" y="533" width="0.0811%" height="15" fill="rgb(227,165,2)" fg:x="534" fg:w="1"/><text x="43.5590%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="43.3901%" y="549" width="0.0811%" height="15" fill="rgb(232,44,46)" fg:x="535" fg:w="1"/><text x="43.6401%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4712%" y="469" width="0.0811%" height="15" fill="rgb(236,149,47)" fg:x="536" fg:w="1"/><text x="43.7212%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.4712%" y="485" width="0.1622%" height="15" fill="rgb(227,45,31)" fg:x="536" fg:w="2"/><text x="43.7212%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.5523%" y="469" width="0.0811%" height="15" fill="rgb(240,176,51)" fg:x="537" fg:w="1"/><text x="43.8023%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="43.6334%" y="469" width="0.0811%" height="15" fill="rgb(249,146,41)" fg:x="538" fg:w="1"/><text x="43.8834%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6334%" y="453" width="0.0811%" height="15" fill="rgb(213,208,4)" fg:x="538" fg:w="1"/><text x="43.8834%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6334%" y="437" width="0.0811%" height="15" fill="rgb(245,84,36)" fg:x="538" fg:w="1"/><text x="43.8834%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.6334%" y="421" width="0.0811%" height="15" fill="rgb(254,84,18)" fg:x="538" fg:w="1"/><text x="43.8834%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.6334%" y="405" width="0.0811%" height="15" fill="rgb(225,38,54)" fg:x="538" fg:w="1"/><text x="43.8834%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.6334%" y="389" width="0.0811%" height="15" fill="rgb(246,50,30)" fg:x="538" fg:w="1"/><text x="43.8834%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.6334%" y="373" width="0.0811%" height="15" fill="rgb(246,148,9)" fg:x="538" fg:w="1"/><text x="43.8834%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.6334%" y="357" width="0.0811%" height="15" fill="rgb(223,75,4)" fg:x="538" fg:w="1"/><text x="43.8834%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.6334%" y="341" width="0.0811%" height="15" fill="rgb(239,148,41)" fg:x="538" fg:w="1"/><text x="43.8834%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.6334%" y="325" width="0.0811%" height="15" fill="rgb(205,195,3)" fg:x="538" fg:w="1"/><text x="43.8834%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.6334%" y="309" width="0.0811%" height="15" fill="rgb(254,161,1)" fg:x="538" fg:w="1"/><text x="43.8834%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.6334%" y="293" width="0.0811%" height="15" fill="rgb(211,229,8)" fg:x="538" fg:w="1"/><text x="43.8834%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.6334%" y="277" width="0.0811%" height="15" fill="rgb(220,97,9)" fg:x="538" fg:w="1"/><text x="43.8834%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="43.7145%" y="437" width="0.1622%" height="15" fill="rgb(240,218,8)" fg:x="539" fg:w="2"/><text x="43.9645%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="43.7145%" y="421" width="0.1622%" height="15" fill="rgb(250,44,0)" fg:x="539" fg:w="2"/><text x="43.9645%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.7145%" y="405" width="0.1622%" height="15" fill="rgb(236,41,53)" fg:x="539" fg:w="2"/><text x="43.9645%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.7145%" y="389" width="0.1622%" height="15" fill="rgb(218,227,13)" fg:x="539" fg:w="2"/><text x="43.9645%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.7145%" y="373" width="0.1622%" height="15" fill="rgb(217,94,32)" fg:x="539" fg:w="2"/><text x="43.9645%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.7145%" y="357" width="0.1622%" height="15" fill="rgb(213,217,12)" fg:x="539" fg:w="2"/><text x="43.9645%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.7956%" y="341" width="0.0811%" height="15" fill="rgb(229,13,46)" fg:x="540" fg:w="1"/><text x="44.0456%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.7956%" y="325" width="0.0811%" height="15" fill="rgb(243,139,5)" fg:x="540" fg:w="1"/><text x="44.0456%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.7956%" y="309" width="0.0811%" height="15" fill="rgb(249,38,45)" fg:x="540" fg:w="1"/><text x="44.0456%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="43.7956%" y="293" width="0.0811%" height="15" fill="rgb(216,70,11)" fg:x="540" fg:w="1"/><text x="44.0456%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.7956%" y="277" width="0.0811%" height="15" fill="rgb(253,101,25)" fg:x="540" fg:w="1"/><text x="44.0456%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.7956%" y="261" width="0.0811%" height="15" fill="rgb(207,197,30)" fg:x="540" fg:w="1"/><text x="44.0456%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.7956%" y="245" width="0.0811%" height="15" fill="rgb(238,87,13)" fg:x="540" fg:w="1"/><text x="44.0456%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7956%" y="229" width="0.0811%" height="15" fill="rgb(215,155,8)" fg:x="540" fg:w="1"/><text x="44.0456%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.0389%" y="357" width="0.0811%" height="15" fill="rgb(239,166,38)" fg:x="543" fg:w="1"/><text x="44.2889%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.0389%" y="341" width="0.0811%" height="15" fill="rgb(240,194,35)" fg:x="543" fg:w="1"/><text x="44.2889%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.3633%" y="325" width="0.0811%" height="15" fill="rgb(219,10,44)" fg:x="547" fg:w="1"/><text x="44.6133%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.3633%" y="309" width="0.0811%" height="15" fill="rgb(251,220,35)" fg:x="547" fg:w="1"/><text x="44.6133%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.89%)</title><rect x="43.6334%" y="485" width="0.8921%" height="15" fill="rgb(218,117,13)" fg:x="538" fg:w="11"/><text x="43.8834%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (10 samples, 0.81%)</title><rect x="43.7145%" y="469" width="0.8110%" height="15" fill="rgb(221,213,40)" fg:x="539" fg:w="10"/><text x="43.9645%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.81%)</title><rect x="43.7145%" y="453" width="0.8110%" height="15" fill="rgb(251,224,35)" fg:x="539" fg:w="10"/><text x="43.9645%" y="463.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.65%)</title><rect x="43.8767%" y="437" width="0.6488%" height="15" fill="rgb(241,33,39)" fg:x="541" fg:w="8"/><text x="44.1267%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="43.8767%" y="421" width="0.6488%" height="15" fill="rgb(222,74,17)" fg:x="541" fg:w="8"/><text x="44.1267%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="43.8767%" y="405" width="0.6488%" height="15" fill="rgb(225,103,0)" fg:x="541" fg:w="8"/><text x="44.1267%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="43.9578%" y="389" width="0.5677%" height="15" fill="rgb(240,0,12)" fg:x="542" fg:w="7"/><text x="44.2078%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="43.9578%" y="373" width="0.5677%" height="15" fill="rgb(233,213,37)" fg:x="542" fg:w="7"/><text x="44.2078%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="44.1200%" y="357" width="0.4055%" height="15" fill="rgb(225,84,52)" fg:x="544" fg:w="5"/><text x="44.3700%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="44.2822%" y="341" width="0.2433%" height="15" fill="rgb(247,160,51)" fg:x="546" fg:w="3"/><text x="44.5322%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.4444%" y="325" width="0.0811%" height="15" fill="rgb(244,60,51)" fg:x="548" fg:w="1"/><text x="44.6944%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.4444%" y="309" width="0.0811%" height="15" fill="rgb(233,114,7)" fg:x="548" fg:w="1"/><text x="44.6944%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.4444%" y="293" width="0.0811%" height="15" fill="rgb(246,136,16)" fg:x="548" fg:w="1"/><text x="44.6944%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.5255%" y="485" width="0.0811%" height="15" fill="rgb(243,114,45)" fg:x="549" fg:w="1"/><text x="44.7755%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (15 samples, 1.22%)</title><rect x="43.4712%" y="533" width="1.2165%" height="15" fill="rgb(247,183,43)" fg:x="536" fg:w="15"/><text x="43.7212%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.22%)</title><rect x="43.4712%" y="517" width="1.2165%" height="15" fill="rgb(251,210,42)" fg:x="536" fg:w="15"/><text x="43.7212%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (15 samples, 1.22%)</title><rect x="43.4712%" y="501" width="1.2165%" height="15" fill="rgb(221,88,35)" fg:x="536" fg:w="15"/><text x="43.7212%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.6067%" y="485" width="0.0811%" height="15" fill="rgb(242,21,20)" fg:x="550" fg:w="1"/><text x="44.8567%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.6067%" y="469" width="0.0811%" height="15" fill="rgb(233,226,36)" fg:x="550" fg:w="1"/><text x="44.8567%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="44.6067%" y="453" width="0.0811%" height="15" fill="rgb(243,189,34)" fg:x="550" fg:w="1"/><text x="44.8567%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="44.6878%" y="501" width="0.0811%" height="15" fill="rgb(207,145,50)" fg:x="551" fg:w="1"/><text x="44.9378%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="44.6878%" y="485" width="0.0811%" height="15" fill="rgb(242,1,50)" fg:x="551" fg:w="1"/><text x="44.9378%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6878%" y="469" width="0.0811%" height="15" fill="rgb(231,65,32)" fg:x="551" fg:w="1"/><text x="44.9378%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6878%" y="453" width="0.0811%" height="15" fill="rgb(208,68,49)" fg:x="551" fg:w="1"/><text x="44.9378%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6878%" y="437" width="0.0811%" height="15" fill="rgb(253,54,49)" fg:x="551" fg:w="1"/><text x="44.9378%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.6878%" y="421" width="0.0811%" height="15" fill="rgb(245,186,24)" fg:x="551" fg:w="1"/><text x="44.9378%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.6878%" y="405" width="0.0811%" height="15" fill="rgb(209,2,41)" fg:x="551" fg:w="1"/><text x="44.9378%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.6878%" y="389" width="0.0811%" height="15" fill="rgb(242,208,54)" fg:x="551" fg:w="1"/><text x="44.9378%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6878%" y="373" width="0.0811%" height="15" fill="rgb(225,9,51)" fg:x="551" fg:w="1"/><text x="44.9378%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6878%" y="357" width="0.0811%" height="15" fill="rgb(207,207,25)" fg:x="551" fg:w="1"/><text x="44.9378%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.6878%" y="341" width="0.0811%" height="15" fill="rgb(253,96,18)" fg:x="551" fg:w="1"/><text x="44.9378%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.6878%" y="325" width="0.0811%" height="15" fill="rgb(252,215,20)" fg:x="551" fg:w="1"/><text x="44.9378%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.6878%" y="309" width="0.0811%" height="15" fill="rgb(245,227,26)" fg:x="551" fg:w="1"/><text x="44.9378%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.6878%" y="293" width="0.0811%" height="15" fill="rgb(241,208,0)" fg:x="551" fg:w="1"/><text x="44.9378%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6878%" y="277" width="0.0811%" height="15" fill="rgb(224,130,10)" fg:x="551" fg:w="1"/><text x="44.9378%" y="287.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (17 samples, 1.38%)</title><rect x="43.4712%" y="549" width="1.3788%" height="15" fill="rgb(237,29,0)" fg:x="536" fg:w="17"/><text x="43.7212%" y="559.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="44.6878%" y="533" width="0.1622%" height="15" fill="rgb(219,27,41)" fg:x="551" fg:w="2"/><text x="44.9378%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="44.6878%" y="517" width="0.1622%" height="15" fill="rgb(245,101,19)" fg:x="551" fg:w="2"/><text x="44.9378%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="44.7689%" y="501" width="0.0811%" height="15" fill="rgb(243,44,37)" fg:x="552" fg:w="1"/><text x="45.0189%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="44.7689%" y="485" width="0.0811%" height="15" fill="rgb(228,213,43)" fg:x="552" fg:w="1"/><text x="45.0189%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="44.7689%" y="469" width="0.0811%" height="15" fill="rgb(219,163,21)" fg:x="552" fg:w="1"/><text x="45.0189%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.7689%" y="453" width="0.0811%" height="15" fill="rgb(234,86,24)" fg:x="552" fg:w="1"/><text x="45.0189%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.7689%" y="437" width="0.0811%" height="15" fill="rgb(225,10,24)" fg:x="552" fg:w="1"/><text x="45.0189%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="44.7689%" y="421" width="0.0811%" height="15" fill="rgb(218,109,7)" fg:x="552" fg:w="1"/><text x="45.0189%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="44.7689%" y="405" width="0.0811%" height="15" fill="rgb(210,20,26)" fg:x="552" fg:w="1"/><text x="45.0189%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.7689%" y="389" width="0.0811%" height="15" fill="rgb(216,18,1)" fg:x="552" fg:w="1"/><text x="45.0189%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.7689%" y="373" width="0.0811%" height="15" fill="rgb(206,163,23)" fg:x="552" fg:w="1"/><text x="45.0189%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="44.7689%" y="357" width="0.0811%" height="15" fill="rgb(229,150,31)" fg:x="552" fg:w="1"/><text x="45.0189%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="44.7689%" y="341" width="0.0811%" height="15" fill="rgb(231,10,5)" fg:x="552" fg:w="1"/><text x="45.0189%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="45.2555%" y="437" width="0.0811%" height="15" fill="rgb(250,40,50)" fg:x="558" fg:w="1"/><text x="45.5055%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="45.2555%" y="421" width="0.0811%" height="15" fill="rgb(217,119,7)" fg:x="558" fg:w="1"/><text x="45.5055%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="45.2555%" y="453" width="0.6488%" height="15" fill="rgb(245,214,40)" fg:x="558" fg:w="8"/><text x="45.5055%" y="463.50"></text></g><g><title>__libc_free (7 samples, 0.57%)</title><rect x="45.3366%" y="437" width="0.5677%" height="15" fill="rgb(216,187,1)" fg:x="559" fg:w="7"/><text x="45.5866%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.9043%" y="453" width="0.1622%" height="15" fill="rgb(237,146,21)" fg:x="566" fg:w="2"/><text x="46.1543%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.1476%" y="421" width="0.1622%" height="15" fill="rgb(210,174,47)" fg:x="569" fg:w="2"/><text x="46.3976%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.22%)</title><rect x="45.1744%" y="469" width="1.2165%" height="15" fill="rgb(218,111,39)" fg:x="557" fg:w="15"/><text x="45.4244%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (4 samples, 0.32%)</title><rect x="46.0665%" y="453" width="0.3244%" height="15" fill="rgb(224,95,19)" fg:x="568" fg:w="4"/><text x="46.3165%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="46.0665%" y="437" width="0.3244%" height="15" fill="rgb(234,15,38)" fg:x="568" fg:w="4"/><text x="46.3165%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="46.3098%" y="421" width="0.0811%" height="15" fill="rgb(246,56,12)" fg:x="571" fg:w="1"/><text x="46.5598%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.54%)</title><rect x="45.0933%" y="485" width="1.5410%" height="15" fill="rgb(247,16,17)" fg:x="556" fg:w="19"/><text x="45.3433%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="46.3909%" y="469" width="0.2433%" height="15" fill="rgb(215,151,11)" fg:x="572" fg:w="3"/><text x="46.6409%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.11%)</title><rect x="44.9311%" y="501" width="2.1087%" height="15" fill="rgb(225,16,24)" fg:x="554" fg:w="26"/><text x="45.1811%" y="511.50">&lt;..</text></g><g><title>__libc_free (5 samples, 0.41%)</title><rect x="46.6342%" y="485" width="0.4055%" height="15" fill="rgb(217,117,5)" fg:x="575" fg:w="5"/><text x="46.8842%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (27 samples, 2.19%)</title><rect x="44.9311%" y="517" width="2.1898%" height="15" fill="rgb(246,187,53)" fg:x="554" fg:w="27"/><text x="45.1811%" y="527.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.0397%" y="501" width="0.0811%" height="15" fill="rgb(241,71,40)" fg:x="580" fg:w="1"/><text x="47.2897%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="47.3642%" y="469" width="0.1622%" height="15" fill="rgb(231,67,39)" fg:x="584" fg:w="2"/><text x="47.6142%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.4453%" y="453" width="0.0811%" height="15" fill="rgb(222,120,24)" fg:x="585" fg:w="1"/><text x="47.6953%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.5264%" y="469" width="0.1622%" height="15" fill="rgb(248,3,3)" fg:x="586" fg:w="2"/><text x="47.7764%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="47.6886%" y="469" width="0.0811%" height="15" fill="rgb(228,218,5)" fg:x="588" fg:w="1"/><text x="47.9386%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.6886%" y="453" width="0.0811%" height="15" fill="rgb(212,202,43)" fg:x="588" fg:w="1"/><text x="47.9386%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="47.2019%" y="485" width="0.8110%" height="15" fill="rgb(235,183,2)" fg:x="582" fg:w="10"/><text x="47.4519%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.24%)</title><rect x="47.7697%" y="469" width="0.2433%" height="15" fill="rgb(230,165,10)" fg:x="589" fg:w="3"/><text x="48.0197%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="47.7697%" y="453" width="0.2433%" height="15" fill="rgb(219,54,40)" fg:x="589" fg:w="3"/><text x="48.0197%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="47.7697%" y="437" width="0.2433%" height="15" fill="rgb(244,73,9)" fg:x="589" fg:w="3"/><text x="48.0197%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="47.8508%" y="421" width="0.1622%" height="15" fill="rgb(212,32,45)" fg:x="590" fg:w="2"/><text x="48.1008%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.9319%" y="405" width="0.0811%" height="15" fill="rgb(205,58,31)" fg:x="591" fg:w="1"/><text x="48.1819%" y="415.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="47.9319%" y="389" width="0.0811%" height="15" fill="rgb(250,120,43)" fg:x="591" fg:w="1"/><text x="48.1819%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.0941%" y="453" width="0.0811%" height="15" fill="rgb(235,13,10)" fg:x="593" fg:w="1"/><text x="48.3441%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.0941%" y="437" width="0.0811%" height="15" fill="rgb(232,219,31)" fg:x="593" fg:w="1"/><text x="48.3441%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.24%)</title><rect x="48.0130%" y="485" width="0.2433%" height="15" fill="rgb(218,157,51)" fg:x="592" fg:w="3"/><text x="48.2630%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="48.0130%" y="469" width="0.2433%" height="15" fill="rgb(211,91,52)" fg:x="592" fg:w="3"/><text x="48.2630%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.1752%" y="453" width="0.0811%" height="15" fill="rgb(240,173,1)" fg:x="594" fg:w="1"/><text x="48.4252%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="48.1752%" y="437" width="0.0811%" height="15" fill="rgb(248,20,47)" fg:x="594" fg:w="1"/><text x="48.4252%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.1752%" y="421" width="0.0811%" height="15" fill="rgb(217,221,40)" fg:x="594" fg:w="1"/><text x="48.4252%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="48.2563%" y="453" width="0.2433%" height="15" fill="rgb(226,149,51)" fg:x="595" fg:w="3"/><text x="48.5063%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="48.2563%" y="485" width="0.3244%" height="15" fill="rgb(252,193,7)" fg:x="595" fg:w="4"/><text x="48.5063%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="48.2563%" y="469" width="0.3244%" height="15" fill="rgb(205,123,0)" fg:x="595" fg:w="4"/><text x="48.5063%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="48.4996%" y="453" width="0.0811%" height="15" fill="rgb(233,173,25)" fg:x="598" fg:w="1"/><text x="48.7496%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="48.4996%" y="437" width="0.0811%" height="15" fill="rgb(216,63,32)" fg:x="598" fg:w="1"/><text x="48.7496%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4996%" y="421" width="0.0811%" height="15" fill="rgb(209,56,45)" fg:x="598" fg:w="1"/><text x="48.7496%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="49.0673%" y="421" width="0.0811%" height="15" fill="rgb(226,111,49)" fg:x="605" fg:w="1"/><text x="49.3173%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.0673%" y="405" width="0.0811%" height="15" fill="rgb(244,181,21)" fg:x="605" fg:w="1"/><text x="49.3173%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="49.5539%" y="117" width="0.1622%" height="15" fill="rgb(222,126,15)" fg:x="611" fg:w="2"/><text x="49.8039%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="49.5539%" y="101" width="0.1622%" height="15" fill="rgb(222,95,17)" fg:x="611" fg:w="2"/><text x="49.8039%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="49.5539%" y="85" width="0.1622%" height="15" fill="rgb(254,46,5)" fg:x="611" fg:w="2"/><text x="49.8039%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="49.5539%" y="69" width="0.1622%" height="15" fill="rgb(236,216,35)" fg:x="611" fg:w="2"/><text x="49.8039%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.6350%" y="53" width="0.0811%" height="15" fill="rgb(217,187,26)" fg:x="612" fg:w="1"/><text x="49.8850%" y="63.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="49.6350%" y="37" width="0.0811%" height="15" fill="rgb(207,192,25)" fg:x="612" fg:w="1"/><text x="49.8850%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="49.3106%" y="405" width="0.4866%" height="15" fill="rgb(253,135,27)" fg:x="608" fg:w="6"/><text x="49.5606%" y="415.50"></text></g><g><title>kernel::model::EntityRef::into_entry (4 samples, 0.32%)</title><rect x="49.4728%" y="389" width="0.3244%" height="15" fill="rgb(211,122,29)" fg:x="610" fg:w="4"/><text x="49.7228%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="49.5539%" y="373" width="0.2433%" height="15" fill="rgb(233,162,40)" fg:x="611" fg:w="3"/><text x="49.8039%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="49.5539%" y="357" width="0.2433%" height="15" fill="rgb(222,184,47)" fg:x="611" fg:w="3"/><text x="49.8039%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="49.5539%" y="341" width="0.2433%" height="15" fill="rgb(249,99,23)" fg:x="611" fg:w="3"/><text x="49.8039%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="49.5539%" y="325" width="0.2433%" height="15" fill="rgb(214,60,12)" fg:x="611" fg:w="3"/><text x="49.8039%" y="335.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="49.5539%" y="309" width="0.2433%" height="15" fill="rgb(250,229,36)" fg:x="611" fg:w="3"/><text x="49.8039%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="49.5539%" y="293" width="0.2433%" height="15" fill="rgb(232,195,10)" fg:x="611" fg:w="3"/><text x="49.8039%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="49.5539%" y="277" width="0.2433%" height="15" fill="rgb(205,213,31)" fg:x="611" fg:w="3"/><text x="49.8039%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="49.5539%" y="261" width="0.2433%" height="15" fill="rgb(237,43,8)" fg:x="611" fg:w="3"/><text x="49.8039%" y="271.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="49.5539%" y="245" width="0.2433%" height="15" fill="rgb(216,208,3)" fg:x="611" fg:w="3"/><text x="49.8039%" y="255.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="49.5539%" y="229" width="0.2433%" height="15" fill="rgb(228,179,44)" fg:x="611" fg:w="3"/><text x="49.8039%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="49.5539%" y="213" width="0.2433%" height="15" fill="rgb(230,192,27)" fg:x="611" fg:w="3"/><text x="49.8039%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="49.5539%" y="197" width="0.2433%" height="15" fill="rgb(251,30,38)" fg:x="611" fg:w="3"/><text x="49.8039%" y="207.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.24%)</title><rect x="49.5539%" y="181" width="0.2433%" height="15" fill="rgb(246,55,52)" fg:x="611" fg:w="3"/><text x="49.8039%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.24%)</title><rect x="49.5539%" y="165" width="0.2433%" height="15" fill="rgb(249,79,26)" fg:x="611" fg:w="3"/><text x="49.8039%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.24%)</title><rect x="49.5539%" y="149" width="0.2433%" height="15" fill="rgb(220,202,16)" fg:x="611" fg:w="3"/><text x="49.8039%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.24%)</title><rect x="49.5539%" y="133" width="0.2433%" height="15" fill="rgb(250,170,23)" fg:x="611" fg:w="3"/><text x="49.8039%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.7161%" y="117" width="0.0811%" height="15" fill="rgb(230,7,37)" fg:x="613" fg:w="1"/><text x="49.9661%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="49.7972%" y="389" width="0.1622%" height="15" fill="rgb(213,71,1)" fg:x="614" fg:w="2"/><text x="50.0472%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="49.7972%" y="373" width="0.1622%" height="15" fill="rgb(227,87,39)" fg:x="614" fg:w="2"/><text x="50.0472%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.7972%" y="357" width="0.1622%" height="15" fill="rgb(210,41,29)" fg:x="614" fg:w="2"/><text x="50.0472%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0406%" y="373" width="0.0811%" height="15" fill="rgb(206,191,31)" fg:x="617" fg:w="1"/><text x="50.2906%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0406%" y="357" width="0.0811%" height="15" fill="rgb(247,75,54)" fg:x="617" fg:w="1"/><text x="50.2906%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.0406%" y="341" width="0.0811%" height="15" fill="rgb(208,54,50)" fg:x="617" fg:w="1"/><text x="50.2906%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.0406%" y="325" width="0.0811%" height="15" fill="rgb(214,90,37)" fg:x="617" fg:w="1"/><text x="50.2906%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.0406%" y="309" width="0.0811%" height="15" fill="rgb(220,132,6)" fg:x="617" fg:w="1"/><text x="50.2906%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.0406%" y="293" width="0.0811%" height="15" fill="rgb(213,167,7)" fg:x="617" fg:w="1"/><text x="50.2906%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.0406%" y="277" width="0.0811%" height="15" fill="rgb(243,36,27)" fg:x="617" fg:w="1"/><text x="50.2906%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.0406%" y="261" width="0.0811%" height="15" fill="rgb(235,147,12)" fg:x="617" fg:w="1"/><text x="50.2906%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.0406%" y="245" width="0.0811%" height="15" fill="rgb(212,198,44)" fg:x="617" fg:w="1"/><text x="50.2906%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.0406%" y="229" width="0.0811%" height="15" fill="rgb(218,68,50)" fg:x="617" fg:w="1"/><text x="50.2906%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.0406%" y="213" width="0.0811%" height="15" fill="rgb(224,79,48)" fg:x="617" fg:w="1"/><text x="50.2906%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0406%" y="197" width="0.0811%" height="15" fill="rgb(213,191,50)" fg:x="617" fg:w="1"/><text x="50.2906%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.1217%" y="341" width="0.1622%" height="15" fill="rgb(254,146,10)" fg:x="618" fg:w="2"/><text x="50.3717%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.1217%" y="325" width="0.1622%" height="15" fill="rgb(215,175,11)" fg:x="618" fg:w="2"/><text x="50.3717%" y="335.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="50.2839%" y="229" width="0.0811%" height="15" fill="rgb(207,49,7)" fg:x="620" fg:w="1"/><text x="50.5339%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.3650%" y="229" width="0.0811%" height="15" fill="rgb(234,144,29)" fg:x="621" fg:w="1"/><text x="50.6150%" y="239.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="50.2839%" y="293" width="0.2433%" height="15" fill="rgb(213,222,48)" fg:x="620" fg:w="3"/><text x="50.5339%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="50.2839%" y="277" width="0.2433%" height="15" fill="rgb(222,8,6)" fg:x="620" fg:w="3"/><text x="50.5339%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.2839%" y="261" width="0.2433%" height="15" fill="rgb(221,114,49)" fg:x="620" fg:w="3"/><text x="50.5339%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.2839%" y="245" width="0.2433%" height="15" fill="rgb(250,140,42)" fg:x="620" fg:w="3"/><text x="50.5339%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.4461%" y="229" width="0.0811%" height="15" fill="rgb(250,150,27)" fg:x="622" fg:w="1"/><text x="50.6961%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.4461%" y="213" width="0.0811%" height="15" fill="rgb(252,159,3)" fg:x="622" fg:w="1"/><text x="50.6961%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.5272%" y="229" width="0.0811%" height="15" fill="rgb(241,182,3)" fg:x="623" fg:w="1"/><text x="50.7772%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="50.5272%" y="245" width="0.1622%" height="15" fill="rgb(236,3,9)" fg:x="623" fg:w="2"/><text x="50.7772%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6083%" y="229" width="0.0811%" height="15" fill="rgb(223,227,51)" fg:x="624" fg:w="1"/><text x="50.8583%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.7705%" y="133" width="0.0811%" height="15" fill="rgb(232,133,30)" fg:x="626" fg:w="1"/><text x="51.0205%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.65%)</title><rect x="50.2839%" y="341" width="0.6488%" height="15" fill="rgb(209,93,27)" fg:x="620" fg:w="8"/><text x="50.5339%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.65%)</title><rect x="50.2839%" y="325" width="0.6488%" height="15" fill="rgb(208,108,34)" fg:x="620" fg:w="8"/><text x="50.5339%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.65%)</title><rect x="50.2839%" y="309" width="0.6488%" height="15" fill="rgb(215,189,13)" fg:x="620" fg:w="8"/><text x="50.5339%" y="319.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="50.5272%" y="293" width="0.4055%" height="15" fill="rgb(206,88,23)" fg:x="623" fg:w="5"/><text x="50.7772%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="50.5272%" y="277" width="0.4055%" height="15" fill="rgb(240,173,0)" fg:x="623" fg:w="5"/><text x="50.7772%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="50.5272%" y="261" width="0.4055%" height="15" fill="rgb(223,106,52)" fg:x="623" fg:w="5"/><text x="50.7772%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="50.6894%" y="245" width="0.2433%" height="15" fill="rgb(206,130,16)" fg:x="625" fg:w="3"/><text x="50.9394%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.6894%" y="229" width="0.2433%" height="15" fill="rgb(220,54,25)" fg:x="625" fg:w="3"/><text x="50.9394%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="50.6894%" y="213" width="0.2433%" height="15" fill="rgb(210,4,38)" fg:x="625" fg:w="3"/><text x="50.9394%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.6894%" y="197" width="0.2433%" height="15" fill="rgb(238,94,39)" fg:x="625" fg:w="3"/><text x="50.9394%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="50.6894%" y="181" width="0.2433%" height="15" fill="rgb(234,124,34)" fg:x="625" fg:w="3"/><text x="50.9394%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.7705%" y="165" width="0.1622%" height="15" fill="rgb(221,91,40)" fg:x="626" fg:w="2"/><text x="51.0205%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="50.7705%" y="149" width="0.1622%" height="15" fill="rgb(246,53,28)" fg:x="626" fg:w="2"/><text x="51.0205%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.8516%" y="133" width="0.0811%" height="15" fill="rgb(229,109,7)" fg:x="627" fg:w="1"/><text x="51.1016%" y="143.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 1.87%)</title><rect x="49.1484%" y="421" width="1.8654%" height="15" fill="rgb(249,117,8)" fg:x="606" fg:w="23"/><text x="49.3984%" y="431.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (15 samples, 1.22%)</title><rect x="49.7972%" y="405" width="1.2165%" height="15" fill="rgb(210,181,1)" fg:x="614" fg:w="15"/><text x="50.0472%" y="415.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (13 samples, 1.05%)</title><rect x="49.9594%" y="389" width="1.0543%" height="15" fill="rgb(211,66,1)" fg:x="616" fg:w="13"/><text x="50.2094%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (11 samples, 0.89%)</title><rect x="50.1217%" y="373" width="0.8921%" height="15" fill="rgb(221,90,14)" fg:x="618" fg:w="11"/><text x="50.3717%" y="383.50"></text></g><g><title>kernel::model::Entity::load_scope (11 samples, 0.89%)</title><rect x="50.1217%" y="357" width="0.8921%" height="15" fill="rgb(219,222,44)" fg:x="618" fg:w="11"/><text x="50.3717%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.9327%" y="341" width="0.0811%" height="15" fill="rgb(246,34,33)" fg:x="628" fg:w="1"/><text x="51.1827%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9327%" y="325" width="0.0811%" height="15" fill="rgb(227,135,41)" fg:x="628" fg:w="1"/><text x="51.1827%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.9327%" y="309" width="0.0811%" height="15" fill="rgb(226,15,14)" fg:x="628" fg:w="1"/><text x="51.1827%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9327%" y="293" width="0.0811%" height="15" fill="rgb(236,148,47)" fg:x="628" fg:w="1"/><text x="51.1827%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.9327%" y="277" width="0.0811%" height="15" fill="rgb(233,162,52)" fg:x="628" fg:w="1"/><text x="51.1827%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0949%" y="373" width="0.0811%" height="15" fill="rgb(244,35,28)" fg:x="630" fg:w="1"/><text x="51.3449%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0949%" y="357" width="0.0811%" height="15" fill="rgb(205,121,10)" fg:x="630" fg:w="1"/><text x="51.3449%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.0949%" y="341" width="0.0811%" height="15" fill="rgb(250,58,18)" fg:x="630" fg:w="1"/><text x="51.3449%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.0949%" y="325" width="0.0811%" height="15" fill="rgb(216,37,13)" fg:x="630" fg:w="1"/><text x="51.3449%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.0949%" y="309" width="0.0811%" height="15" fill="rgb(221,215,42)" fg:x="630" fg:w="1"/><text x="51.3449%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.0949%" y="293" width="0.0811%" height="15" fill="rgb(217,214,19)" fg:x="630" fg:w="1"/><text x="51.3449%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.0949%" y="277" width="0.0811%" height="15" fill="rgb(233,139,13)" fg:x="630" fg:w="1"/><text x="51.3449%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.0949%" y="261" width="0.0811%" height="15" fill="rgb(247,168,23)" fg:x="630" fg:w="1"/><text x="51.3449%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.0949%" y="245" width="0.0811%" height="15" fill="rgb(207,202,1)" fg:x="630" fg:w="1"/><text x="51.3449%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.0949%" y="229" width="0.0811%" height="15" fill="rgb(220,155,48)" fg:x="630" fg:w="1"/><text x="51.3449%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.0949%" y="213" width="0.0811%" height="15" fill="rgb(250,43,26)" fg:x="630" fg:w="1"/><text x="51.3449%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0949%" y="197" width="0.0811%" height="15" fill="rgb(212,190,23)" fg:x="630" fg:w="1"/><text x="51.3449%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.0949%" y="389" width="0.1622%" height="15" fill="rgb(216,39,24)" fg:x="630" fg:w="2"/><text x="51.3449%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1760%" y="373" width="0.0811%" height="15" fill="rgb(252,113,16)" fg:x="631" fg:w="1"/><text x="51.4260%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.1760%" y="357" width="0.0811%" height="15" fill="rgb(208,113,19)" fg:x="631" fg:w="1"/><text x="51.4260%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1760%" y="341" width="0.0811%" height="15" fill="rgb(234,107,25)" fg:x="631" fg:w="1"/><text x="51.4260%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1760%" y="325" width="0.0811%" height="15" fill="rgb(234,217,51)" fg:x="631" fg:w="1"/><text x="51.4260%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.1760%" y="309" width="0.0811%" height="15" fill="rgb(251,29,42)" fg:x="631" fg:w="1"/><text x="51.4260%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.1760%" y="293" width="0.0811%" height="15" fill="rgb(221,62,51)" fg:x="631" fg:w="1"/><text x="51.4260%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.1760%" y="277" width="0.0811%" height="15" fill="rgb(240,192,43)" fg:x="631" fg:w="1"/><text x="51.4260%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.1760%" y="261" width="0.0811%" height="15" fill="rgb(224,157,47)" fg:x="631" fg:w="1"/><text x="51.4260%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.1760%" y="245" width="0.0811%" height="15" fill="rgb(226,84,45)" fg:x="631" fg:w="1"/><text x="51.4260%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.1760%" y="229" width="0.0811%" height="15" fill="rgb(208,207,23)" fg:x="631" fg:w="1"/><text x="51.4260%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.1760%" y="213" width="0.0811%" height="15" fill="rgb(253,34,51)" fg:x="631" fg:w="1"/><text x="51.4260%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.1760%" y="197" width="0.0811%" height="15" fill="rgb(227,26,34)" fg:x="631" fg:w="1"/><text x="51.4260%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.1760%" y="181" width="0.0811%" height="15" fill="rgb(245,75,19)" fg:x="631" fg:w="1"/><text x="51.4260%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1760%" y="165" width="0.0811%" height="15" fill="rgb(250,191,31)" fg:x="631" fg:w="1"/><text x="51.4260%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="51.2571%" y="325" width="0.0811%" height="15" fill="rgb(224,11,50)" fg:x="632" fg:w="1"/><text x="51.5071%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2571%" y="309" width="0.0811%" height="15" fill="rgb(231,171,7)" fg:x="632" fg:w="1"/><text x="51.5071%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2571%" y="293" width="0.0811%" height="15" fill="rgb(252,214,10)" fg:x="632" fg:w="1"/><text x="51.5071%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.2571%" y="277" width="0.0811%" height="15" fill="rgb(249,45,46)" fg:x="632" fg:w="1"/><text x="51.5071%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.2571%" y="261" width="0.0811%" height="15" fill="rgb(240,173,7)" fg:x="632" fg:w="1"/><text x="51.5071%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.2571%" y="245" width="0.0811%" height="15" fill="rgb(235,214,13)" fg:x="632" fg:w="1"/><text x="51.5071%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2571%" y="229" width="0.0811%" height="15" fill="rgb(245,156,8)" fg:x="632" fg:w="1"/><text x="51.5071%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2571%" y="213" width="0.0811%" height="15" fill="rgb(235,46,12)" fg:x="632" fg:w="1"/><text x="51.5071%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.2571%" y="197" width="0.0811%" height="15" fill="rgb(221,81,14)" fg:x="632" fg:w="1"/><text x="51.5071%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.2571%" y="181" width="0.0811%" height="15" fill="rgb(238,207,9)" fg:x="632" fg:w="1"/><text x="51.5071%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.2571%" y="165" width="0.0811%" height="15" fill="rgb(224,129,35)" fg:x="632" fg:w="1"/><text x="51.5071%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.2571%" y="149" width="0.0811%" height="15" fill="rgb(243,218,34)" fg:x="632" fg:w="1"/><text x="51.5071%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2571%" y="133" width="0.0811%" height="15" fill="rgb(220,166,13)" fg:x="632" fg:w="1"/><text x="51.5071%" y="143.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="51.2571%" y="389" width="0.3244%" height="15" fill="rgb(227,167,49)" fg:x="632" fg:w="4"/><text x="51.5071%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="51.2571%" y="373" width="0.3244%" height="15" fill="rgb(234,142,12)" fg:x="632" fg:w="4"/><text x="51.5071%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="51.2571%" y="357" width="0.3244%" height="15" fill="rgb(207,100,48)" fg:x="632" fg:w="4"/><text x="51.5071%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="51.2571%" y="341" width="0.3244%" height="15" fill="rgb(210,25,14)" fg:x="632" fg:w="4"/><text x="51.5071%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.24%)</title><rect x="51.3382%" y="325" width="0.2433%" height="15" fill="rgb(246,116,27)" fg:x="633" fg:w="3"/><text x="51.5882%" y="335.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="51.3382%" y="309" width="0.2433%" height="15" fill="rgb(214,193,42)" fg:x="633" fg:w="3"/><text x="51.5882%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.5004%" y="293" width="0.0811%" height="15" fill="rgb(214,122,8)" fg:x="635" fg:w="1"/><text x="51.7504%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.5004%" y="277" width="0.0811%" height="15" fill="rgb(244,173,18)" fg:x="635" fg:w="1"/><text x="51.7504%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.5004%" y="261" width="0.0811%" height="15" fill="rgb(232,68,19)" fg:x="635" fg:w="1"/><text x="51.7504%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.5004%" y="245" width="0.0811%" height="15" fill="rgb(236,224,1)" fg:x="635" fg:w="1"/><text x="51.7504%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.5004%" y="229" width="0.0811%" height="15" fill="rgb(240,11,8)" fg:x="635" fg:w="1"/><text x="51.7504%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.5004%" y="213" width="0.0811%" height="15" fill="rgb(244,159,20)" fg:x="635" fg:w="1"/><text x="51.7504%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5004%" y="197" width="0.0811%" height="15" fill="rgb(240,223,54)" fg:x="635" fg:w="1"/><text x="51.7504%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5004%" y="181" width="0.0811%" height="15" fill="rgb(237,146,5)" fg:x="635" fg:w="1"/><text x="51.7504%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.5004%" y="165" width="0.0811%" height="15" fill="rgb(218,221,32)" fg:x="635" fg:w="1"/><text x="51.7504%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.5004%" y="149" width="0.0811%" height="15" fill="rgb(244,96,26)" fg:x="635" fg:w="1"/><text x="51.7504%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.5004%" y="133" width="0.0811%" height="15" fill="rgb(245,184,37)" fg:x="635" fg:w="1"/><text x="51.7504%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.5004%" y="117" width="0.0811%" height="15" fill="rgb(248,91,47)" fg:x="635" fg:w="1"/><text x="51.7504%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5004%" y="101" width="0.0811%" height="15" fill="rgb(243,199,8)" fg:x="635" fg:w="1"/><text x="51.7504%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.5815%" y="389" width="0.0811%" height="15" fill="rgb(249,12,15)" fg:x="636" fg:w="1"/><text x="51.8315%" y="399.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="51.6626%" y="389" width="0.0811%" height="15" fill="rgb(245,97,12)" fg:x="637" fg:w="1"/><text x="51.9126%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.8248%" y="357" width="0.0811%" height="15" fill="rgb(244,61,1)" fg:x="639" fg:w="1"/><text x="52.0748%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8248%" y="341" width="0.0811%" height="15" fill="rgb(222,194,10)" fg:x="639" fg:w="1"/><text x="52.0748%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.8248%" y="325" width="0.0811%" height="15" fill="rgb(226,178,8)" fg:x="639" fg:w="1"/><text x="52.0748%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.8248%" y="309" width="0.0811%" height="15" fill="rgb(241,32,34)" fg:x="639" fg:w="1"/><text x="52.0748%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.0681%" y="309" width="0.1622%" height="15" fill="rgb(254,26,6)" fg:x="642" fg:w="2"/><text x="52.3181%" y="319.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (40 samples, 3.24%)</title><rect x="49.0673%" y="437" width="3.2441%" height="15" fill="rgb(249,71,11)" fg:x="605" fg:w="40"/><text x="49.3173%" y="447.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.30%)</title><rect x="51.0138%" y="421" width="1.2976%" height="15" fill="rgb(232,170,27)" fg:x="629" fg:w="16"/><text x="51.2638%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (16 samples, 1.30%)</title><rect x="51.0138%" y="405" width="1.2976%" height="15" fill="rgb(214,223,17)" fg:x="629" fg:w="16"/><text x="51.2638%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="51.7437%" y="389" width="0.5677%" height="15" fill="rgb(250,18,15)" fg:x="638" fg:w="7"/><text x="51.9937%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="51.7437%" y="373" width="0.5677%" height="15" fill="rgb(212,153,51)" fg:x="638" fg:w="7"/><text x="51.9937%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.41%)</title><rect x="51.9059%" y="357" width="0.4055%" height="15" fill="rgb(219,194,12)" fg:x="640" fg:w="5"/><text x="52.1559%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.41%)</title><rect x="51.9059%" y="341" width="0.4055%" height="15" fill="rgb(212,58,17)" fg:x="640" fg:w="5"/><text x="52.1559%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="52.0681%" y="325" width="0.2433%" height="15" fill="rgb(254,5,10)" fg:x="642" fg:w="3"/><text x="52.3181%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.2303%" y="309" width="0.0811%" height="15" fill="rgb(246,91,7)" fg:x="644" fg:w="1"/><text x="52.4803%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.2303%" y="293" width="0.0811%" height="15" fill="rgb(218,108,49)" fg:x="644" fg:w="1"/><text x="52.4803%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="52.3925%" y="421" width="0.0811%" height="15" fill="rgb(238,123,20)" fg:x="646" fg:w="1"/><text x="52.6425%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.3925%" y="405" width="0.0811%" height="15" fill="rgb(231,69,23)" fg:x="646" fg:w="1"/><text x="52.6425%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7170%" y="373" width="0.0811%" height="15" fill="rgb(230,209,3)" fg:x="650" fg:w="1"/><text x="52.9670%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7170%" y="357" width="0.0811%" height="15" fill="rgb(231,19,0)" fg:x="650" fg:w="1"/><text x="52.9670%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.7170%" y="341" width="0.0811%" height="15" fill="rgb(226,192,25)" fg:x="650" fg:w="1"/><text x="52.9670%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.7170%" y="325" width="0.0811%" height="15" fill="rgb(223,175,53)" fg:x="650" fg:w="1"/><text x="52.9670%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.7170%" y="309" width="0.0811%" height="15" fill="rgb(248,35,51)" fg:x="650" fg:w="1"/><text x="52.9670%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7170%" y="293" width="0.0811%" height="15" fill="rgb(230,37,26)" fg:x="650" fg:w="1"/><text x="52.9670%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7170%" y="277" width="0.0811%" height="15" fill="rgb(206,120,22)" fg:x="650" fg:w="1"/><text x="52.9670%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.7170%" y="261" width="0.0811%" height="15" fill="rgb(207,165,28)" fg:x="650" fg:w="1"/><text x="52.9670%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.7170%" y="245" width="0.0811%" height="15" fill="rgb(226,23,46)" fg:x="650" fg:w="1"/><text x="52.9670%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.7170%" y="229" width="0.0811%" height="15" fill="rgb(208,130,44)" fg:x="650" fg:w="1"/><text x="52.9670%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.7170%" y="213" width="0.0811%" height="15" fill="rgb(231,67,8)" fg:x="650" fg:w="1"/><text x="52.9670%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7170%" y="197" width="0.0811%" height="15" fill="rgb(205,183,22)" fg:x="650" fg:w="1"/><text x="52.9670%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="52.6358%" y="389" width="0.3244%" height="15" fill="rgb(224,47,9)" fg:x="649" fg:w="4"/><text x="52.8858%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.7981%" y="373" width="0.1622%" height="15" fill="rgb(250,183,49)" fg:x="651" fg:w="2"/><text x="53.0481%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.7981%" y="357" width="0.1622%" height="15" fill="rgb(220,151,39)" fg:x="651" fg:w="2"/><text x="53.0481%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8792%" y="341" width="0.0811%" height="15" fill="rgb(220,118,20)" fg:x="652" fg:w="1"/><text x="53.1292%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8792%" y="325" width="0.0811%" height="15" fill="rgb(231,65,51)" fg:x="652" fg:w="1"/><text x="53.1292%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.8792%" y="309" width="0.0811%" height="15" fill="rgb(253,125,37)" fg:x="652" fg:w="1"/><text x="53.1292%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.8792%" y="293" width="0.0811%" height="15" fill="rgb(232,102,6)" fg:x="652" fg:w="1"/><text x="53.1292%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.8792%" y="277" width="0.0811%" height="15" fill="rgb(251,105,13)" fg:x="652" fg:w="1"/><text x="53.1292%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8792%" y="261" width="0.0811%" height="15" fill="rgb(222,179,29)" fg:x="652" fg:w="1"/><text x="53.1292%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8792%" y="245" width="0.0811%" height="15" fill="rgb(229,180,53)" fg:x="652" fg:w="1"/><text x="53.1292%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.8792%" y="229" width="0.0811%" height="15" fill="rgb(238,104,13)" fg:x="652" fg:w="1"/><text x="53.1292%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.8792%" y="213" width="0.0811%" height="15" fill="rgb(210,130,5)" fg:x="652" fg:w="1"/><text x="53.1292%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.8792%" y="197" width="0.0811%" height="15" fill="rgb(233,87,49)" fg:x="652" fg:w="1"/><text x="53.1292%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.8792%" y="181" width="0.0811%" height="15" fill="rgb(243,34,9)" fg:x="652" fg:w="1"/><text x="53.1292%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8792%" y="165" width="0.0811%" height="15" fill="rgb(235,225,10)" fg:x="652" fg:w="1"/><text x="53.1292%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="53.0414%" y="325" width="0.0811%" height="15" fill="rgb(212,0,30)" fg:x="654" fg:w="1"/><text x="53.2914%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.0414%" y="309" width="0.0811%" height="15" fill="rgb(211,177,0)" fg:x="654" fg:w="1"/><text x="53.2914%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.0414%" y="293" width="0.0811%" height="15" fill="rgb(225,220,11)" fg:x="654" fg:w="1"/><text x="53.2914%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.0414%" y="277" width="0.0811%" height="15" fill="rgb(215,10,13)" fg:x="654" fg:w="1"/><text x="53.2914%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.0414%" y="261" width="0.0811%" height="15" fill="rgb(240,177,14)" fg:x="654" fg:w="1"/><text x="53.2914%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.0414%" y="245" width="0.0811%" height="15" fill="rgb(243,7,39)" fg:x="654" fg:w="1"/><text x="53.2914%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.0414%" y="229" width="0.0811%" height="15" fill="rgb(212,99,0)" fg:x="654" fg:w="1"/><text x="53.2914%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.0414%" y="213" width="0.0811%" height="15" fill="rgb(225,162,48)" fg:x="654" fg:w="1"/><text x="53.2914%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.0414%" y="197" width="0.0811%" height="15" fill="rgb(246,16,25)" fg:x="654" fg:w="1"/><text x="53.2914%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.0414%" y="181" width="0.0811%" height="15" fill="rgb(220,150,2)" fg:x="654" fg:w="1"/><text x="53.2914%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.0414%" y="165" width="0.0811%" height="15" fill="rgb(237,113,11)" fg:x="654" fg:w="1"/><text x="53.2914%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.0414%" y="149" width="0.0811%" height="15" fill="rgb(236,70,20)" fg:x="654" fg:w="1"/><text x="53.2914%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.0414%" y="133" width="0.0811%" height="15" fill="rgb(234,94,7)" fg:x="654" fg:w="1"/><text x="53.2914%" y="143.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.1225%" y="325" width="0.1622%" height="15" fill="rgb(250,221,0)" fg:x="655" fg:w="2"/><text x="53.3725%" y="335.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="53.2847%" y="309" width="0.0811%" height="15" fill="rgb(245,149,46)" fg:x="657" fg:w="1"/><text x="53.5347%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2847%" y="293" width="0.0811%" height="15" fill="rgb(215,37,27)" fg:x="657" fg:w="1"/><text x="53.5347%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2847%" y="277" width="0.0811%" height="15" fill="rgb(232,65,3)" fg:x="657" fg:w="1"/><text x="53.5347%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.2847%" y="261" width="0.0811%" height="15" fill="rgb(214,2,16)" fg:x="657" fg:w="1"/><text x="53.5347%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.2847%" y="245" width="0.0811%" height="15" fill="rgb(227,131,50)" fg:x="657" fg:w="1"/><text x="53.5347%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.2847%" y="229" width="0.0811%" height="15" fill="rgb(247,131,45)" fg:x="657" fg:w="1"/><text x="53.5347%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.3658%" y="309" width="0.0811%" height="15" fill="rgb(215,97,47)" fg:x="658" fg:w="1"/><text x="53.6158%" y="319.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="53.4469%" y="293" width="0.1622%" height="15" fill="rgb(233,143,12)" fg:x="659" fg:w="2"/><text x="53.6969%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="53.4469%" y="309" width="0.2433%" height="15" fill="rgb(222,57,17)" fg:x="659" fg:w="3"/><text x="53.6969%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="53.6091%" y="293" width="0.0811%" height="15" fill="rgb(214,119,38)" fg:x="661" fg:w="1"/><text x="53.8591%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="53.6091%" y="277" width="0.0811%" height="15" fill="rgb(217,28,47)" fg:x="661" fg:w="1"/><text x="53.8591%" y="287.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="53.6902%" y="309" width="0.2433%" height="15" fill="rgb(231,14,52)" fg:x="662" fg:w="3"/><text x="53.9402%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.6902%" y="293" width="0.2433%" height="15" fill="rgb(220,158,18)" fg:x="662" fg:w="3"/><text x="53.9402%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.6902%" y="277" width="0.2433%" height="15" fill="rgb(222,143,46)" fg:x="662" fg:w="3"/><text x="53.9402%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="53.6902%" y="261" width="0.2433%" height="15" fill="rgb(227,165,5)" fg:x="662" fg:w="3"/><text x="53.9402%" y="271.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.6902%" y="245" width="0.2433%" height="15" fill="rgb(216,222,49)" fg:x="662" fg:w="3"/><text x="53.9402%" y="255.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="53.9335%" y="309" width="0.2433%" height="15" fill="rgb(238,73,39)" fg:x="665" fg:w="3"/><text x="54.1835%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.0957%" y="293" width="0.0811%" height="15" fill="rgb(252,115,9)" fg:x="667" fg:w="1"/><text x="54.3457%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.0957%" y="277" width="0.0811%" height="15" fill="rgb(238,202,4)" fg:x="667" fg:w="1"/><text x="54.3457%" y="287.50"></text></g><g><title>kernel::model::EntityKey::new (2 samples, 0.16%)</title><rect x="54.1768%" y="309" width="0.1622%" height="15" fill="rgb(252,153,44)" fg:x="668" fg:w="2"/><text x="54.4268%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.1768%" y="293" width="0.1622%" height="15" fill="rgb(235,128,27)" fg:x="668" fg:w="2"/><text x="54.4268%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5012%" y="229" width="0.0811%" height="15" fill="rgb(221,121,47)" fg:x="672" fg:w="1"/><text x="54.7512%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="54.5823%" y="117" width="0.1622%" height="15" fill="rgb(247,211,47)" fg:x="673" fg:w="2"/><text x="54.8323%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="54.6634%" y="101" width="0.0811%" height="15" fill="rgb(252,47,49)" fg:x="674" fg:w="1"/><text x="54.9134%" y="111.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="54.6634%" y="85" width="0.0811%" height="15" fill="rgb(219,119,53)" fg:x="674" fg:w="1"/><text x="54.9134%" y="95.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="54.6634%" y="69" width="0.0811%" height="15" fill="rgb(243,165,53)" fg:x="674" fg:w="1"/><text x="54.9134%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="54.5823%" y="181" width="0.2433%" height="15" fill="rgb(230,12,35)" fg:x="673" fg:w="3"/><text x="54.8323%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.5823%" y="165" width="0.2433%" height="15" fill="rgb(239,57,49)" fg:x="673" fg:w="3"/><text x="54.8323%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="54.5823%" y="149" width="0.2433%" height="15" fill="rgb(231,154,7)" fg:x="673" fg:w="3"/><text x="54.8323%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.5823%" y="133" width="0.2433%" height="15" fill="rgb(248,81,34)" fg:x="673" fg:w="3"/><text x="54.8323%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7445%" y="117" width="0.0811%" height="15" fill="rgb(247,9,5)" fg:x="675" fg:w="1"/><text x="54.9945%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7445%" y="101" width="0.0811%" height="15" fill="rgb(228,172,27)" fg:x="675" fg:w="1"/><text x="54.9945%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.8256%" y="181" width="0.0811%" height="15" fill="rgb(230,57,44)" fg:x="676" fg:w="1"/><text x="55.0756%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.57%)</title><rect x="54.5823%" y="229" width="0.5677%" height="15" fill="rgb(249,35,22)" fg:x="673" fg:w="7"/><text x="54.8323%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="54.5823%" y="213" width="0.5677%" height="15" fill="rgb(250,137,27)" fg:x="673" fg:w="7"/><text x="54.8323%" y="223.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (7 samples, 0.57%)</title><rect x="54.5823%" y="197" width="0.5677%" height="15" fill="rgb(251,57,31)" fg:x="673" fg:w="7"/><text x="54.8323%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.9067%" y="181" width="0.2433%" height="15" fill="rgb(238,60,0)" fg:x="677" fg:w="3"/><text x="55.1567%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.9067%" y="165" width="0.2433%" height="15" fill="rgb(242,185,39)" fg:x="677" fg:w="3"/><text x="55.1567%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="54.9878%" y="149" width="0.1622%" height="15" fill="rgb(240,63,43)" fg:x="678" fg:w="2"/><text x="55.2378%" y="159.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="54.9878%" y="133" width="0.1622%" height="15" fill="rgb(236,155,6)" fg:x="678" fg:w="2"/><text x="55.2378%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="54.9878%" y="117" width="0.1622%" height="15" fill="rgb(215,11,29)" fg:x="678" fg:w="2"/><text x="55.2378%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.0689%" y="101" width="0.0811%" height="15" fill="rgb(228,180,48)" fg:x="679" fg:w="1"/><text x="55.3189%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.0689%" y="85" width="0.0811%" height="15" fill="rgb(241,102,12)" fg:x="679" fg:w="1"/><text x="55.3189%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.0689%" y="69" width="0.0811%" height="15" fill="rgb(246,213,4)" fg:x="679" fg:w="1"/><text x="55.3189%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.2311%" y="197" width="0.0811%" height="15" fill="rgb(218,134,35)" fg:x="681" fg:w="1"/><text x="55.4811%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.2311%" y="181" width="0.0811%" height="15" fill="rgb(251,117,35)" fg:x="681" fg:w="1"/><text x="55.4811%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.41%)</title><rect x="55.3122%" y="197" width="0.4055%" height="15" fill="rgb(206,156,45)" fg:x="682" fg:w="5"/><text x="55.5622%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.7178%" y="165" width="0.0811%" height="15" fill="rgb(218,52,27)" fg:x="687" fg:w="1"/><text x="55.9678%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7178%" y="149" width="0.0811%" height="15" fill="rgb(238,83,36)" fg:x="687" fg:w="1"/><text x="55.9678%" y="159.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (22 samples, 1.78%)</title><rect x="54.3390%" y="293" width="1.7843%" height="15" fill="rgb(218,53,43)" fg:x="670" fg:w="22"/><text x="54.5890%" y="303.50">k..</text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (22 samples, 1.78%)</title><rect x="54.3390%" y="277" width="1.7843%" height="15" fill="rgb(239,54,39)" fg:x="670" fg:w="22"/><text x="54.5890%" y="287.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (22 samples, 1.78%)</title><rect x="54.3390%" y="261" width="1.7843%" height="15" fill="rgb(212,198,13)" fg:x="670" fg:w="22"/><text x="54.5890%" y="271.50">s..</text></g><g><title>serde_json::value::de::visit_object (22 samples, 1.78%)</title><rect x="54.3390%" y="245" width="1.7843%" height="15" fill="rgb(234,54,46)" fg:x="670" fg:w="22"/><text x="54.5890%" y="255.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.97%)</title><rect x="55.1500%" y="229" width="0.9732%" height="15" fill="rgb(217,120,7)" fg:x="680" fg:w="12"/><text x="55.4000%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="55.1500%" y="213" width="0.9732%" height="15" fill="rgb(246,39,15)" fg:x="680" fg:w="12"/><text x="55.4000%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="55.7178%" y="197" width="0.4055%" height="15" fill="rgb(242,143,31)" fg:x="687" fg:w="5"/><text x="55.9678%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="55.7178%" y="181" width="0.4055%" height="15" fill="rgb(252,60,24)" fg:x="687" fg:w="5"/><text x="55.9678%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.7989%" y="165" width="0.3244%" height="15" fill="rgb(249,220,7)" fg:x="688" fg:w="4"/><text x="56.0489%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.7989%" y="149" width="0.3244%" height="15" fill="rgb(236,67,13)" fg:x="688" fg:w="4"/><text x="56.0489%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="55.8800%" y="133" width="0.2433%" height="15" fill="rgb(210,62,39)" fg:x="689" fg:w="3"/><text x="56.1300%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.8800%" y="117" width="0.2433%" height="15" fill="rgb(219,122,53)" fg:x="689" fg:w="3"/><text x="56.1300%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.0422%" y="101" width="0.0811%" height="15" fill="rgb(218,87,25)" fg:x="691" fg:w="1"/><text x="56.2922%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.1233%" y="229" width="0.0811%" height="15" fill="rgb(234,179,48)" fg:x="692" fg:w="1"/><text x="56.3733%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.1233%" y="245" width="0.1622%" height="15" fill="rgb(248,90,0)" fg:x="692" fg:w="2"/><text x="56.3733%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2044%" y="229" width="0.0811%" height="15" fill="rgb(207,228,37)" fg:x="693" fg:w="1"/><text x="56.4544%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.2855%" y="245" width="0.1622%" height="15" fill="rgb(235,214,15)" fg:x="694" fg:w="2"/><text x="56.5355%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3666%" y="229" width="0.0811%" height="15" fill="rgb(210,144,39)" fg:x="695" fg:w="1"/><text x="56.6166%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.5288%" y="229" width="0.0811%" height="15" fill="rgb(222,67,41)" fg:x="697" fg:w="1"/><text x="56.7788%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.6910%" y="181" width="0.0811%" height="15" fill="rgb(205,35,37)" fg:x="699" fg:w="1"/><text x="56.9410%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6910%" y="165" width="0.0811%" height="15" fill="rgb(216,125,40)" fg:x="699" fg:w="1"/><text x="56.9410%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.7721%" y="181" width="0.0811%" height="15" fill="rgb(228,227,20)" fg:x="700" fg:w="1"/><text x="57.0221%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.9343%" y="149" width="0.1622%" height="15" fill="rgb(242,173,45)" fg:x="702" fg:w="2"/><text x="57.1843%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.9343%" y="133" width="0.1622%" height="15" fill="rgb(215,79,24)" fg:x="702" fg:w="2"/><text x="57.1843%" y="143.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (51 samples, 4.14%)</title><rect x="53.0414%" y="341" width="4.1363%" height="15" fill="rgb(238,164,38)" fg:x="654" fg:w="51"/><text x="53.2914%" y="351.50">&lt;engi..</text></g><g><title>engine::internal::Entities::prepare_entity (48 samples, 3.89%)</title><rect x="53.2847%" y="325" width="3.8929%" height="15" fill="rgb(245,196,38)" fg:x="657" fg:w="48"/><text x="53.5347%" y="335.50">engi..</text></g><g><title>kernel::model::deserialize_entity (35 samples, 2.84%)</title><rect x="54.3390%" y="309" width="2.8386%" height="15" fill="rgb(231,217,29)" fg:x="670" fg:w="35"/><text x="54.5890%" y="319.50">ke..</text></g><g><title>serde_json::de::from_trait (13 samples, 1.05%)</title><rect x="56.1233%" y="293" width="1.0543%" height="15" fill="rgb(245,6,4)" fg:x="692" fg:w="13"/><text x="56.3733%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.05%)</title><rect x="56.1233%" y="277" width="1.0543%" height="15" fill="rgb(214,76,49)" fg:x="692" fg:w="13"/><text x="56.3733%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="56.1233%" y="261" width="1.0543%" height="15" fill="rgb(205,96,12)" fg:x="692" fg:w="13"/><text x="56.3733%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.73%)</title><rect x="56.4477%" y="245" width="0.7299%" height="15" fill="rgb(243,131,4)" fg:x="696" fg:w="9"/><text x="56.6977%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="56.6099%" y="229" width="0.5677%" height="15" fill="rgb(214,114,4)" fg:x="698" fg:w="7"/><text x="56.8599%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="56.6910%" y="213" width="0.4866%" height="15" fill="rgb(234,215,15)" fg:x="699" fg:w="6"/><text x="56.9410%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="56.6910%" y="197" width="0.4866%" height="15" fill="rgb(250,216,45)" fg:x="699" fg:w="6"/><text x="56.9410%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="56.8532%" y="181" width="0.3244%" height="15" fill="rgb(236,128,4)" fg:x="701" fg:w="4"/><text x="57.1032%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="56.8532%" y="165" width="0.3244%" height="15" fill="rgb(234,50,33)" fg:x="701" fg:w="4"/><text x="57.1032%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="57.0965%" y="149" width="0.0811%" height="15" fill="rgb(253,131,37)" fg:x="704" fg:w="1"/><text x="57.3465%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.0965%" y="133" width="0.0811%" height="15" fill="rgb(218,55,27)" fg:x="704" fg:w="1"/><text x="57.3465%" y="143.50"></text></g><g><title>core::iter::adapters::try_process (53 samples, 4.30%)</title><rect x="52.9603%" y="373" width="4.2985%" height="15" fill="rgb(241,220,28)" fg:x="653" fg:w="53"/><text x="53.2103%" y="383.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 4.22%)</title><rect x="53.0414%" y="357" width="4.2174%" height="15" fill="rgb(241,90,48)" fg:x="654" fg:w="52"/><text x="53.2914%" y="367.50">&lt;allo..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1776%" y="341" width="0.0811%" height="15" fill="rgb(216,43,37)" fg:x="705" fg:w="1"/><text x="57.4276%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (54 samples, 4.38%)</title><rect x="52.9603%" y="389" width="4.3796%" height="15" fill="rgb(207,173,9)" fg:x="653" fg:w="54"/><text x="53.2103%" y="399.50">&lt;plug..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.2587%" y="373" width="0.0811%" height="15" fill="rgb(240,126,30)" fg:x="706" fg:w="1"/><text x="57.5087%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2587%" y="357" width="0.0811%" height="15" fill="rgb(228,178,53)" fg:x="706" fg:w="1"/><text x="57.5087%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.3398%" y="357" width="0.0811%" height="15" fill="rgb(217,33,4)" fg:x="707" fg:w="1"/><text x="57.5898%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.3398%" y="341" width="0.0811%" height="15" fill="rgb(206,124,34)" fg:x="707" fg:w="1"/><text x="57.5898%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="57.4209%" y="357" width="0.2433%" height="15" fill="rgb(208,122,53)" fg:x="708" fg:w="3"/><text x="57.6709%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="57.4209%" y="341" width="0.2433%" height="15" fill="rgb(215,202,26)" fg:x="708" fg:w="3"/><text x="57.6709%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="57.5020%" y="325" width="0.1622%" height="15" fill="rgb(232,198,31)" fg:x="709" fg:w="2"/><text x="57.7520%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.5831%" y="309" width="0.0811%" height="15" fill="rgb(222,23,35)" fg:x="710" fg:w="1"/><text x="57.8331%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.5831%" y="293" width="0.0811%" height="15" fill="rgb(242,27,53)" fg:x="710" fg:w="1"/><text x="57.8331%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="57.5831%" y="277" width="0.0811%" height="15" fill="rgb(210,216,42)" fg:x="710" fg:w="1"/><text x="57.8331%" y="287.50"></text></g><g><title>plugins_core::tools::get_contained_keys (67 samples, 5.43%)</title><rect x="52.3114%" y="437" width="5.4339%" height="15" fill="rgb(234,39,38)" fg:x="645" fg:w="67"/><text x="52.5614%" y="447.50">plugins..</text></g><g><title>kernel::model::entry::Entry::scope (65 samples, 5.27%)</title><rect x="52.4736%" y="421" width="5.2717%" height="15" fill="rgb(235,126,54)" fg:x="647" fg:w="65"/><text x="52.7236%" y="431.50">kernel..</text></g><g><title>kernel::model::Entity::load_scope (65 samples, 5.27%)</title><rect x="52.4736%" y="405" width="5.2717%" height="15" fill="rgb(235,150,33)" fg:x="647" fg:w="65"/><text x="52.7236%" y="415.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="57.3398%" y="389" width="0.4055%" height="15" fill="rgb(249,49,53)" fg:x="707" fg:w="5"/><text x="57.5898%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="57.3398%" y="373" width="0.4055%" height="15" fill="rgb(238,60,50)" fg:x="707" fg:w="5"/><text x="57.5898%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="57.6642%" y="357" width="0.0811%" height="15" fill="rgb(210,5,2)" fg:x="711" fg:w="1"/><text x="57.9142%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="57.7453%" y="421" width="0.0811%" height="15" fill="rgb(214,207,24)" fg:x="712" fg:w="1"/><text x="57.9953%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (2 samples, 0.16%)</title><rect x="57.8264%" y="421" width="0.1622%" height="15" fill="rgb(228,173,2)" fg:x="713" fg:w="2"/><text x="58.0764%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.9075%" y="405" width="0.0811%" height="15" fill="rgb(244,26,8)" fg:x="714" fg:w="1"/><text x="58.1575%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.9075%" y="389" width="0.0811%" height="15" fill="rgb(249,153,35)" fg:x="714" fg:w="1"/><text x="58.1575%" y="399.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="58.3131%" y="389" width="0.0811%" height="15" fill="rgb(221,215,40)" fg:x="719" fg:w="1"/><text x="58.5631%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="58.3131%" y="373" width="0.0811%" height="15" fill="rgb(238,106,35)" fg:x="719" fg:w="1"/><text x="58.5631%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="58.3131%" y="357" width="0.0811%" height="15" fill="rgb(207,195,21)" fg:x="719" fg:w="1"/><text x="58.5631%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="58.3131%" y="341" width="0.0811%" height="15" fill="rgb(205,43,29)" fg:x="719" fg:w="1"/><text x="58.5631%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="58.3131%" y="325" width="0.0811%" height="15" fill="rgb(236,35,21)" fg:x="719" fg:w="1"/><text x="58.5631%" y="335.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="58.3131%" y="309" width="0.0811%" height="15" fill="rgb(244,74,8)" fg:x="719" fg:w="1"/><text x="58.5631%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.3131%" y="293" width="0.0811%" height="15" fill="rgb(241,229,7)" fg:x="719" fg:w="1"/><text x="58.5631%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.3942%" y="389" width="0.1622%" height="15" fill="rgb(212,223,25)" fg:x="720" fg:w="2"/><text x="58.6442%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.5564%" y="389" width="0.0811%" height="15" fill="rgb(234,58,53)" fg:x="722" fg:w="1"/><text x="58.8064%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.5564%" y="373" width="0.0811%" height="15" fill="rgb(244,36,1)" fg:x="722" fg:w="1"/><text x="58.8064%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.7997%" y="357" width="0.0811%" height="15" fill="rgb(222,40,54)" fg:x="725" fg:w="1"/><text x="59.0497%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="58.8808%" y="357" width="0.1622%" height="15" fill="rgb(210,207,39)" fg:x="726" fg:w="2"/><text x="59.1308%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="58.8808%" y="341" width="0.1622%" height="15" fill="rgb(234,52,14)" fg:x="726" fg:w="2"/><text x="59.1308%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="58.8808%" y="325" width="0.1622%" height="15" fill="rgb(239,108,46)" fg:x="726" fg:w="2"/><text x="59.1308%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.8808%" y="309" width="0.1622%" height="15" fill="rgb(252,223,5)" fg:x="726" fg:w="2"/><text x="59.1308%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.8808%" y="293" width="0.1622%" height="15" fill="rgb(227,181,11)" fg:x="726" fg:w="2"/><text x="59.1308%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="58.9619%" y="277" width="0.0811%" height="15" fill="rgb(248,126,40)" fg:x="727" fg:w="1"/><text x="59.2119%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (132 samples, 10.71%)</title><rect x="48.5807%" y="469" width="10.7056%" height="15" fill="rgb(243,1,18)" fg:x="599" fg:w="132"/><text x="48.8307%" y="479.50">&lt;alloc::vec::Vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (130 samples, 10.54%)</title><rect x="48.7429%" y="453" width="10.5434%" height="15" fill="rgb(214,145,23)" fg:x="601" fg:w="130"/><text x="48.9929%" y="463.50">&lt;core::iter::ad..</text></g><g><title>plugins_core::tools::get_occupant_keys (19 samples, 1.54%)</title><rect x="57.7453%" y="437" width="1.5410%" height="15" fill="rgb(241,218,11)" fg:x="712" fg:w="19"/><text x="57.9953%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.30%)</title><rect x="57.9886%" y="421" width="1.2976%" height="15" fill="rgb(214,219,24)" fg:x="715" fg:w="16"/><text x="58.2386%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (15 samples, 1.22%)</title><rect x="58.0697%" y="405" width="1.2165%" height="15" fill="rgb(235,32,7)" fg:x="716" fg:w="15"/><text x="58.3197%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="58.6375%" y="389" width="0.6488%" height="15" fill="rgb(227,121,28)" fg:x="723" fg:w="8"/><text x="58.8875%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="58.6375%" y="373" width="0.6488%" height="15" fill="rgb(216,129,49)" fg:x="723" fg:w="8"/><text x="58.8875%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.0430%" y="357" width="0.2433%" height="15" fill="rgb(207,194,50)" fg:x="728" fg:w="3"/><text x="59.2930%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.1241%" y="341" width="0.1622%" height="15" fill="rgb(207,4,18)" fg:x="729" fg:w="2"/><text x="59.3741%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="59.1241%" y="325" width="0.1622%" height="15" fill="rgb(213,50,30)" fg:x="729" fg:w="2"/><text x="59.3741%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.2052%" y="309" width="0.0811%" height="15" fill="rgb(208,77,22)" fg:x="730" fg:w="1"/><text x="59.4552%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.2052%" y="293" width="0.0811%" height="15" fill="rgb(244,204,34)" fg:x="730" fg:w="1"/><text x="59.4552%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.6107%" y="421" width="0.1622%" height="15" fill="rgb(230,20,17)" fg:x="735" fg:w="2"/><text x="59.8607%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6918%" y="405" width="0.0811%" height="15" fill="rgb(237,83,15)" fg:x="736" fg:w="1"/><text x="59.9418%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.6918%" y="389" width="0.0811%" height="15" fill="rgb(221,109,25)" fg:x="736" fg:w="1"/><text x="59.9418%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.6918%" y="373" width="0.0811%" height="15" fill="rgb(205,194,52)" fg:x="736" fg:w="1"/><text x="59.9418%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.6918%" y="357" width="0.0811%" height="15" fill="rgb(244,173,54)" fg:x="736" fg:w="1"/><text x="59.9418%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6918%" y="341" width="0.0811%" height="15" fill="rgb(227,181,18)" fg:x="736" fg:w="1"/><text x="59.9418%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6918%" y="325" width="0.0811%" height="15" fill="rgb(238,36,30)" fg:x="736" fg:w="1"/><text x="59.9418%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.6918%" y="309" width="0.0811%" height="15" fill="rgb(254,85,0)" fg:x="736" fg:w="1"/><text x="59.9418%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.6918%" y="293" width="0.0811%" height="15" fill="rgb(247,63,33)" fg:x="736" fg:w="1"/><text x="59.9418%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.6918%" y="277" width="0.0811%" height="15" fill="rgb(220,7,54)" fg:x="736" fg:w="1"/><text x="59.9418%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.6918%" y="261" width="0.0811%" height="15" fill="rgb(238,227,21)" fg:x="736" fg:w="1"/><text x="59.9418%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6918%" y="245" width="0.0811%" height="15" fill="rgb(237,29,31)" fg:x="736" fg:w="1"/><text x="59.9418%" y="255.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="59.7729%" y="405" width="0.1622%" height="15" fill="rgb(211,21,50)" fg:x="737" fg:w="2"/><text x="60.0229%" y="415.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="59.7729%" y="389" width="0.1622%" height="15" fill="rgb(239,119,2)" fg:x="737" fg:w="2"/><text x="60.0229%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8540%" y="373" width="0.0811%" height="15" fill="rgb(250,2,39)" fg:x="738" fg:w="1"/><text x="60.1040%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="59.9351%" y="405" width="0.0811%" height="15" fill="rgb(244,46,53)" fg:x="739" fg:w="1"/><text x="60.1851%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9351%" y="389" width="0.0811%" height="15" fill="rgb(209,21,19)" fg:x="739" fg:w="1"/><text x="60.1851%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9351%" y="373" width="0.0811%" height="15" fill="rgb(236,145,4)" fg:x="739" fg:w="1"/><text x="60.1851%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.9351%" y="357" width="0.0811%" height="15" fill="rgb(220,133,36)" fg:x="739" fg:w="1"/><text x="60.1851%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.9351%" y="341" width="0.0811%" height="15" fill="rgb(244,18,3)" fg:x="739" fg:w="1"/><text x="60.1851%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.9351%" y="325" width="0.0811%" height="15" fill="rgb(232,171,48)" fg:x="739" fg:w="1"/><text x="60.1851%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.9351%" y="309" width="0.0811%" height="15" fill="rgb(223,223,53)" fg:x="739" fg:w="1"/><text x="60.1851%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.9351%" y="293" width="0.0811%" height="15" fill="rgb(246,92,13)" fg:x="739" fg:w="1"/><text x="60.1851%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.9351%" y="277" width="0.0811%" height="15" fill="rgb(229,171,10)" fg:x="739" fg:w="1"/><text x="60.1851%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.9351%" y="261" width="0.0811%" height="15" fill="rgb(213,131,26)" fg:x="739" fg:w="1"/><text x="60.1851%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.9351%" y="245" width="0.0811%" height="15" fill="rgb(242,87,54)" fg:x="739" fg:w="1"/><text x="60.1851%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.9351%" y="229" width="0.0811%" height="15" fill="rgb(237,21,35)" fg:x="739" fg:w="1"/><text x="60.1851%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.9351%" y="213" width="0.0811%" height="15" fill="rgb(253,13,47)" fg:x="739" fg:w="1"/><text x="60.1851%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="60.1784%" y="277" width="0.1622%" height="15" fill="rgb(215,122,49)" fg:x="742" fg:w="2"/><text x="60.4284%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="60.1784%" y="261" width="0.1622%" height="15" fill="rgb(209,179,30)" fg:x="742" fg:w="2"/><text x="60.4284%" y="271.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="60.1784%" y="245" width="0.1622%" height="15" fill="rgb(235,100,24)" fg:x="742" fg:w="2"/><text x="60.4284%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="60.1784%" y="229" width="0.1622%" height="15" fill="rgb(209,67,24)" fg:x="742" fg:w="2"/><text x="60.4284%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="60.1784%" y="213" width="0.1622%" height="15" fill="rgb(206,74,32)" fg:x="742" fg:w="2"/><text x="60.4284%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="60.1784%" y="197" width="0.1622%" height="15" fill="rgb(212,45,25)" fg:x="742" fg:w="2"/><text x="60.4284%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="60.1784%" y="181" width="0.1622%" height="15" fill="rgb(239,26,3)" fg:x="742" fg:w="2"/><text x="60.4284%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="60.1784%" y="165" width="0.1622%" height="15" fill="rgb(218,36,15)" fg:x="742" fg:w="2"/><text x="60.4284%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="60.1784%" y="149" width="0.1622%" height="15" fill="rgb(206,108,24)" fg:x="742" fg:w="2"/><text x="60.4284%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="60.1784%" y="133" width="0.1622%" height="15" fill="rgb(234,204,42)" fg:x="742" fg:w="2"/><text x="60.4284%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="60.1784%" y="117" width="0.1622%" height="15" fill="rgb(229,2,11)" fg:x="742" fg:w="2"/><text x="60.4284%" y="127.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.1784%" y="101" width="0.1622%" height="15" fill="rgb(221,20,48)" fg:x="742" fg:w="2"/><text x="60.4284%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.5028%" y="197" width="0.0811%" height="15" fill="rgb(244,164,10)" fg:x="746" fg:w="1"/><text x="60.7528%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.5028%" y="181" width="0.0811%" height="15" fill="rgb(243,229,2)" fg:x="746" fg:w="1"/><text x="60.7528%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="60.5028%" y="165" width="0.0811%" height="15" fill="rgb(232,131,37)" fg:x="746" fg:w="1"/><text x="60.7528%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="60.5028%" y="149" width="0.0811%" height="15" fill="rgb(217,156,11)" fg:x="746" fg:w="1"/><text x="60.7528%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="60.5028%" y="133" width="0.0811%" height="15" fill="rgb(239,99,48)" fg:x="746" fg:w="1"/><text x="60.7528%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="60.5028%" y="117" width="0.0811%" height="15" fill="rgb(231,209,9)" fg:x="746" fg:w="1"/><text x="60.7528%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.5028%" y="101" width="0.0811%" height="15" fill="rgb(254,97,27)" fg:x="746" fg:w="1"/><text x="60.7528%" y="111.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.32%)</title><rect x="60.3406%" y="261" width="0.3244%" height="15" fill="rgb(223,151,38)" fg:x="744" fg:w="4"/><text x="60.5906%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="60.4217%" y="245" width="0.2433%" height="15" fill="rgb(219,206,35)" fg:x="745" fg:w="3"/><text x="60.6717%" y="255.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="60.5028%" y="229" width="0.1622%" height="15" fill="rgb(216,130,31)" fg:x="746" fg:w="2"/><text x="60.7528%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="60.5028%" y="213" width="0.1622%" height="15" fill="rgb(251,97,34)" fg:x="746" fg:w="2"/><text x="60.7528%" y="223.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="60.5839%" y="197" width="0.0811%" height="15" fill="rgb(246,159,47)" fg:x="747" fg:w="1"/><text x="60.8339%" y="207.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="60.5839%" y="181" width="0.0811%" height="15" fill="rgb(232,87,10)" fg:x="747" fg:w="1"/><text x="60.8339%" y="191.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="60.5839%" y="165" width="0.0811%" height="15" fill="rgb(249,1,37)" fg:x="747" fg:w="1"/><text x="60.8339%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (12 samples, 0.97%)</title><rect x="59.7729%" y="421" width="0.9732%" height="15" fill="rgb(239,135,14)" fg:x="737" fg:w="12"/><text x="60.0229%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.73%)</title><rect x="60.0162%" y="405" width="0.7299%" height="15" fill="rgb(253,116,46)" fg:x="740" fg:w="9"/><text x="60.2662%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (9 samples, 0.73%)</title><rect x="60.0162%" y="389" width="0.7299%" height="15" fill="rgb(222,217,37)" fg:x="740" fg:w="9"/><text x="60.2662%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.73%)</title><rect x="60.0162%" y="373" width="0.7299%" height="15" fill="rgb(252,96,8)" fg:x="740" fg:w="9"/><text x="60.2662%" y="383.50"></text></g><g><title>core::fmt::write (9 samples, 0.73%)</title><rect x="60.0162%" y="357" width="0.7299%" height="15" fill="rgb(254,103,41)" fg:x="740" fg:w="9"/><text x="60.2662%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (9 samples, 0.73%)</title><rect x="60.0162%" y="341" width="0.7299%" height="15" fill="rgb(218,213,19)" fg:x="740" fg:w="9"/><text x="60.2662%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (9 samples, 0.73%)</title><rect x="60.0162%" y="325" width="0.7299%" height="15" fill="rgb(253,95,21)" fg:x="740" fg:w="9"/><text x="60.2662%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (8 samples, 0.65%)</title><rect x="60.0973%" y="309" width="0.6488%" height="15" fill="rgb(229,26,28)" fg:x="741" fg:w="8"/><text x="60.3473%" y="319.50"></text></g><g><title>core::fmt::write (7 samples, 0.57%)</title><rect x="60.1784%" y="293" width="0.5677%" height="15" fill="rgb(230,129,16)" fg:x="742" fg:w="7"/><text x="60.4284%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.41%)</title><rect x="60.3406%" y="277" width="0.4055%" height="15" fill="rgb(236,126,17)" fg:x="744" fg:w="5"/><text x="60.5906%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.6650%" y="261" width="0.0811%" height="15" fill="rgb(209,33,33)" fg:x="748" fg:w="1"/><text x="60.9150%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.6650%" y="245" width="0.0811%" height="15" fill="rgb(227,85,29)" fg:x="748" fg:w="1"/><text x="60.9150%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="60.6650%" y="229" width="0.0811%" height="15" fill="rgb(241,53,46)" fg:x="748" fg:w="1"/><text x="60.9150%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="60.6650%" y="213" width="0.0811%" height="15" fill="rgb(228,167,53)" fg:x="748" fg:w="1"/><text x="60.9150%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="60.6650%" y="197" width="0.0811%" height="15" fill="rgb(238,195,45)" fg:x="748" fg:w="1"/><text x="60.9150%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="60.6650%" y="181" width="0.0811%" height="15" fill="rgb(252,124,45)" fg:x="748" fg:w="1"/><text x="60.9150%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="60.6650%" y="165" width="0.0811%" height="15" fill="rgb(251,38,35)" fg:x="748" fg:w="1"/><text x="60.9150%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="60.6650%" y="149" width="0.0811%" height="15" fill="rgb(227,33,2)" fg:x="748" fg:w="1"/><text x="60.9150%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="60.6650%" y="133" width="0.0811%" height="15" fill="rgb(223,157,46)" fg:x="748" fg:w="1"/><text x="60.9150%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="60.6650%" y="117" width="0.0811%" height="15" fill="rgb(222,78,41)" fg:x="748" fg:w="1"/><text x="60.9150%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="60.6650%" y="101" width="0.0811%" height="15" fill="rgb(248,176,11)" fg:x="748" fg:w="1"/><text x="60.9150%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="60.6650%" y="85" width="0.0811%" height="15" fill="rgb(241,221,18)" fg:x="748" fg:w="1"/><text x="60.9150%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="60.6650%" y="69" width="0.0811%" height="15" fill="rgb(218,85,22)" fg:x="748" fg:w="1"/><text x="60.9150%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="60.6650%" y="53" width="0.0811%" height="15" fill="rgb(222,223,7)" fg:x="748" fg:w="1"/><text x="60.9150%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="60.6650%" y="37" width="0.0811%" height="15" fill="rgb(254,59,39)" fg:x="748" fg:w="1"/><text x="60.9150%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.7194%" y="309" width="0.0811%" height="15" fill="rgb(247,100,27)" fg:x="761" fg:w="1"/><text x="61.9694%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.7194%" y="293" width="0.0811%" height="15" fill="rgb(237,207,10)" fg:x="761" fg:w="1"/><text x="61.9694%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="62.9359%" y="181" width="0.0811%" height="15" fill="rgb(220,121,28)" fg:x="776" fg:w="1"/><text x="63.1859%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="62.9359%" y="197" width="0.4866%" height="15" fill="rgb(213,223,20)" fg:x="776" fg:w="6"/><text x="63.1859%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="63.0170%" y="181" width="0.4055%" height="15" fill="rgb(205,121,27)" fg:x="777" fg:w="5"/><text x="63.2670%" y="191.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="63.0170%" y="165" width="0.4055%" height="15" fill="rgb(253,24,53)" fg:x="777" fg:w="5"/><text x="63.2670%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.73%)</title><rect x="62.7737%" y="213" width="0.7299%" height="15" fill="rgb(224,224,47)" fg:x="774" fg:w="9"/><text x="63.0237%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="63.4225%" y="197" width="0.0811%" height="15" fill="rgb(250,125,36)" fg:x="782" fg:w="1"/><text x="63.6725%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="63.6659%" y="197" width="0.2433%" height="15" fill="rgb(240,144,38)" fg:x="785" fg:w="3"/><text x="63.9159%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.8281%" y="181" width="0.0811%" height="15" fill="rgb(250,15,50)" fg:x="787" fg:w="1"/><text x="64.0781%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 1.62%)</title><rect x="62.3682%" y="229" width="1.6221%" height="15" fill="rgb(210,24,26)" fg:x="769" fg:w="20"/><text x="62.6182%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.49%)</title><rect x="63.5036%" y="213" width="0.4866%" height="15" fill="rgb(234,53,53)" fg:x="783" fg:w="6"/><text x="63.7536%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9092%" y="197" width="0.0811%" height="15" fill="rgb(208,108,28)" fg:x="788" fg:w="1"/><text x="64.1592%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (23 samples, 1.87%)</title><rect x="62.3682%" y="245" width="1.8654%" height="15" fill="rgb(227,143,7)" fg:x="769" fg:w="23"/><text x="62.6182%" y="255.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="63.9903%" y="229" width="0.2433%" height="15" fill="rgb(238,189,38)" fg:x="789" fg:w="3"/><text x="64.2403%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.0714%" y="213" width="0.1622%" height="15" fill="rgb(222,69,15)" fg:x="790" fg:w="2"/><text x="64.3214%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="64.3147%" y="165" width="0.0811%" height="15" fill="rgb(213,169,7)" fg:x="793" fg:w="1"/><text x="64.5647%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.3958%" y="165" width="0.0811%" height="15" fill="rgb(251,219,4)" fg:x="794" fg:w="1"/><text x="64.6458%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.27%)</title><rect x="62.2871%" y="261" width="2.2709%" height="15" fill="rgb(241,55,40)" fg:x="768" fg:w="28"/><text x="62.5371%" y="271.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="64.2336%" y="245" width="0.3244%" height="15" fill="rgb(243,57,30)" fg:x="792" fg:w="4"/><text x="64.4836%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="64.2336%" y="229" width="0.3244%" height="15" fill="rgb(234,50,30)" fg:x="792" fg:w="4"/><text x="64.4836%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="64.2336%" y="213" width="0.3244%" height="15" fill="rgb(239,23,42)" fg:x="792" fg:w="4"/><text x="64.4836%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="64.2336%" y="197" width="0.3244%" height="15" fill="rgb(217,38,19)" fg:x="792" fg:w="4"/><text x="64.4836%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="64.2336%" y="181" width="0.3244%" height="15" fill="rgb(215,179,16)" fg:x="792" fg:w="4"/><text x="64.4836%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4769%" y="165" width="0.0811%" height="15" fill="rgb(254,21,37)" fg:x="795" fg:w="1"/><text x="64.7269%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="64.6391%" y="245" width="0.1622%" height="15" fill="rgb(219,207,48)" fg:x="797" fg:w="2"/><text x="64.8891%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.7202%" y="229" width="0.0811%" height="15" fill="rgb(227,225,41)" fg:x="798" fg:w="1"/><text x="64.9702%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 2.84%)</title><rect x="62.0438%" y="277" width="2.8386%" height="15" fill="rgb(223,130,1)" fg:x="765" fg:w="35"/><text x="62.2938%" y="287.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="64.5580%" y="261" width="0.3244%" height="15" fill="rgb(249,54,42)" fg:x="796" fg:w="4"/><text x="64.8080%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8013%" y="245" width="0.0811%" height="15" fill="rgb(248,69,25)" fg:x="799" fg:w="1"/><text x="65.0513%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (39 samples, 3.16%)</title><rect x="61.8005%" y="309" width="3.1630%" height="15" fill="rgb(234,21,32)" fg:x="762" fg:w="39"/><text x="62.0505%" y="319.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (36 samples, 2.92%)</title><rect x="62.0438%" y="293" width="2.9197%" height="15" fill="rgb(252,136,6)" fg:x="765" fg:w="36"/><text x="62.2938%" y="303.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="64.8824%" y="277" width="0.0811%" height="15" fill="rgb(245,87,12)" fg:x="800" fg:w="1"/><text x="65.1324%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8824%" y="261" width="0.0811%" height="15" fill="rgb(208,12,15)" fg:x="800" fg:w="1"/><text x="65.1324%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="64.9635%" y="309" width="0.3244%" height="15" fill="rgb(250,98,2)" fg:x="801" fg:w="4"/><text x="65.2135%" y="319.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="65.0446%" y="293" width="0.2433%" height="15" fill="rgb(205,213,15)" fg:x="802" fg:w="3"/><text x="65.2946%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 4.06%)</title><rect x="61.5572%" y="325" width="4.0552%" height="15" fill="rgb(248,192,44)" fg:x="759" fg:w="50"/><text x="61.8072%" y="335.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="65.2879%" y="309" width="0.3244%" height="15" fill="rgb(221,89,17)" fg:x="805" fg:w="4"/><text x="65.5379%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.5312%" y="293" width="0.0811%" height="15" fill="rgb(209,55,3)" fg:x="808" fg:w="1"/><text x="65.7812%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (58 samples, 4.70%)</title><rect x="61.3139%" y="357" width="4.7040%" height="15" fill="rgb(247,23,45)" fg:x="756" fg:w="58"/><text x="61.5639%" y="367.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (57 samples, 4.62%)</title><rect x="61.3950%" y="341" width="4.6229%" height="15" fill="rgb(235,152,23)" fg:x="757" fg:w="57"/><text x="61.6450%" y="351.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="65.6123%" y="325" width="0.4055%" height="15" fill="rgb(244,63,13)" fg:x="809" fg:w="5"/><text x="65.8623%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="65.7745%" y="309" width="0.2433%" height="15" fill="rgb(227,30,37)" fg:x="811" fg:w="3"/><text x="66.0245%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="66.0989%" y="341" width="0.1622%" height="15" fill="rgb(224,49,42)" fg:x="815" fg:w="2"/><text x="66.3489%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.1800%" y="325" width="0.0811%" height="15" fill="rgb(218,129,5)" fg:x="816" fg:w="1"/><text x="66.4300%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 5.43%)</title><rect x="60.9084%" y="373" width="5.4339%" height="15" fill="rgb(240,199,54)" fg:x="751" fg:w="67"/><text x="61.1584%" y="383.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="66.0178%" y="357" width="0.3244%" height="15" fill="rgb(234,31,13)" fg:x="814" fg:w="4"/><text x="66.2678%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.2612%" y="341" width="0.0811%" height="15" fill="rgb(219,73,54)" fg:x="817" fg:w="1"/><text x="66.5112%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (97 samples, 7.87%)</title><rect x="60.8273%" y="405" width="7.8670%" height="15" fill="rgb(251,162,10)" fg:x="750" fg:w="97"/><text x="61.0773%" y="415.50">&lt;rpc_proto:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (96 samples, 7.79%)</title><rect x="60.9084%" y="389" width="7.7859%" height="15" fill="rgb(240,138,47)" fg:x="751" fg:w="96"/><text x="61.1584%" y="399.50">&lt;std::colle..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29 samples, 2.35%)</title><rect x="66.3423%" y="373" width="2.3520%" height="15" fill="rgb(216,138,26)" fg:x="818" fg:w="29"/><text x="66.5923%" y="383.50">h..</text></g><g><title>__libc_malloc (29 samples, 2.35%)</title><rect x="66.3423%" y="357" width="2.3520%" height="15" fill="rgb(243,17,35)" fg:x="818" fg:w="29"/><text x="66.5923%" y="367.50">_..</text></g><g><title>__libc_malloc (6 samples, 0.49%)</title><rect x="68.9376%" y="357" width="0.4866%" height="15" fill="rgb(241,60,18)" fg:x="850" fg:w="6"/><text x="69.1876%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.65%)</title><rect x="69.4242%" y="357" width="0.6488%" height="15" fill="rgb(234,2,44)" fg:x="856" fg:w="8"/><text x="69.6742%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="69.7486%" y="341" width="0.3244%" height="15" fill="rgb(225,225,33)" fg:x="860" fg:w="4"/><text x="69.9986%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="69.8297%" y="325" width="0.2433%" height="15" fill="rgb(234,50,31)" fg:x="861" fg:w="3"/><text x="70.0797%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="70.0730%" y="357" width="0.2433%" height="15" fill="rgb(249,6,25)" fg:x="864" fg:w="3"/><text x="70.3230%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.2352%" y="341" width="0.0811%" height="15" fill="rgb(241,5,17)" fg:x="866" fg:w="1"/><text x="70.4852%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2352%" y="325" width="0.0811%" height="15" fill="rgb(207,116,10)" fg:x="866" fg:w="1"/><text x="70.4852%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="70.3163%" y="341" width="0.0811%" height="15" fill="rgb(222,128,18)" fg:x="867" fg:w="1"/><text x="70.5663%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="70.3163%" y="357" width="0.2433%" height="15" fill="rgb(229,109,25)" fg:x="867" fg:w="3"/><text x="70.5663%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="70.3974%" y="341" width="0.1622%" height="15" fill="rgb(222,102,25)" fg:x="868" fg:w="2"/><text x="70.6474%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.3974%" y="325" width="0.1622%" height="15" fill="rgb(239,211,5)" fg:x="868" fg:w="2"/><text x="70.6474%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.6407%" y="325" width="0.0811%" height="15" fill="rgb(223,136,26)" fg:x="871" fg:w="1"/><text x="70.8907%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="70.5596%" y="357" width="0.3244%" height="15" fill="rgb(227,30,15)" fg:x="870" fg:w="4"/><text x="70.8096%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="70.5596%" y="341" width="0.3244%" height="15" fill="rgb(247,76,4)" fg:x="870" fg:w="4"/><text x="70.8096%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.7218%" y="325" width="0.1622%" height="15" fill="rgb(245,38,48)" fg:x="872" fg:w="2"/><text x="70.9718%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8029%" y="309" width="0.0811%" height="15" fill="rgb(210,220,14)" fg:x="873" fg:w="1"/><text x="71.0529%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8840%" y="325" width="0.0811%" height="15" fill="rgb(224,60,51)" fg:x="874" fg:w="1"/><text x="71.1340%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.0462%" y="277" width="0.1622%" height="15" fill="rgb(212,133,49)" fg:x="876" fg:w="2"/><text x="71.2962%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.1273%" y="261" width="0.0811%" height="15" fill="rgb(231,39,22)" fg:x="877" fg:w="1"/><text x="71.3773%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="71.0462%" y="293" width="0.3244%" height="15" fill="rgb(236,173,22)" fg:x="876" fg:w="4"/><text x="71.2962%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="71.2084%" y="277" width="0.1622%" height="15" fill="rgb(210,70,0)" fg:x="878" fg:w="2"/><text x="71.4584%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.2084%" y="261" width="0.1622%" height="15" fill="rgb(215,170,11)" fg:x="878" fg:w="2"/><text x="71.4584%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="71.3706%" y="277" width="0.2433%" height="15" fill="rgb(220,154,28)" fg:x="880" fg:w="3"/><text x="71.6206%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.4517%" y="261" width="0.1622%" height="15" fill="rgb(240,160,41)" fg:x="881" fg:w="2"/><text x="71.7017%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.4517%" y="245" width="0.1622%" height="15" fill="rgb(243,215,41)" fg:x="881" fg:w="2"/><text x="71.7017%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6951%" y="245" width="0.0811%" height="15" fill="rgb(214,208,31)" fg:x="884" fg:w="1"/><text x="71.9451%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.57%)</title><rect x="71.3706%" y="293" width="0.5677%" height="15" fill="rgb(247,57,22)" fg:x="880" fg:w="7"/><text x="71.6206%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="71.6139%" y="277" width="0.3244%" height="15" fill="rgb(228,73,52)" fg:x="883" fg:w="4"/><text x="71.8639%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="71.6951%" y="261" width="0.2433%" height="15" fill="rgb(252,60,9)" fg:x="884" fg:w="3"/><text x="71.9451%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="71.7762%" y="245" width="0.1622%" height="15" fill="rgb(233,9,51)" fg:x="885" fg:w="2"/><text x="72.0262%" y="255.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (15 samples, 1.22%)</title><rect x="70.8840%" y="357" width="1.2165%" height="15" fill="rgb(223,67,14)" fg:x="874" fg:w="15"/><text x="71.1340%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.22%)</title><rect x="70.8840%" y="341" width="1.2165%" height="15" fill="rgb(222,86,2)" fg:x="874" fg:w="15"/><text x="71.1340%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.14%)</title><rect x="70.9651%" y="325" width="1.1354%" height="15" fill="rgb(243,58,54)" fg:x="875" fg:w="14"/><text x="71.2151%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (14 samples, 1.14%)</title><rect x="70.9651%" y="309" width="1.1354%" height="15" fill="rgb(210,200,39)" fg:x="875" fg:w="14"/><text x="71.2151%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.9384%" y="293" width="0.1622%" height="15" fill="rgb(238,135,9)" fg:x="887" fg:w="2"/><text x="72.1884%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (2 samples, 0.16%)</title><rect x="72.1006%" y="357" width="0.1622%" height="15" fill="rgb(232,179,7)" fg:x="889" fg:w="2"/><text x="72.3506%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="72.1817%" y="341" width="0.0811%" height="15" fill="rgb(245,65,41)" fg:x="890" fg:w="1"/><text x="72.4317%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.5061%" y="341" width="0.1622%" height="15" fill="rgb(227,43,8)" fg:x="894" fg:w="2"/><text x="72.7561%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5872%" y="325" width="0.0811%" height="15" fill="rgb(235,91,14)" fg:x="895" fg:w="1"/><text x="72.8372%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5872%" y="309" width="0.0811%" height="15" fill="rgb(235,219,31)" fg:x="895" fg:w="1"/><text x="72.8372%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.6683%" y="325" width="0.0811%" height="15" fill="rgb(227,121,25)" fg:x="896" fg:w="1"/><text x="72.9183%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.8305%" y="309" width="0.1622%" height="15" fill="rgb(254,129,24)" fg:x="898" fg:w="2"/><text x="73.0805%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.8305%" y="293" width="0.1622%" height="15" fill="rgb(226,144,49)" fg:x="898" fg:w="2"/><text x="73.0805%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.8305%" y="277" width="0.1622%" height="15" fill="rgb(214,187,32)" fg:x="898" fg:w="2"/><text x="73.0805%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="73.2360%" y="261" width="0.2433%" height="15" fill="rgb(243,129,46)" fg:x="903" fg:w="3"/><text x="73.4860%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.3982%" y="245" width="0.0811%" height="15" fill="rgb(221,185,35)" fg:x="905" fg:w="1"/><text x="73.6482%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="73.3982%" y="229" width="0.0811%" height="15" fill="rgb(205,0,32)" fg:x="905" fg:w="1"/><text x="73.6482%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="73.1549%" y="277" width="0.4055%" height="15" fill="rgb(229,179,12)" fg:x="902" fg:w="5"/><text x="73.4049%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4793%" y="261" width="0.0811%" height="15" fill="rgb(252,107,19)" fg:x="906" fg:w="1"/><text x="73.7293%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4793%" y="245" width="0.0811%" height="15" fill="rgb(220,95,27)" fg:x="906" fg:w="1"/><text x="73.7293%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.73%)</title><rect x="72.9927%" y="309" width="0.7299%" height="15" fill="rgb(240,113,40)" fg:x="900" fg:w="9"/><text x="73.2427%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="73.0738%" y="293" width="0.6488%" height="15" fill="rgb(208,4,43)" fg:x="901" fg:w="8"/><text x="73.3238%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.5604%" y="277" width="0.1622%" height="15" fill="rgb(247,189,30)" fg:x="907" fg:w="2"/><text x="73.8104%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.8848%" y="293" width="0.0811%" height="15" fill="rgb(231,157,17)" fg:x="911" fg:w="1"/><text x="74.1348%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.9659%" y="277" width="0.1622%" height="15" fill="rgb(224,139,6)" fg:x="912" fg:w="2"/><text x="74.2159%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0470%" y="261" width="0.0811%" height="15" fill="rgb(223,83,16)" fg:x="913" fg:w="1"/><text x="74.2970%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0470%" y="245" width="0.0811%" height="15" fill="rgb(232,211,20)" fg:x="913" fg:w="1"/><text x="74.2970%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="73.9659%" y="293" width="0.3244%" height="15" fill="rgb(225,203,35)" fg:x="912" fg:w="4"/><text x="74.2159%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="74.1281%" y="277" width="0.1622%" height="15" fill="rgb(215,211,44)" fg:x="914" fg:w="2"/><text x="74.3781%" y="287.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (169 samples, 13.71%)</title><rect x="60.7461%" y="421" width="13.7064%" height="15" fill="rgb(248,213,26)" fg:x="749" fg:w="169"/><text x="60.9961%" y="431.50">&lt;rpc_proto::Json as c..</text></g><g><title>kernel::model::EntityPtr::to_json_value (71 samples, 5.76%)</title><rect x="68.6942%" y="405" width="5.7583%" height="15" fill="rgb(214,23,52)" fg:x="847" fg:w="71"/><text x="68.9442%" y="415.50">kernel:..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (71 samples, 5.76%)</title><rect x="68.6942%" y="389" width="5.7583%" height="15" fill="rgb(225,173,50)" fg:x="847" fg:w="71"/><text x="68.9442%" y="399.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (70 samples, 5.68%)</title><rect x="68.7753%" y="373" width="5.6772%" height="15" fill="rgb(206,150,22)" fg:x="848" fg:w="70"/><text x="69.0253%" y="383.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (27 samples, 2.19%)</title><rect x="72.2628%" y="357" width="2.1898%" height="15" fill="rgb(239,64,23)" fg:x="891" fg:w="27"/><text x="72.5128%" y="367.50">s..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (22 samples, 1.78%)</title><rect x="72.6683%" y="341" width="1.7843%" height="15" fill="rgb(242,50,38)" fg:x="896" fg:w="22"/><text x="72.9183%" y="351.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.70%)</title><rect x="72.7494%" y="325" width="1.7032%" height="15" fill="rgb(217,91,15)" fg:x="897" fg:w="21"/><text x="72.9994%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="73.7226%" y="309" width="0.7299%" height="15" fill="rgb(230,172,6)" fg:x="909" fg:w="9"/><text x="73.9726%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.2903%" y="293" width="0.1622%" height="15" fill="rgb(221,98,26)" fg:x="916" fg:w="2"/><text x="74.5403%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="74.4526%" y="421" width="0.1622%" height="15" fill="rgb(227,210,45)" fg:x="918" fg:w="2"/><text x="74.7026%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6959%" y="405" width="0.0811%" height="15" fill="rgb(206,8,30)" fg:x="921" fg:w="1"/><text x="74.9459%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="74.6148%" y="421" width="0.2433%" height="15" fill="rgb(241,219,17)" fg:x="920" fg:w="3"/><text x="74.8648%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="74.7770%" y="405" width="0.0811%" height="15" fill="rgb(247,121,29)" fg:x="922" fg:w="1"/><text x="75.0270%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7770%" y="389" width="0.0811%" height="15" fill="rgb(219,169,49)" fg:x="922" fg:w="1"/><text x="75.0270%" y="399.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (343 samples, 27.82%)</title><rect x="47.1208%" y="501" width="27.8183%" height="15" fill="rgb(253,49,49)" fg:x="581" fg:w="343"/><text x="47.3708%" y="511.50">&lt;plugins_rpc::sessions::SessionServices as pl..</text></g><g><title>core::iter::adapters::try_process (325 samples, 26.36%)</title><rect x="48.5807%" y="485" width="26.3585%" height="15" fill="rgb(217,178,3)" fg:x="599" fg:w="325"/><text x="48.8307%" y="495.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (193 samples, 15.65%)</title><rect x="59.2863%" y="469" width="15.6529%" height="15" fill="rgb(234,73,37)" fg:x="731" fg:w="193"/><text x="59.5363%" y="479.50">alloc::vec::in_place_col..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (193 samples, 15.65%)</title><rect x="59.2863%" y="453" width="15.6529%" height="15" fill="rgb(250,98,22)" fg:x="731" fg:w="193"/><text x="59.5363%" y="463.50">&lt;core::iter::adapters::m..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (191 samples, 15.49%)</title><rect x="59.4485%" y="437" width="15.4907%" height="15" fill="rgb(220,108,37)" fg:x="733" fg:w="191"/><text x="59.6985%" y="447.50">plugins_rpc::sessions::S..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="74.8581%" y="421" width="0.0811%" height="15" fill="rgb(225,168,10)" fg:x="923" fg:w="1"/><text x="75.1081%" y="431.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="74.8581%" y="405" width="0.0811%" height="15" fill="rgb(247,215,21)" fg:x="923" fg:w="1"/><text x="75.1081%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8581%" y="389" width="0.0811%" height="15" fill="rgb(253,189,31)" fg:x="923" fg:w="1"/><text x="75.1081%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9392%" y="501" width="0.0811%" height="15" fill="rgb(241,54,22)" fg:x="924" fg:w="1"/><text x="75.1892%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.1014%" y="453" width="0.0811%" height="15" fill="rgb(211,87,4)" fg:x="926" fg:w="1"/><text x="75.3514%" y="463.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (396 samples, 32.12%)</title><rect x="43.1468%" y="565" width="32.1168%" height="15" fill="rgb(245,112,24)" fg:x="532" fg:w="396"/><text x="43.3968%" y="575.50">&lt;engine::perform::StandardPerformer as kernel::scope..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (375 samples, 30.41%)</title><rect x="44.8500%" y="549" width="30.4136%" height="15" fill="rgb(235,190,41)" fg:x="553" fg:w="375"/><text x="45.1000%" y="559.50">kernel::plugins::SessionPlugins::have_surroundings</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (374 samples, 30.33%)</title><rect x="44.9311%" y="533" width="30.3325%" height="15" fill="rgb(214,89,8)" fg:x="554" fg:w="374"/><text x="45.1811%" y="543.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugins..</text></g><g><title>plugins_rpc::querying::have_surroundings (347 samples, 28.14%)</title><rect x="47.1208%" y="517" width="28.1427%" height="15" fill="rgb(249,155,35)" fg:x="581" fg:w="347"/><text x="47.3708%" y="527.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="75.0203%" y="501" width="0.2433%" height="15" fill="rgb(249,88,26)" fg:x="925" fg:w="3"/><text x="75.2703%" y="511.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (2 samples, 0.16%)</title><rect x="75.1014%" y="485" width="0.1622%" height="15" fill="rgb(232,56,8)" fg:x="926" fg:w="2"/><text x="75.3514%" y="495.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (2 samples, 0.16%)</title><rect x="75.1014%" y="469" width="0.1622%" height="15" fill="rgb(240,95,3)" fg:x="926" fg:w="2"/><text x="75.3514%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.1825%" y="453" width="0.0811%" height="15" fill="rgb(222,44,28)" fg:x="927" fg:w="1"/><text x="75.4325%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.1825%" y="437" width="0.0811%" height="15" fill="rgb(234,16,30)" fg:x="927" fg:w="1"/><text x="75.4325%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.1825%" y="421" width="0.0811%" height="15" fill="rgb(223,26,17)" fg:x="927" fg:w="1"/><text x="75.4325%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.1825%" y="405" width="0.0811%" height="15" fill="rgb(239,187,47)" fg:x="927" fg:w="1"/><text x="75.4325%" y="415.50"></text></g><g><title>kernel::model::Entity::gid (2 samples, 0.16%)</title><rect x="75.3447%" y="517" width="0.1622%" height="15" fill="rgb(247,102,50)" fg:x="929" fg:w="2"/><text x="75.5947%" y="527.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="75.4258%" y="501" width="0.0811%" height="15" fill="rgb(231,216,22)" fg:x="930" fg:w="1"/><text x="75.6758%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.4258%" y="485" width="0.0811%" height="15" fill="rgb(216,201,26)" fg:x="930" fg:w="1"/><text x="75.6758%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="75.4258%" y="469" width="0.0811%" height="15" fill="rgb(214,186,23)" fg:x="930" fg:w="1"/><text x="75.6758%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5880%" y="389" width="0.0811%" height="15" fill="rgb(235,184,4)" fg:x="932" fg:w="1"/><text x="75.8380%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.5880%" y="373" width="0.0811%" height="15" fill="rgb(244,46,17)" fg:x="932" fg:w="1"/><text x="75.8380%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.5880%" y="357" width="0.0811%" height="15" fill="rgb(248,74,46)" fg:x="932" fg:w="1"/><text x="75.8380%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5880%" y="341" width="0.0811%" height="15" fill="rgb(243,79,5)" fg:x="932" fg:w="1"/><text x="75.8380%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5880%" y="325" width="0.0811%" height="15" fill="rgb(213,148,1)" fg:x="932" fg:w="1"/><text x="75.8380%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.5880%" y="309" width="0.0811%" height="15" fill="rgb(221,30,0)" fg:x="932" fg:w="1"/><text x="75.8380%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.5880%" y="293" width="0.0811%" height="15" fill="rgb(207,85,29)" fg:x="932" fg:w="1"/><text x="75.8380%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="75.5880%" y="277" width="0.0811%" height="15" fill="rgb(239,31,46)" fg:x="932" fg:w="1"/><text x="75.8380%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5880%" y="261" width="0.0811%" height="15" fill="rgb(219,6,1)" fg:x="932" fg:w="1"/><text x="75.8380%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.5880%" y="437" width="0.1622%" height="15" fill="rgb(229,90,29)" fg:x="932" fg:w="2"/><text x="75.8380%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5880%" y="421" width="0.1622%" height="15" fill="rgb(242,201,42)" fg:x="932" fg:w="2"/><text x="75.8380%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.5880%" y="405" width="0.1622%" height="15" fill="rgb(243,80,54)" fg:x="932" fg:w="2"/><text x="75.8380%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6691%" y="389" width="0.0811%" height="15" fill="rgb(223,166,15)" fg:x="933" fg:w="1"/><text x="75.9191%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.6691%" y="373" width="0.0811%" height="15" fill="rgb(238,78,27)" fg:x="933" fg:w="1"/><text x="75.9191%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6691%" y="357" width="0.0811%" height="15" fill="rgb(235,28,43)" fg:x="933" fg:w="1"/><text x="75.9191%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8313%" y="405" width="0.0811%" height="15" fill="rgb(240,210,28)" fg:x="935" fg:w="1"/><text x="76.0813%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.49%)</title><rect x="75.5069%" y="501" width="0.4866%" height="15" fill="rgb(253,6,46)" fg:x="931" fg:w="6"/><text x="75.7569%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.49%)</title><rect x="75.5069%" y="485" width="0.4866%" height="15" fill="rgb(250,159,47)" fg:x="931" fg:w="6"/><text x="75.7569%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="75.5069%" y="469" width="0.4866%" height="15" fill="rgb(216,139,2)" fg:x="931" fg:w="6"/><text x="75.7569%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="75.5069%" y="453" width="0.4866%" height="15" fill="rgb(221,124,44)" fg:x="931" fg:w="6"/><text x="75.7569%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="75.7502%" y="437" width="0.2433%" height="15" fill="rgb(205,37,22)" fg:x="934" fg:w="3"/><text x="76.0002%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.7502%" y="421" width="0.2433%" height="15" fill="rgb(250,55,8)" fg:x="934" fg:w="3"/><text x="76.0002%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.9124%" y="405" width="0.0811%" height="15" fill="rgb(215,83,48)" fg:x="936" fg:w="1"/><text x="76.1624%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9124%" y="389" width="0.0811%" height="15" fill="rgb(253,2,32)" fg:x="936" fg:w="1"/><text x="76.1624%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.9124%" y="373" width="0.0811%" height="15" fill="rgb(236,67,28)" fg:x="936" fg:w="1"/><text x="76.1624%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.9935%" y="453" width="0.0811%" height="15" fill="rgb(252,55,15)" fg:x="937" fg:w="1"/><text x="76.2435%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.9935%" y="437" width="0.0811%" height="15" fill="rgb(243,173,17)" fg:x="937" fg:w="1"/><text x="76.2435%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.0746%" y="453" width="0.0811%" height="15" fill="rgb(215,212,13)" fg:x="938" fg:w="1"/><text x="76.3246%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.0746%" y="437" width="0.0811%" height="15" fill="rgb(253,176,6)" fg:x="938" fg:w="1"/><text x="76.3246%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1557%" y="421" width="0.0811%" height="15" fill="rgb(236,105,26)" fg:x="939" fg:w="1"/><text x="76.4057%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1557%" y="405" width="0.0811%" height="15" fill="rgb(239,226,32)" fg:x="939" fg:w="1"/><text x="76.4057%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1557%" y="389" width="0.0811%" height="15" fill="rgb(236,104,51)" fg:x="939" fg:w="1"/><text x="76.4057%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (14 samples, 1.14%)</title><rect x="75.2636%" y="533" width="1.1354%" height="15" fill="rgb(220,172,33)" fg:x="928" fg:w="14"/><text x="75.5136%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.89%)</title><rect x="75.5069%" y="517" width="0.8921%" height="15" fill="rgb(224,182,25)" fg:x="931" fg:w="11"/><text x="75.7569%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="75.9935%" y="501" width="0.4055%" height="15" fill="rgb(236,184,24)" fg:x="937" fg:w="5"/><text x="76.2435%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="75.9935%" y="485" width="0.4055%" height="15" fill="rgb(241,221,14)" fg:x="937" fg:w="5"/><text x="76.2435%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="75.9935%" y="469" width="0.4055%" height="15" fill="rgb(227,146,5)" fg:x="937" fg:w="5"/><text x="76.2435%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="76.1557%" y="453" width="0.2433%" height="15" fill="rgb(214,15,23)" fg:x="939" fg:w="3"/><text x="76.4057%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.1557%" y="437" width="0.2433%" height="15" fill="rgb(233,157,31)" fg:x="939" fg:w="3"/><text x="76.4057%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.2368%" y="421" width="0.1622%" height="15" fill="rgb(211,27,52)" fg:x="940" fg:w="2"/><text x="76.4868%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.2368%" y="405" width="0.1622%" height="15" fill="rgb(212,223,15)" fg:x="940" fg:w="2"/><text x="76.4868%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.2368%" y="389" width="0.1622%" height="15" fill="rgb(254,211,0)" fg:x="940" fg:w="2"/><text x="76.4868%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.2368%" y="373" width="0.1622%" height="15" fill="rgb(205,43,38)" fg:x="940" fg:w="2"/><text x="76.4868%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.3179%" y="357" width="0.0811%" height="15" fill="rgb(242,206,46)" fg:x="941" fg:w="1"/><text x="76.5679%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3990%" y="517" width="0.0811%" height="15" fill="rgb(220,221,12)" fg:x="942" fg:w="1"/><text x="76.6490%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.4801%" y="405" width="0.0811%" height="15" fill="rgb(217,156,35)" fg:x="943" fg:w="1"/><text x="76.7301%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.4801%" y="389" width="0.0811%" height="15" fill="rgb(207,181,49)" fg:x="943" fg:w="1"/><text x="76.7301%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="76.4801%" y="373" width="0.0811%" height="15" fill="rgb(235,103,47)" fg:x="943" fg:w="1"/><text x="76.7301%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="76.4801%" y="357" width="0.0811%" height="15" fill="rgb(222,63,28)" fg:x="943" fg:w="1"/><text x="76.7301%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="76.4801%" y="341" width="0.0811%" height="15" fill="rgb(244,137,21)" fg:x="943" fg:w="1"/><text x="76.7301%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="76.4801%" y="325" width="0.0811%" height="15" fill="rgb(228,35,27)" fg:x="943" fg:w="1"/><text x="76.7301%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="76.4801%" y="309" width="0.0811%" height="15" fill="rgb(226,191,41)" fg:x="943" fg:w="1"/><text x="76.7301%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="76.4801%" y="293" width="0.0811%" height="15" fill="rgb(210,154,3)" fg:x="943" fg:w="1"/><text x="76.7301%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.4801%" y="277" width="0.0811%" height="15" fill="rgb(216,60,49)" fg:x="943" fg:w="1"/><text x="76.7301%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="76.4801%" y="261" width="0.0811%" height="15" fill="rgb(226,17,20)" fg:x="943" fg:w="1"/><text x="76.7301%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.4801%" y="245" width="0.0811%" height="15" fill="rgb(206,115,35)" fg:x="943" fg:w="1"/><text x="76.7301%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4801%" y="229" width="0.0811%" height="15" fill="rgb(227,88,1)" fg:x="943" fg:w="1"/><text x="76.7301%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (17 samples, 1.38%)</title><rect x="75.2636%" y="549" width="1.3788%" height="15" fill="rgb(230,222,24)" fg:x="928" fg:w="17"/><text x="75.5136%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="76.3990%" y="533" width="0.2433%" height="15" fill="rgb(214,124,32)" fg:x="942" fg:w="3"/><text x="76.6490%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="76.4801%" y="517" width="0.1622%" height="15" fill="rgb(240,41,36)" fg:x="943" fg:w="2"/><text x="76.7301%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="76.4801%" y="501" width="0.1622%" height="15" fill="rgb(221,17,52)" fg:x="943" fg:w="2"/><text x="76.7301%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.4801%" y="485" width="0.1622%" height="15" fill="rgb(252,70,16)" fg:x="943" fg:w="2"/><text x="76.7301%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.4801%" y="469" width="0.1622%" height="15" fill="rgb(250,177,4)" fg:x="943" fg:w="2"/><text x="76.7301%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="76.4801%" y="453" width="0.1622%" height="15" fill="rgb(240,188,47)" fg:x="943" fg:w="2"/><text x="76.7301%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="76.4801%" y="437" width="0.1622%" height="15" fill="rgb(215,92,12)" fg:x="943" fg:w="2"/><text x="76.7301%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.4801%" y="421" width="0.1622%" height="15" fill="rgb(242,110,29)" fg:x="943" fg:w="2"/><text x="76.7301%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.5612%" y="405" width="0.0811%" height="15" fill="rgb(208,211,26)" fg:x="944" fg:w="1"/><text x="76.8112%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="76.5612%" y="389" width="0.0811%" height="15" fill="rgb(244,147,6)" fg:x="944" fg:w="1"/><text x="76.8112%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.5612%" y="373" width="0.0811%" height="15" fill="rgb(211,130,42)" fg:x="944" fg:w="1"/><text x="76.8112%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.5612%" y="357" width="0.0811%" height="15" fill="rgb(220,63,1)" fg:x="944" fg:w="1"/><text x="76.8112%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="76.6423%" y="549" width="0.0811%" height="15" fill="rgb(241,212,30)" fg:x="945" fg:w="1"/><text x="76.8923%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6423%" y="533" width="0.0811%" height="15" fill="rgb(233,153,17)" fg:x="945" fg:w="1"/><text x="76.8923%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="76.8045%" y="533" width="0.2433%" height="15" fill="rgb(236,3,10)" fg:x="947" fg:w="3"/><text x="77.0545%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="76.9667%" y="517" width="0.0811%" height="15" fill="rgb(232,41,21)" fg:x="949" fg:w="1"/><text x="77.2167%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="76.9667%" y="501" width="0.0811%" height="15" fill="rgb(206,63,51)" fg:x="949" fg:w="1"/><text x="77.2167%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9667%" y="485" width="0.0811%" height="15" fill="rgb(250,214,3)" fg:x="949" fg:w="1"/><text x="77.2167%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9667%" y="469" width="0.0811%" height="15" fill="rgb(254,89,27)" fg:x="949" fg:w="1"/><text x="77.2167%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9667%" y="453" width="0.0811%" height="15" fill="rgb(249,41,14)" fg:x="949" fg:w="1"/><text x="77.2167%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.9667%" y="437" width="0.0811%" height="15" fill="rgb(221,196,51)" fg:x="949" fg:w="1"/><text x="77.2167%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.9667%" y="421" width="0.0811%" height="15" fill="rgb(214,116,26)" fg:x="949" fg:w="1"/><text x="77.2167%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.9667%" y="405" width="0.0811%" height="15" fill="rgb(236,67,7)" fg:x="949" fg:w="1"/><text x="77.2167%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9667%" y="389" width="0.0811%" height="15" fill="rgb(253,179,32)" fg:x="949" fg:w="1"/><text x="77.2167%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9667%" y="373" width="0.0811%" height="15" fill="rgb(218,33,15)" fg:x="949" fg:w="1"/><text x="77.2167%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.9667%" y="357" width="0.0811%" height="15" fill="rgb(217,202,41)" fg:x="949" fg:w="1"/><text x="77.2167%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.9667%" y="341" width="0.0811%" height="15" fill="rgb(234,133,5)" fg:x="949" fg:w="1"/><text x="77.2167%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.9667%" y="325" width="0.0811%" height="15" fill="rgb(240,47,40)" fg:x="949" fg:w="1"/><text x="77.2167%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.9667%" y="309" width="0.0811%" height="15" fill="rgb(234,166,26)" fg:x="949" fg:w="1"/><text x="77.2167%" y="319.50"></text></g><g><title>engine::session::Session::world (5 samples, 0.41%)</title><rect x="76.7234%" y="549" width="0.4055%" height="15" fill="rgb(244,125,51)" fg:x="946" fg:w="5"/><text x="76.9734%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="77.0479%" y="533" width="0.0811%" height="15" fill="rgb(229,171,11)" fg:x="950" fg:w="1"/><text x="77.2979%" y="543.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (422 samples, 34.23%)</title><rect x="43.1468%" y="581" width="34.2255%" height="15" fill="rgb(224,38,45)" fg:x="532" fg:w="422"/><text x="43.3968%" y="591.50">&lt;engine::perform::StandardPerformer as kernel::scopes::P..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (26 samples, 2.11%)</title><rect x="75.2636%" y="565" width="2.1087%" height="15" fill="rgb(237,27,7)" fg:x="928" fg:w="26"/><text x="75.5136%" y="575.50">e..</text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="77.1290%" y="549" width="0.2433%" height="15" fill="rgb(216,52,7)" fg:x="951" fg:w="3"/><text x="77.3790%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="77.2101%" y="533" width="0.1622%" height="15" fill="rgb(243,11,11)" fg:x="952" fg:w="2"/><text x="77.4601%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="77.2101%" y="517" width="0.1622%" height="15" fill="rgb(253,167,20)" fg:x="952" fg:w="2"/><text x="77.4601%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.2101%" y="501" width="0.1622%" height="15" fill="rgb(215,207,5)" fg:x="952" fg:w="2"/><text x="77.4601%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.2912%" y="485" width="0.0811%" height="15" fill="rgb(252,127,31)" fg:x="953" fg:w="1"/><text x="77.5412%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (423 samples, 34.31%)</title><rect x="43.1468%" y="597" width="34.3066%" height="15" fill="rgb(209,106,27)" fg:x="532" fg:w="423"/><text x="43.3968%" y="607.50">&lt;plugins_core::carrying::CarryingPlugin as kernel::plugi..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.3723%" y="581" width="0.0811%" height="15" fill="rgb(214,220,18)" fg:x="954" fg:w="1"/><text x="77.6223%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.3723%" y="565" width="0.0811%" height="15" fill="rgb(237,89,12)" fg:x="954" fg:w="1"/><text x="77.6223%" y="575.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="77.4534%" y="597" width="0.0811%" height="15" fill="rgb(209,167,36)" fg:x="955" fg:w="1"/><text x="77.7034%" y="607.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.4534%" y="581" width="0.0811%" height="15" fill="rgb(243,45,22)" fg:x="955" fg:w="1"/><text x="77.7034%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (426 samples, 34.55%)</title><rect x="43.0657%" y="613" width="34.5499%" height="15" fill="rgb(239,2,46)" fg:x="531" fg:w="426"/><text x="43.3157%" y="623.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="77.5345%" y="597" width="0.0811%" height="15" fill="rgb(241,101,0)" fg:x="956" fg:w="1"/><text x="77.7845%" y="607.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (430 samples, 34.87%)</title><rect x="42.8224%" y="661" width="34.8743%" height="15" fill="rgb(244,34,31)" fg:x="528" fg:w="430"/><text x="43.0724%" y="671.50">&lt;kernel::plugins::SessionPlugins as kernel::plugins::Eval..</text></g><g><title>core::iter::adapters::try_process (428 samples, 34.71%)</title><rect x="42.9846%" y="645" width="34.7121%" height="15" fill="rgb(248,23,22)" fg:x="530" fg:w="428"/><text x="43.2346%" y="655.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (428 samples, 34.71%)</title><rect x="42.9846%" y="629" width="34.7121%" height="15" fill="rgb(218,27,48)" fg:x="530" fg:w="428"/><text x="43.2346%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecF..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.6156%" y="613" width="0.0811%" height="15" fill="rgb(232,78,1)" fg:x="957" fg:w="1"/><text x="77.8656%" y="623.50"></text></g><g><title>&lt;kernel::scopes::Perform as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="77.6156%" y="597" width="0.0811%" height="15" fill="rgb(233,169,12)" fg:x="957" fg:w="1"/><text x="77.8656%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.6967%" y="549" width="0.0811%" height="15" fill="rgb(225,222,54)" fg:x="958" fg:w="1"/><text x="77.9467%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.6967%" y="533" width="0.0811%" height="15" fill="rgb(245,126,29)" fg:x="958" fg:w="1"/><text x="77.9467%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (960 samples, 77.86%)</title><rect x="0.0000%" y="741" width="77.8589%" height="15" fill="rgb(241,63,48)" fg:x="0" fg:w="960"/><text x="0.2500%" y="751.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (960 samples, 77.86%)</title><rect x="0.0000%" y="725" width="77.8589%" height="15" fill="rgb(235,126,38)" fg:x="0" fg:w="960"/><text x="0.2500%" y="735.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (959 samples, 77.78%)</title><rect x="0.0811%" y="709" width="77.7778%" height="15" fill="rgb(232,96,49)" fg:x="1" fg:w="959"/><text x="0.3311%" y="719.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (432 samples, 35.04%)</title><rect x="42.8224%" y="693" width="35.0365%" height="15" fill="rgb(211,146,40)" fg:x="528" fg:w="432"/><text x="43.0724%" y="703.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (432 samples, 35.04%)</title><rect x="42.8224%" y="677" width="35.0365%" height="15" fill="rgb(247,93,44)" fg:x="528" fg:w="432"/><text x="43.0724%" y="687.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="77.6967%" y="661" width="0.1622%" height="15" fill="rgb(251,41,49)" fg:x="958" fg:w="2"/><text x="77.9467%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="77.6967%" y="645" width="0.1622%" height="15" fill="rgb(218,155,12)" fg:x="958" fg:w="2"/><text x="77.9467%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.6967%" y="629" width="0.1622%" height="15" fill="rgb(221,161,30)" fg:x="958" fg:w="2"/><text x="77.9467%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="77.6967%" y="613" width="0.1622%" height="15" fill="rgb(221,179,11)" fg:x="958" fg:w="2"/><text x="77.9467%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="77.6967%" y="597" width="0.1622%" height="15" fill="rgb(224,170,48)" fg:x="958" fg:w="2"/><text x="77.9467%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="77.6967%" y="581" width="0.1622%" height="15" fill="rgb(223,117,5)" fg:x="958" fg:w="2"/><text x="77.9467%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="77.6967%" y="565" width="0.1622%" height="15" fill="rgb(209,52,20)" fg:x="958" fg:w="2"/><text x="77.9467%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.7778%" y="549" width="0.0811%" height="15" fill="rgb(209,19,41)" fg:x="959" fg:w="1"/><text x="78.0278%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.7778%" y="533" width="0.0811%" height="15" fill="rgb(210,177,12)" fg:x="959" fg:w="1"/><text x="78.0278%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0211%" y="597" width="0.0811%" height="15" fill="rgb(211,159,37)" fg:x="962" fg:w="1"/><text x="78.2711%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1022%" y="565" width="0.0811%" height="15" fill="rgb(209,20,2)" fg:x="963" fg:w="1"/><text x="78.3522%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1022%" y="549" width="0.0811%" height="15" fill="rgb(244,3,46)" fg:x="963" fg:w="1"/><text x="78.3522%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="78.0211%" y="629" width="0.2433%" height="15" fill="rgb(220,94,38)" fg:x="962" fg:w="3"/><text x="78.2711%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="78.0211%" y="613" width="0.2433%" height="15" fill="rgb(253,14,31)" fg:x="962" fg:w="3"/><text x="78.2711%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.1022%" y="597" width="0.1622%" height="15" fill="rgb(234,176,13)" fg:x="963" fg:w="2"/><text x="78.3522%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="78.1022%" y="581" width="0.1622%" height="15" fill="rgb(218,62,25)" fg:x="963" fg:w="2"/><text x="78.3522%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1833%" y="565" width="0.0811%" height="15" fill="rgb(216,124,40)" fg:x="964" fg:w="1"/><text x="78.4333%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="77.8589%" y="693" width="0.4866%" height="15" fill="rgb(228,170,12)" fg:x="960" fg:w="6"/><text x="78.1089%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (6 samples, 0.49%)</title><rect x="77.8589%" y="677" width="0.4866%" height="15" fill="rgb(231,226,5)" fg:x="960" fg:w="6"/><text x="78.1089%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.41%)</title><rect x="77.9400%" y="661" width="0.4055%" height="15" fill="rgb(237,122,22)" fg:x="961" fg:w="5"/><text x="78.1900%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (5 samples, 0.41%)</title><rect x="77.9400%" y="645" width="0.4055%" height="15" fill="rgb(209,185,25)" fg:x="961" fg:w="5"/><text x="78.1900%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="78.2644%" y="629" width="0.0811%" height="15" fill="rgb(228,200,32)" fg:x="965" fg:w="1"/><text x="78.5144%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2644%" y="613" width="0.0811%" height="15" fill="rgb(217,140,10)" fg:x="965" fg:w="1"/><text x="78.5144%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="78.4266%" y="661" width="0.2433%" height="15" fill="rgb(253,17,24)" fg:x="967" fg:w="3"/><text x="78.6766%" y="671.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.24%)</title><rect x="78.4266%" y="645" width="0.2433%" height="15" fill="rgb(212,61,6)" fg:x="967" fg:w="3"/><text x="78.6766%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="78.4266%" y="629" width="0.2433%" height="15" fill="rgb(205,14,25)" fg:x="967" fg:w="3"/><text x="78.6766%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="78.5077%" y="613" width="0.1622%" height="15" fill="rgb(232,69,41)" fg:x="968" fg:w="2"/><text x="78.7577%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="78.5077%" y="597" width="0.1622%" height="15" fill="rgb(241,106,47)" fg:x="968" fg:w="2"/><text x="78.7577%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="78.5077%" y="581" width="0.1622%" height="15" fill="rgb(210,213,53)" fg:x="968" fg:w="2"/><text x="78.7577%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.5077%" y="565" width="0.1622%" height="15" fill="rgb(253,175,27)" fg:x="968" fg:w="2"/><text x="78.7577%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="78.5077%" y="549" width="0.1622%" height="15" fill="rgb(211,171,24)" fg:x="968" fg:w="2"/><text x="78.7577%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.5077%" y="533" width="0.1622%" height="15" fill="rgb(229,80,7)" fg:x="968" fg:w="2"/><text x="78.7577%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5888%" y="517" width="0.0811%" height="15" fill="rgb(212,46,39)" fg:x="969" fg:w="1"/><text x="78.8388%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.5888%" y="501" width="0.0811%" height="15" fill="rgb(240,80,45)" fg:x="969" fg:w="1"/><text x="78.8388%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="78.5888%" y="485" width="0.0811%" height="15" fill="rgb(253,177,40)" fg:x="969" fg:w="1"/><text x="78.8388%" y="495.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (2 samples, 0.16%)</title><rect x="78.6699%" y="661" width="0.1622%" height="15" fill="rgb(249,200,15)" fg:x="970" fg:w="2"/><text x="78.9199%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7510%" y="645" width="0.0811%" height="15" fill="rgb(217,78,26)" fg:x="971" fg:w="1"/><text x="79.0010%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8321%" y="613" width="0.0811%" height="15" fill="rgb(254,151,32)" fg:x="972" fg:w="1"/><text x="79.0821%" y="623.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="78.9943%" y="597" width="0.0811%" height="15" fill="rgb(226,165,27)" fg:x="974" fg:w="1"/><text x="79.2443%" y="607.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="78.9943%" y="581" width="0.0811%" height="15" fill="rgb(250,206,4)" fg:x="974" fg:w="1"/><text x="79.2443%" y="591.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (13 samples, 1.05%)</title><rect x="78.3455%" y="693" width="1.0543%" height="15" fill="rgb(231,229,27)" fg:x="966" fg:w="13"/><text x="78.5955%" y="703.50"></text></g><g><title>engine::session::Session::new (13 samples, 1.05%)</title><rect x="78.3455%" y="677" width="1.0543%" height="15" fill="rgb(239,217,8)" fg:x="966" fg:w="13"/><text x="78.5955%" y="687.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.57%)</title><rect x="78.8321%" y="661" width="0.5677%" height="15" fill="rgb(225,204,27)" fg:x="972" fg:w="7"/><text x="79.0821%" y="671.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.57%)</title><rect x="78.8321%" y="645" width="0.5677%" height="15" fill="rgb(230,56,32)" fg:x="972" fg:w="7"/><text x="79.0821%" y="655.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.57%)</title><rect x="78.8321%" y="629" width="0.5677%" height="15" fill="rgb(222,56,27)" fg:x="972" fg:w="7"/><text x="79.0821%" y="639.50"></text></g><g><title>libloading::os::unix::Library::open (6 samples, 0.49%)</title><rect x="78.9132%" y="613" width="0.4866%" height="15" fill="rgb(253,108,27)" fg:x="973" fg:w="6"/><text x="79.1632%" y="623.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="79.0754%" y="597" width="0.3244%" height="15" fill="rgb(212,87,36)" fg:x="975" fg:w="4"/><text x="79.3254%" y="607.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="79.1565%" y="581" width="0.2433%" height="15" fill="rgb(247,82,36)" fg:x="976" fg:w="3"/><text x="79.4065%" y="591.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="79.1565%" y="565" width="0.2433%" height="15" fill="rgb(222,143,9)" fg:x="976" fg:w="3"/><text x="79.4065%" y="575.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="79.1565%" y="549" width="0.2433%" height="15" fill="rgb(238,162,48)" fg:x="976" fg:w="3"/><text x="79.4065%" y="559.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="79.2376%" y="533" width="0.1622%" height="15" fill="rgb(221,59,43)" fg:x="977" fg:w="2"/><text x="79.4876%" y="543.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="79.3187%" y="517" width="0.0811%" height="15" fill="rgb(205,166,41)" fg:x="978" fg:w="1"/><text x="79.5687%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="79.4809%" y="677" width="0.0811%" height="15" fill="rgb(241,186,40)" fg:x="980" fg:w="1"/><text x="79.7309%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="79.4809%" y="661" width="0.0811%" height="15" fill="rgb(216,119,35)" fg:x="980" fg:w="1"/><text x="79.7309%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="79.4809%" y="645" width="0.0811%" height="15" fill="rgb(208,68,38)" fg:x="980" fg:w="1"/><text x="79.7309%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="79.4809%" y="629" width="0.0811%" height="15" fill="rgb(217,113,1)" fg:x="980" fg:w="1"/><text x="79.7309%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4809%" y="613" width="0.0811%" height="15" fill="rgb(242,153,3)" fg:x="980" fg:w="1"/><text x="79.7309%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.5620%" y="645" width="0.0811%" height="15" fill="rgb(229,76,35)" fg:x="981" fg:w="1"/><text x="79.8120%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="79.5620%" y="629" width="0.0811%" height="15" fill="rgb(229,125,34)" fg:x="981" fg:w="1"/><text x="79.8120%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.6431%" y="581" width="0.1622%" height="15" fill="rgb(238,179,36)" fg:x="982" fg:w="2"/><text x="79.8931%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.7242%" y="565" width="0.0811%" height="15" fill="rgb(244,183,19)" fg:x="983" fg:w="1"/><text x="79.9742%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="79.6431%" y="597" width="0.2433%" height="15" fill="rgb(216,85,49)" fg:x="982" fg:w="3"/><text x="79.8931%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.8054%" y="581" width="0.0811%" height="15" fill="rgb(208,161,47)" fg:x="984" fg:w="1"/><text x="80.0554%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.9676%" y="565" width="0.0811%" height="15" fill="rgb(233,210,18)" fg:x="986" fg:w="1"/><text x="80.2176%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9676%" y="549" width="0.0811%" height="15" fill="rgb(205,104,42)" fg:x="986" fg:w="1"/><text x="80.2176%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.9676%" y="533" width="0.0811%" height="15" fill="rgb(248,90,43)" fg:x="986" fg:w="1"/><text x="80.2176%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.0487%" y="565" width="0.0811%" height="15" fill="rgb(206,198,11)" fg:x="987" fg:w="1"/><text x="80.2987%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.1298%" y="549" width="0.0811%" height="15" fill="rgb(239,165,27)" fg:x="988" fg:w="1"/><text x="80.3798%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.1298%" y="533" width="0.0811%" height="15" fill="rgb(246,44,32)" fg:x="988" fg:w="1"/><text x="80.3798%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.1298%" y="517" width="0.0811%" height="15" fill="rgb(252,65,42)" fg:x="988" fg:w="1"/><text x="80.3798%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.1298%" y="501" width="0.0811%" height="15" fill="rgb(246,197,18)" fg:x="988" fg:w="1"/><text x="80.3798%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.2920%" y="533" width="0.0811%" height="15" fill="rgb(216,192,4)" fg:x="990" fg:w="1"/><text x="80.5420%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.2920%" y="517" width="0.0811%" height="15" fill="rgb(208,117,10)" fg:x="990" fg:w="1"/><text x="80.5420%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.3731%" y="533" width="0.0811%" height="15" fill="rgb(240,61,47)" fg:x="991" fg:w="1"/><text x="80.6231%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="79.9676%" y="581" width="0.5677%" height="15" fill="rgb(228,178,21)" fg:x="986" fg:w="7"/><text x="80.2176%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="80.1298%" y="565" width="0.4055%" height="15" fill="rgb(219,96,54)" fg:x="988" fg:w="5"/><text x="80.3798%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.2109%" y="549" width="0.3244%" height="15" fill="rgb(250,177,24)" fg:x="989" fg:w="4"/><text x="80.4609%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4542%" y="533" width="0.0811%" height="15" fill="rgb(242,154,46)" fg:x="992" fg:w="1"/><text x="80.7042%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="79.6431%" y="613" width="0.9732%" height="15" fill="rgb(226,176,29)" fg:x="982" fg:w="12"/><text x="79.8931%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="79.8865%" y="597" width="0.7299%" height="15" fill="rgb(226,29,2)" fg:x="985" fg:w="9"/><text x="80.1365%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.5353%" y="581" width="0.0811%" height="15" fill="rgb(237,104,14)" fg:x="993" fg:w="1"/><text x="80.7853%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.5353%" y="565" width="0.0811%" height="15" fill="rgb(245,207,31)" fg:x="993" fg:w="1"/><text x="80.7853%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.6164%" y="613" width="0.1622%" height="15" fill="rgb(229,211,45)" fg:x="994" fg:w="2"/><text x="80.8664%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="80.6164%" y="597" width="0.1622%" height="15" fill="rgb(229,113,15)" fg:x="994" fg:w="2"/><text x="80.8664%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.6164%" y="581" width="0.1622%" height="15" fill="rgb(237,147,15)" fg:x="994" fg:w="2"/><text x="80.8664%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.6975%" y="565" width="0.0811%" height="15" fill="rgb(244,120,12)" fg:x="995" fg:w="1"/><text x="80.9475%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.6975%" y="549" width="0.0811%" height="15" fill="rgb(205,120,12)" fg:x="995" fg:w="1"/><text x="80.9475%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.6975%" y="533" width="0.0811%" height="15" fill="rgb(231,26,45)" fg:x="995" fg:w="1"/><text x="80.9475%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9408%" y="565" width="0.0811%" height="15" fill="rgb(246,98,1)" fg:x="998" fg:w="1"/><text x="81.1908%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0219%" y="565" width="0.0811%" height="15" fill="rgb(207,68,45)" fg:x="999" fg:w="1"/><text x="81.2719%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="81.1030%" y="565" width="0.1622%" height="15" fill="rgb(231,27,38)" fg:x="1000" fg:w="2"/><text x="81.3530%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="81.1030%" y="549" width="0.1622%" height="15" fill="rgb(214,223,3)" fg:x="1000" fg:w="2"/><text x="81.3530%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="81.2652%" y="565" width="0.0811%" height="15" fill="rgb(228,195,46)" fg:x="1002" fg:w="1"/><text x="81.5152%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.2652%" y="549" width="0.0811%" height="15" fill="rgb(231,100,42)" fg:x="1002" fg:w="1"/><text x="81.5152%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2652%" y="533" width="0.0811%" height="15" fill="rgb(236,53,4)" fg:x="1002" fg:w="1"/><text x="81.5152%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3463%" y="565" width="0.0811%" height="15" fill="rgb(230,152,12)" fg:x="1003" fg:w="1"/><text x="81.5963%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.3463%" y="549" width="0.0811%" height="15" fill="rgb(226,101,19)" fg:x="1003" fg:w="1"/><text x="81.5963%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.3463%" y="533" width="0.0811%" height="15" fill="rgb(250,149,32)" fg:x="1003" fg:w="1"/><text x="81.5963%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3463%" y="517" width="0.0811%" height="15" fill="rgb(232,178,12)" fg:x="1003" fg:w="1"/><text x="81.5963%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3463%" y="501" width="0.0811%" height="15" fill="rgb(246,151,17)" fg:x="1003" fg:w="1"/><text x="81.5963%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="81.4274%" y="517" width="0.1622%" height="15" fill="rgb(252,17,51)" fg:x="1004" fg:w="2"/><text x="81.6774%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.4274%" y="501" width="0.1622%" height="15" fill="rgb(250,207,23)" fg:x="1004" fg:w="2"/><text x="81.6774%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.5085%" y="485" width="0.0811%" height="15" fill="rgb(205,27,5)" fg:x="1005" fg:w="1"/><text x="81.7585%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5085%" y="469" width="0.0811%" height="15" fill="rgb(224,32,19)" fg:x="1005" fg:w="1"/><text x="81.7585%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.5896%" y="501" width="0.0811%" height="15" fill="rgb(247,214,40)" fg:x="1006" fg:w="1"/><text x="81.8396%" y="511.50"></text></g><g><title>engine::session::Session::flush (27 samples, 2.19%)</title><rect x="79.5620%" y="677" width="2.1898%" height="15" fill="rgb(239,199,17)" fg:x="981" fg:w="27"/><text x="79.8120%" y="687.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (27 samples, 2.19%)</title><rect x="79.5620%" y="661" width="2.1898%" height="15" fill="rgb(251,159,9)" fg:x="981" fg:w="27"/><text x="79.8120%" y="671.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (26 samples, 2.11%)</title><rect x="79.6431%" y="645" width="2.1087%" height="15" fill="rgb(225,78,32)" fg:x="982" fg:w="26"/><text x="79.8931%" y="655.50">e..</text></g><g><title>engine::session::Session::check_for_changes (26 samples, 2.11%)</title><rect x="79.6431%" y="629" width="2.1087%" height="15" fill="rgb(206,97,47)" fg:x="982" fg:w="26"/><text x="79.8931%" y="639.50">e..</text></g><g><title>kernel::compare::any_entity_changes (12 samples, 0.97%)</title><rect x="80.7786%" y="613" width="0.9732%" height="15" fill="rgb(227,107,4)" fg:x="996" fg:w="12"/><text x="81.0286%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (12 samples, 0.97%)</title><rect x="80.7786%" y="597" width="0.9732%" height="15" fill="rgb(241,146,50)" fg:x="996" fg:w="12"/><text x="81.0286%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="80.7786%" y="581" width="0.9732%" height="15" fill="rgb(232,92,30)" fg:x="996" fg:w="12"/><text x="81.0286%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="81.4274%" y="565" width="0.3244%" height="15" fill="rgb(222,0,40)" fg:x="1004" fg:w="4"/><text x="81.6774%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.32%)</title><rect x="81.4274%" y="549" width="0.3244%" height="15" fill="rgb(219,54,33)" fg:x="1004" fg:w="4"/><text x="81.6774%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.4274%" y="533" width="0.3244%" height="15" fill="rgb(226,209,28)" fg:x="1004" fg:w="4"/><text x="81.6774%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.5896%" y="517" width="0.1622%" height="15" fill="rgb(254,205,35)" fg:x="1006" fg:w="2"/><text x="81.8396%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.6707%" y="501" width="0.0811%" height="15" fill="rgb(230,159,3)" fg:x="1007" fg:w="1"/><text x="81.9207%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6707%" y="485" width="0.0811%" height="15" fill="rgb(232,190,24)" fg:x="1007" fg:w="1"/><text x="81.9207%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6707%" y="469" width="0.0811%" height="15" fill="rgb(217,227,44)" fg:x="1007" fg:w="1"/><text x="81.9207%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (1 samples, 0.08%)</title><rect x="81.7518%" y="677" width="0.0811%" height="15" fill="rgb(236,211,1)" fg:x="1008" fg:w="1"/><text x="82.0018%" y="687.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="81.7518%" y="661" width="0.0811%" height="15" fill="rgb(250,127,46)" fg:x="1008" fg:w="1"/><text x="82.0018%" y="671.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="81.7518%" y="645" width="0.0811%" height="15" fill="rgb(229,213,6)" fg:x="1008" fg:w="1"/><text x="82.0018%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="81.7518%" y="629" width="0.0811%" height="15" fill="rgb(237,15,36)" fg:x="1008" fg:w="1"/><text x="82.0018%" y="639.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="81.7518%" y="613" width="0.0811%" height="15" fill="rgb(213,131,41)" fg:x="1008" fg:w="1"/><text x="82.0018%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.7518%" y="597" width="0.0811%" height="15" fill="rgb(225,82,44)" fg:x="1008" fg:w="1"/><text x="82.0018%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="81.8329%" y="645" width="0.0811%" height="15" fill="rgb(249,42,11)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="81.8329%" y="629" width="0.0811%" height="15" fill="rgb(253,11,29)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8329%" y="613" width="0.0811%" height="15" fill="rgb(206,8,54)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8329%" y="597" width="0.0811%" height="15" fill="rgb(222,186,2)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.8329%" y="581" width="0.0811%" height="15" fill="rgb(221,206,53)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.8329%" y="565" width="0.0811%" height="15" fill="rgb(230,150,21)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.8329%" y="549" width="0.0811%" height="15" fill="rgb(253,202,10)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.8329%" y="533" width="0.0811%" height="15" fill="rgb(238,109,40)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.8329%" y="517" width="0.0811%" height="15" fill="rgb(247,120,22)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.8329%" y="501" width="0.0811%" height="15" fill="rgb(207,43,30)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.8329%" y="485" width="0.0811%" height="15" fill="rgb(213,211,24)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.8329%" y="469" width="0.0811%" height="15" fill="rgb(239,73,39)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.8329%" y="453" width="0.0811%" height="15" fill="rgb(245,182,19)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8329%" y="437" width="0.0811%" height="15" fill="rgb(247,143,26)" fg:x="1009" fg:w="1"/><text x="82.0829%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="81.8329%" y="677" width="0.1622%" height="15" fill="rgb(228,191,23)" fg:x="1009" fg:w="2"/><text x="82.0829%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="81.8329%" y="661" width="0.1622%" height="15" fill="rgb(253,165,31)" fg:x="1009" fg:w="2"/><text x="82.0829%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.9140%" y="645" width="0.0811%" height="15" fill="rgb(234,138,20)" fg:x="1010" fg:w="1"/><text x="82.1640%" y="655.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="81.9140%" y="629" width="0.0811%" height="15" fill="rgb(218,191,29)" fg:x="1010" fg:w="1"/><text x="82.1640%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9140%" y="613" width="0.0811%" height="15" fill="rgb(221,157,19)" fg:x="1010" fg:w="1"/><text x="82.1640%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="81.9951%" y="661" width="0.0811%" height="15" fill="rgb(237,26,42)" fg:x="1011" fg:w="1"/><text x="82.2451%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.9951%" y="645" width="0.0811%" height="15" fill="rgb(220,163,24)" fg:x="1011" fg:w="1"/><text x="82.2451%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="81.9951%" y="629" width="0.0811%" height="15" fill="rgb(242,115,20)" fg:x="1011" fg:w="1"/><text x="82.2451%" y="639.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="81.9951%" y="613" width="0.0811%" height="15" fill="rgb(210,206,9)" fg:x="1011" fg:w="1"/><text x="82.2451%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="81.9951%" y="597" width="0.0811%" height="15" fill="rgb(208,71,17)" fg:x="1011" fg:w="1"/><text x="82.2451%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.9951%" y="581" width="0.0811%" height="15" fill="rgb(233,7,5)" fg:x="1011" fg:w="1"/><text x="82.2451%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.9951%" y="565" width="0.0811%" height="15" fill="rgb(207,92,33)" fg:x="1011" fg:w="1"/><text x="82.2451%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.0762%" y="629" width="0.0811%" height="15" fill="rgb(218,87,9)" fg:x="1012" fg:w="1"/><text x="82.3262%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.0762%" y="613" width="0.0811%" height="15" fill="rgb(219,47,37)" fg:x="1012" fg:w="1"/><text x="82.3262%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.0762%" y="597" width="0.0811%" height="15" fill="rgb(221,152,34)" fg:x="1012" fg:w="1"/><text x="82.3262%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.0762%" y="581" width="0.0811%" height="15" fill="rgb(235,176,21)" fg:x="1012" fg:w="1"/><text x="82.3262%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.1573%" y="629" width="0.0811%" height="15" fill="rgb(232,212,21)" fg:x="1013" fg:w="1"/><text x="82.4073%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1573%" y="613" width="0.0811%" height="15" fill="rgb(245,82,39)" fg:x="1013" fg:w="1"/><text x="82.4073%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="82.2384%" y="581" width="0.1622%" height="15" fill="rgb(241,52,51)" fg:x="1014" fg:w="2"/><text x="82.4884%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.2384%" y="565" width="0.1622%" height="15" fill="rgb(219,91,24)" fg:x="1014" fg:w="2"/><text x="82.4884%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.2384%" y="549" width="0.1622%" height="15" fill="rgb(241,142,12)" fg:x="1014" fg:w="2"/><text x="82.4884%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.2384%" y="533" width="0.1622%" height="15" fill="rgb(230,27,9)" fg:x="1014" fg:w="2"/><text x="82.4884%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.2384%" y="517" width="0.1622%" height="15" fill="rgb(249,181,32)" fg:x="1014" fg:w="2"/><text x="82.4884%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.3195%" y="501" width="0.0811%" height="15" fill="rgb(230,107,3)" fg:x="1015" fg:w="1"/><text x="82.5695%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.3195%" y="485" width="0.0811%" height="15" fill="rgb(246,204,14)" fg:x="1015" fg:w="1"/><text x="82.5695%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.3195%" y="469" width="0.0811%" height="15" fill="rgb(213,192,47)" fg:x="1015" fg:w="1"/><text x="82.5695%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="82.4006%" y="565" width="0.4055%" height="15" fill="rgb(240,44,36)" fg:x="1016" fg:w="5"/><text x="82.6506%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="82.5629%" y="549" width="0.2433%" height="15" fill="rgb(244,209,38)" fg:x="1018" fg:w="3"/><text x="82.8129%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.6440%" y="533" width="0.1622%" height="15" fill="rgb(219,34,37)" fg:x="1019" fg:w="2"/><text x="82.8940%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="82.6440%" y="517" width="0.1622%" height="15" fill="rgb(210,28,6)" fg:x="1019" fg:w="2"/><text x="82.8940%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.7251%" y="501" width="0.0811%" height="15" fill="rgb(244,110,52)" fg:x="1020" fg:w="1"/><text x="82.9751%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.7251%" y="485" width="0.0811%" height="15" fill="rgb(254,124,47)" fg:x="1020" fg:w="1"/><text x="82.9751%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.7251%" y="469" width="0.0811%" height="15" fill="rgb(254,110,13)" fg:x="1020" fg:w="1"/><text x="82.9751%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.8873%" y="517" width="0.0811%" height="15" fill="rgb(252,57,21)" fg:x="1022" fg:w="1"/><text x="83.1373%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="82.8873%" y="549" width="0.1622%" height="15" fill="rgb(242,60,45)" fg:x="1022" fg:w="2"/><text x="83.1373%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.8873%" y="533" width="0.1622%" height="15" fill="rgb(234,49,30)" fg:x="1022" fg:w="2"/><text x="83.1373%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9684%" y="517" width="0.0811%" height="15" fill="rgb(218,98,6)" fg:x="1023" fg:w="1"/><text x="83.2184%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.9684%" y="501" width="0.0811%" height="15" fill="rgb(220,174,29)" fg:x="1023" fg:w="1"/><text x="83.2184%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9684%" y="485" width="0.0811%" height="15" fill="rgb(236,163,23)" fg:x="1023" fg:w="1"/><text x="83.2184%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.0495%" y="549" width="0.0811%" height="15" fill="rgb(242,114,45)" fg:x="1024" fg:w="1"/><text x="83.2995%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.0495%" y="533" width="0.0811%" height="15" fill="rgb(232,10,53)" fg:x="1024" fg:w="1"/><text x="83.2995%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.0495%" y="517" width="0.0811%" height="15" fill="rgb(245,108,29)" fg:x="1024" fg:w="1"/><text x="83.2995%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2117%" y="533" width="0.0811%" height="15" fill="rgb(240,89,53)" fg:x="1026" fg:w="1"/><text x="83.4617%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.2117%" y="517" width="0.0811%" height="15" fill="rgb(226,60,45)" fg:x="1026" fg:w="1"/><text x="83.4617%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.2117%" y="501" width="0.0811%" height="15" fill="rgb(230,41,44)" fg:x="1026" fg:w="1"/><text x="83.4617%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.2117%" y="485" width="0.0811%" height="15" fill="rgb(230,26,20)" fg:x="1026" fg:w="1"/><text x="83.4617%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="82.8062%" y="565" width="0.5677%" height="15" fill="rgb(237,170,32)" fg:x="1021" fg:w="7"/><text x="83.0562%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.1306%" y="549" width="0.2433%" height="15" fill="rgb(212,35,42)" fg:x="1025" fg:w="3"/><text x="83.3806%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.2928%" y="533" width="0.0811%" height="15" fill="rgb(227,31,34)" fg:x="1027" fg:w="1"/><text x="83.5428%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.2928%" y="517" width="0.0811%" height="15" fill="rgb(216,19,18)" fg:x="1027" fg:w="1"/><text x="83.5428%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.2928%" y="501" width="0.0811%" height="15" fill="rgb(211,133,42)" fg:x="1027" fg:w="1"/><text x="83.5428%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.30%)</title><rect x="82.2384%" y="597" width="1.2976%" height="15" fill="rgb(244,66,13)" fg:x="1014" fg:w="16"/><text x="82.4884%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.14%)</title><rect x="82.4006%" y="581" width="1.1354%" height="15" fill="rgb(218,185,50)" fg:x="1016" fg:w="14"/><text x="82.6506%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.3739%" y="565" width="0.1622%" height="15" fill="rgb(219,149,13)" fg:x="1028" fg:w="2"/><text x="83.6239%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.3739%" y="549" width="0.1622%" height="15" fill="rgb(221,125,0)" fg:x="1028" fg:w="2"/><text x="83.6239%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.3739%" y="533" width="0.1622%" height="15" fill="rgb(247,126,27)" fg:x="1028" fg:w="2"/><text x="83.6239%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.4550%" y="517" width="0.0811%" height="15" fill="rgb(250,138,30)" fg:x="1029" fg:w="1"/><text x="83.7050%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.4550%" y="501" width="0.0811%" height="15" fill="rgb(230,151,9)" fg:x="1029" fg:w="1"/><text x="83.7050%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.4550%" y="485" width="0.0811%" height="15" fill="rgb(233,80,38)" fg:x="1029" fg:w="1"/><text x="83.7050%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="83.5361%" y="565" width="0.1622%" height="15" fill="rgb(232,68,43)" fg:x="1030" fg:w="2"/><text x="83.7861%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="83.5361%" y="597" width="0.3244%" height="15" fill="rgb(254,5,50)" fg:x="1030" fg:w="4"/><text x="83.7861%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="83.5361%" y="581" width="0.3244%" height="15" fill="rgb(225,45,5)" fg:x="1030" fg:w="4"/><text x="83.7861%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="83.6983%" y="565" width="0.1622%" height="15" fill="rgb(239,22,3)" fg:x="1032" fg:w="2"/><text x="83.9483%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.7794%" y="549" width="0.0811%" height="15" fill="rgb(243,129,0)" fg:x="1033" fg:w="1"/><text x="84.0294%" y="559.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="83.9416%" y="549" width="0.0811%" height="15" fill="rgb(223,164,0)" fg:x="1035" fg:w="1"/><text x="84.1916%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0227%" y="549" width="0.0811%" height="15" fill="rgb(221,46,29)" fg:x="1036" fg:w="1"/><text x="84.2727%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.0227%" y="533" width="0.0811%" height="15" fill="rgb(205,97,47)" fg:x="1036" fg:w="1"/><text x="84.2727%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.0227%" y="517" width="0.0811%" height="15" fill="rgb(249,14,8)" fg:x="1036" fg:w="1"/><text x="84.2727%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0227%" y="501" width="0.0811%" height="15" fill="rgb(216,77,3)" fg:x="1036" fg:w="1"/><text x="84.2727%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.0227%" y="485" width="0.0811%" height="15" fill="rgb(206,168,54)" fg:x="1036" fg:w="1"/><text x="84.2727%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0227%" y="469" width="0.0811%" height="15" fill="rgb(236,3,41)" fg:x="1036" fg:w="1"/><text x="84.2727%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.1038%" y="501" width="0.0811%" height="15" fill="rgb(231,132,24)" fg:x="1037" fg:w="1"/><text x="84.3538%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1038%" y="485" width="0.0811%" height="15" fill="rgb(227,221,40)" fg:x="1037" fg:w="1"/><text x="84.3538%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.1038%" y="469" width="0.0811%" height="15" fill="rgb(233,151,11)" fg:x="1037" fg:w="1"/><text x="84.3538%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (25 samples, 2.03%)</title><rect x="82.2384%" y="629" width="2.0276%" height="15" fill="rgb(247,81,35)" fg:x="1014" fg:w="25"/><text x="82.4884%" y="639.50">e..</text></g><g><title>engine::session::Session::check_for_changes (25 samples, 2.03%)</title><rect x="82.2384%" y="613" width="2.0276%" height="15" fill="rgb(243,128,48)" fg:x="1014" fg:w="25"/><text x="82.4884%" y="623.50">e..</text></g><g><title>kernel::compare::any_entity_changes (5 samples, 0.41%)</title><rect x="83.8605%" y="597" width="0.4055%" height="15" fill="rgb(253,16,10)" fg:x="1034" fg:w="5"/><text x="84.1105%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (5 samples, 0.41%)</title><rect x="83.8605%" y="581" width="0.4055%" height="15" fill="rgb(228,67,27)" fg:x="1034" fg:w="5"/><text x="84.1105%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.41%)</title><rect x="83.8605%" y="565" width="0.4055%" height="15" fill="rgb(231,105,25)" fg:x="1034" fg:w="5"/><text x="84.1105%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="84.1038%" y="549" width="0.1622%" height="15" fill="rgb(213,166,47)" fg:x="1037" fg:w="2"/><text x="84.3538%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.16%)</title><rect x="84.1038%" y="533" width="0.1622%" height="15" fill="rgb(209,27,10)" fg:x="1037" fg:w="2"/><text x="84.3538%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.1038%" y="517" width="0.1622%" height="15" fill="rgb(241,44,30)" fg:x="1037" fg:w="2"/><text x="84.3538%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1849%" y="501" width="0.0811%" height="15" fill="rgb(223,216,15)" fg:x="1038" fg:w="1"/><text x="84.4349%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1849%" y="485" width="0.0811%" height="15" fill="rgb(227,14,7)" fg:x="1038" fg:w="1"/><text x="84.4349%" y="495.50"></text></g><g><title>engine::session::Session::flush (28 samples, 2.27%)</title><rect x="82.0762%" y="661" width="2.2709%" height="15" fill="rgb(237,14,5)" fg:x="1012" fg:w="28"/><text x="82.3262%" y="671.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (28 samples, 2.27%)</title><rect x="82.0762%" y="645" width="2.2709%" height="15" fill="rgb(232,14,36)" fg:x="1012" fg:w="28"/><text x="82.3262%" y="655.50">e..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="84.2660%" y="629" width="0.0811%" height="15" fill="rgb(234,0,38)" fg:x="1039" fg:w="1"/><text x="84.5160%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="84.2660%" y="613" width="0.0811%" height="15" fill="rgb(207,170,14)" fg:x="1039" fg:w="1"/><text x="84.5160%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="84.2660%" y="597" width="0.0811%" height="15" fill="rgb(252,45,13)" fg:x="1039" fg:w="1"/><text x="84.5160%" y="607.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="84.2660%" y="581" width="0.0811%" height="15" fill="rgb(213,142,7)" fg:x="1039" fg:w="1"/><text x="84.5160%" y="591.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="84.3471%" y="549" width="0.4055%" height="15" fill="rgb(216,157,23)" fg:x="1040" fg:w="5"/><text x="84.5971%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (6 samples, 0.49%)</title><rect x="84.3471%" y="613" width="0.4866%" height="15" fill="rgb(212,145,33)" fg:x="1040" fg:w="6"/><text x="84.5971%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.49%)</title><rect x="84.3471%" y="597" width="0.4866%" height="15" fill="rgb(233,26,13)" fg:x="1040" fg:w="6"/><text x="84.5971%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.49%)</title><rect x="84.3471%" y="581" width="0.4866%" height="15" fill="rgb(219,196,19)" fg:x="1040" fg:w="6"/><text x="84.5971%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.49%)</title><rect x="84.3471%" y="565" width="0.4866%" height="15" fill="rgb(246,56,21)" fg:x="1040" fg:w="6"/><text x="84.5971%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.7526%" y="549" width="0.0811%" height="15" fill="rgb(222,28,53)" fg:x="1045" fg:w="1"/><text x="85.0026%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="84.3471%" y="645" width="0.5677%" height="15" fill="rgb(224,5,27)" fg:x="1040" fg:w="7"/><text x="84.5971%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="84.3471%" y="629" width="0.5677%" height="15" fill="rgb(220,153,33)" fg:x="1040" fg:w="7"/><text x="84.5971%" y="639.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="84.8337%" y="613" width="0.0811%" height="15" fill="rgb(226,58,19)" fg:x="1046" fg:w="1"/><text x="85.0837%" y="623.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="84.8337%" y="597" width="0.0811%" height="15" fill="rgb(239,112,23)" fg:x="1046" fg:w="1"/><text x="85.0837%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="84.9148%" y="629" width="0.0811%" height="15" fill="rgb(251,213,20)" fg:x="1047" fg:w="1"/><text x="85.1648%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="84.9148%" y="613" width="0.0811%" height="15" fill="rgb(215,181,21)" fg:x="1047" fg:w="1"/><text x="85.1648%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9148%" y="597" width="0.0811%" height="15" fill="rgb(240,8,35)" fg:x="1047" fg:w="1"/><text x="85.1648%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9148%" y="581" width="0.0811%" height="15" fill="rgb(232,203,3)" fg:x="1047" fg:w="1"/><text x="85.1648%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.73%)</title><rect x="84.3471%" y="661" width="0.7299%" height="15" fill="rgb(214,202,43)" fg:x="1040" fg:w="9"/><text x="84.5971%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="84.9148%" y="645" width="0.1622%" height="15" fill="rgb(254,35,11)" fg:x="1047" fg:w="2"/><text x="85.1648%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="84.9959%" y="629" width="0.0811%" height="15" fill="rgb(239,173,13)" fg:x="1048" fg:w="1"/><text x="85.2459%" y="639.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.9959%" y="613" width="0.0811%" height="15" fill="rgb(220,141,0)" fg:x="1048" fg:w="1"/><text x="85.2459%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="85.0770%" y="661" width="0.0811%" height="15" fill="rgb(210,98,12)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="85.0770%" y="645" width="0.0811%" height="15" fill="rgb(254,153,22)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.0770%" y="629" width="0.0811%" height="15" fill="rgb(247,223,17)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0770%" y="613" width="0.0811%" height="15" fill="rgb(246,56,7)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0770%" y="597" width="0.0811%" height="15" fill="rgb(240,226,12)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0770%" y="581" width="0.0811%" height="15" fill="rgb(205,87,46)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0770%" y="565" width="0.0811%" height="15" fill="rgb(245,214,51)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0770%" y="549" width="0.0811%" height="15" fill="rgb(223,172,33)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0770%" y="533" width="0.0811%" height="15" fill="rgb(227,203,34)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0770%" y="517" width="0.0811%" height="15" fill="rgb(248,143,44)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0770%" y="501" width="0.0811%" height="15" fill="rgb(226,162,5)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.0770%" y="485" width="0.0811%" height="15" fill="rgb(211,143,1)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.0770%" y="469" width="0.0811%" height="15" fill="rgb(224,96,15)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.0770%" y="453" width="0.0811%" height="15" fill="rgb(222,4,38)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.0770%" y="437" width="0.0811%" height="15" fill="rgb(253,228,15)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="85.0770%" y="421" width="0.0811%" height="15" fill="rgb(242,194,12)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="85.0770%" y="405" width="0.0811%" height="15" fill="rgb(214,177,31)" fg:x="1049" fg:w="1"/><text x="85.3270%" y="415.50"></text></g><g><title>plugins_core::build::Build::occupying (1 samples, 0.08%)</title><rect x="85.1582%" y="661" width="0.0811%" height="15" fill="rgb(226,58,51)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="671.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="85.1582%" y="645" width="0.0811%" height="15" fill="rgb(250,119,16)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.1582%" y="629" width="0.0811%" height="15" fill="rgb(223,128,53)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1582%" y="613" width="0.0811%" height="15" fill="rgb(251,199,15)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1582%" y="597" width="0.0811%" height="15" fill="rgb(235,168,42)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1582%" y="581" width="0.0811%" height="15" fill="rgb(250,210,17)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.1582%" y="565" width="0.0811%" height="15" fill="rgb(226,36,41)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.1582%" y="549" width="0.0811%" height="15" fill="rgb(225,87,10)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.1582%" y="533" width="0.0811%" height="15" fill="rgb(228,83,9)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.1582%" y="517" width="0.0811%" height="15" fill="rgb(225,16,36)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.1582%" y="501" width="0.0811%" height="15" fill="rgb(242,198,13)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.1582%" y="485" width="0.0811%" height="15" fill="rgb(239,25,51)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.1582%" y="469" width="0.0811%" height="15" fill="rgb(239,28,37)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.1582%" y="453" width="0.0811%" height="15" fill="rgb(234,70,17)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.1582%" y="437" width="0.0811%" height="15" fill="rgb(231,215,53)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1582%" y="421" width="0.0811%" height="15" fill="rgb(218,140,42)" fg:x="1050" fg:w="1"/><text x="85.4082%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2393%" y="613" width="0.0811%" height="15" fill="rgb(233,227,45)" fg:x="1051" fg:w="1"/><text x="85.4893%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2393%" y="597" width="0.0811%" height="15" fill="rgb(225,189,21)" fg:x="1051" fg:w="1"/><text x="85.4893%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.2393%" y="581" width="0.0811%" height="15" fill="rgb(237,176,54)" fg:x="1051" fg:w="1"/><text x="85.4893%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.2393%" y="565" width="0.0811%" height="15" fill="rgb(215,131,46)" fg:x="1051" fg:w="1"/><text x="85.4893%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.2393%" y="549" width="0.0811%" height="15" fill="rgb(218,95,20)" fg:x="1051" fg:w="1"/><text x="85.4893%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.2393%" y="533" width="0.0811%" height="15" fill="rgb(208,198,12)" fg:x="1051" fg:w="1"/><text x="85.4893%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.2393%" y="517" width="0.0811%" height="15" fill="rgb(239,107,50)" fg:x="1051" fg:w="1"/><text x="85.4893%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.2393%" y="645" width="0.1622%" height="15" fill="rgb(240,217,37)" fg:x="1051" fg:w="2"/><text x="85.4893%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.2393%" y="629" width="0.1622%" height="15" fill="rgb(242,197,49)" fg:x="1051" fg:w="2"/><text x="85.4893%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="85.3204%" y="613" width="0.0811%" height="15" fill="rgb(219,171,17)" fg:x="1052" fg:w="1"/><text x="85.5704%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3204%" y="597" width="0.0811%" height="15" fill="rgb(209,81,40)" fg:x="1052" fg:w="1"/><text x="85.5704%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="85.4015%" y="597" width="0.0811%" height="15" fill="rgb(237,156,30)" fg:x="1053" fg:w="1"/><text x="85.6515%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="85.4015%" y="581" width="0.0811%" height="15" fill="rgb(212,127,16)" fg:x="1053" fg:w="1"/><text x="85.6515%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (44 samples, 3.57%)</title><rect x="81.9951%" y="677" width="3.5685%" height="15" fill="rgb(226,66,32)" fg:x="1011" fg:w="44"/><text x="82.2451%" y="687.50">plug..</text></g><g><title>plugins_core::build::Build::with_username (4 samples, 0.32%)</title><rect x="85.2393%" y="661" width="0.3244%" height="15" fill="rgb(245,22,46)" fg:x="1051" fg:w="4"/><text x="85.4893%" y="671.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="85.4015%" y="645" width="0.1622%" height="15" fill="rgb(210,112,21)" fg:x="1053" fg:w="2"/><text x="85.6515%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="85.4015%" y="629" width="0.1622%" height="15" fill="rgb(207,118,39)" fg:x="1053" fg:w="2"/><text x="85.6515%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="85.4015%" y="613" width="0.1622%" height="15" fill="rgb(205,206,35)" fg:x="1053" fg:w="2"/><text x="85.6515%" y="623.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="85.4826%" y="597" width="0.0811%" height="15" fill="rgb(222,120,2)" fg:x="1054" fg:w="1"/><text x="85.7326%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.4826%" y="581" width="0.0811%" height="15" fill="rgb(205,38,18)" fg:x="1054" fg:w="1"/><text x="85.7326%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.4826%" y="565" width="0.0811%" height="15" fill="rgb(226,61,2)" fg:x="1054" fg:w="1"/><text x="85.7326%" y="575.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (77 samples, 6.24%)</title><rect x="79.3998%" y="693" width="6.2449%" height="15" fill="rgb(242,161,23)" fg:x="979" fg:w="77"/><text x="79.6498%" y="703.50">&lt;tests::..</text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="85.5637%" y="677" width="0.0811%" height="15" fill="rgb(213,13,52)" fg:x="1055" fg:w="1"/><text x="85.8137%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="85.5637%" y="661" width="0.0811%" height="15" fill="rgb(246,209,47)" fg:x="1055" fg:w="1"/><text x="85.8137%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="85.5637%" y="645" width="0.0811%" height="15" fill="rgb(214,41,3)" fg:x="1055" fg:w="1"/><text x="85.8137%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.5637%" y="629" width="0.0811%" height="15" fill="rgb(236,119,38)" fg:x="1055" fg:w="1"/><text x="85.8137%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="85.5637%" y="613" width="0.0811%" height="15" fill="rgb(218,50,11)" fg:x="1055" fg:w="1"/><text x="85.8137%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5637%" y="597" width="0.0811%" height="15" fill="rgb(228,38,11)" fg:x="1055" fg:w="1"/><text x="85.8137%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5637%" y="581" width="0.0811%" height="15" fill="rgb(212,13,9)" fg:x="1055" fg:w="1"/><text x="85.8137%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.6448%" y="661" width="0.0811%" height="15" fill="rgb(208,211,9)" fg:x="1056" fg:w="1"/><text x="85.8948%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6448%" y="645" width="0.0811%" height="15" fill="rgb(239,39,32)" fg:x="1056" fg:w="1"/><text x="85.8948%" y="655.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="85.7259%" y="661" width="0.0811%" height="15" fill="rgb(254,179,26)" fg:x="1057" fg:w="1"/><text x="85.9759%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="85.7259%" y="645" width="0.0811%" height="15" fill="rgb(249,165,28)" fg:x="1057" fg:w="1"/><text x="85.9759%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.7259%" y="629" width="0.0811%" height="15" fill="rgb(225,59,50)" fg:x="1057" fg:w="1"/><text x="85.9759%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7259%" y="613" width="0.0811%" height="15" fill="rgb(209,122,5)" fg:x="1057" fg:w="1"/><text x="85.9759%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7259%" y="597" width="0.0811%" height="15" fill="rgb(214,65,34)" fg:x="1057" fg:w="1"/><text x="85.9759%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.8881%" y="597" width="0.0811%" height="15" fill="rgb(249,183,32)" fg:x="1059" fg:w="1"/><text x="86.1381%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.8881%" y="581" width="0.0811%" height="15" fill="rgb(218,122,24)" fg:x="1059" fg:w="1"/><text x="86.1381%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.8881%" y="565" width="0.0811%" height="15" fill="rgb(224,109,18)" fg:x="1059" fg:w="1"/><text x="86.1381%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.8881%" y="549" width="0.0811%" height="15" fill="rgb(210,68,50)" fg:x="1059" fg:w="1"/><text x="86.1381%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="85.8070%" y="613" width="0.2433%" height="15" fill="rgb(212,184,34)" fg:x="1058" fg:w="3"/><text x="86.0570%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.9692%" y="597" width="0.0811%" height="15" fill="rgb(238,105,48)" fg:x="1060" fg:w="1"/><text x="86.2192%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.9692%" y="581" width="0.0811%" height="15" fill="rgb(222,134,54)" fg:x="1060" fg:w="1"/><text x="86.2192%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9692%" y="565" width="0.0811%" height="15" fill="rgb(246,24,43)" fg:x="1060" fg:w="1"/><text x="86.2192%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.0503%" y="597" width="0.1622%" height="15" fill="rgb(227,169,22)" fg:x="1061" fg:w="2"/><text x="86.3003%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="86.0503%" y="581" width="0.1622%" height="15" fill="rgb(253,152,4)" fg:x="1061" fg:w="2"/><text x="86.3003%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.0503%" y="565" width="0.1622%" height="15" fill="rgb(219,158,36)" fg:x="1061" fg:w="2"/><text x="86.3003%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="86.0503%" y="549" width="0.1622%" height="15" fill="rgb(251,128,40)" fg:x="1061" fg:w="2"/><text x="86.3003%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.2125%" y="581" width="0.0811%" height="15" fill="rgb(254,101,39)" fg:x="1063" fg:w="1"/><text x="86.4625%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.2125%" y="565" width="0.0811%" height="15" fill="rgb(221,168,40)" fg:x="1063" fg:w="1"/><text x="86.4625%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.2936%" y="565" width="0.0811%" height="15" fill="rgb(221,14,27)" fg:x="1064" fg:w="1"/><text x="86.5436%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="86.2125%" y="597" width="0.2433%" height="15" fill="rgb(207,36,43)" fg:x="1063" fg:w="3"/><text x="86.4625%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.2936%" y="581" width="0.1622%" height="15" fill="rgb(240,172,53)" fg:x="1064" fg:w="2"/><text x="86.5436%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.3747%" y="565" width="0.0811%" height="15" fill="rgb(241,138,43)" fg:x="1065" fg:w="1"/><text x="86.6247%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.3747%" y="549" width="0.0811%" height="15" fill="rgb(227,78,19)" fg:x="1065" fg:w="1"/><text x="86.6247%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.3747%" y="533" width="0.0811%" height="15" fill="rgb(215,127,44)" fg:x="1065" fg:w="1"/><text x="86.6247%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.89%)</title><rect x="85.8070%" y="629" width="0.8921%" height="15" fill="rgb(227,13,10)" fg:x="1058" fg:w="11"/><text x="86.0570%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="86.0503%" y="613" width="0.6488%" height="15" fill="rgb(249,177,6)" fg:x="1061" fg:w="8"/><text x="86.3003%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="86.4558%" y="597" width="0.2433%" height="15" fill="rgb(215,154,26)" fg:x="1066" fg:w="3"/><text x="86.7058%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.6180%" y="581" width="0.0811%" height="15" fill="rgb(250,168,20)" fg:x="1068" fg:w="1"/><text x="86.8680%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.6991%" y="565" width="0.0811%" height="15" fill="rgb(222,53,38)" fg:x="1069" fg:w="1"/><text x="86.9491%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6991%" y="549" width="0.0811%" height="15" fill="rgb(245,154,5)" fg:x="1069" fg:w="1"/><text x="86.9491%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7802%" y="549" width="0.0811%" height="15" fill="rgb(214,89,50)" fg:x="1070" fg:w="1"/><text x="87.0302%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.6991%" y="629" width="0.2433%" height="15" fill="rgb(232,73,14)" fg:x="1069" fg:w="3"/><text x="86.9491%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="86.6991%" y="613" width="0.2433%" height="15" fill="rgb(230,101,20)" fg:x="1069" fg:w="3"/><text x="86.9491%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.6991%" y="597" width="0.2433%" height="15" fill="rgb(208,56,28)" fg:x="1069" fg:w="3"/><text x="86.9491%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.6991%" y="581" width="0.2433%" height="15" fill="rgb(247,205,22)" fg:x="1069" fg:w="3"/><text x="86.9491%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.7802%" y="565" width="0.1622%" height="15" fill="rgb(252,109,51)" fg:x="1070" fg:w="2"/><text x="87.0302%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8613%" y="549" width="0.0811%" height="15" fill="rgb(220,40,24)" fg:x="1071" fg:w="1"/><text x="87.1113%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8613%" y="533" width="0.0811%" height="15" fill="rgb(251,108,7)" fg:x="1071" fg:w="1"/><text x="87.1113%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.0235%" y="613" width="0.0811%" height="15" fill="rgb(238,102,51)" fg:x="1073" fg:w="1"/><text x="87.2735%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.1046%" y="581" width="0.0811%" height="15" fill="rgb(219,149,34)" fg:x="1074" fg:w="1"/><text x="87.3546%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.1857%" y="565" width="0.0811%" height="15" fill="rgb(239,70,0)" fg:x="1075" fg:w="1"/><text x="87.4357%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3479%" y="549" width="0.0811%" height="15" fill="rgb(246,214,23)" fg:x="1077" fg:w="1"/><text x="87.5979%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="87.1046%" y="613" width="0.4055%" height="15" fill="rgb(239,221,51)" fg:x="1074" fg:w="5"/><text x="87.3546%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.41%)</title><rect x="87.1046%" y="597" width="0.4055%" height="15" fill="rgb(254,62,14)" fg:x="1074" fg:w="5"/><text x="87.3546%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.1857%" y="581" width="0.3244%" height="15" fill="rgb(253,57,33)" fg:x="1075" fg:w="4"/><text x="87.4357%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.2668%" y="565" width="0.2433%" height="15" fill="rgb(229,34,6)" fg:x="1076" fg:w="3"/><text x="87.5168%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.4290%" y="549" width="0.0811%" height="15" fill="rgb(235,191,23)" fg:x="1078" fg:w="1"/><text x="87.6790%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="87.5101%" y="597" width="0.0811%" height="15" fill="rgb(217,207,27)" fg:x="1079" fg:w="1"/><text x="87.7601%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.7534%" y="581" width="0.1622%" height="15" fill="rgb(232,41,44)" fg:x="1082" fg:w="2"/><text x="88.0034%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="87.9157%" y="581" width="0.0811%" height="15" fill="rgb(221,188,19)" fg:x="1084" fg:w="1"/><text x="88.1657%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.9157%" y="565" width="0.0811%" height="15" fill="rgb(245,180,45)" fg:x="1084" fg:w="1"/><text x="88.1657%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.9968%" y="517" width="0.0811%" height="15" fill="rgb(250,220,42)" fg:x="1085" fg:w="1"/><text x="88.2468%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="87.9968%" y="501" width="0.0811%" height="15" fill="rgb(234,16,34)" fg:x="1085" fg:w="1"/><text x="88.2468%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="87.9968%" y="485" width="0.0811%" height="15" fill="rgb(233,217,23)" fg:x="1085" fg:w="1"/><text x="88.2468%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.0779%" y="517" width="0.0811%" height="15" fill="rgb(209,22,46)" fg:x="1086" fg:w="1"/><text x="88.3279%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="88.0779%" y="501" width="0.0811%" height="15" fill="rgb(213,101,18)" fg:x="1086" fg:w="1"/><text x="88.3279%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="87.9968%" y="581" width="0.2433%" height="15" fill="rgb(215,179,52)" fg:x="1085" fg:w="3"/><text x="88.2468%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="87.9968%" y="565" width="0.2433%" height="15" fill="rgb(223,50,25)" fg:x="1085" fg:w="3"/><text x="88.2468%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="87.9968%" y="549" width="0.2433%" height="15" fill="rgb(224,51,44)" fg:x="1085" fg:w="3"/><text x="88.2468%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="87.9968%" y="533" width="0.2433%" height="15" fill="rgb(224,13,54)" fg:x="1085" fg:w="3"/><text x="88.2468%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1590%" y="517" width="0.0811%" height="15" fill="rgb(219,58,47)" fg:x="1087" fg:w="1"/><text x="88.4090%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2401%" y="581" width="0.1622%" height="15" fill="rgb(246,124,34)" fg:x="1088" fg:w="2"/><text x="88.4901%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.6456%" y="533" width="0.0811%" height="15" fill="rgb(245,109,25)" fg:x="1093" fg:w="1"/><text x="88.8956%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6456%" y="517" width="0.0811%" height="15" fill="rgb(235,48,23)" fg:x="1093" fg:w="1"/><text x="88.8956%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (16 samples, 1.30%)</title><rect x="87.5101%" y="613" width="1.2976%" height="15" fill="rgb(229,203,36)" fg:x="1079" fg:w="16"/><text x="87.7601%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.22%)</title><rect x="87.5912%" y="597" width="1.2165%" height="15" fill="rgb(234,180,9)" fg:x="1080" fg:w="15"/><text x="87.8412%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.41%)</title><rect x="88.4023%" y="581" width="0.4055%" height="15" fill="rgb(228,98,45)" fg:x="1090" fg:w="5"/><text x="88.6523%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.32%)</title><rect x="88.4834%" y="565" width="0.3244%" height="15" fill="rgb(240,24,36)" fg:x="1091" fg:w="4"/><text x="88.7334%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="88.5645%" y="549" width="0.2433%" height="15" fill="rgb(227,154,19)" fg:x="1092" fg:w="3"/><text x="88.8145%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7267%" y="533" width="0.0811%" height="15" fill="rgb(231,2,48)" fg:x="1094" fg:w="1"/><text x="88.9767%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7267%" y="517" width="0.0811%" height="15" fill="rgb(219,216,0)" fg:x="1094" fg:w="1"/><text x="88.9767%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.8078%" y="469" width="0.1622%" height="15" fill="rgb(251,88,0)" fg:x="1095" fg:w="2"/><text x="89.0578%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.8889%" y="453" width="0.0811%" height="15" fill="rgb(242,45,45)" fg:x="1096" fg:w="1"/><text x="89.1389%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="88.8889%" y="437" width="0.0811%" height="15" fill="rgb(218,149,45)" fg:x="1096" fg:w="1"/><text x="89.1389%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="88.8078%" y="517" width="0.2433%" height="15" fill="rgb(247,194,10)" fg:x="1095" fg:w="3"/><text x="89.0578%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.8078%" y="501" width="0.2433%" height="15" fill="rgb(234,33,37)" fg:x="1095" fg:w="3"/><text x="89.0578%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="88.8078%" y="485" width="0.2433%" height="15" fill="rgb(218,61,13)" fg:x="1095" fg:w="3"/><text x="89.0578%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="88.9700%" y="469" width="0.0811%" height="15" fill="rgb(210,80,52)" fg:x="1097" fg:w="1"/><text x="89.2200%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.0511%" y="517" width="0.0811%" height="15" fill="rgb(218,203,27)" fg:x="1098" fg:w="1"/><text x="89.3011%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0511%" y="501" width="0.0811%" height="15" fill="rgb(209,126,33)" fg:x="1098" fg:w="1"/><text x="89.3011%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="88.8078%" y="549" width="0.4055%" height="15" fill="rgb(234,173,41)" fg:x="1095" fg:w="5"/><text x="89.0578%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="88.8078%" y="533" width="0.4055%" height="15" fill="rgb(228,166,9)" fg:x="1095" fg:w="5"/><text x="89.0578%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1322%" y="517" width="0.0811%" height="15" fill="rgb(208,124,43)" fg:x="1099" fg:w="1"/><text x="89.3822%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="89.2133%" y="533" width="0.2433%" height="15" fill="rgb(212,154,38)" fg:x="1100" fg:w="3"/><text x="89.4633%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="89.2133%" y="549" width="0.3244%" height="15" fill="rgb(246,179,35)" fg:x="1100" fg:w="4"/><text x="89.4633%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4566%" y="533" width="0.0811%" height="15" fill="rgb(251,3,50)" fg:x="1103" fg:w="1"/><text x="89.7066%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.89%)</title><rect x="88.8078%" y="613" width="0.8921%" height="15" fill="rgb(219,96,8)" fg:x="1095" fg:w="11"/><text x="89.0578%" y="623.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.89%)</title><rect x="88.8078%" y="597" width="0.8921%" height="15" fill="rgb(251,216,33)" fg:x="1095" fg:w="11"/><text x="89.0578%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.89%)</title><rect x="88.8078%" y="581" width="0.8921%" height="15" fill="rgb(243,145,29)" fg:x="1095" fg:w="11"/><text x="89.0578%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="88.8078%" y="565" width="0.8921%" height="15" fill="rgb(210,75,20)" fg:x="1095" fg:w="11"/><text x="89.0578%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.5377%" y="549" width="0.1622%" height="15" fill="rgb(235,56,8)" fg:x="1104" fg:w="2"/><text x="89.7877%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6188%" y="533" width="0.0811%" height="15" fill="rgb(226,175,49)" fg:x="1105" fg:w="1"/><text x="89.8688%" y="543.50"></text></g><g><title>engine::session::Session::save_entity_changes (51 samples, 4.14%)</title><rect x="85.6448%" y="677" width="4.1363%" height="15" fill="rgb(242,204,23)" fg:x="1056" fg:w="51"/><text x="85.8948%" y="687.50">engin..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (49 samples, 3.97%)</title><rect x="85.8070%" y="661" width="3.9740%" height="15" fill="rgb(225,104,24)" fg:x="1058" fg:w="49"/><text x="86.0570%" y="671.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (49 samples, 3.97%)</title><rect x="85.8070%" y="645" width="3.9740%" height="15" fill="rgb(253,34,1)" fg:x="1058" fg:w="49"/><text x="86.0570%" y="655.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (35 samples, 2.84%)</title><rect x="86.9424%" y="629" width="2.8386%" height="15" fill="rgb(233,199,23)" fg:x="1072" fg:w="35"/><text x="87.1924%" y="639.50">ke..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="89.6999%" y="613" width="0.0811%" height="15" fill="rgb(247,7,51)" fg:x="1106" fg:w="1"/><text x="89.9499%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6999%" y="597" width="0.0811%" height="15" fill="rgb(214,146,12)" fg:x="1106" fg:w="1"/><text x="89.9499%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.6999%" y="581" width="0.0811%" height="15" fill="rgb(234,181,43)" fg:x="1106" fg:w="1"/><text x="89.9499%" y="591.50"></text></g><g><title>engine::session::Session::close (52 samples, 4.22%)</title><rect x="85.6448%" y="693" width="4.2174%" height="15" fill="rgb(239,148,6)" fg:x="1056" fg:w="52"/><text x="85.8948%" y="703.50">engin..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="89.7810%" y="677" width="0.0811%" height="15" fill="rgb(206,151,17)" fg:x="1107" fg:w="1"/><text x="90.0310%" y="687.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="89.7810%" y="661" width="0.0811%" height="15" fill="rgb(213,215,10)" fg:x="1107" fg:w="1"/><text x="90.0310%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="89.7810%" y="645" width="0.0811%" height="15" fill="rgb(215,220,44)" fg:x="1107" fg:w="1"/><text x="90.0310%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="89.7810%" y="629" width="0.0811%" height="15" fill="rgb(245,205,37)" fg:x="1107" fg:w="1"/><text x="90.0310%" y="639.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="89.7810%" y="613" width="0.0811%" height="15" fill="rgb(245,130,43)" fg:x="1107" fg:w="1"/><text x="90.0310%" y="623.50"></text></g><g><title>&lt;plugins_core::building::parser::BidirectionalDigActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="89.8621%" y="565" width="0.0811%" height="15" fill="rgb(231,227,38)" fg:x="1108" fg:w="1"/><text x="90.1121%" y="575.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (2 samples, 0.16%)</title><rect x="89.8621%" y="597" width="0.1622%" height="15" fill="rgb(233,185,4)" fg:x="1108" fg:w="2"/><text x="90.1121%" y="607.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="89.8621%" y="581" width="0.1622%" height="15" fill="rgb(224,154,43)" fg:x="1108" fg:w="2"/><text x="90.1121%" y="591.50"></text></g><g><title>&lt;plugins_core::building::parser::ObliterateActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="89.9432%" y="565" width="0.0811%" height="15" fill="rgb(235,156,15)" fg:x="1109" fg:w="1"/><text x="90.1932%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="90.2676%" y="229" width="0.0811%" height="15" fill="rgb(211,55,43)" fg:x="1113" fg:w="1"/><text x="90.5176%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="90.1865%" y="325" width="0.2433%" height="15" fill="rgb(247,149,40)" fg:x="1112" fg:w="3"/><text x="90.4365%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.1865%" y="309" width="0.2433%" height="15" fill="rgb(232,171,16)" fg:x="1112" fg:w="3"/><text x="90.4365%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="90.2676%" y="293" width="0.1622%" height="15" fill="rgb(215,117,49)" fg:x="1113" fg:w="2"/><text x="90.5176%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.2676%" y="277" width="0.1622%" height="15" fill="rgb(246,194,11)" fg:x="1113" fg:w="2"/><text x="90.5176%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.2676%" y="261" width="0.1622%" height="15" fill="rgb(242,101,44)" fg:x="1113" fg:w="2"/><text x="90.5176%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.2676%" y="245" width="0.1622%" height="15" fill="rgb(226,174,6)" fg:x="1113" fg:w="2"/><text x="90.5176%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3487%" y="229" width="0.0811%" height="15" fill="rgb(213,150,20)" fg:x="1114" fg:w="1"/><text x="90.5987%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3487%" y="213" width="0.0811%" height="15" fill="rgb(222,124,42)" fg:x="1114" fg:w="1"/><text x="90.5987%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3487%" y="197" width="0.0811%" height="15" fill="rgb(250,19,47)" fg:x="1114" fg:w="1"/><text x="90.5987%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="90.1865%" y="373" width="0.3244%" height="15" fill="rgb(241,217,19)" fg:x="1112" fg:w="4"/><text x="90.4365%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="90.1865%" y="357" width="0.3244%" height="15" fill="rgb(207,210,34)" fg:x="1112" fg:w="4"/><text x="90.4365%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="90.1865%" y="341" width="0.3244%" height="15" fill="rgb(244,45,4)" fg:x="1112" fg:w="4"/><text x="90.4365%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="90.4298%" y="325" width="0.0811%" height="15" fill="rgb(252,134,50)" fg:x="1115" fg:w="1"/><text x="90.6798%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="90.4298%" y="309" width="0.0811%" height="15" fill="rgb(238,74,2)" fg:x="1115" fg:w="1"/><text x="90.6798%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4298%" y="293" width="0.0811%" height="15" fill="rgb(226,58,46)" fg:x="1115" fg:w="1"/><text x="90.6798%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.41%)</title><rect x="90.1865%" y="437" width="0.4055%" height="15" fill="rgb(232,83,35)" fg:x="1112" fg:w="5"/><text x="90.4365%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.41%)</title><rect x="90.1865%" y="421" width="0.4055%" height="15" fill="rgb(212,148,47)" fg:x="1112" fg:w="5"/><text x="90.4365%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="90.1865%" y="405" width="0.4055%" height="15" fill="rgb(235,29,1)" fg:x="1112" fg:w="5"/><text x="90.4365%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="90.1865%" y="389" width="0.4055%" height="15" fill="rgb(247,55,37)" fg:x="1112" fg:w="5"/><text x="90.4365%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.5109%" y="373" width="0.0811%" height="15" fill="rgb(222,48,3)" fg:x="1116" fg:w="1"/><text x="90.7609%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.5109%" y="357" width="0.0811%" height="15" fill="rgb(234,21,33)" fg:x="1116" fg:w="1"/><text x="90.7609%" y="367.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.57%)</title><rect x="90.1054%" y="533" width="0.5677%" height="15" fill="rgb(247,178,53)" fg:x="1111" fg:w="7"/><text x="90.3554%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.57%)</title><rect x="90.1054%" y="517" width="0.5677%" height="15" fill="rgb(225,75,7)" fg:x="1111" fg:w="7"/><text x="90.3554%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.57%)</title><rect x="90.1054%" y="501" width="0.5677%" height="15" fill="rgb(219,199,7)" fg:x="1111" fg:w="7"/><text x="90.3554%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.57%)</title><rect x="90.1054%" y="485" width="0.5677%" height="15" fill="rgb(209,93,42)" fg:x="1111" fg:w="7"/><text x="90.3554%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.49%)</title><rect x="90.1865%" y="469" width="0.4866%" height="15" fill="rgb(240,175,17)" fg:x="1112" fg:w="6"/><text x="90.4365%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.49%)</title><rect x="90.1865%" y="453" width="0.4866%" height="15" fill="rgb(232,106,7)" fg:x="1112" fg:w="6"/><text x="90.4365%" y="463.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="90.5921%" y="437" width="0.0811%" height="15" fill="rgb(242,106,43)" fg:x="1117" fg:w="1"/><text x="90.8421%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.5921%" y="421" width="0.0811%" height="15" fill="rgb(242,61,37)" fg:x="1117" fg:w="1"/><text x="90.8421%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.5921%" y="405" width="0.0811%" height="15" fill="rgb(205,72,10)" fg:x="1117" fg:w="1"/><text x="90.8421%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.5921%" y="389" width="0.0811%" height="15" fill="rgb(214,184,36)" fg:x="1117" fg:w="1"/><text x="90.8421%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.5921%" y="373" width="0.0811%" height="15" fill="rgb(206,107,18)" fg:x="1117" fg:w="1"/><text x="90.8421%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.5921%" y="357" width="0.0811%" height="15" fill="rgb(210,75,5)" fg:x="1117" fg:w="1"/><text x="90.8421%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5921%" y="341" width="0.0811%" height="15" fill="rgb(205,3,19)" fg:x="1117" fg:w="1"/><text x="90.8421%" y="351.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (8 samples, 0.65%)</title><rect x="90.1054%" y="549" width="0.6488%" height="15" fill="rgb(207,181,42)" fg:x="1111" fg:w="8"/><text x="90.3554%" y="559.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="90.6732%" y="533" width="0.0811%" height="15" fill="rgb(229,179,43)" fg:x="1118" fg:w="1"/><text x="90.9232%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6732%" y="517" width="0.0811%" height="15" fill="rgb(246,95,30)" fg:x="1118" fg:w="1"/><text x="90.9232%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.9976%" y="437" width="0.1622%" height="15" fill="rgb(234,144,45)" fg:x="1122" fg:w="2"/><text x="91.2476%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="90.9165%" y="453" width="0.3244%" height="15" fill="rgb(250,54,25)" fg:x="1121" fg:w="4"/><text x="91.1665%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="91.1598%" y="437" width="0.0811%" height="15" fill="rgb(215,195,40)" fg:x="1124" fg:w="1"/><text x="91.4098%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="91.2409%" y="453" width="0.2433%" height="15" fill="rgb(233,188,42)" fg:x="1125" fg:w="3"/><text x="91.4909%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="90.7543%" y="469" width="0.8110%" height="15" fill="rgb(247,227,35)" fg:x="1119" fg:w="10"/><text x="91.0043%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="91.4842%" y="453" width="0.0811%" height="15" fill="rgb(249,124,27)" fg:x="1128" fg:w="1"/><text x="91.7342%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.4842%" y="437" width="0.0811%" height="15" fill="rgb(219,207,25)" fg:x="1128" fg:w="1"/><text x="91.7342%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4842%" y="421" width="0.0811%" height="15" fill="rgb(241,216,47)" fg:x="1128" fg:w="1"/><text x="91.7342%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="90.7543%" y="485" width="0.8921%" height="15" fill="rgb(233,82,50)" fg:x="1119" fg:w="11"/><text x="91.0043%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5653%" y="469" width="0.0811%" height="15" fill="rgb(232,63,2)" fg:x="1129" fg:w="1"/><text x="91.8153%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="91.6464%" y="485" width="0.2433%" height="15" fill="rgb(236,184,28)" fg:x="1130" fg:w="3"/><text x="91.8964%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (15 samples, 1.22%)</title><rect x="90.7543%" y="517" width="1.2165%" height="15" fill="rgb(254,63,27)" fg:x="1119" fg:w="15"/><text x="91.0043%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.22%)</title><rect x="90.7543%" y="501" width="1.2165%" height="15" fill="rgb(253,106,28)" fg:x="1119" fg:w="15"/><text x="91.0043%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="91.8897%" y="485" width="0.0811%" height="15" fill="rgb(225,141,39)" fg:x="1133" fg:w="1"/><text x="92.1397%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.9708%" y="485" width="0.0811%" height="15" fill="rgb(222,157,20)" fg:x="1134" fg:w="1"/><text x="92.2208%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9708%" y="469" width="0.0811%" height="15" fill="rgb(210,190,9)" fg:x="1134" fg:w="1"/><text x="92.2208%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.0519%" y="437" width="0.0811%" height="15" fill="rgb(242,167,7)" fg:x="1135" fg:w="1"/><text x="92.3019%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1330%" y="437" width="0.0811%" height="15" fill="rgb(227,82,41)" fg:x="1136" fg:w="1"/><text x="92.3830%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="92.0519%" y="485" width="0.2433%" height="15" fill="rgb(222,131,13)" fg:x="1135" fg:w="3"/><text x="92.3019%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="92.0519%" y="469" width="0.2433%" height="15" fill="rgb(221,98,26)" fg:x="1135" fg:w="3"/><text x="92.3019%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="92.0519%" y="453" width="0.2433%" height="15" fill="rgb(251,63,52)" fg:x="1135" fg:w="3"/><text x="92.3019%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="92.2141%" y="437" width="0.0811%" height="15" fill="rgb(246,25,43)" fg:x="1137" fg:w="1"/><text x="92.4641%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.2141%" y="421" width="0.0811%" height="15" fill="rgb(247,167,15)" fg:x="1137" fg:w="1"/><text x="92.4641%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="92.2952%" y="341" width="0.0811%" height="15" fill="rgb(240,104,42)" fg:x="1138" fg:w="1"/><text x="92.5452%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="92.2952%" y="325" width="0.0811%" height="15" fill="rgb(224,54,6)" fg:x="1138" fg:w="1"/><text x="92.5452%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.08%)</title><rect x="92.2952%" y="309" width="0.0811%" height="15" fill="rgb(244,108,35)" fg:x="1138" fg:w="1"/><text x="92.5452%" y="319.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="92.2952%" y="293" width="0.0811%" height="15" fill="rgb(216,154,2)" fg:x="1138" fg:w="1"/><text x="92.5452%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.2952%" y="277" width="0.0811%" height="15" fill="rgb(222,8,47)" fg:x="1138" fg:w="1"/><text x="92.5452%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.2952%" y="261" width="0.0811%" height="15" fill="rgb(252,93,1)" fg:x="1138" fg:w="1"/><text x="92.5452%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.2952%" y="245" width="0.0811%" height="15" fill="rgb(223,226,51)" fg:x="1138" fg:w="1"/><text x="92.5452%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="92.2952%" y="421" width="0.1622%" height="15" fill="rgb(206,147,9)" fg:x="1138" fg:w="2"/><text x="92.5452%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="92.2952%" y="405" width="0.1622%" height="15" fill="rgb(248,180,41)" fg:x="1138" fg:w="2"/><text x="92.5452%" y="415.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (2 samples, 0.16%)</title><rect x="92.2952%" y="389" width="0.1622%" height="15" fill="rgb(209,47,50)" fg:x="1138" fg:w="2"/><text x="92.5452%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (2 samples, 0.16%)</title><rect x="92.2952%" y="373" width="0.1622%" height="15" fill="rgb(243,65,31)" fg:x="1138" fg:w="2"/><text x="92.5452%" y="383.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="92.2952%" y="357" width="0.1622%" height="15" fill="rgb(228,128,1)" fg:x="1138" fg:w="2"/><text x="92.5452%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3763%" y="341" width="0.0811%" height="15" fill="rgb(231,192,16)" fg:x="1139" fg:w="1"/><text x="92.6263%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3763%" y="325" width="0.0811%" height="15" fill="rgb(224,26,40)" fg:x="1139" fg:w="1"/><text x="92.6263%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.3763%" y="309" width="0.0811%" height="15" fill="rgb(214,192,17)" fg:x="1139" fg:w="1"/><text x="92.6263%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="92.4574%" y="421" width="0.0811%" height="15" fill="rgb(225,147,18)" fg:x="1140" fg:w="1"/><text x="92.7074%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.4574%" y="405" width="0.0811%" height="15" fill="rgb(205,35,11)" fg:x="1140" fg:w="1"/><text x="92.7074%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4574%" y="389" width="0.0811%" height="15" fill="rgb(242,40,42)" fg:x="1140" fg:w="1"/><text x="92.7074%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5385%" y="389" width="0.0811%" height="15" fill="rgb(250,170,13)" fg:x="1141" fg:w="1"/><text x="92.7885%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5385%" y="373" width="0.0811%" height="15" fill="rgb(240,161,28)" fg:x="1141" fg:w="1"/><text x="92.7885%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5385%" y="357" width="0.0811%" height="15" fill="rgb(245,179,12)" fg:x="1141" fg:w="1"/><text x="92.7885%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.5385%" y="341" width="0.0811%" height="15" fill="rgb(250,92,32)" fg:x="1141" fg:w="1"/><text x="92.7885%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.5385%" y="325" width="0.0811%" height="15" fill="rgb(233,10,40)" fg:x="1141" fg:w="1"/><text x="92.7885%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.5385%" y="309" width="0.0811%" height="15" fill="rgb(217,98,1)" fg:x="1141" fg:w="1"/><text x="92.7885%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.5385%" y="293" width="0.0811%" height="15" fill="rgb(238,202,7)" fg:x="1141" fg:w="1"/><text x="92.7885%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.5385%" y="277" width="0.0811%" height="15" fill="rgb(222,91,3)" fg:x="1141" fg:w="1"/><text x="92.7885%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="92.6196%" y="373" width="0.0811%" height="15" fill="rgb(211,170,49)" fg:x="1142" fg:w="1"/><text x="92.8696%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.6196%" y="357" width="0.0811%" height="15" fill="rgb(253,139,18)" fg:x="1142" fg:w="1"/><text x="92.8696%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="92.6196%" y="341" width="0.0811%" height="15" fill="rgb(222,4,43)" fg:x="1142" fg:w="1"/><text x="92.8696%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="92.6196%" y="325" width="0.0811%" height="15" fill="rgb(207,205,12)" fg:x="1142" fg:w="1"/><text x="92.8696%" y="335.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (6 samples, 0.49%)</title><rect x="92.2952%" y="437" width="0.4866%" height="15" fill="rgb(216,159,46)" fg:x="1138" fg:w="6"/><text x="92.5452%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="92.5385%" y="421" width="0.2433%" height="15" fill="rgb(236,115,1)" fg:x="1141" fg:w="3"/><text x="92.7885%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="92.5385%" y="405" width="0.2433%" height="15" fill="rgb(251,35,33)" fg:x="1141" fg:w="3"/><text x="92.7885%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="92.6196%" y="389" width="0.1622%" height="15" fill="rgb(248,62,51)" fg:x="1142" fg:w="2"/><text x="92.8696%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.7007%" y="373" width="0.0811%" height="15" fill="rgb(254,180,19)" fg:x="1143" fg:w="1"/><text x="92.9507%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7007%" y="357" width="0.0811%" height="15" fill="rgb(217,100,32)" fg:x="1143" fg:w="1"/><text x="92.9507%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8629%" y="373" width="0.0811%" height="15" fill="rgb(224,71,22)" fg:x="1145" fg:w="1"/><text x="93.1129%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.8629%" y="389" width="0.1622%" height="15" fill="rgb(251,185,33)" fg:x="1145" fg:w="2"/><text x="93.1129%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="92.9440%" y="373" width="0.0811%" height="15" fill="rgb(209,75,48)" fg:x="1146" fg:w="1"/><text x="93.1940%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.9440%" y="357" width="0.0811%" height="15" fill="rgb(253,190,16)" fg:x="1146" fg:w="1"/><text x="93.1940%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.0251%" y="325" width="0.0811%" height="15" fill="rgb(226,140,1)" fg:x="1147" fg:w="1"/><text x="93.2751%" y="335.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="93.1062%" y="309" width="0.0811%" height="15" fill="rgb(206,75,30)" fg:x="1148" fg:w="1"/><text x="93.3562%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1062%" y="293" width="0.0811%" height="15" fill="rgb(231,208,37)" fg:x="1148" fg:w="1"/><text x="93.3562%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1062%" y="277" width="0.0811%" height="15" fill="rgb(238,136,40)" fg:x="1148" fg:w="1"/><text x="93.3562%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="93.1062%" y="261" width="0.0811%" height="15" fill="rgb(247,137,17)" fg:x="1148" fg:w="1"/><text x="93.3562%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1062%" y="245" width="0.0811%" height="15" fill="rgb(240,60,40)" fg:x="1148" fg:w="1"/><text x="93.3562%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.2685%" y="229" width="0.0811%" height="15" fill="rgb(236,68,50)" fg:x="1150" fg:w="1"/><text x="93.5185%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.3496%" y="229" width="0.1622%" height="15" fill="rgb(230,42,12)" fg:x="1151" fg:w="2"/><text x="93.5996%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.3496%" y="213" width="0.1622%" height="15" fill="rgb(219,16,16)" fg:x="1151" fg:w="2"/><text x="93.5996%" y="223.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4307%" y="197" width="0.0811%" height="15" fill="rgb(220,38,35)" fg:x="1152" fg:w="1"/><text x="93.6807%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4307%" y="181" width="0.0811%" height="15" fill="rgb(228,33,1)" fg:x="1152" fg:w="1"/><text x="93.6807%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4307%" y="165" width="0.0811%" height="15" fill="rgb(241,46,31)" fg:x="1152" fg:w="1"/><text x="93.6807%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5929%" y="165" width="0.0811%" height="15" fill="rgb(232,58,20)" fg:x="1154" fg:w="1"/><text x="93.8429%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5929%" y="149" width="0.0811%" height="15" fill="rgb(206,228,53)" fg:x="1154" fg:w="1"/><text x="93.8429%" y="159.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.57%)</title><rect x="93.1873%" y="293" width="0.5677%" height="15" fill="rgb(206,88,33)" fg:x="1149" fg:w="7"/><text x="93.4373%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.57%)</title><rect x="93.1873%" y="277" width="0.5677%" height="15" fill="rgb(238,69,7)" fg:x="1149" fg:w="7"/><text x="93.4373%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="93.2685%" y="261" width="0.4866%" height="15" fill="rgb(250,21,46)" fg:x="1150" fg:w="6"/><text x="93.5185%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="93.2685%" y="245" width="0.4866%" height="15" fill="rgb(215,212,21)" fg:x="1150" fg:w="6"/><text x="93.5185%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.5118%" y="229" width="0.2433%" height="15" fill="rgb(211,35,12)" fg:x="1153" fg:w="3"/><text x="93.7618%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.5118%" y="213" width="0.2433%" height="15" fill="rgb(231,184,16)" fg:x="1153" fg:w="3"/><text x="93.7618%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.5929%" y="197" width="0.1622%" height="15" fill="rgb(242,140,15)" fg:x="1154" fg:w="2"/><text x="93.8429%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.5929%" y="181" width="0.1622%" height="15" fill="rgb(220,37,14)" fg:x="1154" fg:w="2"/><text x="93.8429%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.6740%" y="165" width="0.0811%" height="15" fill="rgb(223,146,22)" fg:x="1155" fg:w="1"/><text x="93.9240%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6740%" y="149" width="0.0811%" height="15" fill="rgb(216,132,15)" fg:x="1155" fg:w="1"/><text x="93.9240%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.6740%" y="133" width="0.0811%" height="15" fill="rgb(248,83,5)" fg:x="1155" fg:w="1"/><text x="93.9240%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6740%" y="117" width="0.0811%" height="15" fill="rgb(231,206,48)" fg:x="1155" fg:w="1"/><text x="93.9240%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.6740%" y="101" width="0.0811%" height="15" fill="rgb(253,185,37)" fg:x="1155" fg:w="1"/><text x="93.9240%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.7551%" y="245" width="0.0811%" height="15" fill="rgb(208,21,44)" fg:x="1156" fg:w="1"/><text x="94.0051%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7551%" y="229" width="0.0811%" height="15" fill="rgb(236,125,4)" fg:x="1156" fg:w="1"/><text x="94.0051%" y="239.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (13 samples, 1.05%)</title><rect x="93.0251%" y="389" width="1.0543%" height="15" fill="rgb(226,134,25)" fg:x="1147" fg:w="13"/><text x="93.2751%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (13 samples, 1.05%)</title><rect x="93.0251%" y="373" width="1.0543%" height="15" fill="rgb(250,201,12)" fg:x="1147" fg:w="13"/><text x="93.2751%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.05%)</title><rect x="93.0251%" y="357" width="1.0543%" height="15" fill="rgb(225,92,18)" fg:x="1147" fg:w="13"/><text x="93.2751%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.05%)</title><rect x="93.0251%" y="341" width="1.0543%" height="15" fill="rgb(227,35,22)" fg:x="1147" fg:w="13"/><text x="93.2751%" y="351.50"></text></g><g><title>engine::internal::Entities::prepare_entity (12 samples, 0.97%)</title><rect x="93.1062%" y="325" width="0.9732%" height="15" fill="rgb(214,180,52)" fg:x="1148" fg:w="12"/><text x="93.3562%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.89%)</title><rect x="93.1873%" y="309" width="0.8921%" height="15" fill="rgb(233,55,38)" fg:x="1149" fg:w="11"/><text x="93.4373%" y="319.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="93.7551%" y="293" width="0.3244%" height="15" fill="rgb(249,171,43)" fg:x="1156" fg:w="4"/><text x="94.0051%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="93.7551%" y="277" width="0.3244%" height="15" fill="rgb(239,87,2)" fg:x="1156" fg:w="4"/><text x="94.0051%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.7551%" y="261" width="0.3244%" height="15" fill="rgb(248,141,5)" fg:x="1156" fg:w="4"/><text x="94.0051%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.8362%" y="245" width="0.2433%" height="15" fill="rgb(238,33,42)" fg:x="1157" fg:w="3"/><text x="94.0862%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.8362%" y="229" width="0.2433%" height="15" fill="rgb(231,57,19)" fg:x="1157" fg:w="3"/><text x="94.0862%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.9173%" y="213" width="0.1622%" height="15" fill="rgb(214,78,53)" fg:x="1158" fg:w="2"/><text x="94.1673%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.9173%" y="197" width="0.1622%" height="15" fill="rgb(206,132,29)" fg:x="1158" fg:w="2"/><text x="94.1673%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.9173%" y="181" width="0.1622%" height="15" fill="rgb(248,174,31)" fg:x="1158" fg:w="2"/><text x="94.1673%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.9173%" y="165" width="0.1622%" height="15" fill="rgb(221,87,13)" fg:x="1158" fg:w="2"/><text x="94.1673%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="93.9173%" y="149" width="0.1622%" height="15" fill="rgb(223,197,17)" fg:x="1158" fg:w="2"/><text x="94.1673%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9984%" y="133" width="0.0811%" height="15" fill="rgb(220,144,50)" fg:x="1159" fg:w="1"/><text x="94.2484%" y="143.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="94.0795%" y="389" width="0.0811%" height="15" fill="rgb(244,201,11)" fg:x="1160" fg:w="1"/><text x="94.3295%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="94.0795%" y="373" width="0.0811%" height="15" fill="rgb(249,81,34)" fg:x="1160" fg:w="1"/><text x="94.3295%" y="383.50"></text></g><g><title>plugins_core::tools::get_contained_keys (19 samples, 1.54%)</title><rect x="92.7818%" y="437" width="1.5410%" height="15" fill="rgb(205,161,12)" fg:x="1144" fg:w="19"/><text x="93.0318%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.54%)</title><rect x="92.7818%" y="421" width="1.5410%" height="15" fill="rgb(252,139,50)" fg:x="1144" fg:w="19"/><text x="93.0318%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (19 samples, 1.54%)</title><rect x="92.7818%" y="405" width="1.5410%" height="15" fill="rgb(205,169,14)" fg:x="1144" fg:w="19"/><text x="93.0318%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.1606%" y="389" width="0.1622%" height="15" fill="rgb(248,198,33)" fg:x="1161" fg:w="2"/><text x="94.4106%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.1606%" y="373" width="0.1622%" height="15" fill="rgb(236,23,21)" fg:x="1161" fg:w="2"/><text x="94.4106%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.2417%" y="357" width="0.0811%" height="15" fill="rgb(231,13,38)" fg:x="1162" fg:w="1"/><text x="94.4917%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.2417%" y="341" width="0.0811%" height="15" fill="rgb(239,139,21)" fg:x="1162" fg:w="1"/><text x="94.4917%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4850%" y="373" width="0.0811%" height="15" fill="rgb(222,164,45)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4850%" y="357" width="0.0811%" height="15" fill="rgb(230,52,27)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.4850%" y="341" width="0.0811%" height="15" fill="rgb(227,143,42)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.4850%" y="325" width="0.0811%" height="15" fill="rgb(249,127,1)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.4850%" y="309" width="0.0811%" height="15" fill="rgb(243,107,26)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4850%" y="293" width="0.0811%" height="15" fill="rgb(225,7,45)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4850%" y="277" width="0.0811%" height="15" fill="rgb(241,88,38)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.4850%" y="261" width="0.0811%" height="15" fill="rgb(226,121,9)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.4850%" y="245" width="0.0811%" height="15" fill="rgb(253,60,29)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.4850%" y="229" width="0.0811%" height="15" fill="rgb(244,181,39)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.4850%" y="213" width="0.0811%" height="15" fill="rgb(252,203,31)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4850%" y="197" width="0.0811%" height="15" fill="rgb(224,120,8)" fg:x="1165" fg:w="1"/><text x="94.7350%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.4850%" y="389" width="0.1622%" height="15" fill="rgb(205,171,54)" fg:x="1165" fg:w="2"/><text x="94.7350%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5661%" y="373" width="0.0811%" height="15" fill="rgb(235,89,11)" fg:x="1166" fg:w="1"/><text x="94.8161%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5661%" y="357" width="0.0811%" height="15" fill="rgb(212,180,28)" fg:x="1166" fg:w="1"/><text x="94.8161%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.6472%" y="389" width="0.0811%" height="15" fill="rgb(247,84,49)" fg:x="1167" fg:w="1"/><text x="94.8972%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.51%)</title><rect x="92.2952%" y="469" width="2.5142%" height="15" fill="rgb(236,187,52)" fg:x="1138" fg:w="31"/><text x="92.5452%" y="479.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 2.51%)</title><rect x="92.2952%" y="453" width="2.5142%" height="15" fill="rgb(227,24,15)" fg:x="1138" fg:w="31"/><text x="92.5452%" y="463.50">&lt;c..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.49%)</title><rect x="94.3228%" y="437" width="0.4866%" height="15" fill="rgb(227,211,13)" fg:x="1163" fg:w="6"/><text x="94.5728%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.49%)</title><rect x="94.3228%" y="421" width="0.4866%" height="15" fill="rgb(245,52,14)" fg:x="1163" fg:w="6"/><text x="94.5728%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.41%)</title><rect x="94.4039%" y="405" width="0.4055%" height="15" fill="rgb(225,185,13)" fg:x="1164" fg:w="5"/><text x="94.6539%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7283%" y="389" width="0.0811%" height="15" fill="rgb(217,160,29)" fg:x="1168" fg:w="1"/><text x="94.9783%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7283%" y="373" width="0.0811%" height="15" fill="rgb(216,115,53)" fg:x="1168" fg:w="1"/><text x="94.9783%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.7283%" y="357" width="0.0811%" height="15" fill="rgb(236,99,5)" fg:x="1168" fg:w="1"/><text x="94.9783%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.7283%" y="341" width="0.0811%" height="15" fill="rgb(222,60,38)" fg:x="1168" fg:w="1"/><text x="94.9783%" y="351.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.7283%" y="325" width="0.0811%" height="15" fill="rgb(212,82,22)" fg:x="1168" fg:w="1"/><text x="94.9783%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7283%" y="309" width="0.0811%" height="15" fill="rgb(214,48,28)" fg:x="1168" fg:w="1"/><text x="94.9783%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7283%" y="293" width="0.0811%" height="15" fill="rgb(245,196,50)" fg:x="1168" fg:w="1"/><text x="94.9783%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.8094%" y="421" width="0.1622%" height="15" fill="rgb(225,159,46)" fg:x="1169" fg:w="2"/><text x="95.0594%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8905%" y="405" width="0.0811%" height="15" fill="rgb(207,195,48)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.8905%" y="389" width="0.0811%" height="15" fill="rgb(240,73,3)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.8905%" y="373" width="0.0811%" height="15" fill="rgb(245,57,23)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.8905%" y="357" width="0.0811%" height="15" fill="rgb(240,75,18)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8905%" y="341" width="0.0811%" height="15" fill="rgb(238,168,12)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8905%" y="325" width="0.0811%" height="15" fill="rgb(226,20,40)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.8905%" y="309" width="0.0811%" height="15" fill="rgb(224,130,35)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.8905%" y="293" width="0.0811%" height="15" fill="rgb(225,63,41)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.8905%" y="277" width="0.0811%" height="15" fill="rgb(219,3,3)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.8905%" y="261" width="0.0811%" height="15" fill="rgb(218,157,4)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8905%" y="245" width="0.0811%" height="15" fill="rgb(232,76,36)" fg:x="1170" fg:w="1"/><text x="95.1405%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9716%" y="405" width="0.0811%" height="15" fill="rgb(247,36,0)" fg:x="1171" fg:w="1"/><text x="95.2216%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="95.0527%" y="405" width="0.0811%" height="15" fill="rgb(205,2,34)" fg:x="1172" fg:w="1"/><text x="95.3027%" y="415.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="95.0527%" y="389" width="0.0811%" height="15" fill="rgb(239,136,13)" fg:x="1172" fg:w="1"/><text x="95.3027%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="94.9716%" y="421" width="0.3244%" height="15" fill="rgb(253,122,12)" fg:x="1171" fg:w="4"/><text x="95.2216%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="95.1338%" y="405" width="0.1622%" height="15" fill="rgb(222,174,7)" fg:x="1173" fg:w="2"/><text x="95.3838%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.2149%" y="389" width="0.0811%" height="15" fill="rgb(208,191,42)" fg:x="1174" fg:w="1"/><text x="95.4649%" y="399.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="95.2149%" y="373" width="0.0811%" height="15" fill="rgb(237,212,15)" fg:x="1174" fg:w="1"/><text x="95.4649%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="95.2149%" y="357" width="0.0811%" height="15" fill="rgb(215,65,20)" fg:x="1174" fg:w="1"/><text x="95.4649%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="95.2149%" y="341" width="0.0811%" height="15" fill="rgb(232,103,11)" fg:x="1174" fg:w="1"/><text x="95.4649%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.2149%" y="325" width="0.0811%" height="15" fill="rgb(235,148,18)" fg:x="1174" fg:w="1"/><text x="95.4649%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="95.2149%" y="309" width="0.0811%" height="15" fill="rgb(240,173,7)" fg:x="1174" fg:w="1"/><text x="95.4649%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="95.2149%" y="293" width="0.0811%" height="15" fill="rgb(228,182,25)" fg:x="1174" fg:w="1"/><text x="95.4649%" y="303.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="95.2149%" y="277" width="0.0811%" height="15" fill="rgb(247,3,52)" fg:x="1174" fg:w="1"/><text x="95.4649%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.4582%" y="309" width="0.0811%" height="15" fill="rgb(226,155,8)" fg:x="1177" fg:w="1"/><text x="95.7082%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.5393%" y="213" width="0.0811%" height="15" fill="rgb(243,195,38)" fg:x="1178" fg:w="1"/><text x="95.7893%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.5393%" y="197" width="0.0811%" height="15" fill="rgb(254,181,33)" fg:x="1178" fg:w="1"/><text x="95.7893%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.5393%" y="181" width="0.0811%" height="15" fill="rgb(232,98,23)" fg:x="1178" fg:w="1"/><text x="95.7893%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5393%" y="165" width="0.0811%" height="15" fill="rgb(205,23,10)" fg:x="1178" fg:w="1"/><text x="95.7893%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.6204%" y="213" width="0.0811%" height="15" fill="rgb(212,124,38)" fg:x="1179" fg:w="1"/><text x="95.8704%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="95.5393%" y="229" width="0.2433%" height="15" fill="rgb(228,207,2)" fg:x="1178" fg:w="3"/><text x="95.7893%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.7015%" y="213" width="0.0811%" height="15" fill="rgb(215,120,22)" fg:x="1180" fg:w="1"/><text x="95.9515%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.7015%" y="197" width="0.0811%" height="15" fill="rgb(251,172,33)" fg:x="1180" fg:w="1"/><text x="95.9515%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="95.5393%" y="261" width="0.3244%" height="15" fill="rgb(250,83,2)" fg:x="1178" fg:w="4"/><text x="95.7893%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.5393%" y="245" width="0.3244%" height="15" fill="rgb(210,132,53)" fg:x="1178" fg:w="4"/><text x="95.7893%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.7826%" y="229" width="0.0811%" height="15" fill="rgb(221,208,36)" fg:x="1181" fg:w="1"/><text x="96.0326%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="95.7826%" y="213" width="0.0811%" height="15" fill="rgb(205,192,46)" fg:x="1181" fg:w="1"/><text x="96.0326%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="95.7826%" y="197" width="0.0811%" height="15" fill="rgb(223,163,14)" fg:x="1181" fg:w="1"/><text x="96.0326%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.49%)</title><rect x="95.5393%" y="277" width="0.4866%" height="15" fill="rgb(218,41,28)" fg:x="1178" fg:w="6"/><text x="95.7893%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.8637%" y="261" width="0.1622%" height="15" fill="rgb(235,104,10)" fg:x="1182" fg:w="2"/><text x="96.1137%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.9448%" y="245" width="0.0811%" height="15" fill="rgb(246,17,4)" fg:x="1183" fg:w="1"/><text x="96.1948%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (8 samples, 0.65%)</title><rect x="95.5393%" y="309" width="0.6488%" height="15" fill="rgb(240,7,16)" fg:x="1178" fg:w="8"/><text x="95.7893%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="95.5393%" y="293" width="0.6488%" height="15" fill="rgb(213,160,23)" fg:x="1178" fg:w="8"/><text x="95.7893%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="96.0260%" y="277" width="0.1622%" height="15" fill="rgb(251,179,49)" fg:x="1184" fg:w="2"/><text x="96.2760%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.0260%" y="261" width="0.1622%" height="15" fill="rgb(247,198,10)" fg:x="1184" fg:w="2"/><text x="96.2760%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.81%)</title><rect x="95.4582%" y="325" width="0.8110%" height="15" fill="rgb(220,65,29)" fg:x="1177" fg:w="10"/><text x="95.7082%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.1882%" y="309" width="0.0811%" height="15" fill="rgb(237,171,28)" fg:x="1186" fg:w="1"/><text x="96.4382%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (13 samples, 1.05%)</title><rect x="95.4582%" y="357" width="1.0543%" height="15" fill="rgb(228,44,26)" fg:x="1177" fg:w="13"/><text x="95.7082%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 1.05%)</title><rect x="95.4582%" y="341" width="1.0543%" height="15" fill="rgb(216,210,27)" fg:x="1177" fg:w="13"/><text x="95.7082%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="96.2693%" y="325" width="0.2433%" height="15" fill="rgb(252,10,17)" fg:x="1187" fg:w="3"/><text x="96.5193%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="96.2693%" y="309" width="0.2433%" height="15" fill="rgb(214,172,30)" fg:x="1187" fg:w="3"/><text x="96.5193%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.5126%" y="357" width="0.0811%" height="15" fill="rgb(253,130,48)" fg:x="1190" fg:w="1"/><text x="96.7626%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.5126%" y="341" width="0.0811%" height="15" fill="rgb(226,99,43)" fg:x="1190" fg:w="1"/><text x="96.7626%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.30%)</title><rect x="95.3771%" y="373" width="1.2976%" height="15" fill="rgb(239,111,26)" fg:x="1176" fg:w="16"/><text x="95.6271%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5937%" y="357" width="0.0811%" height="15" fill="rgb(240,27,53)" fg:x="1191" fg:w="1"/><text x="96.8437%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.5937%" y="341" width="0.0811%" height="15" fill="rgb(254,163,12)" fg:x="1191" fg:w="1"/><text x="96.8437%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (24 samples, 1.95%)</title><rect x="95.2960%" y="405" width="1.9465%" height="15" fill="rgb(225,51,48)" fg:x="1175" fg:w="24"/><text x="95.5460%" y="415.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (23 samples, 1.87%)</title><rect x="95.3771%" y="389" width="1.8654%" height="15" fill="rgb(205,19,32)" fg:x="1176" fg:w="23"/><text x="95.6271%" y="399.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.57%)</title><rect x="96.6748%" y="373" width="0.5677%" height="15" fill="rgb(218,119,26)" fg:x="1192" fg:w="7"/><text x="96.9248%" y="383.50"></text></g><g><title>__libc_malloc (7 samples, 0.57%)</title><rect x="96.6748%" y="357" width="0.5677%" height="15" fill="rgb(231,173,33)" fg:x="1192" fg:w="7"/><text x="96.9248%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4047%" y="357" width="0.0811%" height="15" fill="rgb(241,100,29)" fg:x="1201" fg:w="1"/><text x="97.6547%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.4858%" y="357" width="0.2433%" height="15" fill="rgb(250,194,34)" fg:x="1202" fg:w="3"/><text x="97.7358%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6480%" y="341" width="0.0811%" height="15" fill="rgb(215,23,50)" fg:x="1204" fg:w="1"/><text x="97.8980%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="97.7291%" y="357" width="0.1622%" height="15" fill="rgb(206,49,37)" fg:x="1205" fg:w="2"/><text x="97.9791%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.7291%" y="341" width="0.1622%" height="15" fill="rgb(247,39,21)" fg:x="1205" fg:w="2"/><text x="97.9791%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8102%" y="325" width="0.0811%" height="15" fill="rgb(209,220,15)" fg:x="1206" fg:w="1"/><text x="98.0602%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="97.8913%" y="357" width="0.1622%" height="15" fill="rgb(206,41,33)" fg:x="1207" fg:w="2"/><text x="98.1413%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.8913%" y="341" width="0.1622%" height="15" fill="rgb(221,225,45)" fg:x="1207" fg:w="2"/><text x="98.1413%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.8913%" y="325" width="0.1622%" height="15" fill="rgb(216,27,18)" fg:x="1207" fg:w="2"/><text x="98.1413%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9724%" y="309" width="0.0811%" height="15" fill="rgb(250,193,34)" fg:x="1208" fg:w="1"/><text x="98.2224%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9724%" y="293" width="0.0811%" height="15" fill="rgb(227,215,20)" fg:x="1208" fg:w="1"/><text x="98.2224%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="98.0535%" y="341" width="0.0811%" height="15" fill="rgb(242,211,27)" fg:x="1209" fg:w="1"/><text x="98.3035%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="98.0535%" y="357" width="0.1622%" height="15" fill="rgb(229,190,30)" fg:x="1209" fg:w="2"/><text x="98.3035%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.1346%" y="341" width="0.0811%" height="15" fill="rgb(253,31,29)" fg:x="1210" fg:w="1"/><text x="98.3846%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1346%" y="325" width="0.0811%" height="15" fill="rgb(229,177,52)" fg:x="1210" fg:w="1"/><text x="98.3846%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.2157%" y="309" width="0.1622%" height="15" fill="rgb(226,88,8)" fg:x="1211" fg:w="2"/><text x="98.4657%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.2157%" y="293" width="0.1622%" height="15" fill="rgb(214,55,27)" fg:x="1211" fg:w="2"/><text x="98.4657%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.2157%" y="277" width="0.1622%" height="15" fill="rgb(233,202,5)" fg:x="1211" fg:w="2"/><text x="98.4657%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3779%" y="277" width="0.0811%" height="15" fill="rgb(251,49,30)" fg:x="1213" fg:w="1"/><text x="98.6279%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3779%" y="261" width="0.0811%" height="15" fill="rgb(235,18,52)" fg:x="1213" fg:w="1"/><text x="98.6279%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.3779%" y="293" width="0.1622%" height="15" fill="rgb(250,111,51)" fg:x="1213" fg:w="2"/><text x="98.6279%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="98.4590%" y="277" width="0.0811%" height="15" fill="rgb(218,13,25)" fg:x="1214" fg:w="1"/><text x="98.7090%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.4590%" y="261" width="0.0811%" height="15" fill="rgb(248,96,7)" fg:x="1214" fg:w="1"/><text x="98.7090%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4590%" y="245" width="0.0811%" height="15" fill="rgb(217,31,15)" fg:x="1214" fg:w="1"/><text x="98.7090%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4590%" y="229" width="0.0811%" height="15" fill="rgb(228,59,49)" fg:x="1214" fg:w="1"/><text x="98.7090%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4590%" y="213" width="0.0811%" height="15" fill="rgb(210,152,38)" fg:x="1214" fg:w="1"/><text x="98.7090%" y="223.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.49%)</title><rect x="98.2157%" y="357" width="0.4866%" height="15" fill="rgb(206,71,11)" fg:x="1211" fg:w="6"/><text x="98.4657%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="98.2157%" y="341" width="0.4866%" height="15" fill="rgb(244,199,5)" fg:x="1211" fg:w="6"/><text x="98.4657%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="98.2157%" y="325" width="0.4866%" height="15" fill="rgb(253,49,1)" fg:x="1211" fg:w="6"/><text x="98.4657%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="98.3779%" y="309" width="0.3244%" height="15" fill="rgb(225,206,40)" fg:x="1213" fg:w="4"/><text x="98.6279%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.5401%" y="293" width="0.1622%" height="15" fill="rgb(243,116,47)" fg:x="1215" fg:w="2"/><text x="98.7901%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7024%" y="341" width="0.0811%" height="15" fill="rgb(219,225,16)" fg:x="1217" fg:w="1"/><text x="98.9524%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="98.7835%" y="309" width="0.0811%" height="15" fill="rgb(233,29,47)" fg:x="1218" fg:w="1"/><text x="99.0335%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="98.7835%" y="293" width="0.0811%" height="15" fill="rgb(250,179,18)" fg:x="1218" fg:w="1"/><text x="99.0335%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7835%" y="277" width="0.0811%" height="15" fill="rgb(215,176,6)" fg:x="1218" fg:w="1"/><text x="99.0335%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.8646%" y="293" width="0.0811%" height="15" fill="rgb(214,117,39)" fg:x="1219" fg:w="1"/><text x="99.1146%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="98.8646%" y="277" width="0.0811%" height="15" fill="rgb(247,183,36)" fg:x="1219" fg:w="1"/><text x="99.1146%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (84 samples, 6.81%)</title><rect x="92.2952%" y="485" width="6.8127%" height="15" fill="rgb(237,200,3)" fg:x="1138" fg:w="84"/><text x="92.5452%" y="495.50">core::ite..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (53 samples, 4.30%)</title><rect x="94.8094%" y="469" width="4.2985%" height="15" fill="rgb(212,220,24)" fg:x="1169" fg:w="53"/><text x="95.0594%" y="479.50">alloc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 4.30%)</title><rect x="94.8094%" y="453" width="4.2985%" height="15" fill="rgb(245,216,20)" fg:x="1169" fg:w="53"/><text x="95.0594%" y="463.50">&lt;core..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (53 samples, 4.30%)</title><rect x="94.8094%" y="437" width="4.2985%" height="15" fill="rgb(219,124,7)" fg:x="1169" fg:w="53"/><text x="95.0594%" y="447.50">plugi..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (47 samples, 3.81%)</title><rect x="95.2960%" y="421" width="3.8118%" height="15" fill="rgb(227,167,8)" fg:x="1175" fg:w="47"/><text x="95.5460%" y="431.50">&lt;rpc..</text></g><g><title>kernel::model::EntityPtr::to_json_value (23 samples, 1.87%)</title><rect x="97.2425%" y="405" width="1.8654%" height="15" fill="rgb(241,37,2)" fg:x="1199" fg:w="23"/><text x="97.4925%" y="415.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (23 samples, 1.87%)</title><rect x="97.2425%" y="389" width="1.8654%" height="15" fill="rgb(238,134,33)" fg:x="1199" fg:w="23"/><text x="97.4925%" y="399.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.78%)</title><rect x="97.3236%" y="373" width="1.7843%" height="15" fill="rgb(248,48,27)" fg:x="1200" fg:w="22"/><text x="97.5736%" y="383.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.41%)</title><rect x="98.7024%" y="357" width="0.4055%" height="15" fill="rgb(212,14,16)" fg:x="1217" fg:w="5"/><text x="98.9524%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.32%)</title><rect x="98.7835%" y="341" width="0.3244%" height="15" fill="rgb(217,205,37)" fg:x="1218" fg:w="4"/><text x="99.0335%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="98.7835%" y="325" width="0.3244%" height="15" fill="rgb(233,185,47)" fg:x="1218" fg:w="4"/><text x="99.0335%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="98.8646%" y="309" width="0.2433%" height="15" fill="rgb(244,88,8)" fg:x="1219" fg:w="3"/><text x="99.1146%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.9457%" y="293" width="0.1622%" height="15" fill="rgb(213,0,20)" fg:x="1220" fg:w="2"/><text x="99.1957%" y="303.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (89 samples, 7.22%)</title><rect x="91.9708%" y="501" width="7.2182%" height="15" fill="rgb(238,159,36)" fg:x="1134" fg:w="89"/><text x="92.2208%" y="511.50">&lt;plugins_r..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1079%" y="485" width="0.0811%" height="15" fill="rgb(253,173,17)" fg:x="1222" fg:w="1"/><text x="99.3579%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1079%" y="469" width="0.0811%" height="15" fill="rgb(221,23,28)" fg:x="1222" fg:w="1"/><text x="99.3579%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.1079%" y="453" width="0.0811%" height="15" fill="rgb(218,113,15)" fg:x="1222" fg:w="1"/><text x="99.3579%" y="463.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="99.1079%" y="437" width="0.0811%" height="15" fill="rgb(233,58,3)" fg:x="1222" fg:w="1"/><text x="99.3579%" y="447.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (113 samples, 9.16%)</title><rect x="90.1054%" y="565" width="9.1646%" height="15" fill="rgb(250,46,35)" fg:x="1111" fg:w="113"/><text x="90.3554%" y="575.50">&lt;engine::perf..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (105 samples, 8.52%)</title><rect x="90.7543%" y="549" width="8.5158%" height="15" fill="rgb(210,169,11)" fg:x="1119" fg:w="105"/><text x="91.0043%" y="559.50">kernel::plug..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (105 samples, 8.52%)</title><rect x="90.7543%" y="533" width="8.5158%" height="15" fill="rgb(246,88,19)" fg:x="1119" fg:w="105"/><text x="91.0043%" y="543.50">&lt;plugins_dyn..</text></g><g><title>plugins_rpc::querying::have_surroundings (90 samples, 7.30%)</title><rect x="91.9708%" y="517" width="7.2993%" height="15" fill="rgb(206,81,49)" fg:x="1134" fg:w="90"/><text x="92.2208%" y="527.50">plugins_rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.1890%" y="501" width="0.0811%" height="15" fill="rgb(232,144,18)" fg:x="1223" fg:w="1"/><text x="99.4390%" y="511.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="99.1890%" y="485" width="0.0811%" height="15" fill="rgb(235,2,27)" fg:x="1223" fg:w="1"/><text x="99.4390%" y="495.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="99.1890%" y="469" width="0.0811%" height="15" fill="rgb(239,157,39)" fg:x="1223" fg:w="1"/><text x="99.4390%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.1890%" y="453" width="0.0811%" height="15" fill="rgb(220,11,17)" fg:x="1223" fg:w="1"/><text x="99.4390%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.1890%" y="437" width="0.0811%" height="15" fill="rgb(243,94,50)" fg:x="1223" fg:w="1"/><text x="99.4390%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.1890%" y="421" width="0.0811%" height="15" fill="rgb(218,22,0)" fg:x="1223" fg:w="1"/><text x="99.4390%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="99.2701%" y="517" width="0.0811%" height="15" fill="rgb(249,70,21)" fg:x="1224" fg:w="1"/><text x="99.5201%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.3512%" y="437" width="0.1622%" height="15" fill="rgb(245,111,46)" fg:x="1225" fg:w="2"/><text x="99.6012%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.3512%" y="421" width="0.1622%" height="15" fill="rgb(244,183,12)" fg:x="1225" fg:w="2"/><text x="99.6012%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4323%" y="405" width="0.0811%" height="15" fill="rgb(207,117,0)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4323%" y="389" width="0.0811%" height="15" fill="rgb(206,20,43)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4323%" y="373" width="0.0811%" height="15" fill="rgb(221,104,11)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.4323%" y="357" width="0.0811%" height="15" fill="rgb(254,36,50)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4323%" y="341" width="0.0811%" height="15" fill="rgb(252,17,15)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4323%" y="325" width="0.0811%" height="15" fill="rgb(219,129,43)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4323%" y="309" width="0.0811%" height="15" fill="rgb(205,34,45)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.4323%" y="293" width="0.0811%" height="15" fill="rgb(251,201,32)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.4323%" y="277" width="0.0811%" height="15" fill="rgb(205,56,0)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4323%" y="261" width="0.0811%" height="15" fill="rgb(211,193,27)" fg:x="1226" fg:w="1"/><text x="99.6823%" y="271.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="99.3512%" y="501" width="0.2433%" height="15" fill="rgb(231,100,42)" fg:x="1225" fg:w="3"/><text x="99.6012%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="99.3512%" y="485" width="0.2433%" height="15" fill="rgb(245,85,27)" fg:x="1225" fg:w="3"/><text x="99.6012%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.3512%" y="469" width="0.2433%" height="15" fill="rgb(241,76,24)" fg:x="1225" fg:w="3"/><text x="99.6012%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.3512%" y="453" width="0.2433%" height="15" fill="rgb(249,157,15)" fg:x="1225" fg:w="3"/><text x="99.6012%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5134%" y="437" width="0.0811%" height="15" fill="rgb(222,218,25)" fg:x="1227" fg:w="1"/><text x="99.7634%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.41%)</title><rect x="99.2701%" y="533" width="0.4055%" height="15" fill="rgb(252,156,52)" fg:x="1224" fg:w="5"/><text x="99.5201%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="99.3512%" y="517" width="0.3244%" height="15" fill="rgb(211,185,7)" fg:x="1225" fg:w="4"/><text x="99.6012%" y="527.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.5945%" y="501" width="0.0811%" height="15" fill="rgb(234,108,24)" fg:x="1228" fg:w="1"/><text x="99.8445%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5945%" y="485" width="0.0811%" height="15" fill="rgb(227,218,2)" fg:x="1228" fg:w="1"/><text x="99.8445%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5945%" y="469" width="0.0811%" height="15" fill="rgb(224,0,36)" fg:x="1228" fg:w="1"/><text x="99.8445%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5945%" y="453" width="0.0811%" height="15" fill="rgb(233,201,10)" fg:x="1228" fg:w="1"/><text x="99.8445%" y="463.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (122 samples, 9.89%)</title><rect x="89.8621%" y="661" width="9.8946%" height="15" fill="rgb(252,209,14)" fg:x="1108" fg:w="122"/><text x="90.1121%" y="671.50">&lt;kernel::plugi..</text></g><g><title>core::iter::adapters::try_process (122 samples, 9.89%)</title><rect x="89.8621%" y="645" width="9.8946%" height="15" fill="rgb(205,93,49)" fg:x="1108" fg:w="122"/><text x="90.1121%" y="655.50">core::iter::ad..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (122 samples, 9.89%)</title><rect x="89.8621%" y="629" width="9.8946%" height="15" fill="rgb(234,116,45)" fg:x="1108" fg:w="122"/><text x="90.1121%" y="639.50">&lt;alloc::vec::V..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 9.89%)</title><rect x="89.8621%" y="613" width="9.8946%" height="15" fill="rgb(248,89,35)" fg:x="1108" fg:w="122"/><text x="90.1121%" y="623.50">&lt;core::iter::a..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (120 samples, 9.73%)</title><rect x="90.0243%" y="597" width="9.7324%" height="15" fill="rgb(233,167,45)" fg:x="1110" fg:w="120"/><text x="90.2743%" y="607.50">&lt;plugins_core:..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (119 samples, 9.65%)</title><rect x="90.1054%" y="581" width="9.6513%" height="15" fill="rgb(248,228,14)" fg:x="1111" fg:w="119"/><text x="90.3554%" y="591.50">&lt;engine::perfo..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (6 samples, 0.49%)</title><rect x="99.2701%" y="565" width="0.4866%" height="15" fill="rgb(246,91,14)" fg:x="1224" fg:w="6"/><text x="99.5201%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.49%)</title><rect x="99.2701%" y="549" width="0.4866%" height="15" fill="rgb(227,142,5)" fg:x="1224" fg:w="6"/><text x="99.5201%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.6756%" y="533" width="0.0811%" height="15" fill="rgb(221,63,33)" fg:x="1229" fg:w="1"/><text x="99.9256%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.6756%" y="517" width="0.0811%" height="15" fill="rgb(233,49,0)" fg:x="1229" fg:w="1"/><text x="99.9256%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.6756%" y="501" width="0.0811%" height="15" fill="rgb(251,115,38)" fg:x="1229" fg:w="1"/><text x="99.9256%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6756%" y="485" width="0.0811%" height="15" fill="rgb(231,214,32)" fg:x="1229" fg:w="1"/><text x="99.9256%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6756%" y="469" width="0.0811%" height="15" fill="rgb(248,73,46)" fg:x="1229" fg:w="1"/><text x="99.9256%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6756%" y="453" width="0.0811%" height="15" fill="rgb(237,156,4)" fg:x="1229" fg:w="1"/><text x="99.9256%" y="463.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.7567%" y="597" width="0.1622%" height="15" fill="rgb(227,132,2)" fg:x="1230" fg:w="2"/><text x="100.0067%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="99.7567%" y="581" width="0.1622%" height="15" fill="rgb(248,161,9)" fg:x="1230" fg:w="2"/><text x="100.0067%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="99.8378%" y="565" width="0.0811%" height="15" fill="rgb(238,77,38)" fg:x="1231" fg:w="1"/><text x="100.0878%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.8378%" y="549" width="0.0811%" height="15" fill="rgb(222,166,40)" fg:x="1231" fg:w="1"/><text x="100.0878%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8378%" y="533" width="0.0811%" height="15" fill="rgb(214,168,45)" fg:x="1231" fg:w="1"/><text x="100.0878%" y="543.50"></text></g><g><title>all (1,233 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(226,64,37)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="1055.50"></text></g><g><title>simple-bd24e590 (1,233 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(232,210,43)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="1039.50">simple-bd24e590</text></g><g><title>_start (1,233 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(214,76,33)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="1023.50">_start</text></g><g><title>__libc_start_main (1,233 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(210,78,5)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="1007.50">__libc_start_main</text></g><g><title>main (1,233 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(211,107,37)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="991.50">main</text></g><g><title>std::rt::lang_start_internal (1,233 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(249,67,16)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="975.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,233 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(222,114,31)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="959.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,233 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(242,118,19)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="943.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,233 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(223,115,1)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="927.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,233 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(241,182,54)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="911.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,233 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(244,166,36)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="895.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,233 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(241,52,43)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="879.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,233 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(236,82,9)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="863.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,233 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(241,119,0)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="847.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,233 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(221,19,22)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="831.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,233 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(254,144,35)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,233 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(246,132,30)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="799.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,233 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(234,69,28)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="783.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,233 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(219,106,47)" fg:x="0" fg:w="1233"/><text x="0.2500%" y="767.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (273 samples, 22.14%)</title><rect x="77.8589%" y="741" width="22.1411%" height="15" fill="rgb(218,79,24)" fg:x="960" fg:w="273"/><text x="78.1089%" y="751.50">&lt;criterion::routine::Function&lt;M,F,T..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (273 samples, 22.14%)</title><rect x="77.8589%" y="725" width="22.1411%" height="15" fill="rgb(225,26,21)" fg:x="960" fg:w="273"/><text x="78.1089%" y="735.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (273 samples, 22.14%)</title><rect x="77.8589%" y="709" width="22.1411%" height="15" fill="rgb(217,68,49)" fg:x="960" fg:w="273"/><text x="78.1089%" y="719.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (125 samples, 10.14%)</title><rect x="89.8621%" y="693" width="10.1379%" height="15" fill="rgb(220,204,28)" fg:x="1108" fg:w="125"/><text x="90.1121%" y="703.50">engine::session..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (125 samples, 10.14%)</title><rect x="89.8621%" y="677" width="10.1379%" height="15" fill="rgb(237,208,43)" fg:x="1108" fg:w="125"/><text x="90.1121%" y="687.50">engine::perform..</text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="99.7567%" y="661" width="0.2433%" height="15" fill="rgb(213,97,42)" fg:x="1230" fg:w="3"/><text x="100.0067%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="99.7567%" y="645" width="0.2433%" height="15" fill="rgb(238,96,52)" fg:x="1230" fg:w="3"/><text x="100.0067%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.7567%" y="629" width="0.2433%" height="15" fill="rgb(228,14,13)" fg:x="1230" fg:w="3"/><text x="100.0067%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.7567%" y="613" width="0.2433%" height="15" fill="rgb(219,123,13)" fg:x="1230" fg:w="3"/><text x="100.0067%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.08%)</title><rect x="99.9189%" y="597" width="0.0811%" height="15" fill="rgb(216,144,17)" fg:x="1232" fg:w="1"/><text x="100.1689%" y="607.50"></text></g></svg></svg>