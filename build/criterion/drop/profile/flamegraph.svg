<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="1235"><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.3239%" y="485" width="0.3239%" height="15" fill="rgb(214,117,39)" fg:x="4" fg:w="4"/><text x="0.5739%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.73%)</title><rect x="0.0000%" y="549" width="0.7287%" height="15" fill="rgb(247,183,36)" fg:x="0" fg:w="9"/><text x="0.2500%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="0.0000%" y="533" width="0.7287%" height="15" fill="rgb(237,200,3)" fg:x="0" fg:w="9"/><text x="0.2500%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.40%)</title><rect x="0.3239%" y="517" width="0.4049%" height="15" fill="rgb(212,220,24)" fg:x="4" fg:w="5"/><text x="0.5739%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.40%)</title><rect x="0.3239%" y="501" width="0.4049%" height="15" fill="rgb(245,216,20)" fg:x="4" fg:w="5"/><text x="0.5739%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="0.6478%" y="485" width="0.0810%" height="15" fill="rgb(219,124,7)" fg:x="8" fg:w="1"/><text x="0.8978%" y="495.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.7287%" y="469" width="0.3239%" height="15" fill="rgb(227,167,8)" fg:x="9" fg:w="4"/><text x="0.9787%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0526%" y="437" width="0.0810%" height="15" fill="rgb(241,37,2)" fg:x="13" fg:w="1"/><text x="1.3026%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.1336%" y="437" width="0.0810%" height="15" fill="rgb(238,134,33)" fg:x="14" fg:w="1"/><text x="1.3836%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.3765%" y="421" width="0.1619%" height="15" fill="rgb(248,48,27)" fg:x="17" fg:w="2"/><text x="1.6265%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4575%" y="405" width="0.0810%" height="15" fill="rgb(212,14,16)" fg:x="18" fg:w="1"/><text x="1.7075%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6194%" y="405" width="0.0810%" height="15" fill="rgb(217,205,37)" fg:x="20" fg:w="1"/><text x="1.8694%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7004%" y="405" width="0.0810%" height="15" fill="rgb(233,185,47)" fg:x="21" fg:w="1"/><text x="1.9504%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7814%" y="389" width="0.0810%" height="15" fill="rgb(244,88,8)" fg:x="22" fg:w="1"/><text x="2.0314%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.8623%" y="389" width="0.1619%" height="15" fill="rgb(213,0,20)" fg:x="23" fg:w="2"/><text x="2.1123%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.8623%" y="373" width="0.1619%" height="15" fill="rgb(238,159,36)" fg:x="23" fg:w="2"/><text x="2.1123%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.38%)</title><rect x="0.7287%" y="485" width="1.3765%" height="15" fill="rgb(253,173,17)" fg:x="9" fg:w="17"/><text x="0.9787%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (13 samples, 1.05%)</title><rect x="1.0526%" y="469" width="1.0526%" height="15" fill="rgb(221,23,28)" fg:x="13" fg:w="13"/><text x="1.3026%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="1.0526%" y="453" width="1.0526%" height="15" fill="rgb(218,113,15)" fg:x="13" fg:w="13"/><text x="1.3026%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="1.2146%" y="437" width="0.8907%" height="15" fill="rgb(233,58,3)" fg:x="15" fg:w="11"/><text x="1.4646%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="1.5385%" y="421" width="0.5668%" height="15" fill="rgb(250,46,35)" fg:x="19" fg:w="7"/><text x="1.7885%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="1.7814%" y="405" width="0.3239%" height="15" fill="rgb(210,169,11)" fg:x="22" fg:w="4"/><text x="2.0314%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.0243%" y="389" width="0.0810%" height="15" fill="rgb(246,88,19)" fg:x="25" fg:w="1"/><text x="2.2743%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0243%" y="373" width="0.0810%" height="15" fill="rgb(206,81,49)" fg:x="25" fg:w="1"/><text x="2.2743%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1053%" y="485" width="0.0810%" height="15" fill="rgb(232,144,18)" fg:x="26" fg:w="1"/><text x="2.3553%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.1862%" y="469" width="0.1619%" height="15" fill="rgb(235,2,27)" fg:x="27" fg:w="2"/><text x="2.4362%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.3482%" y="469" width="0.0810%" height="15" fill="rgb(239,157,39)" fg:x="29" fg:w="1"/><text x="2.5982%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3482%" y="453" width="0.0810%" height="15" fill="rgb(220,11,17)" fg:x="29" fg:w="1"/><text x="2.5982%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.5101%" y="453" width="0.0810%" height="15" fill="rgb(243,94,50)" fg:x="31" fg:w="1"/><text x="2.7601%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.5911%" y="453" width="0.1619%" height="15" fill="rgb(218,22,0)" fg:x="32" fg:w="2"/><text x="2.8411%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.5911%" y="437" width="0.1619%" height="15" fill="rgb(249,70,21)" fg:x="32" fg:w="2"/><text x="2.8411%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.9150%" y="437" width="0.0810%" height="15" fill="rgb(245,111,46)" fg:x="36" fg:w="1"/><text x="3.1650%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9150%" y="421" width="0.0810%" height="15" fill="rgb(244,183,12)" fg:x="36" fg:w="1"/><text x="3.1650%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.9960%" y="421" width="0.1619%" height="15" fill="rgb(207,117,0)" fg:x="37" fg:w="2"/><text x="3.2460%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.2389%" y="405" width="0.1619%" height="15" fill="rgb(206,20,43)" fg:x="40" fg:w="2"/><text x="3.4889%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.4008%" y="405" width="0.0810%" height="15" fill="rgb(221,104,11)" fg:x="42" fg:w="1"/><text x="3.6508%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.4818%" y="389" width="0.0810%" height="15" fill="rgb(254,36,50)" fg:x="43" fg:w="1"/><text x="3.7318%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 2.91%)</title><rect x="0.7287%" y="501" width="2.9150%" height="15" fill="rgb(252,17,15)" fg:x="9" fg:w="36"/><text x="0.9787%" y="511.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.46%)</title><rect x="2.1862%" y="485" width="1.4575%" height="15" fill="rgb(219,129,43)" fg:x="27" fg:w="18"/><text x="2.4362%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="2.4291%" y="469" width="1.2146%" height="15" fill="rgb(205,34,45)" fg:x="30" fg:w="15"/><text x="2.6791%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="2.7530%" y="453" width="0.8907%" height="15" fill="rgb(251,201,32)" fg:x="34" fg:w="11"/><text x="3.0030%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="2.9960%" y="437" width="0.6478%" height="15" fill="rgb(205,56,0)" fg:x="37" fg:w="8"/><text x="3.2460%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="3.1579%" y="421" width="0.4858%" height="15" fill="rgb(211,193,27)" fg:x="39" fg:w="6"/><text x="3.4079%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="3.4818%" y="405" width="0.1619%" height="15" fill="rgb(231,100,42)" fg:x="43" fg:w="2"/><text x="3.7318%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.5628%" y="389" width="0.0810%" height="15" fill="rgb(245,85,27)" fg:x="44" fg:w="1"/><text x="3.8128%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="3.5628%" y="373" width="0.0810%" height="15" fill="rgb(241,76,24)" fg:x="44" fg:w="1"/><text x="3.8128%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5628%" y="357" width="0.0810%" height="15" fill="rgb(249,157,15)" fg:x="44" fg:w="1"/><text x="3.8128%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 3.00%)</title><rect x="0.7287%" y="533" width="2.9960%" height="15" fill="rgb(222,218,25)" fg:x="9" fg:w="37"/><text x="0.9787%" y="543.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (37 samples, 3.00%)</title><rect x="0.7287%" y="517" width="2.9960%" height="15" fill="rgb(252,156,52)" fg:x="9" fg:w="37"/><text x="0.9787%" y="527.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6437%" y="501" width="0.0810%" height="15" fill="rgb(211,185,7)" fg:x="45" fg:w="1"/><text x="3.8937%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (38 samples, 3.08%)</title><rect x="0.7287%" y="549" width="3.0769%" height="15" fill="rgb(234,108,24)" fg:x="9" fg:w="38"/><text x="0.9787%" y="559.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7247%" y="533" width="0.0810%" height="15" fill="rgb(227,218,2)" fg:x="46" fg:w="1"/><text x="3.9747%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 3.89%)</title><rect x="0.0000%" y="565" width="3.8866%" height="15" fill="rgb(224,0,36)" fg:x="0" fg:w="48"/><text x="0.2500%" y="575.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::Captured&gt; (1 samples, 0.08%)</title><rect x="3.8057%" y="549" width="0.0810%" height="15" fill="rgb(233,201,10)" fg:x="47" fg:w="1"/><text x="4.0557%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8057%" y="533" width="0.0810%" height="15" fill="rgb(252,209,14)" fg:x="47" fg:w="1"/><text x="4.0557%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.8866%" y="517" width="0.0810%" height="15" fill="rgb(205,93,49)" fg:x="48" fg:w="1"/><text x="4.1366%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="3.8866%" y="501" width="0.0810%" height="15" fill="rgb(234,116,45)" fg:x="48" fg:w="1"/><text x="4.1366%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="3.9676%" y="517" width="0.0810%" height="15" fill="rgb(248,89,35)" fg:x="49" fg:w="1"/><text x="4.2176%" y="527.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.1296%" y="501" width="0.0810%" height="15" fill="rgb(233,167,45)" fg:x="51" fg:w="1"/><text x="4.3796%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.2915%" y="469" width="0.0810%" height="15" fill="rgb(248,228,14)" fg:x="53" fg:w="1"/><text x="4.5415%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="4.3725%" y="469" width="0.3239%" height="15" fill="rgb(246,91,14)" fg:x="54" fg:w="4"/><text x="4.6225%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="4.3725%" y="453" width="0.3239%" height="15" fill="rgb(227,142,5)" fg:x="54" fg:w="4"/><text x="4.6225%" y="463.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="4.3725%" y="437" width="0.3239%" height="15" fill="rgb(221,63,33)" fg:x="54" fg:w="4"/><text x="4.6225%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="4.3725%" y="421" width="0.3239%" height="15" fill="rgb(233,49,0)" fg:x="54" fg:w="4"/><text x="4.6225%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="4.4534%" y="405" width="0.2429%" height="15" fill="rgb(251,115,38)" fg:x="55" fg:w="3"/><text x="4.7034%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.5344%" y="389" width="0.1619%" height="15" fill="rgb(231,214,32)" fg:x="56" fg:w="2"/><text x="4.7844%" y="399.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="4.5344%" y="373" width="0.1619%" height="15" fill="rgb(248,73,46)" fg:x="56" fg:w="2"/><text x="4.7844%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="4.5344%" y="357" width="0.1619%" height="15" fill="rgb(237,156,4)" fg:x="56" fg:w="2"/><text x="4.7844%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="4.5344%" y="341" width="0.1619%" height="15" fill="rgb(227,132,2)" fg:x="56" fg:w="2"/><text x="4.7844%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="4.5344%" y="325" width="0.1619%" height="15" fill="rgb(248,161,9)" fg:x="56" fg:w="2"/><text x="4.7844%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="4.5344%" y="309" width="0.1619%" height="15" fill="rgb(238,77,38)" fg:x="56" fg:w="2"/><text x="4.7844%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="4.5344%" y="293" width="0.1619%" height="15" fill="rgb(222,166,40)" fg:x="56" fg:w="2"/><text x="4.7844%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.5344%" y="277" width="0.1619%" height="15" fill="rgb(214,168,45)" fg:x="56" fg:w="2"/><text x="4.7844%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="4.5344%" y="261" width="0.1619%" height="15" fill="rgb(226,64,37)" fg:x="56" fg:w="2"/><text x="4.7844%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.5344%" y="245" width="0.1619%" height="15" fill="rgb(232,210,43)" fg:x="56" fg:w="2"/><text x="4.7844%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="4.5344%" y="229" width="0.1619%" height="15" fill="rgb(214,76,33)" fg:x="56" fg:w="2"/><text x="4.7844%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="4.5344%" y="213" width="0.1619%" height="15" fill="rgb(210,78,5)" fg:x="56" fg:w="2"/><text x="4.7844%" y="223.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="4.5344%" y="197" width="0.1619%" height="15" fill="rgb(211,107,37)" fg:x="56" fg:w="2"/><text x="4.7844%" y="207.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.5344%" y="181" width="0.1619%" height="15" fill="rgb(249,67,16)" fg:x="56" fg:w="2"/><text x="4.7844%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.6964%" y="421" width="0.0810%" height="15" fill="rgb(222,114,31)" fg:x="58" fg:w="1"/><text x="4.9464%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (10 samples, 0.81%)</title><rect x="4.2915%" y="485" width="0.8097%" height="15" fill="rgb(242,118,19)" fg:x="53" fg:w="10"/><text x="4.5415%" y="495.50"></text></g><g><title>std::sys::unix::fs::stat (5 samples, 0.40%)</title><rect x="4.6964%" y="469" width="0.4049%" height="15" fill="rgb(223,115,1)" fg:x="58" fg:w="5"/><text x="4.9464%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (5 samples, 0.40%)</title><rect x="4.6964%" y="453" width="0.4049%" height="15" fill="rgb(241,182,54)" fg:x="58" fg:w="5"/><text x="4.9464%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (5 samples, 0.40%)</title><rect x="4.6964%" y="437" width="0.4049%" height="15" fill="rgb(244,166,36)" fg:x="58" fg:w="5"/><text x="4.9464%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (4 samples, 0.32%)</title><rect x="4.7773%" y="421" width="0.3239%" height="15" fill="rgb(241,52,43)" fg:x="59" fg:w="4"/><text x="5.0273%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx (4 samples, 0.32%)</title><rect x="4.7773%" y="405" width="0.3239%" height="15" fill="rgb(236,82,9)" fg:x="59" fg:w="4"/><text x="5.0273%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (4 samples, 0.32%)</title><rect x="4.7773%" y="389" width="0.3239%" height="15" fill="rgb(241,119,0)" fg:x="59" fg:w="4"/><text x="5.0273%" y="399.50"></text></g><g><title>statx (4 samples, 0.32%)</title><rect x="4.7773%" y="373" width="0.3239%" height="15" fill="rgb(221,19,22)" fg:x="59" fg:w="4"/><text x="5.0273%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.2632%" y="437" width="0.0810%" height="15" fill="rgb(254,144,35)" fg:x="65" fg:w="1"/><text x="5.5132%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.2632%" y="421" width="0.0810%" height="15" fill="rgb(246,132,30)" fg:x="65" fg:w="1"/><text x="5.5132%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.2632%" y="405" width="0.0810%" height="15" fill="rgb(234,69,28)" fg:x="65" fg:w="1"/><text x="5.5132%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.2632%" y="389" width="0.0810%" height="15" fill="rgb(219,106,47)" fg:x="65" fg:w="1"/><text x="5.5132%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.2632%" y="373" width="0.0810%" height="15" fill="rgb(218,79,24)" fg:x="65" fg:w="1"/><text x="5.5132%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.2632%" y="357" width="0.0810%" height="15" fill="rgb(225,26,21)" fg:x="65" fg:w="1"/><text x="5.5132%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.2632%" y="341" width="0.0810%" height="15" fill="rgb(217,68,49)" fg:x="65" fg:w="1"/><text x="5.5132%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.2632%" y="325" width="0.0810%" height="15" fill="rgb(220,204,28)" fg:x="65" fg:w="1"/><text x="5.5132%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.2632%" y="309" width="0.0810%" height="15" fill="rgb(237,208,43)" fg:x="65" fg:w="1"/><text x="5.5132%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.2632%" y="293" width="0.0810%" height="15" fill="rgb(213,97,42)" fg:x="65" fg:w="1"/><text x="5.5132%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.2632%" y="277" width="0.0810%" height="15" fill="rgb(238,96,52)" fg:x="65" fg:w="1"/><text x="5.5132%" y="287.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (9 samples, 0.73%)</title><rect x="5.1012%" y="469" width="0.7287%" height="15" fill="rgb(228,14,13)" fg:x="63" fg:w="9"/><text x="5.3512%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.73%)</title><rect x="5.1012%" y="453" width="0.7287%" height="15" fill="rgb(219,123,13)" fg:x="63" fg:w="9"/><text x="5.3512%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.49%)</title><rect x="5.3441%" y="437" width="0.4858%" height="15" fill="rgb(216,144,17)" fg:x="66" fg:w="6"/><text x="5.5941%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="5.5870%" y="421" width="0.2429%" height="15" fill="rgb(230,228,29)" fg:x="69" fg:w="3"/><text x="5.8370%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.7490%" y="405" width="0.0810%" height="15" fill="rgb(233,18,5)" fg:x="71" fg:w="1"/><text x="5.9990%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.7490%" y="389" width="0.0810%" height="15" fill="rgb(233,197,12)" fg:x="71" fg:w="1"/><text x="5.9990%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.7490%" y="373" width="0.0810%" height="15" fill="rgb(234,140,29)" fg:x="71" fg:w="1"/><text x="5.9990%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.7490%" y="357" width="0.0810%" height="15" fill="rgb(233,113,19)" fg:x="71" fg:w="1"/><text x="5.9990%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.7490%" y="341" width="0.0810%" height="15" fill="rgb(246,209,13)" fg:x="71" fg:w="1"/><text x="5.9990%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.7490%" y="325" width="0.0810%" height="15" fill="rgb(242,79,54)" fg:x="71" fg:w="1"/><text x="5.9990%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.7490%" y="309" width="0.0810%" height="15" fill="rgb(219,73,16)" fg:x="71" fg:w="1"/><text x="5.9990%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.7490%" y="293" width="0.0810%" height="15" fill="rgb(224,52,10)" fg:x="71" fg:w="1"/><text x="5.9990%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.7490%" y="277" width="0.0810%" height="15" fill="rgb(237,179,5)" fg:x="71" fg:w="1"/><text x="5.9990%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.7490%" y="261" width="0.0810%" height="15" fill="rgb(231,20,6)" fg:x="71" fg:w="1"/><text x="5.9990%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.7490%" y="245" width="0.0810%" height="15" fill="rgb(253,171,45)" fg:x="71" fg:w="1"/><text x="5.9990%" y="255.50"></text></g><g><title>glob::is_dir (8 samples, 0.65%)</title><rect x="5.9109%" y="421" width="0.6478%" height="15" fill="rgb(230,75,49)" fg:x="73" fg:w="8"/><text x="6.1609%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat (8 samples, 0.65%)</title><rect x="5.9109%" y="405" width="0.6478%" height="15" fill="rgb(216,83,46)" fg:x="73" fg:w="8"/><text x="6.1609%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (8 samples, 0.65%)</title><rect x="5.9109%" y="389" width="0.6478%" height="15" fill="rgb(236,56,9)" fg:x="73" fg:w="8"/><text x="6.1609%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (8 samples, 0.65%)</title><rect x="5.9109%" y="373" width="0.6478%" height="15" fill="rgb(215,28,34)" fg:x="73" fg:w="8"/><text x="6.1609%" y="383.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (7 samples, 0.57%)</title><rect x="5.9919%" y="357" width="0.5668%" height="15" fill="rgb(230,222,20)" fg:x="74" fg:w="7"/><text x="6.2419%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx (7 samples, 0.57%)</title><rect x="5.9919%" y="341" width="0.5668%" height="15" fill="rgb(235,209,51)" fg:x="74" fg:w="7"/><text x="6.2419%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (7 samples, 0.57%)</title><rect x="5.9919%" y="325" width="0.5668%" height="15" fill="rgb(235,167,1)" fg:x="74" fg:w="7"/><text x="6.2419%" y="335.50"></text></g><g><title>statx (7 samples, 0.57%)</title><rect x="5.9919%" y="309" width="0.5668%" height="15" fill="rgb(248,220,0)" fg:x="74" fg:w="7"/><text x="6.2419%" y="319.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.13%)</title><rect x="5.8300%" y="453" width="1.1336%" height="15" fill="rgb(239,0,18)" fg:x="72" fg:w="14"/><text x="6.0800%" y="463.50"></text></g><g><title>glob::fill_todo (14 samples, 1.13%)</title><rect x="5.8300%" y="437" width="1.1336%" height="15" fill="rgb(229,179,11)" fg:x="72" fg:w="14"/><text x="6.0800%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (5 samples, 0.40%)</title><rect x="6.5587%" y="421" width="0.4049%" height="15" fill="rgb(226,116,53)" fg:x="81" fg:w="5"/><text x="6.8087%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (5 samples, 0.40%)</title><rect x="6.5587%" y="405" width="0.4049%" height="15" fill="rgb(218,1,49)" fg:x="81" fg:w="5"/><text x="6.8087%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (5 samples, 0.40%)</title><rect x="6.5587%" y="389" width="0.4049%" height="15" fill="rgb(208,184,47)" fg:x="81" fg:w="5"/><text x="6.8087%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (5 samples, 0.40%)</title><rect x="6.5587%" y="373" width="0.4049%" height="15" fill="rgb(238,174,3)" fg:x="81" fg:w="5"/><text x="6.8087%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 0.40%)</title><rect x="6.5587%" y="357" width="0.4049%" height="15" fill="rgb(247,188,6)" fg:x="81" fg:w="5"/><text x="6.8087%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.40%)</title><rect x="6.5587%" y="341" width="0.4049%" height="15" fill="rgb(211,165,46)" fg:x="81" fg:w="5"/><text x="6.8087%" y="351.50"></text></g><g><title>statx (5 samples, 0.40%)</title><rect x="6.5587%" y="325" width="0.4049%" height="15" fill="rgb(222,190,10)" fg:x="81" fg:w="5"/><text x="6.8087%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;glob::Paths&gt; (1 samples, 0.08%)</title><rect x="6.9636%" y="453" width="0.0810%" height="15" fill="rgb(206,185,3)" fg:x="86" fg:w="1"/><text x="7.2136%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="6.9636%" y="437" width="0.0810%" height="15" fill="rgb(244,125,37)" fg:x="86" fg:w="1"/><text x="7.2136%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.9636%" y="421" width="0.0810%" height="15" fill="rgb(211,43,7)" fg:x="86" fg:w="1"/><text x="7.2136%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.1255%" y="421" width="0.0810%" height="15" fill="rgb(250,41,42)" fg:x="88" fg:w="1"/><text x="7.3755%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.2874%" y="405" width="0.1619%" height="15" fill="rgb(254,54,42)" fg:x="90" fg:w="2"/><text x="7.5374%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (30 samples, 2.43%)</title><rect x="5.1012%" y="485" width="2.4291%" height="15" fill="rgb(213,71,43)" fg:x="63" fg:w="30"/><text x="5.3512%" y="495.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_directory_sources (21 samples, 1.70%)</title><rect x="5.8300%" y="469" width="1.7004%" height="15" fill="rgb(249,3,44)" fg:x="72" fg:w="21"/><text x="6.0800%" y="479.50"></text></g><g><title>glob::glob (6 samples, 0.49%)</title><rect x="7.0445%" y="453" width="0.4858%" height="15" fill="rgb(229,80,41)" fg:x="87" fg:w="6"/><text x="7.2945%" y="463.50"></text></g><g><title>glob::glob_with (6 samples, 0.49%)</title><rect x="7.0445%" y="437" width="0.4858%" height="15" fill="rgb(231,25,28)" fg:x="87" fg:w="6"/><text x="7.2945%" y="447.50"></text></g><g><title>glob::Pattern::new (4 samples, 0.32%)</title><rect x="7.2065%" y="421" width="0.3239%" height="15" fill="rgb(208,79,48)" fg:x="89" fg:w="4"/><text x="7.4565%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.4494%" y="405" width="0.0810%" height="15" fill="rgb(207,196,38)" fg:x="92" fg:w="1"/><text x="7.6994%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.4494%" y="389" width="0.0810%" height="15" fill="rgb(228,105,49)" fg:x="92" fg:w="1"/><text x="7.6994%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.4494%" y="373" width="0.0810%" height="15" fill="rgb(237,99,15)" fg:x="92" fg:w="1"/><text x="7.6994%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.6923%" y="421" width="0.0810%" height="15" fill="rgb(224,207,46)" fg:x="95" fg:w="1"/><text x="7.9423%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.7733%" y="421" width="0.0810%" height="15" fill="rgb(249,117,50)" fg:x="96" fg:w="1"/><text x="8.0233%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.7733%" y="405" width="0.0810%" height="15" fill="rgb(248,17,13)" fg:x="96" fg:w="1"/><text x="8.0233%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.7733%" y="389" width="0.0810%" height="15" fill="rgb(228,187,36)" fg:x="96" fg:w="1"/><text x="8.0233%" y="399.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="7.8543%" y="421" width="0.1619%" height="15" fill="rgb(234,132,20)" fg:x="97" fg:w="2"/><text x="8.1043%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.9352%" y="405" width="0.0810%" height="15" fill="rgb(209,170,46)" fg:x="98" fg:w="1"/><text x="8.1852%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.9352%" y="389" width="0.0810%" height="15" fill="rgb(237,23,19)" fg:x="98" fg:w="1"/><text x="8.1852%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="7.9352%" y="373" width="0.0810%" height="15" fill="rgb(227,21,26)" fg:x="98" fg:w="1"/><text x="8.1852%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="7.9352%" y="357" width="0.0810%" height="15" fill="rgb(222,220,48)" fg:x="98" fg:w="1"/><text x="8.1852%" y="367.50"></text></g><g><title>kernel::plugins::ActionSchema::new (2 samples, 0.16%)</title><rect x="8.0162%" y="421" width="0.1619%" height="15" fill="rgb(214,9,16)" fg:x="99" fg:w="2"/><text x="8.2662%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.0972%" y="405" width="0.0810%" height="15" fill="rgb(209,73,30)" fg:x="100" fg:w="1"/><text x="8.3472%" y="415.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (10 samples, 0.81%)</title><rect x="7.6923%" y="453" width="0.8097%" height="15" fill="rgb(207,20,33)" fg:x="95" fg:w="10"/><text x="7.9423%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (10 samples, 0.81%)</title><rect x="7.6923%" y="437" width="0.8097%" height="15" fill="rgb(219,153,12)" fg:x="95" fg:w="10"/><text x="7.9423%" y="447.50"></text></g><g><title>replies::identifier_to_key (4 samples, 0.32%)</title><rect x="8.1781%" y="421" width="0.3239%" height="15" fill="rgb(235,97,25)" fg:x="101" fg:w="4"/><text x="8.4281%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="8.2591%" y="405" width="0.2429%" height="15" fill="rgb(244,30,34)" fg:x="102" fg:w="3"/><text x="8.5091%" y="415.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="8.4211%" y="389" width="0.0810%" height="15" fill="rgb(214,106,45)" fg:x="104" fg:w="1"/><text x="8.6711%" y="399.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="8.4211%" y="373" width="0.0810%" height="15" fill="rgb(226,41,9)" fg:x="104" fg:w="1"/><text x="8.6711%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="8.5020%" y="421" width="0.1619%" height="15" fill="rgb(253,139,29)" fg:x="105" fg:w="2"/><text x="8.7520%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="8.5020%" y="405" width="0.1619%" height="15" fill="rgb(213,205,39)" fg:x="105" fg:w="2"/><text x="8.7520%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="8.5830%" y="389" width="0.0810%" height="15" fill="rgb(209,27,10)" fg:x="106" fg:w="1"/><text x="8.8330%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="8.5830%" y="373" width="0.0810%" height="15" fill="rgb(249,142,16)" fg:x="106" fg:w="1"/><text x="8.8330%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="8.5020%" y="453" width="0.2429%" height="15" fill="rgb(242,65,12)" fg:x="105" fg:w="3"/><text x="8.7520%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.24%)</title><rect x="8.5020%" y="437" width="0.2429%" height="15" fill="rgb(232,48,10)" fg:x="105" fg:w="3"/><text x="8.7520%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.6640%" y="421" width="0.0810%" height="15" fill="rgb(253,67,19)" fg:x="107" fg:w="1"/><text x="8.9140%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.6640%" y="405" width="0.0810%" height="15" fill="rgb(227,93,29)" fg:x="107" fg:w="1"/><text x="8.9140%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.6640%" y="389" width="0.0810%" height="15" fill="rgb(226,189,53)" fg:x="107" fg:w="1"/><text x="8.9140%" y="399.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="8.7449%" y="437" width="0.1619%" height="15" fill="rgb(223,224,1)" fg:x="108" fg:w="2"/><text x="8.9949%" y="447.50"></text></g><g><title>&lt;plugins_core::chat::actions::SpeakAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="8.7449%" y="421" width="0.1619%" height="15" fill="rgb(221,84,32)" fg:x="108" fg:w="2"/><text x="8.9949%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="8.8259%" y="405" width="0.0810%" height="15" fill="rgb(214,189,28)" fg:x="109" fg:w="1"/><text x="9.0759%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8259%" y="389" width="0.0810%" height="15" fill="rgb(234,7,52)" fg:x="109" fg:w="1"/><text x="9.0759%" y="399.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.24%)</title><rect x="8.7449%" y="453" width="0.2429%" height="15" fill="rgb(249,73,31)" fg:x="108" fg:w="3"/><text x="8.9949%" y="463.50"></text></g><g><title>kernel::plugins::Schema::empty (1 samples, 0.08%)</title><rect x="8.9069%" y="437" width="0.0810%" height="15" fill="rgb(253,153,41)" fg:x="110" fg:w="1"/><text x="9.1569%" y="447.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="8.9879%" y="453" width="0.0810%" height="15" fill="rgb(249,52,34)" fg:x="111" fg:w="1"/><text x="9.2379%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="8.9879%" y="437" width="0.0810%" height="15" fill="rgb(236,177,47)" fg:x="111" fg:w="1"/><text x="9.2379%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="8.9879%" y="421" width="0.0810%" height="15" fill="rgb(252,185,45)" fg:x="111" fg:w="1"/><text x="9.2379%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9879%" y="405" width="0.0810%" height="15" fill="rgb(251,15,30)" fg:x="111" fg:w="1"/><text x="9.2379%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.0688%" y="421" width="0.0810%" height="15" fill="rgb(233,31,4)" fg:x="112" fg:w="1"/><text x="9.3188%" y="431.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="9.0688%" y="453" width="0.1619%" height="15" fill="rgb(254,44,24)" fg:x="112" fg:w="2"/><text x="9.3188%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="9.0688%" y="437" width="0.1619%" height="15" fill="rgb(218,54,1)" fg:x="112" fg:w="2"/><text x="9.3188%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="9.1498%" y="421" width="0.0810%" height="15" fill="rgb(243,209,39)" fg:x="113" fg:w="1"/><text x="9.3998%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.1498%" y="405" width="0.0810%" height="15" fill="rgb(206,75,33)" fg:x="113" fg:w="1"/><text x="9.3998%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.1498%" y="389" width="0.0810%" height="15" fill="rgb(223,108,18)" fg:x="113" fg:w="1"/><text x="9.3998%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.1498%" y="373" width="0.0810%" height="15" fill="rgb(244,89,31)" fg:x="113" fg:w="1"/><text x="9.3998%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.1498%" y="357" width="0.0810%" height="15" fill="rgb(222,167,27)" fg:x="113" fg:w="1"/><text x="9.3998%" y="367.50"></text></g><g><title>&lt;plugins_core::moving::actions::DeactivateRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="9.3117%" y="421" width="0.0810%" height="15" fill="rgb(247,41,16)" fg:x="115" fg:w="1"/><text x="9.5617%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.3117%" y="405" width="0.0810%" height="15" fill="rgb(233,168,40)" fg:x="115" fg:w="1"/><text x="9.5617%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="9.3927%" y="421" width="0.0810%" height="15" fill="rgb(205,211,8)" fg:x="116" fg:w="1"/><text x="9.6427%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.3927%" y="405" width="0.0810%" height="15" fill="rgb(238,105,11)" fg:x="116" fg:w="1"/><text x="9.6427%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.3927%" y="389" width="0.0810%" height="15" fill="rgb(223,142,52)" fg:x="116" fg:w="1"/><text x="9.6427%" y="399.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="9.4737%" y="421" width="0.0810%" height="15" fill="rgb(238,51,33)" fg:x="117" fg:w="1"/><text x="9.7237%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="9.5547%" y="421" width="0.0810%" height="15" fill="rgb(231,188,43)" fg:x="118" fg:w="1"/><text x="9.8047%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5547%" y="405" width="0.0810%" height="15" fill="rgb(216,92,17)" fg:x="118" fg:w="1"/><text x="9.8047%" y="415.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (6 samples, 0.49%)</title><rect x="9.2308%" y="453" width="0.4858%" height="15" fill="rgb(228,2,40)" fg:x="114" fg:w="6"/><text x="9.4808%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (6 samples, 0.49%)</title><rect x="9.2308%" y="437" width="0.4858%" height="15" fill="rgb(226,73,15)" fg:x="114" fg:w="6"/><text x="9.4808%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="9.6356%" y="421" width="0.0810%" height="15" fill="rgb(227,66,46)" fg:x="119" fg:w="1"/><text x="9.8856%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (28 samples, 2.27%)</title><rect x="7.5304%" y="485" width="2.2672%" height="15" fill="rgb(209,71,6)" fg:x="93" fg:w="28"/><text x="7.7804%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 2.27%)</title><rect x="7.5304%" y="469" width="2.2672%" height="15" fill="rgb(246,100,25)" fg:x="93" fg:w="28"/><text x="7.7804%" y="479.50">&lt;..</text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="9.7166%" y="453" width="0.0810%" height="15" fill="rgb(248,185,27)" fg:x="120" fg:w="1"/><text x="9.9666%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="9.7166%" y="437" width="0.0810%" height="15" fill="rgb(225,118,47)" fg:x="120" fg:w="1"/><text x="9.9666%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="9.7166%" y="421" width="0.0810%" height="15" fill="rgb(220,185,44)" fg:x="120" fg:w="1"/><text x="9.9666%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7976%" y="485" width="0.0810%" height="15" fill="rgb(227,95,24)" fg:x="121" fg:w="1"/><text x="10.0476%" y="495.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="9.9595%" y="469" width="0.4049%" height="15" fill="rgb(252,84,24)" fg:x="123" fg:w="5"/><text x="10.2095%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (9 samples, 0.73%)</title><rect x="9.8785%" y="485" width="0.7287%" height="15" fill="rgb(240,34,44)" fg:x="122" fg:w="9"/><text x="10.1285%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.24%)</title><rect x="10.3644%" y="469" width="0.2429%" height="15" fill="rgb(209,72,54)" fg:x="128" fg:w="3"/><text x="10.6144%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="10.3644%" y="453" width="0.2429%" height="15" fill="rgb(226,19,45)" fg:x="128" fg:w="3"/><text x="10.6144%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (83 samples, 6.72%)</title><rect x="4.2105%" y="501" width="6.7206%" height="15" fill="rgb(246,7,45)" fg:x="52" fg:w="83"/><text x="4.4605%" y="511.50">kernel::p..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.32%)</title><rect x="10.6073%" y="485" width="0.3239%" height="15" fill="rgb(225,45,2)" fg:x="131" fg:w="4"/><text x="10.8573%" y="495.50"></text></g><g><title>clock_gettime (4 samples, 0.32%)</title><rect x="10.6073%" y="469" width="0.3239%" height="15" fill="rgb(221,80,29)" fg:x="131" fg:w="4"/><text x="10.8573%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="10.9312%" y="469" width="0.1619%" height="15" fill="rgb(228,11,19)" fg:x="135" fg:w="2"/><text x="11.1812%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0121%" y="453" width="0.0810%" height="15" fill="rgb(243,17,21)" fg:x="136" fg:w="1"/><text x="11.2621%" y="463.50"></text></g><g><title>engine::session::Session::initialize (88 samples, 7.13%)</title><rect x="4.0486%" y="517" width="7.1255%" height="15" fill="rgb(243,88,8)" fg:x="50" fg:w="88"/><text x="4.2986%" y="527.50">engine::se..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="10.9312%" y="501" width="0.2429%" height="15" fill="rgb(214,17,9)" fg:x="135" fg:w="3"/><text x="11.1812%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="10.9312%" y="485" width="0.2429%" height="15" fill="rgb(232,169,15)" fg:x="135" fg:w="3"/><text x="11.1812%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="11.0931%" y="469" width="0.0810%" height="15" fill="rgb(232,86,53)" fg:x="137" fg:w="1"/><text x="11.3431%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0931%" y="453" width="0.0810%" height="15" fill="rgb(222,100,4)" fg:x="137" fg:w="1"/><text x="11.3431%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (94 samples, 7.61%)</title><rect x="3.8866%" y="565" width="7.6113%" height="15" fill="rgb(253,151,38)" fg:x="48" fg:w="94"/><text x="4.1366%" y="575.50">&lt;engine::d..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (94 samples, 7.61%)</title><rect x="3.8866%" y="549" width="7.6113%" height="15" fill="rgb(238,215,29)" fg:x="48" fg:w="94"/><text x="4.1366%" y="559.50">engine::do..</text></g><g><title>engine::session::Session::new (94 samples, 7.61%)</title><rect x="3.8866%" y="533" width="7.6113%" height="15" fill="rgb(205,128,53)" fg:x="48" fg:w="94"/><text x="4.1366%" y="543.50">engine::se..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (4 samples, 0.32%)</title><rect x="11.1741%" y="517" width="0.3239%" height="15" fill="rgb(248,183,14)" fg:x="138" fg:w="4"/><text x="11.4241%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="11.2551%" y="501" width="0.2429%" height="15" fill="rgb(244,172,35)" fg:x="139" fg:w="3"/><text x="11.5051%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="11.3360%" y="485" width="0.1619%" height="15" fill="rgb(234,93,19)" fg:x="140" fg:w="2"/><text x="11.5860%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="11.3360%" y="469" width="0.1619%" height="15" fill="rgb(227,109,7)" fg:x="140" fg:w="2"/><text x="11.5860%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="11.3360%" y="453" width="0.1619%" height="15" fill="rgb(233,136,54)" fg:x="140" fg:w="2"/><text x="11.5860%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="11.6599%" y="549" width="0.0810%" height="15" fill="rgb(233,19,40)" fg:x="144" fg:w="1"/><text x="11.9099%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="11.6599%" y="533" width="0.0810%" height="15" fill="rgb(247,41,18)" fg:x="144" fg:w="1"/><text x="11.9099%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.6599%" y="517" width="0.0810%" height="15" fill="rgb(220,34,34)" fg:x="144" fg:w="1"/><text x="11.9099%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.6599%" y="501" width="0.0810%" height="15" fill="rgb(222,135,32)" fg:x="144" fg:w="1"/><text x="11.9099%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.6599%" y="485" width="0.0810%" height="15" fill="rgb(214,80,19)" fg:x="144" fg:w="1"/><text x="11.9099%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (2 samples, 0.16%)</title><rect x="11.7409%" y="549" width="0.1619%" height="15" fill="rgb(234,54,46)" fg:x="145" fg:w="2"/><text x="11.9909%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="11.9028%" y="549" width="0.0810%" height="15" fill="rgb(251,48,23)" fg:x="147" fg:w="1"/><text x="12.1528%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.0648%" y="501" width="0.0810%" height="15" fill="rgb(254,109,52)" fg:x="149" fg:w="1"/><text x="12.3148%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2267%" y="373" width="0.0810%" height="15" fill="rgb(240,186,19)" fg:x="151" fg:w="1"/><text x="12.4767%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="12.2267%" y="389" width="0.2429%" height="15" fill="rgb(246,187,17)" fg:x="151" fg:w="3"/><text x="12.4767%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="12.3077%" y="373" width="0.1619%" height="15" fill="rgb(212,21,5)" fg:x="152" fg:w="2"/><text x="12.5577%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3887%" y="357" width="0.0810%" height="15" fill="rgb(225,185,18)" fg:x="153" fg:w="1"/><text x="12.6387%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="12.2267%" y="421" width="0.4049%" height="15" fill="rgb(245,114,17)" fg:x="151" fg:w="5"/><text x="12.4767%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="12.2267%" y="405" width="0.4049%" height="15" fill="rgb(223,164,24)" fg:x="151" fg:w="5"/><text x="12.4767%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="12.4696%" y="389" width="0.1619%" height="15" fill="rgb(211,228,3)" fg:x="154" fg:w="2"/><text x="12.7196%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.6316%" y="421" width="0.0810%" height="15" fill="rgb(223,16,38)" fg:x="156" fg:w="1"/><text x="12.8816%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="12.2267%" y="453" width="0.5668%" height="15" fill="rgb(207,31,54)" fg:x="151" fg:w="7"/><text x="12.4767%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="12.2267%" y="437" width="0.5668%" height="15" fill="rgb(220,39,11)" fg:x="151" fg:w="7"/><text x="12.4767%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.7126%" y="421" width="0.0810%" height="15" fill="rgb(235,185,0)" fg:x="157" fg:w="1"/><text x="12.9626%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.7126%" y="405" width="0.0810%" height="15" fill="rgb(249,39,18)" fg:x="157" fg:w="1"/><text x="12.9626%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="12.8745%" y="421" width="0.3239%" height="15" fill="rgb(240,110,33)" fg:x="159" fg:w="4"/><text x="13.1245%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.0364%" y="405" width="0.1619%" height="15" fill="rgb(210,92,42)" fg:x="161" fg:w="2"/><text x="13.2864%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.0364%" y="389" width="0.1619%" height="15" fill="rgb(218,215,28)" fg:x="161" fg:w="2"/><text x="13.2864%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.1174%" y="373" width="0.0810%" height="15" fill="rgb(238,215,36)" fg:x="162" fg:w="1"/><text x="13.3674%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="12.8745%" y="437" width="0.4049%" height="15" fill="rgb(220,31,10)" fg:x="159" fg:w="5"/><text x="13.1245%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.1984%" y="421" width="0.0810%" height="15" fill="rgb(212,93,14)" fg:x="163" fg:w="1"/><text x="13.4484%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="13.3603%" y="421" width="0.4858%" height="15" fill="rgb(254,207,2)" fg:x="165" fg:w="6"/><text x="13.6103%" y="431.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="13.3603%" y="405" width="0.4858%" height="15" fill="rgb(205,57,44)" fg:x="165" fg:w="6"/><text x="13.6103%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="13.5223%" y="389" width="0.3239%" height="15" fill="rgb(226,151,19)" fg:x="167" fg:w="4"/><text x="13.7723%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.6842%" y="373" width="0.1619%" height="15" fill="rgb(230,72,30)" fg:x="169" fg:w="2"/><text x="13.9342%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.6842%" y="357" width="0.1619%" height="15" fill="rgb(244,0,8)" fg:x="169" fg:w="2"/><text x="13.9342%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.7652%" y="341" width="0.0810%" height="15" fill="rgb(230,192,6)" fg:x="170" fg:w="1"/><text x="14.0152%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.7652%" y="325" width="0.0810%" height="15" fill="rgb(233,207,13)" fg:x="170" fg:w="1"/><text x="14.0152%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.9271%" y="373" width="0.0810%" height="15" fill="rgb(206,227,7)" fg:x="172" fg:w="1"/><text x="14.1771%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.9271%" y="357" width="0.0810%" height="15" fill="rgb(213,217,25)" fg:x="172" fg:w="1"/><text x="14.1771%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.9271%" y="341" width="0.0810%" height="15" fill="rgb(249,75,4)" fg:x="172" fg:w="1"/><text x="14.1771%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.0081%" y="357" width="0.0810%" height="15" fill="rgb(225,114,18)" fg:x="173" fg:w="1"/><text x="14.2581%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.0081%" y="341" width="0.0810%" height="15" fill="rgb(211,162,40)" fg:x="173" fg:w="1"/><text x="14.2581%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.0081%" y="325" width="0.0810%" height="15" fill="rgb(206,49,29)" fg:x="173" fg:w="1"/><text x="14.2581%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.0081%" y="309" width="0.0810%" height="15" fill="rgb(244,8,6)" fg:x="173" fg:w="1"/><text x="14.2581%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="13.9271%" y="389" width="0.2429%" height="15" fill="rgb(231,194,28)" fg:x="172" fg:w="3"/><text x="14.1771%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="14.0081%" y="373" width="0.1619%" height="15" fill="rgb(210,69,5)" fg:x="173" fg:w="2"/><text x="14.2581%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="14.0891%" y="357" width="0.0810%" height="15" fill="rgb(216,186,12)" fg:x="174" fg:w="1"/><text x="14.3391%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="14.0891%" y="341" width="0.0810%" height="15" fill="rgb(238,61,15)" fg:x="174" fg:w="1"/><text x="14.3391%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.0891%" y="325" width="0.0810%" height="15" fill="rgb(226,104,1)" fg:x="174" fg:w="1"/><text x="14.3391%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.0891%" y="309" width="0.0810%" height="15" fill="rgb(229,128,15)" fg:x="174" fg:w="1"/><text x="14.3391%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="13.9271%" y="405" width="0.3239%" height="15" fill="rgb(247,110,15)" fg:x="172" fg:w="4"/><text x="14.1771%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.1700%" y="389" width="0.0810%" height="15" fill="rgb(210,74,48)" fg:x="175" fg:w="1"/><text x="14.4200%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.1700%" y="373" width="0.0810%" height="15" fill="rgb(246,121,10)" fg:x="175" fg:w="1"/><text x="14.4200%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.1700%" y="357" width="0.0810%" height="15" fill="rgb(214,156,37)" fg:x="175" fg:w="1"/><text x="14.4200%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="14.2510%" y="405" width="0.4049%" height="15" fill="rgb(214,210,34)" fg:x="176" fg:w="5"/><text x="14.5010%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.4939%" y="389" width="0.1619%" height="15" fill="rgb(237,93,35)" fg:x="179" fg:w="2"/><text x="14.7439%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.5749%" y="373" width="0.0810%" height="15" fill="rgb(206,36,8)" fg:x="180" fg:w="1"/><text x="14.8249%" y="383.50"></text></g><g><title>ryu::pretty::format64 (2 samples, 0.16%)</title><rect x="14.8988%" y="389" width="0.1619%" height="15" fill="rgb(208,151,12)" fg:x="184" fg:w="2"/><text x="15.1488%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="15.0607%" y="389" width="0.3239%" height="15" fill="rgb(225,133,52)" fg:x="186" fg:w="4"/><text x="15.3107%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.2227%" y="373" width="0.1619%" height="15" fill="rgb(231,71,53)" fg:x="188" fg:w="2"/><text x="15.4727%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.3036%" y="357" width="0.0810%" height="15" fill="rgb(243,76,21)" fg:x="189" fg:w="1"/><text x="15.5536%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3036%" y="341" width="0.0810%" height="15" fill="rgb(252,144,3)" fg:x="189" fg:w="1"/><text x="15.5536%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.3036%" y="325" width="0.0810%" height="15" fill="rgb(231,199,10)" fg:x="189" fg:w="1"/><text x="15.5536%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.3036%" y="309" width="0.0810%" height="15" fill="rgb(215,18,11)" fg:x="189" fg:w="1"/><text x="15.5536%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.3036%" y="293" width="0.0810%" height="15" fill="rgb(241,65,24)" fg:x="189" fg:w="1"/><text x="15.5536%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.3846%" y="373" width="0.0810%" height="15" fill="rgb(251,192,38)" fg:x="190" fg:w="1"/><text x="15.6346%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="15.4656%" y="373" width="0.4049%" height="15" fill="rgb(205,9,35)" fg:x="191" fg:w="5"/><text x="15.7156%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.5466%" y="357" width="0.3239%" height="15" fill="rgb(229,225,49)" fg:x="192" fg:w="4"/><text x="15.7966%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.7895%" y="341" width="0.0810%" height="15" fill="rgb(207,125,39)" fg:x="195" fg:w="1"/><text x="16.0395%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.7895%" y="325" width="0.0810%" height="15" fill="rgb(222,78,19)" fg:x="195" fg:w="1"/><text x="16.0395%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.9514%" y="357" width="0.0810%" height="15" fill="rgb(248,207,20)" fg:x="197" fg:w="1"/><text x="16.2014%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.9514%" y="341" width="0.0810%" height="15" fill="rgb(205,103,49)" fg:x="197" fg:w="1"/><text x="16.2014%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.9514%" y="325" width="0.0810%" height="15" fill="rgb(216,42,28)" fg:x="197" fg:w="1"/><text x="16.2014%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.9514%" y="309" width="0.0810%" height="15" fill="rgb(213,205,53)" fg:x="197" fg:w="1"/><text x="16.2014%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="15.8704%" y="373" width="0.3239%" height="15" fill="rgb(239,140,53)" fg:x="196" fg:w="4"/><text x="16.1204%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.0324%" y="357" width="0.1619%" height="15" fill="rgb(248,95,9)" fg:x="198" fg:w="2"/><text x="16.2824%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="15.3846%" y="389" width="0.8907%" height="15" fill="rgb(254,58,47)" fg:x="190" fg:w="11"/><text x="15.6346%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.1943%" y="373" width="0.0810%" height="15" fill="rgb(234,227,14)" fg:x="200" fg:w="1"/><text x="16.4443%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.1943%" y="357" width="0.0810%" height="15" fill="rgb(205,192,45)" fg:x="200" fg:w="1"/><text x="16.4443%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.1943%" y="341" width="0.0810%" height="15" fill="rgb(253,187,31)" fg:x="200" fg:w="1"/><text x="16.4443%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.70%)</title><rect x="14.6559%" y="405" width="1.7004%" height="15" fill="rgb(222,6,32)" fg:x="181" fg:w="21"/><text x="14.9059%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.2753%" y="389" width="0.0810%" height="15" fill="rgb(249,190,19)" fg:x="201" fg:w="1"/><text x="16.5253%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (34 samples, 2.75%)</title><rect x="13.8462%" y="421" width="2.7530%" height="15" fill="rgb(251,28,20)" fg:x="171" fg:w="34"/><text x="14.0962%" y="431.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.3563%" y="405" width="0.2429%" height="15" fill="rgb(210,223,40)" fg:x="202" fg:w="3"/><text x="16.6063%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.4372%" y="389" width="0.1619%" height="15" fill="rgb(216,137,22)" fg:x="203" fg:w="2"/><text x="16.6872%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.4372%" y="373" width="0.1619%" height="15" fill="rgb(247,39,34)" fg:x="203" fg:w="2"/><text x="16.6872%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (49 samples, 3.97%)</title><rect x="12.7935%" y="453" width="3.9676%" height="15" fill="rgb(239,43,50)" fg:x="158" fg:w="49"/><text x="13.0435%" y="463.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (43 samples, 3.48%)</title><rect x="13.2794%" y="437" width="3.4818%" height="15" fill="rgb(241,212,9)" fg:x="164" fg:w="43"/><text x="13.5294%" y="447.50">ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.5992%" y="421" width="0.1619%" height="15" fill="rgb(205,8,2)" fg:x="205" fg:w="2"/><text x="16.8492%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.6802%" y="405" width="0.0810%" height="15" fill="rgb(217,173,54)" fg:x="206" fg:w="1"/><text x="16.9302%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.6802%" y="389" width="0.0810%" height="15" fill="rgb(208,149,52)" fg:x="206" fg:w="1"/><text x="16.9302%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.6802%" y="373" width="0.0810%" height="15" fill="rgb(239,99,40)" fg:x="206" fg:w="1"/><text x="16.9302%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.6802%" y="357" width="0.0810%" height="15" fill="rgb(233,214,26)" fg:x="206" fg:w="1"/><text x="16.9302%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.6802%" y="341" width="0.0810%" height="15" fill="rgb(231,225,37)" fg:x="206" fg:w="1"/><text x="16.9302%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (2 samples, 0.16%)</title><rect x="16.7611%" y="453" width="0.1619%" height="15" fill="rgb(252,55,35)" fg:x="207" fg:w="2"/><text x="17.0111%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="16.7611%" y="437" width="0.1619%" height="15" fill="rgb(239,43,18)" fg:x="207" fg:w="2"/><text x="17.0111%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.0850%" y="421" width="0.0810%" height="15" fill="rgb(251,125,49)" fg:x="211" fg:w="1"/><text x="17.3350%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.1660%" y="421" width="0.0810%" height="15" fill="rgb(212,83,54)" fg:x="212" fg:w="1"/><text x="17.4160%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2470%" y="421" width="0.0810%" height="15" fill="rgb(250,75,6)" fg:x="213" fg:w="1"/><text x="17.4970%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="17.3279%" y="389" width="0.0810%" height="15" fill="rgb(252,36,40)" fg:x="214" fg:w="1"/><text x="17.5779%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="17.3279%" y="373" width="0.0810%" height="15" fill="rgb(230,91,51)" fg:x="214" fg:w="1"/><text x="17.5779%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="17.3279%" y="357" width="0.0810%" height="15" fill="rgb(212,92,28)" fg:x="214" fg:w="1"/><text x="17.5779%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (7 samples, 0.57%)</title><rect x="16.9231%" y="437" width="0.5668%" height="15" fill="rgb(227,13,22)" fg:x="209" fg:w="7"/><text x="17.1731%" y="447.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="17.3279%" y="421" width="0.1619%" height="15" fill="rgb(239,204,32)" fg:x="214" fg:w="2"/><text x="17.5779%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="17.3279%" y="405" width="0.1619%" height="15" fill="rgb(228,49,41)" fg:x="214" fg:w="2"/><text x="17.5779%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.4089%" y="389" width="0.0810%" height="15" fill="rgb(206,95,6)" fg:x="215" fg:w="1"/><text x="17.6589%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="17.5709%" y="405" width="0.2429%" height="15" fill="rgb(251,20,14)" fg:x="217" fg:w="3"/><text x="17.8209%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8138%" y="405" width="0.0810%" height="15" fill="rgb(214,99,28)" fg:x="220" fg:w="1"/><text x="18.0638%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.2186%" y="373" width="0.0810%" height="15" fill="rgb(239,122,54)" fg:x="225" fg:w="1"/><text x="18.4686%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="18.2996%" y="373" width="0.0810%" height="15" fill="rgb(218,217,46)" fg:x="226" fg:w="1"/><text x="18.5496%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.4615%" y="357" width="0.1619%" height="15" fill="rgb(249,106,28)" fg:x="228" fg:w="2"/><text x="18.7115%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5425%" y="341" width="0.0810%" height="15" fill="rgb(250,158,18)" fg:x="229" fg:w="1"/><text x="18.7925%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="18.6235%" y="341" width="0.0810%" height="15" fill="rgb(226,137,29)" fg:x="230" fg:w="1"/><text x="18.8735%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.7045%" y="309" width="0.1619%" height="15" fill="rgb(210,188,1)" fg:x="231" fg:w="2"/><text x="18.9545%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7854%" y="293" width="0.0810%" height="15" fill="rgb(227,84,42)" fg:x="232" fg:w="1"/><text x="19.0354%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.8664%" y="293" width="0.0810%" height="15" fill="rgb(222,147,48)" fg:x="233" fg:w="1"/><text x="19.1164%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="18.9474%" y="293" width="0.1619%" height="15" fill="rgb(241,150,43)" fg:x="234" fg:w="2"/><text x="19.1974%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.0283%" y="277" width="0.0810%" height="15" fill="rgb(206,139,52)" fg:x="235" fg:w="1"/><text x="19.2783%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0283%" y="261" width="0.0810%" height="15" fill="rgb(230,63,14)" fg:x="235" fg:w="1"/><text x="19.2783%" y="271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.65%)</title><rect x="18.6235%" y="357" width="0.6478%" height="15" fill="rgb(247,8,20)" fg:x="230" fg:w="8"/><text x="18.8735%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="18.7045%" y="341" width="0.5668%" height="15" fill="rgb(213,115,4)" fg:x="231" fg:w="7"/><text x="18.9545%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="18.7045%" y="325" width="0.5668%" height="15" fill="rgb(241,79,49)" fg:x="231" fg:w="7"/><text x="18.9545%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="18.8664%" y="309" width="0.4049%" height="15" fill="rgb(222,42,35)" fg:x="233" fg:w="5"/><text x="19.1164%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.1093%" y="293" width="0.1619%" height="15" fill="rgb(247,59,23)" fg:x="236" fg:w="2"/><text x="19.3593%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.5142%" y="277" width="0.1619%" height="15" fill="rgb(247,93,18)" fg:x="241" fg:w="2"/><text x="19.7642%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.5142%" y="293" width="0.2429%" height="15" fill="rgb(249,107,47)" fg:x="241" fg:w="3"/><text x="19.7642%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.6761%" y="277" width="0.0810%" height="15" fill="rgb(219,27,1)" fg:x="243" fg:w="1"/><text x="19.9261%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="19.5142%" y="309" width="0.3239%" height="15" fill="rgb(217,82,32)" fg:x="241" fg:w="4"/><text x="19.7642%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.7571%" y="293" width="0.0810%" height="15" fill="rgb(250,129,47)" fg:x="244" fg:w="1"/><text x="20.0071%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7571%" y="277" width="0.0810%" height="15" fill="rgb(253,88,35)" fg:x="244" fg:w="1"/><text x="20.0071%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.86%)</title><rect x="18.0567%" y="389" width="1.8623%" height="15" fill="rgb(245,221,14)" fg:x="223" fg:w="23"/><text x="18.3067%" y="399.50">&lt;..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.54%)</title><rect x="18.3806%" y="373" width="1.5385%" height="15" fill="rgb(217,119,54)" fg:x="227" fg:w="19"/><text x="18.6306%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="19.2713%" y="357" width="0.6478%" height="15" fill="rgb(247,128,31)" fg:x="238" fg:w="8"/><text x="19.5213%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="19.3522%" y="341" width="0.5668%" height="15" fill="rgb(211,99,22)" fg:x="239" fg:w="7"/><text x="19.6022%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="19.4332%" y="325" width="0.4858%" height="15" fill="rgb(212,20,17)" fg:x="240" fg:w="6"/><text x="19.6832%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8381%" y="309" width="0.0810%" height="15" fill="rgb(209,159,29)" fg:x="245" fg:w="1"/><text x="20.0881%" y="319.50"></text></g><g><title>engine::session::Session::flush (99 samples, 8.02%)</title><rect x="11.9838%" y="549" width="8.0162%" height="15" fill="rgb(222,177,53)" fg:x="148" fg:w="99"/><text x="12.2338%" y="559.50">engine::ses..</text></g><g><title>engine::session::state::State::close (99 samples, 8.02%)</title><rect x="11.9838%" y="533" width="8.0162%" height="15" fill="rgb(234,46,43)" fg:x="148" fg:w="99"/><text x="12.2338%" y="543.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (98 samples, 7.94%)</title><rect x="12.0648%" y="517" width="7.9352%" height="15" fill="rgb(208,108,14)" fg:x="149" fg:w="98"/><text x="12.3148%" y="527.50">engine::ses..</text></g><g><title>core::iter::adapters::try_process (97 samples, 7.85%)</title><rect x="12.1457%" y="501" width="7.8543%" height="15" fill="rgb(226,78,53)" fg:x="150" fg:w="97"/><text x="12.3957%" y="511.50">core::iter:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (97 samples, 7.85%)</title><rect x="12.1457%" y="485" width="7.8543%" height="15" fill="rgb(230,20,41)" fg:x="150" fg:w="97"/><text x="12.3957%" y="495.50">&lt;alloc::vec..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (97 samples, 7.85%)</title><rect x="12.1457%" y="469" width="7.8543%" height="15" fill="rgb(213,195,35)" fg:x="150" fg:w="97"/><text x="12.3957%" y="479.50">engine::ses..</text></g><g><title>kernel::model::any_entity_changes (38 samples, 3.08%)</title><rect x="16.9231%" y="453" width="3.0769%" height="15" fill="rgb(242,62,36)" fg:x="209" fg:w="38"/><text x="17.1731%" y="463.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (31 samples, 2.51%)</title><rect x="17.4899%" y="437" width="2.5101%" height="15" fill="rgb(222,210,37)" fg:x="216" fg:w="31"/><text x="17.7399%" y="447.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.51%)</title><rect x="17.4899%" y="421" width="2.5101%" height="15" fill="rgb(232,107,19)" fg:x="216" fg:w="31"/><text x="17.7399%" y="431.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (26 samples, 2.11%)</title><rect x="17.8947%" y="405" width="2.1053%" height="15" fill="rgb(235,85,17)" fg:x="221" fg:w="26"/><text x="18.1447%" y="415.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9190%" y="389" width="0.0810%" height="15" fill="rgb(219,195,31)" fg:x="246" fg:w="1"/><text x="20.1690%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0810%" y="501" width="0.0810%" height="15" fill="rgb(231,183,30)" fg:x="248" fg:w="1"/><text x="20.3310%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="20.0810%" y="517" width="0.1619%" height="15" fill="rgb(212,0,11)" fg:x="248" fg:w="2"/><text x="20.3310%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.1619%" y="501" width="0.0810%" height="15" fill="rgb(249,53,54)" fg:x="249" fg:w="1"/><text x="20.4119%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="20.2429%" y="517" width="0.0810%" height="15" fill="rgb(211,118,13)" fg:x="250" fg:w="1"/><text x="20.4929%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="20.3239%" y="517" width="0.0810%" height="15" fill="rgb(237,42,9)" fg:x="251" fg:w="1"/><text x="20.5739%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.3239%" y="501" width="0.0810%" height="15" fill="rgb(227,68,32)" fg:x="251" fg:w="1"/><text x="20.5739%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="20.3239%" y="485" width="0.0810%" height="15" fill="rgb(238,10,7)" fg:x="251" fg:w="1"/><text x="20.5739%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.49%)</title><rect x="20.0000%" y="549" width="0.4858%" height="15" fill="rgb(224,42,12)" fg:x="247" fg:w="6"/><text x="20.2500%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (6 samples, 0.49%)</title><rect x="20.0000%" y="533" width="0.4858%" height="15" fill="rgb(252,190,5)" fg:x="247" fg:w="6"/><text x="20.2500%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="20.4049%" y="517" width="0.0810%" height="15" fill="rgb(220,214,39)" fg:x="252" fg:w="1"/><text x="20.6549%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.4049%" y="501" width="0.0810%" height="15" fill="rgb(247,98,4)" fg:x="252" fg:w="1"/><text x="20.6549%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.4049%" y="485" width="0.0810%" height="15" fill="rgb(211,60,12)" fg:x="252" fg:w="1"/><text x="20.6549%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="20.4049%" y="469" width="0.0810%" height="15" fill="rgb(224,42,10)" fg:x="252" fg:w="1"/><text x="20.6549%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.4049%" y="453" width="0.0810%" height="15" fill="rgb(217,167,4)" fg:x="252" fg:w="1"/><text x="20.6549%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.4049%" y="437" width="0.0810%" height="15" fill="rgb(253,18,17)" fg:x="252" fg:w="1"/><text x="20.6549%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="20.4858%" y="517" width="0.1619%" height="15" fill="rgb(249,186,44)" fg:x="253" fg:w="2"/><text x="20.7358%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5668%" y="501" width="0.0810%" height="15" fill="rgb(254,124,54)" fg:x="254" fg:w="1"/><text x="20.8168%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6478%" y="485" width="0.0810%" height="15" fill="rgb(220,124,39)" fg:x="255" fg:w="1"/><text x="20.8978%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="20.6478%" y="501" width="0.1619%" height="15" fill="rgb(225,96,46)" fg:x="255" fg:w="2"/><text x="20.8978%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.7287%" y="485" width="0.0810%" height="15" fill="rgb(221,106,12)" fg:x="256" fg:w="1"/><text x="20.9787%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7287%" y="469" width="0.0810%" height="15" fill="rgb(227,133,23)" fg:x="256" fg:w="1"/><text x="20.9787%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7287%" y="453" width="0.0810%" height="15" fill="rgb(216,44,52)" fg:x="256" fg:w="1"/><text x="20.9787%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.8097%" y="453" width="0.1619%" height="15" fill="rgb(239,149,7)" fg:x="257" fg:w="2"/><text x="21.0597%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="20.6478%" y="517" width="0.4049%" height="15" fill="rgb(211,157,31)" fg:x="255" fg:w="5"/><text x="20.8978%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="20.8097%" y="501" width="0.2429%" height="15" fill="rgb(206,215,22)" fg:x="257" fg:w="3"/><text x="21.0597%" y="511.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="20.8097%" y="485" width="0.2429%" height="15" fill="rgb(208,113,15)" fg:x="257" fg:w="3"/><text x="21.0597%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.8097%" y="469" width="0.2429%" height="15" fill="rgb(207,189,15)" fg:x="257" fg:w="3"/><text x="21.0597%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9717%" y="453" width="0.0810%" height="15" fill="rgb(231,115,4)" fg:x="259" fg:w="1"/><text x="21.2217%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9717%" y="437" width="0.0810%" height="15" fill="rgb(253,117,2)" fg:x="259" fg:w="1"/><text x="21.2217%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9717%" y="421" width="0.0810%" height="15" fill="rgb(248,48,24)" fg:x="259" fg:w="1"/><text x="21.2217%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="21.0526%" y="517" width="0.0810%" height="15" fill="rgb(241,28,46)" fg:x="260" fg:w="1"/><text x="21.3026%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="21.0526%" y="501" width="0.0810%" height="15" fill="rgb(216,165,52)" fg:x="260" fg:w="1"/><text x="21.3026%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="21.1336%" y="469" width="0.0810%" height="15" fill="rgb(220,222,34)" fg:x="261" fg:w="1"/><text x="21.3836%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1336%" y="453" width="0.0810%" height="15" fill="rgb(247,222,49)" fg:x="261" fg:w="1"/><text x="21.3836%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.1336%" y="437" width="0.0810%" height="15" fill="rgb(240,10,31)" fg:x="261" fg:w="1"/><text x="21.3836%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="21.1336%" y="501" width="0.1619%" height="15" fill="rgb(221,199,35)" fg:x="261" fg:w="2"/><text x="21.3836%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="21.1336%" y="485" width="0.1619%" height="15" fill="rgb(230,223,11)" fg:x="261" fg:w="2"/><text x="21.3836%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="21.2146%" y="469" width="0.0810%" height="15" fill="rgb(218,82,45)" fg:x="262" fg:w="1"/><text x="21.4646%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2146%" y="453" width="0.0810%" height="15" fill="rgb(233,213,33)" fg:x="262" fg:w="1"/><text x="21.4646%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="21.2955%" y="501" width="0.0810%" height="15" fill="rgb(210,143,52)" fg:x="263" fg:w="1"/><text x="21.5455%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.3765%" y="469" width="0.2429%" height="15" fill="rgb(206,95,4)" fg:x="264" fg:w="3"/><text x="21.6265%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.3765%" y="453" width="0.2429%" height="15" fill="rgb(246,164,46)" fg:x="264" fg:w="3"/><text x="21.6265%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.65%)</title><rect x="21.1336%" y="517" width="0.6478%" height="15" fill="rgb(213,210,47)" fg:x="261" fg:w="8"/><text x="21.3836%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="21.3765%" y="501" width="0.4049%" height="15" fill="rgb(210,12,38)" fg:x="264" fg:w="5"/><text x="21.6265%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="21.3765%" y="485" width="0.4049%" height="15" fill="rgb(252,192,54)" fg:x="264" fg:w="5"/><text x="21.6265%" y="495.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="21.6194%" y="469" width="0.1619%" height="15" fill="rgb(242,92,6)" fg:x="267" fg:w="2"/><text x="21.8694%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="21.6194%" y="453" width="0.1619%" height="15" fill="rgb(253,154,15)" fg:x="267" fg:w="2"/><text x="21.8694%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.6194%" y="437" width="0.1619%" height="15" fill="rgb(209,20,43)" fg:x="267" fg:w="2"/><text x="21.8694%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.6194%" y="421" width="0.1619%" height="15" fill="rgb(232,28,49)" fg:x="267" fg:w="2"/><text x="21.8694%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.6194%" y="405" width="0.1619%" height="15" fill="rgb(248,131,53)" fg:x="267" fg:w="2"/><text x="21.8694%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.38%)</title><rect x="20.4858%" y="533" width="1.3765%" height="15" fill="rgb(214,16,30)" fg:x="253" fg:w="17"/><text x="20.7358%" y="543.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="21.7814%" y="517" width="0.0810%" height="15" fill="rgb(245,16,0)" fg:x="269" fg:w="1"/><text x="22.0314%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7814%" y="501" width="0.0810%" height="15" fill="rgb(245,17,35)" fg:x="269" fg:w="1"/><text x="22.0314%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8623%" y="517" width="0.0810%" height="15" fill="rgb(249,27,53)" fg:x="270" fg:w="1"/><text x="22.1123%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.9433%" y="485" width="0.0810%" height="15" fill="rgb(214,73,24)" fg:x="271" fg:w="1"/><text x="22.1933%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9433%" y="469" width="0.0810%" height="15" fill="rgb(223,84,37)" fg:x="271" fg:w="1"/><text x="22.1933%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.9433%" y="453" width="0.0810%" height="15" fill="rgb(210,109,28)" fg:x="271" fg:w="1"/><text x="22.1933%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="21.8623%" y="533" width="0.2429%" height="15" fill="rgb(208,186,6)" fg:x="270" fg:w="3"/><text x="22.1123%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="21.9433%" y="517" width="0.1619%" height="15" fill="rgb(235,201,30)" fg:x="271" fg:w="2"/><text x="22.1933%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="21.9433%" y="501" width="0.1619%" height="15" fill="rgb(216,198,48)" fg:x="271" fg:w="2"/><text x="22.1933%" y="511.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="22.0243%" y="485" width="0.0810%" height="15" fill="rgb(254,186,25)" fg:x="272" fg:w="1"/><text x="22.2743%" y="495.50"></text></g><g><title>plugins_core::build::Build::save (21 samples, 1.70%)</title><rect x="20.4858%" y="549" width="1.7004%" height="15" fill="rgb(227,87,5)" fg:x="253" fg:w="21"/><text x="20.7358%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="22.1053%" y="533" width="0.0810%" height="15" fill="rgb(236,205,25)" fg:x="273" fg:w="1"/><text x="22.3553%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1053%" y="517" width="0.0810%" height="15" fill="rgb(229,99,32)" fg:x="273" fg:w="1"/><text x="22.3553%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="22.1862%" y="501" width="0.0810%" height="15" fill="rgb(231,177,31)" fg:x="274" fg:w="1"/><text x="22.4362%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="22.2672%" y="485" width="0.0810%" height="15" fill="rgb(246,15,2)" fg:x="275" fg:w="1"/><text x="22.5172%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="22.2672%" y="469" width="0.0810%" height="15" fill="rgb(207,39,15)" fg:x="275" fg:w="1"/><text x="22.5172%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.16%)</title><rect x="22.2672%" y="501" width="0.1619%" height="15" fill="rgb(207,44,9)" fg:x="275" fg:w="2"/><text x="22.5172%" y="511.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="22.3482%" y="485" width="0.0810%" height="15" fill="rgb(225,224,33)" fg:x="276" fg:w="1"/><text x="22.5982%" y="495.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.32%)</title><rect x="22.1862%" y="517" width="0.3239%" height="15" fill="rgb(252,151,3)" fg:x="274" fg:w="4"/><text x="22.4362%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="22.4291%" y="501" width="0.0810%" height="15" fill="rgb(211,140,13)" fg:x="277" fg:w="1"/><text x="22.6791%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="22.5101%" y="437" width="0.0810%" height="15" fill="rgb(239,225,17)" fg:x="278" fg:w="1"/><text x="22.7601%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5911%" y="405" width="0.0810%" height="15" fill="rgb(223,170,52)" fg:x="279" fg:w="1"/><text x="22.8411%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Kind&gt;::serialize (3 samples, 0.24%)</title><rect x="22.5101%" y="469" width="0.2429%" height="15" fill="rgb(212,64,21)" fg:x="278" fg:w="3"/><text x="22.7601%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="22.5101%" y="453" width="0.2429%" height="15" fill="rgb(236,126,48)" fg:x="278" fg:w="3"/><text x="22.7601%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="22.5911%" y="437" width="0.1619%" height="15" fill="rgb(209,135,11)" fg:x="279" fg:w="2"/><text x="22.8411%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.5911%" y="421" width="0.1619%" height="15" fill="rgb(228,126,40)" fg:x="279" fg:w="2"/><text x="22.8411%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.6721%" y="405" width="0.0810%" height="15" fill="rgb(205,196,36)" fg:x="280" fg:w="1"/><text x="22.9221%" y="415.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (8 samples, 0.65%)</title><rect x="22.1862%" y="549" width="0.6478%" height="15" fill="rgb(243,160,33)" fg:x="274" fg:w="8"/><text x="22.4362%" y="559.50"></text></g><g><title>plugins_core::tools::set_quantity (8 samples, 0.65%)</title><rect x="22.1862%" y="533" width="0.6478%" height="15" fill="rgb(210,84,20)" fg:x="274" fg:w="8"/><text x="22.4362%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (4 samples, 0.32%)</title><rect x="22.5101%" y="517" width="0.3239%" height="15" fill="rgb(228,213,30)" fg:x="278" fg:w="4"/><text x="22.7601%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Carryable&gt;::serialize (4 samples, 0.32%)</title><rect x="22.5101%" y="501" width="0.3239%" height="15" fill="rgb(252,33,45)" fg:x="278" fg:w="4"/><text x="22.7601%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="22.5101%" y="485" width="0.3239%" height="15" fill="rgb(254,227,20)" fg:x="278" fg:w="4"/><text x="22.7601%" y="495.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;f32&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="22.7530%" y="469" width="0.0810%" height="15" fill="rgb(228,192,2)" fg:x="281" fg:w="1"/><text x="23.0030%" y="479.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="22.8340%" y="517" width="0.0810%" height="15" fill="rgb(233,32,8)" fg:x="282" fg:w="1"/><text x="23.0840%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::new (1 samples, 0.08%)</title><rect x="22.8340%" y="501" width="0.0810%" height="15" fill="rgb(220,146,47)" fg:x="282" fg:w="1"/><text x="23.0840%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.9150%" y="485" width="0.0810%" height="15" fill="rgb(246,194,1)" fg:x="283" fg:w="1"/><text x="23.1650%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="22.9150%" y="469" width="0.0810%" height="15" fill="rgb(218,203,9)" fg:x="283" fg:w="1"/><text x="23.1650%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9150%" y="453" width="0.0810%" height="15" fill="rgb(237,97,14)" fg:x="283" fg:w="1"/><text x="23.1650%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9150%" y="437" width="0.0810%" height="15" fill="rgb(239,76,15)" fg:x="283" fg:w="1"/><text x="23.1650%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.9150%" y="421" width="0.0810%" height="15" fill="rgb(222,53,45)" fg:x="283" fg:w="1"/><text x="23.1650%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9150%" y="405" width="0.0810%" height="15" fill="rgb(237,88,5)" fg:x="283" fg:w="1"/><text x="23.1650%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9960%" y="453" width="0.0810%" height="15" fill="rgb(218,223,35)" fg:x="284" fg:w="1"/><text x="23.2460%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="22.9960%" y="469" width="0.2429%" height="15" fill="rgb(243,229,38)" fg:x="284" fg:w="3"/><text x="23.2460%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.0769%" y="453" width="0.1619%" height="15" fill="rgb(240,75,41)" fg:x="285" fg:w="2"/><text x="23.3269%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.0769%" y="437" width="0.1619%" height="15" fill="rgb(209,110,37)" fg:x="285" fg:w="2"/><text x="23.3269%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.0769%" y="421" width="0.1619%" height="15" fill="rgb(221,130,46)" fg:x="285" fg:w="2"/><text x="23.3269%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.0769%" y="405" width="0.1619%" height="15" fill="rgb(237,160,20)" fg:x="285" fg:w="2"/><text x="23.3269%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.0769%" y="389" width="0.1619%" height="15" fill="rgb(234,126,24)" fg:x="285" fg:w="2"/><text x="23.3269%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.0769%" y="373" width="0.1619%" height="15" fill="rgb(207,177,9)" fg:x="285" fg:w="2"/><text x="23.3269%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.40%)</title><rect x="22.9150%" y="517" width="0.4049%" height="15" fill="rgb(231,191,33)" fg:x="283" fg:w="5"/><text x="23.1650%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="22.9150%" y="501" width="0.4049%" height="15" fill="rgb(207,42,1)" fg:x="283" fg:w="5"/><text x="23.1650%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="22.9960%" y="485" width="0.3239%" height="15" fill="rgb(218,34,50)" fg:x="284" fg:w="4"/><text x="23.2460%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="23.2389%" y="469" width="0.0810%" height="15" fill="rgb(254,126,39)" fg:x="287" fg:w="1"/><text x="23.4889%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="23.3198%" y="517" width="0.0810%" height="15" fill="rgb(251,17,26)" fg:x="288" fg:w="1"/><text x="23.5698%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="23.3198%" y="501" width="0.0810%" height="15" fill="rgb(252,215,34)" fg:x="288" fg:w="1"/><text x="23.5698%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.3198%" y="485" width="0.0810%" height="15" fill="rgb(217,120,44)" fg:x="288" fg:w="1"/><text x="23.5698%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.4818%" y="453" width="0.0810%" height="15" fill="rgb(211,31,11)" fg:x="290" fg:w="1"/><text x="23.7318%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="23.4818%" y="501" width="0.1619%" height="15" fill="rgb(222,69,51)" fg:x="290" fg:w="2"/><text x="23.7318%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.4818%" y="485" width="0.1619%" height="15" fill="rgb(215,229,42)" fg:x="290" fg:w="2"/><text x="23.7318%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.4818%" y="469" width="0.1619%" height="15" fill="rgb(212,102,15)" fg:x="290" fg:w="2"/><text x="23.7318%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5628%" y="453" width="0.0810%" height="15" fill="rgb(205,179,41)" fg:x="291" fg:w="1"/><text x="23.8128%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6437%" y="437" width="0.0810%" height="15" fill="rgb(219,148,46)" fg:x="292" fg:w="1"/><text x="23.8937%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.6437%" y="421" width="0.0810%" height="15" fill="rgb(243,40,19)" fg:x="292" fg:w="1"/><text x="23.8937%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6437%" y="405" width="0.0810%" height="15" fill="rgb(208,206,34)" fg:x="292" fg:w="1"/><text x="23.8937%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6437%" y="389" width="0.0810%" height="15" fill="rgb(244,184,38)" fg:x="292" fg:w="1"/><text x="23.8937%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.6437%" y="373" width="0.0810%" height="15" fill="rgb(244,151,47)" fg:x="292" fg:w="1"/><text x="23.8937%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.6437%" y="357" width="0.0810%" height="15" fill="rgb(236,134,42)" fg:x="292" fg:w="1"/><text x="23.8937%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.6437%" y="341" width="0.0810%" height="15" fill="rgb(233,93,22)" fg:x="292" fg:w="1"/><text x="23.8937%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6437%" y="325" width="0.0810%" height="15" fill="rgb(211,202,10)" fg:x="292" fg:w="1"/><text x="23.8937%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6437%" y="309" width="0.0810%" height="15" fill="rgb(240,63,8)" fg:x="292" fg:w="1"/><text x="23.8937%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.6437%" y="293" width="0.0810%" height="15" fill="rgb(214,9,4)" fg:x="292" fg:w="1"/><text x="23.8937%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.6437%" y="277" width="0.0810%" height="15" fill="rgb(243,66,45)" fg:x="292" fg:w="1"/><text x="23.8937%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.6437%" y="261" width="0.0810%" height="15" fill="rgb(220,50,42)" fg:x="292" fg:w="1"/><text x="23.8937%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.6437%" y="245" width="0.0810%" height="15" fill="rgb(220,134,27)" fg:x="292" fg:w="1"/><text x="23.8937%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6437%" y="229" width="0.0810%" height="15" fill="rgb(246,151,50)" fg:x="292" fg:w="1"/><text x="23.8937%" y="239.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.6437%" y="469" width="0.1619%" height="15" fill="rgb(238,216,27)" fg:x="292" fg:w="2"/><text x="23.8937%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="23.6437%" y="453" width="0.1619%" height="15" fill="rgb(250,92,11)" fg:x="292" fg:w="2"/><text x="23.8937%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="23.7247%" y="437" width="0.0810%" height="15" fill="rgb(248,183,6)" fg:x="293" fg:w="1"/><text x="23.9747%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.57%)</title><rect x="23.4008%" y="517" width="0.5668%" height="15" fill="rgb(211,204,50)" fg:x="289" fg:w="7"/><text x="23.6508%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="23.6437%" y="501" width="0.3239%" height="15" fill="rgb(252,55,47)" fg:x="292" fg:w="4"/><text x="23.8937%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="23.6437%" y="485" width="0.3239%" height="15" fill="rgb(240,198,32)" fg:x="292" fg:w="4"/><text x="23.8937%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.8057%" y="469" width="0.1619%" height="15" fill="rgb(224,203,19)" fg:x="294" fg:w="2"/><text x="24.0557%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="23.8057%" y="453" width="0.1619%" height="15" fill="rgb(205,27,16)" fg:x="294" fg:w="2"/><text x="24.0557%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="23.8866%" y="437" width="0.0810%" height="15" fill="rgb(224,226,17)" fg:x="295" fg:w="1"/><text x="24.1366%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8866%" y="421" width="0.0810%" height="15" fill="rgb(205,216,54)" fg:x="295" fg:w="1"/><text x="24.1366%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (17 samples, 1.38%)</title><rect x="22.8340%" y="549" width="1.3765%" height="15" fill="rgb(248,168,46)" fg:x="282" fg:w="17"/><text x="23.0840%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (17 samples, 1.38%)</title><rect x="22.8340%" y="533" width="1.3765%" height="15" fill="rgb(226,111,45)" fg:x="282" fg:w="17"/><text x="23.0840%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (3 samples, 0.24%)</title><rect x="23.9676%" y="517" width="0.2429%" height="15" fill="rgb(231,15,9)" fg:x="296" fg:w="3"/><text x="24.2176%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="23.9676%" y="501" width="0.2429%" height="15" fill="rgb(243,168,3)" fg:x="296" fg:w="3"/><text x="24.2176%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="24.0486%" y="485" width="0.1619%" height="15" fill="rgb(221,220,54)" fg:x="297" fg:w="2"/><text x="24.2986%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.0486%" y="469" width="0.1619%" height="15" fill="rgb(232,174,38)" fg:x="297" fg:w="2"/><text x="24.2986%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="24.0486%" y="453" width="0.1619%" height="15" fill="rgb(205,14,38)" fg:x="297" fg:w="2"/><text x="24.2986%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.0486%" y="437" width="0.1619%" height="15" fill="rgb(234,89,19)" fg:x="297" fg:w="2"/><text x="24.2986%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.0486%" y="421" width="0.1619%" height="15" fill="rgb(216,68,51)" fg:x="297" fg:w="2"/><text x="24.2986%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="24.2915%" y="533" width="0.0810%" height="15" fill="rgb(213,49,2)" fg:x="300" fg:w="1"/><text x="24.5415%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2915%" y="517" width="0.0810%" height="15" fill="rgb(242,146,30)" fg:x="300" fg:w="1"/><text x="24.5415%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.3725%" y="533" width="0.0810%" height="15" fill="rgb(224,188,11)" fg:x="301" fg:w="1"/><text x="24.6225%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.3725%" y="517" width="0.0810%" height="15" fill="rgb(213,159,11)" fg:x="301" fg:w="1"/><text x="24.6225%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.3725%" y="501" width="0.0810%" height="15" fill="rgb(229,13,31)" fg:x="301" fg:w="1"/><text x="24.6225%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.3725%" y="485" width="0.0810%" height="15" fill="rgb(209,103,11)" fg:x="301" fg:w="1"/><text x="24.6225%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5344%" y="421" width="0.0810%" height="15" fill="rgb(206,3,4)" fg:x="303" fg:w="1"/><text x="24.7844%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.5344%" y="405" width="0.0810%" height="15" fill="rgb(252,10,49)" fg:x="303" fg:w="1"/><text x="24.7844%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="24.5344%" y="453" width="0.1619%" height="15" fill="rgb(217,160,32)" fg:x="303" fg:w="2"/><text x="24.7844%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="24.5344%" y="437" width="0.1619%" height="15" fill="rgb(249,196,0)" fg:x="303" fg:w="2"/><text x="24.7844%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.6154%" y="421" width="0.0810%" height="15" fill="rgb(213,17,48)" fg:x="304" fg:w="1"/><text x="24.8654%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6154%" y="405" width="0.0810%" height="15" fill="rgb(206,42,46)" fg:x="304" fg:w="1"/><text x="24.8654%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.6154%" y="389" width="0.0810%" height="15" fill="rgb(212,105,24)" fg:x="304" fg:w="1"/><text x="24.8654%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6154%" y="373" width="0.0810%" height="15" fill="rgb(243,216,30)" fg:x="304" fg:w="1"/><text x="24.8654%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6154%" y="357" width="0.0810%" height="15" fill="rgb(207,121,3)" fg:x="304" fg:w="1"/><text x="24.8654%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="24.6964%" y="437" width="0.0810%" height="15" fill="rgb(249,78,0)" fg:x="305" fg:w="1"/><text x="24.9464%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6964%" y="421" width="0.0810%" height="15" fill="rgb(244,151,32)" fg:x="305" fg:w="1"/><text x="24.9464%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="24.4534%" y="533" width="0.4049%" height="15" fill="rgb(228,63,25)" fg:x="302" fg:w="5"/><text x="24.7034%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="24.4534%" y="517" width="0.4049%" height="15" fill="rgb(231,158,23)" fg:x="302" fg:w="5"/><text x="24.7034%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="24.5344%" y="501" width="0.3239%" height="15" fill="rgb(248,107,23)" fg:x="303" fg:w="4"/><text x="24.7844%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="24.5344%" y="485" width="0.3239%" height="15" fill="rgb(215,168,21)" fg:x="303" fg:w="4"/><text x="24.7844%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="24.5344%" y="469" width="0.3239%" height="15" fill="rgb(227,83,22)" fg:x="303" fg:w="4"/><text x="24.7844%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="24.6964%" y="453" width="0.1619%" height="15" fill="rgb(217,118,43)" fg:x="305" fg:w="2"/><text x="24.9464%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="24.7773%" y="437" width="0.0810%" height="15" fill="rgb(229,220,41)" fg:x="306" fg:w="1"/><text x="25.0273%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.7773%" y="421" width="0.0810%" height="15" fill="rgb(254,146,46)" fg:x="306" fg:w="1"/><text x="25.0273%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::EntityPtr&gt;&gt; (1 samples, 0.08%)</title><rect x="24.8583%" y="533" width="0.0810%" height="15" fill="rgb(233,208,31)" fg:x="307" fg:w="1"/><text x="25.1083%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9393%" y="501" width="0.0810%" height="15" fill="rgb(222,162,7)" fg:x="308" fg:w="1"/><text x="25.1893%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.9393%" y="485" width="0.0810%" height="15" fill="rgb(230,117,45)" fg:x="308" fg:w="1"/><text x="25.1893%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.9393%" y="469" width="0.0810%" height="15" fill="rgb(239,163,6)" fg:x="308" fg:w="1"/><text x="25.1893%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.9393%" y="453" width="0.0810%" height="15" fill="rgb(246,130,17)" fg:x="308" fg:w="1"/><text x="25.1893%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.9393%" y="437" width="0.0810%" height="15" fill="rgb(216,84,5)" fg:x="308" fg:w="1"/><text x="25.1893%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.9393%" y="421" width="0.0810%" height="15" fill="rgb(230,200,21)" fg:x="308" fg:w="1"/><text x="25.1893%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.9393%" y="405" width="0.0810%" height="15" fill="rgb(224,2,8)" fg:x="308" fg:w="1"/><text x="25.1893%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.9393%" y="389" width="0.0810%" height="15" fill="rgb(238,178,10)" fg:x="308" fg:w="1"/><text x="25.1893%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.9393%" y="373" width="0.0810%" height="15" fill="rgb(242,153,24)" fg:x="308" fg:w="1"/><text x="25.1893%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.9393%" y="357" width="0.0810%" height="15" fill="rgb(242,32,48)" fg:x="308" fg:w="1"/><text x="25.1893%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.9393%" y="341" width="0.0810%" height="15" fill="rgb(227,36,0)" fg:x="308" fg:w="1"/><text x="25.1893%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.9393%" y="325" width="0.0810%" height="15" fill="rgb(251,33,35)" fg:x="308" fg:w="1"/><text x="25.1893%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0202%" y="501" width="0.0810%" height="15" fill="rgb(232,168,51)" fg:x="309" fg:w="1"/><text x="25.2702%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="24.9393%" y="517" width="0.2429%" height="15" fill="rgb(228,56,10)" fg:x="308" fg:w="3"/><text x="25.1893%" y="527.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="25.1012%" y="501" width="0.0810%" height="15" fill="rgb(231,10,26)" fg:x="310" fg:w="1"/><text x="25.3512%" y="511.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="25.2632%" y="501" width="0.0810%" height="15" fill="rgb(226,202,12)" fg:x="312" fg:w="1"/><text x="25.5132%" y="511.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="25.2632%" y="485" width="0.0810%" height="15" fill="rgb(251,49,21)" fg:x="312" fg:w="1"/><text x="25.5132%" y="495.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="25.2632%" y="469" width="0.0810%" height="15" fill="rgb(206,228,28)" fg:x="312" fg:w="1"/><text x="25.5132%" y="479.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="25.2632%" y="453" width="0.0810%" height="15" fill="rgb(205,198,31)" fg:x="312" fg:w="1"/><text x="25.5132%" y="463.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="25.2632%" y="437" width="0.0810%" height="15" fill="rgb(213,69,1)" fg:x="312" fg:w="1"/><text x="25.5132%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="25.2632%" y="421" width="0.0810%" height="15" fill="rgb(209,177,9)" fg:x="312" fg:w="1"/><text x="25.5132%" y="431.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="25.2632%" y="405" width="0.0810%" height="15" fill="rgb(227,119,30)" fg:x="312" fg:w="1"/><text x="25.5132%" y="415.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="25.2632%" y="389" width="0.0810%" height="15" fill="rgb(234,106,41)" fg:x="312" fg:w="1"/><text x="25.5132%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="25.3441%" y="469" width="0.0810%" height="15" fill="rgb(244,103,47)" fg:x="313" fg:w="1"/><text x="25.5941%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="25.3441%" y="453" width="0.0810%" height="15" fill="rgb(212,211,25)" fg:x="313" fg:w="1"/><text x="25.5941%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="25.4251%" y="437" width="0.2429%" height="15" fill="rgb(208,63,53)" fg:x="314" fg:w="3"/><text x="25.6751%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="25.5870%" y="421" width="0.0810%" height="15" fill="rgb(213,176,21)" fg:x="316" fg:w="1"/><text x="25.8370%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.5870%" y="405" width="0.0810%" height="15" fill="rgb(243,124,12)" fg:x="316" fg:w="1"/><text x="25.8370%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.5870%" y="389" width="0.0810%" height="15" fill="rgb(239,2,35)" fg:x="316" fg:w="1"/><text x="25.8370%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="25.4251%" y="469" width="0.3239%" height="15" fill="rgb(253,169,22)" fg:x="314" fg:w="4"/><text x="25.6751%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="25.4251%" y="453" width="0.3239%" height="15" fill="rgb(254,51,12)" fg:x="314" fg:w="4"/><text x="25.6751%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.6680%" y="437" width="0.0810%" height="15" fill="rgb(244,17,47)" fg:x="317" fg:w="1"/><text x="25.9180%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9919%" y="373" width="0.0810%" height="15" fill="rgb(251,45,46)" fg:x="321" fg:w="1"/><text x="26.2419%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="25.9919%" y="389" width="0.2429%" height="15" fill="rgb(223,87,43)" fg:x="321" fg:w="3"/><text x="26.2419%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="26.0729%" y="373" width="0.1619%" height="15" fill="rgb(230,132,31)" fg:x="322" fg:w="2"/><text x="26.3229%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="26.0729%" y="357" width="0.1619%" height="15" fill="rgb(206,99,1)" fg:x="322" fg:w="2"/><text x="26.3229%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.1538%" y="341" width="0.0810%" height="15" fill="rgb(227,110,25)" fg:x="323" fg:w="1"/><text x="26.4038%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.1538%" y="325" width="0.0810%" height="15" fill="rgb(217,182,7)" fg:x="323" fg:w="1"/><text x="26.4038%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="25.9109%" y="405" width="0.4049%" height="15" fill="rgb(250,176,4)" fg:x="320" fg:w="5"/><text x="26.1609%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2348%" y="389" width="0.0810%" height="15" fill="rgb(244,98,30)" fg:x="324" fg:w="1"/><text x="26.4848%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3158%" y="405" width="0.0810%" height="15" fill="rgb(228,150,42)" fg:x="325" fg:w="1"/><text x="26.5658%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="25.8300%" y="421" width="0.6478%" height="15" fill="rgb(231,91,46)" fg:x="319" fg:w="8"/><text x="26.0800%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.3968%" y="405" width="0.0810%" height="15" fill="rgb(252,161,32)" fg:x="326" fg:w="1"/><text x="26.6468%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.49%)</title><rect x="26.4777%" y="405" width="0.4858%" height="15" fill="rgb(236,69,41)" fg:x="327" fg:w="6"/><text x="26.7277%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="26.4777%" y="389" width="0.4858%" height="15" fill="rgb(212,160,3)" fg:x="327" fg:w="6"/><text x="26.7277%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="26.6397%" y="373" width="0.3239%" height="15" fill="rgb(216,5,50)" fg:x="329" fg:w="4"/><text x="26.8897%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.8016%" y="357" width="0.1619%" height="15" fill="rgb(241,138,25)" fg:x="331" fg:w="2"/><text x="27.0516%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.8016%" y="341" width="0.1619%" height="15" fill="rgb(239,42,18)" fg:x="331" fg:w="2"/><text x="27.0516%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.8826%" y="325" width="0.0810%" height="15" fill="rgb(239,40,7)" fg:x="332" fg:w="1"/><text x="27.1326%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.8826%" y="309" width="0.0810%" height="15" fill="rgb(239,11,31)" fg:x="332" fg:w="1"/><text x="27.1326%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.8826%" y="293" width="0.0810%" height="15" fill="rgb(224,77,40)" fg:x="332" fg:w="1"/><text x="27.1326%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.81%)</title><rect x="26.9636%" y="389" width="0.8097%" height="15" fill="rgb(226,15,5)" fg:x="333" fg:w="10"/><text x="27.2136%" y="399.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="27.2874%" y="373" width="0.4858%" height="15" fill="rgb(254,188,5)" fg:x="337" fg:w="6"/><text x="27.5374%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.5304%" y="357" width="0.2429%" height="15" fill="rgb(241,148,52)" fg:x="340" fg:w="3"/><text x="27.7804%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="27.5304%" y="341" width="0.2429%" height="15" fill="rgb(251,48,36)" fg:x="340" fg:w="3"/><text x="27.7804%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.6923%" y="325" width="0.0810%" height="15" fill="rgb(243,83,13)" fg:x="342" fg:w="1"/><text x="27.9423%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.6923%" y="309" width="0.0810%" height="15" fill="rgb(210,105,0)" fg:x="342" fg:w="1"/><text x="27.9423%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.6923%" y="293" width="0.0810%" height="15" fill="rgb(239,60,36)" fg:x="342" fg:w="1"/><text x="27.9423%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.8543%" y="373" width="0.0810%" height="15" fill="rgb(210,20,0)" fg:x="344" fg:w="1"/><text x="28.1043%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="27.8543%" y="357" width="0.0810%" height="15" fill="rgb(244,26,53)" fg:x="344" fg:w="1"/><text x="28.1043%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="27.8543%" y="341" width="0.0810%" height="15" fill="rgb(240,100,49)" fg:x="344" fg:w="1"/><text x="28.1043%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="27.8543%" y="325" width="0.0810%" height="15" fill="rgb(250,46,45)" fg:x="344" fg:w="1"/><text x="28.1043%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="27.8543%" y="309" width="0.0810%" height="15" fill="rgb(220,181,29)" fg:x="344" fg:w="1"/><text x="28.1043%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="27.9352%" y="373" width="0.3239%" height="15" fill="rgb(213,137,33)" fg:x="345" fg:w="4"/><text x="28.1852%" y="383.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="27.9352%" y="357" width="0.3239%" height="15" fill="rgb(213,27,48)" fg:x="345" fg:w="4"/><text x="28.1852%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.0162%" y="341" width="0.2429%" height="15" fill="rgb(245,180,39)" fg:x="346" fg:w="3"/><text x="28.2662%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.1781%" y="325" width="0.0810%" height="15" fill="rgb(212,158,42)" fg:x="348" fg:w="1"/><text x="28.4281%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.4211%" y="357" width="0.1619%" height="15" fill="rgb(228,193,18)" fg:x="351" fg:w="2"/><text x="28.6711%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.4211%" y="341" width="0.1619%" height="15" fill="rgb(245,172,29)" fg:x="351" fg:w="2"/><text x="28.6711%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.4211%" y="325" width="0.1619%" height="15" fill="rgb(207,98,24)" fg:x="351" fg:w="2"/><text x="28.6711%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.4211%" y="309" width="0.1619%" height="15" fill="rgb(249,92,26)" fg:x="351" fg:w="2"/><text x="28.6711%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.5020%" y="293" width="0.0810%" height="15" fill="rgb(217,176,26)" fg:x="352" fg:w="1"/><text x="28.7520%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.5020%" y="277" width="0.0810%" height="15" fill="rgb(221,8,39)" fg:x="352" fg:w="1"/><text x="28.7520%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.5020%" y="261" width="0.0810%" height="15" fill="rgb(208,90,18)" fg:x="352" fg:w="1"/><text x="28.7520%" y="271.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.7449%" y="341" width="0.1619%" height="15" fill="rgb(207,202,30)" fg:x="355" fg:w="2"/><text x="28.9949%" y="351.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.7449%" y="325" width="0.1619%" height="15" fill="rgb(231,124,22)" fg:x="355" fg:w="2"/><text x="28.9949%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.7449%" y="309" width="0.1619%" height="15" fill="rgb(206,15,5)" fg:x="355" fg:w="2"/><text x="28.9949%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8259%" y="293" width="0.0810%" height="15" fill="rgb(239,16,52)" fg:x="356" fg:w="1"/><text x="29.0759%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.8259%" y="277" width="0.0810%" height="15" fill="rgb(245,213,29)" fg:x="356" fg:w="1"/><text x="29.0759%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.8259%" y="261" width="0.0810%" height="15" fill="rgb(213,203,36)" fg:x="356" fg:w="1"/><text x="29.0759%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.8259%" y="245" width="0.0810%" height="15" fill="rgb(209,55,18)" fg:x="356" fg:w="1"/><text x="29.0759%" y="255.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="28.5830%" y="357" width="0.4858%" height="15" fill="rgb(207,133,49)" fg:x="353" fg:w="6"/><text x="28.8330%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="28.9069%" y="341" width="0.1619%" height="15" fill="rgb(240,33,46)" fg:x="357" fg:w="2"/><text x="29.1569%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="28.2591%" y="373" width="1.0526%" height="15" fill="rgb(212,35,2)" fg:x="349" fg:w="13"/><text x="28.5091%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.0688%" y="357" width="0.2429%" height="15" fill="rgb(231,119,28)" fg:x="359" fg:w="3"/><text x="29.3188%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.2308%" y="341" width="0.0810%" height="15" fill="rgb(252,178,7)" fg:x="361" fg:w="1"/><text x="29.4808%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.2308%" y="325" width="0.0810%" height="15" fill="rgb(251,91,4)" fg:x="361" fg:w="1"/><text x="29.4808%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3117%" y="341" width="0.0810%" height="15" fill="rgb(233,122,19)" fg:x="362" fg:w="1"/><text x="29.5617%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.70%)</title><rect x="27.7733%" y="389" width="1.7004%" height="15" fill="rgb(231,208,46)" fg:x="343" fg:w="21"/><text x="28.0233%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.3117%" y="373" width="0.1619%" height="15" fill="rgb(243,15,41)" fg:x="362" fg:w="2"/><text x="29.5617%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.3117%" y="357" width="0.1619%" height="15" fill="rgb(210,32,43)" fg:x="362" fg:w="2"/><text x="29.5617%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="29.3927%" y="341" width="0.0810%" height="15" fill="rgb(222,177,15)" fg:x="363" fg:w="1"/><text x="29.6427%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (38 samples, 3.08%)</title><rect x="26.4777%" y="421" width="3.0769%" height="15" fill="rgb(244,121,34)" fg:x="327" fg:w="38"/><text x="26.7277%" y="431.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.59%)</title><rect x="26.9636%" y="405" width="2.5911%" height="15" fill="rgb(234,138,4)" fg:x="333" fg:w="32"/><text x="27.2136%" y="415.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.4737%" y="389" width="0.0810%" height="15" fill="rgb(240,97,48)" fg:x="364" fg:w="1"/><text x="29.7237%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.4737%" y="373" width="0.0810%" height="15" fill="rgb(237,65,54)" fg:x="364" fg:w="1"/><text x="29.7237%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.4737%" y="357" width="0.0810%" height="15" fill="rgb(214,25,24)" fg:x="364" fg:w="1"/><text x="29.7237%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.4737%" y="341" width="0.0810%" height="15" fill="rgb(213,5,3)" fg:x="364" fg:w="1"/><text x="29.7237%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.4737%" y="325" width="0.0810%" height="15" fill="rgb(219,81,29)" fg:x="364" fg:w="1"/><text x="29.7237%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="29.5547%" y="389" width="0.0810%" height="15" fill="rgb(220,43,48)" fg:x="365" fg:w="1"/><text x="29.8047%" y="399.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="29.6356%" y="389" width="0.0810%" height="15" fill="rgb(239,157,2)" fg:x="366" fg:w="1"/><text x="29.8856%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="29.6356%" y="373" width="0.0810%" height="15" fill="rgb(213,104,43)" fg:x="366" fg:w="1"/><text x="29.8856%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="29.6356%" y="357" width="0.0810%" height="15" fill="rgb(237,84,9)" fg:x="366" fg:w="1"/><text x="29.8856%" y="367.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.08%)</title><rect x="29.6356%" y="341" width="0.0810%" height="15" fill="rgb(252,6,33)" fg:x="366" fg:w="1"/><text x="29.8856%" y="351.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (4 samples, 0.32%)</title><rect x="29.7166%" y="389" width="0.3239%" height="15" fill="rgb(251,172,22)" fg:x="367" fg:w="4"/><text x="29.9666%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="29.7166%" y="373" width="0.3239%" height="15" fill="rgb(244,91,53)" fg:x="367" fg:w="4"/><text x="29.9666%" y="383.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="29.7166%" y="357" width="0.3239%" height="15" fill="rgb(219,29,30)" fg:x="367" fg:w="4"/><text x="29.9666%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.24%)</title><rect x="29.7976%" y="341" width="0.2429%" height="15" fill="rgb(213,3,15)" fg:x="368" fg:w="3"/><text x="30.0476%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="29.9595%" y="325" width="0.0810%" height="15" fill="rgb(208,25,28)" fg:x="370" fg:w="1"/><text x="30.2095%" y="335.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.73%)</title><rect x="29.5547%" y="405" width="0.7287%" height="15" fill="rgb(252,144,25)" fg:x="365" fg:w="9"/><text x="29.8047%" y="415.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="30.0405%" y="389" width="0.2429%" height="15" fill="rgb(226,220,25)" fg:x="371" fg:w="3"/><text x="30.2905%" y="399.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="30.2024%" y="373" width="0.0810%" height="15" fill="rgb(212,131,28)" fg:x="373" fg:w="1"/><text x="30.4524%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="30.3644%" y="373" width="0.3239%" height="15" fill="rgb(219,143,52)" fg:x="375" fg:w="4"/><text x="30.6144%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="30.5263%" y="357" width="0.1619%" height="15" fill="rgb(215,56,7)" fg:x="377" fg:w="2"/><text x="30.7763%" y="367.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.6883%" y="373" width="0.0810%" height="15" fill="rgb(239,59,51)" fg:x="379" fg:w="1"/><text x="30.9383%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="30.7692%" y="357" width="0.0810%" height="15" fill="rgb(209,215,4)" fg:x="380" fg:w="1"/><text x="31.0192%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="30.7692%" y="373" width="0.1619%" height="15" fill="rgb(221,118,39)" fg:x="380" fg:w="2"/><text x="31.0192%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.8502%" y="357" width="0.0810%" height="15" fill="rgb(236,6,44)" fg:x="381" fg:w="1"/><text x="31.1002%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.4170%" y="325" width="0.0810%" height="15" fill="rgb(216,122,9)" fg:x="388" fg:w="1"/><text x="31.6670%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="31.6599%" y="293" width="0.0810%" height="15" fill="rgb(244,134,42)" fg:x="391" fg:w="1"/><text x="31.9099%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6599%" y="277" width="0.0810%" height="15" fill="rgb(209,189,35)" fg:x="391" fg:w="1"/><text x="31.9099%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="31.4980%" y="325" width="0.3239%" height="15" fill="rgb(250,47,36)" fg:x="389" fg:w="4"/><text x="31.7480%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="31.5789%" y="309" width="0.2429%" height="15" fill="rgb(252,112,4)" fg:x="390" fg:w="3"/><text x="31.8289%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7409%" y="293" width="0.0810%" height="15" fill="rgb(221,79,51)" fg:x="392" fg:w="1"/><text x="31.9909%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.8219%" y="293" width="0.0810%" height="15" fill="rgb(232,65,53)" fg:x="393" fg:w="1"/><text x="32.0719%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9838%" y="261" width="0.0810%" height="15" fill="rgb(211,37,7)" fg:x="395" fg:w="1"/><text x="32.2338%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9838%" y="245" width="0.0810%" height="15" fill="rgb(234,221,18)" fg:x="395" fg:w="1"/><text x="32.2338%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="31.9838%" y="277" width="0.2429%" height="15" fill="rgb(220,158,26)" fg:x="395" fg:w="3"/><text x="32.2338%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.0648%" y="261" width="0.1619%" height="15" fill="rgb(220,70,6)" fg:x="396" fg:w="2"/><text x="32.3148%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1457%" y="245" width="0.0810%" height="15" fill="rgb(250,39,48)" fg:x="397" fg:w="1"/><text x="32.3957%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="31.8219%" y="309" width="0.4858%" height="15" fill="rgb(206,40,27)" fg:x="393" fg:w="6"/><text x="32.0719%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="31.9028%" y="293" width="0.4049%" height="15" fill="rgb(247,80,36)" fg:x="394" fg:w="5"/><text x="32.1528%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="32.2267%" y="277" width="0.0810%" height="15" fill="rgb(222,9,20)" fg:x="398" fg:w="1"/><text x="32.4767%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="32.2267%" y="261" width="0.0810%" height="15" fill="rgb(217,26,45)" fg:x="398" fg:w="1"/><text x="32.4767%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="31.2551%" y="341" width="1.1336%" height="15" fill="rgb(221,67,14)" fg:x="386" fg:w="14"/><text x="31.5051%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="31.8219%" y="325" width="0.5668%" height="15" fill="rgb(248,100,24)" fg:x="393" fg:w="7"/><text x="32.0719%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3077%" y="309" width="0.0810%" height="15" fill="rgb(230,187,16)" fg:x="399" fg:w="1"/><text x="32.5577%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.38%)</title><rect x="31.0931%" y="357" width="1.3765%" height="15" fill="rgb(205,108,13)" fg:x="384" fg:w="17"/><text x="31.3431%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="32.3887%" y="341" width="0.0810%" height="15" fill="rgb(235,71,51)" fg:x="400" fg:w="1"/><text x="32.6387%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3887%" y="325" width="0.0810%" height="15" fill="rgb(251,172,48)" fg:x="400" fg:w="1"/><text x="32.6387%" y="335.50"></text></g><g><title>engine::session::Session::flush (95 samples, 7.69%)</title><rect x="24.9393%" y="533" width="7.6923%" height="15" fill="rgb(240,96,49)" fg:x="308" fg:w="95"/><text x="25.1893%" y="543.50">engine::ses..</text></g><g><title>engine::session::Session::save_changes (92 samples, 7.45%)</title><rect x="25.1822%" y="517" width="7.4494%" height="15" fill="rgb(235,46,36)" fg:x="311" fg:w="92"/><text x="25.4322%" y="527.50">engine::se..</text></g><g><title>engine::session::state::State::close (90 samples, 7.29%)</title><rect x="25.3441%" y="501" width="7.2874%" height="15" fill="rgb(244,3,49)" fg:x="313" fg:w="90"/><text x="25.5941%" y="511.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (90 samples, 7.29%)</title><rect x="25.3441%" y="485" width="7.2874%" height="15" fill="rgb(206,78,54)" fg:x="313" fg:w="90"/><text x="25.5941%" y="495.50">engine::se..</text></g><g><title>core::iter::adapters::try_process (85 samples, 6.88%)</title><rect x="25.7490%" y="469" width="6.8826%" height="15" fill="rgb(208,85,42)" fg:x="318" fg:w="85"/><text x="25.9990%" y="479.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (85 samples, 6.88%)</title><rect x="25.7490%" y="453" width="6.8826%" height="15" fill="rgb(219,196,21)" fg:x="318" fg:w="85"/><text x="25.9990%" y="463.50">&lt;alloc::v..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (85 samples, 6.88%)</title><rect x="25.7490%" y="437" width="6.8826%" height="15" fill="rgb(238,19,9)" fg:x="318" fg:w="85"/><text x="25.9990%" y="447.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (38 samples, 3.08%)</title><rect x="29.5547%" y="421" width="3.0769%" height="15" fill="rgb(206,86,13)" fg:x="365" fg:w="38"/><text x="29.8047%" y="431.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.35%)</title><rect x="30.2834%" y="405" width="2.3482%" height="15" fill="rgb(214,123,40)" fg:x="374" fg:w="29"/><text x="30.5334%" y="415.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.35%)</title><rect x="30.2834%" y="389" width="2.3482%" height="15" fill="rgb(243,53,5)" fg:x="374" fg:w="29"/><text x="30.5334%" y="399.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 1.70%)</title><rect x="30.9312%" y="373" width="1.7004%" height="15" fill="rgb(254,186,31)" fg:x="382" fg:w="21"/><text x="31.1812%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.4696%" y="357" width="0.1619%" height="15" fill="rgb(221,216,25)" fg:x="401" fg:w="2"/><text x="32.7196%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="32.6316%" y="501" width="0.0810%" height="15" fill="rgb(248,107,42)" fg:x="403" fg:w="1"/><text x="32.8816%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="32.6316%" y="485" width="0.0810%" height="15" fill="rgb(221,85,43)" fg:x="403" fg:w="1"/><text x="32.8816%" y="495.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="32.7126%" y="501" width="0.0810%" height="15" fill="rgb(225,34,24)" fg:x="404" fg:w="1"/><text x="32.9626%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7126%" y="485" width="0.0810%" height="15" fill="rgb(211,119,1)" fg:x="404" fg:w="1"/><text x="32.9626%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="32.6316%" y="533" width="0.2429%" height="15" fill="rgb(254,216,46)" fg:x="403" fg:w="3"/><text x="32.8816%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.24%)</title><rect x="32.6316%" y="517" width="0.2429%" height="15" fill="rgb(238,11,38)" fg:x="403" fg:w="3"/><text x="32.8816%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.7935%" y="501" width="0.0810%" height="15" fill="rgb(233,50,15)" fg:x="405" fg:w="1"/><text x="33.0435%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.7935%" y="485" width="0.0810%" height="15" fill="rgb(217,181,29)" fg:x="405" fg:w="1"/><text x="33.0435%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.7935%" y="469" width="0.0810%" height="15" fill="rgb(214,56,3)" fg:x="405" fg:w="1"/><text x="33.0435%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="32.7935%" y="453" width="0.0810%" height="15" fill="rgb(230,69,45)" fg:x="405" fg:w="1"/><text x="33.0435%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="32.7935%" y="437" width="0.0810%" height="15" fill="rgb(224,201,50)" fg:x="405" fg:w="1"/><text x="33.0435%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7935%" y="421" width="0.0810%" height="15" fill="rgb(217,228,18)" fg:x="405" fg:w="1"/><text x="33.0435%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7935%" y="405" width="0.0810%" height="15" fill="rgb(239,33,44)" fg:x="405" fg:w="1"/><text x="33.0435%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="32.9555%" y="501" width="0.0810%" height="15" fill="rgb(248,210,23)" fg:x="407" fg:w="1"/><text x="33.2055%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="32.9555%" y="485" width="0.0810%" height="15" fill="rgb(253,135,8)" fg:x="407" fg:w="1"/><text x="33.2055%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.9555%" y="469" width="0.0810%" height="15" fill="rgb(217,98,21)" fg:x="407" fg:w="1"/><text x="33.2055%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="32.9555%" y="453" width="0.0810%" height="15" fill="rgb(253,130,21)" fg:x="407" fg:w="1"/><text x="33.2055%" y="463.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="32.8745%" y="533" width="0.2429%" height="15" fill="rgb(207,81,54)" fg:x="406" fg:w="3"/><text x="33.1245%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="32.8745%" y="517" width="0.2429%" height="15" fill="rgb(232,48,33)" fg:x="406" fg:w="3"/><text x="33.1245%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0364%" y="501" width="0.0810%" height="15" fill="rgb(211,9,35)" fg:x="408" fg:w="1"/><text x="33.2864%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="33.1984%" y="501" width="0.0810%" height="15" fill="rgb(205,152,21)" fg:x="410" fg:w="1"/><text x="33.4484%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.1984%" y="485" width="0.0810%" height="15" fill="rgb(249,21,27)" fg:x="410" fg:w="1"/><text x="33.4484%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.1984%" y="469" width="0.0810%" height="15" fill="rgb(252,29,24)" fg:x="410" fg:w="1"/><text x="33.4484%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.1984%" y="453" width="0.0810%" height="15" fill="rgb(230,130,50)" fg:x="410" fg:w="1"/><text x="33.4484%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.1984%" y="437" width="0.0810%" height="15" fill="rgb(239,144,14)" fg:x="410" fg:w="1"/><text x="33.4484%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="33.1984%" y="421" width="0.0810%" height="15" fill="rgb(227,111,50)" fg:x="410" fg:w="1"/><text x="33.4484%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1984%" y="405" width="0.0810%" height="15" fill="rgb(254,84,20)" fg:x="410" fg:w="1"/><text x="33.4484%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="33.2794%" y="501" width="0.0810%" height="15" fill="rgb(232,90,48)" fg:x="411" fg:w="1"/><text x="33.5294%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="33.2794%" y="485" width="0.0810%" height="15" fill="rgb(253,63,47)" fg:x="411" fg:w="1"/><text x="33.5294%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="33.2794%" y="469" width="0.0810%" height="15" fill="rgb(251,146,35)" fg:x="411" fg:w="1"/><text x="33.5294%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.2794%" y="453" width="0.0810%" height="15" fill="rgb(229,192,35)" fg:x="411" fg:w="1"/><text x="33.5294%" y="463.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.2794%" y="437" width="0.0810%" height="15" fill="rgb(225,68,9)" fg:x="411" fg:w="1"/><text x="33.5294%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.2794%" y="421" width="0.0810%" height="15" fill="rgb(214,97,34)" fg:x="411" fg:w="1"/><text x="33.5294%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2794%" y="405" width="0.0810%" height="15" fill="rgb(253,31,26)" fg:x="411" fg:w="1"/><text x="33.5294%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2794%" y="389" width="0.0810%" height="15" fill="rgb(225,151,47)" fg:x="411" fg:w="1"/><text x="33.5294%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2794%" y="373" width="0.0810%" height="15" fill="rgb(206,185,9)" fg:x="411" fg:w="1"/><text x="33.5294%" y="383.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="33.3603%" y="469" width="0.0810%" height="15" fill="rgb(249,65,17)" fg:x="412" fg:w="1"/><text x="33.6103%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="33.3603%" y="453" width="0.0810%" height="15" fill="rgb(220,110,10)" fg:x="412" fg:w="1"/><text x="33.6103%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3603%" y="437" width="0.0810%" height="15" fill="rgb(222,198,49)" fg:x="412" fg:w="1"/><text x="33.6103%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3603%" y="421" width="0.0810%" height="15" fill="rgb(239,81,13)" fg:x="412" fg:w="1"/><text x="33.6103%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.3603%" y="405" width="0.0810%" height="15" fill="rgb(216,128,11)" fg:x="412" fg:w="1"/><text x="33.6103%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3603%" y="389" width="0.0810%" height="15" fill="rgb(247,156,8)" fg:x="412" fg:w="1"/><text x="33.6103%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3603%" y="373" width="0.0810%" height="15" fill="rgb(219,173,1)" fg:x="412" fg:w="1"/><text x="33.6103%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3603%" y="357" width="0.0810%" height="15" fill="rgb(227,42,24)" fg:x="412" fg:w="1"/><text x="33.6103%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3603%" y="341" width="0.0810%" height="15" fill="rgb(253,219,50)" fg:x="412" fg:w="1"/><text x="33.6103%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="33.3603%" y="485" width="0.1619%" height="15" fill="rgb(215,191,54)" fg:x="412" fg:w="2"/><text x="33.6103%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4413%" y="469" width="0.0810%" height="15" fill="rgb(238,83,12)" fg:x="413" fg:w="1"/><text x="33.6913%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4413%" y="453" width="0.0810%" height="15" fill="rgb(205,124,9)" fg:x="413" fg:w="1"/><text x="33.6913%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.4413%" y="437" width="0.0810%" height="15" fill="rgb(253,174,7)" fg:x="413" fg:w="1"/><text x="33.6913%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.4413%" y="421" width="0.0810%" height="15" fill="rgb(206,134,49)" fg:x="413" fg:w="1"/><text x="33.6913%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.4413%" y="405" width="0.0810%" height="15" fill="rgb(221,89,20)" fg:x="413" fg:w="1"/><text x="33.6913%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4413%" y="389" width="0.0810%" height="15" fill="rgb(240,205,13)" fg:x="413" fg:w="1"/><text x="33.6913%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4413%" y="373" width="0.0810%" height="15" fill="rgb(237,174,32)" fg:x="413" fg:w="1"/><text x="33.6913%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.4413%" y="357" width="0.0810%" height="15" fill="rgb(226,12,15)" fg:x="413" fg:w="1"/><text x="33.6913%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.4413%" y="341" width="0.0810%" height="15" fill="rgb(245,160,52)" fg:x="413" fg:w="1"/><text x="33.6913%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.4413%" y="325" width="0.0810%" height="15" fill="rgb(253,80,21)" fg:x="413" fg:w="1"/><text x="33.6913%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.4413%" y="309" width="0.0810%" height="15" fill="rgb(231,225,22)" fg:x="413" fg:w="1"/><text x="33.6913%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4413%" y="293" width="0.0810%" height="15" fill="rgb(253,185,12)" fg:x="413" fg:w="1"/><text x="33.6913%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6032%" y="453" width="0.0810%" height="15" fill="rgb(234,197,21)" fg:x="415" fg:w="1"/><text x="33.8532%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6032%" y="437" width="0.0810%" height="15" fill="rgb(210,47,30)" fg:x="415" fg:w="1"/><text x="33.8532%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="33.6032%" y="421" width="0.0810%" height="15" fill="rgb(246,139,27)" fg:x="415" fg:w="1"/><text x="33.8532%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.6842%" y="453" width="0.0810%" height="15" fill="rgb(226,130,16)" fg:x="416" fg:w="1"/><text x="33.9342%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.6842%" y="437" width="0.0810%" height="15" fill="rgb(237,208,20)" fg:x="416" fg:w="1"/><text x="33.9342%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6842%" y="421" width="0.0810%" height="15" fill="rgb(245,186,28)" fg:x="416" fg:w="1"/><text x="33.9342%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6842%" y="405" width="0.0810%" height="15" fill="rgb(238,105,39)" fg:x="416" fg:w="1"/><text x="33.9342%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.7652%" y="405" width="0.0810%" height="15" fill="rgb(253,228,11)" fg:x="417" fg:w="1"/><text x="34.0152%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.7652%" y="389" width="0.0810%" height="15" fill="rgb(224,136,38)" fg:x="417" fg:w="1"/><text x="34.0152%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7652%" y="373" width="0.0810%" height="15" fill="rgb(211,3,25)" fg:x="417" fg:w="1"/><text x="34.0152%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.8462%" y="373" width="0.0810%" height="15" fill="rgb(238,66,34)" fg:x="418" fg:w="1"/><text x="34.0962%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.8462%" y="357" width="0.0810%" height="15" fill="rgb(223,188,11)" fg:x="418" fg:w="1"/><text x="34.0962%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8462%" y="341" width="0.0810%" height="15" fill="rgb(221,10,35)" fg:x="418" fg:w="1"/><text x="34.0962%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="33.7652%" y="437" width="0.4049%" height="15" fill="rgb(223,18,44)" fg:x="417" fg:w="5"/><text x="34.0152%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="33.7652%" y="421" width="0.4049%" height="15" fill="rgb(220,97,41)" fg:x="417" fg:w="5"/><text x="34.0152%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="33.8462%" y="405" width="0.3239%" height="15" fill="rgb(206,95,45)" fg:x="418" fg:w="4"/><text x="34.0962%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="33.8462%" y="389" width="0.3239%" height="15" fill="rgb(209,96,13)" fg:x="418" fg:w="4"/><text x="34.0962%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="33.9271%" y="373" width="0.2429%" height="15" fill="rgb(237,39,34)" fg:x="419" fg:w="3"/><text x="34.1771%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="34.0891%" y="357" width="0.0810%" height="15" fill="rgb(213,49,47)" fg:x="421" fg:w="1"/><text x="34.3391%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="34.0891%" y="341" width="0.0810%" height="15" fill="rgb(205,107,27)" fg:x="421" fg:w="1"/><text x="34.3391%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="33.1984%" y="517" width="1.0526%" height="15" fill="rgb(212,142,9)" fg:x="410" fg:w="13"/><text x="33.4484%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.89%)</title><rect x="33.3603%" y="501" width="0.8907%" height="15" fill="rgb(226,182,0)" fg:x="412" fg:w="11"/><text x="33.6103%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.73%)</title><rect x="33.5223%" y="485" width="0.7287%" height="15" fill="rgb(231,3,53)" fg:x="414" fg:w="9"/><text x="33.7723%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="33.5223%" y="469" width="0.7287%" height="15" fill="rgb(246,111,28)" fg:x="414" fg:w="9"/><text x="33.7723%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="33.7652%" y="453" width="0.4858%" height="15" fill="rgb(254,183,7)" fg:x="417" fg:w="6"/><text x="34.0152%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1700%" y="437" width="0.0810%" height="15" fill="rgb(247,177,28)" fg:x="422" fg:w="1"/><text x="34.4200%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1700%" y="421" width="0.0810%" height="15" fill="rgb(244,43,1)" fg:x="422" fg:w="1"/><text x="34.4200%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1700%" y="405" width="0.0810%" height="15" fill="rgb(207,2,35)" fg:x="422" fg:w="1"/><text x="34.4200%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.2510%" y="485" width="0.0810%" height="15" fill="rgb(213,83,22)" fg:x="423" fg:w="1"/><text x="34.5010%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2510%" y="469" width="0.0810%" height="15" fill="rgb(246,212,13)" fg:x="423" fg:w="1"/><text x="34.5010%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.2510%" y="517" width="0.1619%" height="15" fill="rgb(213,127,46)" fg:x="423" fg:w="2"/><text x="34.5010%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.2510%" y="501" width="0.1619%" height="15" fill="rgb(219,215,39)" fg:x="423" fg:w="2"/><text x="34.5010%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.3320%" y="485" width="0.0810%" height="15" fill="rgb(227,99,17)" fg:x="424" fg:w="1"/><text x="34.5820%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.4130%" y="469" width="0.1619%" height="15" fill="rgb(208,155,18)" fg:x="425" fg:w="2"/><text x="34.6630%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4939%" y="453" width="0.0810%" height="15" fill="rgb(223,204,38)" fg:x="426" fg:w="1"/><text x="34.7439%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.4130%" y="501" width="0.2429%" height="15" fill="rgb(212,114,21)" fg:x="425" fg:w="3"/><text x="34.6630%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.4130%" y="485" width="0.2429%" height="15" fill="rgb(250,74,13)" fg:x="425" fg:w="3"/><text x="34.6630%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5749%" y="469" width="0.0810%" height="15" fill="rgb(234,7,1)" fg:x="427" fg:w="1"/><text x="34.8249%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6559%" y="437" width="0.0810%" height="15" fill="rgb(207,138,31)" fg:x="428" fg:w="1"/><text x="34.9059%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="34.4130%" y="517" width="0.4049%" height="15" fill="rgb(215,186,42)" fg:x="425" fg:w="5"/><text x="34.6630%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.6559%" y="501" width="0.1619%" height="15" fill="rgb(229,205,49)" fg:x="428" fg:w="2"/><text x="34.9059%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.6559%" y="485" width="0.1619%" height="15" fill="rgb(216,156,32)" fg:x="428" fg:w="2"/><text x="34.9059%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="34.6559%" y="469" width="0.1619%" height="15" fill="rgb(238,7,21)" fg:x="428" fg:w="2"/><text x="34.9059%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.6559%" y="453" width="0.1619%" height="15" fill="rgb(249,190,22)" fg:x="428" fg:w="2"/><text x="34.9059%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.7368%" y="437" width="0.0810%" height="15" fill="rgb(253,51,31)" fg:x="429" fg:w="1"/><text x="34.9868%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.7368%" y="421" width="0.0810%" height="15" fill="rgb(237,90,54)" fg:x="429" fg:w="1"/><text x="34.9868%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.7368%" y="405" width="0.0810%" height="15" fill="rgb(250,214,33)" fg:x="429" fg:w="1"/><text x="34.9868%" y="415.50"></text></g><g><title>plugins_core::build::Build::save (22 samples, 1.78%)</title><rect x="33.1174%" y="533" width="1.7814%" height="15" fill="rgb(237,10,49)" fg:x="409" fg:w="22"/><text x="33.3674%" y="543.50">p..</text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="34.8178%" y="517" width="0.0810%" height="15" fill="rgb(241,56,36)" fg:x="430" fg:w="1"/><text x="35.0678%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.8178%" y="501" width="0.0810%" height="15" fill="rgb(227,164,12)" fg:x="430" fg:w="1"/><text x="35.0678%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="34.8988%" y="533" width="0.0810%" height="15" fill="rgb(249,149,35)" fg:x="431" fg:w="1"/><text x="35.1488%" y="543.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="34.8988%" y="517" width="0.0810%" height="15" fill="rgb(238,227,50)" fg:x="431" fg:w="1"/><text x="35.1488%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="34.8988%" y="501" width="0.0810%" height="15" fill="rgb(235,102,45)" fg:x="431" fg:w="1"/><text x="35.1488%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="34.8988%" y="485" width="0.0810%" height="15" fill="rgb(211,10,38)" fg:x="431" fg:w="1"/><text x="35.1488%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.8988%" y="469" width="0.0810%" height="15" fill="rgb(219,77,48)" fg:x="431" fg:w="1"/><text x="35.1488%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0607%" y="501" width="0.0810%" height="15" fill="rgb(246,6,15)" fg:x="433" fg:w="1"/><text x="35.3107%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.2227%" y="373" width="0.0810%" height="15" fill="rgb(207,220,2)" fg:x="435" fg:w="1"/><text x="35.4727%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="35.1417%" y="453" width="0.2429%" height="15" fill="rgb(242,48,14)" fg:x="434" fg:w="3"/><text x="35.3917%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.2227%" y="437" width="0.1619%" height="15" fill="rgb(218,19,27)" fg:x="435" fg:w="2"/><text x="35.4727%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.2227%" y="421" width="0.1619%" height="15" fill="rgb(228,0,35)" fg:x="435" fg:w="2"/><text x="35.4727%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.2227%" y="405" width="0.1619%" height="15" fill="rgb(244,142,54)" fg:x="435" fg:w="2"/><text x="35.4727%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.2227%" y="389" width="0.1619%" height="15" fill="rgb(243,217,40)" fg:x="435" fg:w="2"/><text x="35.4727%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.3036%" y="373" width="0.0810%" height="15" fill="rgb(207,114,16)" fg:x="436" fg:w="1"/><text x="35.5536%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.3036%" y="357" width="0.0810%" height="15" fill="rgb(224,33,25)" fg:x="436" fg:w="1"/><text x="35.5536%" y="367.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="35.1417%" y="469" width="0.3239%" height="15" fill="rgb(230,93,54)" fg:x="434" fg:w="4"/><text x="35.3917%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.3846%" y="453" width="0.0810%" height="15" fill="rgb(224,56,24)" fg:x="437" fg:w="1"/><text x="35.6346%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.3846%" y="437" width="0.0810%" height="15" fill="rgb(235,189,50)" fg:x="437" fg:w="1"/><text x="35.6346%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.4656%" y="437" width="0.0810%" height="15" fill="rgb(242,173,8)" fg:x="438" fg:w="1"/><text x="35.7156%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.4656%" y="421" width="0.0810%" height="15" fill="rgb(209,206,10)" fg:x="438" fg:w="1"/><text x="35.7156%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.4656%" y="405" width="0.0810%" height="15" fill="rgb(213,182,44)" fg:x="438" fg:w="1"/><text x="35.7156%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5466%" y="437" width="0.0810%" height="15" fill="rgb(243,51,15)" fg:x="439" fg:w="1"/><text x="35.7966%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5466%" y="421" width="0.0810%" height="15" fill="rgb(241,13,14)" fg:x="439" fg:w="1"/><text x="35.7966%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5466%" y="405" width="0.0810%" height="15" fill="rgb(239,147,24)" fg:x="439" fg:w="1"/><text x="35.7966%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.5466%" y="389" width="0.0810%" height="15" fill="rgb(223,129,16)" fg:x="439" fg:w="1"/><text x="35.7966%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.5466%" y="373" width="0.0810%" height="15" fill="rgb(209,169,13)" fg:x="439" fg:w="1"/><text x="35.7966%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.5466%" y="357" width="0.0810%" height="15" fill="rgb(235,159,41)" fg:x="439" fg:w="1"/><text x="35.7966%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="35.5466%" y="341" width="0.0810%" height="15" fill="rgb(223,219,48)" fg:x="439" fg:w="1"/><text x="35.7966%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.5466%" y="325" width="0.0810%" height="15" fill="rgb(236,80,13)" fg:x="439" fg:w="1"/><text x="35.7966%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.6275%" y="437" width="0.0810%" height="15" fill="rgb(213,5,6)" fg:x="440" fg:w="1"/><text x="35.8775%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.32%)</title><rect x="35.4656%" y="453" width="0.3239%" height="15" fill="rgb(205,59,21)" fg:x="438" fg:w="4"/><text x="35.7156%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7085%" y="437" width="0.0810%" height="15" fill="rgb(247,137,35)" fg:x="441" fg:w="1"/><text x="35.9585%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7085%" y="421" width="0.0810%" height="15" fill="rgb(242,208,28)" fg:x="441" fg:w="1"/><text x="35.9585%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.7085%" y="405" width="0.0810%" height="15" fill="rgb(245,62,25)" fg:x="441" fg:w="1"/><text x="35.9585%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7085%" y="389" width="0.0810%" height="15" fill="rgb(233,99,54)" fg:x="441" fg:w="1"/><text x="35.9585%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.7085%" y="373" width="0.0810%" height="15" fill="rgb(213,10,37)" fg:x="441" fg:w="1"/><text x="35.9585%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (9 samples, 0.73%)</title><rect x="35.1417%" y="501" width="0.7287%" height="15" fill="rgb(235,143,30)" fg:x="434" fg:w="9"/><text x="35.3917%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.73%)</title><rect x="35.1417%" y="485" width="0.7287%" height="15" fill="rgb(250,146,33)" fg:x="434" fg:w="9"/><text x="35.3917%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="35.4656%" y="469" width="0.4049%" height="15" fill="rgb(226,198,42)" fg:x="438" fg:w="5"/><text x="35.7156%" y="479.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="35.7895%" y="453" width="0.0810%" height="15" fill="rgb(222,55,6)" fg:x="442" fg:w="1"/><text x="36.0395%" y="463.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="35.8704%" y="485" width="0.0810%" height="15" fill="rgb(213,224,31)" fg:x="443" fg:w="1"/><text x="36.1204%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (13 samples, 1.05%)</title><rect x="34.9798%" y="533" width="1.0526%" height="15" fill="rgb(226,103,35)" fg:x="432" fg:w="13"/><text x="35.2298%" y="543.50"></text></g><g><title>plugins_core::tools::set_occupying (13 samples, 1.05%)</title><rect x="34.9798%" y="517" width="1.0526%" height="15" fill="rgb(205,66,45)" fg:x="432" fg:w="13"/><text x="35.2298%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="35.8704%" y="501" width="0.1619%" height="15" fill="rgb(226,51,42)" fg:x="443" fg:w="2"/><text x="36.1204%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="35.9514%" y="485" width="0.0810%" height="15" fill="rgb(206,69,1)" fg:x="444" fg:w="1"/><text x="36.2014%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="35.9514%" y="469" width="0.0810%" height="15" fill="rgb(213,228,47)" fg:x="444" fg:w="1"/><text x="36.2014%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1134%" y="501" width="0.0810%" height="15" fill="rgb(224,204,18)" fg:x="446" fg:w="1"/><text x="36.3634%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="36.1134%" y="517" width="0.1619%" height="15" fill="rgb(253,187,47)" fg:x="446" fg:w="2"/><text x="36.3634%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.1943%" y="501" width="0.0810%" height="15" fill="rgb(232,61,2)" fg:x="447" fg:w="1"/><text x="36.4443%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.1943%" y="485" width="0.0810%" height="15" fill="rgb(213,132,35)" fg:x="447" fg:w="1"/><text x="36.4443%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="36.1943%" y="469" width="0.0810%" height="15" fill="rgb(247,33,21)" fg:x="447" fg:w="1"/><text x="36.4443%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="36.1943%" y="453" width="0.0810%" height="15" fill="rgb(233,71,46)" fg:x="447" fg:w="1"/><text x="36.4443%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="36.1943%" y="437" width="0.0810%" height="15" fill="rgb(222,173,43)" fg:x="447" fg:w="1"/><text x="36.4443%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (6 samples, 0.49%)</title><rect x="36.0324%" y="533" width="0.4858%" height="15" fill="rgb(249,218,47)" fg:x="445" fg:w="6"/><text x="36.2824%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="36.2753%" y="517" width="0.2429%" height="15" fill="rgb(254,185,48)" fg:x="448" fg:w="3"/><text x="36.5253%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="36.2753%" y="501" width="0.2429%" height="15" fill="rgb(252,165,50)" fg:x="448" fg:w="3"/><text x="36.5253%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="36.2753%" y="485" width="0.2429%" height="15" fill="rgb(206,219,6)" fg:x="448" fg:w="3"/><text x="36.5253%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="36.2753%" y="469" width="0.2429%" height="15" fill="rgb(212,212,45)" fg:x="448" fg:w="3"/><text x="36.5253%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="36.2753%" y="453" width="0.2429%" height="15" fill="rgb(221,31,9)" fg:x="448" fg:w="3"/><text x="36.5253%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="36.2753%" y="437" width="0.2429%" height="15" fill="rgb(234,198,39)" fg:x="448" fg:w="3"/><text x="36.5253%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.3563%" y="421" width="0.1619%" height="15" fill="rgb(252,145,46)" fg:x="449" fg:w="2"/><text x="36.6063%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4372%" y="405" width="0.0810%" height="15" fill="rgb(237,149,0)" fg:x="450" fg:w="1"/><text x="36.6872%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.5182%" y="485" width="0.0810%" height="15" fill="rgb(229,65,5)" fg:x="451" fg:w="1"/><text x="36.7682%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="36.5182%" y="469" width="0.0810%" height="15" fill="rgb(235,60,36)" fg:x="451" fg:w="1"/><text x="36.7682%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.5182%" y="453" width="0.0810%" height="15" fill="rgb(222,47,18)" fg:x="451" fg:w="1"/><text x="36.7682%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5182%" y="437" width="0.0810%" height="15" fill="rgb(235,114,22)" fg:x="451" fg:w="1"/><text x="36.7682%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.5182%" y="421" width="0.0810%" height="15" fill="rgb(209,167,11)" fg:x="451" fg:w="1"/><text x="36.7682%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.5182%" y="405" width="0.0810%" height="15" fill="rgb(251,73,18)" fg:x="451" fg:w="1"/><text x="36.7682%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.5182%" y="389" width="0.0810%" height="15" fill="rgb(217,60,17)" fg:x="451" fg:w="1"/><text x="36.7682%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="36.5182%" y="517" width="0.1619%" height="15" fill="rgb(224,36,37)" fg:x="451" fg:w="2"/><text x="36.7682%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="36.5182%" y="501" width="0.1619%" height="15" fill="rgb(211,21,32)" fg:x="451" fg:w="2"/><text x="36.7682%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="36.5992%" y="485" width="0.0810%" height="15" fill="rgb(231,55,48)" fg:x="452" fg:w="1"/><text x="36.8492%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="36.5992%" y="469" width="0.0810%" height="15" fill="rgb(227,42,18)" fg:x="452" fg:w="1"/><text x="36.8492%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5992%" y="453" width="0.0810%" height="15" fill="rgb(217,2,27)" fg:x="452" fg:w="1"/><text x="36.8492%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5992%" y="437" width="0.0810%" height="15" fill="rgb(251,138,23)" fg:x="452" fg:w="1"/><text x="36.8492%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5992%" y="421" width="0.0810%" height="15" fill="rgb(226,184,11)" fg:x="452" fg:w="1"/><text x="36.8492%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5992%" y="405" width="0.0810%" height="15" fill="rgb(242,142,12)" fg:x="452" fg:w="1"/><text x="36.8492%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.6802%" y="469" width="0.0810%" height="15" fill="rgb(234,187,18)" fg:x="453" fg:w="1"/><text x="36.9302%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="36.6802%" y="453" width="0.0810%" height="15" fill="rgb(237,44,42)" fg:x="453" fg:w="1"/><text x="36.9302%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6802%" y="437" width="0.0810%" height="15" fill="rgb(211,90,23)" fg:x="453" fg:w="1"/><text x="36.9302%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="36.6802%" y="517" width="0.1619%" height="15" fill="rgb(207,81,18)" fg:x="453" fg:w="2"/><text x="36.9302%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="36.6802%" y="501" width="0.1619%" height="15" fill="rgb(222,107,28)" fg:x="453" fg:w="2"/><text x="36.9302%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="36.6802%" y="485" width="0.1619%" height="15" fill="rgb(237,83,52)" fg:x="453" fg:w="2"/><text x="36.9302%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="36.7611%" y="469" width="0.0810%" height="15" fill="rgb(208,67,11)" fg:x="454" fg:w="1"/><text x="37.0111%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="36.7611%" y="453" width="0.0810%" height="15" fill="rgb(249,157,49)" fg:x="454" fg:w="1"/><text x="37.0111%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7611%" y="437" width="0.0810%" height="15" fill="rgb(243,200,1)" fg:x="454" fg:w="1"/><text x="37.0111%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7611%" y="421" width="0.0810%" height="15" fill="rgb(225,162,37)" fg:x="454" fg:w="1"/><text x="37.0111%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.7611%" y="405" width="0.0810%" height="15" fill="rgb(242,92,13)" fg:x="454" fg:w="1"/><text x="37.0111%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7611%" y="389" width="0.0810%" height="15" fill="rgb(220,43,36)" fg:x="454" fg:w="1"/><text x="37.0111%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.7611%" y="373" width="0.0810%" height="15" fill="rgb(213,165,48)" fg:x="454" fg:w="1"/><text x="37.0111%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="36.8421%" y="485" width="0.0810%" height="15" fill="rgb(227,200,9)" fg:x="455" fg:w="1"/><text x="37.0921%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8421%" y="469" width="0.0810%" height="15" fill="rgb(221,222,28)" fg:x="455" fg:w="1"/><text x="37.0921%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="36.8421%" y="453" width="0.0810%" height="15" fill="rgb(223,142,26)" fg:x="455" fg:w="1"/><text x="37.0921%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (159 samples, 12.87%)</title><rect x="24.2105%" y="549" width="12.8745%" height="15" fill="rgb(243,46,9)" fg:x="299" fg:w="159"/><text x="24.4605%" y="559.50">plugins_core::build..</text></g><g><title>plugins_core::tools::set_container (7 samples, 0.57%)</title><rect x="36.5182%" y="533" width="0.5668%" height="15" fill="rgb(250,56,11)" fg:x="451" fg:w="7"/><text x="36.7682%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (3 samples, 0.24%)</title><rect x="36.8421%" y="517" width="0.2429%" height="15" fill="rgb(229,113,5)" fg:x="455" fg:w="3"/><text x="37.0921%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="36.8421%" y="501" width="0.2429%" height="15" fill="rgb(244,108,28)" fg:x="455" fg:w="3"/><text x="37.0921%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="36.9231%" y="485" width="0.1619%" height="15" fill="rgb(242,119,50)" fg:x="456" fg:w="2"/><text x="37.1731%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.9231%" y="469" width="0.1619%" height="15" fill="rgb(224,164,23)" fg:x="456" fg:w="2"/><text x="37.1731%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="37.0040%" y="453" width="0.0810%" height="15" fill="rgb(214,227,44)" fg:x="457" fg:w="1"/><text x="37.2540%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.0040%" y="437" width="0.0810%" height="15" fill="rgb(238,202,4)" fg:x="457" fg:w="1"/><text x="37.2540%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="37.0850%" y="501" width="0.0810%" height="15" fill="rgb(213,190,30)" fg:x="458" fg:w="1"/><text x="37.3350%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.0850%" y="485" width="0.0810%" height="15" fill="rgb(239,15,2)" fg:x="458" fg:w="1"/><text x="37.3350%" y="495.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="37.0850%" y="517" width="0.1619%" height="15" fill="rgb(249,229,4)" fg:x="458" fg:w="2"/><text x="37.3350%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1660%" y="501" width="0.0810%" height="15" fill="rgb(239,75,44)" fg:x="459" fg:w="1"/><text x="37.4160%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="37.0850%" y="549" width="0.2429%" height="15" fill="rgb(251,206,23)" fg:x="458" fg:w="3"/><text x="37.3350%" y="559.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="37.0850%" y="533" width="0.2429%" height="15" fill="rgb(215,208,0)" fg:x="458" fg:w="3"/><text x="37.3350%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="37.2470%" y="517" width="0.0810%" height="15" fill="rgb(230,75,50)" fg:x="460" fg:w="1"/><text x="37.4970%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.3279%" y="517" width="0.0810%" height="15" fill="rgb(246,180,39)" fg:x="461" fg:w="1"/><text x="37.5779%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.3279%" y="501" width="0.0810%" height="15" fill="rgb(249,175,24)" fg:x="461" fg:w="1"/><text x="37.5779%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.3279%" y="485" width="0.0810%" height="15" fill="rgb(247,176,22)" fg:x="461" fg:w="1"/><text x="37.5779%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3279%" y="469" width="0.0810%" height="15" fill="rgb(241,100,24)" fg:x="461" fg:w="1"/><text x="37.5779%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.3279%" y="453" width="0.0810%" height="15" fill="rgb(233,4,35)" fg:x="461" fg:w="1"/><text x="37.5779%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.3279%" y="437" width="0.0810%" height="15" fill="rgb(211,164,46)" fg:x="461" fg:w="1"/><text x="37.5779%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.3279%" y="421" width="0.0810%" height="15" fill="rgb(242,99,53)" fg:x="461" fg:w="1"/><text x="37.5779%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="37.4089%" y="501" width="0.0810%" height="15" fill="rgb(243,45,33)" fg:x="462" fg:w="1"/><text x="37.6589%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.4089%" y="485" width="0.0810%" height="15" fill="rgb(217,55,21)" fg:x="462" fg:w="1"/><text x="37.6589%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="37.4089%" y="469" width="0.0810%" height="15" fill="rgb(245,145,46)" fg:x="462" fg:w="1"/><text x="37.6589%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4089%" y="453" width="0.0810%" height="15" fill="rgb(215,112,45)" fg:x="462" fg:w="1"/><text x="37.6589%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="37.4899%" y="485" width="0.0810%" height="15" fill="rgb(228,104,16)" fg:x="463" fg:w="1"/><text x="37.7399%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4899%" y="469" width="0.0810%" height="15" fill="rgb(239,186,38)" fg:x="463" fg:w="1"/><text x="37.7399%" y="479.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="37.4089%" y="517" width="0.2429%" height="15" fill="rgb(228,38,35)" fg:x="462" fg:w="3"/><text x="37.6589%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="37.4899%" y="501" width="0.1619%" height="15" fill="rgb(251,42,40)" fg:x="463" fg:w="2"/><text x="37.7399%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="37.5709%" y="485" width="0.0810%" height="15" fill="rgb(210,51,19)" fg:x="464" fg:w="1"/><text x="37.8209%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.5709%" y="469" width="0.0810%" height="15" fill="rgb(236,94,42)" fg:x="464" fg:w="1"/><text x="37.8209%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.5709%" y="453" width="0.0810%" height="15" fill="rgb(239,167,16)" fg:x="464" fg:w="1"/><text x="37.8209%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5709%" y="437" width="0.0810%" height="15" fill="rgb(252,175,31)" fg:x="464" fg:w="1"/><text x="37.8209%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6518%" y="485" width="0.0810%" height="15" fill="rgb(206,166,30)" fg:x="465" fg:w="1"/><text x="37.9018%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6518%" y="469" width="0.0810%" height="15" fill="rgb(206,209,37)" fg:x="465" fg:w="1"/><text x="37.9018%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6518%" y="453" width="0.0810%" height="15" fill="rgb(226,91,4)" fg:x="465" fg:w="1"/><text x="37.9018%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6518%" y="437" width="0.0810%" height="15" fill="rgb(222,167,0)" fg:x="465" fg:w="1"/><text x="37.9018%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6518%" y="421" width="0.0810%" height="15" fill="rgb(211,70,14)" fg:x="465" fg:w="1"/><text x="37.9018%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6518%" y="405" width="0.0810%" height="15" fill="rgb(214,84,42)" fg:x="465" fg:w="1"/><text x="37.9018%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6518%" y="389" width="0.0810%" height="15" fill="rgb(235,157,37)" fg:x="465" fg:w="1"/><text x="37.9018%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6518%" y="373" width="0.0810%" height="15" fill="rgb(225,13,6)" fg:x="465" fg:w="1"/><text x="37.9018%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6518%" y="357" width="0.0810%" height="15" fill="rgb(205,202,1)" fg:x="465" fg:w="1"/><text x="37.9018%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6518%" y="341" width="0.0810%" height="15" fill="rgb(232,195,26)" fg:x="465" fg:w="1"/><text x="37.9018%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6518%" y="325" width="0.0810%" height="15" fill="rgb(208,102,26)" fg:x="465" fg:w="1"/><text x="37.9018%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6518%" y="309" width="0.0810%" height="15" fill="rgb(215,41,39)" fg:x="465" fg:w="1"/><text x="37.9018%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="37.7328%" y="485" width="0.0810%" height="15" fill="rgb(247,139,11)" fg:x="466" fg:w="1"/><text x="37.9828%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7328%" y="469" width="0.0810%" height="15" fill="rgb(243,99,6)" fg:x="466" fg:w="1"/><text x="37.9828%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7328%" y="453" width="0.0810%" height="15" fill="rgb(230,168,48)" fg:x="466" fg:w="1"/><text x="37.9828%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.7328%" y="437" width="0.0810%" height="15" fill="rgb(238,227,13)" fg:x="466" fg:w="1"/><text x="37.9828%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7328%" y="421" width="0.0810%" height="15" fill="rgb(209,109,13)" fg:x="466" fg:w="1"/><text x="37.9828%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="37.7328%" y="405" width="0.0810%" height="15" fill="rgb(228,195,1)" fg:x="466" fg:w="1"/><text x="37.9828%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.8138%" y="421" width="0.0810%" height="15" fill="rgb(230,218,0)" fg:x="467" fg:w="1"/><text x="38.0638%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="37.8138%" y="485" width="0.1619%" height="15" fill="rgb(206,1,45)" fg:x="467" fg:w="2"/><text x="38.0638%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="37.8138%" y="469" width="0.1619%" height="15" fill="rgb(209,124,26)" fg:x="467" fg:w="2"/><text x="38.0638%" y="479.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="37.8138%" y="453" width="0.1619%" height="15" fill="rgb(220,59,8)" fg:x="467" fg:w="2"/><text x="38.0638%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.8138%" y="437" width="0.1619%" height="15" fill="rgb(251,41,37)" fg:x="467" fg:w="2"/><text x="38.0638%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8947%" y="421" width="0.0810%" height="15" fill="rgb(239,152,21)" fg:x="468" fg:w="1"/><text x="38.1447%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.8947%" y="405" width="0.0810%" height="15" fill="rgb(226,32,1)" fg:x="468" fg:w="1"/><text x="38.1447%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.8947%" y="389" width="0.0810%" height="15" fill="rgb(230,154,36)" fg:x="468" fg:w="1"/><text x="38.1447%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="37.8947%" y="373" width="0.0810%" height="15" fill="rgb(208,228,43)" fg:x="468" fg:w="1"/><text x="38.1447%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="37.9757%" y="469" width="0.0810%" height="15" fill="rgb(214,203,3)" fg:x="469" fg:w="1"/><text x="38.2257%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="37.9757%" y="453" width="0.0810%" height="15" fill="rgb(207,149,29)" fg:x="469" fg:w="1"/><text x="38.2257%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.9757%" y="437" width="0.0810%" height="15" fill="rgb(250,105,7)" fg:x="469" fg:w="1"/><text x="38.2257%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.9757%" y="421" width="0.0810%" height="15" fill="rgb(232,222,16)" fg:x="469" fg:w="1"/><text x="38.2257%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.9757%" y="405" width="0.0810%" height="15" fill="rgb(209,32,24)" fg:x="469" fg:w="1"/><text x="38.2257%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9757%" y="389" width="0.0810%" height="15" fill="rgb(225,13,6)" fg:x="469" fg:w="1"/><text x="38.2257%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0567%" y="437" width="0.0810%" height="15" fill="rgb(245,226,26)" fg:x="470" fg:w="1"/><text x="38.3067%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="38.1377%" y="437" width="0.0810%" height="15" fill="rgb(229,178,27)" fg:x="471" fg:w="1"/><text x="38.3877%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="38.1377%" y="421" width="0.0810%" height="15" fill="rgb(205,227,28)" fg:x="471" fg:w="1"/><text x="38.3877%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="38.1377%" y="405" width="0.0810%" height="15" fill="rgb(210,191,45)" fg:x="471" fg:w="1"/><text x="38.3877%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="38.1377%" y="389" width="0.0810%" height="15" fill="rgb(206,124,16)" fg:x="471" fg:w="1"/><text x="38.3877%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="37.9757%" y="485" width="0.3239%" height="15" fill="rgb(210,162,0)" fg:x="469" fg:w="4"/><text x="38.2257%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="38.0567%" y="469" width="0.2429%" height="15" fill="rgb(211,54,38)" fg:x="470" fg:w="3"/><text x="38.3067%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.0567%" y="453" width="0.2429%" height="15" fill="rgb(248,192,3)" fg:x="470" fg:w="3"/><text x="38.3067%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="38.2186%" y="437" width="0.0810%" height="15" fill="rgb(233,187,18)" fg:x="472" fg:w="1"/><text x="38.4686%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.2186%" y="421" width="0.0810%" height="15" fill="rgb(237,208,14)" fg:x="472" fg:w="1"/><text x="38.4686%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2186%" y="405" width="0.0810%" height="15" fill="rgb(212,77,1)" fg:x="472" fg:w="1"/><text x="38.4686%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="37.6518%" y="501" width="0.7287%" height="15" fill="rgb(210,163,22)" fg:x="465" fg:w="9"/><text x="37.9018%" y="511.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="38.2996%" y="485" width="0.0810%" height="15" fill="rgb(250,58,28)" fg:x="473" fg:w="1"/><text x="38.5496%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="38.2996%" y="469" width="0.0810%" height="15" fill="rgb(254,28,41)" fg:x="473" fg:w="1"/><text x="38.5496%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.3806%" y="485" width="0.0810%" height="15" fill="rgb(237,162,36)" fg:x="474" fg:w="1"/><text x="38.6306%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="38.3806%" y="501" width="0.1619%" height="15" fill="rgb(232,56,6)" fg:x="474" fg:w="2"/><text x="38.6306%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.4615%" y="485" width="0.0810%" height="15" fill="rgb(216,127,42)" fg:x="475" fg:w="1"/><text x="38.7115%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.4615%" y="469" width="0.0810%" height="15" fill="rgb(241,69,15)" fg:x="475" fg:w="1"/><text x="38.7115%" y="479.50"></text></g><g><title>plugins_core::build::Build::save (12 samples, 0.97%)</title><rect x="37.6518%" y="517" width="0.9717%" height="15" fill="rgb(227,180,19)" fg:x="465" fg:w="12"/><text x="37.9018%" y="527.50"></text></g><g><title>kernel::model::base::EntityGid::new (1 samples, 0.08%)</title><rect x="38.5425%" y="501" width="0.0810%" height="15" fill="rgb(231,188,29)" fg:x="476" fg:w="1"/><text x="38.7925%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (18 samples, 1.46%)</title><rect x="37.3279%" y="549" width="1.4575%" height="15" fill="rgb(224,176,27)" fg:x="461" fg:w="18"/><text x="37.5779%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.46%)</title><rect x="37.3279%" y="533" width="1.4575%" height="15" fill="rgb(249,214,19)" fg:x="461" fg:w="18"/><text x="37.5779%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (2 samples, 0.16%)</title><rect x="38.6235%" y="517" width="0.1619%" height="15" fill="rgb(240,0,4)" fg:x="477" fg:w="2"/><text x="38.8735%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="38.6235%" y="501" width="0.1619%" height="15" fill="rgb(233,28,41)" fg:x="477" fg:w="2"/><text x="38.8735%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="38.6235%" y="485" width="0.1619%" height="15" fill="rgb(220,90,51)" fg:x="477" fg:w="2"/><text x="38.8735%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.7045%" y="469" width="0.0810%" height="15" fill="rgb(250,52,22)" fg:x="478" fg:w="1"/><text x="38.9545%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.7045%" y="453" width="0.0810%" height="15" fill="rgb(231,152,36)" fg:x="478" fg:w="1"/><text x="38.9545%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8664%" y="501" width="0.0810%" height="15" fill="rgb(250,218,4)" fg:x="480" fg:w="1"/><text x="39.1164%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.8664%" y="485" width="0.0810%" height="15" fill="rgb(210,38,21)" fg:x="480" fg:w="1"/><text x="39.1164%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.24%)</title><rect x="38.7854%" y="517" width="0.2429%" height="15" fill="rgb(230,75,13)" fg:x="479" fg:w="3"/><text x="39.0354%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.9474%" y="501" width="0.0810%" height="15" fill="rgb(250,68,53)" fg:x="481" fg:w="1"/><text x="39.1974%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.9474%" y="485" width="0.0810%" height="15" fill="rgb(250,210,16)" fg:x="481" fg:w="1"/><text x="39.1974%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (4 samples, 0.32%)</title><rect x="38.7854%" y="533" width="0.3239%" height="15" fill="rgb(240,132,5)" fg:x="479" fg:w="4"/><text x="39.0354%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.0283%" y="517" width="0.0810%" height="15" fill="rgb(222,148,48)" fg:x="482" fg:w="1"/><text x="39.2783%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="39.0283%" y="501" width="0.0810%" height="15" fill="rgb(247,181,24)" fg:x="482" fg:w="1"/><text x="39.2783%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.1093%" y="533" width="0.0810%" height="15" fill="rgb(239,5,31)" fg:x="483" fg:w="1"/><text x="39.3593%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.1093%" y="517" width="0.0810%" height="15" fill="rgb(241,152,38)" fg:x="483" fg:w="1"/><text x="39.3593%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.1093%" y="501" width="0.0810%" height="15" fill="rgb(246,200,37)" fg:x="483" fg:w="1"/><text x="39.3593%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1093%" y="485" width="0.0810%" height="15" fill="rgb(243,210,26)" fg:x="483" fg:w="1"/><text x="39.3593%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1093%" y="469" width="0.0810%" height="15" fill="rgb(222,22,22)" fg:x="483" fg:w="1"/><text x="39.3593%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.1093%" y="453" width="0.0810%" height="15" fill="rgb(208,129,28)" fg:x="483" fg:w="1"/><text x="39.3593%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1093%" y="437" width="0.0810%" height="15" fill="rgb(254,169,28)" fg:x="483" fg:w="1"/><text x="39.3593%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="39.1903%" y="533" width="0.0810%" height="15" fill="rgb(225,45,17)" fg:x="484" fg:w="1"/><text x="39.4403%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="39.4332%" y="501" width="0.0810%" height="15" fill="rgb(232,199,2)" fg:x="487" fg:w="1"/><text x="39.6832%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="39.4332%" y="485" width="0.0810%" height="15" fill="rgb(235,33,40)" fg:x="487" fg:w="1"/><text x="39.6832%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.4332%" y="469" width="0.0810%" height="15" fill="rgb(237,89,50)" fg:x="487" fg:w="1"/><text x="39.6832%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.4332%" y="453" width="0.0810%" height="15" fill="rgb(238,126,5)" fg:x="487" fg:w="1"/><text x="39.6832%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4332%" y="437" width="0.0810%" height="15" fill="rgb(247,214,42)" fg:x="487" fg:w="1"/><text x="39.6832%" y="447.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (4 samples, 0.32%)</title><rect x="39.2713%" y="517" width="0.3239%" height="15" fill="rgb(238,60,45)" fg:x="485" fg:w="4"/><text x="39.5213%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="39.5142%" y="501" width="0.0810%" height="15" fill="rgb(225,69,44)" fg:x="488" fg:w="1"/><text x="39.7642%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="39.5142%" y="485" width="0.0810%" height="15" fill="rgb(241,13,44)" fg:x="488" fg:w="1"/><text x="39.7642%" y="495.50"></text></g><g><title>plugins_core::build::Build::new_world (5 samples, 0.40%)</title><rect x="39.2713%" y="533" width="0.4049%" height="15" fill="rgb(227,121,22)" fg:x="485" fg:w="5"/><text x="39.5213%" y="543.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="39.5951%" y="517" width="0.0810%" height="15" fill="rgb(231,160,23)" fg:x="489" fg:w="1"/><text x="39.8451%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7571%" y="485" width="0.0810%" height="15" fill="rgb(250,179,43)" fg:x="491" fg:w="1"/><text x="40.0071%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7571%" y="469" width="0.0810%" height="15" fill="rgb(233,54,46)" fg:x="491" fg:w="1"/><text x="40.0071%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7571%" y="453" width="0.0810%" height="15" fill="rgb(247,120,42)" fg:x="491" fg:w="1"/><text x="40.0071%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7571%" y="437" width="0.0810%" height="15" fill="rgb(221,219,12)" fg:x="491" fg:w="1"/><text x="40.0071%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7571%" y="421" width="0.0810%" height="15" fill="rgb(211,126,8)" fg:x="491" fg:w="1"/><text x="40.0071%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.7571%" y="405" width="0.0810%" height="15" fill="rgb(218,154,33)" fg:x="491" fg:w="1"/><text x="40.0071%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.7571%" y="389" width="0.0810%" height="15" fill="rgb(212,199,16)" fg:x="491" fg:w="1"/><text x="40.0071%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.7571%" y="373" width="0.0810%" height="15" fill="rgb(236,215,46)" fg:x="491" fg:w="1"/><text x="40.0071%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7571%" y="357" width="0.0810%" height="15" fill="rgb(232,32,22)" fg:x="491" fg:w="1"/><text x="40.0071%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7571%" y="341" width="0.0810%" height="15" fill="rgb(234,79,15)" fg:x="491" fg:w="1"/><text x="40.0071%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.7571%" y="325" width="0.0810%" height="15" fill="rgb(235,187,47)" fg:x="491" fg:w="1"/><text x="40.0071%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.7571%" y="309" width="0.0810%" height="15" fill="rgb(244,69,37)" fg:x="491" fg:w="1"/><text x="40.0071%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.7571%" y="293" width="0.0810%" height="15" fill="rgb(249,140,25)" fg:x="491" fg:w="1"/><text x="40.0071%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.7571%" y="277" width="0.0810%" height="15" fill="rgb(213,69,8)" fg:x="491" fg:w="1"/><text x="40.0071%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7571%" y="261" width="0.0810%" height="15" fill="rgb(220,136,2)" fg:x="491" fg:w="1"/><text x="40.0071%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8381%" y="485" width="0.0810%" height="15" fill="rgb(237,50,36)" fg:x="492" fg:w="1"/><text x="40.0881%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.9190%" y="485" width="0.0810%" height="15" fill="rgb(226,18,11)" fg:x="493" fg:w="1"/><text x="40.1690%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (5 samples, 0.40%)</title><rect x="39.7571%" y="501" width="0.4049%" height="15" fill="rgb(243,156,2)" fg:x="491" fg:w="5"/><text x="40.0071%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.0000%" y="485" width="0.1619%" height="15" fill="rgb(218,8,34)" fg:x="494" fg:w="2"/><text x="40.2500%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.0000%" y="469" width="0.1619%" height="15" fill="rgb(250,94,35)" fg:x="494" fg:w="2"/><text x="40.2500%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="40.0000%" y="453" width="0.1619%" height="15" fill="rgb(229,127,21)" fg:x="494" fg:w="2"/><text x="40.2500%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.0000%" y="437" width="0.1619%" height="15" fill="rgb(234,49,5)" fg:x="494" fg:w="2"/><text x="40.2500%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.0810%" y="421" width="0.0810%" height="15" fill="rgb(248,12,16)" fg:x="495" fg:w="1"/><text x="40.3310%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.0810%" y="405" width="0.0810%" height="15" fill="rgb(208,220,31)" fg:x="495" fg:w="1"/><text x="40.3310%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0810%" y="389" width="0.0810%" height="15" fill="rgb(243,184,0)" fg:x="495" fg:w="1"/><text x="40.3310%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="40.2429%" y="453" width="0.0810%" height="15" fill="rgb(217,38,21)" fg:x="497" fg:w="1"/><text x="40.4929%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.2429%" y="437" width="0.0810%" height="15" fill="rgb(239,120,45)" fg:x="497" fg:w="1"/><text x="40.4929%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2429%" y="421" width="0.0810%" height="15" fill="rgb(235,33,2)" fg:x="497" fg:w="1"/><text x="40.4929%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.2429%" y="405" width="0.0810%" height="15" fill="rgb(249,161,5)" fg:x="497" fg:w="1"/><text x="40.4929%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.2429%" y="389" width="0.0810%" height="15" fill="rgb(250,165,48)" fg:x="497" fg:w="1"/><text x="40.4929%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.2429%" y="373" width="0.0810%" height="15" fill="rgb(221,23,45)" fg:x="497" fg:w="1"/><text x="40.4929%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.2429%" y="357" width="0.0810%" height="15" fill="rgb(217,108,46)" fg:x="497" fg:w="1"/><text x="40.4929%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2429%" y="341" width="0.0810%" height="15" fill="rgb(254,26,35)" fg:x="497" fg:w="1"/><text x="40.4929%" y="351.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="40.3239%" y="453" width="0.0810%" height="15" fill="rgb(218,223,28)" fg:x="498" fg:w="1"/><text x="40.5739%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.3239%" y="437" width="0.0810%" height="15" fill="rgb(242,27,47)" fg:x="498" fg:w="1"/><text x="40.5739%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.3239%" y="421" width="0.0810%" height="15" fill="rgb(218,39,35)" fg:x="498" fg:w="1"/><text x="40.5739%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.3239%" y="405" width="0.0810%" height="15" fill="rgb(232,127,16)" fg:x="498" fg:w="1"/><text x="40.5739%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.4049%" y="453" width="0.0810%" height="15" fill="rgb(231,219,51)" fg:x="499" fg:w="1"/><text x="40.6549%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="40.2429%" y="485" width="0.4049%" height="15" fill="rgb(217,220,46)" fg:x="497" fg:w="5"/><text x="40.4929%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (5 samples, 0.40%)</title><rect x="40.2429%" y="469" width="0.4049%" height="15" fill="rgb(230,75,1)" fg:x="497" fg:w="5"/><text x="40.4929%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="40.4858%" y="453" width="0.1619%" height="15" fill="rgb(218,2,8)" fg:x="500" fg:w="2"/><text x="40.7358%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.5668%" y="437" width="0.0810%" height="15" fill="rgb(206,111,30)" fg:x="501" fg:w="1"/><text x="40.8168%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="40.5668%" y="421" width="0.0810%" height="15" fill="rgb(209,135,6)" fg:x="501" fg:w="1"/><text x="40.8168%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="40.5668%" y="405" width="0.0810%" height="15" fill="rgb(205,169,10)" fg:x="501" fg:w="1"/><text x="40.8168%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="40.5668%" y="389" width="0.0810%" height="15" fill="rgb(212,204,38)" fg:x="501" fg:w="1"/><text x="40.8168%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.5668%" y="373" width="0.0810%" height="15" fill="rgb(205,199,14)" fg:x="501" fg:w="1"/><text x="40.8168%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.5668%" y="357" width="0.0810%" height="15" fill="rgb(212,4,6)" fg:x="501" fg:w="1"/><text x="40.8168%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="39.7571%" y="517" width="1.0526%" height="15" fill="rgb(250,15,10)" fg:x="491" fg:w="13"/><text x="40.0071%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.65%)</title><rect x="40.1619%" y="501" width="0.6478%" height="15" fill="rgb(212,49,51)" fg:x="496" fg:w="8"/><text x="40.4119%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="40.6478%" y="485" width="0.1619%" height="15" fill="rgb(235,21,9)" fg:x="502" fg:w="2"/><text x="40.8978%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="40.6478%" y="469" width="0.1619%" height="15" fill="rgb(251,31,32)" fg:x="502" fg:w="2"/><text x="40.8978%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="40.6478%" y="453" width="0.1619%" height="15" fill="rgb(246,23,9)" fg:x="502" fg:w="2"/><text x="40.8978%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="40.6478%" y="437" width="0.1619%" height="15" fill="rgb(225,216,14)" fg:x="502" fg:w="2"/><text x="40.8978%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="40.6478%" y="421" width="0.1619%" height="15" fill="rgb(215,200,26)" fg:x="502" fg:w="2"/><text x="40.8978%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="40.6478%" y="405" width="0.1619%" height="15" fill="rgb(237,130,47)" fg:x="502" fg:w="2"/><text x="40.8978%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="40.7287%" y="389" width="0.0810%" height="15" fill="rgb(247,74,14)" fg:x="503" fg:w="1"/><text x="40.9787%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.7287%" y="373" width="0.0810%" height="15" fill="rgb(254,97,46)" fg:x="503" fg:w="1"/><text x="40.9787%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.7287%" y="357" width="0.0810%" height="15" fill="rgb(234,191,1)" fg:x="503" fg:w="1"/><text x="40.9787%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.8097%" y="517" width="0.1619%" height="15" fill="rgb(215,165,14)" fg:x="504" fg:w="2"/><text x="41.0597%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.8097%" y="501" width="0.1619%" height="15" fill="rgb(230,182,6)" fg:x="504" fg:w="2"/><text x="41.0597%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8907%" y="485" width="0.0810%" height="15" fill="rgb(210,127,39)" fg:x="505" fg:w="1"/><text x="41.1407%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9717%" y="501" width="0.0810%" height="15" fill="rgb(223,212,51)" fg:x="506" fg:w="1"/><text x="41.2217%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9717%" y="485" width="0.0810%" height="15" fill="rgb(226,176,43)" fg:x="506" fg:w="1"/><text x="41.2217%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.9717%" y="469" width="0.0810%" height="15" fill="rgb(222,155,4)" fg:x="506" fg:w="1"/><text x="41.2217%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9717%" y="453" width="0.0810%" height="15" fill="rgb(215,149,7)" fg:x="506" fg:w="1"/><text x="41.2217%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (366 samples, 29.64%)</title><rect x="11.4980%" y="565" width="29.6356%" height="15" fill="rgb(252,199,23)" fg:x="142" fg:w="366"/><text x="11.7480%" y="575.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixtur..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (29 samples, 2.35%)</title><rect x="38.7854%" y="549" width="2.3482%" height="15" fill="rgb(245,52,29)" fg:x="479" fg:w="29"/><text x="39.0354%" y="559.50">p..</text></g><g><title>plugins_core::build::Build::save (18 samples, 1.46%)</title><rect x="39.6761%" y="533" width="1.4575%" height="15" fill="rgb(221,228,19)" fg:x="490" fg:w="18"/><text x="39.9261%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="40.9717%" y="517" width="0.1619%" height="15" fill="rgb(253,101,6)" fg:x="506" fg:w="2"/><text x="41.2217%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.0526%" y="501" width="0.0810%" height="15" fill="rgb(211,130,8)" fg:x="507" fg:w="1"/><text x="41.3026%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.0526%" y="485" width="0.0810%" height="15" fill="rgb(238,37,53)" fg:x="507" fg:w="1"/><text x="41.3026%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.0526%" y="469" width="0.0810%" height="15" fill="rgb(235,145,5)" fg:x="507" fg:w="1"/><text x="41.3026%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.0526%" y="453" width="0.0810%" height="15" fill="rgb(244,12,43)" fg:x="507" fg:w="1"/><text x="41.3026%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.0526%" y="437" width="0.0810%" height="15" fill="rgb(246,195,24)" fg:x="507" fg:w="1"/><text x="41.3026%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.0526%" y="421" width="0.0810%" height="15" fill="rgb(235,163,6)" fg:x="507" fg:w="1"/><text x="41.3026%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="41.1336%" y="565" width="0.0810%" height="15" fill="rgb(236,218,17)" fg:x="508" fg:w="1"/><text x="41.3836%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="41.1336%" y="549" width="0.0810%" height="15" fill="rgb(235,12,38)" fg:x="508" fg:w="1"/><text x="41.3836%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="41.1336%" y="533" width="0.0810%" height="15" fill="rgb(225,195,33)" fg:x="508" fg:w="1"/><text x="41.3836%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.1336%" y="517" width="0.0810%" height="15" fill="rgb(238,54,35)" fg:x="508" fg:w="1"/><text x="41.3836%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.1336%" y="501" width="0.0810%" height="15" fill="rgb(238,33,7)" fg:x="508" fg:w="1"/><text x="41.3836%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2146%" y="533" width="0.0810%" height="15" fill="rgb(245,5,14)" fg:x="509" fg:w="1"/><text x="41.4646%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="41.2146%" y="549" width="0.1619%" height="15" fill="rgb(251,95,31)" fg:x="509" fg:w="2"/><text x="41.4646%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.2955%" y="533" width="0.0810%" height="15" fill="rgb(222,15,46)" fg:x="510" fg:w="1"/><text x="41.5455%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.2955%" y="517" width="0.0810%" height="15" fill="rgb(226,182,24)" fg:x="510" fg:w="1"/><text x="41.5455%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.3765%" y="549" width="0.0810%" height="15" fill="rgb(229,105,41)" fg:x="511" fg:w="1"/><text x="41.6265%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.3765%" y="533" width="0.0810%" height="15" fill="rgb(216,99,53)" fg:x="511" fg:w="1"/><text x="41.6265%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.3765%" y="517" width="0.0810%" height="15" fill="rgb(253,26,20)" fg:x="511" fg:w="1"/><text x="41.6265%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.3765%" y="501" width="0.0810%" height="15" fill="rgb(249,155,28)" fg:x="511" fg:w="1"/><text x="41.6265%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.3765%" y="485" width="0.0810%" height="15" fill="rgb(241,221,2)" fg:x="511" fg:w="1"/><text x="41.6265%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="41.3765%" y="469" width="0.0810%" height="15" fill="rgb(219,124,6)" fg:x="511" fg:w="1"/><text x="41.6265%" y="479.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="41.3765%" y="453" width="0.0810%" height="15" fill="rgb(233,37,6)" fg:x="511" fg:w="1"/><text x="41.6265%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.3765%" y="437" width="0.0810%" height="15" fill="rgb(238,20,14)" fg:x="511" fg:w="1"/><text x="41.6265%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="41.5385%" y="517" width="0.1619%" height="15" fill="rgb(232,106,27)" fg:x="513" fg:w="2"/><text x="41.7885%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.6194%" y="501" width="0.0810%" height="15" fill="rgb(246,157,24)" fg:x="514" fg:w="1"/><text x="41.8694%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.7004%" y="517" width="0.0810%" height="15" fill="rgb(214,153,10)" fg:x="515" fg:w="1"/><text x="41.9504%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="41.8623%" y="485" width="0.2429%" height="15" fill="rgb(212,94,6)" fg:x="517" fg:w="3"/><text x="42.1123%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="41.9433%" y="469" width="0.1619%" height="15" fill="rgb(254,25,27)" fg:x="518" fg:w="2"/><text x="42.1933%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="41.9433%" y="453" width="0.1619%" height="15" fill="rgb(250,43,52)" fg:x="518" fg:w="2"/><text x="42.1933%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="42.4291%" y="405" width="0.1619%" height="15" fill="rgb(221,226,40)" fg:x="524" fg:w="2"/><text x="42.6791%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="42.4291%" y="389" width="0.1619%" height="15" fill="rgb(235,162,34)" fg:x="524" fg:w="2"/><text x="42.6791%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5101%" y="373" width="0.0810%" height="15" fill="rgb(239,24,26)" fg:x="525" fg:w="1"/><text x="42.7601%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="42.4291%" y="421" width="0.2429%" height="15" fill="rgb(244,226,11)" fg:x="524" fg:w="3"/><text x="42.6791%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.5911%" y="405" width="0.0810%" height="15" fill="rgb(225,23,10)" fg:x="526" fg:w="1"/><text x="42.8411%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5911%" y="389" width="0.0810%" height="15" fill="rgb(249,125,6)" fg:x="526" fg:w="1"/><text x="42.8411%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.6721%" y="421" width="0.0810%" height="15" fill="rgb(246,212,12)" fg:x="527" fg:w="1"/><text x="42.9221%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6721%" y="405" width="0.0810%" height="15" fill="rgb(230,43,32)" fg:x="527" fg:w="1"/><text x="42.9221%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.8340%" y="389" width="0.0810%" height="15" fill="rgb(210,95,23)" fg:x="529" fg:w="1"/><text x="43.0840%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.8340%" y="373" width="0.0810%" height="15" fill="rgb(229,103,33)" fg:x="529" fg:w="1"/><text x="43.0840%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.8340%" y="357" width="0.0810%" height="15" fill="rgb(222,104,27)" fg:x="529" fg:w="1"/><text x="43.0840%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.9150%" y="389" width="0.0810%" height="15" fill="rgb(239,221,23)" fg:x="530" fg:w="1"/><text x="43.1650%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="42.4291%" y="437" width="0.6478%" height="15" fill="rgb(222,98,21)" fg:x="524" fg:w="8"/><text x="42.6791%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="42.7530%" y="421" width="0.3239%" height="15" fill="rgb(231,101,20)" fg:x="528" fg:w="4"/><text x="43.0030%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="42.7530%" y="405" width="0.3239%" height="15" fill="rgb(215,150,22)" fg:x="528" fg:w="4"/><text x="43.0030%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.9960%" y="389" width="0.0810%" height="15" fill="rgb(248,3,34)" fg:x="531" fg:w="1"/><text x="43.2460%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="42.4291%" y="453" width="0.8097%" height="15" fill="rgb(220,141,21)" fg:x="524" fg:w="10"/><text x="42.6791%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.0769%" y="437" width="0.1619%" height="15" fill="rgb(223,41,48)" fg:x="532" fg:w="2"/><text x="43.3269%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="42.4291%" y="469" width="0.8907%" height="15" fill="rgb(247,12,5)" fg:x="524" fg:w="11"/><text x="42.6791%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.2389%" y="453" width="0.0810%" height="15" fill="rgb(206,173,10)" fg:x="534" fg:w="1"/><text x="43.4889%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="43.3198%" y="437" width="0.4049%" height="15" fill="rgb(233,214,37)" fg:x="535" fg:w="5"/><text x="43.5698%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="43.4008%" y="421" width="0.3239%" height="15" fill="rgb(238,86,43)" fg:x="536" fg:w="4"/><text x="43.6508%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="43.4008%" y="405" width="0.3239%" height="15" fill="rgb(212,182,8)" fg:x="536" fg:w="4"/><text x="43.6508%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.5628%" y="389" width="0.1619%" height="15" fill="rgb(240,91,47)" fg:x="538" fg:w="2"/><text x="43.8128%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="43.5628%" y="373" width="0.1619%" height="15" fill="rgb(209,138,26)" fg:x="538" fg:w="2"/><text x="43.8128%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="43.5628%" y="357" width="0.1619%" height="15" fill="rgb(231,163,20)" fg:x="538" fg:w="2"/><text x="43.8128%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="43.5628%" y="341" width="0.1619%" height="15" fill="rgb(214,91,54)" fg:x="538" fg:w="2"/><text x="43.8128%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="43.3198%" y="453" width="0.5668%" height="15" fill="rgb(230,32,17)" fg:x="535" fg:w="7"/><text x="43.5698%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="43.7247%" y="437" width="0.1619%" height="15" fill="rgb(231,34,34)" fg:x="540" fg:w="2"/><text x="43.9747%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.8057%" y="421" width="0.0810%" height="15" fill="rgb(224,228,27)" fg:x="541" fg:w="1"/><text x="44.0557%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="43.9676%" y="437" width="0.4049%" height="15" fill="rgb(219,35,40)" fg:x="543" fg:w="5"/><text x="44.2176%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="44.0486%" y="421" width="0.3239%" height="15" fill="rgb(234,42,8)" fg:x="544" fg:w="4"/><text x="44.2986%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="44.1296%" y="405" width="0.2429%" height="15" fill="rgb(226,75,22)" fg:x="545" fg:w="3"/><text x="44.3796%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="44.2105%" y="389" width="0.1619%" height="15" fill="rgb(242,203,28)" fg:x="546" fg:w="2"/><text x="44.4605%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.5344%" y="421" width="0.0810%" height="15" fill="rgb(221,3,9)" fg:x="550" fg:w="1"/><text x="44.7844%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.6964%" y="373" width="0.0810%" height="15" fill="rgb(214,34,31)" fg:x="552" fg:w="1"/><text x="44.9464%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.6964%" y="357" width="0.0810%" height="15" fill="rgb(252,119,15)" fg:x="552" fg:w="1"/><text x="44.9464%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.6964%" y="341" width="0.0810%" height="15" fill="rgb(244,224,31)" fg:x="552" fg:w="1"/><text x="44.9464%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="44.7773%" y="373" width="0.0810%" height="15" fill="rgb(215,8,51)" fg:x="553" fg:w="1"/><text x="45.0273%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="44.7773%" y="357" width="0.0810%" height="15" fill="rgb(207,24,1)" fg:x="553" fg:w="1"/><text x="45.0273%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.7773%" y="341" width="0.0810%" height="15" fill="rgb(245,90,0)" fg:x="553" fg:w="1"/><text x="45.0273%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.7773%" y="325" width="0.0810%" height="15" fill="rgb(246,43,48)" fg:x="553" fg:w="1"/><text x="45.0273%" y="335.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.7773%" y="309" width="0.0810%" height="15" fill="rgb(252,218,10)" fg:x="553" fg:w="1"/><text x="45.0273%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.7773%" y="293" width="0.0810%" height="15" fill="rgb(231,24,35)" fg:x="553" fg:w="1"/><text x="45.0273%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="44.6154%" y="421" width="0.3239%" height="15" fill="rgb(225,66,19)" fg:x="551" fg:w="4"/><text x="44.8654%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="44.6154%" y="405" width="0.3239%" height="15" fill="rgb(214,96,51)" fg:x="551" fg:w="4"/><text x="44.8654%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="44.6964%" y="389" width="0.2429%" height="15" fill="rgb(251,151,47)" fg:x="552" fg:w="3"/><text x="44.9464%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.8583%" y="373" width="0.0810%" height="15" fill="rgb(236,79,14)" fg:x="554" fg:w="1"/><text x="45.1083%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="44.9393%" y="421" width="0.2429%" height="15" fill="rgb(210,205,11)" fg:x="555" fg:w="3"/><text x="45.1893%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="45.0202%" y="405" width="0.1619%" height="15" fill="rgb(233,142,53)" fg:x="556" fg:w="2"/><text x="45.2702%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.1012%" y="389" width="0.0810%" height="15" fill="rgb(212,116,48)" fg:x="557" fg:w="1"/><text x="45.3512%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.1822%" y="405" width="0.0810%" height="15" fill="rgb(234,55,33)" fg:x="558" fg:w="1"/><text x="45.4322%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="45.2632%" y="405" width="0.0810%" height="15" fill="rgb(253,92,27)" fg:x="559" fg:w="1"/><text x="45.5132%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.2632%" y="389" width="0.0810%" height="15" fill="rgb(220,7,35)" fg:x="559" fg:w="1"/><text x="45.5132%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.2632%" y="373" width="0.0810%" height="15" fill="rgb(246,124,6)" fg:x="559" fg:w="1"/><text x="45.5132%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.2632%" y="357" width="0.0810%" height="15" fill="rgb(212,111,51)" fg:x="559" fg:w="1"/><text x="45.5132%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.2632%" y="341" width="0.0810%" height="15" fill="rgb(253,116,7)" fg:x="559" fg:w="1"/><text x="45.5132%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.2632%" y="325" width="0.0810%" height="15" fill="rgb(213,145,18)" fg:x="559" fg:w="1"/><text x="45.5132%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="45.2632%" y="309" width="0.0810%" height="15" fill="rgb(219,149,7)" fg:x="559" fg:w="1"/><text x="45.5132%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="45.3441%" y="389" width="0.1619%" height="15" fill="rgb(225,156,20)" fg:x="560" fg:w="2"/><text x="45.5941%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.4251%" y="373" width="0.0810%" height="15" fill="rgb(211,98,19)" fg:x="561" fg:w="1"/><text x="45.6751%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.4251%" y="357" width="0.0810%" height="15" fill="rgb(231,192,31)" fg:x="561" fg:w="1"/><text x="45.6751%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.4251%" y="341" width="0.0810%" height="15" fill="rgb(249,95,19)" fg:x="561" fg:w="1"/><text x="45.6751%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="45.4251%" y="325" width="0.0810%" height="15" fill="rgb(247,101,36)" fg:x="561" fg:w="1"/><text x="45.6751%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.4251%" y="309" width="0.0810%" height="15" fill="rgb(221,45,43)" fg:x="561" fg:w="1"/><text x="45.6751%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="45.4251%" y="293" width="0.0810%" height="15" fill="rgb(220,42,1)" fg:x="561" fg:w="1"/><text x="45.6751%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="45.5061%" y="389" width="0.1619%" height="15" fill="rgb(236,19,24)" fg:x="562" fg:w="2"/><text x="45.7561%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="45.5870%" y="373" width="0.0810%" height="15" fill="rgb(225,192,6)" fg:x="563" fg:w="1"/><text x="45.8370%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="45.3441%" y="405" width="0.4049%" height="15" fill="rgb(242,30,19)" fg:x="560" fg:w="5"/><text x="45.5941%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.6680%" y="389" width="0.0810%" height="15" fill="rgb(240,36,6)" fg:x="564" fg:w="1"/><text x="45.9180%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="45.1822%" y="421" width="0.6478%" height="15" fill="rgb(246,40,28)" fg:x="558" fg:w="8"/><text x="45.4322%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.7490%" y="405" width="0.0810%" height="15" fill="rgb(225,155,33)" fg:x="565" fg:w="1"/><text x="45.9990%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.54%)</title><rect x="44.3725%" y="437" width="1.5385%" height="15" fill="rgb(240,65,18)" fg:x="548" fg:w="19"/><text x="44.6225%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.8300%" y="421" width="0.0810%" height="15" fill="rgb(217,0,48)" fg:x="566" fg:w="1"/><text x="46.0800%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.8300%" y="405" width="0.0810%" height="15" fill="rgb(217,80,15)" fg:x="566" fg:w="1"/><text x="46.0800%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.27%)</title><rect x="43.8866%" y="453" width="2.2672%" height="15" fill="rgb(253,43,51)" fg:x="542" fg:w="28"/><text x="44.1366%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="45.9109%" y="437" width="0.2429%" height="15" fill="rgb(246,60,4)" fg:x="567" fg:w="3"/><text x="46.1609%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="45.9919%" y="421" width="0.1619%" height="15" fill="rgb(230,40,54)" fg:x="568" fg:w="2"/><text x="46.2419%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.0729%" y="405" width="0.0810%" height="15" fill="rgb(208,20,44)" fg:x="569" fg:w="1"/><text x="46.3229%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="46.0729%" y="389" width="0.0810%" height="15" fill="rgb(230,22,22)" fg:x="569" fg:w="1"/><text x="46.3229%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.0729%" y="373" width="0.0810%" height="15" fill="rgb(207,57,4)" fg:x="569" fg:w="1"/><text x="46.3229%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.0729%" y="357" width="0.0810%" height="15" fill="rgb(242,130,33)" fg:x="569" fg:w="1"/><text x="46.3229%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.91%)</title><rect x="43.3198%" y="469" width="2.9150%" height="15" fill="rgb(218,66,43)" fg:x="535" fg:w="36"/><text x="43.5698%" y="479.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.1538%" y="453" width="0.0810%" height="15" fill="rgb(236,105,16)" fg:x="570" fg:w="1"/><text x="46.4038%" y="463.50"></text></g><g><title>burrow_bon::perms::find_acls (1 samples, 0.08%)</title><rect x="46.2348%" y="469" width="0.0810%" height="15" fill="rgb(230,46,15)" fg:x="571" fg:w="1"/><text x="46.4848%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.2348%" y="453" width="0.0810%" height="15" fill="rgb(251,172,40)" fg:x="571" fg:w="1"/><text x="46.4848%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.3158%" y="405" width="0.1619%" height="15" fill="rgb(225,217,32)" fg:x="572" fg:w="2"/><text x="46.5658%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="46.4777%" y="405" width="0.1619%" height="15" fill="rgb(243,10,29)" fg:x="574" fg:w="2"/><text x="46.7277%" y="415.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="47.0445%" y="389" width="0.3239%" height="15" fill="rgb(207,102,10)" fg:x="581" fg:w="4"/><text x="47.2945%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.3684%" y="389" width="0.0810%" height="15" fill="rgb(241,125,5)" fg:x="585" fg:w="1"/><text x="47.6184%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.3684%" y="373" width="0.0810%" height="15" fill="rgb(230,125,29)" fg:x="585" fg:w="1"/><text x="47.6184%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="47.6923%" y="373" width="0.2429%" height="15" fill="rgb(223,65,44)" fg:x="589" fg:w="3"/><text x="47.9423%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="47.9352%" y="373" width="0.1619%" height="15" fill="rgb(224,188,28)" fg:x="592" fg:w="2"/><text x="48.1852%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.0162%" y="357" width="0.0810%" height="15" fill="rgb(254,197,27)" fg:x="593" fg:w="1"/><text x="48.2662%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="48.0972%" y="357" width="0.2429%" height="15" fill="rgb(220,200,25)" fg:x="594" fg:w="3"/><text x="48.3472%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="48.3401%" y="357" width="0.2429%" height="15" fill="rgb(239,225,54)" fg:x="597" fg:w="3"/><text x="48.5901%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5020%" y="341" width="0.0810%" height="15" fill="rgb(211,59,40)" fg:x="599" fg:w="1"/><text x="48.7520%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.51%)</title><rect x="46.3158%" y="437" width="2.5101%" height="15" fill="rgb(213,176,46)" fg:x="572" fg:w="31"/><text x="46.5658%" y="447.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (31 samples, 2.51%)</title><rect x="46.3158%" y="421" width="2.5101%" height="15" fill="rgb(226,99,4)" fg:x="572" fg:w="31"/><text x="46.5658%" y="431.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 2.19%)</title><rect x="46.6397%" y="405" width="2.1862%" height="15" fill="rgb(239,203,43)" fg:x="576" fg:w="27"/><text x="46.8897%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.38%)</title><rect x="47.4494%" y="389" width="1.3765%" height="15" fill="rgb(246,1,45)" fg:x="586" fg:w="17"/><text x="47.6994%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="48.0972%" y="373" width="0.7287%" height="15" fill="rgb(231,42,52)" fg:x="594" fg:w="9"/><text x="48.3472%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="48.5830%" y="357" width="0.2429%" height="15" fill="rgb(240,13,50)" fg:x="600" fg:w="3"/><text x="48.8330%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.7449%" y="341" width="0.0810%" height="15" fill="rgb(225,81,14)" fg:x="602" fg:w="1"/><text x="48.9949%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.7449%" y="325" width="0.0810%" height="15" fill="rgb(216,182,23)" fg:x="602" fg:w="1"/><text x="48.9949%" y="335.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPath as core::convert::From&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::from (1 samples, 0.08%)</title><rect x="48.9069%" y="421" width="0.0810%" height="15" fill="rgb(233,137,19)" fg:x="604" fg:w="1"/><text x="49.1569%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="48.9069%" y="405" width="0.0810%" height="15" fill="rgb(242,61,46)" fg:x="604" fg:w="1"/><text x="49.1569%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="48.8259%" y="437" width="0.2429%" height="15" fill="rgb(221,168,51)" fg:x="603" fg:w="3"/><text x="49.0759%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9879%" y="421" width="0.0810%" height="15" fill="rgb(238,48,15)" fg:x="605" fg:w="1"/><text x="49.2379%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="49.0688%" y="373" width="0.0810%" height="15" fill="rgb(216,13,16)" fg:x="606" fg:w="1"/><text x="49.3188%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="49.0688%" y="357" width="0.0810%" height="15" fill="rgb(223,185,34)" fg:x="606" fg:w="1"/><text x="49.3188%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="49.1498%" y="373" width="0.0810%" height="15" fill="rgb(228,94,42)" fg:x="607" fg:w="1"/><text x="49.3998%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="49.0688%" y="389" width="0.2429%" height="15" fill="rgb(218,166,43)" fg:x="606" fg:w="3"/><text x="49.3188%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.2308%" y="373" width="0.0810%" height="15" fill="rgb(232,30,50)" fg:x="608" fg:w="1"/><text x="49.4808%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (39 samples, 3.16%)</title><rect x="46.3158%" y="453" width="3.1579%" height="15" fill="rgb(245,206,45)" fg:x="572" fg:w="39"/><text x="46.5658%" y="463.50">&lt;ke..</text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="49.0688%" y="437" width="0.4049%" height="15" fill="rgb(220,56,22)" fg:x="606" fg:w="5"/><text x="49.3188%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="49.0688%" y="421" width="0.4049%" height="15" fill="rgb(239,129,38)" fg:x="606" fg:w="5"/><text x="49.3188%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="49.0688%" y="405" width="0.4049%" height="15" fill="rgb(207,68,41)" fg:x="606" fg:w="5"/><text x="49.3188%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="49.3117%" y="389" width="0.1619%" height="15" fill="rgb(221,21,7)" fg:x="609" fg:w="2"/><text x="49.5617%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.5547%" y="421" width="0.1619%" height="15" fill="rgb(240,33,25)" fg:x="612" fg:w="2"/><text x="49.8047%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0405%" y="405" width="0.0810%" height="15" fill="rgb(242,119,10)" fg:x="618" fg:w="1"/><text x="50.2905%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="49.7166%" y="421" width="0.4858%" height="15" fill="rgb(214,149,40)" fg:x="614" fg:w="6"/><text x="49.9666%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.1215%" y="405" width="0.0810%" height="15" fill="rgb(228,25,36)" fg:x="619" fg:w="1"/><text x="50.3715%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.2834%" y="389" width="0.1619%" height="15" fill="rgb(222,59,15)" fg:x="621" fg:w="2"/><text x="50.5334%" y="399.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="50.2024%" y="421" width="0.3239%" height="15" fill="rgb(218,170,0)" fg:x="620" fg:w="4"/><text x="50.4524%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="50.2834%" y="405" width="0.2429%" height="15" fill="rgb(232,173,23)" fg:x="621" fg:w="3"/><text x="50.5334%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="50.4453%" y="389" width="0.0810%" height="15" fill="rgb(218,116,1)" fg:x="623" fg:w="1"/><text x="50.6953%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6073%" y="389" width="0.0810%" height="15" fill="rgb(207,34,4)" fg:x="625" fg:w="1"/><text x="50.8573%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="50.5263%" y="421" width="0.2429%" height="15" fill="rgb(229,54,52)" fg:x="624" fg:w="3"/><text x="50.7763%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="50.5263%" y="405" width="0.2429%" height="15" fill="rgb(211,86,23)" fg:x="624" fg:w="3"/><text x="50.7763%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="50.6883%" y="389" width="0.0810%" height="15" fill="rgb(254,153,34)" fg:x="626" fg:w="1"/><text x="50.9383%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="50.6883%" y="373" width="0.0810%" height="15" fill="rgb(219,220,14)" fg:x="626" fg:w="1"/><text x="50.9383%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="50.7692%" y="421" width="0.0810%" height="15" fill="rgb(247,8,26)" fg:x="627" fg:w="1"/><text x="51.0192%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="50.7692%" y="405" width="0.0810%" height="15" fill="rgb(213,129,42)" fg:x="627" fg:w="1"/><text x="51.0192%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7692%" y="389" width="0.0810%" height="15" fill="rgb(225,95,41)" fg:x="627" fg:w="1"/><text x="51.0192%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.3360%" y="373" width="0.1619%" height="15" fill="rgb(215,134,24)" fg:x="634" fg:w="2"/><text x="51.5860%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.3360%" y="357" width="0.1619%" height="15" fill="rgb(235,23,54)" fg:x="634" fg:w="2"/><text x="51.5860%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="51.5789%" y="325" width="0.2429%" height="15" fill="rgb(229,96,31)" fg:x="637" fg:w="3"/><text x="51.8289%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7409%" y="309" width="0.0810%" height="15" fill="rgb(206,111,12)" fg:x="639" fg:w="1"/><text x="51.9909%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.8219%" y="293" width="0.0810%" height="15" fill="rgb(222,177,8)" fg:x="640" fg:w="1"/><text x="52.0719%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8219%" y="277" width="0.0810%" height="15" fill="rgb(251,36,52)" fg:x="640" fg:w="1"/><text x="52.0719%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.49%)</title><rect x="51.4980%" y="373" width="0.4858%" height="15" fill="rgb(216,182,29)" fg:x="636" fg:w="6"/><text x="51.7480%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="51.5789%" y="357" width="0.4049%" height="15" fill="rgb(241,145,50)" fg:x="637" fg:w="5"/><text x="51.8289%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="51.5789%" y="341" width="0.4049%" height="15" fill="rgb(231,71,35)" fg:x="637" fg:w="5"/><text x="51.8289%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="51.8219%" y="325" width="0.1619%" height="15" fill="rgb(218,22,17)" fg:x="640" fg:w="2"/><text x="52.0719%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="51.8219%" y="309" width="0.1619%" height="15" fill="rgb(225,227,6)" fg:x="640" fg:w="2"/><text x="52.0719%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="51.9028%" y="293" width="0.0810%" height="15" fill="rgb(224,204,17)" fg:x="641" fg:w="1"/><text x="52.1528%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="51.9028%" y="277" width="0.0810%" height="15" fill="rgb(227,61,28)" fg:x="641" fg:w="1"/><text x="52.1528%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="51.9838%" y="341" width="0.2429%" height="15" fill="rgb(242,148,23)" fg:x="642" fg:w="3"/><text x="52.2338%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.1457%" y="325" width="0.0810%" height="15" fill="rgb(237,105,33)" fg:x="644" fg:w="1"/><text x="52.3957%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="52.3887%" y="325" width="0.1619%" height="15" fill="rgb(238,218,40)" fg:x="647" fg:w="2"/><text x="52.6387%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.6316%" y="309" width="0.2429%" height="15" fill="rgb(209,126,11)" fg:x="650" fg:w="3"/><text x="52.8816%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="52.6316%" y="293" width="0.2429%" height="15" fill="rgb(245,90,11)" fg:x="650" fg:w="3"/><text x="52.8816%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="52.5506%" y="325" width="0.4049%" height="15" fill="rgb(211,195,10)" fg:x="649" fg:w="5"/><text x="52.8006%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="52.8745%" y="309" width="0.0810%" height="15" fill="rgb(231,45,45)" fg:x="653" fg:w="1"/><text x="53.1245%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="51.9838%" y="357" width="1.0526%" height="15" fill="rgb(246,100,43)" fg:x="642" fg:w="13"/><text x="52.2338%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="52.2267%" y="341" width="0.8097%" height="15" fill="rgb(241,193,8)" fg:x="645" fg:w="10"/><text x="52.4767%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9555%" y="325" width="0.0810%" height="15" fill="rgb(208,76,19)" fg:x="654" fg:w="1"/><text x="53.2055%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (23 samples, 1.86%)</title><rect x="51.3360%" y="389" width="1.8623%" height="15" fill="rgb(223,69,40)" fg:x="634" fg:w="23"/><text x="51.5860%" y="399.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.21%)</title><rect x="51.9838%" y="373" width="1.2146%" height="15" fill="rgb(207,120,39)" fg:x="642" fg:w="15"/><text x="52.2338%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.0364%" y="357" width="0.1619%" height="15" fill="rgb(212,209,28)" fg:x="655" fg:w="2"/><text x="53.2864%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.27%)</title><rect x="51.0121%" y="405" width="2.2672%" height="15" fill="rgb(246,82,29)" fg:x="630" fg:w="28"/><text x="51.2621%" y="415.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="53.1984%" y="389" width="0.0810%" height="15" fill="rgb(239,6,40)" fg:x="657" fg:w="1"/><text x="53.4484%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.1984%" y="373" width="0.0810%" height="15" fill="rgb(228,181,35)" fg:x="657" fg:w="1"/><text x="53.4484%" y="383.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (48 samples, 3.89%)</title><rect x="49.4737%" y="453" width="3.8866%" height="15" fill="rgb(238,151,2)" fg:x="611" fg:w="48"/><text x="49.7237%" y="463.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.89%)</title><rect x="49.4737%" y="437" width="3.8866%" height="15" fill="rgb(236,94,18)" fg:x="611" fg:w="48"/><text x="49.7237%" y="447.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (31 samples, 2.51%)</title><rect x="50.8502%" y="421" width="2.5101%" height="15" fill="rgb(208,38,14)" fg:x="628" fg:w="31"/><text x="51.1002%" y="431.50">se..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2794%" y="405" width="0.0810%" height="15" fill="rgb(234,215,27)" fg:x="658" fg:w="1"/><text x="53.5294%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.8462%" y="277" width="0.0810%" height="15" fill="rgb(254,211,53)" fg:x="665" fg:w="1"/><text x="54.0962%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.8462%" y="261" width="0.0810%" height="15" fill="rgb(216,175,11)" fg:x="665" fg:w="1"/><text x="54.0962%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.8462%" y="245" width="0.0810%" height="15" fill="rgb(246,179,26)" fg:x="665" fg:w="1"/><text x="54.0962%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.8462%" y="229" width="0.0810%" height="15" fill="rgb(249,19,52)" fg:x="665" fg:w="1"/><text x="54.0962%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.0081%" y="261" width="0.0810%" height="15" fill="rgb(230,42,52)" fg:x="667" fg:w="1"/><text x="54.2581%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="53.9271%" y="277" width="0.3239%" height="15" fill="rgb(221,171,0)" fg:x="666" fg:w="4"/><text x="54.1771%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.0891%" y="261" width="0.1619%" height="15" fill="rgb(222,177,40)" fg:x="668" fg:w="2"/><text x="54.3391%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="53.8462%" y="309" width="0.5668%" height="15" fill="rgb(247,34,16)" fg:x="665" fg:w="7"/><text x="54.0962%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="53.8462%" y="293" width="0.5668%" height="15" fill="rgb(213,217,37)" fg:x="665" fg:w="7"/><text x="54.0962%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.2510%" y="277" width="0.1619%" height="15" fill="rgb(231,189,24)" fg:x="670" fg:w="2"/><text x="54.5010%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3320%" y="261" width="0.0810%" height="15" fill="rgb(214,22,9)" fg:x="671" fg:w="1"/><text x="54.5820%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3320%" y="245" width="0.0810%" height="15" fill="rgb(212,70,22)" fg:x="671" fg:w="1"/><text x="54.5820%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.6559%" y="277" width="0.0810%" height="15" fill="rgb(249,64,51)" fg:x="675" fg:w="1"/><text x="54.9059%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.7368%" y="261" width="0.0810%" height="15" fill="rgb(249,148,20)" fg:x="676" fg:w="1"/><text x="54.9868%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.7368%" y="245" width="0.0810%" height="15" fill="rgb(246,46,48)" fg:x="676" fg:w="1"/><text x="54.9868%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="54.5749%" y="293" width="0.4049%" height="15" fill="rgb(217,34,48)" fg:x="674" fg:w="5"/><text x="54.8249%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.7368%" y="277" width="0.2429%" height="15" fill="rgb(222,45,26)" fg:x="676" fg:w="3"/><text x="54.9868%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.8178%" y="261" width="0.1619%" height="15" fill="rgb(230,201,36)" fg:x="677" fg:w="2"/><text x="55.0678%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="54.8178%" y="245" width="0.1619%" height="15" fill="rgb(217,30,43)" fg:x="677" fg:w="2"/><text x="55.0678%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.21%)</title><rect x="53.8462%" y="325" width="1.2146%" height="15" fill="rgb(230,197,40)" fg:x="665" fg:w="15"/><text x="54.0962%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="54.4130%" y="309" width="0.6478%" height="15" fill="rgb(239,181,18)" fg:x="672" fg:w="8"/><text x="54.6630%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.9798%" y="293" width="0.0810%" height="15" fill="rgb(222,60,39)" fg:x="679" fg:w="1"/><text x="55.2298%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="55.0607%" y="325" width="0.2429%" height="15" fill="rgb(210,60,22)" fg:x="680" fg:w="3"/><text x="55.3107%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.1417%" y="309" width="0.1619%" height="15" fill="rgb(239,213,48)" fg:x="681" fg:w="2"/><text x="55.3917%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.86%)</title><rect x="53.5223%" y="357" width="1.8623%" height="15" fill="rgb(253,214,23)" fg:x="661" fg:w="23"/><text x="53.7723%" y="367.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.62%)</title><rect x="53.7652%" y="341" width="1.6194%" height="15" fill="rgb(211,98,45)" fg:x="664" fg:w="20"/><text x="54.0152%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.3036%" y="325" width="0.0810%" height="15" fill="rgb(239,130,44)" fg:x="683" fg:w="1"/><text x="55.5536%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.3036%" y="309" width="0.0810%" height="15" fill="rgb(222,181,35)" fg:x="683" fg:w="1"/><text x="55.5536%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3036%" y="293" width="0.0810%" height="15" fill="rgb(219,219,49)" fg:x="683" fg:w="1"/><text x="55.5536%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3846%" y="341" width="0.0810%" height="15" fill="rgb(227,161,51)" fg:x="684" fg:w="1"/><text x="55.6346%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="55.3846%" y="357" width="0.1619%" height="15" fill="rgb(239,112,27)" fg:x="684" fg:w="2"/><text x="55.6346%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="55.4656%" y="341" width="0.0810%" height="15" fill="rgb(248,122,18)" fg:x="685" fg:w="1"/><text x="55.7156%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="55.4656%" y="325" width="0.0810%" height="15" fill="rgb(245,130,23)" fg:x="685" fg:w="1"/><text x="55.7156%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.35%)</title><rect x="53.4413%" y="389" width="2.3482%" height="15" fill="rgb(211,225,28)" fg:x="660" fg:w="29"/><text x="53.6913%" y="399.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.27%)</title><rect x="53.5223%" y="373" width="2.2672%" height="15" fill="rgb(242,105,44)" fg:x="661" fg:w="28"/><text x="53.7723%" y="383.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.5466%" y="357" width="0.2429%" height="15" fill="rgb(216,183,46)" fg:x="686" fg:w="3"/><text x="55.7966%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.6275%" y="341" width="0.1619%" height="15" fill="rgb(227,112,9)" fg:x="687" fg:w="2"/><text x="55.8775%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="55.7895%" y="389" width="0.1619%" height="15" fill="rgb(244,21,0)" fg:x="689" fg:w="2"/><text x="56.0395%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.8704%" y="373" width="0.0810%" height="15" fill="rgb(236,185,14)" fg:x="690" fg:w="1"/><text x="56.1204%" y="383.50"></text></g><g><title>engine::session::state::State::close (180 samples, 14.57%)</title><rect x="41.4575%" y="549" width="14.5749%" height="15" fill="rgb(236,170,30)" fg:x="512" fg:w="180"/><text x="41.7075%" y="559.50">engine::session::state..</text></g><g><title>engine::session::state::State::flush_entities (180 samples, 14.57%)</title><rect x="41.4575%" y="533" width="14.5749%" height="15" fill="rgb(209,198,51)" fg:x="512" fg:w="180"/><text x="41.7075%" y="543.50">engine::session::state..</text></g><g><title>core::iter::adapters::try_process (176 samples, 14.25%)</title><rect x="41.7814%" y="517" width="14.2510%" height="15" fill="rgb(205,171,26)" fg:x="516" fg:w="176"/><text x="42.0314%" y="527.50">core::iter::adapters::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (176 samples, 14.25%)</title><rect x="41.7814%" y="501" width="14.2510%" height="15" fill="rgb(246,41,49)" fg:x="516" fg:w="176"/><text x="42.0314%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (172 samples, 13.93%)</title><rect x="42.1053%" y="485" width="13.9271%" height="15" fill="rgb(240,229,12)" fg:x="520" fg:w="172"/><text x="42.3553%" y="495.50">engine::session::stat..</text></g><g><title>kernel::model::any_entity_changes (120 samples, 9.72%)</title><rect x="46.3158%" y="469" width="9.7166%" height="15" fill="rgb(212,8,54)" fg:x="572" fg:w="120"/><text x="46.5658%" y="479.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (33 samples, 2.67%)</title><rect x="53.3603%" y="453" width="2.6721%" height="15" fill="rgb(230,114,13)" fg:x="659" fg:w="33"/><text x="53.6103%" y="463.50">se..</text></g><g><title>serde_json::de::from_trait (33 samples, 2.67%)</title><rect x="53.3603%" y="437" width="2.6721%" height="15" fill="rgb(229,130,28)" fg:x="659" fg:w="33"/><text x="53.6103%" y="447.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 2.67%)</title><rect x="53.3603%" y="421" width="2.6721%" height="15" fill="rgb(206,139,15)" fg:x="659" fg:w="33"/><text x="53.6103%" y="431.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (33 samples, 2.67%)</title><rect x="53.3603%" y="405" width="2.6721%" height="15" fill="rgb(241,188,35)" fg:x="659" fg:w="33"/><text x="53.6103%" y="415.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.9514%" y="389" width="0.0810%" height="15" fill="rgb(208,224,26)" fg:x="691" fg:w="1"/><text x="56.2014%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.9514%" y="373" width="0.0810%" height="15" fill="rgb(251,131,28)" fg:x="691" fg:w="1"/><text x="56.2014%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.9514%" y="357" width="0.0810%" height="15" fill="rgb(208,153,1)" fg:x="691" fg:w="1"/><text x="56.2014%" y="367.50"></text></g><g><title>engine::session::Session::close (185 samples, 14.98%)</title><rect x="41.2146%" y="565" width="14.9798%" height="15" fill="rgb(234,33,36)" fg:x="509" fg:w="185"/><text x="41.4646%" y="575.50">engine::session::Sessio..</text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.16%)</title><rect x="56.0324%" y="549" width="0.1619%" height="15" fill="rgb(246,42,29)" fg:x="692" fg:w="2"/><text x="56.2824%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.2753%" y="501" width="0.0810%" height="15" fill="rgb(251,114,16)" fg:x="695" fg:w="1"/><text x="56.5253%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2753%" y="485" width="0.0810%" height="15" fill="rgb(233,13,38)" fg:x="695" fg:w="1"/><text x="56.5253%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2753%" y="469" width="0.0810%" height="15" fill="rgb(247,120,19)" fg:x="695" fg:w="1"/><text x="56.5253%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.2753%" y="453" width="0.0810%" height="15" fill="rgb(205,11,16)" fg:x="695" fg:w="1"/><text x="56.5253%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.2753%" y="437" width="0.0810%" height="15" fill="rgb(228,185,19)" fg:x="695" fg:w="1"/><text x="56.5253%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.2753%" y="421" width="0.0810%" height="15" fill="rgb(239,88,52)" fg:x="695" fg:w="1"/><text x="56.5253%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.2753%" y="405" width="0.0810%" height="15" fill="rgb(219,23,1)" fg:x="695" fg:w="1"/><text x="56.5253%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.2753%" y="389" width="0.0810%" height="15" fill="rgb(253,177,16)" fg:x="695" fg:w="1"/><text x="56.5253%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.2753%" y="373" width="0.0810%" height="15" fill="rgb(225,150,40)" fg:x="695" fg:w="1"/><text x="56.5253%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.2753%" y="357" width="0.0810%" height="15" fill="rgb(208,108,30)" fg:x="695" fg:w="1"/><text x="56.5253%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.2753%" y="341" width="0.0810%" height="15" fill="rgb(214,122,4)" fg:x="695" fg:w="1"/><text x="56.5253%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.2753%" y="325" width="0.0810%" height="15" fill="rgb(229,74,37)" fg:x="695" fg:w="1"/><text x="56.5253%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2753%" y="309" width="0.0810%" height="15" fill="rgb(233,61,41)" fg:x="695" fg:w="1"/><text x="56.5253%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.3563%" y="501" width="0.0810%" height="15" fill="rgb(238,191,5)" fg:x="696" fg:w="1"/><text x="56.6063%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="56.2753%" y="517" width="0.3239%" height="15" fill="rgb(233,78,24)" fg:x="695" fg:w="4"/><text x="56.5253%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.4372%" y="501" width="0.1619%" height="15" fill="rgb(211,142,8)" fg:x="697" fg:w="2"/><text x="56.6872%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.4372%" y="485" width="0.1619%" height="15" fill="rgb(253,38,53)" fg:x="697" fg:w="2"/><text x="56.6872%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.5182%" y="469" width="0.0810%" height="15" fill="rgb(234,63,51)" fg:x="698" fg:w="1"/><text x="56.7682%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (5 samples, 0.40%)</title><rect x="56.2753%" y="533" width="0.4049%" height="15" fill="rgb(205,23,31)" fg:x="695" fg:w="5"/><text x="56.5253%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5992%" y="517" width="0.0810%" height="15" fill="rgb(210,184,50)" fg:x="699" fg:w="1"/><text x="56.8492%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5992%" y="501" width="0.0810%" height="15" fill="rgb(222,112,26)" fg:x="699" fg:w="1"/><text x="56.8492%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.5992%" y="485" width="0.0810%" height="15" fill="rgb(250,98,18)" fg:x="699" fg:w="1"/><text x="56.8492%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.5992%" y="469" width="0.0810%" height="15" fill="rgb(250,34,12)" fg:x="699" fg:w="1"/><text x="56.8492%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.5992%" y="453" width="0.0810%" height="15" fill="rgb(236,141,30)" fg:x="699" fg:w="1"/><text x="56.8492%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5992%" y="437" width="0.0810%" height="15" fill="rgb(246,134,38)" fg:x="699" fg:w="1"/><text x="56.8492%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5992%" y="421" width="0.0810%" height="15" fill="rgb(240,114,4)" fg:x="699" fg:w="1"/><text x="56.8492%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.5992%" y="405" width="0.0810%" height="15" fill="rgb(243,113,39)" fg:x="699" fg:w="1"/><text x="56.8492%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.5992%" y="389" width="0.0810%" height="15" fill="rgb(239,215,4)" fg:x="699" fg:w="1"/><text x="56.8492%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.5992%" y="373" width="0.0810%" height="15" fill="rgb(236,229,45)" fg:x="699" fg:w="1"/><text x="56.8492%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.5992%" y="357" width="0.0810%" height="15" fill="rgb(242,2,6)" fg:x="699" fg:w="1"/><text x="56.8492%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5992%" y="341" width="0.0810%" height="15" fill="rgb(239,108,21)" fg:x="699" fg:w="1"/><text x="56.8492%" y="351.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="56.7611%" y="501" width="0.2429%" height="15" fill="rgb(215,168,34)" fg:x="701" fg:w="3"/><text x="57.0111%" y="511.50"></text></g><g><title>&lt;plugins_core::chat::parser::SpeakActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="56.8421%" y="485" width="0.1619%" height="15" fill="rgb(238,31,17)" fg:x="702" fg:w="2"/><text x="57.0921%" y="495.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="57.0040%" y="501" width="0.0810%" height="15" fill="rgb(220,133,11)" fg:x="704" fg:w="1"/><text x="57.2540%" y="511.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="57.0040%" y="485" width="0.0810%" height="15" fill="rgb(212,158,23)" fg:x="704" fg:w="1"/><text x="57.2540%" y="495.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (6 samples, 0.49%)</title><rect x="56.6802%" y="533" width="0.4858%" height="15" fill="rgb(223,172,7)" fg:x="700" fg:w="6"/><text x="56.9302%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.49%)</title><rect x="56.6802%" y="517" width="0.4858%" height="15" fill="rgb(244,3,52)" fg:x="700" fg:w="6"/><text x="56.9302%" y="527.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="57.0850%" y="501" width="0.0810%" height="15" fill="rgb(207,69,27)" fg:x="705" fg:w="1"/><text x="57.3350%" y="511.50"></text></g><g><title>&lt;plugins_rune::parser::EditActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="57.0850%" y="485" width="0.0810%" height="15" fill="rgb(213,136,45)" fg:x="705" fg:w="1"/><text x="57.3350%" y="495.50"></text></g><g><title>&lt;kernel::model::base::DomainError as core::convert::From&lt;anyhow::Error&gt;&gt;::from (1 samples, 0.08%)</title><rect x="57.0850%" y="469" width="0.0810%" height="15" fill="rgb(218,79,17)" fg:x="705" fg:w="1"/><text x="57.3350%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="57.1660%" y="421" width="0.0810%" height="15" fill="rgb(216,106,36)" fg:x="706" fg:w="1"/><text x="57.4160%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="57.1660%" y="405" width="0.0810%" height="15" fill="rgb(251,27,45)" fg:x="706" fg:w="1"/><text x="57.4160%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="57.1660%" y="389" width="0.0810%" height="15" fill="rgb(232,21,34)" fg:x="706" fg:w="1"/><text x="57.4160%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="57.1660%" y="373" width="0.0810%" height="15" fill="rgb(249,191,16)" fg:x="706" fg:w="1"/><text x="57.4160%" y="383.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.08%)</title><rect x="57.1660%" y="357" width="0.0810%" height="15" fill="rgb(224,88,20)" fg:x="706" fg:w="1"/><text x="57.4160%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.08%)</title><rect x="57.1660%" y="341" width="0.0810%" height="15" fill="rgb(237,93,27)" fg:x="706" fg:w="1"/><text x="57.4160%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="57.1660%" y="325" width="0.0810%" height="15" fill="rgb(226,198,48)" fg:x="706" fg:w="1"/><text x="57.4160%" y="335.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.08%)</title><rect x="57.1660%" y="309" width="0.0810%" height="15" fill="rgb(207,162,53)" fg:x="706" fg:w="1"/><text x="57.4160%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="57.1660%" y="517" width="0.1619%" height="15" fill="rgb(207,169,9)" fg:x="706" fg:w="2"/><text x="57.4160%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="57.1660%" y="501" width="0.1619%" height="15" fill="rgb(224,166,46)" fg:x="706" fg:w="2"/><text x="57.4160%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="57.1660%" y="485" width="0.1619%" height="15" fill="rgb(233,26,6)" fg:x="706" fg:w="2"/><text x="57.4160%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="57.1660%" y="469" width="0.1619%" height="15" fill="rgb(218,106,45)" fg:x="706" fg:w="2"/><text x="57.4160%" y="479.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="57.1660%" y="453" width="0.1619%" height="15" fill="rgb(240,217,4)" fg:x="706" fg:w="2"/><text x="57.4160%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.16%)</title><rect x="57.1660%" y="437" width="0.1619%" height="15" fill="rgb(246,171,10)" fg:x="706" fg:w="2"/><text x="57.4160%" y="447.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.08%)</title><rect x="57.2470%" y="421" width="0.0810%" height="15" fill="rgb(223,197,30)" fg:x="707" fg:w="1"/><text x="57.4970%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="57.2470%" y="405" width="0.0810%" height="15" fill="rgb(207,92,16)" fg:x="707" fg:w="1"/><text x="57.4970%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.2470%" y="389" width="0.0810%" height="15" fill="rgb(211,6,44)" fg:x="707" fg:w="1"/><text x="57.4970%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::PerformAction&gt; (1 samples, 0.08%)</title><rect x="57.3279%" y="517" width="0.0810%" height="15" fill="rgb(219,139,2)" fg:x="708" fg:w="1"/><text x="57.5779%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4089%" y="501" width="0.0810%" height="15" fill="rgb(224,103,21)" fg:x="709" fg:w="1"/><text x="57.6589%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="57.4899%" y="501" width="0.0810%" height="15" fill="rgb(254,110,48)" fg:x="710" fg:w="1"/><text x="57.7399%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::logs::SessionSubscriber&gt; (2 samples, 0.16%)</title><rect x="57.5709%" y="501" width="0.1619%" height="15" fill="rgb(212,88,19)" fg:x="711" fg:w="2"/><text x="57.8209%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6518%" y="485" width="0.0810%" height="15" fill="rgb(248,103,6)" fg:x="712" fg:w="1"/><text x="57.9018%" y="495.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (6 samples, 0.49%)</title><rect x="57.7328%" y="469" width="0.4858%" height="15" fill="rgb(214,53,46)" fg:x="713" fg:w="6"/><text x="57.9828%" y="479.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (4 samples, 0.32%)</title><rect x="57.8947%" y="453" width="0.3239%" height="15" fill="rgb(236,190,24)" fg:x="715" fg:w="4"/><text x="58.1447%" y="463.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (7 samples, 0.57%)</title><rect x="57.7328%" y="501" width="0.5668%" height="15" fill="rgb(254,58,28)" fg:x="713" fg:w="7"/><text x="57.9828%" y="511.50"></text></g><g><title>tracing_core::callsite::register_dispatch (7 samples, 0.57%)</title><rect x="57.7328%" y="485" width="0.5668%" height="15" fill="rgb(243,63,27)" fg:x="713" fg:w="7"/><text x="57.9828%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Dispatchers::register_dispatch (1 samples, 0.08%)</title><rect x="58.2186%" y="469" width="0.0810%" height="15" fill="rgb(206,81,20)" fg:x="719" fg:w="1"/><text x="58.4686%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (1 samples, 0.08%)</title><rect x="58.2186%" y="453" width="0.0810%" height="15" fill="rgb(252,69,51)" fg:x="719" fg:w="1"/><text x="58.4686%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2186%" y="437" width="0.0810%" height="15" fill="rgb(222,213,4)" fg:x="719" fg:w="1"/><text x="58.4686%" y="447.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="58.5425%" y="389" width="0.0810%" height="15" fill="rgb(226,198,12)" fg:x="723" fg:w="1"/><text x="58.7925%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.7854%" y="341" width="0.0810%" height="15" fill="rgb(248,115,11)" fg:x="726" fg:w="1"/><text x="59.0354%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="58.6235%" y="389" width="0.3239%" height="15" fill="rgb(221,148,54)" fg:x="724" fg:w="4"/><text x="58.8735%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.7045%" y="373" width="0.2429%" height="15" fill="rgb(214,209,51)" fg:x="725" fg:w="3"/><text x="58.9545%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.7854%" y="357" width="0.1619%" height="15" fill="rgb(249,116,53)" fg:x="726" fg:w="2"/><text x="59.0354%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.8664%" y="341" width="0.0810%" height="15" fill="rgb(248,170,1)" fg:x="727" fg:w="1"/><text x="59.1164%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8664%" y="325" width="0.0810%" height="15" fill="rgb(244,105,10)" fg:x="727" fg:w="1"/><text x="59.1164%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.8664%" y="309" width="0.0810%" height="15" fill="rgb(229,100,5)" fg:x="727" fg:w="1"/><text x="59.1164%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0283%" y="277" width="0.0810%" height="15" fill="rgb(233,221,39)" fg:x="729" fg:w="1"/><text x="59.2783%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.0283%" y="325" width="0.1619%" height="15" fill="rgb(233,88,21)" fg:x="729" fg:w="2"/><text x="59.2783%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.0283%" y="309" width="0.1619%" height="15" fill="rgb(206,13,0)" fg:x="729" fg:w="2"/><text x="59.2783%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.0283%" y="293" width="0.1619%" height="15" fill="rgb(242,15,35)" fg:x="729" fg:w="2"/><text x="59.2783%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1093%" y="277" width="0.0810%" height="15" fill="rgb(247,142,41)" fg:x="730" fg:w="1"/><text x="59.3593%" y="287.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="59.1903%" y="325" width="0.0810%" height="15" fill="rgb(245,51,29)" fg:x="731" fg:w="1"/><text x="59.4403%" y="335.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="59.2713%" y="325" width="0.0810%" height="15" fill="rgb(228,209,43)" fg:x="732" fg:w="1"/><text x="59.5213%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.4332%" y="197" width="0.0810%" height="15" fill="rgb(233,185,9)" fg:x="734" fg:w="1"/><text x="59.6832%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.4332%" y="181" width="0.0810%" height="15" fill="rgb(226,93,0)" fg:x="734" fg:w="1"/><text x="59.6832%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.4332%" y="165" width="0.0810%" height="15" fill="rgb(245,194,43)" fg:x="734" fg:w="1"/><text x="59.6832%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.4332%" y="149" width="0.0810%" height="15" fill="rgb(211,145,34)" fg:x="734" fg:w="1"/><text x="59.6832%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.4332%" y="133" width="0.0810%" height="15" fill="rgb(231,228,28)" fg:x="734" fg:w="1"/><text x="59.6832%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.4332%" y="117" width="0.0810%" height="15" fill="rgb(236,149,4)" fg:x="734" fg:w="1"/><text x="59.6832%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.4332%" y="101" width="0.0810%" height="15" fill="rgb(234,114,38)" fg:x="734" fg:w="1"/><text x="59.6832%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4332%" y="85" width="0.0810%" height="15" fill="rgb(246,132,51)" fg:x="734" fg:w="1"/><text x="59.6832%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="59.4332%" y="229" width="0.1619%" height="15" fill="rgb(251,137,22)" fg:x="734" fg:w="2"/><text x="59.6832%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.4332%" y="213" width="0.1619%" height="15" fill="rgb(243,59,52)" fg:x="734" fg:w="2"/><text x="59.6832%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.5142%" y="197" width="0.0810%" height="15" fill="rgb(239,56,28)" fg:x="735" fg:w="1"/><text x="59.7642%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.5142%" y="181" width="0.0810%" height="15" fill="rgb(218,168,27)" fg:x="735" fg:w="1"/><text x="59.7642%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.5142%" y="165" width="0.0810%" height="15" fill="rgb(232,165,11)" fg:x="735" fg:w="1"/><text x="59.7642%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.5142%" y="149" width="0.0810%" height="15" fill="rgb(253,55,41)" fg:x="735" fg:w="1"/><text x="59.7642%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.5142%" y="133" width="0.0810%" height="15" fill="rgb(233,206,24)" fg:x="735" fg:w="1"/><text x="59.7642%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.5142%" y="117" width="0.0810%" height="15" fill="rgb(220,199,8)" fg:x="735" fg:w="1"/><text x="59.7642%" y="127.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="59.5142%" y="101" width="0.0810%" height="15" fill="rgb(254,65,26)" fg:x="735" fg:w="1"/><text x="59.7642%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="59.5142%" y="85" width="0.0810%" height="15" fill="rgb(253,102,23)" fg:x="735" fg:w="1"/><text x="59.7642%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5142%" y="69" width="0.0810%" height="15" fill="rgb(231,103,35)" fg:x="735" fg:w="1"/><text x="59.7642%" y="79.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.7571%" y="117" width="0.0810%" height="15" fill="rgb(238,26,10)" fg:x="738" fg:w="1"/><text x="60.0071%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.7571%" y="101" width="0.0810%" height="15" fill="rgb(234,191,34)" fg:x="738" fg:w="1"/><text x="60.0071%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.7571%" y="85" width="0.0810%" height="15" fill="rgb(206,210,9)" fg:x="738" fg:w="1"/><text x="60.0071%" y="95.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="59.5951%" y="181" width="0.3239%" height="15" fill="rgb(219,155,3)" fg:x="736" fg:w="4"/><text x="59.8451%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="59.6761%" y="165" width="0.2429%" height="15" fill="rgb(221,62,52)" fg:x="737" fg:w="3"/><text x="59.9261%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.6761%" y="149" width="0.2429%" height="15" fill="rgb(215,197,36)" fg:x="737" fg:w="3"/><text x="59.9261%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.6761%" y="133" width="0.2429%" height="15" fill="rgb(226,222,6)" fg:x="737" fg:w="3"/><text x="59.9261%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="59.8381%" y="117" width="0.0810%" height="15" fill="rgb(215,58,28)" fg:x="739" fg:w="1"/><text x="60.0881%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.8381%" y="101" width="0.0810%" height="15" fill="rgb(212,148,2)" fg:x="739" fg:w="1"/><text x="60.0881%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.8381%" y="85" width="0.0810%" height="15" fill="rgb(208,21,42)" fg:x="739" fg:w="1"/><text x="60.0881%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="59.8381%" y="69" width="0.0810%" height="15" fill="rgb(209,107,26)" fg:x="739" fg:w="1"/><text x="60.0881%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.8381%" y="53" width="0.0810%" height="15" fill="rgb(254,60,47)" fg:x="739" fg:w="1"/><text x="60.0881%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.8381%" y="37" width="0.0810%" height="15" fill="rgb(207,226,45)" fg:x="739" fg:w="1"/><text x="60.0881%" y="47.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.57%)</title><rect x="59.4332%" y="245" width="0.5668%" height="15" fill="rgb(223,124,22)" fg:x="734" fg:w="7"/><text x="59.6832%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="59.5951%" y="229" width="0.4049%" height="15" fill="rgb(240,162,13)" fg:x="736" fg:w="5"/><text x="59.8451%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="59.5951%" y="213" width="0.4049%" height="15" fill="rgb(244,199,31)" fg:x="736" fg:w="5"/><text x="59.8451%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="59.5951%" y="197" width="0.4049%" height="15" fill="rgb(207,92,16)" fg:x="736" fg:w="5"/><text x="59.8451%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.9190%" y="181" width="0.0810%" height="15" fill="rgb(215,31,19)" fg:x="740" fg:w="1"/><text x="60.1690%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.9190%" y="165" width="0.0810%" height="15" fill="rgb(245,118,14)" fg:x="740" fg:w="1"/><text x="60.1690%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="59.9190%" y="149" width="0.0810%" height="15" fill="rgb(248,12,46)" fg:x="740" fg:w="1"/><text x="60.1690%" y="159.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.9190%" y="133" width="0.0810%" height="15" fill="rgb(209,119,0)" fg:x="740" fg:w="1"/><text x="60.1690%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.73%)</title><rect x="59.3522%" y="325" width="0.7287%" height="15" fill="rgb(254,51,44)" fg:x="733" fg:w="9"/><text x="59.6022%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="59.3522%" y="309" width="0.7287%" height="15" fill="rgb(253,182,35)" fg:x="733" fg:w="9"/><text x="59.6022%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="59.3522%" y="293" width="0.7287%" height="15" fill="rgb(205,198,39)" fg:x="733" fg:w="9"/><text x="59.6022%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.65%)</title><rect x="59.4332%" y="277" width="0.6478%" height="15" fill="rgb(251,175,48)" fg:x="734" fg:w="8"/><text x="59.6832%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="59.4332%" y="261" width="0.6478%" height="15" fill="rgb(239,38,17)" fg:x="734" fg:w="8"/><text x="59.6832%" y="271.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="60.0000%" y="245" width="0.0810%" height="15" fill="rgb(212,101,8)" fg:x="741" fg:w="1"/><text x="60.2500%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.2429%" y="133" width="0.0810%" height="15" fill="rgb(228,35,17)" fg:x="744" fg:w="1"/><text x="60.4929%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.2429%" y="149" width="0.2429%" height="15" fill="rgb(214,95,8)" fg:x="744" fg:w="3"/><text x="60.4929%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.3239%" y="133" width="0.1619%" height="15" fill="rgb(210,176,35)" fg:x="745" fg:w="2"/><text x="60.5739%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.4049%" y="117" width="0.0810%" height="15" fill="rgb(226,4,3)" fg:x="746" fg:w="1"/><text x="60.6549%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.4049%" y="101" width="0.0810%" height="15" fill="rgb(232,133,14)" fg:x="746" fg:w="1"/><text x="60.6549%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.4049%" y="85" width="0.0810%" height="15" fill="rgb(250,191,8)" fg:x="746" fg:w="1"/><text x="60.6549%" y="95.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.4049%" y="69" width="0.0810%" height="15" fill="rgb(213,12,45)" fg:x="746" fg:w="1"/><text x="60.6549%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="60.2429%" y="181" width="0.3239%" height="15" fill="rgb(233,78,26)" fg:x="744" fg:w="4"/><text x="60.4929%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="60.2429%" y="165" width="0.3239%" height="15" fill="rgb(245,222,11)" fg:x="744" fg:w="4"/><text x="60.4929%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.4858%" y="149" width="0.0810%" height="15" fill="rgb(216,174,12)" fg:x="747" fg:w="1"/><text x="60.7358%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.4858%" y="133" width="0.0810%" height="15" fill="rgb(213,15,9)" fg:x="747" fg:w="1"/><text x="60.7358%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.2429%" y="229" width="0.4049%" height="15" fill="rgb(238,103,32)" fg:x="744" fg:w="5"/><text x="60.4929%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.2429%" y="213" width="0.4049%" height="15" fill="rgb(245,85,15)" fg:x="744" fg:w="5"/><text x="60.4929%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.2429%" y="197" width="0.4049%" height="15" fill="rgb(254,204,5)" fg:x="744" fg:w="5"/><text x="60.4929%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.5668%" y="181" width="0.0810%" height="15" fill="rgb(231,178,15)" fg:x="748" fg:w="1"/><text x="60.8168%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.5668%" y="165" width="0.0810%" height="15" fill="rgb(248,151,3)" fg:x="748" fg:w="1"/><text x="60.8168%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.5668%" y="149" width="0.0810%" height="15" fill="rgb(250,139,13)" fg:x="748" fg:w="1"/><text x="60.8168%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.5668%" y="133" width="0.0810%" height="15" fill="rgb(243,107,53)" fg:x="748" fg:w="1"/><text x="60.8168%" y="143.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (22 samples, 1.78%)</title><rect x="58.9474%" y="373" width="1.7814%" height="15" fill="rgb(232,81,15)" fg:x="728" fg:w="22"/><text x="59.1974%" y="383.50">k..</text></g><g><title>engine::session::Session::load_entity (22 samples, 1.78%)</title><rect x="58.9474%" y="357" width="1.7814%" height="15" fill="rgb(225,187,48)" fg:x="728" fg:w="22"/><text x="59.1974%" y="367.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (22 samples, 1.78%)</title><rect x="58.9474%" y="341" width="1.7814%" height="15" fill="rgb(205,116,12)" fg:x="728" fg:w="22"/><text x="59.1974%" y="351.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.65%)</title><rect x="60.0810%" y="325" width="0.6478%" height="15" fill="rgb(220,222,31)" fg:x="742" fg:w="8"/><text x="60.3310%" y="335.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.65%)</title><rect x="60.0810%" y="309" width="0.6478%" height="15" fill="rgb(233,187,49)" fg:x="742" fg:w="8"/><text x="60.3310%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="60.0810%" y="293" width="0.6478%" height="15" fill="rgb(211,168,53)" fg:x="742" fg:w="8"/><text x="60.3310%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="60.0810%" y="277" width="0.6478%" height="15" fill="rgb(206,160,16)" fg:x="742" fg:w="8"/><text x="60.3310%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="60.1619%" y="261" width="0.5668%" height="15" fill="rgb(254,164,13)" fg:x="743" fg:w="7"/><text x="60.4119%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="60.1619%" y="245" width="0.5668%" height="15" fill="rgb(229,45,30)" fg:x="743" fg:w="7"/><text x="60.4119%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.6478%" y="229" width="0.0810%" height="15" fill="rgb(237,32,10)" fg:x="749" fg:w="1"/><text x="60.8978%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6478%" y="213" width="0.0810%" height="15" fill="rgb(251,20,47)" fg:x="749" fg:w="1"/><text x="60.8978%" y="223.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (23 samples, 1.86%)</title><rect x="58.9474%" y="389" width="1.8623%" height="15" fill="rgb(251,116,12)" fg:x="728" fg:w="23"/><text x="59.1974%" y="399.50">&lt;..</text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="60.7287%" y="373" width="0.0810%" height="15" fill="rgb(214,227,27)" fg:x="750" fg:w="1"/><text x="60.9787%" y="383.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (31 samples, 2.51%)</title><rect x="58.3806%" y="405" width="2.5101%" height="15" fill="rgb(248,10,53)" fg:x="721" fg:w="31"/><text x="58.6306%" y="415.50">&lt;p..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.8097%" y="389" width="0.0810%" height="15" fill="rgb(221,176,25)" fg:x="751" fg:w="1"/><text x="61.0597%" y="399.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (32 samples, 2.59%)</title><rect x="58.3806%" y="421" width="2.5911%" height="15" fill="rgb(205,70,46)" fg:x="721" fg:w="32"/><text x="58.6306%" y="431.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="60.8907%" y="405" width="0.0810%" height="15" fill="rgb(217,45,38)" fg:x="752" fg:w="1"/><text x="61.1407%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="61.1336%" y="261" width="0.0810%" height="15" fill="rgb(243,6,54)" fg:x="755" fg:w="1"/><text x="61.3836%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.1336%" y="245" width="0.0810%" height="15" fill="rgb(242,76,23)" fg:x="755" fg:w="1"/><text x="61.3836%" y="255.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="61.1336%" y="389" width="0.1619%" height="15" fill="rgb(239,166,0)" fg:x="755" fg:w="2"/><text x="61.3836%" y="399.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="61.1336%" y="373" width="0.1619%" height="15" fill="rgb(238,174,32)" fg:x="755" fg:w="2"/><text x="61.3836%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="61.1336%" y="357" width="0.1619%" height="15" fill="rgb(238,124,44)" fg:x="755" fg:w="2"/><text x="61.3836%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="61.1336%" y="341" width="0.1619%" height="15" fill="rgb(206,185,9)" fg:x="755" fg:w="2"/><text x="61.3836%" y="351.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="61.1336%" y="325" width="0.1619%" height="15" fill="rgb(215,157,17)" fg:x="755" fg:w="2"/><text x="61.3836%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="61.1336%" y="309" width="0.1619%" height="15" fill="rgb(251,17,29)" fg:x="755" fg:w="2"/><text x="61.3836%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="61.1336%" y="293" width="0.1619%" height="15" fill="rgb(227,113,27)" fg:x="755" fg:w="2"/><text x="61.3836%" y="303.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="61.1336%" y="277" width="0.1619%" height="15" fill="rgb(217,226,24)" fg:x="755" fg:w="2"/><text x="61.3836%" y="287.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="61.2146%" y="261" width="0.0810%" height="15" fill="rgb(251,99,38)" fg:x="756" fg:w="1"/><text x="61.4646%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.2146%" y="245" width="0.0810%" height="15" fill="rgb(231,147,19)" fg:x="756" fg:w="1"/><text x="61.4646%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.2146%" y="229" width="0.0810%" height="15" fill="rgb(230,86,8)" fg:x="756" fg:w="1"/><text x="61.4646%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.2146%" y="213" width="0.0810%" height="15" fill="rgb(237,159,39)" fg:x="756" fg:w="1"/><text x="61.4646%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.2146%" y="197" width="0.0810%" height="15" fill="rgb(247,179,47)" fg:x="756" fg:w="1"/><text x="61.4646%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.2146%" y="181" width="0.0810%" height="15" fill="rgb(253,152,26)" fg:x="756" fg:w="1"/><text x="61.4646%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.2146%" y="165" width="0.0810%" height="15" fill="rgb(222,211,15)" fg:x="756" fg:w="1"/><text x="61.4646%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.2146%" y="149" width="0.0810%" height="15" fill="rgb(236,193,6)" fg:x="756" fg:w="1"/><text x="61.4646%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.2955%" y="373" width="0.0810%" height="15" fill="rgb(226,206,10)" fg:x="757" fg:w="1"/><text x="61.5455%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.2955%" y="357" width="0.0810%" height="15" fill="rgb(213,125,22)" fg:x="757" fg:w="1"/><text x="61.5455%" y="367.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="61.3765%" y="373" width="0.0810%" height="15" fill="rgb(221,66,28)" fg:x="758" fg:w="1"/><text x="61.6265%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.6194%" y="357" width="0.0810%" height="15" fill="rgb(222,84,53)" fg:x="761" fg:w="1"/><text x="61.8694%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7004%" y="325" width="0.0810%" height="15" fill="rgb(243,50,15)" fg:x="762" fg:w="1"/><text x="61.9504%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7004%" y="309" width="0.0810%" height="15" fill="rgb(208,184,23)" fg:x="762" fg:w="1"/><text x="61.9504%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7004%" y="293" width="0.0810%" height="15" fill="rgb(221,83,2)" fg:x="762" fg:w="1"/><text x="61.9504%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.7814%" y="293" width="0.0810%" height="15" fill="rgb(236,53,24)" fg:x="763" fg:w="1"/><text x="62.0314%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7814%" y="277" width="0.0810%" height="15" fill="rgb(244,171,29)" fg:x="763" fg:w="1"/><text x="62.0314%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.8623%" y="293" width="0.0810%" height="15" fill="rgb(205,19,11)" fg:x="764" fg:w="1"/><text x="62.1123%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.8623%" y="277" width="0.0810%" height="15" fill="rgb(207,108,29)" fg:x="764" fg:w="1"/><text x="62.1123%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.8623%" y="261" width="0.0810%" height="15" fill="rgb(236,215,43)" fg:x="764" fg:w="1"/><text x="62.1123%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.8623%" y="245" width="0.0810%" height="15" fill="rgb(213,58,35)" fg:x="764" fg:w="1"/><text x="62.1123%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.8623%" y="229" width="0.0810%" height="15" fill="rgb(220,211,46)" fg:x="764" fg:w="1"/><text x="62.1123%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.8623%" y="213" width="0.0810%" height="15" fill="rgb(212,134,16)" fg:x="764" fg:w="1"/><text x="62.1123%" y="223.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.32%)</title><rect x="61.7004%" y="341" width="0.3239%" height="15" fill="rgb(232,90,44)" fg:x="762" fg:w="4"/><text x="61.9504%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.7814%" y="325" width="0.2429%" height="15" fill="rgb(212,18,36)" fg:x="763" fg:w="3"/><text x="62.0314%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.7814%" y="309" width="0.2429%" height="15" fill="rgb(206,112,24)" fg:x="763" fg:w="3"/><text x="62.0314%" y="319.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="61.9433%" y="293" width="0.0810%" height="15" fill="rgb(238,223,40)" fg:x="765" fg:w="1"/><text x="62.1933%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1053%" y="229" width="0.0810%" height="15" fill="rgb(226,169,20)" fg:x="767" fg:w="1"/><text x="62.3553%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.1053%" y="213" width="0.0810%" height="15" fill="rgb(241,64,52)" fg:x="767" fg:w="1"/><text x="62.3553%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1053%" y="277" width="0.1619%" height="15" fill="rgb(228,120,25)" fg:x="767" fg:w="2"/><text x="62.3553%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1053%" y="261" width="0.1619%" height="15" fill="rgb(234,108,19)" fg:x="767" fg:w="2"/><text x="62.3553%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1053%" y="245" width="0.1619%" height="15" fill="rgb(236,133,29)" fg:x="767" fg:w="2"/><text x="62.3553%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1862%" y="229" width="0.0810%" height="15" fill="rgb(246,174,53)" fg:x="768" fg:w="1"/><text x="62.4362%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3482%" y="261" width="0.0810%" height="15" fill="rgb(210,105,35)" fg:x="770" fg:w="1"/><text x="62.5982%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3482%" y="245" width="0.0810%" height="15" fill="rgb(225,27,26)" fg:x="770" fg:w="1"/><text x="62.5982%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3482%" y="229" width="0.0810%" height="15" fill="rgb(233,2,39)" fg:x="770" fg:w="1"/><text x="62.5982%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3482%" y="213" width="0.0810%" height="15" fill="rgb(219,164,26)" fg:x="770" fg:w="1"/><text x="62.5982%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3482%" y="197" width="0.0810%" height="15" fill="rgb(236,211,5)" fg:x="770" fg:w="1"/><text x="62.5982%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3482%" y="181" width="0.0810%" height="15" fill="rgb(244,227,23)" fg:x="770" fg:w="1"/><text x="62.5982%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3482%" y="165" width="0.0810%" height="15" fill="rgb(230,184,8)" fg:x="770" fg:w="1"/><text x="62.5982%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3482%" y="149" width="0.0810%" height="15" fill="rgb(217,125,48)" fg:x="770" fg:w="1"/><text x="62.5982%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3482%" y="133" width="0.0810%" height="15" fill="rgb(223,192,47)" fg:x="770" fg:w="1"/><text x="62.5982%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3482%" y="117" width="0.0810%" height="15" fill="rgb(226,119,10)" fg:x="770" fg:w="1"/><text x="62.5982%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.3482%" y="101" width="0.0810%" height="15" fill="rgb(221,49,29)" fg:x="770" fg:w="1"/><text x="62.5982%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.3482%" y="85" width="0.0810%" height="15" fill="rgb(217,205,19)" fg:x="770" fg:w="1"/><text x="62.5982%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.3482%" y="69" width="0.0810%" height="15" fill="rgb(242,104,7)" fg:x="770" fg:w="1"/><text x="62.5982%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.3482%" y="53" width="0.0810%" height="15" fill="rgb(209,154,48)" fg:x="770" fg:w="1"/><text x="62.5982%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3482%" y="37" width="0.0810%" height="15" fill="rgb(219,213,46)" fg:x="770" fg:w="1"/><text x="62.5982%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="62.2672%" y="277" width="0.2429%" height="15" fill="rgb(229,105,38)" fg:x="769" fg:w="3"/><text x="62.5172%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.4291%" y="261" width="0.0810%" height="15" fill="rgb(205,151,5)" fg:x="771" fg:w="1"/><text x="62.6791%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.4291%" y="245" width="0.0810%" height="15" fill="rgb(248,115,40)" fg:x="771" fg:w="1"/><text x="62.6791%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.4291%" y="229" width="0.0810%" height="15" fill="rgb(206,179,2)" fg:x="771" fg:w="1"/><text x="62.6791%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.4291%" y="213" width="0.0810%" height="15" fill="rgb(230,103,24)" fg:x="771" fg:w="1"/><text x="62.6791%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.4291%" y="197" width="0.0810%" height="15" fill="rgb(218,152,4)" fg:x="771" fg:w="1"/><text x="62.6791%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.4291%" y="181" width="0.0810%" height="15" fill="rgb(236,161,54)" fg:x="771" fg:w="1"/><text x="62.6791%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4291%" y="165" width="0.0810%" height="15" fill="rgb(226,65,17)" fg:x="771" fg:w="1"/><text x="62.6791%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.4291%" y="149" width="0.0810%" height="15" fill="rgb(221,134,44)" fg:x="771" fg:w="1"/><text x="62.6791%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.4291%" y="133" width="0.0810%" height="15" fill="rgb(251,129,4)" fg:x="771" fg:w="1"/><text x="62.6791%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.4291%" y="117" width="0.0810%" height="15" fill="rgb(244,32,34)" fg:x="771" fg:w="1"/><text x="62.6791%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.4291%" y="101" width="0.0810%" height="15" fill="rgb(251,224,37)" fg:x="771" fg:w="1"/><text x="62.6791%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.4291%" y="85" width="0.0810%" height="15" fill="rgb(248,117,31)" fg:x="771" fg:w="1"/><text x="62.6791%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.4291%" y="69" width="0.0810%" height="15" fill="rgb(222,208,37)" fg:x="771" fg:w="1"/><text x="62.6791%" y="79.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.5101%" y="245" width="0.0810%" height="15" fill="rgb(234,211,25)" fg:x="772" fg:w="1"/><text x="62.7601%" y="255.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="62.5101%" y="277" width="0.2429%" height="15" fill="rgb(211,72,6)" fg:x="772" fg:w="3"/><text x="62.7601%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="62.5101%" y="261" width="0.2429%" height="15" fill="rgb(249,198,38)" fg:x="772" fg:w="3"/><text x="62.7601%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="62.5911%" y="245" width="0.1619%" height="15" fill="rgb(221,86,51)" fg:x="773" fg:w="2"/><text x="62.8411%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.6721%" y="229" width="0.0810%" height="15" fill="rgb(226,178,43)" fg:x="774" fg:w="1"/><text x="62.9221%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9150%" y="229" width="0.0810%" height="15" fill="rgb(215,145,7)" fg:x="777" fg:w="1"/><text x="63.1650%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.0769%" y="149" width="0.0810%" height="15" fill="rgb(250,202,36)" fg:x="779" fg:w="1"/><text x="63.3269%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0769%" y="133" width="0.0810%" height="15" fill="rgb(215,86,13)" fg:x="779" fg:w="1"/><text x="63.3269%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="63.0769%" y="181" width="0.1619%" height="15" fill="rgb(221,134,12)" fg:x="779" fg:w="2"/><text x="63.3269%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.0769%" y="165" width="0.1619%" height="15" fill="rgb(213,82,10)" fg:x="779" fg:w="2"/><text x="63.3269%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.1579%" y="149" width="0.0810%" height="15" fill="rgb(214,142,0)" fg:x="780" fg:w="1"/><text x="63.4079%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.1579%" y="133" width="0.0810%" height="15" fill="rgb(205,145,9)" fg:x="780" fg:w="1"/><text x="63.4079%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.1579%" y="117" width="0.0810%" height="15" fill="rgb(244,214,8)" fg:x="780" fg:w="1"/><text x="63.4079%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.1579%" y="101" width="0.0810%" height="15" fill="rgb(224,72,51)" fg:x="780" fg:w="1"/><text x="63.4079%" y="111.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.1579%" y="85" width="0.0810%" height="15" fill="rgb(233,137,37)" fg:x="780" fg:w="1"/><text x="63.4079%" y="95.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.65%)</title><rect x="62.7530%" y="277" width="0.6478%" height="15" fill="rgb(208,71,28)" fg:x="775" fg:w="8"/><text x="63.0030%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="62.7530%" y="261" width="0.6478%" height="15" fill="rgb(226,31,7)" fg:x="775" fg:w="8"/><text x="63.0030%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="62.7530%" y="245" width="0.6478%" height="15" fill="rgb(229,62,18)" fg:x="775" fg:w="8"/><text x="63.0030%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="62.9960%" y="229" width="0.4049%" height="15" fill="rgb(226,74,28)" fg:x="778" fg:w="5"/><text x="63.2460%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.9960%" y="213" width="0.4049%" height="15" fill="rgb(214,170,18)" fg:x="778" fg:w="5"/><text x="63.2460%" y="223.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="63.0769%" y="197" width="0.3239%" height="15" fill="rgb(227,229,35)" fg:x="779" fg:w="4"/><text x="63.3269%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="63.2389%" y="181" width="0.1619%" height="15" fill="rgb(225,181,39)" fg:x="781" fg:w="2"/><text x="63.4889%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="63.2389%" y="165" width="0.1619%" height="15" fill="rgb(253,124,44)" fg:x="781" fg:w="2"/><text x="63.4889%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="63.2389%" y="149" width="0.1619%" height="15" fill="rgb(220,75,18)" fg:x="781" fg:w="2"/><text x="63.4889%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="63.2389%" y="133" width="0.1619%" height="15" fill="rgb(239,175,43)" fg:x="781" fg:w="2"/><text x="63.4889%" y="143.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.2389%" y="117" width="0.1619%" height="15" fill="rgb(228,112,50)" fg:x="781" fg:w="2"/><text x="63.4889%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.4818%" y="117" width="0.0810%" height="15" fill="rgb(232,105,36)" fg:x="784" fg:w="1"/><text x="63.7318%" y="127.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.4818%" y="101" width="0.0810%" height="15" fill="rgb(227,137,47)" fg:x="784" fg:w="1"/><text x="63.7318%" y="111.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="63.4818%" y="149" width="0.1619%" height="15" fill="rgb(217,51,9)" fg:x="784" fg:w="2"/><text x="63.7318%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.4818%" y="133" width="0.1619%" height="15" fill="rgb(245,117,0)" fg:x="784" fg:w="2"/><text x="63.7318%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.5628%" y="117" width="0.0810%" height="15" fill="rgb(252,52,30)" fg:x="785" fg:w="1"/><text x="63.8128%" y="127.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="63.4008%" y="181" width="0.3239%" height="15" fill="rgb(227,85,33)" fg:x="783" fg:w="4"/><text x="63.6508%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="63.4008%" y="165" width="0.3239%" height="15" fill="rgb(220,157,20)" fg:x="783" fg:w="4"/><text x="63.6508%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.6437%" y="149" width="0.0810%" height="15" fill="rgb(254,14,34)" fg:x="786" fg:w="1"/><text x="63.8937%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="63.4008%" y="213" width="0.4049%" height="15" fill="rgb(216,103,41)" fg:x="783" fg:w="5"/><text x="63.6508%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.4008%" y="197" width="0.4049%" height="15" fill="rgb(245,221,9)" fg:x="783" fg:w="5"/><text x="63.6508%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7247%" y="181" width="0.0810%" height="15" fill="rgb(254,136,47)" fg:x="787" fg:w="1"/><text x="63.9747%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7247%" y="165" width="0.0810%" height="15" fill="rgb(235,71,46)" fg:x="787" fg:w="1"/><text x="63.9747%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.7247%" y="149" width="0.0810%" height="15" fill="rgb(242,154,29)" fg:x="787" fg:w="1"/><text x="63.9747%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.8057%" y="213" width="0.0810%" height="15" fill="rgb(210,65,31)" fg:x="788" fg:w="1"/><text x="64.0557%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8057%" y="197" width="0.0810%" height="15" fill="rgb(244,9,50)" fg:x="788" fg:w="1"/><text x="64.0557%" y="207.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (24 samples, 1.94%)</title><rect x="62.0243%" y="341" width="1.9433%" height="15" fill="rgb(215,141,38)" fg:x="766" fg:w="24"/><text x="62.2743%" y="351.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (24 samples, 1.94%)</title><rect x="62.0243%" y="325" width="1.9433%" height="15" fill="rgb(241,129,6)" fg:x="766" fg:w="24"/><text x="62.2743%" y="335.50">k..</text></g><g><title>engine::session::Session::load_entity (24 samples, 1.94%)</title><rect x="62.0243%" y="309" width="1.9433%" height="15" fill="rgb(253,169,4)" fg:x="766" fg:w="24"/><text x="62.2743%" y="319.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.94%)</title><rect x="62.0243%" y="293" width="1.9433%" height="15" fill="rgb(237,82,36)" fg:x="766" fg:w="24"/><text x="62.2743%" y="303.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.57%)</title><rect x="63.4008%" y="277" width="0.5668%" height="15" fill="rgb(209,171,11)" fg:x="783" fg:w="7"/><text x="63.6508%" y="287.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="63.4008%" y="261" width="0.5668%" height="15" fill="rgb(242,19,22)" fg:x="783" fg:w="7"/><text x="63.6508%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="63.4008%" y="245" width="0.5668%" height="15" fill="rgb(251,122,24)" fg:x="783" fg:w="7"/><text x="63.6508%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="63.4008%" y="229" width="0.5668%" height="15" fill="rgb(226,166,42)" fg:x="783" fg:w="7"/><text x="63.6508%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8866%" y="213" width="0.0810%" height="15" fill="rgb(244,101,48)" fg:x="789" fg:w="1"/><text x="64.1366%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8866%" y="197" width="0.0810%" height="15" fill="rgb(227,125,1)" fg:x="789" fg:w="1"/><text x="64.1366%" y="207.50"></text></g><g><title>plugins_core::tools::contained_by (29 samples, 2.35%)</title><rect x="61.7004%" y="357" width="2.3482%" height="15" fill="rgb(206,79,43)" fg:x="762" fg:w="29"/><text x="61.9504%" y="367.50">p..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9676%" y="341" width="0.0810%" height="15" fill="rgb(241,109,41)" fg:x="790" fg:w="1"/><text x="64.2176%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.1296%" y="309" width="0.0810%" height="15" fill="rgb(219,73,4)" fg:x="792" fg:w="1"/><text x="64.3796%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="64.0486%" y="325" width="0.3239%" height="15" fill="rgb(239,25,41)" fg:x="791" fg:w="4"/><text x="64.2986%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.2105%" y="309" width="0.1619%" height="15" fill="rgb(208,88,46)" fg:x="793" fg:w="2"/><text x="64.4605%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2915%" y="293" width="0.0810%" height="15" fill="rgb(239,184,9)" fg:x="794" fg:w="1"/><text x="64.5415%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2915%" y="277" width="0.0810%" height="15" fill="rgb(223,114,13)" fg:x="794" fg:w="1"/><text x="64.5415%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2915%" y="261" width="0.0810%" height="15" fill="rgb(214,28,42)" fg:x="794" fg:w="1"/><text x="64.5415%" y="271.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.4534%" y="293" width="0.1619%" height="15" fill="rgb(252,32,44)" fg:x="796" fg:w="2"/><text x="64.7034%" y="303.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.7773%" y="245" width="0.0810%" height="15" fill="rgb(231,159,4)" fg:x="800" fg:w="1"/><text x="65.0273%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.7773%" y="229" width="0.0810%" height="15" fill="rgb(210,35,26)" fg:x="800" fg:w="1"/><text x="65.0273%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.7773%" y="213" width="0.0810%" height="15" fill="rgb(208,190,37)" fg:x="800" fg:w="1"/><text x="65.0273%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.7773%" y="197" width="0.0810%" height="15" fill="rgb(226,148,22)" fg:x="800" fg:w="1"/><text x="65.0273%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.7773%" y="181" width="0.0810%" height="15" fill="rgb(242,153,24)" fg:x="800" fg:w="1"/><text x="65.0273%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="64.7773%" y="165" width="0.0810%" height="15" fill="rgb(213,133,7)" fg:x="800" fg:w="1"/><text x="65.0273%" y="175.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (45 samples, 3.64%)</title><rect x="61.4575%" y="373" width="3.6437%" height="15" fill="rgb(248,206,18)" fg:x="759" fg:w="45"/><text x="61.7075%" y="383.50">plug..</text></g><g><title>plugins_core::tools::occupied_by (13 samples, 1.05%)</title><rect x="64.0486%" y="357" width="1.0526%" height="15" fill="rgb(233,157,4)" fg:x="791" fg:w="13"/><text x="64.2986%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (13 samples, 1.05%)</title><rect x="64.0486%" y="341" width="1.0526%" height="15" fill="rgb(249,179,32)" fg:x="791" fg:w="13"/><text x="64.2986%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="64.3725%" y="325" width="0.7287%" height="15" fill="rgb(248,69,35)" fg:x="795" fg:w="9"/><text x="64.6225%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="64.3725%" y="309" width="0.7287%" height="15" fill="rgb(249,158,38)" fg:x="795" fg:w="9"/><text x="64.6225%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (6 samples, 0.49%)</title><rect x="64.6154%" y="293" width="0.4858%" height="15" fill="rgb(223,18,43)" fg:x="798" fg:w="6"/><text x="64.8654%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (6 samples, 0.49%)</title><rect x="64.6154%" y="277" width="0.4858%" height="15" fill="rgb(238,42,45)" fg:x="798" fg:w="6"/><text x="64.8654%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (6 samples, 0.49%)</title><rect x="64.6154%" y="261" width="0.4858%" height="15" fill="rgb(219,65,47)" fg:x="798" fg:w="6"/><text x="64.8654%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="64.8583%" y="245" width="0.2429%" height="15" fill="rgb(248,153,12)" fg:x="801" fg:w="3"/><text x="65.1083%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.8583%" y="229" width="0.2429%" height="15" fill="rgb(240,118,4)" fg:x="801" fg:w="3"/><text x="65.1083%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="65.0202%" y="213" width="0.0810%" height="15" fill="rgb(250,96,34)" fg:x="803" fg:w="1"/><text x="65.2702%" y="223.50"></text></g><g><title>engine::session::Session::captured (100 samples, 8.10%)</title><rect x="57.1660%" y="533" width="8.0972%" height="15" fill="rgb(221,15,4)" fg:x="706" fg:w="100"/><text x="57.4160%" y="543.50">engine::ses..</text></g><g><title>engine::session::logs::capture (97 samples, 7.85%)</title><rect x="57.4089%" y="517" width="7.8543%" height="15" fill="rgb(217,149,33)" fg:x="709" fg:w="97"/><text x="57.6589%" y="527.50">engine::ses..</text></g><g><title>tracing_core::dispatcher::with_default (86 samples, 6.96%)</title><rect x="58.2996%" y="501" width="6.9636%" height="15" fill="rgb(213,58,29)" fg:x="720" fg:w="86"/><text x="58.5496%" y="511.50">tracing_c..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (86 samples, 6.96%)</title><rect x="58.2996%" y="485" width="6.9636%" height="15" fill="rgb(236,218,9)" fg:x="720" fg:w="86"/><text x="58.5496%" y="495.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (86 samples, 6.96%)</title><rect x="58.2996%" y="469" width="6.9636%" height="15" fill="rgb(248,40,19)" fg:x="720" fg:w="86"/><text x="58.5496%" y="479.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (85 samples, 6.88%)</title><rect x="58.3806%" y="453" width="6.8826%" height="15" fill="rgb(212,17,6)" fg:x="721" fg:w="85"/><text x="58.6306%" y="463.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (85 samples, 6.88%)</title><rect x="58.3806%" y="437" width="6.8826%" height="15" fill="rgb(206,212,20)" fg:x="721" fg:w="85"/><text x="58.6306%" y="447.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (53 samples, 4.29%)</title><rect x="60.9717%" y="421" width="4.2915%" height="15" fill="rgb(229,80,37)" fg:x="753" fg:w="53"/><text x="61.2217%" y="431.50">kerne..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (53 samples, 4.29%)</title><rect x="60.9717%" y="405" width="4.2915%" height="15" fill="rgb(253,8,37)" fg:x="753" fg:w="53"/><text x="61.2217%" y="415.50">&lt;plug..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (49 samples, 3.97%)</title><rect x="61.2955%" y="389" width="3.9676%" height="15" fill="rgb(215,16,43)" fg:x="757" fg:w="49"/><text x="61.5455%" y="399.50">plug..</text></g><g><title>plugins_rune::sources::load_sources_from_entity (2 samples, 0.16%)</title><rect x="65.1012%" y="373" width="0.1619%" height="15" fill="rgb(236,219,16)" fg:x="804" fg:w="2"/><text x="65.3512%" y="383.50"></text></g><g><title>plugins_rune::sources::get_script (1 samples, 0.08%)</title><rect x="65.1822%" y="357" width="0.0810%" height="15" fill="rgb(251,0,3)" fg:x="805" fg:w="1"/><text x="65.4322%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="65.1822%" y="341" width="0.0810%" height="15" fill="rgb(207,133,37)" fg:x="805" fg:w="1"/><text x="65.4322%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="65.1822%" y="325" width="0.0810%" height="15" fill="rgb(250,143,20)" fg:x="805" fg:w="1"/><text x="65.4322%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.1822%" y="309" width="0.0810%" height="15" fill="rgb(242,19,50)" fg:x="805" fg:w="1"/><text x="65.4322%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2632%" y="437" width="0.0810%" height="15" fill="rgb(206,124,43)" fg:x="806" fg:w="1"/><text x="65.5132%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.2632%" y="421" width="0.0810%" height="15" fill="rgb(229,4,38)" fg:x="806" fg:w="1"/><text x="65.5132%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.2632%" y="405" width="0.0810%" height="15" fill="rgb(247,220,45)" fg:x="806" fg:w="1"/><text x="65.5132%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.2632%" y="389" width="0.0810%" height="15" fill="rgb(247,195,0)" fg:x="806" fg:w="1"/><text x="65.5132%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.2632%" y="373" width="0.0810%" height="15" fill="rgb(252,12,19)" fg:x="806" fg:w="1"/><text x="65.5132%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.2632%" y="357" width="0.0810%" height="15" fill="rgb(222,49,50)" fg:x="806" fg:w="1"/><text x="65.5132%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.2632%" y="341" width="0.0810%" height="15" fill="rgb(209,157,28)" fg:x="806" fg:w="1"/><text x="65.5132%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.2632%" y="325" width="0.0810%" height="15" fill="rgb(238,174,24)" fg:x="806" fg:w="1"/><text x="65.5132%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.2632%" y="309" width="0.0810%" height="15" fill="rgb(224,17,28)" fg:x="806" fg:w="1"/><text x="65.5132%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.2632%" y="293" width="0.0810%" height="15" fill="rgb(249,7,29)" fg:x="806" fg:w="1"/><text x="65.5132%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.2632%" y="277" width="0.0810%" height="15" fill="rgb(243,178,4)" fg:x="806" fg:w="1"/><text x="65.5132%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.2632%" y="261" width="0.0810%" height="15" fill="rgb(246,138,35)" fg:x="806" fg:w="1"/><text x="65.5132%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.2632%" y="245" width="0.0810%" height="15" fill="rgb(251,85,18)" fg:x="806" fg:w="1"/><text x="65.5132%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.2632%" y="485" width="0.2429%" height="15" fill="rgb(254,55,9)" fg:x="806" fg:w="3"/><text x="65.5132%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.2632%" y="469" width="0.2429%" height="15" fill="rgb(248,4,50)" fg:x="806" fg:w="3"/><text x="65.5132%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.2632%" y="453" width="0.2429%" height="15" fill="rgb(215,208,14)" fg:x="806" fg:w="3"/><text x="65.5132%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.3441%" y="437" width="0.1619%" height="15" fill="rgb(218,37,18)" fg:x="807" fg:w="2"/><text x="65.5941%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.3441%" y="421" width="0.1619%" height="15" fill="rgb(206,104,13)" fg:x="807" fg:w="2"/><text x="65.5941%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4251%" y="405" width="0.0810%" height="15" fill="rgb(248,94,22)" fg:x="808" fg:w="1"/><text x="65.6751%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4251%" y="389" width="0.0810%" height="15" fill="rgb(235,42,46)" fg:x="808" fg:w="1"/><text x="65.6751%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.4251%" y="373" width="0.0810%" height="15" fill="rgb(220,228,48)" fg:x="808" fg:w="1"/><text x="65.6751%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.4251%" y="357" width="0.0810%" height="15" fill="rgb(216,58,12)" fg:x="808" fg:w="1"/><text x="65.6751%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.4251%" y="341" width="0.0810%" height="15" fill="rgb(223,97,52)" fg:x="808" fg:w="1"/><text x="65.6751%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.4251%" y="325" width="0.0810%" height="15" fill="rgb(208,159,17)" fg:x="808" fg:w="1"/><text x="65.6751%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.4251%" y="309" width="0.0810%" height="15" fill="rgb(215,172,9)" fg:x="808" fg:w="1"/><text x="65.6751%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5061%" y="421" width="0.0810%" height="15" fill="rgb(252,175,30)" fg:x="809" fg:w="1"/><text x="65.7561%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5061%" y="405" width="0.0810%" height="15" fill="rgb(209,159,10)" fg:x="809" fg:w="1"/><text x="65.7561%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5870%" y="421" width="0.0810%" height="15" fill="rgb(229,73,51)" fg:x="810" fg:w="1"/><text x="65.8370%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5870%" y="405" width="0.0810%" height="15" fill="rgb(208,212,43)" fg:x="810" fg:w="1"/><text x="65.8370%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.5870%" y="389" width="0.0810%" height="15" fill="rgb(254,123,53)" fg:x="810" fg:w="1"/><text x="65.8370%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.5870%" y="373" width="0.0810%" height="15" fill="rgb(254,128,49)" fg:x="810" fg:w="1"/><text x="65.8370%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.5870%" y="357" width="0.0810%" height="15" fill="rgb(246,16,16)" fg:x="810" fg:w="1"/><text x="65.8370%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.5870%" y="341" width="0.0810%" height="15" fill="rgb(209,200,1)" fg:x="810" fg:w="1"/><text x="65.8370%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.5870%" y="325" width="0.0810%" height="15" fill="rgb(235,9,3)" fg:x="810" fg:w="1"/><text x="65.8370%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.5870%" y="309" width="0.0810%" height="15" fill="rgb(233,121,54)" fg:x="810" fg:w="1"/><text x="65.8370%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.5870%" y="293" width="0.0810%" height="15" fill="rgb(236,80,25)" fg:x="810" fg:w="1"/><text x="65.8370%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.5870%" y="277" width="0.0810%" height="15" fill="rgb(220,44,24)" fg:x="810" fg:w="1"/><text x="65.8370%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.5870%" y="261" width="0.0810%" height="15" fill="rgb(236,225,16)" fg:x="810" fg:w="1"/><text x="65.8370%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5870%" y="245" width="0.0810%" height="15" fill="rgb(237,140,0)" fg:x="810" fg:w="1"/><text x="65.8370%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.5061%" y="437" width="0.2429%" height="15" fill="rgb(243,225,53)" fg:x="809" fg:w="3"/><text x="65.7561%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6680%" y="421" width="0.0810%" height="15" fill="rgb(240,140,30)" fg:x="811" fg:w="1"/><text x="65.9180%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7490%" y="261" width="0.0810%" height="15" fill="rgb(217,51,16)" fg:x="812" fg:w="1"/><text x="65.9990%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7490%" y="245" width="0.0810%" height="15" fill="rgb(245,75,50)" fg:x="812" fg:w="1"/><text x="65.9990%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.7490%" y="229" width="0.0810%" height="15" fill="rgb(208,174,22)" fg:x="812" fg:w="1"/><text x="65.9990%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.7490%" y="213" width="0.0810%" height="15" fill="rgb(219,98,50)" fg:x="812" fg:w="1"/><text x="65.9990%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.7490%" y="197" width="0.0810%" height="15" fill="rgb(243,138,3)" fg:x="812" fg:w="1"/><text x="65.9990%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.7490%" y="181" width="0.0810%" height="15" fill="rgb(243,132,26)" fg:x="812" fg:w="1"/><text x="65.9990%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7490%" y="165" width="0.0810%" height="15" fill="rgb(250,201,8)" fg:x="812" fg:w="1"/><text x="65.9990%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.7490%" y="373" width="0.1619%" height="15" fill="rgb(213,91,26)" fg:x="812" fg:w="2"/><text x="65.9990%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.7490%" y="357" width="0.1619%" height="15" fill="rgb(229,117,1)" fg:x="812" fg:w="2"/><text x="65.9990%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.7490%" y="341" width="0.1619%" height="15" fill="rgb(229,24,6)" fg:x="812" fg:w="2"/><text x="65.9990%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.7490%" y="325" width="0.1619%" height="15" fill="rgb(206,69,11)" fg:x="812" fg:w="2"/><text x="65.9990%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.7490%" y="309" width="0.1619%" height="15" fill="rgb(234,111,34)" fg:x="812" fg:w="2"/><text x="65.9990%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.7490%" y="293" width="0.1619%" height="15" fill="rgb(213,187,51)" fg:x="812" fg:w="2"/><text x="65.9990%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.7490%" y="277" width="0.1619%" height="15" fill="rgb(207,45,11)" fg:x="812" fg:w="2"/><text x="65.9990%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8300%" y="261" width="0.0810%" height="15" fill="rgb(225,151,47)" fg:x="813" fg:w="1"/><text x="66.0800%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.8300%" y="245" width="0.0810%" height="15" fill="rgb(211,226,5)" fg:x="813" fg:w="1"/><text x="66.0800%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9109%" y="373" width="0.0810%" height="15" fill="rgb(214,83,52)" fg:x="814" fg:w="1"/><text x="66.1609%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9109%" y="357" width="0.0810%" height="15" fill="rgb(229,49,53)" fg:x="814" fg:w="1"/><text x="66.1609%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.9109%" y="341" width="0.0810%" height="15" fill="rgb(246,8,28)" fg:x="814" fg:w="1"/><text x="66.1609%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.9109%" y="325" width="0.0810%" height="15" fill="rgb(207,28,41)" fg:x="814" fg:w="1"/><text x="66.1609%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.9109%" y="309" width="0.0810%" height="15" fill="rgb(254,22,25)" fg:x="814" fg:w="1"/><text x="66.1609%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.9109%" y="293" width="0.0810%" height="15" fill="rgb(209,120,42)" fg:x="814" fg:w="1"/><text x="66.1609%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.9109%" y="277" width="0.0810%" height="15" fill="rgb(216,194,18)" fg:x="814" fg:w="1"/><text x="66.1609%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.9109%" y="261" width="0.0810%" height="15" fill="rgb(213,70,17)" fg:x="814" fg:w="1"/><text x="66.1609%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.9109%" y="245" width="0.0810%" height="15" fill="rgb(228,66,19)" fg:x="814" fg:w="1"/><text x="66.1609%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.9109%" y="229" width="0.0810%" height="15" fill="rgb(236,221,54)" fg:x="814" fg:w="1"/><text x="66.1609%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.9109%" y="213" width="0.0810%" height="15" fill="rgb(207,175,15)" fg:x="814" fg:w="1"/><text x="66.1609%" y="223.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="65.9109%" y="197" width="0.0810%" height="15" fill="rgb(234,76,8)" fg:x="814" fg:w="1"/><text x="66.1609%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="65.7490%" y="389" width="0.3239%" height="15" fill="rgb(243,106,0)" fg:x="812" fg:w="4"/><text x="65.9990%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9919%" y="373" width="0.0810%" height="15" fill="rgb(208,48,19)" fg:x="815" fg:w="1"/><text x="66.2419%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.9919%" y="357" width="0.0810%" height="15" fill="rgb(251,50,29)" fg:x="815" fg:w="1"/><text x="66.2419%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.1538%" y="341" width="0.0810%" height="15" fill="rgb(222,31,49)" fg:x="817" fg:w="1"/><text x="66.4038%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.1538%" y="325" width="0.0810%" height="15" fill="rgb(232,33,18)" fg:x="817" fg:w="1"/><text x="66.4038%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.2348%" y="341" width="0.0810%" height="15" fill="rgb(209,1,44)" fg:x="818" fg:w="1"/><text x="66.4848%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="66.2348%" y="325" width="0.0810%" height="15" fill="rgb(211,7,1)" fg:x="818" fg:w="1"/><text x="66.4848%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="66.0729%" y="389" width="0.4049%" height="15" fill="rgb(224,111,27)" fg:x="816" fg:w="5"/><text x="66.3229%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="66.0729%" y="373" width="0.4049%" height="15" fill="rgb(252,195,39)" fg:x="816" fg:w="5"/><text x="66.3229%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="66.1538%" y="357" width="0.3239%" height="15" fill="rgb(237,198,5)" fg:x="817" fg:w="4"/><text x="66.4038%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.3158%" y="341" width="0.1619%" height="15" fill="rgb(232,148,1)" fg:x="819" fg:w="2"/><text x="66.5658%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.3158%" y="325" width="0.1619%" height="15" fill="rgb(249,41,3)" fg:x="819" fg:w="2"/><text x="66.5658%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="66.3968%" y="309" width="0.0810%" height="15" fill="rgb(215,14,33)" fg:x="820" fg:w="1"/><text x="66.6468%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.5587%" y="325" width="0.0810%" height="15" fill="rgb(209,146,24)" fg:x="822" fg:w="1"/><text x="66.8087%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="66.4777%" y="357" width="0.2429%" height="15" fill="rgb(219,51,47)" fg:x="821" fg:w="3"/><text x="66.7277%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="66.4777%" y="341" width="0.2429%" height="15" fill="rgb(234,217,40)" fg:x="821" fg:w="3"/><text x="66.7277%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.6397%" y="325" width="0.0810%" height="15" fill="rgb(228,34,26)" fg:x="823" fg:w="1"/><text x="66.8897%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6397%" y="309" width="0.0810%" height="15" fill="rgb(224,50,29)" fg:x="823" fg:w="1"/><text x="66.8897%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7206%" y="357" width="0.0810%" height="15" fill="rgb(205,79,51)" fg:x="824" fg:w="1"/><text x="66.9706%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.13%)</title><rect x="65.7490%" y="437" width="1.1336%" height="15" fill="rgb(218,136,28)" fg:x="812" fg:w="14"/><text x="65.9990%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.13%)</title><rect x="65.7490%" y="421" width="1.1336%" height="15" fill="rgb(220,150,10)" fg:x="812" fg:w="14"/><text x="65.9990%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.13%)</title><rect x="65.7490%" y="405" width="1.1336%" height="15" fill="rgb(242,158,47)" fg:x="812" fg:w="14"/><text x="65.9990%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="66.4777%" y="389" width="0.4049%" height="15" fill="rgb(209,68,0)" fg:x="821" fg:w="5"/><text x="66.7277%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="66.4777%" y="373" width="0.4049%" height="15" fill="rgb(208,13,41)" fg:x="821" fg:w="5"/><text x="66.7277%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.8016%" y="357" width="0.0810%" height="15" fill="rgb(226,201,7)" fg:x="825" fg:w="1"/><text x="67.0516%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8016%" y="341" width="0.0810%" height="15" fill="rgb(236,103,26)" fg:x="825" fg:w="1"/><text x="67.0516%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="66.8826%" y="357" width="0.1619%" height="15" fill="rgb(243,162,8)" fg:x="826" fg:w="2"/><text x="67.1326%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="66.8826%" y="341" width="0.1619%" height="15" fill="rgb(237,225,11)" fg:x="826" fg:w="2"/><text x="67.1326%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.8826%" y="325" width="0.1619%" height="15" fill="rgb(247,186,32)" fg:x="826" fg:w="2"/><text x="67.1326%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="66.8826%" y="405" width="0.2429%" height="15" fill="rgb(215,26,28)" fg:x="826" fg:w="3"/><text x="67.1326%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="66.8826%" y="389" width="0.2429%" height="15" fill="rgb(208,121,6)" fg:x="826" fg:w="3"/><text x="67.1326%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.8826%" y="373" width="0.2429%" height="15" fill="rgb(225,91,3)" fg:x="826" fg:w="3"/><text x="67.1326%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.0445%" y="357" width="0.0810%" height="15" fill="rgb(246,119,36)" fg:x="828" fg:w="1"/><text x="67.2945%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.0445%" y="341" width="0.0810%" height="15" fill="rgb(254,173,2)" fg:x="828" fg:w="1"/><text x="67.2945%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 1.70%)</title><rect x="65.5061%" y="485" width="1.7004%" height="15" fill="rgb(209,87,54)" fg:x="809" fg:w="21"/><text x="65.7561%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 1.70%)</title><rect x="65.5061%" y="469" width="1.7004%" height="15" fill="rgb(223,216,20)" fg:x="809" fg:w="21"/><text x="65.7561%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (21 samples, 1.70%)</title><rect x="65.5061%" y="453" width="1.7004%" height="15" fill="rgb(220,31,8)" fg:x="809" fg:w="21"/><text x="65.7561%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="66.8826%" y="437" width="0.3239%" height="15" fill="rgb(220,185,15)" fg:x="826" fg:w="4"/><text x="67.1326%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="66.8826%" y="421" width="0.3239%" height="15" fill="rgb(247,190,50)" fg:x="826" fg:w="4"/><text x="67.1326%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.1255%" y="405" width="0.0810%" height="15" fill="rgb(239,173,47)" fg:x="829" fg:w="1"/><text x="67.3755%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.1255%" y="389" width="0.0810%" height="15" fill="rgb(218,190,42)" fg:x="829" fg:w="1"/><text x="67.3755%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.2874%" y="405" width="0.0810%" height="15" fill="rgb(251,207,16)" fg:x="831" fg:w="1"/><text x="67.5374%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2874%" y="389" width="0.0810%" height="15" fill="rgb(222,199,47)" fg:x="831" fg:w="1"/><text x="67.5374%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3684%" y="389" width="0.0810%" height="15" fill="rgb(245,190,7)" fg:x="832" fg:w="1"/><text x="67.6184%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="67.2874%" y="453" width="0.2429%" height="15" fill="rgb(239,85,38)" fg:x="831" fg:w="3"/><text x="67.5374%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="67.2874%" y="437" width="0.2429%" height="15" fill="rgb(229,69,51)" fg:x="831" fg:w="3"/><text x="67.5374%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.2874%" y="421" width="0.2429%" height="15" fill="rgb(231,104,51)" fg:x="831" fg:w="3"/><text x="67.5374%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.3684%" y="405" width="0.1619%" height="15" fill="rgb(235,49,4)" fg:x="832" fg:w="2"/><text x="67.6184%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.4494%" y="389" width="0.0810%" height="15" fill="rgb(246,166,20)" fg:x="833" fg:w="1"/><text x="67.6994%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.4494%" y="373" width="0.0810%" height="15" fill="rgb(230,119,37)" fg:x="833" fg:w="1"/><text x="67.6994%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4494%" y="357" width="0.0810%" height="15" fill="rgb(234,77,34)" fg:x="833" fg:w="1"/><text x="67.6994%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (29 samples, 2.35%)</title><rect x="65.2632%" y="517" width="2.3482%" height="15" fill="rgb(211,222,33)" fg:x="806" fg:w="29"/><text x="65.5132%" y="527.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (29 samples, 2.35%)</title><rect x="65.2632%" y="501" width="2.3482%" height="15" fill="rgb(226,45,42)" fg:x="806" fg:w="29"/><text x="65.5132%" y="511.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="67.2065%" y="485" width="0.4049%" height="15" fill="rgb(215,174,28)" fg:x="830" fg:w="5"/><text x="67.4565%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="67.2874%" y="469" width="0.3239%" height="15" fill="rgb(254,173,49)" fg:x="831" fg:w="4"/><text x="67.5374%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5304%" y="453" width="0.0810%" height="15" fill="rgb(229,191,6)" fg:x="834" fg:w="1"/><text x="67.7804%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6113%" y="453" width="0.0810%" height="15" fill="rgb(212,145,22)" fg:x="835" fg:w="1"/><text x="67.8613%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6113%" y="437" width="0.0810%" height="15" fill="rgb(226,6,51)" fg:x="835" fg:w="1"/><text x="67.8613%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.6113%" y="421" width="0.0810%" height="15" fill="rgb(227,128,8)" fg:x="835" fg:w="1"/><text x="67.8613%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.6113%" y="405" width="0.0810%" height="15" fill="rgb(205,24,10)" fg:x="835" fg:w="1"/><text x="67.8613%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.6113%" y="389" width="0.0810%" height="15" fill="rgb(217,147,27)" fg:x="835" fg:w="1"/><text x="67.8613%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6113%" y="373" width="0.0810%" height="15" fill="rgb(250,82,42)" fg:x="835" fg:w="1"/><text x="67.8613%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6113%" y="357" width="0.0810%" height="15" fill="rgb(248,93,17)" fg:x="835" fg:w="1"/><text x="67.8613%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.6113%" y="341" width="0.0810%" height="15" fill="rgb(254,212,40)" fg:x="835" fg:w="1"/><text x="67.8613%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.6113%" y="325" width="0.0810%" height="15" fill="rgb(229,209,2)" fg:x="835" fg:w="1"/><text x="67.8613%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.6113%" y="309" width="0.0810%" height="15" fill="rgb(211,50,43)" fg:x="835" fg:w="1"/><text x="67.8613%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.6113%" y="293" width="0.0810%" height="15" fill="rgb(245,196,29)" fg:x="835" fg:w="1"/><text x="67.8613%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6113%" y="277" width="0.0810%" height="15" fill="rgb(216,132,13)" fg:x="835" fg:w="1"/><text x="67.8613%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.6113%" y="485" width="0.1619%" height="15" fill="rgb(251,108,21)" fg:x="835" fg:w="2"/><text x="67.8613%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.6113%" y="469" width="0.1619%" height="15" fill="rgb(229,174,54)" fg:x="835" fg:w="2"/><text x="67.8613%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6923%" y="453" width="0.0810%" height="15" fill="rgb(211,175,47)" fg:x="836" fg:w="1"/><text x="67.9423%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.6113%" y="501" width="0.3239%" height="15" fill="rgb(234,5,37)" fg:x="835" fg:w="4"/><text x="67.8613%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.7733%" y="485" width="0.1619%" height="15" fill="rgb(244,150,43)" fg:x="837" fg:w="2"/><text x="68.0233%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.7733%" y="469" width="0.1619%" height="15" fill="rgb(242,172,38)" fg:x="837" fg:w="2"/><text x="68.0233%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.7733%" y="453" width="0.1619%" height="15" fill="rgb(205,27,8)" fg:x="837" fg:w="2"/><text x="68.0233%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.7733%" y="437" width="0.1619%" height="15" fill="rgb(217,57,3)" fg:x="837" fg:w="2"/><text x="68.0233%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.7733%" y="421" width="0.1619%" height="15" fill="rgb(242,21,38)" fg:x="837" fg:w="2"/><text x="68.0233%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.7733%" y="405" width="0.1619%" height="15" fill="rgb(209,64,43)" fg:x="837" fg:w="2"/><text x="68.0233%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.7733%" y="389" width="0.1619%" height="15" fill="rgb(222,2,46)" fg:x="837" fg:w="2"/><text x="68.0233%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="67.7733%" y="373" width="0.1619%" height="15" fill="rgb(218,19,44)" fg:x="837" fg:w="2"/><text x="68.0233%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="67.7733%" y="357" width="0.1619%" height="15" fill="rgb(240,203,42)" fg:x="837" fg:w="2"/><text x="68.0233%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="67.7733%" y="341" width="0.1619%" height="15" fill="rgb(229,23,45)" fg:x="837" fg:w="2"/><text x="68.0233%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="67.7733%" y="325" width="0.1619%" height="15" fill="rgb(205,228,51)" fg:x="837" fg:w="2"/><text x="68.0233%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.7733%" y="309" width="0.1619%" height="15" fill="rgb(239,36,20)" fg:x="837" fg:w="2"/><text x="68.0233%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0162%" y="485" width="0.0810%" height="15" fill="rgb(248,172,27)" fg:x="840" fg:w="1"/><text x="68.2662%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0162%" y="469" width="0.0810%" height="15" fill="rgb(244,55,32)" fg:x="840" fg:w="1"/><text x="68.2662%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0162%" y="453" width="0.0810%" height="15" fill="rgb(215,97,16)" fg:x="840" fg:w="1"/><text x="68.2662%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.0162%" y="437" width="0.0810%" height="15" fill="rgb(224,80,29)" fg:x="840" fg:w="1"/><text x="68.2662%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.0162%" y="421" width="0.0810%" height="15" fill="rgb(216,93,47)" fg:x="840" fg:w="1"/><text x="68.2662%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.0162%" y="405" width="0.0810%" height="15" fill="rgb(238,159,10)" fg:x="840" fg:w="1"/><text x="68.2662%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.0162%" y="389" width="0.0810%" height="15" fill="rgb(223,98,29)" fg:x="840" fg:w="1"/><text x="68.2662%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.0162%" y="373" width="0.0810%" height="15" fill="rgb(210,176,23)" fg:x="840" fg:w="1"/><text x="68.2662%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.0162%" y="357" width="0.0810%" height="15" fill="rgb(242,162,27)" fg:x="840" fg:w="1"/><text x="68.2662%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.0162%" y="341" width="0.0810%" height="15" fill="rgb(245,109,32)" fg:x="840" fg:w="1"/><text x="68.2662%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.0162%" y="325" width="0.0810%" height="15" fill="rgb(248,87,8)" fg:x="840" fg:w="1"/><text x="68.2662%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.0162%" y="309" width="0.0810%" height="15" fill="rgb(250,160,50)" fg:x="840" fg:w="1"/><text x="68.2662%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.0162%" y="293" width="0.0810%" height="15" fill="rgb(246,165,25)" fg:x="840" fg:w="1"/><text x="68.2662%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.0162%" y="277" width="0.0810%" height="15" fill="rgb(249,219,3)" fg:x="840" fg:w="1"/><text x="68.2662%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.0162%" y="261" width="0.0810%" height="15" fill="rgb(226,66,5)" fg:x="840" fg:w="1"/><text x="68.2662%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="67.9352%" y="501" width="0.2429%" height="15" fill="rgb(250,220,43)" fg:x="839" fg:w="3"/><text x="68.1852%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.0972%" y="485" width="0.0810%" height="15" fill="rgb(225,111,31)" fg:x="841" fg:w="1"/><text x="68.3472%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0972%" y="469" width="0.0810%" height="15" fill="rgb(248,106,18)" fg:x="841" fg:w="1"/><text x="68.3472%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.0972%" y="453" width="0.0810%" height="15" fill="rgb(220,226,45)" fg:x="841" fg:w="1"/><text x="68.3472%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0972%" y="437" width="0.0810%" height="15" fill="rgb(208,58,53)" fg:x="841" fg:w="1"/><text x="68.3472%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.0972%" y="421" width="0.0810%" height="15" fill="rgb(209,133,1)" fg:x="841" fg:w="1"/><text x="68.3472%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0972%" y="405" width="0.0810%" height="15" fill="rgb(228,216,27)" fg:x="841" fg:w="1"/><text x="68.3472%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="68.1781%" y="501" width="0.0810%" height="15" fill="rgb(238,155,2)" fg:x="842" fg:w="1"/><text x="68.4281%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.2591%" y="341" width="0.1619%" height="15" fill="rgb(244,99,37)" fg:x="843" fg:w="2"/><text x="68.5091%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.2591%" y="325" width="0.1619%" height="15" fill="rgb(254,32,3)" fg:x="843" fg:w="2"/><text x="68.5091%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3401%" y="309" width="0.0810%" height="15" fill="rgb(234,46,50)" fg:x="844" fg:w="1"/><text x="68.5901%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="68.2591%" y="405" width="0.2429%" height="15" fill="rgb(232,118,51)" fg:x="843" fg:w="3"/><text x="68.5091%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.2591%" y="389" width="0.2429%" height="15" fill="rgb(207,24,32)" fg:x="843" fg:w="3"/><text x="68.5091%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="68.2591%" y="373" width="0.2429%" height="15" fill="rgb(208,107,43)" fg:x="843" fg:w="3"/><text x="68.5091%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.2591%" y="357" width="0.2429%" height="15" fill="rgb(231,28,9)" fg:x="843" fg:w="3"/><text x="68.5091%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.4211%" y="341" width="0.0810%" height="15" fill="rgb(241,204,15)" fg:x="845" fg:w="1"/><text x="68.6711%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.4211%" y="325" width="0.0810%" height="15" fill="rgb(214,54,15)" fg:x="845" fg:w="1"/><text x="68.6711%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.6640%" y="373" width="0.0810%" height="15" fill="rgb(230,12,28)" fg:x="848" fg:w="1"/><text x="68.9140%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.6640%" y="357" width="0.0810%" height="15" fill="rgb(221,171,5)" fg:x="848" fg:w="1"/><text x="68.9140%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.65%)</title><rect x="68.2591%" y="501" width="0.6478%" height="15" fill="rgb(207,72,25)" fg:x="843" fg:w="8"/><text x="68.5091%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="68.2591%" y="485" width="0.6478%" height="15" fill="rgb(249,79,37)" fg:x="843" fg:w="8"/><text x="68.5091%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="68.2591%" y="469" width="0.6478%" height="15" fill="rgb(209,98,49)" fg:x="843" fg:w="8"/><text x="68.5091%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.65%)</title><rect x="68.2591%" y="453" width="0.6478%" height="15" fill="rgb(221,62,13)" fg:x="843" fg:w="8"/><text x="68.5091%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="68.2591%" y="437" width="0.6478%" height="15" fill="rgb(223,39,6)" fg:x="843" fg:w="8"/><text x="68.5091%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.65%)</title><rect x="68.2591%" y="421" width="0.6478%" height="15" fill="rgb(246,163,20)" fg:x="843" fg:w="8"/><text x="68.5091%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="68.5020%" y="405" width="0.4049%" height="15" fill="rgb(211,111,29)" fg:x="846" fg:w="5"/><text x="68.7520%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="68.5020%" y="389" width="0.4049%" height="15" fill="rgb(243,118,5)" fg:x="846" fg:w="5"/><text x="68.7520%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="68.7449%" y="373" width="0.1619%" height="15" fill="rgb(240,144,52)" fg:x="849" fg:w="2"/><text x="68.9949%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7449%" y="357" width="0.1619%" height="15" fill="rgb(244,158,36)" fg:x="849" fg:w="2"/><text x="68.9949%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.7449%" y="341" width="0.1619%" height="15" fill="rgb(241,109,37)" fg:x="849" fg:w="2"/><text x="68.9949%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.9069%" y="357" width="0.0810%" height="15" fill="rgb(213,95,32)" fg:x="851" fg:w="1"/><text x="69.1569%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.9069%" y="341" width="0.0810%" height="15" fill="rgb(252,193,9)" fg:x="851" fg:w="1"/><text x="69.1569%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.9069%" y="325" width="0.0810%" height="15" fill="rgb(225,213,21)" fg:x="851" fg:w="1"/><text x="69.1569%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.9069%" y="309" width="0.0810%" height="15" fill="rgb(220,172,46)" fg:x="851" fg:w="1"/><text x="69.1569%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (47 samples, 3.81%)</title><rect x="65.2632%" y="533" width="3.8057%" height="15" fill="rgb(235,75,41)" fg:x="806" fg:w="47"/><text x="65.5132%" y="543.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.46%)</title><rect x="67.6113%" y="517" width="1.4575%" height="15" fill="rgb(213,86,9)" fg:x="835" fg:w="18"/><text x="67.8613%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="68.9069%" y="501" width="0.1619%" height="15" fill="rgb(238,127,51)" fg:x="851" fg:w="2"/><text x="69.1569%" y="511.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="68.9069%" y="485" width="0.1619%" height="15" fill="rgb(215,2,54)" fg:x="851" fg:w="2"/><text x="69.1569%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.9069%" y="469" width="0.1619%" height="15" fill="rgb(245,80,6)" fg:x="851" fg:w="2"/><text x="69.1569%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.9069%" y="453" width="0.1619%" height="15" fill="rgb(233,106,42)" fg:x="851" fg:w="2"/><text x="69.1569%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.9069%" y="437" width="0.1619%" height="15" fill="rgb(244,86,38)" fg:x="851" fg:w="2"/><text x="69.1569%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.9069%" y="421" width="0.1619%" height="15" fill="rgb(242,167,7)" fg:x="851" fg:w="2"/><text x="69.1569%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.9069%" y="405" width="0.1619%" height="15" fill="rgb(218,216,3)" fg:x="851" fg:w="2"/><text x="69.1569%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.9069%" y="389" width="0.1619%" height="15" fill="rgb(206,136,36)" fg:x="851" fg:w="2"/><text x="69.1569%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.9069%" y="373" width="0.1619%" height="15" fill="rgb(206,206,15)" fg:x="851" fg:w="2"/><text x="69.1569%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.9879%" y="357" width="0.0810%" height="15" fill="rgb(207,163,34)" fg:x="852" fg:w="1"/><text x="69.2379%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.9879%" y="341" width="0.0810%" height="15" fill="rgb(240,127,22)" fg:x="852" fg:w="1"/><text x="69.2379%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.9879%" y="325" width="0.0810%" height="15" fill="rgb(227,49,5)" fg:x="852" fg:w="1"/><text x="69.2379%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.9879%" y="309" width="0.0810%" height="15" fill="rgb(231,8,6)" fg:x="852" fg:w="1"/><text x="69.2379%" y="319.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="69.1498%" y="501" width="0.0810%" height="15" fill="rgb(223,21,24)" fg:x="854" fg:w="1"/><text x="69.3998%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1498%" y="485" width="0.0810%" height="15" fill="rgb(244,44,52)" fg:x="854" fg:w="1"/><text x="69.3998%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1498%" y="469" width="0.0810%" height="15" fill="rgb(207,73,28)" fg:x="854" fg:w="1"/><text x="69.3998%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.1498%" y="453" width="0.0810%" height="15" fill="rgb(234,215,10)" fg:x="854" fg:w="1"/><text x="69.3998%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.1498%" y="437" width="0.0810%" height="15" fill="rgb(236,85,3)" fg:x="854" fg:w="1"/><text x="69.3998%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.1498%" y="421" width="0.0810%" height="15" fill="rgb(236,102,39)" fg:x="854" fg:w="1"/><text x="69.3998%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.1498%" y="405" width="0.0810%" height="15" fill="rgb(243,50,8)" fg:x="854" fg:w="1"/><text x="69.3998%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.1498%" y="389" width="0.0810%" height="15" fill="rgb(207,111,4)" fg:x="854" fg:w="1"/><text x="69.3998%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3117%" y="453" width="0.0810%" height="15" fill="rgb(230,52,42)" fg:x="856" fg:w="1"/><text x="69.5617%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3117%" y="437" width="0.0810%" height="15" fill="rgb(252,178,50)" fg:x="856" fg:w="1"/><text x="69.5617%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.3117%" y="469" width="0.1619%" height="15" fill="rgb(234,46,35)" fg:x="856" fg:w="2"/><text x="69.5617%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3927%" y="453" width="0.0810%" height="15" fill="rgb(228,69,37)" fg:x="857" fg:w="1"/><text x="69.6427%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3927%" y="437" width="0.0810%" height="15" fill="rgb(221,21,11)" fg:x="857" fg:w="1"/><text x="69.6427%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.3927%" y="421" width="0.0810%" height="15" fill="rgb(223,56,9)" fg:x="857" fg:w="1"/><text x="69.6427%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.3927%" y="405" width="0.0810%" height="15" fill="rgb(234,30,19)" fg:x="857" fg:w="1"/><text x="69.6427%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.3927%" y="389" width="0.0810%" height="15" fill="rgb(211,64,54)" fg:x="857" fg:w="1"/><text x="69.6427%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3927%" y="373" width="0.0810%" height="15" fill="rgb(250,189,5)" fg:x="857" fg:w="1"/><text x="69.6427%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3927%" y="357" width="0.0810%" height="15" fill="rgb(214,180,13)" fg:x="857" fg:w="1"/><text x="69.6427%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.3927%" y="341" width="0.0810%" height="15" fill="rgb(238,40,40)" fg:x="857" fg:w="1"/><text x="69.6427%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.3927%" y="325" width="0.0810%" height="15" fill="rgb(214,101,38)" fg:x="857" fg:w="1"/><text x="69.6427%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.3927%" y="309" width="0.0810%" height="15" fill="rgb(242,65,53)" fg:x="857" fg:w="1"/><text x="69.6427%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.3927%" y="293" width="0.0810%" height="15" fill="rgb(230,22,45)" fg:x="857" fg:w="1"/><text x="69.6427%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3927%" y="277" width="0.0810%" height="15" fill="rgb(223,77,1)" fg:x="857" fg:w="1"/><text x="69.6427%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="69.2308%" y="485" width="0.3239%" height="15" fill="rgb(227,33,37)" fg:x="855" fg:w="4"/><text x="69.4808%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4737%" y="469" width="0.0810%" height="15" fill="rgb(224,148,39)" fg:x="858" fg:w="1"/><text x="69.7237%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4737%" y="453" width="0.0810%" height="15" fill="rgb(232,212,39)" fg:x="858" fg:w="1"/><text x="69.7237%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.4737%" y="437" width="0.0810%" height="15" fill="rgb(251,172,7)" fg:x="858" fg:w="1"/><text x="69.7237%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.4737%" y="421" width="0.0810%" height="15" fill="rgb(219,39,9)" fg:x="858" fg:w="1"/><text x="69.7237%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.4737%" y="405" width="0.0810%" height="15" fill="rgb(228,118,14)" fg:x="858" fg:w="1"/><text x="69.7237%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4737%" y="389" width="0.0810%" height="15" fill="rgb(207,140,10)" fg:x="858" fg:w="1"/><text x="69.7237%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4737%" y="373" width="0.0810%" height="15" fill="rgb(227,111,53)" fg:x="858" fg:w="1"/><text x="69.7237%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.4737%" y="357" width="0.0810%" height="15" fill="rgb(216,165,16)" fg:x="858" fg:w="1"/><text x="69.7237%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.4737%" y="341" width="0.0810%" height="15" fill="rgb(226,111,18)" fg:x="858" fg:w="1"/><text x="69.7237%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.4737%" y="325" width="0.0810%" height="15" fill="rgb(251,27,17)" fg:x="858" fg:w="1"/><text x="69.7237%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.4737%" y="309" width="0.0810%" height="15" fill="rgb(254,69,9)" fg:x="858" fg:w="1"/><text x="69.7237%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.5547%" y="485" width="0.0810%" height="15" fill="rgb(234,140,37)" fg:x="859" fg:w="1"/><text x="69.8047%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="69.5547%" y="469" width="0.0810%" height="15" fill="rgb(220,93,8)" fg:x="859" fg:w="1"/><text x="69.8047%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5547%" y="453" width="0.0810%" height="15" fill="rgb(236,113,3)" fg:x="859" fg:w="1"/><text x="69.8047%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="69.6356%" y="485" width="0.1619%" height="15" fill="rgb(234,108,23)" fg:x="860" fg:w="2"/><text x="69.8856%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.6356%" y="469" width="0.1619%" height="15" fill="rgb(205,114,34)" fg:x="860" fg:w="2"/><text x="69.8856%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6356%" y="453" width="0.1619%" height="15" fill="rgb(236,200,45)" fg:x="860" fg:w="2"/><text x="69.8856%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.6356%" y="437" width="0.1619%" height="15" fill="rgb(227,194,29)" fg:x="860" fg:w="2"/><text x="69.8856%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6356%" y="421" width="0.1619%" height="15" fill="rgb(250,76,42)" fg:x="860" fg:w="2"/><text x="69.8856%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="69.7976%" y="485" width="0.0810%" height="15" fill="rgb(208,128,8)" fg:x="862" fg:w="1"/><text x="70.0476%" y="495.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="69.8785%" y="485" width="0.0810%" height="15" fill="rgb(229,209,35)" fg:x="863" fg:w="1"/><text x="70.1285%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.1215%" y="437" width="0.0810%" height="15" fill="rgb(215,39,53)" fg:x="866" fg:w="1"/><text x="70.3715%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1215%" y="421" width="0.0810%" height="15" fill="rgb(219,123,41)" fg:x="866" fg:w="1"/><text x="70.3715%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="70.2024%" y="437" width="0.0810%" height="15" fill="rgb(212,158,18)" fg:x="867" fg:w="1"/><text x="70.4524%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="70.2834%" y="437" width="0.1619%" height="15" fill="rgb(234,196,53)" fg:x="868" fg:w="2"/><text x="70.5334%" y="447.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.4453%" y="437" width="0.0810%" height="15" fill="rgb(210,139,12)" fg:x="870" fg:w="1"/><text x="70.6953%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.4453%" y="421" width="0.0810%" height="15" fill="rgb(220,116,54)" fg:x="870" fg:w="1"/><text x="70.6953%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="70.4453%" y="405" width="0.0810%" height="15" fill="rgb(247,103,28)" fg:x="870" fg:w="1"/><text x="70.6953%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5263%" y="405" width="0.0810%" height="15" fill="rgb(253,156,45)" fg:x="871" fg:w="1"/><text x="70.7763%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.5263%" y="389" width="0.0810%" height="15" fill="rgb(237,157,52)" fg:x="871" fg:w="1"/><text x="70.7763%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.5263%" y="373" width="0.0810%" height="15" fill="rgb(253,112,16)" fg:x="871" fg:w="1"/><text x="70.7763%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.6883%" y="389" width="0.0810%" height="15" fill="rgb(234,70,18)" fg:x="873" fg:w="1"/><text x="70.9383%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.6883%" y="373" width="0.0810%" height="15" fill="rgb(247,138,19)" fg:x="873" fg:w="1"/><text x="70.9383%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.6883%" y="357" width="0.0810%" height="15" fill="rgb(207,171,1)" fg:x="873" fg:w="1"/><text x="70.9383%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.6883%" y="341" width="0.0810%" height="15" fill="rgb(239,213,3)" fg:x="873" fg:w="1"/><text x="70.9383%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.6883%" y="325" width="0.0810%" height="15" fill="rgb(226,112,4)" fg:x="873" fg:w="1"/><text x="70.9383%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7692%" y="389" width="0.0810%" height="15" fill="rgb(252,170,12)" fg:x="874" fg:w="1"/><text x="71.0192%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.97%)</title><rect x="69.9595%" y="485" width="0.9717%" height="15" fill="rgb(241,106,13)" fg:x="864" fg:w="12"/><text x="70.2095%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.97%)</title><rect x="69.9595%" y="469" width="0.9717%" height="15" fill="rgb(225,73,23)" fg:x="864" fg:w="12"/><text x="70.2095%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="69.9595%" y="453" width="0.9717%" height="15" fill="rgb(251,227,29)" fg:x="864" fg:w="12"/><text x="70.2095%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="70.5263%" y="437" width="0.4049%" height="15" fill="rgb(237,144,13)" fg:x="871" fg:w="5"/><text x="70.7763%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="70.5263%" y="421" width="0.4049%" height="15" fill="rgb(232,106,46)" fg:x="871" fg:w="5"/><text x="70.7763%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="70.6073%" y="405" width="0.3239%" height="15" fill="rgb(245,154,53)" fg:x="872" fg:w="4"/><text x="70.8573%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8502%" y="389" width="0.0810%" height="15" fill="rgb(212,119,47)" fg:x="875" fg:w="1"/><text x="71.1002%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.8502%" y="373" width="0.0810%" height="15" fill="rgb(253,135,25)" fg:x="875" fg:w="1"/><text x="71.1002%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8502%" y="357" width="0.0810%" height="15" fill="rgb(253,208,39)" fg:x="875" fg:w="1"/><text x="71.1002%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.8502%" y="341" width="0.0810%" height="15" fill="rgb(226,64,12)" fg:x="875" fg:w="1"/><text x="71.1002%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8502%" y="325" width="0.0810%" height="15" fill="rgb(214,162,37)" fg:x="875" fg:w="1"/><text x="71.1002%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.9312%" y="357" width="0.0810%" height="15" fill="rgb(250,104,5)" fg:x="876" fg:w="1"/><text x="71.1812%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="70.9312%" y="389" width="0.2429%" height="15" fill="rgb(220,202,50)" fg:x="876" fg:w="3"/><text x="71.1812%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="70.9312%" y="373" width="0.2429%" height="15" fill="rgb(248,67,38)" fg:x="876" fg:w="3"/><text x="71.1812%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="71.0121%" y="357" width="0.1619%" height="15" fill="rgb(242,94,35)" fg:x="877" fg:w="2"/><text x="71.2621%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.0121%" y="341" width="0.1619%" height="15" fill="rgb(209,78,37)" fg:x="877" fg:w="2"/><text x="71.2621%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (27 samples, 2.19%)</title><rect x="69.0688%" y="517" width="2.1862%" height="15" fill="rgb(230,126,47)" fg:x="853" fg:w="27"/><text x="69.3188%" y="527.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 2.02%)</title><rect x="69.2308%" y="501" width="2.0243%" height="15" fill="rgb(222,110,35)" fg:x="855" fg:w="25"/><text x="69.4808%" y="511.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="70.9312%" y="485" width="0.3239%" height="15" fill="rgb(233,154,20)" fg:x="876" fg:w="4"/><text x="71.1812%" y="495.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="70.9312%" y="469" width="0.3239%" height="15" fill="rgb(223,53,50)" fg:x="876" fg:w="4"/><text x="71.1812%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="70.9312%" y="453" width="0.3239%" height="15" fill="rgb(251,27,26)" fg:x="876" fg:w="4"/><text x="71.1812%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="70.9312%" y="437" width="0.3239%" height="15" fill="rgb(223,189,16)" fg:x="876" fg:w="4"/><text x="71.1812%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="70.9312%" y="421" width="0.3239%" height="15" fill="rgb(207,5,54)" fg:x="876" fg:w="4"/><text x="71.1812%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="70.9312%" y="405" width="0.3239%" height="15" fill="rgb(254,124,50)" fg:x="876" fg:w="4"/><text x="71.1812%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.1741%" y="389" width="0.0810%" height="15" fill="rgb(253,193,24)" fg:x="879" fg:w="1"/><text x="71.4241%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (881 samples, 71.34%)</title><rect x="0.0000%" y="613" width="71.3360%" height="15" fill="rgb(235,170,24)" fg:x="0" fg:w="881"/><text x="0.2500%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (881 samples, 71.34%)</title><rect x="0.0000%" y="597" width="71.3360%" height="15" fill="rgb(222,212,52)" fg:x="0" fg:w="881"/><text x="0.2500%" y="607.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (881 samples, 71.34%)</title><rect x="0.0000%" y="581" width="71.3360%" height="15" fill="rgb(223,17,45)" fg:x="0" fg:w="881"/><text x="0.2500%" y="591.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (187 samples, 15.14%)</title><rect x="56.1943%" y="565" width="15.1417%" height="15" fill="rgb(227,103,26)" fg:x="694" fg:w="187"/><text x="56.4443%" y="575.50">engine::session::Sessio..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (187 samples, 15.14%)</title><rect x="56.1943%" y="549" width="15.1417%" height="15" fill="rgb(251,151,25)" fg:x="694" fg:w="187"/><text x="56.4443%" y="559.50">engine::session::Sessio..</text></g><g><title>kernel::model::EntityPtrResolver::world (28 samples, 2.27%)</title><rect x="69.0688%" y="533" width="2.2672%" height="15" fill="rgb(248,144,29)" fg:x="853" fg:w="28"/><text x="69.3188%" y="543.50">k..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="71.2551%" y="517" width="0.0810%" height="15" fill="rgb(245,97,16)" fg:x="880" fg:w="1"/><text x="71.5051%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.3360%" y="517" width="0.0810%" height="15" fill="rgb(220,200,29)" fg:x="881" fg:w="1"/><text x="71.5860%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4170%" y="485" width="0.0810%" height="15" fill="rgb(206,38,29)" fg:x="882" fg:w="1"/><text x="71.6670%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="71.3360%" y="549" width="0.2429%" height="15" fill="rgb(245,19,52)" fg:x="881" fg:w="3"/><text x="71.5860%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="71.3360%" y="533" width="0.2429%" height="15" fill="rgb(205,67,43)" fg:x="881" fg:w="3"/><text x="71.5860%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="71.4170%" y="517" width="0.1619%" height="15" fill="rgb(217,128,23)" fg:x="882" fg:w="2"/><text x="71.6670%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.16%)</title><rect x="71.4170%" y="501" width="0.1619%" height="15" fill="rgb(210,109,28)" fg:x="882" fg:w="2"/><text x="71.6670%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="71.4980%" y="485" width="0.0810%" height="15" fill="rgb(233,181,7)" fg:x="883" fg:w="1"/><text x="71.7480%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4980%" y="469" width="0.0810%" height="15" fill="rgb(244,11,22)" fg:x="883" fg:w="1"/><text x="71.7480%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5789%" y="517" width="0.0810%" height="15" fill="rgb(205,124,54)" fg:x="884" fg:w="1"/><text x="71.8289%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0648%" y="437" width="0.0810%" height="15" fill="rgb(218,21,27)" fg:x="890" fg:w="1"/><text x="72.3148%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0648%" y="421" width="0.0810%" height="15" fill="rgb(224,153,33)" fg:x="890" fg:w="1"/><text x="72.3148%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.2267%" y="421" width="0.0810%" height="15" fill="rgb(240,219,28)" fg:x="892" fg:w="1"/><text x="72.4767%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2267%" y="405" width="0.0810%" height="15" fill="rgb(214,80,29)" fg:x="892" fg:w="1"/><text x="72.4767%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="72.3077%" y="405" width="0.2429%" height="15" fill="rgb(247,148,44)" fg:x="893" fg:w="3"/><text x="72.5577%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.5506%" y="405" width="0.0810%" height="15" fill="rgb(243,110,30)" fg:x="896" fg:w="1"/><text x="72.8006%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="71.7409%" y="485" width="1.0526%" height="15" fill="rgb(243,173,41)" fg:x="886" fg:w="13"/><text x="71.9909%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (10 samples, 0.81%)</title><rect x="71.9838%" y="469" width="0.8097%" height="15" fill="rgb(225,160,47)" fg:x="889" fg:w="10"/><text x="72.2338%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.81%)</title><rect x="71.9838%" y="453" width="0.8097%" height="15" fill="rgb(215,44,21)" fg:x="889" fg:w="10"/><text x="72.2338%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="72.1457%" y="437" width="0.6478%" height="15" fill="rgb(248,90,3)" fg:x="891" fg:w="8"/><text x="72.3957%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="72.3077%" y="421" width="0.4858%" height="15" fill="rgb(220,196,49)" fg:x="893" fg:w="6"/><text x="72.5577%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="72.6316%" y="405" width="0.1619%" height="15" fill="rgb(217,138,14)" fg:x="897" fg:w="2"/><text x="72.8816%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.7126%" y="389" width="0.0810%" height="15" fill="rgb(219,111,20)" fg:x="898" fg:w="1"/><text x="72.9626%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.7126%" y="373" width="0.0810%" height="15" fill="rgb(218,114,4)" fg:x="898" fg:w="1"/><text x="72.9626%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.7935%" y="485" width="0.0810%" height="15" fill="rgb(238,133,3)" fg:x="899" fg:w="1"/><text x="73.0435%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.8745%" y="453" width="0.1619%" height="15" fill="rgb(224,95,0)" fg:x="900" fg:w="2"/><text x="73.1245%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.0364%" y="453" width="0.0810%" height="15" fill="rgb(220,169,35)" fg:x="902" fg:w="1"/><text x="73.2864%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1174%" y="437" width="0.0810%" height="15" fill="rgb(242,116,47)" fg:x="903" fg:w="1"/><text x="73.3674%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.1984%" y="421" width="0.0810%" height="15" fill="rgb(251,42,20)" fg:x="904" fg:w="1"/><text x="73.4484%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1984%" y="405" width="0.0810%" height="15" fill="rgb(234,7,34)" fg:x="904" fg:w="1"/><text x="73.4484%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2794%" y="405" width="0.0810%" height="15" fill="rgb(243,208,13)" fg:x="905" fg:w="1"/><text x="73.5294%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.78%)</title><rect x="71.6599%" y="501" width="1.7814%" height="15" fill="rgb(227,33,28)" fg:x="885" fg:w="22"/><text x="71.9099%" y="511.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="72.8745%" y="485" width="0.5668%" height="15" fill="rgb(250,47,37)" fg:x="900" fg:w="7"/><text x="73.1245%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="72.8745%" y="469" width="0.5668%" height="15" fill="rgb(235,111,52)" fg:x="900" fg:w="7"/><text x="73.1245%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.1174%" y="453" width="0.3239%" height="15" fill="rgb(223,64,28)" fg:x="903" fg:w="4"/><text x="73.3674%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.1984%" y="437" width="0.2429%" height="15" fill="rgb(236,67,22)" fg:x="904" fg:w="3"/><text x="73.4484%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.2794%" y="421" width="0.1619%" height="15" fill="rgb(243,79,24)" fg:x="905" fg:w="2"/><text x="73.5294%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.3603%" y="405" width="0.0810%" height="15" fill="rgb(241,225,22)" fg:x="906" fg:w="1"/><text x="73.6103%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.19%)</title><rect x="71.3360%" y="565" width="2.1862%" height="15" fill="rgb(228,214,26)" fg:x="881" fg:w="27"/><text x="71.5860%" y="575.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (24 samples, 1.94%)</title><rect x="71.5789%" y="549" width="1.9433%" height="15" fill="rgb(219,84,52)" fg:x="884" fg:w="24"/><text x="71.8289%" y="559.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.94%)</title><rect x="71.5789%" y="533" width="1.9433%" height="15" fill="rgb(220,12,22)" fg:x="884" fg:w="24"/><text x="71.8289%" y="543.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (23 samples, 1.86%)</title><rect x="71.6599%" y="517" width="1.8623%" height="15" fill="rgb(219,9,49)" fg:x="885" fg:w="23"/><text x="71.9099%" y="527.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4413%" y="501" width="0.0810%" height="15" fill="rgb(237,40,43)" fg:x="907" fg:w="1"/><text x="73.6913%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (2 samples, 0.16%)</title><rect x="73.5223%" y="517" width="0.1619%" height="15" fill="rgb(212,189,32)" fg:x="908" fg:w="2"/><text x="73.7723%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6032%" y="501" width="0.0810%" height="15" fill="rgb(247,48,9)" fg:x="909" fg:w="1"/><text x="73.8532%" y="511.50"></text></g><g><title>std::ffi::os_str::&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (1 samples, 0.08%)</title><rect x="73.8462%" y="469" width="0.0810%" height="15" fill="rgb(247,112,3)" fg:x="912" fg:w="1"/><text x="74.0962%" y="479.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.08%)</title><rect x="73.8462%" y="453" width="0.0810%" height="15" fill="rgb(243,110,18)" fg:x="912" fg:w="1"/><text x="74.0962%" y="463.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.08%)</title><rect x="73.8462%" y="437" width="0.0810%" height="15" fill="rgb(233,223,44)" fg:x="912" fg:w="1"/><text x="74.0962%" y="447.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.08%)</title><rect x="73.8462%" y="421" width="0.0810%" height="15" fill="rgb(245,160,20)" fg:x="912" fg:w="1"/><text x="74.0962%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (2 samples, 0.16%)</title><rect x="73.8462%" y="485" width="0.1619%" height="15" fill="rgb(225,37,1)" fg:x="912" fg:w="2"/><text x="74.0962%" y="495.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="73.9271%" y="469" width="0.0810%" height="15" fill="rgb(253,227,39)" fg:x="913" fg:w="1"/><text x="74.1771%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="73.9271%" y="453" width="0.0810%" height="15" fill="rgb(240,179,26)" fg:x="913" fg:w="1"/><text x="74.1771%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="73.9271%" y="437" width="0.0810%" height="15" fill="rgb(237,212,23)" fg:x="913" fg:w="1"/><text x="74.1771%" y="447.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="73.9271%" y="421" width="0.0810%" height="15" fill="rgb(221,38,11)" fg:x="913" fg:w="1"/><text x="74.1771%" y="431.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="73.9271%" y="405" width="0.0810%" height="15" fill="rgb(215,85,6)" fg:x="913" fg:w="1"/><text x="74.1771%" y="415.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="73.9271%" y="389" width="0.0810%" height="15" fill="rgb(239,64,14)" fg:x="913" fg:w="1"/><text x="74.1771%" y="399.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="73.9271%" y="373" width="0.0810%" height="15" fill="rgb(215,150,32)" fg:x="913" fg:w="1"/><text x="74.1771%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0081%" y="421" width="0.0810%" height="15" fill="rgb(238,15,13)" fg:x="914" fg:w="1"/><text x="74.2581%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0081%" y="405" width="0.0810%" height="15" fill="rgb(251,87,8)" fg:x="914" fg:w="1"/><text x="74.2581%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.0081%" y="389" width="0.0810%" height="15" fill="rgb(206,86,1)" fg:x="914" fg:w="1"/><text x="74.2581%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.0081%" y="373" width="0.0810%" height="15" fill="rgb(208,151,45)" fg:x="914" fg:w="1"/><text x="74.2581%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.0081%" y="357" width="0.0810%" height="15" fill="rgb(231,181,24)" fg:x="914" fg:w="1"/><text x="74.2581%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.0081%" y="341" width="0.0810%" height="15" fill="rgb(240,106,29)" fg:x="914" fg:w="1"/><text x="74.2581%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.0081%" y="325" width="0.0810%" height="15" fill="rgb(227,166,11)" fg:x="914" fg:w="1"/><text x="74.2581%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.0081%" y="309" width="0.0810%" height="15" fill="rgb(254,14,34)" fg:x="914" fg:w="1"/><text x="74.2581%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.0081%" y="293" width="0.0810%" height="15" fill="rgb(223,222,6)" fg:x="914" fg:w="1"/><text x="74.2581%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.0081%" y="277" width="0.0810%" height="15" fill="rgb(245,69,24)" fg:x="914" fg:w="1"/><text x="74.2581%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.0081%" y="261" width="0.0810%" height="15" fill="rgb(213,193,7)" fg:x="914" fg:w="1"/><text x="74.2581%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0081%" y="245" width="0.0810%" height="15" fill="rgb(237,92,51)" fg:x="914" fg:w="1"/><text x="74.2581%" y="255.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (2 samples, 0.16%)</title><rect x="74.0081%" y="469" width="0.1619%" height="15" fill="rgb(225,194,6)" fg:x="914" fg:w="2"/><text x="74.2581%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="74.0081%" y="453" width="0.1619%" height="15" fill="rgb(205,159,49)" fg:x="914" fg:w="2"/><text x="74.2581%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="74.0081%" y="437" width="0.1619%" height="15" fill="rgb(219,69,2)" fg:x="914" fg:w="2"/><text x="74.2581%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0891%" y="421" width="0.0810%" height="15" fill="rgb(215,107,24)" fg:x="915" fg:w="1"/><text x="74.3391%" y="431.50"></text></g><g><title>glob::is_dir (3 samples, 0.24%)</title><rect x="74.1700%" y="421" width="0.2429%" height="15" fill="rgb(249,208,29)" fg:x="916" fg:w="3"/><text x="74.4200%" y="431.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.24%)</title><rect x="74.1700%" y="405" width="0.2429%" height="15" fill="rgb(213,147,10)" fg:x="916" fg:w="3"/><text x="74.4200%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.24%)</title><rect x="74.1700%" y="389" width="0.2429%" height="15" fill="rgb(254,140,42)" fg:x="916" fg:w="3"/><text x="74.4200%" y="399.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.24%)</title><rect x="74.1700%" y="373" width="0.2429%" height="15" fill="rgb(249,9,15)" fg:x="916" fg:w="3"/><text x="74.4200%" y="383.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.24%)</title><rect x="74.1700%" y="357" width="0.2429%" height="15" fill="rgb(210,19,33)" fg:x="916" fg:w="3"/><text x="74.4200%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.24%)</title><rect x="74.1700%" y="341" width="0.2429%" height="15" fill="rgb(241,121,22)" fg:x="916" fg:w="3"/><text x="74.4200%" y="351.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.24%)</title><rect x="74.1700%" y="325" width="0.2429%" height="15" fill="rgb(244,69,52)" fg:x="916" fg:w="3"/><text x="74.4200%" y="335.50"></text></g><g><title>statx (3 samples, 0.24%)</title><rect x="74.1700%" y="309" width="0.2429%" height="15" fill="rgb(244,191,54)" fg:x="916" fg:w="3"/><text x="74.4200%" y="319.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="74.1700%" y="453" width="0.3239%" height="15" fill="rgb(250,3,53)" fg:x="916" fg:w="4"/><text x="74.4200%" y="463.50"></text></g><g><title>glob::fill_todo (4 samples, 0.32%)</title><rect x="74.1700%" y="437" width="0.3239%" height="15" fill="rgb(205,77,3)" fg:x="916" fg:w="4"/><text x="74.4200%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="74.4130%" y="421" width="0.0810%" height="15" fill="rgb(207,155,3)" fg:x="919" fg:w="1"/><text x="74.6630%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="74.4130%" y="405" width="0.0810%" height="15" fill="rgb(224,79,2)" fg:x="919" fg:w="1"/><text x="74.6630%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="74.4130%" y="389" width="0.0810%" height="15" fill="rgb(243,172,5)" fg:x="919" fg:w="1"/><text x="74.6630%" y="399.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.4939%" y="421" width="0.0810%" height="15" fill="rgb(217,23,43)" fg:x="920" fg:w="1"/><text x="74.7439%" y="431.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.5749%" y="421" width="0.0810%" height="15" fill="rgb(223,109,20)" fg:x="921" fg:w="1"/><text x="74.8249%" y="431.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="74.5749%" y="405" width="0.0810%" height="15" fill="rgb(232,159,21)" fg:x="921" fg:w="1"/><text x="74.8249%" y="415.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="74.5749%" y="389" width="0.0810%" height="15" fill="rgb(219,58,2)" fg:x="921" fg:w="1"/><text x="74.8249%" y="399.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="74.5749%" y="373" width="0.0810%" height="15" fill="rgb(241,56,8)" fg:x="921" fg:w="1"/><text x="74.8249%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="74.5749%" y="357" width="0.0810%" height="15" fill="rgb(249,10,27)" fg:x="921" fg:w="1"/><text x="74.8249%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="74.5749%" y="341" width="0.0810%" height="15" fill="rgb(248,177,5)" fg:x="921" fg:w="1"/><text x="74.8249%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="74.5749%" y="325" width="0.0810%" height="15" fill="rgb(239,12,30)" fg:x="921" fg:w="1"/><text x="74.8249%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.5749%" y="309" width="0.0810%" height="15" fill="rgb(229,164,25)" fg:x="921" fg:w="1"/><text x="74.8249%" y="319.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.73%)</title><rect x="74.0081%" y="485" width="0.7287%" height="15" fill="rgb(231,217,50)" fg:x="914" fg:w="9"/><text x="74.2581%" y="495.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (7 samples, 0.57%)</title><rect x="74.1700%" y="469" width="0.5668%" height="15" fill="rgb(247,99,32)" fg:x="916" fg:w="7"/><text x="74.4200%" y="479.50"></text></g><g><title>glob::glob (3 samples, 0.24%)</title><rect x="74.4939%" y="453" width="0.2429%" height="15" fill="rgb(240,74,50)" fg:x="920" fg:w="3"/><text x="74.7439%" y="463.50"></text></g><g><title>glob::glob_with (3 samples, 0.24%)</title><rect x="74.4939%" y="437" width="0.2429%" height="15" fill="rgb(218,54,8)" fg:x="920" fg:w="3"/><text x="74.7439%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6559%" y="421" width="0.0810%" height="15" fill="rgb(227,132,20)" fg:x="922" fg:w="1"/><text x="74.9059%" y="431.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="74.7368%" y="453" width="0.0810%" height="15" fill="rgb(232,134,12)" fg:x="923" fg:w="1"/><text x="74.9868%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="74.7368%" y="437" width="0.0810%" height="15" fill="rgb(250,129,18)" fg:x="923" fg:w="1"/><text x="74.9868%" y="447.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="74.7368%" y="421" width="0.0810%" height="15" fill="rgb(232,129,47)" fg:x="923" fg:w="1"/><text x="74.9868%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7368%" y="405" width="0.0810%" height="15" fill="rgb(230,31,40)" fg:x="923" fg:w="1"/><text x="74.9868%" y="415.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="74.8178%" y="421" width="0.0810%" height="15" fill="rgb(232,126,10)" fg:x="924" fg:w="1"/><text x="75.0678%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="74.8178%" y="453" width="0.1619%" height="15" fill="rgb(205,46,31)" fg:x="924" fg:w="2"/><text x="75.0678%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="74.8178%" y="437" width="0.1619%" height="15" fill="rgb(232,37,37)" fg:x="924" fg:w="2"/><text x="75.0678%" y="447.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="74.8988%" y="421" width="0.0810%" height="15" fill="rgb(240,91,16)" fg:x="925" fg:w="1"/><text x="75.1488%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="74.9798%" y="453" width="0.1619%" height="15" fill="rgb(224,160,9)" fg:x="926" fg:w="2"/><text x="75.2298%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="74.9798%" y="437" width="0.1619%" height="15" fill="rgb(215,116,14)" fg:x="926" fg:w="2"/><text x="75.2298%" y="447.50"></text></g><g><title>replies::identifier_to_key (2 samples, 0.16%)</title><rect x="74.9798%" y="421" width="0.1619%" height="15" fill="rgb(235,46,36)" fg:x="926" fg:w="2"/><text x="75.2298%" y="431.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="75.1417%" y="453" width="0.0810%" height="15" fill="rgb(238,39,28)" fg:x="928" fg:w="1"/><text x="75.3917%" y="463.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="75.1417%" y="437" width="0.0810%" height="15" fill="rgb(242,125,29)" fg:x="928" fg:w="1"/><text x="75.3917%" y="447.50"></text></g><g><title>&lt;plugins_rune::actions::RuneAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="75.1417%" y="421" width="0.0810%" height="15" fill="rgb(238,211,30)" fg:x="928" fg:w="1"/><text x="75.3917%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.73%)</title><rect x="74.7368%" y="485" width="0.7287%" height="15" fill="rgb(227,201,28)" fg:x="923" fg:w="9"/><text x="74.9868%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.73%)</title><rect x="74.7368%" y="469" width="0.7287%" height="15" fill="rgb(238,77,29)" fg:x="923" fg:w="9"/><text x="74.9868%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="75.2227%" y="453" width="0.2429%" height="15" fill="rgb(213,221,40)" fg:x="929" fg:w="3"/><text x="75.4727%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.3846%" y="437" width="0.0810%" height="15" fill="rgb(226,220,44)" fg:x="931" fg:w="1"/><text x="75.6346%" y="447.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (24 samples, 1.94%)</title><rect x="73.7652%" y="501" width="1.9433%" height="15" fill="rgb(228,90,23)" fg:x="911" fg:w="24"/><text x="74.0152%" y="511.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.24%)</title><rect x="75.4656%" y="485" width="0.2429%" height="15" fill="rgb(235,72,29)" fg:x="932" fg:w="3"/><text x="75.7156%" y="495.50"></text></g><g><title>clock_gettime (3 samples, 0.24%)</title><rect x="75.4656%" y="469" width="0.2429%" height="15" fill="rgb(248,117,39)" fg:x="932" fg:w="3"/><text x="75.7156%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (30 samples, 2.43%)</title><rect x="73.5223%" y="565" width="2.4291%" height="15" fill="rgb(225,43,28)" fg:x="908" fg:w="30"/><text x="73.7723%" y="575.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (30 samples, 2.43%)</title><rect x="73.5223%" y="549" width="2.4291%" height="15" fill="rgb(240,93,4)" fg:x="908" fg:w="30"/><text x="73.7723%" y="559.50">en..</text></g><g><title>engine::session::Session::new (30 samples, 2.43%)</title><rect x="73.5223%" y="533" width="2.4291%" height="15" fill="rgb(234,178,27)" fg:x="908" fg:w="30"/><text x="73.7723%" y="543.50">en..</text></g><g><title>engine::session::Session::initialize (28 samples, 2.27%)</title><rect x="73.6842%" y="517" width="2.2672%" height="15" fill="rgb(254,88,22)" fg:x="910" fg:w="28"/><text x="73.9342%" y="527.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="75.7085%" y="501" width="0.2429%" height="15" fill="rgb(240,206,50)" fg:x="935" fg:w="3"/><text x="75.9585%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="75.7085%" y="485" width="0.2429%" height="15" fill="rgb(249,103,8)" fg:x="935" fg:w="3"/><text x="75.9585%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="75.7895%" y="469" width="0.1619%" height="15" fill="rgb(241,178,36)" fg:x="936" fg:w="2"/><text x="76.0395%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="75.7895%" y="453" width="0.1619%" height="15" fill="rgb(246,110,15)" fg:x="936" fg:w="2"/><text x="76.0395%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.8704%" y="437" width="0.0810%" height="15" fill="rgb(207,14,43)" fg:x="937" fg:w="1"/><text x="76.1204%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="75.9514%" y="517" width="0.1619%" height="15" fill="rgb(253,219,19)" fg:x="938" fg:w="2"/><text x="76.2014%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="75.9514%" y="501" width="0.1619%" height="15" fill="rgb(216,126,5)" fg:x="938" fg:w="2"/><text x="76.2014%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="75.9514%" y="485" width="0.1619%" height="15" fill="rgb(218,78,42)" fg:x="938" fg:w="2"/><text x="76.2014%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="75.9514%" y="469" width="0.1619%" height="15" fill="rgb(215,154,40)" fg:x="938" fg:w="2"/><text x="76.2014%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="75.9514%" y="453" width="0.1619%" height="15" fill="rgb(235,129,32)" fg:x="938" fg:w="2"/><text x="76.2014%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="75.9514%" y="437" width="0.1619%" height="15" fill="rgb(218,51,8)" fg:x="938" fg:w="2"/><text x="76.2014%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="75.9514%" y="421" width="0.1619%" height="15" fill="rgb(245,48,4)" fg:x="938" fg:w="2"/><text x="76.2014%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="75.9514%" y="405" width="0.1619%" height="15" fill="rgb(250,175,12)" fg:x="938" fg:w="2"/><text x="76.2014%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="75.9514%" y="389" width="0.1619%" height="15" fill="rgb(237,95,40)" fg:x="938" fg:w="2"/><text x="76.2014%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="75.9514%" y="373" width="0.1619%" height="15" fill="rgb(244,120,0)" fg:x="938" fg:w="2"/><text x="76.2014%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="75.9514%" y="357" width="0.1619%" height="15" fill="rgb(241,19,42)" fg:x="938" fg:w="2"/><text x="76.2014%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.9514%" y="341" width="0.1619%" height="15" fill="rgb(217,174,48)" fg:x="938" fg:w="2"/><text x="76.2014%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="75.9514%" y="533" width="0.2429%" height="15" fill="rgb(239,36,38)" fg:x="938" fg:w="3"/><text x="76.2014%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1134%" y="517" width="0.0810%" height="15" fill="rgb(220,63,49)" fg:x="940" fg:w="1"/><text x="76.3634%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.1134%" y="501" width="0.0810%" height="15" fill="rgb(240,101,13)" fg:x="940" fg:w="1"/><text x="76.3634%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="76.1943%" y="501" width="0.0810%" height="15" fill="rgb(209,184,51)" fg:x="941" fg:w="1"/><text x="76.4443%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="76.1943%" y="485" width="0.0810%" height="15" fill="rgb(206,136,39)" fg:x="941" fg:w="1"/><text x="76.4443%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2753%" y="469" width="0.0810%" height="15" fill="rgb(254,47,45)" fg:x="942" fg:w="1"/><text x="76.5253%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="76.5992%" y="421" width="0.1619%" height="15" fill="rgb(252,103,20)" fg:x="946" fg:w="2"/><text x="76.8492%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="76.5992%" y="405" width="0.1619%" height="15" fill="rgb(230,69,12)" fg:x="946" fg:w="2"/><text x="76.8492%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6802%" y="389" width="0.0810%" height="15" fill="rgb(219,2,28)" fg:x="947" fg:w="1"/><text x="76.9302%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="76.3563%" y="453" width="0.4858%" height="15" fill="rgb(210,9,12)" fg:x="943" fg:w="6"/><text x="76.6063%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="76.5182%" y="437" width="0.3239%" height="15" fill="rgb(235,99,33)" fg:x="945" fg:w="4"/><text x="76.7682%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7611%" y="421" width="0.0810%" height="15" fill="rgb(230,11,38)" fg:x="948" fg:w="1"/><text x="77.0111%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="76.8421%" y="437" width="0.3239%" height="15" fill="rgb(217,129,0)" fg:x="949" fg:w="4"/><text x="77.0921%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="76.8421%" y="421" width="0.3239%" height="15" fill="rgb(222,198,4)" fg:x="949" fg:w="4"/><text x="77.0921%" y="431.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="76.8421%" y="405" width="0.3239%" height="15" fill="rgb(246,170,27)" fg:x="949" fg:w="4"/><text x="77.0921%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="76.9231%" y="389" width="0.2429%" height="15" fill="rgb(229,17,28)" fg:x="950" fg:w="3"/><text x="77.1731%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="76.9231%" y="373" width="0.2429%" height="15" fill="rgb(233,198,48)" fg:x="950" fg:w="3"/><text x="77.1731%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.0850%" y="357" width="0.0810%" height="15" fill="rgb(238,103,23)" fg:x="952" fg:w="1"/><text x="77.3350%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.0850%" y="341" width="0.0810%" height="15" fill="rgb(206,91,41)" fg:x="952" fg:w="1"/><text x="77.3350%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.0850%" y="325" width="0.0810%" height="15" fill="rgb(227,34,25)" fg:x="952" fg:w="1"/><text x="77.3350%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.1660%" y="421" width="0.1619%" height="15" fill="rgb(210,110,44)" fg:x="953" fg:w="2"/><text x="77.4160%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.1660%" y="405" width="0.1619%" height="15" fill="rgb(216,189,8)" fg:x="953" fg:w="2"/><text x="77.4160%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.1660%" y="389" width="0.1619%" height="15" fill="rgb(234,9,46)" fg:x="953" fg:w="2"/><text x="77.4160%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.2470%" y="373" width="0.0810%" height="15" fill="rgb(251,200,5)" fg:x="954" fg:w="1"/><text x="77.4970%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.2470%" y="357" width="0.0810%" height="15" fill="rgb(238,165,37)" fg:x="954" fg:w="1"/><text x="77.4970%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.2470%" y="341" width="0.0810%" height="15" fill="rgb(232,77,38)" fg:x="954" fg:w="1"/><text x="77.4970%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.2470%" y="325" width="0.0810%" height="15" fill="rgb(253,179,33)" fg:x="954" fg:w="1"/><text x="77.4970%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="77.3279%" y="373" width="0.0810%" height="15" fill="rgb(240,13,35)" fg:x="955" fg:w="1"/><text x="77.5779%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.3279%" y="389" width="0.1619%" height="15" fill="rgb(242,150,49)" fg:x="955" fg:w="2"/><text x="77.5779%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.4089%" y="373" width="0.0810%" height="15" fill="rgb(237,176,28)" fg:x="956" fg:w="1"/><text x="77.6589%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4089%" y="357" width="0.0810%" height="15" fill="rgb(214,176,33)" fg:x="956" fg:w="1"/><text x="77.6589%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="77.3279%" y="405" width="0.2429%" height="15" fill="rgb(214,25,12)" fg:x="955" fg:w="3"/><text x="77.5779%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4899%" y="389" width="0.0810%" height="15" fill="rgb(238,190,20)" fg:x="957" fg:w="1"/><text x="77.7399%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.5709%" y="405" width="0.1619%" height="15" fill="rgb(208,11,19)" fg:x="958" fg:w="2"/><text x="77.8209%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.5709%" y="389" width="0.1619%" height="15" fill="rgb(239,90,4)" fg:x="958" fg:w="2"/><text x="77.8209%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.7328%" y="389" width="0.0810%" height="15" fill="rgb(248,110,3)" fg:x="960" fg:w="1"/><text x="77.9828%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.7328%" y="373" width="0.0810%" height="15" fill="rgb(210,41,30)" fg:x="960" fg:w="1"/><text x="77.9828%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.7328%" y="357" width="0.0810%" height="15" fill="rgb(239,36,8)" fg:x="960" fg:w="1"/><text x="77.9828%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.7328%" y="341" width="0.0810%" height="15" fill="rgb(237,201,47)" fg:x="960" fg:w="1"/><text x="77.9828%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.7328%" y="325" width="0.0810%" height="15" fill="rgb(224,140,29)" fg:x="960" fg:w="1"/><text x="77.9828%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.7328%" y="309" width="0.0810%" height="15" fill="rgb(231,209,17)" fg:x="960" fg:w="1"/><text x="77.9828%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.7328%" y="293" width="0.0810%" height="15" fill="rgb(249,196,1)" fg:x="960" fg:w="1"/><text x="77.9828%" y="303.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.8947%" y="373" width="0.0810%" height="15" fill="rgb(223,207,51)" fg:x="962" fg:w="1"/><text x="78.1447%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.8947%" y="357" width="0.0810%" height="15" fill="rgb(210,14,40)" fg:x="962" fg:w="1"/><text x="78.1447%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.8947%" y="341" width="0.0810%" height="15" fill="rgb(250,20,52)" fg:x="962" fg:w="1"/><text x="78.1447%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.8947%" y="325" width="0.0810%" height="15" fill="rgb(241,46,11)" fg:x="962" fg:w="1"/><text x="78.1447%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="77.8138%" y="389" width="0.2429%" height="15" fill="rgb(219,105,5)" fg:x="961" fg:w="3"/><text x="78.0638%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.9757%" y="373" width="0.0810%" height="15" fill="rgb(252,77,35)" fg:x="963" fg:w="1"/><text x="78.2257%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.9757%" y="357" width="0.0810%" height="15" fill="rgb(243,119,2)" fg:x="963" fg:w="1"/><text x="78.2257%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.9757%" y="341" width="0.0810%" height="15" fill="rgb(206,82,28)" fg:x="963" fg:w="1"/><text x="78.2257%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="77.7328%" y="405" width="0.4858%" height="15" fill="rgb(227,120,12)" fg:x="960" fg:w="6"/><text x="77.9828%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.0567%" y="389" width="0.1619%" height="15" fill="rgb(229,134,41)" fg:x="964" fg:w="2"/><text x="78.3067%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.1377%" y="373" width="0.0810%" height="15" fill="rgb(239,96,32)" fg:x="965" fg:w="1"/><text x="78.3877%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="78.1377%" y="357" width="0.0810%" height="15" fill="rgb(225,46,27)" fg:x="965" fg:w="1"/><text x="78.3877%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="77.3279%" y="421" width="1.0526%" height="15" fill="rgb(215,168,2)" fg:x="955" fg:w="13"/><text x="77.5779%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.2186%" y="405" width="0.1619%" height="15" fill="rgb(207,170,52)" fg:x="966" fg:w="2"/><text x="78.4686%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.62%)</title><rect x="76.8421%" y="453" width="1.6194%" height="15" fill="rgb(237,198,36)" fg:x="949" fg:w="20"/><text x="77.0921%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.30%)</title><rect x="77.1660%" y="437" width="1.2955%" height="15" fill="rgb(213,27,14)" fg:x="953" fg:w="16"/><text x="77.4160%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.3806%" y="421" width="0.0810%" height="15" fill="rgb(218,77,5)" fg:x="968" fg:w="1"/><text x="78.6306%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.3806%" y="405" width="0.0810%" height="15" fill="rgb(230,219,39)" fg:x="968" fg:w="1"/><text x="78.6306%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.3806%" y="389" width="0.0810%" height="15" fill="rgb(245,177,7)" fg:x="968" fg:w="1"/><text x="78.6306%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::compare::Modified&gt; (1 samples, 0.08%)</title><rect x="78.4615%" y="453" width="0.0810%" height="15" fill="rgb(246,44,46)" fg:x="969" fg:w="1"/><text x="78.7115%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4615%" y="437" width="0.0810%" height="15" fill="rgb(207,173,15)" fg:x="969" fg:w="1"/><text x="78.7115%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.5425%" y="421" width="0.0810%" height="15" fill="rgb(245,170,50)" fg:x="970" fg:w="1"/><text x="78.7925%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.5425%" y="405" width="0.0810%" height="15" fill="rgb(233,156,21)" fg:x="970" fg:w="1"/><text x="78.7925%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="78.5425%" y="437" width="0.1619%" height="15" fill="rgb(253,146,27)" fg:x="970" fg:w="2"/><text x="78.7925%" y="447.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="78.6235%" y="421" width="0.0810%" height="15" fill="rgb(247,66,29)" fg:x="971" fg:w="1"/><text x="78.8735%" y="431.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="78.6235%" y="405" width="0.0810%" height="15" fill="rgb(218,207,26)" fg:x="971" fg:w="1"/><text x="78.8735%" y="415.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="78.7045%" y="405" width="0.1619%" height="15" fill="rgb(234,93,26)" fg:x="972" fg:w="2"/><text x="78.9545%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="78.7045%" y="389" width="0.1619%" height="15" fill="rgb(214,75,48)" fg:x="972" fg:w="2"/><text x="78.9545%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.9474%" y="357" width="0.0810%" height="15" fill="rgb(229,119,22)" fg:x="975" fg:w="1"/><text x="79.1974%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.0283%" y="357" width="0.0810%" height="15" fill="rgb(226,153,19)" fg:x="976" fg:w="1"/><text x="79.2783%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0283%" y="341" width="0.0810%" height="15" fill="rgb(220,204,36)" fg:x="976" fg:w="1"/><text x="79.2783%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.0283%" y="325" width="0.0810%" height="15" fill="rgb(253,181,43)" fg:x="976" fg:w="1"/><text x="79.2783%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0283%" y="309" width="0.0810%" height="15" fill="rgb(211,41,51)" fg:x="976" fg:w="1"/><text x="79.2783%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.0283%" y="293" width="0.0810%" height="15" fill="rgb(207,215,0)" fg:x="976" fg:w="1"/><text x="79.2783%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.1093%" y="325" width="0.0810%" height="15" fill="rgb(212,153,10)" fg:x="977" fg:w="1"/><text x="79.3593%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.1093%" y="309" width="0.0810%" height="15" fill="rgb(251,171,36)" fg:x="977" fg:w="1"/><text x="79.3593%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="78.9474%" y="373" width="0.4049%" height="15" fill="rgb(225,219,41)" fg:x="975" fg:w="5"/><text x="79.1974%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.1093%" y="357" width="0.2429%" height="15" fill="rgb(208,200,1)" fg:x="977" fg:w="3"/><text x="79.3593%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="79.1093%" y="341" width="0.2429%" height="15" fill="rgb(206,75,47)" fg:x="977" fg:w="3"/><text x="79.3593%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="79.1903%" y="325" width="0.1619%" height="15" fill="rgb(248,3,16)" fg:x="978" fg:w="2"/><text x="79.4403%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="79.1903%" y="309" width="0.1619%" height="15" fill="rgb(242,157,36)" fg:x="978" fg:w="2"/><text x="79.4403%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.2713%" y="293" width="0.0810%" height="15" fill="rgb(215,175,11)" fg:x="979" fg:w="1"/><text x="79.5213%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.2713%" y="277" width="0.0810%" height="15" fill="rgb(252,222,22)" fg:x="979" fg:w="1"/><text x="79.5213%" y="287.50"></text></g><g><title>engine::session::Session::flush (43 samples, 3.48%)</title><rect x="75.9514%" y="549" width="3.4818%" height="15" fill="rgb(250,121,35)" fg:x="938" fg:w="43"/><text x="76.2014%" y="559.50">eng..</text></g><g><title>engine::session::state::State::close (40 samples, 3.24%)</title><rect x="76.1943%" y="533" width="3.2389%" height="15" fill="rgb(233,120,49)" fg:x="941" fg:w="40"/><text x="76.4443%" y="543.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (40 samples, 3.24%)</title><rect x="76.1943%" y="517" width="3.2389%" height="15" fill="rgb(205,201,14)" fg:x="941" fg:w="40"/><text x="76.4443%" y="527.50">eng..</text></g><g><title>core::iter::adapters::try_process (39 samples, 3.16%)</title><rect x="76.2753%" y="501" width="3.1579%" height="15" fill="rgb(219,58,45)" fg:x="942" fg:w="39"/><text x="76.5253%" y="511.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 3.16%)</title><rect x="76.2753%" y="485" width="3.1579%" height="15" fill="rgb(251,65,12)" fg:x="942" fg:w="39"/><text x="76.5253%" y="495.50">&lt;al..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (38 samples, 3.08%)</title><rect x="76.3563%" y="469" width="3.0769%" height="15" fill="rgb(224,47,31)" fg:x="943" fg:w="38"/><text x="76.6063%" y="479.50">eng..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.89%)</title><rect x="78.5425%" y="453" width="0.8907%" height="15" fill="rgb(233,74,26)" fg:x="970" fg:w="11"/><text x="78.7925%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.73%)</title><rect x="78.7045%" y="437" width="0.7287%" height="15" fill="rgb(231,211,31)" fg:x="972" fg:w="9"/><text x="78.9545%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="78.7045%" y="421" width="0.7287%" height="15" fill="rgb(239,167,5)" fg:x="972" fg:w="9"/><text x="78.9545%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.57%)</title><rect x="78.8664%" y="405" width="0.5668%" height="15" fill="rgb(241,85,0)" fg:x="974" fg:w="7"/><text x="79.1164%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.57%)</title><rect x="78.8664%" y="389" width="0.5668%" height="15" fill="rgb(229,130,21)" fg:x="974" fg:w="7"/><text x="79.1164%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.3522%" y="373" width="0.0810%" height="15" fill="rgb(254,84,49)" fg:x="980" fg:w="1"/><text x="79.6022%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3522%" y="357" width="0.0810%" height="15" fill="rgb(235,85,21)" fg:x="980" fg:w="1"/><text x="79.6022%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="79.4332%" y="549" width="0.1619%" height="15" fill="rgb(246,128,52)" fg:x="981" fg:w="2"/><text x="79.6832%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="79.4332%" y="533" width="0.1619%" height="15" fill="rgb(243,114,49)" fg:x="981" fg:w="2"/><text x="79.6832%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="79.4332%" y="517" width="0.1619%" height="15" fill="rgb(240,224,22)" fg:x="981" fg:w="2"/><text x="79.6832%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="79.4332%" y="501" width="0.1619%" height="15" fill="rgb(247,201,52)" fg:x="981" fg:w="2"/><text x="79.6832%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="79.4332%" y="485" width="0.1619%" height="15" fill="rgb(231,70,45)" fg:x="981" fg:w="2"/><text x="79.6832%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5142%" y="469" width="0.0810%" height="15" fill="rgb(217,215,20)" fg:x="982" fg:w="1"/><text x="79.7642%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.5142%" y="453" width="0.0810%" height="15" fill="rgb(226,170,30)" fg:x="982" fg:w="1"/><text x="79.7642%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5142%" y="437" width="0.0810%" height="15" fill="rgb(220,190,43)" fg:x="982" fg:w="1"/><text x="79.7642%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5142%" y="421" width="0.0810%" height="15" fill="rgb(218,20,18)" fg:x="982" fg:w="1"/><text x="79.7642%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.5142%" y="405" width="0.0810%" height="15" fill="rgb(245,37,26)" fg:x="982" fg:w="1"/><text x="79.7642%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.5951%" y="501" width="0.0810%" height="15" fill="rgb(241,127,29)" fg:x="983" fg:w="1"/><text x="79.8451%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.5951%" y="485" width="0.0810%" height="15" fill="rgb(241,33,26)" fg:x="983" fg:w="1"/><text x="79.8451%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6761%" y="501" width="0.0810%" height="15" fill="rgb(220,106,21)" fg:x="984" fg:w="1"/><text x="79.9261%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.24%)</title><rect x="79.5951%" y="517" width="0.2429%" height="15" fill="rgb(225,125,35)" fg:x="983" fg:w="3"/><text x="79.8451%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.7571%" y="501" width="0.0810%" height="15" fill="rgb(248,80,22)" fg:x="985" fg:w="1"/><text x="80.0071%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.7571%" y="485" width="0.0810%" height="15" fill="rgb(231,117,39)" fg:x="985" fg:w="1"/><text x="80.0071%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.7571%" y="469" width="0.0810%" height="15" fill="rgb(239,183,16)" fg:x="985" fg:w="1"/><text x="80.0071%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.7571%" y="453" width="0.0810%" height="15" fill="rgb(221,61,19)" fg:x="985" fg:w="1"/><text x="80.0071%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.7571%" y="437" width="0.0810%" height="15" fill="rgb(239,196,44)" fg:x="985" fg:w="1"/><text x="80.0071%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8381%" y="517" width="0.0810%" height="15" fill="rgb(206,113,19)" fg:x="986" fg:w="1"/><text x="80.0881%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="79.9190%" y="517" width="0.0810%" height="15" fill="rgb(245,114,12)" fg:x="987" fg:w="1"/><text x="80.1690%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="79.9190%" y="501" width="0.0810%" height="15" fill="rgb(247,89,39)" fg:x="987" fg:w="1"/><text x="80.1690%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="79.9190%" y="485" width="0.0810%" height="15" fill="rgb(213,85,14)" fg:x="987" fg:w="1"/><text x="80.1690%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.9190%" y="469" width="0.0810%" height="15" fill="rgb(249,206,33)" fg:x="987" fg:w="1"/><text x="80.1690%" y="479.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9190%" y="453" width="0.0810%" height="15" fill="rgb(235,167,47)" fg:x="987" fg:w="1"/><text x="80.1690%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.9190%" y="437" width="0.0810%" height="15" fill="rgb(217,177,16)" fg:x="987" fg:w="1"/><text x="80.1690%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9190%" y="421" width="0.0810%" height="15" fill="rgb(250,228,29)" fg:x="987" fg:w="1"/><text x="80.1690%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9190%" y="405" width="0.0810%" height="15" fill="rgb(216,195,42)" fg:x="987" fg:w="1"/><text x="80.1690%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.9190%" y="389" width="0.0810%" height="15" fill="rgb(232,192,32)" fg:x="987" fg:w="1"/><text x="80.1690%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="80.0000%" y="501" width="0.0810%" height="15" fill="rgb(211,8,47)" fg:x="988" fg:w="1"/><text x="80.2500%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="80.0000%" y="485" width="0.0810%" height="15" fill="rgb(251,201,9)" fg:x="988" fg:w="1"/><text x="80.2500%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="80.0000%" y="469" width="0.0810%" height="15" fill="rgb(206,185,47)" fg:x="988" fg:w="1"/><text x="80.2500%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.0000%" y="453" width="0.0810%" height="15" fill="rgb(245,54,32)" fg:x="988" fg:w="1"/><text x="80.2500%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0000%" y="437" width="0.0810%" height="15" fill="rgb(208,1,8)" fg:x="988" fg:w="1"/><text x="80.2500%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.0000%" y="421" width="0.0810%" height="15" fill="rgb(228,57,24)" fg:x="988" fg:w="1"/><text x="80.2500%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0000%" y="405" width="0.0810%" height="15" fill="rgb(251,24,8)" fg:x="988" fg:w="1"/><text x="80.2500%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0000%" y="389" width="0.0810%" height="15" fill="rgb(236,196,50)" fg:x="988" fg:w="1"/><text x="80.2500%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="79.5951%" y="533" width="0.5668%" height="15" fill="rgb(246,222,29)" fg:x="983" fg:w="7"/><text x="79.8451%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="80.0000%" y="517" width="0.1619%" height="15" fill="rgb(211,34,40)" fg:x="988" fg:w="2"/><text x="80.2500%" y="527.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="80.0810%" y="501" width="0.0810%" height="15" fill="rgb(210,66,51)" fg:x="989" fg:w="1"/><text x="80.3310%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0810%" y="485" width="0.0810%" height="15" fill="rgb(250,56,43)" fg:x="989" fg:w="1"/><text x="80.3310%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0810%" y="469" width="0.0810%" height="15" fill="rgb(240,111,50)" fg:x="989" fg:w="1"/><text x="80.3310%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.0810%" y="453" width="0.0810%" height="15" fill="rgb(209,117,13)" fg:x="989" fg:w="1"/><text x="80.3310%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.0810%" y="437" width="0.0810%" height="15" fill="rgb(232,164,45)" fg:x="989" fg:w="1"/><text x="80.3310%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.0810%" y="421" width="0.0810%" height="15" fill="rgb(205,69,32)" fg:x="989" fg:w="1"/><text x="80.3310%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0810%" y="405" width="0.0810%" height="15" fill="rgb(240,147,45)" fg:x="989" fg:w="1"/><text x="80.3310%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0810%" y="389" width="0.0810%" height="15" fill="rgb(221,94,48)" fg:x="989" fg:w="1"/><text x="80.3310%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.0810%" y="373" width="0.0810%" height="15" fill="rgb(249,209,17)" fg:x="989" fg:w="1"/><text x="80.3310%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.0810%" y="357" width="0.0810%" height="15" fill="rgb(228,57,28)" fg:x="989" fg:w="1"/><text x="80.3310%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.0810%" y="341" width="0.0810%" height="15" fill="rgb(250,133,26)" fg:x="989" fg:w="1"/><text x="80.3310%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.0810%" y="325" width="0.0810%" height="15" fill="rgb(254,15,16)" fg:x="989" fg:w="1"/><text x="80.3310%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.1619%" y="533" width="0.0810%" height="15" fill="rgb(209,147,42)" fg:x="990" fg:w="1"/><text x="80.4119%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1619%" y="517" width="0.0810%" height="15" fill="rgb(208,5,29)" fg:x="990" fg:w="1"/><text x="80.4119%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="80.2429%" y="517" width="0.0810%" height="15" fill="rgb(250,73,31)" fg:x="991" fg:w="1"/><text x="80.4929%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="80.2429%" y="501" width="0.0810%" height="15" fill="rgb(238,45,10)" fg:x="991" fg:w="1"/><text x="80.4929%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (10 samples, 0.81%)</title><rect x="79.5951%" y="549" width="0.8097%" height="15" fill="rgb(214,104,5)" fg:x="983" fg:w="10"/><text x="79.8451%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="80.2429%" y="533" width="0.1619%" height="15" fill="rgb(242,217,19)" fg:x="991" fg:w="2"/><text x="80.4929%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.3239%" y="517" width="0.0810%" height="15" fill="rgb(246,113,27)" fg:x="992" fg:w="1"/><text x="80.5739%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3239%" y="501" width="0.0810%" height="15" fill="rgb(221,34,27)" fg:x="992" fg:w="1"/><text x="80.5739%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.3239%" y="485" width="0.0810%" height="15" fill="rgb(246,109,6)" fg:x="992" fg:w="1"/><text x="80.5739%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.3239%" y="469" width="0.0810%" height="15" fill="rgb(217,12,25)" fg:x="992" fg:w="1"/><text x="80.5739%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.3239%" y="453" width="0.0810%" height="15" fill="rgb(250,195,5)" fg:x="992" fg:w="1"/><text x="80.5739%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4049%" y="453" width="0.0810%" height="15" fill="rgb(244,140,45)" fg:x="993" fg:w="1"/><text x="80.6549%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.4049%" y="485" width="0.1619%" height="15" fill="rgb(230,64,14)" fg:x="993" fg:w="2"/><text x="80.6549%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="80.4049%" y="469" width="0.1619%" height="15" fill="rgb(206,27,27)" fg:x="993" fg:w="2"/><text x="80.6549%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.4858%" y="453" width="0.0810%" height="15" fill="rgb(230,14,50)" fg:x="994" fg:w="1"/><text x="80.7358%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4858%" y="437" width="0.0810%" height="15" fill="rgb(237,172,14)" fg:x="994" fg:w="1"/><text x="80.7358%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.4858%" y="421" width="0.0810%" height="15" fill="rgb(209,25,21)" fg:x="994" fg:w="1"/><text x="80.7358%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4858%" y="405" width="0.0810%" height="15" fill="rgb(248,148,22)" fg:x="994" fg:w="1"/><text x="80.7358%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.4858%" y="389" width="0.0810%" height="15" fill="rgb(234,100,22)" fg:x="994" fg:w="1"/><text x="80.7358%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4858%" y="373" width="0.0810%" height="15" fill="rgb(210,20,30)" fg:x="994" fg:w="1"/><text x="80.7358%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.32%)</title><rect x="80.4049%" y="517" width="0.3239%" height="15" fill="rgb(232,58,0)" fg:x="993" fg:w="4"/><text x="80.6549%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="80.4049%" y="501" width="0.3239%" height="15" fill="rgb(221,68,13)" fg:x="993" fg:w="4"/><text x="80.6549%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="80.5668%" y="485" width="0.1619%" height="15" fill="rgb(231,194,11)" fg:x="995" fg:w="2"/><text x="80.8168%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="80.5668%" y="469" width="0.1619%" height="15" fill="rgb(235,51,41)" fg:x="995" fg:w="2"/><text x="80.8168%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.5668%" y="453" width="0.1619%" height="15" fill="rgb(240,50,32)" fg:x="995" fg:w="2"/><text x="80.8168%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.5668%" y="437" width="0.1619%" height="15" fill="rgb(240,185,36)" fg:x="995" fg:w="2"/><text x="80.8168%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="80.5668%" y="421" width="0.1619%" height="15" fill="rgb(211,168,15)" fg:x="995" fg:w="2"/><text x="80.8168%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.5668%" y="405" width="0.1619%" height="15" fill="rgb(221,70,0)" fg:x="995" fg:w="2"/><text x="80.8168%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.6478%" y="389" width="0.0810%" height="15" fill="rgb(205,21,33)" fg:x="996" fg:w="1"/><text x="80.8978%" y="399.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.7287%" y="469" width="0.0810%" height="15" fill="rgb(225,106,10)" fg:x="997" fg:w="1"/><text x="80.9787%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="80.7287%" y="453" width="0.0810%" height="15" fill="rgb(236,200,50)" fg:x="997" fg:w="1"/><text x="80.9787%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="80.7287%" y="437" width="0.0810%" height="15" fill="rgb(249,93,23)" fg:x="997" fg:w="1"/><text x="80.9787%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7287%" y="421" width="0.0810%" height="15" fill="rgb(244,115,35)" fg:x="997" fg:w="1"/><text x="80.9787%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="80.7287%" y="517" width="0.2429%" height="15" fill="rgb(231,129,47)" fg:x="997" fg:w="3"/><text x="80.9787%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.24%)</title><rect x="80.7287%" y="501" width="0.2429%" height="15" fill="rgb(225,160,50)" fg:x="997" fg:w="3"/><text x="80.9787%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="80.7287%" y="485" width="0.2429%" height="15" fill="rgb(218,135,23)" fg:x="997" fg:w="3"/><text x="80.9787%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="80.8097%" y="469" width="0.1619%" height="15" fill="rgb(227,119,14)" fg:x="998" fg:w="2"/><text x="81.0597%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="80.8097%" y="453" width="0.1619%" height="15" fill="rgb(242,138,13)" fg:x="998" fg:w="2"/><text x="81.0597%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.8097%" y="437" width="0.1619%" height="15" fill="rgb(215,11,16)" fg:x="998" fg:w="2"/><text x="81.0597%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.8097%" y="421" width="0.1619%" height="15" fill="rgb(234,170,50)" fg:x="998" fg:w="2"/><text x="81.0597%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.8907%" y="405" width="0.0810%" height="15" fill="rgb(233,34,20)" fg:x="999" fg:w="1"/><text x="81.1407%" y="415.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (9 samples, 0.73%)</title><rect x="80.4049%" y="549" width="0.7287%" height="15" fill="rgb(237,100,45)" fg:x="993" fg:w="9"/><text x="80.6549%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.73%)</title><rect x="80.4049%" y="533" width="0.7287%" height="15" fill="rgb(231,184,36)" fg:x="993" fg:w="9"/><text x="80.6549%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="80.9717%" y="517" width="0.1619%" height="15" fill="rgb(252,93,2)" fg:x="1000" fg:w="2"/><text x="81.2217%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="81.0526%" y="501" width="0.0810%" height="15" fill="rgb(248,176,47)" fg:x="1001" fg:w="1"/><text x="81.3026%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="81.0526%" y="485" width="0.0810%" height="15" fill="rgb(249,125,23)" fg:x="1001" fg:w="1"/><text x="81.3026%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="81.1336%" y="517" width="0.0810%" height="15" fill="rgb(239,67,42)" fg:x="1002" fg:w="1"/><text x="81.3836%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.1336%" y="501" width="0.0810%" height="15" fill="rgb(244,162,4)" fg:x="1002" fg:w="1"/><text x="81.3836%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1336%" y="485" width="0.0810%" height="15" fill="rgb(214,150,38)" fg:x="1002" fg:w="1"/><text x="81.3836%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="81.1336%" y="469" width="0.0810%" height="15" fill="rgb(228,211,28)" fg:x="1002" fg:w="1"/><text x="81.3836%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="81.1336%" y="533" width="0.1619%" height="15" fill="rgb(212,98,48)" fg:x="1002" fg:w="2"/><text x="81.3836%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="81.2146%" y="517" width="0.0810%" height="15" fill="rgb(213,45,13)" fg:x="1003" fg:w="1"/><text x="81.4646%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2146%" y="501" width="0.0810%" height="15" fill="rgb(218,35,29)" fg:x="1003" fg:w="1"/><text x="81.4646%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="81.2146%" y="485" width="0.0810%" height="15" fill="rgb(244,13,3)" fg:x="1003" fg:w="1"/><text x="81.4646%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2146%" y="469" width="0.0810%" height="15" fill="rgb(235,170,19)" fg:x="1003" fg:w="1"/><text x="81.4646%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="81.2955%" y="533" width="0.0810%" height="15" fill="rgb(233,193,43)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.2955%" y="517" width="0.0810%" height="15" fill="rgb(228,223,20)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="81.2955%" y="501" width="0.0810%" height="15" fill="rgb(208,85,54)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="81.2955%" y="485" width="0.0810%" height="15" fill="rgb(254,14,45)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="81.2955%" y="469" width="0.0810%" height="15" fill="rgb(247,99,29)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.2955%" y="453" width="0.0810%" height="15" fill="rgb(225,180,54)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="81.2955%" y="437" width="0.0810%" height="15" fill="rgb(239,88,43)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2955%" y="421" width="0.0810%" height="15" fill="rgb(209,47,11)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2955%" y="405" width="0.0810%" height="15" fill="rgb(219,179,23)" fg:x="1004" fg:w="1"/><text x="81.5455%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6194%" y="373" width="0.0810%" height="15" fill="rgb(213,183,19)" fg:x="1008" fg:w="1"/><text x="81.8694%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="81.6194%" y="389" width="0.1619%" height="15" fill="rgb(210,11,9)" fg:x="1008" fg:w="2"/><text x="81.8694%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="81.7004%" y="373" width="0.0810%" height="15" fill="rgb(239,194,16)" fg:x="1009" fg:w="1"/><text x="81.9504%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.7004%" y="357" width="0.0810%" height="15" fill="rgb(246,23,50)" fg:x="1009" fg:w="1"/><text x="81.9504%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7004%" y="341" width="0.0810%" height="15" fill="rgb(245,10,41)" fg:x="1009" fg:w="1"/><text x="81.9504%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.7814%" y="389" width="0.1619%" height="15" fill="rgb(228,43,24)" fg:x="1010" fg:w="2"/><text x="82.0314%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="81.5385%" y="405" width="0.4858%" height="15" fill="rgb(220,151,0)" fg:x="1007" fg:w="6"/><text x="81.7885%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.9433%" y="389" width="0.0810%" height="15" fill="rgb(232,219,10)" fg:x="1012" fg:w="1"/><text x="82.1933%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="81.5385%" y="421" width="0.5668%" height="15" fill="rgb(227,217,48)" fg:x="1007" fg:w="7"/><text x="81.7885%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0243%" y="405" width="0.0810%" height="15" fill="rgb(210,66,35)" fg:x="1013" fg:w="1"/><text x="82.2743%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.1053%" y="405" width="0.0810%" height="15" fill="rgb(254,6,7)" fg:x="1014" fg:w="1"/><text x="82.3553%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.1053%" y="389" width="0.0810%" height="15" fill="rgb(235,222,42)" fg:x="1014" fg:w="1"/><text x="82.3553%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.1862%" y="373" width="0.0810%" height="15" fill="rgb(245,126,5)" fg:x="1015" fg:w="1"/><text x="82.4362%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="82.2672%" y="373" width="0.1619%" height="15" fill="rgb(215,73,17)" fg:x="1016" fg:w="2"/><text x="82.5172%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2672%" y="357" width="0.1619%" height="15" fill="rgb(219,198,52)" fg:x="1016" fg:w="2"/><text x="82.5172%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2672%" y="341" width="0.1619%" height="15" fill="rgb(217,159,18)" fg:x="1016" fg:w="2"/><text x="82.5172%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.2672%" y="325" width="0.1619%" height="15" fill="rgb(212,177,18)" fg:x="1016" fg:w="2"/><text x="82.5172%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3482%" y="309" width="0.0810%" height="15" fill="rgb(241,10,11)" fg:x="1017" fg:w="1"/><text x="82.5982%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="82.4291%" y="373" width="0.2429%" height="15" fill="rgb(232,114,35)" fg:x="1018" fg:w="3"/><text x="82.6791%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.5101%" y="357" width="0.1619%" height="15" fill="rgb(238,222,8)" fg:x="1019" fg:w="2"/><text x="82.7601%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.5101%" y="341" width="0.1619%" height="15" fill="rgb(251,153,44)" fg:x="1019" fg:w="2"/><text x="82.7601%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5911%" y="325" width="0.0810%" height="15" fill="rgb(210,140,51)" fg:x="1020" fg:w="1"/><text x="82.8411%" y="335.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="82.6721%" y="357" width="0.0810%" height="15" fill="rgb(222,63,0)" fg:x="1021" fg:w="1"/><text x="82.9221%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="82.7530%" y="357" width="0.3239%" height="15" fill="rgb(240,18,40)" fg:x="1022" fg:w="4"/><text x="83.0030%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="82.7530%" y="341" width="0.3239%" height="15" fill="rgb(237,88,16)" fg:x="1022" fg:w="4"/><text x="83.0030%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="82.7530%" y="325" width="0.3239%" height="15" fill="rgb(251,117,13)" fg:x="1022" fg:w="4"/><text x="83.0030%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="82.7530%" y="309" width="0.3239%" height="15" fill="rgb(251,228,8)" fg:x="1022" fg:w="4"/><text x="83.0030%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="82.9150%" y="293" width="0.1619%" height="15" fill="rgb(205,107,49)" fg:x="1024" fg:w="2"/><text x="83.1650%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="82.9150%" y="277" width="0.1619%" height="15" fill="rgb(238,72,41)" fg:x="1024" fg:w="2"/><text x="83.1650%" y="287.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="82.9150%" y="261" width="0.1619%" height="15" fill="rgb(248,183,52)" fg:x="1024" fg:w="2"/><text x="83.1650%" y="271.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.1579%" y="341" width="0.1619%" height="15" fill="rgb(215,58,20)" fg:x="1027" fg:w="2"/><text x="83.4079%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.1579%" y="325" width="0.1619%" height="15" fill="rgb(209,49,13)" fg:x="1027" fg:w="2"/><text x="83.4079%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="83.0769%" y="357" width="0.4858%" height="15" fill="rgb(208,113,17)" fg:x="1026" fg:w="6"/><text x="83.3269%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="83.3198%" y="341" width="0.2429%" height="15" fill="rgb(208,14,22)" fg:x="1029" fg:w="3"/><text x="83.5698%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.4008%" y="325" width="0.1619%" height="15" fill="rgb(222,95,2)" fg:x="1030" fg:w="2"/><text x="83.6508%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.4008%" y="309" width="0.1619%" height="15" fill="rgb(253,180,37)" fg:x="1030" fg:w="2"/><text x="83.6508%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="82.6721%" y="373" width="0.9717%" height="15" fill="rgb(250,81,33)" fg:x="1021" fg:w="12"/><text x="82.9221%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.5628%" y="357" width="0.0810%" height="15" fill="rgb(251,151,41)" fg:x="1032" fg:w="1"/><text x="83.8128%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.5628%" y="341" width="0.0810%" height="15" fill="rgb(210,135,17)" fg:x="1032" fg:w="1"/><text x="83.8128%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.54%)</title><rect x="82.1862%" y="405" width="1.5385%" height="15" fill="rgb(239,21,29)" fg:x="1015" fg:w="19"/><text x="82.4362%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.54%)</title><rect x="82.1862%" y="389" width="1.5385%" height="15" fill="rgb(231,215,16)" fg:x="1015" fg:w="19"/><text x="82.4362%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.6437%" y="373" width="0.0810%" height="15" fill="rgb(239,151,54)" fg:x="1033" fg:w="1"/><text x="83.8937%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.6437%" y="357" width="0.0810%" height="15" fill="rgb(222,122,38)" fg:x="1033" fg:w="1"/><text x="83.8937%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.6437%" y="341" width="0.0810%" height="15" fill="rgb(243,128,1)" fg:x="1033" fg:w="1"/><text x="83.8937%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (21 samples, 1.70%)</title><rect x="82.1053%" y="421" width="1.7004%" height="15" fill="rgb(225,74,21)" fg:x="1014" fg:w="21"/><text x="82.3553%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.7247%" y="405" width="0.0810%" height="15" fill="rgb(216,210,10)" fg:x="1034" fg:w="1"/><text x="83.9747%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.7247%" y="389" width="0.0810%" height="15" fill="rgb(228,76,19)" fg:x="1034" fg:w="1"/><text x="83.9747%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.7247%" y="373" width="0.0810%" height="15" fill="rgb(236,80,34)" fg:x="1034" fg:w="1"/><text x="83.9747%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.8866%" y="389" width="0.0810%" height="15" fill="rgb(225,173,23)" fg:x="1036" fg:w="1"/><text x="84.1366%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.9676%" y="389" width="0.0810%" height="15" fill="rgb(253,38,1)" fg:x="1037" fg:w="1"/><text x="84.2176%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="83.8057%" y="405" width="0.3239%" height="15" fill="rgb(206,155,35)" fg:x="1035" fg:w="4"/><text x="84.0557%" y="415.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="84.0486%" y="389" width="0.0810%" height="15" fill="rgb(254,27,53)" fg:x="1038" fg:w="1"/><text x="84.2986%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.0486%" y="373" width="0.0810%" height="15" fill="rgb(225,52,41)" fg:x="1038" fg:w="1"/><text x="84.2986%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2105%" y="373" width="0.0810%" height="15" fill="rgb(244,53,18)" fg:x="1040" fg:w="1"/><text x="84.4605%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4534%" y="325" width="0.0810%" height="15" fill="rgb(254,206,48)" fg:x="1043" fg:w="1"/><text x="84.7034%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4534%" y="309" width="0.0810%" height="15" fill="rgb(236,182,23)" fg:x="1043" fg:w="1"/><text x="84.7034%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="84.5344%" y="325" width="0.1619%" height="15" fill="rgb(236,191,37)" fg:x="1044" fg:w="2"/><text x="84.7844%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6154%" y="309" width="0.0810%" height="15" fill="rgb(245,53,8)" fg:x="1045" fg:w="1"/><text x="84.8654%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.6154%" y="293" width="0.0810%" height="15" fill="rgb(245,147,9)" fg:x="1045" fg:w="1"/><text x="84.8654%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6154%" y="277" width="0.0810%" height="15" fill="rgb(218,24,48)" fg:x="1045" fg:w="1"/><text x="84.8654%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.6154%" y="261" width="0.0810%" height="15" fill="rgb(254,23,9)" fg:x="1045" fg:w="1"/><text x="84.8654%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6154%" y="245" width="0.0810%" height="15" fill="rgb(244,105,9)" fg:x="1045" fg:w="1"/><text x="84.8654%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.6154%" y="229" width="0.0810%" height="15" fill="rgb(212,142,22)" fg:x="1045" fg:w="1"/><text x="84.8654%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6154%" y="213" width="0.0810%" height="15" fill="rgb(221,114,49)" fg:x="1045" fg:w="1"/><text x="84.8654%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.57%)</title><rect x="84.4534%" y="357" width="0.5668%" height="15" fill="rgb(223,210,25)" fg:x="1043" fg:w="7"/><text x="84.7034%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="84.4534%" y="341" width="0.5668%" height="15" fill="rgb(235,162,44)" fg:x="1043" fg:w="7"/><text x="84.7034%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="84.6964%" y="325" width="0.3239%" height="15" fill="rgb(237,65,45)" fg:x="1046" fg:w="4"/><text x="84.9464%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="84.7773%" y="309" width="0.2429%" height="15" fill="rgb(208,79,9)" fg:x="1047" fg:w="3"/><text x="85.0273%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="84.7773%" y="293" width="0.2429%" height="15" fill="rgb(215,228,8)" fg:x="1047" fg:w="3"/><text x="85.0273%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.9393%" y="277" width="0.0810%" height="15" fill="rgb(205,185,17)" fg:x="1049" fg:w="1"/><text x="85.1893%" y="287.50"></text></g><g><title>engine::session::Session::flush (46 samples, 3.72%)</title><rect x="81.3765%" y="533" width="3.7247%" height="15" fill="rgb(213,62,36)" fg:x="1005" fg:w="46"/><text x="81.6265%" y="543.50">engi..</text></g><g><title>engine::session::Session::save_changes (46 samples, 3.72%)</title><rect x="81.3765%" y="517" width="3.7247%" height="15" fill="rgb(209,34,9)" fg:x="1005" fg:w="46"/><text x="81.6265%" y="527.50">engi..</text></g><g><title>engine::session::state::State::close (46 samples, 3.72%)</title><rect x="81.3765%" y="501" width="3.7247%" height="15" fill="rgb(246,151,27)" fg:x="1005" fg:w="46"/><text x="81.6265%" y="511.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (46 samples, 3.72%)</title><rect x="81.3765%" y="485" width="3.7247%" height="15" fill="rgb(218,206,3)" fg:x="1005" fg:w="46"/><text x="81.6265%" y="495.50">engi..</text></g><g><title>core::iter::adapters::try_process (46 samples, 3.72%)</title><rect x="81.3765%" y="469" width="3.7247%" height="15" fill="rgb(242,202,1)" fg:x="1005" fg:w="46"/><text x="81.6265%" y="479.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 3.72%)</title><rect x="81.3765%" y="453" width="3.7247%" height="15" fill="rgb(227,185,16)" fg:x="1005" fg:w="46"/><text x="81.6265%" y="463.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (45 samples, 3.64%)</title><rect x="81.4575%" y="437" width="3.6437%" height="15" fill="rgb(241,1,14)" fg:x="1006" fg:w="45"/><text x="81.7075%" y="447.50">engi..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.30%)</title><rect x="83.8057%" y="421" width="1.2955%" height="15" fill="rgb(212,113,25)" fg:x="1035" fg:w="16"/><text x="84.0557%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.97%)</title><rect x="84.1296%" y="405" width="0.9717%" height="15" fill="rgb(247,37,43)" fg:x="1039" fg:w="12"/><text x="84.3796%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="84.1296%" y="389" width="0.9717%" height="15" fill="rgb(226,54,8)" fg:x="1039" fg:w="12"/><text x="84.3796%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.81%)</title><rect x="84.2915%" y="373" width="0.8097%" height="15" fill="rgb(251,205,25)" fg:x="1041" fg:w="10"/><text x="84.5415%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0202%" y="357" width="0.0810%" height="15" fill="rgb(246,87,35)" fg:x="1050" fg:w="1"/><text x="85.2702%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.1012%" y="533" width="0.0810%" height="15" fill="rgb(251,145,46)" fg:x="1051" fg:w="1"/><text x="85.3512%" y="543.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="85.1012%" y="517" width="0.0810%" height="15" fill="rgb(210,210,33)" fg:x="1051" fg:w="1"/><text x="85.3512%" y="527.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="85.1012%" y="501" width="0.0810%" height="15" fill="rgb(221,151,11)" fg:x="1051" fg:w="1"/><text x="85.3512%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1012%" y="485" width="0.0810%" height="15" fill="rgb(208,160,28)" fg:x="1051" fg:w="1"/><text x="85.3512%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="85.1012%" y="469" width="0.0810%" height="15" fill="rgb(243,69,29)" fg:x="1051" fg:w="1"/><text x="85.3512%" y="479.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="85.1822%" y="533" width="0.0810%" height="15" fill="rgb(224,144,4)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="85.1822%" y="517" width="0.0810%" height="15" fill="rgb(211,140,38)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.1822%" y="501" width="0.0810%" height="15" fill="rgb(252,189,15)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.1822%" y="485" width="0.0810%" height="15" fill="rgb(251,175,23)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.1822%" y="469" width="0.0810%" height="15" fill="rgb(212,184,11)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.1822%" y="453" width="0.0810%" height="15" fill="rgb(217,205,6)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.1822%" y="437" width="0.0810%" height="15" fill="rgb(235,45,45)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="85.1822%" y="421" width="0.0810%" height="15" fill="rgb(211,157,53)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="85.1822%" y="405" width="0.0810%" height="15" fill="rgb(212,13,8)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="85.1822%" y="389" width="0.0810%" height="15" fill="rgb(218,80,36)" fg:x="1052" fg:w="1"/><text x="85.4322%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.3441%" y="501" width="0.0810%" height="15" fill="rgb(211,123,43)" fg:x="1054" fg:w="1"/><text x="85.5941%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3441%" y="485" width="0.0810%" height="15" fill="rgb(206,165,2)" fg:x="1054" fg:w="1"/><text x="85.5941%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3441%" y="469" width="0.0810%" height="15" fill="rgb(248,63,35)" fg:x="1054" fg:w="1"/><text x="85.5941%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3441%" y="453" width="0.0810%" height="15" fill="rgb(219,133,41)" fg:x="1054" fg:w="1"/><text x="85.5941%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4251%" y="469" width="0.0810%" height="15" fill="rgb(206,175,46)" fg:x="1055" fg:w="1"/><text x="85.6751%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="85.4251%" y="501" width="0.1619%" height="15" fill="rgb(224,41,35)" fg:x="1055" fg:w="2"/><text x="85.6751%" y="511.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="85.4251%" y="485" width="0.1619%" height="15" fill="rgb(226,113,24)" fg:x="1055" fg:w="2"/><text x="85.6751%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5061%" y="469" width="0.0810%" height="15" fill="rgb(219,51,41)" fg:x="1056" fg:w="1"/><text x="85.7561%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="85.5870%" y="453" width="0.0810%" height="15" fill="rgb(220,145,47)" fg:x="1057" fg:w="1"/><text x="85.8370%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5870%" y="437" width="0.0810%" height="15" fill="rgb(239,121,47)" fg:x="1057" fg:w="1"/><text x="85.8370%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.5870%" y="485" width="0.1619%" height="15" fill="rgb(207,60,40)" fg:x="1057" fg:w="2"/><text x="85.8370%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="85.5870%" y="469" width="0.1619%" height="15" fill="rgb(224,229,11)" fg:x="1057" fg:w="2"/><text x="85.8370%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="85.6680%" y="453" width="0.0810%" height="15" fill="rgb(252,28,32)" fg:x="1058" fg:w="1"/><text x="85.9180%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="85.3441%" y="517" width="0.5668%" height="15" fill="rgb(207,52,49)" fg:x="1054" fg:w="7"/><text x="85.5941%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="85.5870%" y="501" width="0.3239%" height="15" fill="rgb(243,51,50)" fg:x="1057" fg:w="4"/><text x="85.8370%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="85.7490%" y="485" width="0.1619%" height="15" fill="rgb(212,92,21)" fg:x="1059" fg:w="2"/><text x="85.9990%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.7490%" y="469" width="0.1619%" height="15" fill="rgb(230,183,50)" fg:x="1059" fg:w="2"/><text x="85.9990%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.7490%" y="453" width="0.1619%" height="15" fill="rgb(225,48,9)" fg:x="1059" fg:w="2"/><text x="85.9990%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8300%" y="437" width="0.0810%" height="15" fill="rgb(254,44,4)" fg:x="1060" fg:w="1"/><text x="86.0800%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.8300%" y="421" width="0.0810%" height="15" fill="rgb(252,128,37)" fg:x="1060" fg:w="1"/><text x="86.0800%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9109%" y="517" width="0.0810%" height="15" fill="rgb(227,178,8)" fg:x="1061" fg:w="1"/><text x="86.1609%" y="527.50"></text></g><g><title>plugins_core::build::Build::save (10 samples, 0.81%)</title><rect x="85.2632%" y="533" width="0.8097%" height="15" fill="rgb(205,206,32)" fg:x="1053" fg:w="10"/><text x="85.5132%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.9919%" y="517" width="0.0810%" height="15" fill="rgb(220,218,22)" fg:x="1062" fg:w="1"/><text x="86.2419%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9919%" y="501" width="0.0810%" height="15" fill="rgb(236,41,28)" fg:x="1062" fg:w="1"/><text x="86.2419%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9919%" y="485" width="0.0810%" height="15" fill="rgb(219,37,7)" fg:x="1062" fg:w="1"/><text x="86.2419%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.9919%" y="469" width="0.0810%" height="15" fill="rgb(206,160,15)" fg:x="1062" fg:w="1"/><text x="86.2419%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9919%" y="453" width="0.0810%" height="15" fill="rgb(208,82,21)" fg:x="1062" fg:w="1"/><text x="86.2419%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9919%" y="437" width="0.0810%" height="15" fill="rgb(226,130,25)" fg:x="1062" fg:w="1"/><text x="86.2419%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9919%" y="421" width="0.0810%" height="15" fill="rgb(212,72,24)" fg:x="1062" fg:w="1"/><text x="86.2419%" y="431.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="86.0729%" y="533" width="0.0810%" height="15" fill="rgb(206,28,16)" fg:x="1063" fg:w="1"/><text x="86.3229%" y="543.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="86.0729%" y="517" width="0.0810%" height="15" fill="rgb(249,41,5)" fg:x="1063" fg:w="1"/><text x="86.3229%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="86.0729%" y="501" width="0.0810%" height="15" fill="rgb(233,96,48)" fg:x="1063" fg:w="1"/><text x="86.3229%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="86.0729%" y="485" width="0.0810%" height="15" fill="rgb(240,198,11)" fg:x="1063" fg:w="1"/><text x="86.3229%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.0729%" y="469" width="0.0810%" height="15" fill="rgb(209,175,35)" fg:x="1063" fg:w="1"/><text x="86.3229%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0729%" y="453" width="0.0810%" height="15" fill="rgb(214,40,51)" fg:x="1063" fg:w="1"/><text x="86.3229%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0729%" y="437" width="0.0810%" height="15" fill="rgb(252,56,4)" fg:x="1063" fg:w="1"/><text x="86.3229%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1538%" y="437" width="0.0810%" height="15" fill="rgb(219,131,5)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1538%" y="421" width="0.0810%" height="15" fill="rgb(223,67,53)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1538%" y="405" width="0.0810%" height="15" fill="rgb(227,154,8)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1538%" y="389" width="0.0810%" height="15" fill="rgb(216,174,51)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1538%" y="373" width="0.0810%" height="15" fill="rgb(239,60,34)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.1538%" y="357" width="0.0810%" height="15" fill="rgb(236,165,48)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.1538%" y="341" width="0.0810%" height="15" fill="rgb(210,37,26)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.1538%" y="325" width="0.0810%" height="15" fill="rgb(211,3,17)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.1538%" y="309" width="0.0810%" height="15" fill="rgb(234,88,49)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.1538%" y="293" width="0.0810%" height="15" fill="rgb(233,40,17)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.1538%" y="277" width="0.0810%" height="15" fill="rgb(235,127,31)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.1538%" y="261" width="0.0810%" height="15" fill="rgb(248,167,17)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.1538%" y="245" width="0.0810%" height="15" fill="rgb(218,179,8)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.1538%" y="229" width="0.0810%" height="15" fill="rgb(216,92,14)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1538%" y="213" width="0.0810%" height="15" fill="rgb(221,198,46)" fg:x="1064" fg:w="1"/><text x="86.4038%" y="223.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="86.1538%" y="501" width="0.1619%" height="15" fill="rgb(244,7,25)" fg:x="1064" fg:w="2"/><text x="86.4038%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.1538%" y="485" width="0.1619%" height="15" fill="rgb(233,75,6)" fg:x="1064" fg:w="2"/><text x="86.4038%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.1538%" y="469" width="0.1619%" height="15" fill="rgb(240,189,41)" fg:x="1064" fg:w="2"/><text x="86.4038%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="86.1538%" y="453" width="0.1619%" height="15" fill="rgb(237,157,21)" fg:x="1064" fg:w="2"/><text x="86.4038%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2348%" y="437" width="0.0810%" height="15" fill="rgb(210,136,49)" fg:x="1065" fg:w="1"/><text x="86.4848%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2348%" y="421" width="0.0810%" height="15" fill="rgb(210,68,29)" fg:x="1065" fg:w="1"/><text x="86.4848%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.2348%" y="405" width="0.0810%" height="15" fill="rgb(247,207,20)" fg:x="1065" fg:w="1"/><text x="86.4848%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2348%" y="389" width="0.0810%" height="15" fill="rgb(224,73,48)" fg:x="1065" fg:w="1"/><text x="86.4848%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.2348%" y="373" width="0.0810%" height="15" fill="rgb(215,136,47)" fg:x="1065" fg:w="1"/><text x="86.4848%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="86.3158%" y="485" width="0.1619%" height="15" fill="rgb(232,222,16)" fg:x="1066" fg:w="2"/><text x="86.5658%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.3158%" y="469" width="0.1619%" height="15" fill="rgb(249,202,47)" fg:x="1066" fg:w="2"/><text x="86.5658%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.3968%" y="453" width="0.0810%" height="15" fill="rgb(236,56,8)" fg:x="1067" fg:w="1"/><text x="86.6468%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.3968%" y="437" width="0.0810%" height="15" fill="rgb(222,6,3)" fg:x="1067" fg:w="1"/><text x="86.6468%" y="447.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (5 samples, 0.40%)</title><rect x="86.1538%" y="533" width="0.4049%" height="15" fill="rgb(254,222,28)" fg:x="1064" fg:w="5"/><text x="86.4038%" y="543.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="86.1538%" y="517" width="0.4049%" height="15" fill="rgb(219,57,23)" fg:x="1064" fg:w="5"/><text x="86.4038%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.24%)</title><rect x="86.3158%" y="501" width="0.2429%" height="15" fill="rgb(251,106,48)" fg:x="1066" fg:w="3"/><text x="86.5658%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4777%" y="485" width="0.0810%" height="15" fill="rgb(242,2,23)" fg:x="1068" fg:w="1"/><text x="86.7277%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4777%" y="469" width="0.0810%" height="15" fill="rgb(212,109,31)" fg:x="1068" fg:w="1"/><text x="86.7277%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.4777%" y="453" width="0.0810%" height="15" fill="rgb(241,9,22)" fg:x="1068" fg:w="1"/><text x="86.7277%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4777%" y="437" width="0.0810%" height="15" fill="rgb(209,64,27)" fg:x="1068" fg:w="1"/><text x="86.7277%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4777%" y="421" width="0.0810%" height="15" fill="rgb(248,13,44)" fg:x="1068" fg:w="1"/><text x="86.7277%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4777%" y="405" width="0.0810%" height="15" fill="rgb(213,86,6)" fg:x="1068" fg:w="1"/><text x="86.7277%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4777%" y="389" width="0.0810%" height="15" fill="rgb(247,11,18)" fg:x="1068" fg:w="1"/><text x="86.7277%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4777%" y="373" width="0.0810%" height="15" fill="rgb(252,31,11)" fg:x="1068" fg:w="1"/><text x="86.7277%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="86.5587%" y="501" width="0.0810%" height="15" fill="rgb(215,63,51)" fg:x="1069" fg:w="1"/><text x="86.8087%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (2 samples, 0.16%)</title><rect x="86.5587%" y="533" width="0.1619%" height="15" fill="rgb(222,180,4)" fg:x="1069" fg:w="2"/><text x="86.8087%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="86.5587%" y="517" width="0.1619%" height="15" fill="rgb(233,4,23)" fg:x="1069" fg:w="2"/><text x="86.8087%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6397%" y="501" width="0.0810%" height="15" fill="rgb(230,116,22)" fg:x="1070" fg:w="1"/><text x="86.8897%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6397%" y="485" width="0.0810%" height="15" fill="rgb(222,20,14)" fg:x="1070" fg:w="1"/><text x="86.8897%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.6397%" y="469" width="0.0810%" height="15" fill="rgb(210,176,43)" fg:x="1070" fg:w="1"/><text x="86.8897%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6397%" y="453" width="0.0810%" height="15" fill="rgb(219,67,32)" fg:x="1070" fg:w="1"/><text x="86.8897%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6397%" y="437" width="0.0810%" height="15" fill="rgb(228,91,39)" fg:x="1070" fg:w="1"/><text x="86.8897%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6397%" y="421" width="0.0810%" height="15" fill="rgb(254,63,14)" fg:x="1070" fg:w="1"/><text x="86.8897%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="86.7206%" y="517" width="0.0810%" height="15" fill="rgb(216,171,39)" fg:x="1071" fg:w="1"/><text x="86.9706%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.7206%" y="501" width="0.0810%" height="15" fill="rgb(248,68,25)" fg:x="1071" fg:w="1"/><text x="86.9706%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.7206%" y="485" width="0.0810%" height="15" fill="rgb(239,63,16)" fg:x="1071" fg:w="1"/><text x="86.9706%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="86.7206%" y="469" width="0.0810%" height="15" fill="rgb(225,111,43)" fg:x="1071" fg:w="1"/><text x="86.9706%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7206%" y="453" width="0.0810%" height="15" fill="rgb(246,165,17)" fg:x="1071" fg:w="1"/><text x="86.9706%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7206%" y="437" width="0.0810%" height="15" fill="rgb(208,124,1)" fg:x="1071" fg:w="1"/><text x="86.9706%" y="447.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="86.8016%" y="517" width="0.1619%" height="15" fill="rgb(234,147,33)" fg:x="1072" fg:w="2"/><text x="87.0516%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="86.8826%" y="501" width="0.0810%" height="15" fill="rgb(240,86,30)" fg:x="1073" fg:w="1"/><text x="87.1326%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.8826%" y="485" width="0.0810%" height="15" fill="rgb(237,34,51)" fg:x="1073" fg:w="1"/><text x="87.1326%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9636%" y="437" width="0.0810%" height="15" fill="rgb(232,131,41)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9636%" y="421" width="0.0810%" height="15" fill="rgb(227,129,53)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9636%" y="405" width="0.0810%" height="15" fill="rgb(230,90,35)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9636%" y="389" width="0.0810%" height="15" fill="rgb(248,88,27)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9636%" y="373" width="0.0810%" height="15" fill="rgb(223,18,17)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9636%" y="357" width="0.0810%" height="15" fill="rgb(241,11,10)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9636%" y="341" width="0.0810%" height="15" fill="rgb(232,111,52)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.9636%" y="325" width="0.0810%" height="15" fill="rgb(228,67,8)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.9636%" y="309" width="0.0810%" height="15" fill="rgb(251,168,31)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.9636%" y="293" width="0.0810%" height="15" fill="rgb(249,164,11)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.9636%" y="277" width="0.0810%" height="15" fill="rgb(239,81,9)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9636%" y="261" width="0.0810%" height="15" fill="rgb(222,145,38)" fg:x="1074" fg:w="1"/><text x="87.2136%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.9636%" y="485" width="0.1619%" height="15" fill="rgb(238,80,54)" fg:x="1074" fg:w="2"/><text x="87.2136%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.9636%" y="469" width="0.1619%" height="15" fill="rgb(237,116,16)" fg:x="1074" fg:w="2"/><text x="87.2136%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.9636%" y="453" width="0.1619%" height="15" fill="rgb(218,135,19)" fg:x="1074" fg:w="2"/><text x="87.2136%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0445%" y="437" width="0.0810%" height="15" fill="rgb(216,207,44)" fg:x="1075" fg:w="1"/><text x="87.2945%" y="447.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="86.9636%" y="501" width="0.2429%" height="15" fill="rgb(226,152,40)" fg:x="1074" fg:w="3"/><text x="87.2136%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1255%" y="485" width="0.0810%" height="15" fill="rgb(219,98,35)" fg:x="1076" fg:w="1"/><text x="87.3755%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1255%" y="469" width="0.0810%" height="15" fill="rgb(222,136,46)" fg:x="1076" fg:w="1"/><text x="87.3755%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1255%" y="453" width="0.0810%" height="15" fill="rgb(222,71,8)" fg:x="1076" fg:w="1"/><text x="87.3755%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1255%" y="437" width="0.0810%" height="15" fill="rgb(209,89,53)" fg:x="1076" fg:w="1"/><text x="87.3755%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1255%" y="421" width="0.0810%" height="15" fill="rgb(210,97,51)" fg:x="1076" fg:w="1"/><text x="87.3755%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1255%" y="405" width="0.0810%" height="15" fill="rgb(248,65,21)" fg:x="1076" fg:w="1"/><text x="87.3755%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="87.2065%" y="453" width="0.0810%" height="15" fill="rgb(222,5,31)" fg:x="1077" fg:w="1"/><text x="87.4565%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.2065%" y="437" width="0.0810%" height="15" fill="rgb(241,16,30)" fg:x="1077" fg:w="1"/><text x="87.4565%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="86.9636%" y="517" width="0.4049%" height="15" fill="rgb(215,86,30)" fg:x="1074" fg:w="5"/><text x="87.2136%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (2 samples, 0.16%)</title><rect x="87.2065%" y="501" width="0.1619%" height="15" fill="rgb(235,26,44)" fg:x="1077" fg:w="2"/><text x="87.4565%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="87.2065%" y="485" width="0.1619%" height="15" fill="rgb(228,147,14)" fg:x="1077" fg:w="2"/><text x="87.4565%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="87.2065%" y="469" width="0.1619%" height="15" fill="rgb(253,38,50)" fg:x="1077" fg:w="2"/><text x="87.4565%" y="479.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="87.2874%" y="453" width="0.0810%" height="15" fill="rgb(251,151,16)" fg:x="1078" fg:w="1"/><text x="87.5374%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.2874%" y="437" width="0.0810%" height="15" fill="rgb(224,64,19)" fg:x="1078" fg:w="1"/><text x="87.5374%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (78 samples, 6.32%)</title><rect x="81.1336%" y="549" width="6.3158%" height="15" fill="rgb(235,214,47)" fg:x="1002" fg:w="78"/><text x="81.3836%" y="559.50">plugins_..</text></g><g><title>plugins_core::tools::set_container (9 samples, 0.73%)</title><rect x="86.7206%" y="533" width="0.7287%" height="15" fill="rgb(218,15,19)" fg:x="1071" fg:w="9"/><text x="86.9706%" y="543.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="87.3684%" y="517" width="0.0810%" height="15" fill="rgb(247,209,3)" fg:x="1079" fg:w="1"/><text x="87.6184%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="87.3684%" y="501" width="0.0810%" height="15" fill="rgb(217,29,2)" fg:x="1079" fg:w="1"/><text x="87.6184%" y="511.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3684%" y="485" width="0.0810%" height="15" fill="rgb(234,9,9)" fg:x="1079" fg:w="1"/><text x="87.6184%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.3684%" y="469" width="0.0810%" height="15" fill="rgb(207,43,14)" fg:x="1079" fg:w="1"/><text x="87.6184%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="87.3684%" y="453" width="0.0810%" height="15" fill="rgb(216,219,36)" fg:x="1079" fg:w="1"/><text x="87.6184%" y="463.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="87.4494%" y="549" width="0.0810%" height="15" fill="rgb(238,12,26)" fg:x="1080" fg:w="1"/><text x="87.6994%" y="559.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="87.4494%" y="533" width="0.0810%" height="15" fill="rgb(226,67,30)" fg:x="1080" fg:w="1"/><text x="87.6994%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="87.4494%" y="517" width="0.0810%" height="15" fill="rgb(229,154,7)" fg:x="1080" fg:w="1"/><text x="87.6994%" y="527.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="87.4494%" y="501" width="0.0810%" height="15" fill="rgb(249,90,18)" fg:x="1080" fg:w="1"/><text x="87.6994%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4494%" y="485" width="0.0810%" height="15" fill="rgb(223,53,15)" fg:x="1080" fg:w="1"/><text x="87.6994%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.5304%" y="517" width="0.0810%" height="15" fill="rgb(253,86,38)" fg:x="1081" fg:w="1"/><text x="87.7804%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.6113%" y="485" width="0.0810%" height="15" fill="rgb(222,198,9)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.6113%" y="469" width="0.0810%" height="15" fill="rgb(240,146,25)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.6113%" y="453" width="0.0810%" height="15" fill="rgb(225,38,10)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.6113%" y="437" width="0.0810%" height="15" fill="rgb(246,93,4)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.6113%" y="421" width="0.0810%" height="15" fill="rgb(222,55,18)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.6113%" y="405" width="0.0810%" height="15" fill="rgb(233,137,48)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.6113%" y="389" width="0.0810%" height="15" fill="rgb(214,8,54)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.6113%" y="373" width="0.0810%" height="15" fill="rgb(206,75,4)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.6113%" y="357" width="0.0810%" height="15" fill="rgb(238,171,14)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.6113%" y="341" width="0.0810%" height="15" fill="rgb(233,70,41)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.6113%" y="325" width="0.0810%" height="15" fill="rgb(214,68,36)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6113%" y="309" width="0.0810%" height="15" fill="rgb(223,29,5)" fg:x="1082" fg:w="1"/><text x="87.8613%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="87.6923%" y="485" width="0.0810%" height="15" fill="rgb(251,22,40)" fg:x="1083" fg:w="1"/><text x="87.9423%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.6923%" y="469" width="0.0810%" height="15" fill="rgb(210,67,41)" fg:x="1083" fg:w="1"/><text x="87.9423%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6923%" y="453" width="0.0810%" height="15" fill="rgb(225,177,31)" fg:x="1083" fg:w="1"/><text x="87.9423%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.6923%" y="437" width="0.0810%" height="15" fill="rgb(221,229,11)" fg:x="1083" fg:w="1"/><text x="87.9423%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6923%" y="421" width="0.0810%" height="15" fill="rgb(247,172,52)" fg:x="1083" fg:w="1"/><text x="87.9423%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.6923%" y="405" width="0.0810%" height="15" fill="rgb(212,73,19)" fg:x="1083" fg:w="1"/><text x="87.9423%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6923%" y="389" width="0.0810%" height="15" fill="rgb(244,7,46)" fg:x="1083" fg:w="1"/><text x="87.9423%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="87.6113%" y="501" width="0.3239%" height="15" fill="rgb(230,113,20)" fg:x="1082" fg:w="4"/><text x="87.8613%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="87.7733%" y="485" width="0.1619%" height="15" fill="rgb(209,97,30)" fg:x="1084" fg:w="2"/><text x="88.0233%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="87.7733%" y="469" width="0.1619%" height="15" fill="rgb(243,89,12)" fg:x="1084" fg:w="2"/><text x="88.0233%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.7733%" y="453" width="0.1619%" height="15" fill="rgb(228,32,19)" fg:x="1084" fg:w="2"/><text x="88.0233%" y="463.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.8543%" y="437" width="0.0810%" height="15" fill="rgb(248,25,17)" fg:x="1085" fg:w="1"/><text x="88.1043%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.8543%" y="421" width="0.0810%" height="15" fill="rgb(232,161,29)" fg:x="1085" fg:w="1"/><text x="88.1043%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.49%)</title><rect x="87.5304%" y="549" width="0.4858%" height="15" fill="rgb(251,192,11)" fg:x="1081" fg:w="6"/><text x="87.7804%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.49%)</title><rect x="87.5304%" y="533" width="0.4858%" height="15" fill="rgb(240,47,32)" fg:x="1081" fg:w="6"/><text x="87.7804%" y="543.50"></text></g><g><title>plugins_core::build::Build::save (5 samples, 0.40%)</title><rect x="87.6113%" y="517" width="0.4049%" height="15" fill="rgb(250,16,45)" fg:x="1082" fg:w="5"/><text x="87.8613%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9352%" y="501" width="0.0810%" height="15" fill="rgb(227,217,42)" fg:x="1086" fg:w="1"/><text x="88.1852%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9352%" y="485" width="0.0810%" height="15" fill="rgb(206,82,54)" fg:x="1086" fg:w="1"/><text x="88.1852%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9352%" y="469" width="0.0810%" height="15" fill="rgb(243,145,25)" fg:x="1086" fg:w="1"/><text x="88.1852%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9352%" y="453" width="0.0810%" height="15" fill="rgb(207,166,24)" fg:x="1086" fg:w="1"/><text x="88.1852%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="88.0162%" y="533" width="0.0810%" height="15" fill="rgb(215,191,44)" fg:x="1087" fg:w="1"/><text x="88.2662%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="88.0162%" y="517" width="0.0810%" height="15" fill="rgb(234,218,51)" fg:x="1087" fg:w="1"/><text x="88.2662%" y="527.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="88.0972%" y="533" width="0.0810%" height="15" fill="rgb(245,133,21)" fg:x="1088" fg:w="1"/><text x="88.3472%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="88.0972%" y="517" width="0.0810%" height="15" fill="rgb(230,136,45)" fg:x="1088" fg:w="1"/><text x="88.3472%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1781%" y="485" width="0.0810%" height="15" fill="rgb(247,63,43)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1781%" y="469" width="0.0810%" height="15" fill="rgb(254,223,31)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1781%" y="453" width="0.0810%" height="15" fill="rgb(236,185,0)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.1781%" y="437" width="0.0810%" height="15" fill="rgb(231,139,46)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.1781%" y="421" width="0.0810%" height="15" fill="rgb(236,147,31)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.1781%" y="405" width="0.0810%" height="15" fill="rgb(225,222,22)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1781%" y="389" width="0.0810%" height="15" fill="rgb(225,193,14)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1781%" y="373" width="0.0810%" height="15" fill="rgb(253,193,46)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.1781%" y="357" width="0.0810%" height="15" fill="rgb(218,187,39)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.1781%" y="341" width="0.0810%" height="15" fill="rgb(227,162,48)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.1781%" y="325" width="0.0810%" height="15" fill="rgb(222,25,5)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.1781%" y="309" width="0.0810%" height="15" fill="rgb(211,205,16)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1781%" y="293" width="0.0810%" height="15" fill="rgb(244,191,2)" fg:x="1089" fg:w="1"/><text x="88.4281%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="88.1781%" y="501" width="0.1619%" height="15" fill="rgb(248,159,12)" fg:x="1089" fg:w="2"/><text x="88.4281%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2591%" y="485" width="0.0810%" height="15" fill="rgb(235,204,17)" fg:x="1090" fg:w="1"/><text x="88.5091%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2591%" y="469" width="0.0810%" height="15" fill="rgb(240,21,27)" fg:x="1090" fg:w="1"/><text x="88.5091%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.2591%" y="453" width="0.0810%" height="15" fill="rgb(224,170,31)" fg:x="1090" fg:w="1"/><text x="88.5091%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2591%" y="437" width="0.0810%" height="15" fill="rgb(223,145,32)" fg:x="1090" fg:w="1"/><text x="88.5091%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2591%" y="421" width="0.0810%" height="15" fill="rgb(243,100,5)" fg:x="1090" fg:w="1"/><text x="88.5091%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2591%" y="405" width="0.0810%" height="15" fill="rgb(242,131,51)" fg:x="1090" fg:w="1"/><text x="88.5091%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.2591%" y="389" width="0.0810%" height="15" fill="rgb(223,156,46)" fg:x="1090" fg:w="1"/><text x="88.5091%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.2591%" y="373" width="0.0810%" height="15" fill="rgb(215,10,40)" fg:x="1090" fg:w="1"/><text x="88.5091%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="88.3401%" y="453" width="0.1619%" height="15" fill="rgb(233,155,0)" fg:x="1091" fg:w="2"/><text x="88.5901%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.3401%" y="437" width="0.1619%" height="15" fill="rgb(247,78,6)" fg:x="1091" fg:w="2"/><text x="88.5901%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.3401%" y="421" width="0.1619%" height="15" fill="rgb(237,217,21)" fg:x="1091" fg:w="2"/><text x="88.5901%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.3401%" y="405" width="0.1619%" height="15" fill="rgb(212,1,21)" fg:x="1091" fg:w="2"/><text x="88.5901%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4211%" y="389" width="0.0810%" height="15" fill="rgb(213,7,14)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4211%" y="373" width="0.0810%" height="15" fill="rgb(225,84,14)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.4211%" y="357" width="0.0810%" height="15" fill="rgb(239,216,39)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.4211%" y="341" width="0.0810%" height="15" fill="rgb(253,29,23)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.4211%" y="325" width="0.0810%" height="15" fill="rgb(220,167,50)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4211%" y="309" width="0.0810%" height="15" fill="rgb(232,141,1)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.4211%" y="293" width="0.0810%" height="15" fill="rgb(222,210,1)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.4211%" y="277" width="0.0810%" height="15" fill="rgb(219,84,10)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.4211%" y="261" width="0.0810%" height="15" fill="rgb(245,188,6)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.4211%" y="245" width="0.0810%" height="15" fill="rgb(252,139,39)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.4211%" y="229" width="0.0810%" height="15" fill="rgb(218,42,26)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4211%" y="213" width="0.0810%" height="15" fill="rgb(237,226,51)" fg:x="1092" fg:w="1"/><text x="88.6711%" y="223.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="88.3401%" y="485" width="0.3239%" height="15" fill="rgb(246,15,17)" fg:x="1091" fg:w="4"/><text x="88.5901%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (4 samples, 0.32%)</title><rect x="88.3401%" y="469" width="0.3239%" height="15" fill="rgb(228,170,42)" fg:x="1091" fg:w="4"/><text x="88.5901%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="88.5020%" y="453" width="0.1619%" height="15" fill="rgb(248,118,53)" fg:x="1093" fg:w="2"/><text x="88.7520%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="88.5830%" y="437" width="0.0810%" height="15" fill="rgb(207,30,10)" fg:x="1094" fg:w="1"/><text x="88.8330%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.5830%" y="421" width="0.0810%" height="15" fill="rgb(217,104,38)" fg:x="1094" fg:w="1"/><text x="88.8330%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.5830%" y="405" width="0.0810%" height="15" fill="rgb(211,165,26)" fg:x="1094" fg:w="1"/><text x="88.8330%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="88.6640%" y="453" width="0.0810%" height="15" fill="rgb(247,38,9)" fg:x="1095" fg:w="1"/><text x="88.9140%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.7449%" y="453" width="0.0810%" height="15" fill="rgb(218,187,8)" fg:x="1096" fg:w="1"/><text x="88.9949%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="88.7449%" y="437" width="0.0810%" height="15" fill="rgb(247,94,28)" fg:x="1096" fg:w="1"/><text x="88.9949%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="88.1781%" y="517" width="0.7287%" height="15" fill="rgb(218,173,30)" fg:x="1089" fg:w="9"/><text x="88.4281%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="88.3401%" y="501" width="0.5668%" height="15" fill="rgb(245,45,36)" fg:x="1091" fg:w="7"/><text x="88.5901%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="88.6640%" y="485" width="0.2429%" height="15" fill="rgb(221,172,44)" fg:x="1095" fg:w="3"/><text x="88.9140%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="88.6640%" y="469" width="0.2429%" height="15" fill="rgb(222,45,12)" fg:x="1095" fg:w="3"/><text x="88.9140%" y="479.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="88.8259%" y="453" width="0.0810%" height="15" fill="rgb(250,10,22)" fg:x="1097" fg:w="1"/><text x="89.0759%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.8259%" y="437" width="0.0810%" height="15" fill="rgb(239,27,0)" fg:x="1097" fg:w="1"/><text x="89.0759%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8259%" y="421" width="0.0810%" height="15" fill="rgb(223,118,22)" fg:x="1097" fg:w="1"/><text x="89.0759%" y="431.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (162 samples, 13.12%)</title><rect x="75.9514%" y="565" width="13.1174%" height="15" fill="rgb(251,81,25)" fg:x="938" fg:w="162"/><text x="76.2014%" y="575.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (13 samples, 1.05%)</title><rect x="88.0162%" y="549" width="1.0526%" height="15" fill="rgb(237,225,53)" fg:x="1087" fg:w="13"/><text x="88.2662%" y="559.50"></text></g><g><title>plugins_core::build::Build::save (11 samples, 0.89%)</title><rect x="88.1781%" y="533" width="0.8907%" height="15" fill="rgb(237,186,51)" fg:x="1089" fg:w="11"/><text x="88.4281%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="88.9069%" y="517" width="0.1619%" height="15" fill="rgb(247,209,11)" fg:x="1098" fg:w="2"/><text x="89.1569%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.9069%" y="501" width="0.1619%" height="15" fill="rgb(223,109,27)" fg:x="1098" fg:w="2"/><text x="89.1569%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.9069%" y="485" width="0.1619%" height="15" fill="rgb(246,181,13)" fg:x="1098" fg:w="2"/><text x="89.1569%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.9879%" y="469" width="0.0810%" height="15" fill="rgb(234,57,44)" fg:x="1099" fg:w="1"/><text x="89.2379%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9879%" y="453" width="0.0810%" height="15" fill="rgb(211,227,50)" fg:x="1099" fg:w="1"/><text x="89.2379%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9879%" y="437" width="0.0810%" height="15" fill="rgb(254,57,34)" fg:x="1099" fg:w="1"/><text x="89.2379%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9879%" y="421" width="0.0810%" height="15" fill="rgb(227,212,26)" fg:x="1099" fg:w="1"/><text x="89.2379%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0688%" y="533" width="0.0810%" height="15" fill="rgb(244,169,44)" fg:x="1100" fg:w="1"/><text x="89.3188%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="89.0688%" y="549" width="0.1619%" height="15" fill="rgb(236,135,50)" fg:x="1100" fg:w="2"/><text x="89.3188%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1498%" y="533" width="0.0810%" height="15" fill="rgb(241,89,30)" fg:x="1101" fg:w="1"/><text x="89.3998%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1498%" y="517" width="0.0810%" height="15" fill="rgb(206,113,34)" fg:x="1101" fg:w="1"/><text x="89.3998%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.2308%" y="517" width="0.0810%" height="15" fill="rgb(218,104,52)" fg:x="1102" fg:w="1"/><text x="89.4808%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="89.2308%" y="501" width="0.0810%" height="15" fill="rgb(223,82,32)" fg:x="1102" fg:w="1"/><text x="89.4808%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="89.2308%" y="485" width="0.0810%" height="15" fill="rgb(249,219,30)" fg:x="1102" fg:w="1"/><text x="89.4808%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3117%" y="421" width="0.0810%" height="15" fill="rgb(233,141,21)" fg:x="1103" fg:w="1"/><text x="89.5617%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="89.3117%" y="469" width="0.1619%" height="15" fill="rgb(252,87,44)" fg:x="1103" fg:w="2"/><text x="89.5617%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="89.3117%" y="453" width="0.1619%" height="15" fill="rgb(229,48,33)" fg:x="1103" fg:w="2"/><text x="89.5617%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="89.3117%" y="437" width="0.1619%" height="15" fill="rgb(229,23,22)" fg:x="1103" fg:w="2"/><text x="89.5617%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.3927%" y="421" width="0.0810%" height="15" fill="rgb(244,116,16)" fg:x="1104" fg:w="1"/><text x="89.6427%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.3927%" y="405" width="0.0810%" height="15" fill="rgb(247,45,10)" fg:x="1104" fg:w="1"/><text x="89.6427%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.3927%" y="389" width="0.0810%" height="15" fill="rgb(228,60,29)" fg:x="1104" fg:w="1"/><text x="89.6427%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3927%" y="373" width="0.0810%" height="15" fill="rgb(205,129,15)" fg:x="1104" fg:w="1"/><text x="89.6427%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="89.4737%" y="453" width="0.0810%" height="15" fill="rgb(206,229,4)" fg:x="1105" fg:w="1"/><text x="89.7237%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.4737%" y="437" width="0.0810%" height="15" fill="rgb(249,191,30)" fg:x="1105" fg:w="1"/><text x="89.7237%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.4737%" y="421" width="0.0810%" height="15" fill="rgb(250,84,54)" fg:x="1105" fg:w="1"/><text x="89.7237%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.4737%" y="405" width="0.0810%" height="15" fill="rgb(207,25,53)" fg:x="1105" fg:w="1"/><text x="89.7237%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.5547%" y="437" width="0.0810%" height="15" fill="rgb(235,40,8)" fg:x="1106" fg:w="1"/><text x="89.8047%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.8785%" y="389" width="0.0810%" height="15" fill="rgb(226,169,33)" fg:x="1110" fg:w="1"/><text x="90.1285%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.8785%" y="373" width="0.0810%" height="15" fill="rgb(238,110,8)" fg:x="1110" fg:w="1"/><text x="90.1285%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.8785%" y="357" width="0.0810%" height="15" fill="rgb(251,206,12)" fg:x="1110" fg:w="1"/><text x="90.1285%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="89.8785%" y="421" width="0.1619%" height="15" fill="rgb(248,171,18)" fg:x="1110" fg:w="2"/><text x="90.1285%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="89.8785%" y="405" width="0.1619%" height="15" fill="rgb(213,65,46)" fg:x="1110" fg:w="2"/><text x="90.1285%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="89.9595%" y="389" width="0.0810%" height="15" fill="rgb(211,154,15)" fg:x="1111" fg:w="1"/><text x="90.2095%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.9595%" y="373" width="0.0810%" height="15" fill="rgb(217,75,43)" fg:x="1111" fg:w="1"/><text x="90.2095%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.9595%" y="357" width="0.0810%" height="15" fill="rgb(230,32,33)" fg:x="1111" fg:w="1"/><text x="90.2095%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.0405%" y="421" width="0.0810%" height="15" fill="rgb(221,100,16)" fg:x="1112" fg:w="1"/><text x="90.2905%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.0405%" y="405" width="0.0810%" height="15" fill="rgb(212,129,47)" fg:x="1112" fg:w="1"/><text x="90.2905%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.1215%" y="405" width="0.0810%" height="15" fill="rgb(239,217,47)" fg:x="1113" fg:w="1"/><text x="90.3715%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.1215%" y="389" width="0.0810%" height="15" fill="rgb(230,84,24)" fg:x="1113" fg:w="1"/><text x="90.3715%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.1215%" y="373" width="0.0810%" height="15" fill="rgb(214,153,51)" fg:x="1113" fg:w="1"/><text x="90.3715%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="90.2024%" y="405" width="0.1619%" height="15" fill="rgb(231,6,35)" fg:x="1114" fg:w="2"/><text x="90.4524%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.2024%" y="389" width="0.1619%" height="15" fill="rgb(229,122,30)" fg:x="1114" fg:w="2"/><text x="90.4524%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.2024%" y="373" width="0.1619%" height="15" fill="rgb(234,71,10)" fg:x="1114" fg:w="2"/><text x="90.4524%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="90.2024%" y="357" width="0.1619%" height="15" fill="rgb(215,173,26)" fg:x="1114" fg:w="2"/><text x="90.4524%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="90.2024%" y="341" width="0.1619%" height="15" fill="rgb(248,118,52)" fg:x="1114" fg:w="2"/><text x="90.4524%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="90.2024%" y="325" width="0.1619%" height="15" fill="rgb(237,55,46)" fg:x="1114" fg:w="2"/><text x="90.4524%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="90.2024%" y="309" width="0.1619%" height="15" fill="rgb(243,214,43)" fg:x="1114" fg:w="2"/><text x="90.4524%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="90.2024%" y="293" width="0.1619%" height="15" fill="rgb(252,123,30)" fg:x="1114" fg:w="2"/><text x="90.4524%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="89.6356%" y="437" width="0.8097%" height="15" fill="rgb(215,73,39)" fg:x="1107" fg:w="10"/><text x="89.8856%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="90.1215%" y="421" width="0.3239%" height="15" fill="rgb(251,194,29)" fg:x="1113" fg:w="4"/><text x="90.3715%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.3644%" y="405" width="0.0810%" height="15" fill="rgb(224,58,52)" fg:x="1116" fg:w="1"/><text x="90.6144%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.05%)</title><rect x="89.4737%" y="469" width="1.0526%" height="15" fill="rgb(248,106,46)" fg:x="1105" fg:w="13"/><text x="89.7237%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="89.5547%" y="453" width="0.9717%" height="15" fill="rgb(223,80,29)" fg:x="1106" fg:w="12"/><text x="89.8047%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.4453%" y="437" width="0.0810%" height="15" fill="rgb(243,137,9)" fg:x="1117" fg:w="1"/><text x="90.6953%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.5263%" y="405" width="0.0810%" height="15" fill="rgb(235,121,28)" fg:x="1118" fg:w="1"/><text x="90.7763%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="90.6073%" y="389" width="0.1619%" height="15" fill="rgb(219,121,41)" fg:x="1119" fg:w="2"/><text x="90.8573%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6883%" y="373" width="0.0810%" height="15" fill="rgb(251,60,6)" fg:x="1120" fg:w="1"/><text x="90.9383%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.7692%" y="357" width="0.0810%" height="15" fill="rgb(208,12,30)" fg:x="1121" fg:w="1"/><text x="91.0192%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.8502%" y="357" width="0.0810%" height="15" fill="rgb(207,176,36)" fg:x="1122" fg:w="1"/><text x="91.1002%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="90.9312%" y="357" width="0.0810%" height="15" fill="rgb(211,188,29)" fg:x="1123" fg:w="1"/><text x="91.1812%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.9312%" y="341" width="0.0810%" height="15" fill="rgb(220,184,37)" fg:x="1123" fg:w="1"/><text x="91.1812%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.9312%" y="325" width="0.0810%" height="15" fill="rgb(239,87,37)" fg:x="1123" fg:w="1"/><text x="91.1812%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="90.5263%" y="437" width="0.5668%" height="15" fill="rgb(232,113,44)" fg:x="1118" fg:w="7"/><text x="90.7763%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="90.5263%" y="421" width="0.5668%" height="15" fill="rgb(246,25,39)" fg:x="1118" fg:w="7"/><text x="90.7763%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="90.6073%" y="405" width="0.4858%" height="15" fill="rgb(247,30,13)" fg:x="1119" fg:w="6"/><text x="90.8573%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="90.7692%" y="389" width="0.3239%" height="15" fill="rgb(230,176,35)" fg:x="1121" fg:w="4"/><text x="91.0192%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="90.7692%" y="373" width="0.3239%" height="15" fill="rgb(222,23,18)" fg:x="1121" fg:w="4"/><text x="91.0192%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.0121%" y="357" width="0.0810%" height="15" fill="rgb(234,86,8)" fg:x="1124" fg:w="1"/><text x="91.2621%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.0121%" y="341" width="0.0810%" height="15" fill="rgb(206,218,47)" fg:x="1124" fg:w="1"/><text x="91.2621%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0121%" y="325" width="0.0810%" height="15" fill="rgb(229,35,31)" fg:x="1124" fg:w="1"/><text x="91.2621%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="91.2551%" y="373" width="0.0810%" height="15" fill="rgb(242,81,7)" fg:x="1127" fg:w="1"/><text x="91.5051%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.2551%" y="357" width="0.0810%" height="15" fill="rgb(231,11,35)" fg:x="1127" fg:w="1"/><text x="91.5051%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.2551%" y="341" width="0.0810%" height="15" fill="rgb(219,218,17)" fg:x="1127" fg:w="1"/><text x="91.5051%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="91.0931%" y="389" width="0.4049%" height="15" fill="rgb(221,83,32)" fg:x="1125" fg:w="5"/><text x="91.3431%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="91.3360%" y="373" width="0.1619%" height="15" fill="rgb(233,49,54)" fg:x="1128" fg:w="2"/><text x="91.5860%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.4170%" y="357" width="0.0810%" height="15" fill="rgb(206,18,51)" fg:x="1129" fg:w="1"/><text x="91.6670%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.49%)</title><rect x="91.0931%" y="421" width="0.4858%" height="15" fill="rgb(249,193,15)" fg:x="1125" fg:w="6"/><text x="91.3431%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.49%)</title><rect x="91.0931%" y="405" width="0.4858%" height="15" fill="rgb(245,186,19)" fg:x="1125" fg:w="6"/><text x="91.3431%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.4980%" y="389" width="0.0810%" height="15" fill="rgb(230,4,24)" fg:x="1130" fg:w="1"/><text x="91.7480%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (14 samples, 1.13%)</title><rect x="90.5263%" y="453" width="1.1336%" height="15" fill="rgb(234,75,27)" fg:x="1118" fg:w="14"/><text x="90.7763%" y="463.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.57%)</title><rect x="91.0931%" y="437" width="0.5668%" height="15" fill="rgb(244,187,35)" fg:x="1125" fg:w="7"/><text x="91.3431%" y="447.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="91.5789%" y="421" width="0.0810%" height="15" fill="rgb(241,97,43)" fg:x="1131" fg:w="1"/><text x="91.8289%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5789%" y="405" width="0.0810%" height="15" fill="rgb(236,94,2)" fg:x="1131" fg:w="1"/><text x="91.8289%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.6599%" y="421" width="0.2429%" height="15" fill="rgb(231,175,7)" fg:x="1132" fg:w="3"/><text x="91.9099%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="91.9028%" y="405" width="0.0810%" height="15" fill="rgb(236,89,47)" fg:x="1135" fg:w="1"/><text x="92.1528%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="91.9028%" y="421" width="0.3239%" height="15" fill="rgb(213,191,37)" fg:x="1135" fg:w="4"/><text x="92.1528%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="91.9838%" y="405" width="0.2429%" height="15" fill="rgb(252,0,34)" fg:x="1136" fg:w="3"/><text x="92.2338%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.0648%" y="389" width="0.1619%" height="15" fill="rgb(208,145,44)" fg:x="1137" fg:w="2"/><text x="92.3148%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="92.3077%" y="373" width="0.0810%" height="15" fill="rgb(227,95,50)" fg:x="1140" fg:w="1"/><text x="92.5577%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.3077%" y="357" width="0.0810%" height="15" fill="rgb(222,136,24)" fg:x="1140" fg:w="1"/><text x="92.5577%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="92.3077%" y="341" width="0.0810%" height="15" fill="rgb(218,105,10)" fg:x="1140" fg:w="1"/><text x="92.5577%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3077%" y="325" width="0.0810%" height="15" fill="rgb(216,65,28)" fg:x="1140" fg:w="1"/><text x="92.5577%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.3077%" y="309" width="0.0810%" height="15" fill="rgb(229,6,28)" fg:x="1140" fg:w="1"/><text x="92.5577%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="92.4696%" y="357" width="0.0810%" height="15" fill="rgb(222,160,42)" fg:x="1142" fg:w="1"/><text x="92.7196%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.5506%" y="341" width="0.0810%" height="15" fill="rgb(235,83,49)" fg:x="1143" fg:w="1"/><text x="92.8006%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="92.5506%" y="325" width="0.0810%" height="15" fill="rgb(236,86,36)" fg:x="1143" fg:w="1"/><text x="92.8006%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="92.5506%" y="309" width="0.0810%" height="15" fill="rgb(236,19,41)" fg:x="1143" fg:w="1"/><text x="92.8006%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="92.6316%" y="325" width="0.0810%" height="15" fill="rgb(217,71,31)" fg:x="1144" fg:w="1"/><text x="92.8816%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="92.7126%" y="325" width="0.0810%" height="15" fill="rgb(236,209,25)" fg:x="1145" fg:w="1"/><text x="92.9626%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7126%" y="309" width="0.0810%" height="15" fill="rgb(247,104,21)" fg:x="1145" fg:w="1"/><text x="92.9626%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7126%" y="293" width="0.0810%" height="15" fill="rgb(243,80,38)" fg:x="1145" fg:w="1"/><text x="92.9626%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="92.5506%" y="357" width="0.4049%" height="15" fill="rgb(232,109,38)" fg:x="1143" fg:w="5"/><text x="92.8006%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="92.6316%" y="341" width="0.3239%" height="15" fill="rgb(212,177,53)" fg:x="1144" fg:w="4"/><text x="92.8816%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.7935%" y="325" width="0.1619%" height="15" fill="rgb(227,30,34)" fg:x="1146" fg:w="2"/><text x="93.0435%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.81%)</title><rect x="92.2267%" y="405" width="0.8097%" height="15" fill="rgb(205,175,25)" fg:x="1139" fg:w="10"/><text x="92.4767%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="92.2267%" y="389" width="0.8097%" height="15" fill="rgb(249,39,54)" fg:x="1139" fg:w="10"/><text x="92.4767%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="92.3887%" y="373" width="0.6478%" height="15" fill="rgb(215,54,37)" fg:x="1141" fg:w="8"/><text x="92.6387%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9555%" y="357" width="0.0810%" height="15" fill="rgb(205,60,46)" fg:x="1148" fg:w="1"/><text x="93.2055%" y="367.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.54%)</title><rect x="91.6599%" y="453" width="1.5385%" height="15" fill="rgb(238,89,29)" fg:x="1132" fg:w="19"/><text x="91.9099%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.54%)</title><rect x="91.6599%" y="437" width="1.5385%" height="15" fill="rgb(212,48,10)" fg:x="1132" fg:w="19"/><text x="91.9099%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.97%)</title><rect x="92.2267%" y="421" width="0.9717%" height="15" fill="rgb(237,186,28)" fg:x="1139" fg:w="12"/><text x="92.4767%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.0364%" y="405" width="0.1619%" height="15" fill="rgb(237,204,4)" fg:x="1149" fg:w="2"/><text x="93.2864%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="93.1174%" y="389" width="0.0810%" height="15" fill="rgb(237,15,47)" fg:x="1150" fg:w="1"/><text x="93.3674%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="93.1174%" y="373" width="0.0810%" height="15" fill="rgb(244,110,25)" fg:x="1150" fg:w="1"/><text x="93.3674%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.6032%" y="261" width="0.0810%" height="15" fill="rgb(241,12,16)" fg:x="1156" fg:w="1"/><text x="93.8532%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.6032%" y="245" width="0.0810%" height="15" fill="rgb(235,25,9)" fg:x="1156" fg:w="1"/><text x="93.8532%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.6032%" y="229" width="0.0810%" height="15" fill="rgb(245,159,19)" fg:x="1156" fg:w="1"/><text x="93.8532%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="93.5223%" y="309" width="0.2429%" height="15" fill="rgb(236,63,32)" fg:x="1155" fg:w="3"/><text x="93.7723%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.5223%" y="293" width="0.2429%" height="15" fill="rgb(235,32,52)" fg:x="1155" fg:w="3"/><text x="93.7723%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="93.5223%" y="277" width="0.2429%" height="15" fill="rgb(209,176,21)" fg:x="1155" fg:w="3"/><text x="93.7723%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="93.6842%" y="261" width="0.0810%" height="15" fill="rgb(205,90,42)" fg:x="1157" fg:w="1"/><text x="93.9342%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="93.6842%" y="245" width="0.0810%" height="15" fill="rgb(213,132,16)" fg:x="1157" fg:w="1"/><text x="93.9342%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.7652%" y="293" width="0.0810%" height="15" fill="rgb(232,11,22)" fg:x="1158" fg:w="1"/><text x="94.0152%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7652%" y="277" width="0.0810%" height="15" fill="rgb(248,167,41)" fg:x="1158" fg:w="1"/><text x="94.0152%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.7652%" y="261" width="0.0810%" height="15" fill="rgb(209,127,6)" fg:x="1158" fg:w="1"/><text x="94.0152%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="93.3603%" y="357" width="0.5668%" height="15" fill="rgb(246,210,34)" fg:x="1153" fg:w="7"/><text x="93.6103%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="93.3603%" y="341" width="0.5668%" height="15" fill="rgb(238,165,13)" fg:x="1153" fg:w="7"/><text x="93.6103%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="93.4413%" y="325" width="0.4858%" height="15" fill="rgb(233,98,15)" fg:x="1154" fg:w="6"/><text x="93.6913%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.7652%" y="309" width="0.1619%" height="15" fill="rgb(215,215,51)" fg:x="1158" fg:w="2"/><text x="94.0152%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.8462%" y="293" width="0.0810%" height="15" fill="rgb(217,161,25)" fg:x="1159" fg:w="1"/><text x="94.0962%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.89%)</title><rect x="93.1984%" y="389" width="0.8907%" height="15" fill="rgb(217,167,48)" fg:x="1151" fg:w="11"/><text x="93.4484%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="93.2794%" y="373" width="0.8097%" height="15" fill="rgb(205,163,34)" fg:x="1152" fg:w="10"/><text x="93.5294%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.9271%" y="357" width="0.1619%" height="15" fill="rgb(241,197,31)" fg:x="1160" fg:w="2"/><text x="94.1771%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.9271%" y="341" width="0.1619%" height="15" fill="rgb(225,123,11)" fg:x="1160" fg:w="2"/><text x="94.1771%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0081%" y="325" width="0.0810%" height="15" fill="rgb(217,4,20)" fg:x="1161" fg:w="1"/><text x="94.2581%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.0891%" y="373" width="0.0810%" height="15" fill="rgb(215,55,9)" fg:x="1162" fg:w="1"/><text x="94.3391%" y="383.50"></text></g><g><title>engine::session::Session::close (64 samples, 5.18%)</title><rect x="89.0688%" y="565" width="5.1822%" height="15" fill="rgb(218,165,5)" fg:x="1100" fg:w="64"/><text x="89.3188%" y="575.50">engine..</text></g><g><title>engine::session::state::State::close (62 samples, 5.02%)</title><rect x="89.2308%" y="549" width="5.0202%" height="15" fill="rgb(222,175,15)" fg:x="1102" fg:w="62"/><text x="89.4808%" y="559.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (62 samples, 5.02%)</title><rect x="89.2308%" y="533" width="5.0202%" height="15" fill="rgb(223,85,34)" fg:x="1102" fg:w="62"/><text x="89.4808%" y="543.50">engine..</text></g><g><title>core::iter::adapters::try_process (61 samples, 4.94%)</title><rect x="89.3117%" y="517" width="4.9393%" height="15" fill="rgb(234,228,29)" fg:x="1103" fg:w="61"/><text x="89.5617%" y="527.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (61 samples, 4.94%)</title><rect x="89.3117%" y="501" width="4.9393%" height="15" fill="rgb(239,7,28)" fg:x="1103" fg:w="61"/><text x="89.5617%" y="511.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (61 samples, 4.94%)</title><rect x="89.3117%" y="485" width="4.9393%" height="15" fill="rgb(252,222,53)" fg:x="1103" fg:w="61"/><text x="89.5617%" y="495.50">engine..</text></g><g><title>kernel::model::any_entity_changes (46 samples, 3.72%)</title><rect x="90.5263%" y="469" width="3.7247%" height="15" fill="rgb(232,146,44)" fg:x="1118" fg:w="46"/><text x="90.7763%" y="479.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (13 samples, 1.05%)</title><rect x="93.1984%" y="453" width="1.0526%" height="15" fill="rgb(243,223,53)" fg:x="1151" fg:w="13"/><text x="93.4484%" y="463.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.05%)</title><rect x="93.1984%" y="437" width="1.0526%" height="15" fill="rgb(219,128,25)" fg:x="1151" fg:w="13"/><text x="93.4484%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.05%)</title><rect x="93.1984%" y="421" width="1.0526%" height="15" fill="rgb(223,56,32)" fg:x="1151" fg:w="13"/><text x="93.4484%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="93.1984%" y="405" width="1.0526%" height="15" fill="rgb(237,41,3)" fg:x="1151" fg:w="13"/><text x="93.4484%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="94.0891%" y="389" width="0.1619%" height="15" fill="rgb(235,138,9)" fg:x="1162" fg:w="2"/><text x="94.3391%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1700%" y="373" width="0.0810%" height="15" fill="rgb(214,131,10)" fg:x="1163" fg:w="1"/><text x="94.4200%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="94.2510%" y="501" width="0.0810%" height="15" fill="rgb(229,89,7)" fg:x="1164" fg:w="1"/><text x="94.5010%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.3320%" y="469" width="0.0810%" height="15" fill="rgb(240,24,42)" fg:x="1165" fg:w="1"/><text x="94.5820%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3320%" y="453" width="0.0810%" height="15" fill="rgb(243,188,54)" fg:x="1165" fg:w="1"/><text x="94.5820%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.24%)</title><rect x="94.2510%" y="517" width="0.2429%" height="15" fill="rgb(246,92,22)" fg:x="1164" fg:w="3"/><text x="94.5010%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.3320%" y="501" width="0.1619%" height="15" fill="rgb(211,176,51)" fg:x="1165" fg:w="2"/><text x="94.5820%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.3320%" y="485" width="0.1619%" height="15" fill="rgb(246,207,34)" fg:x="1165" fg:w="2"/><text x="94.5820%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.4130%" y="469" width="0.0810%" height="15" fill="rgb(239,95,2)" fg:x="1166" fg:w="1"/><text x="94.6630%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as engine::users::model::HasUsernames&gt;::find_name_key (4 samples, 0.32%)</title><rect x="94.2510%" y="533" width="0.3239%" height="15" fill="rgb(211,124,25)" fg:x="1164" fg:w="4"/><text x="94.5010%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.4939%" y="517" width="0.0810%" height="15" fill="rgb(231,221,19)" fg:x="1167" fg:w="1"/><text x="94.7439%" y="527.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="94.5749%" y="501" width="0.0810%" height="15" fill="rgb(239,183,19)" fg:x="1168" fg:w="1"/><text x="94.8249%" y="511.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="94.5749%" y="485" width="0.0810%" height="15" fill="rgb(221,130,29)" fg:x="1168" fg:w="1"/><text x="94.8249%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="94.5749%" y="469" width="0.0810%" height="15" fill="rgb(206,130,36)" fg:x="1168" fg:w="1"/><text x="94.8249%" y="479.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="94.5749%" y="533" width="0.1619%" height="15" fill="rgb(215,70,19)" fg:x="1168" fg:w="2"/><text x="94.8249%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="94.5749%" y="517" width="0.1619%" height="15" fill="rgb(244,16,43)" fg:x="1168" fg:w="2"/><text x="94.8249%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="94.6559%" y="501" width="0.0810%" height="15" fill="rgb(222,115,32)" fg:x="1169" fg:w="1"/><text x="94.9059%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="94.7368%" y="517" width="0.1619%" height="15" fill="rgb(247,48,25)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="94.7368%" y="501" width="0.1619%" height="15" fill="rgb(226,180,51)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="94.7368%" y="485" width="0.1619%" height="15" fill="rgb(217,142,42)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="94.7368%" y="469" width="0.1619%" height="15" fill="rgb(220,178,3)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="479.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="94.7368%" y="453" width="0.1619%" height="15" fill="rgb(217,221,4)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.16%)</title><rect x="94.7368%" y="437" width="0.1619%" height="15" fill="rgb(237,63,43)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="447.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.16%)</title><rect x="94.7368%" y="421" width="0.1619%" height="15" fill="rgb(220,57,8)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="94.7368%" y="405" width="0.1619%" height="15" fill="rgb(254,186,27)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.16%)</title><rect x="94.7368%" y="389" width="0.1619%" height="15" fill="rgb(251,57,28)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="94.7368%" y="373" width="0.1619%" height="15" fill="rgb(215,228,0)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="383.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (2 samples, 0.16%)</title><rect x="94.7368%" y="357" width="0.1619%" height="15" fill="rgb(237,218,39)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (2 samples, 0.16%)</title><rect x="94.7368%" y="341" width="0.1619%" height="15" fill="rgb(207,2,54)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="94.7368%" y="325" width="0.1619%" height="15" fill="rgb(232,76,50)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="335.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (2 samples, 0.16%)</title><rect x="94.7368%" y="309" width="0.1619%" height="15" fill="rgb(211,85,31)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="94.7368%" y="293" width="0.1619%" height="15" fill="rgb(223,210,27)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="303.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (2 samples, 0.16%)</title><rect x="94.7368%" y="277" width="0.1619%" height="15" fill="rgb(254,36,8)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.16%)</title><rect x="94.7368%" y="261" width="0.1619%" height="15" fill="rgb(213,4,25)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="94.7368%" y="245" width="0.1619%" height="15" fill="rgb(224,2,39)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="255.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.16%)</title><rect x="94.7368%" y="229" width="0.1619%" height="15" fill="rgb(208,8,39)" fg:x="1170" fg:w="2"/><text x="94.9868%" y="239.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="94.8178%" y="213" width="0.0810%" height="15" fill="rgb(216,226,3)" fg:x="1171" fg:w="1"/><text x="95.0678%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.8178%" y="197" width="0.0810%" height="15" fill="rgb(249,139,31)" fg:x="1171" fg:w="1"/><text x="95.0678%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.8178%" y="181" width="0.0810%" height="15" fill="rgb(242,170,35)" fg:x="1171" fg:w="1"/><text x="95.0678%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="94.8178%" y="165" width="0.0810%" height="15" fill="rgb(238,14,9)" fg:x="1171" fg:w="1"/><text x="95.0678%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="94.8178%" y="149" width="0.0810%" height="15" fill="rgb(251,81,46)" fg:x="1171" fg:w="1"/><text x="95.0678%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="94.8178%" y="133" width="0.0810%" height="15" fill="rgb(230,23,4)" fg:x="1171" fg:w="1"/><text x="95.0678%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="94.8178%" y="117" width="0.0810%" height="15" fill="rgb(211,85,25)" fg:x="1171" fg:w="1"/><text x="95.0678%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.8178%" y="101" width="0.0810%" height="15" fill="rgb(252,23,31)" fg:x="1171" fg:w="1"/><text x="95.0678%" y="111.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (1 samples, 0.08%)</title><rect x="94.8988%" y="501" width="0.0810%" height="15" fill="rgb(234,163,38)" fg:x="1172" fg:w="1"/><text x="95.1488%" y="511.50"></text></g><g><title>tracing_core::callsite::register_dispatch (1 samples, 0.08%)</title><rect x="94.8988%" y="485" width="0.0810%" height="15" fill="rgb(210,190,50)" fg:x="1172" fg:w="1"/><text x="95.1488%" y="495.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (1 samples, 0.08%)</title><rect x="94.8988%" y="469" width="0.0810%" height="15" fill="rgb(228,158,3)" fg:x="1172" fg:w="1"/><text x="95.1488%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9798%" y="373" width="0.0810%" height="15" fill="rgb(216,130,0)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9798%" y="357" width="0.0810%" height="15" fill="rgb(224,184,10)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9798%" y="341" width="0.0810%" height="15" fill="rgb(214,202,18)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9798%" y="325" width="0.0810%" height="15" fill="rgb(213,229,54)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.9798%" y="309" width="0.0810%" height="15" fill="rgb(246,120,0)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.9798%" y="293" width="0.0810%" height="15" fill="rgb(237,6,15)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.9798%" y="277" width="0.0810%" height="15" fill="rgb(252,156,15)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.9798%" y="261" width="0.0810%" height="15" fill="rgb(249,78,18)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.9798%" y="245" width="0.0810%" height="15" fill="rgb(230,223,44)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.9798%" y="229" width="0.0810%" height="15" fill="rgb(230,222,32)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.9798%" y="213" width="0.0810%" height="15" fill="rgb(247,54,6)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.9798%" y="197" width="0.0810%" height="15" fill="rgb(247,115,45)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.9798%" y="181" width="0.0810%" height="15" fill="rgb(213,203,37)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9798%" y="165" width="0.0810%" height="15" fill="rgb(248,188,18)" fg:x="1173" fg:w="1"/><text x="95.2298%" y="175.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="94.9798%" y="389" width="0.1619%" height="15" fill="rgb(206,80,8)" fg:x="1173" fg:w="2"/><text x="95.2298%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0607%" y="373" width="0.0810%" height="15" fill="rgb(245,217,31)" fg:x="1174" fg:w="1"/><text x="95.3107%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0607%" y="357" width="0.0810%" height="15" fill="rgb(220,193,15)" fg:x="1174" fg:w="1"/><text x="95.3107%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0607%" y="341" width="0.0810%" height="15" fill="rgb(226,7,19)" fg:x="1174" fg:w="1"/><text x="95.3107%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0607%" y="325" width="0.0810%" height="15" fill="rgb(222,145,31)" fg:x="1174" fg:w="1"/><text x="95.3107%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0607%" y="309" width="0.0810%" height="15" fill="rgb(241,193,36)" fg:x="1174" fg:w="1"/><text x="95.3107%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1417%" y="293" width="0.0810%" height="15" fill="rgb(225,123,33)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1417%" y="277" width="0.0810%" height="15" fill="rgb(246,136,38)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1417%" y="261" width="0.0810%" height="15" fill="rgb(243,56,24)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1417%" y="245" width="0.0810%" height="15" fill="rgb(215,147,2)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1417%" y="229" width="0.0810%" height="15" fill="rgb(209,155,27)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1417%" y="213" width="0.0810%" height="15" fill="rgb(222,177,11)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1417%" y="197" width="0.0810%" height="15" fill="rgb(212,227,15)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1417%" y="181" width="0.0810%" height="15" fill="rgb(214,138,20)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1417%" y="165" width="0.0810%" height="15" fill="rgb(221,170,31)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1417%" y="149" width="0.0810%" height="15" fill="rgb(253,207,5)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1417%" y="133" width="0.0810%" height="15" fill="rgb(212,64,37)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1417%" y="117" width="0.0810%" height="15" fill="rgb(208,113,51)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1417%" y="101" width="0.0810%" height="15" fill="rgb(237,15,5)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1417%" y="85" width="0.0810%" height="15" fill="rgb(238,33,18)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1417%" y="69" width="0.0810%" height="15" fill="rgb(253,206,50)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1417%" y="53" width="0.0810%" height="15" fill="rgb(242,158,43)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1417%" y="37" width="0.0810%" height="15" fill="rgb(213,125,27)" fg:x="1175" fg:w="1"/><text x="95.3917%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1417%" y="325" width="0.1619%" height="15" fill="rgb(233,161,31)" fg:x="1175" fg:w="2"/><text x="95.3917%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.1417%" y="309" width="0.1619%" height="15" fill="rgb(218,135,6)" fg:x="1175" fg:w="2"/><text x="95.3917%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2227%" y="293" width="0.0810%" height="15" fill="rgb(222,73,53)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2227%" y="277" width="0.0810%" height="15" fill="rgb(229,66,53)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.2227%" y="261" width="0.0810%" height="15" fill="rgb(208,128,19)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.2227%" y="245" width="0.0810%" height="15" fill="rgb(235,70,27)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.2227%" y="229" width="0.0810%" height="15" fill="rgb(241,130,30)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2227%" y="213" width="0.0810%" height="15" fill="rgb(222,57,48)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2227%" y="197" width="0.0810%" height="15" fill="rgb(225,204,29)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.2227%" y="181" width="0.0810%" height="15" fill="rgb(240,196,35)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="95.2227%" y="165" width="0.0810%" height="15" fill="rgb(215,150,16)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="95.2227%" y="149" width="0.0810%" height="15" fill="rgb(209,170,13)" fg:x="1176" fg:w="1"/><text x="95.4727%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3036%" y="309" width="0.0810%" height="15" fill="rgb(235,75,31)" fg:x="1177" fg:w="1"/><text x="95.5536%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3036%" y="293" width="0.0810%" height="15" fill="rgb(252,1,47)" fg:x="1177" fg:w="1"/><text x="95.5536%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.3036%" y="277" width="0.0810%" height="15" fill="rgb(241,2,36)" fg:x="1177" fg:w="1"/><text x="95.5536%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="95.3036%" y="325" width="0.1619%" height="15" fill="rgb(236,191,4)" fg:x="1177" fg:w="2"/><text x="95.5536%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3846%" y="309" width="0.0810%" height="15" fill="rgb(212,65,35)" fg:x="1178" fg:w="1"/><text x="95.6346%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3846%" y="293" width="0.0810%" height="15" fill="rgb(209,49,33)" fg:x="1178" fg:w="1"/><text x="95.6346%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.3846%" y="277" width="0.0810%" height="15" fill="rgb(208,36,46)" fg:x="1178" fg:w="1"/><text x="95.6346%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3846%" y="261" width="0.0810%" height="15" fill="rgb(210,125,2)" fg:x="1178" fg:w="1"/><text x="95.6346%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.4656%" y="229" width="0.0810%" height="15" fill="rgb(225,62,6)" fg:x="1179" fg:w="1"/><text x="95.7156%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.4656%" y="213" width="0.0810%" height="15" fill="rgb(210,54,27)" fg:x="1179" fg:w="1"/><text x="95.7156%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="95.4656%" y="197" width="0.0810%" height="15" fill="rgb(249,189,52)" fg:x="1179" fg:w="1"/><text x="95.7156%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.5466%" y="181" width="0.0810%" height="15" fill="rgb(225,134,40)" fg:x="1180" fg:w="1"/><text x="95.7966%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="95.5466%" y="229" width="0.1619%" height="15" fill="rgb(206,13,37)" fg:x="1180" fg:w="2"/><text x="95.7966%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="95.5466%" y="213" width="0.1619%" height="15" fill="rgb(232,114,28)" fg:x="1180" fg:w="2"/><text x="95.7966%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="95.5466%" y="197" width="0.1619%" height="15" fill="rgb(253,215,8)" fg:x="1180" fg:w="2"/><text x="95.7966%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.6275%" y="181" width="0.0810%" height="15" fill="rgb(254,64,19)" fg:x="1181" fg:w="1"/><text x="95.8775%" y="191.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="95.4656%" y="325" width="0.3239%" height="15" fill="rgb(242,18,46)" fg:x="1179" fg:w="4"/><text x="95.7156%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="95.4656%" y="309" width="0.3239%" height="15" fill="rgb(239,192,30)" fg:x="1179" fg:w="4"/><text x="95.7156%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.4656%" y="293" width="0.3239%" height="15" fill="rgb(232,73,14)" fg:x="1179" fg:w="4"/><text x="95.7156%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="95.4656%" y="277" width="0.3239%" height="15" fill="rgb(225,51,9)" fg:x="1179" fg:w="4"/><text x="95.7156%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.4656%" y="261" width="0.3239%" height="15" fill="rgb(242,217,54)" fg:x="1179" fg:w="4"/><text x="95.7156%" y="271.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.4656%" y="245" width="0.3239%" height="15" fill="rgb(216,93,3)" fg:x="1179" fg:w="4"/><text x="95.7156%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.7085%" y="229" width="0.0810%" height="15" fill="rgb(230,119,33)" fg:x="1182" fg:w="1"/><text x="95.9585%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7085%" y="213" width="0.0810%" height="15" fill="rgb(238,170,27)" fg:x="1182" fg:w="1"/><text x="95.9585%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="95.7085%" y="197" width="0.0810%" height="15" fill="rgb(229,8,2)" fg:x="1182" fg:w="1"/><text x="95.9585%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.7085%" y="181" width="0.0810%" height="15" fill="rgb(205,214,42)" fg:x="1182" fg:w="1"/><text x="95.9585%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.7085%" y="165" width="0.0810%" height="15" fill="rgb(245,113,1)" fg:x="1182" fg:w="1"/><text x="95.9585%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.7085%" y="149" width="0.0810%" height="15" fill="rgb(252,50,2)" fg:x="1182" fg:w="1"/><text x="95.9585%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7085%" y="133" width="0.0810%" height="15" fill="rgb(225,122,24)" fg:x="1182" fg:w="1"/><text x="95.9585%" y="143.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (11 samples, 0.89%)</title><rect x="94.9798%" y="421" width="0.8907%" height="15" fill="rgb(234,129,31)" fg:x="1173" fg:w="11"/><text x="95.2298%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (11 samples, 0.89%)</title><rect x="94.9798%" y="405" width="0.8907%" height="15" fill="rgb(219,177,4)" fg:x="1173" fg:w="11"/><text x="95.2298%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (9 samples, 0.73%)</title><rect x="95.1417%" y="389" width="0.7287%" height="15" fill="rgb(225,142,27)" fg:x="1175" fg:w="9"/><text x="95.3917%" y="399.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (9 samples, 0.73%)</title><rect x="95.1417%" y="373" width="0.7287%" height="15" fill="rgb(205,107,51)" fg:x="1175" fg:w="9"/><text x="95.3917%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (9 samples, 0.73%)</title><rect x="95.1417%" y="357" width="0.7287%" height="15" fill="rgb(236,223,15)" fg:x="1175" fg:w="9"/><text x="95.3917%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.73%)</title><rect x="95.1417%" y="341" width="0.7287%" height="15" fill="rgb(235,133,11)" fg:x="1175" fg:w="9"/><text x="95.3917%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="95.7895%" y="325" width="0.0810%" height="15" fill="rgb(247,172,13)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="335.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="95.7895%" y="309" width="0.0810%" height="15" fill="rgb(233,191,41)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7895%" y="293" width="0.0810%" height="15" fill="rgb(250,65,16)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7895%" y="277" width="0.0810%" height="15" fill="rgb(206,10,27)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7895%" y="261" width="0.0810%" height="15" fill="rgb(212,96,22)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7895%" y="245" width="0.0810%" height="15" fill="rgb(206,50,0)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7895%" y="229" width="0.0810%" height="15" fill="rgb(249,105,52)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7895%" y="213" width="0.0810%" height="15" fill="rgb(216,93,51)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7895%" y="197" width="0.0810%" height="15" fill="rgb(217,172,13)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7895%" y="181" width="0.0810%" height="15" fill="rgb(235,199,38)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7895%" y="165" width="0.0810%" height="15" fill="rgb(221,97,33)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7895%" y="149" width="0.0810%" height="15" fill="rgb(205,156,50)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.7895%" y="133" width="0.0810%" height="15" fill="rgb(215,142,19)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7895%" y="117" width="0.0810%" height="15" fill="rgb(232,170,7)" fg:x="1183" fg:w="1"/><text x="96.0395%" y="127.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="95.8704%" y="389" width="0.1619%" height="15" fill="rgb(223,50,17)" fg:x="1184" fg:w="2"/><text x="96.1204%" y="399.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="95.8704%" y="373" width="0.1619%" height="15" fill="rgb(230,103,46)" fg:x="1184" fg:w="2"/><text x="96.1204%" y="383.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="95.8704%" y="357" width="0.1619%" height="15" fill="rgb(254,30,34)" fg:x="1184" fg:w="2"/><text x="96.1204%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="95.8704%" y="341" width="0.1619%" height="15" fill="rgb(235,198,1)" fg:x="1184" fg:w="2"/><text x="96.1204%" y="351.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="95.8704%" y="325" width="0.1619%" height="15" fill="rgb(217,105,47)" fg:x="1184" fg:w="2"/><text x="96.1204%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="95.8704%" y="309" width="0.1619%" height="15" fill="rgb(231,18,12)" fg:x="1184" fg:w="2"/><text x="96.1204%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="95.8704%" y="293" width="0.1619%" height="15" fill="rgb(218,196,1)" fg:x="1184" fg:w="2"/><text x="96.1204%" y="303.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="95.8704%" y="277" width="0.1619%" height="15" fill="rgb(210,32,3)" fg:x="1184" fg:w="2"/><text x="96.1204%" y="287.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="95.9514%" y="261" width="0.0810%" height="15" fill="rgb(227,178,30)" fg:x="1185" fg:w="1"/><text x="96.2014%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9514%" y="245" width="0.0810%" height="15" fill="rgb(231,140,27)" fg:x="1185" fg:w="1"/><text x="96.2014%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9514%" y="229" width="0.0810%" height="15" fill="rgb(206,66,35)" fg:x="1185" fg:w="1"/><text x="96.2014%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.9514%" y="213" width="0.0810%" height="15" fill="rgb(212,34,2)" fg:x="1185" fg:w="1"/><text x="96.2014%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.9514%" y="197" width="0.0810%" height="15" fill="rgb(207,201,33)" fg:x="1185" fg:w="1"/><text x="96.2014%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.9514%" y="181" width="0.0810%" height="15" fill="rgb(221,135,32)" fg:x="1185" fg:w="1"/><text x="96.2014%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.9514%" y="165" width="0.0810%" height="15" fill="rgb(206,77,31)" fg:x="1185" fg:w="1"/><text x="96.2014%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.9514%" y="149" width="0.0810%" height="15" fill="rgb(252,198,50)" fg:x="1185" fg:w="1"/><text x="96.2014%" y="159.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.0324%" y="357" width="0.0810%" height="15" fill="rgb(206,79,27)" fg:x="1186" fg:w="1"/><text x="96.2824%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1134%" y="277" width="0.0810%" height="15" fill="rgb(228,108,9)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1134%" y="261" width="0.0810%" height="15" fill="rgb(213,9,39)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1134%" y="245" width="0.0810%" height="15" fill="rgb(252,51,13)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1134%" y="229" width="0.0810%" height="15" fill="rgb(218,202,39)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1134%" y="213" width="0.0810%" height="15" fill="rgb(214,122,21)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1134%" y="197" width="0.0810%" height="15" fill="rgb(217,205,48)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1134%" y="181" width="0.0810%" height="15" fill="rgb(230,216,13)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1134%" y="165" width="0.0810%" height="15" fill="rgb(249,118,4)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1134%" y="149" width="0.0810%" height="15" fill="rgb(212,207,40)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1134%" y="133" width="0.0810%" height="15" fill="rgb(217,156,26)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1134%" y="117" width="0.0810%" height="15" fill="rgb(226,86,34)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1134%" y="101" width="0.0810%" height="15" fill="rgb(217,111,30)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1134%" y="85" width="0.0810%" height="15" fill="rgb(228,64,18)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1134%" y="69" width="0.0810%" height="15" fill="rgb(254,217,48)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1134%" y="53" width="0.0810%" height="15" fill="rgb(226,156,48)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1134%" y="37" width="0.0810%" height="15" fill="rgb(236,168,20)" fg:x="1187" fg:w="1"/><text x="96.3634%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1943%" y="261" width="0.0810%" height="15" fill="rgb(239,210,33)" fg:x="1188" fg:w="1"/><text x="96.4443%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="96.1943%" y="277" width="0.1619%" height="15" fill="rgb(242,85,17)" fg:x="1188" fg:w="2"/><text x="96.4443%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.2753%" y="261" width="0.0810%" height="15" fill="rgb(221,196,15)" fg:x="1189" fg:w="1"/><text x="96.5253%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2753%" y="245" width="0.0810%" height="15" fill="rgb(249,76,21)" fg:x="1189" fg:w="1"/><text x="96.5253%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.2753%" y="229" width="0.0810%" height="15" fill="rgb(243,67,29)" fg:x="1189" fg:w="1"/><text x="96.5253%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2753%" y="213" width="0.0810%" height="15" fill="rgb(240,159,2)" fg:x="1189" fg:w="1"/><text x="96.5253%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.2753%" y="197" width="0.0810%" height="15" fill="rgb(244,64,3)" fg:x="1189" fg:w="1"/><text x="96.5253%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2753%" y="181" width="0.0810%" height="15" fill="rgb(220,86,40)" fg:x="1189" fg:w="1"/><text x="96.5253%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2753%" y="165" width="0.0810%" height="15" fill="rgb(222,194,51)" fg:x="1189" fg:w="1"/><text x="96.5253%" y="175.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.3563%" y="229" width="0.0810%" height="15" fill="rgb(207,154,19)" fg:x="1190" fg:w="1"/><text x="96.6063%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3563%" y="213" width="0.0810%" height="15" fill="rgb(206,178,36)" fg:x="1190" fg:w="1"/><text x="96.6063%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3563%" y="197" width="0.0810%" height="15" fill="rgb(218,8,24)" fg:x="1190" fg:w="1"/><text x="96.6063%" y="207.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="96.3563%" y="277" width="0.1619%" height="15" fill="rgb(226,83,41)" fg:x="1190" fg:w="2"/><text x="96.6063%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.3563%" y="261" width="0.1619%" height="15" fill="rgb(224,23,22)" fg:x="1190" fg:w="2"/><text x="96.6063%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.3563%" y="245" width="0.1619%" height="15" fill="rgb(218,198,45)" fg:x="1190" fg:w="2"/><text x="96.6063%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.4372%" y="229" width="0.0810%" height="15" fill="rgb(249,147,41)" fg:x="1191" fg:w="1"/><text x="96.6872%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4372%" y="213" width="0.0810%" height="15" fill="rgb(244,224,13)" fg:x="1191" fg:w="1"/><text x="96.6872%" y="223.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.4372%" y="197" width="0.0810%" height="15" fill="rgb(225,97,27)" fg:x="1191" fg:w="1"/><text x="96.6872%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.4372%" y="181" width="0.0810%" height="15" fill="rgb(254,64,0)" fg:x="1191" fg:w="1"/><text x="96.6872%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.4372%" y="165" width="0.0810%" height="15" fill="rgb(208,130,43)" fg:x="1191" fg:w="1"/><text x="96.6872%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.4372%" y="149" width="0.0810%" height="15" fill="rgb(247,91,25)" fg:x="1191" fg:w="1"/><text x="96.6872%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4372%" y="133" width="0.0810%" height="15" fill="rgb(215,218,42)" fg:x="1191" fg:w="1"/><text x="96.6872%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.5182%" y="69" width="0.0810%" height="15" fill="rgb(233,9,24)" fg:x="1192" fg:w="1"/><text x="96.7682%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.5182%" y="181" width="0.1619%" height="15" fill="rgb(252,105,38)" fg:x="1192" fg:w="2"/><text x="96.7682%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.5182%" y="165" width="0.1619%" height="15" fill="rgb(225,40,49)" fg:x="1192" fg:w="2"/><text x="96.7682%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.5182%" y="149" width="0.1619%" height="15" fill="rgb(232,196,19)" fg:x="1192" fg:w="2"/><text x="96.7682%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.5182%" y="133" width="0.1619%" height="15" fill="rgb(207,35,15)" fg:x="1192" fg:w="2"/><text x="96.7682%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.5182%" y="117" width="0.1619%" height="15" fill="rgb(238,68,36)" fg:x="1192" fg:w="2"/><text x="96.7682%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.5182%" y="101" width="0.1619%" height="15" fill="rgb(205,158,20)" fg:x="1192" fg:w="2"/><text x="96.7682%" y="111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="96.5182%" y="85" width="0.1619%" height="15" fill="rgb(232,32,22)" fg:x="1192" fg:w="2"/><text x="96.7682%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5992%" y="69" width="0.0810%" height="15" fill="rgb(210,169,6)" fg:x="1193" fg:w="1"/><text x="96.8492%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="96.5182%" y="213" width="0.2429%" height="15" fill="rgb(229,28,12)" fg:x="1192" fg:w="3"/><text x="96.7682%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.5182%" y="197" width="0.2429%" height="15" fill="rgb(229,78,10)" fg:x="1192" fg:w="3"/><text x="96.7682%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6802%" y="181" width="0.0810%" height="15" fill="rgb(223,139,54)" fg:x="1194" fg:w="1"/><text x="96.9302%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6802%" y="165" width="0.0810%" height="15" fill="rgb(207,110,4)" fg:x="1194" fg:w="1"/><text x="96.9302%" y="175.50"></text></g><g><title>plugins_core::tools::contained_by (9 samples, 0.73%)</title><rect x="96.1134%" y="357" width="0.7287%" height="15" fill="rgb(248,30,41)" fg:x="1187" fg:w="9"/><text x="96.3634%" y="367.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (9 samples, 0.73%)</title><rect x="96.1134%" y="341" width="0.7287%" height="15" fill="rgb(235,54,25)" fg:x="1187" fg:w="9"/><text x="96.3634%" y="351.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (9 samples, 0.73%)</title><rect x="96.1134%" y="325" width="0.7287%" height="15" fill="rgb(213,107,41)" fg:x="1187" fg:w="9"/><text x="96.3634%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (9 samples, 0.73%)</title><rect x="96.1134%" y="309" width="0.7287%" height="15" fill="rgb(237,102,9)" fg:x="1187" fg:w="9"/><text x="96.3634%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.73%)</title><rect x="96.1134%" y="293" width="0.7287%" height="15" fill="rgb(252,137,49)" fg:x="1187" fg:w="9"/><text x="96.3634%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="96.5182%" y="277" width="0.3239%" height="15" fill="rgb(233,202,33)" fg:x="1192" fg:w="4"/><text x="96.7682%" y="287.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="96.5182%" y="261" width="0.3239%" height="15" fill="rgb(223,14,51)" fg:x="1192" fg:w="4"/><text x="96.7682%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.5182%" y="245" width="0.3239%" height="15" fill="rgb(248,70,23)" fg:x="1192" fg:w="4"/><text x="96.7682%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.5182%" y="229" width="0.3239%" height="15" fill="rgb(209,207,47)" fg:x="1192" fg:w="4"/><text x="96.7682%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.7611%" y="213" width="0.0810%" height="15" fill="rgb(245,124,2)" fg:x="1195" fg:w="1"/><text x="97.0111%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7611%" y="197" width="0.0810%" height="15" fill="rgb(249,208,11)" fg:x="1195" fg:w="1"/><text x="97.0111%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.8421%" y="325" width="0.1619%" height="15" fill="rgb(247,112,7)" fg:x="1196" fg:w="2"/><text x="97.0921%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.8421%" y="309" width="0.1619%" height="15" fill="rgb(209,192,31)" fg:x="1196" fg:w="2"/><text x="97.0921%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9231%" y="293" width="0.0810%" height="15" fill="rgb(236,55,19)" fg:x="1197" fg:w="1"/><text x="97.1731%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9231%" y="277" width="0.0810%" height="15" fill="rgb(252,89,41)" fg:x="1197" fg:w="1"/><text x="97.1731%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9231%" y="261" width="0.0810%" height="15" fill="rgb(220,172,14)" fg:x="1197" fg:w="1"/><text x="97.1731%" y="271.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.0040%" y="245" width="0.0810%" height="15" fill="rgb(252,65,2)" fg:x="1198" fg:w="1"/><text x="97.2540%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (1 samples, 0.08%)</title><rect x="97.0040%" y="229" width="0.0810%" height="15" fill="rgb(250,20,8)" fg:x="1198" fg:w="1"/><text x="97.2540%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="97.0040%" y="293" width="0.2429%" height="15" fill="rgb(234,149,13)" fg:x="1198" fg:w="3"/><text x="97.2540%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="97.0040%" y="277" width="0.2429%" height="15" fill="rgb(223,219,12)" fg:x="1198" fg:w="3"/><text x="97.2540%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="97.0040%" y="261" width="0.2429%" height="15" fill="rgb(234,13,49)" fg:x="1198" fg:w="3"/><text x="97.2540%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.0850%" y="245" width="0.1619%" height="15" fill="rgb(214,41,25)" fg:x="1199" fg:w="2"/><text x="97.3350%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.0850%" y="229" width="0.1619%" height="15" fill="rgb(232,198,52)" fg:x="1199" fg:w="2"/><text x="97.3350%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.1660%" y="213" width="0.0810%" height="15" fill="rgb(236,111,46)" fg:x="1200" fg:w="1"/><text x="97.4160%" y="223.50"></text></g><g><title>plugins_core::tools::occupied_by (6 samples, 0.49%)</title><rect x="96.8421%" y="357" width="0.4858%" height="15" fill="rgb(253,30,20)" fg:x="1196" fg:w="6"/><text x="97.0921%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (6 samples, 0.49%)</title><rect x="96.8421%" y="341" width="0.4858%" height="15" fill="rgb(247,141,17)" fg:x="1196" fg:w="6"/><text x="97.0921%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="97.0040%" y="325" width="0.3239%" height="15" fill="rgb(214,195,21)" fg:x="1198" fg:w="4"/><text x="97.2540%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.0040%" y="309" width="0.3239%" height="15" fill="rgb(214,98,12)" fg:x="1198" fg:w="4"/><text x="97.2540%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2470%" y="293" width="0.0810%" height="15" fill="rgb(239,4,26)" fg:x="1201" fg:w="1"/><text x="97.4970%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2470%" y="277" width="0.0810%" height="15" fill="rgb(234,210,35)" fg:x="1201" fg:w="1"/><text x="97.4970%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="97.2470%" y="261" width="0.0810%" height="15" fill="rgb(252,178,27)" fg:x="1201" fg:w="1"/><text x="97.4970%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (30 samples, 2.43%)</title><rect x="94.9798%" y="485" width="2.4291%" height="15" fill="rgb(217,50,1)" fg:x="1173" fg:w="30"/><text x="95.2298%" y="495.50">&lt;e..</text></g><g><title>kernel::plugins::mw::apply_middleware (30 samples, 2.43%)</title><rect x="94.9798%" y="469" width="2.4291%" height="15" fill="rgb(233,137,5)" fg:x="1173" fg:w="30"/><text x="95.2298%" y="479.50">ke..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (30 samples, 2.43%)</title><rect x="94.9798%" y="453" width="2.4291%" height="15" fill="rgb(217,227,25)" fg:x="1173" fg:w="30"/><text x="95.2298%" y="463.50">ke..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (30 samples, 2.43%)</title><rect x="94.9798%" y="437" width="2.4291%" height="15" fill="rgb(242,89,38)" fg:x="1173" fg:w="30"/><text x="95.2298%" y="447.50">&lt;e..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (19 samples, 1.54%)</title><rect x="95.8704%" y="421" width="1.5385%" height="15" fill="rgb(212,190,30)" fg:x="1184" fg:w="19"/><text x="96.1204%" y="431.50"></text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (19 samples, 1.54%)</title><rect x="95.8704%" y="405" width="1.5385%" height="15" fill="rgb(222,120,8)" fg:x="1184" fg:w="19"/><text x="96.1204%" y="415.50"></text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (17 samples, 1.38%)</title><rect x="96.0324%" y="389" width="1.3765%" height="15" fill="rgb(227,181,9)" fg:x="1186" fg:w="17"/><text x="96.2824%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (17 samples, 1.38%)</title><rect x="96.0324%" y="373" width="1.3765%" height="15" fill="rgb(222,125,29)" fg:x="1186" fg:w="17"/><text x="96.2824%" y="383.50"></text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="97.3279%" y="357" width="0.0810%" height="15" fill="rgb(215,153,31)" fg:x="1202" fg:w="1"/><text x="97.5779%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="97.3279%" y="341" width="0.0810%" height="15" fill="rgb(228,77,30)" fg:x="1202" fg:w="1"/><text x="97.5779%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3279%" y="325" width="0.0810%" height="15" fill="rgb(226,110,9)" fg:x="1202" fg:w="1"/><text x="97.5779%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3279%" y="309" width="0.0810%" height="15" fill="rgb(219,111,7)" fg:x="1202" fg:w="1"/><text x="97.5779%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.3279%" y="293" width="0.0810%" height="15" fill="rgb(229,167,25)" fg:x="1202" fg:w="1"/><text x="97.5779%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.3279%" y="277" width="0.0810%" height="15" fill="rgb(209,77,43)" fg:x="1202" fg:w="1"/><text x="97.5779%" y="287.50"></text></g><g><title>engine::session::Session::captured (34 samples, 2.75%)</title><rect x="94.7368%" y="533" width="2.7530%" height="15" fill="rgb(233,70,39)" fg:x="1170" fg:w="34"/><text x="94.9868%" y="543.50">en..</text></g><g><title>engine::session::logs::capture (32 samples, 2.59%)</title><rect x="94.8988%" y="517" width="2.5911%" height="15" fill="rgb(207,171,44)" fg:x="1172" fg:w="32"/><text x="95.1488%" y="527.50">en..</text></g><g><title>tracing_core::dispatcher::with_default (31 samples, 2.51%)</title><rect x="94.9798%" y="501" width="2.5101%" height="15" fill="rgb(244,91,6)" fg:x="1173" fg:w="31"/><text x="95.2298%" y="511.50">tr..</text></g><g><title>tracing_core::dispatcher::set_default (1 samples, 0.08%)</title><rect x="97.4089%" y="485" width="0.0810%" height="15" fill="rgb(234,136,12)" fg:x="1203" fg:w="1"/><text x="97.6589%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6518%" y="437" width="0.0810%" height="15" fill="rgb(216,210,38)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6518%" y="421" width="0.0810%" height="15" fill="rgb(241,227,7)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6518%" y="405" width="0.0810%" height="15" fill="rgb(241,222,11)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6518%" y="389" width="0.0810%" height="15" fill="rgb(246,86,18)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6518%" y="373" width="0.0810%" height="15" fill="rgb(224,151,49)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6518%" y="357" width="0.0810%" height="15" fill="rgb(235,4,41)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6518%" y="341" width="0.0810%" height="15" fill="rgb(218,30,52)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6518%" y="325" width="0.0810%" height="15" fill="rgb(205,124,51)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6518%" y="309" width="0.0810%" height="15" fill="rgb(237,126,51)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6518%" y="293" width="0.0810%" height="15" fill="rgb(225,32,46)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6518%" y="277" width="0.0810%" height="15" fill="rgb(251,60,49)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.6518%" y="261" width="0.0810%" height="15" fill="rgb(234,18,23)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.6518%" y="245" width="0.0810%" height="15" fill="rgb(234,25,23)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.6518%" y="229" width="0.0810%" height="15" fill="rgb(210,43,52)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.6518%" y="213" width="0.0810%" height="15" fill="rgb(237,198,21)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6518%" y="197" width="0.0810%" height="15" fill="rgb(211,20,34)" fg:x="1206" fg:w="1"/><text x="97.9018%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8138%" y="341" width="0.0810%" height="15" fill="rgb(221,155,50)" fg:x="1208" fg:w="1"/><text x="98.0638%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8138%" y="325" width="0.0810%" height="15" fill="rgb(213,214,53)" fg:x="1208" fg:w="1"/><text x="98.0638%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8138%" y="309" width="0.0810%" height="15" fill="rgb(215,229,48)" fg:x="1208" fg:w="1"/><text x="98.0638%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8138%" y="293" width="0.0810%" height="15" fill="rgb(243,88,5)" fg:x="1208" fg:w="1"/><text x="98.0638%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8138%" y="277" width="0.0810%" height="15" fill="rgb(216,199,8)" fg:x="1208" fg:w="1"/><text x="98.0638%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="97.8138%" y="261" width="0.0810%" height="15" fill="rgb(241,22,4)" fg:x="1208" fg:w="1"/><text x="98.0638%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.8947%" y="341" width="0.0810%" height="15" fill="rgb(209,190,22)" fg:x="1209" fg:w="1"/><text x="98.1447%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="97.7328%" y="389" width="0.3239%" height="15" fill="rgb(251,138,45)" fg:x="1207" fg:w="4"/><text x="97.9828%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="97.7328%" y="373" width="0.3239%" height="15" fill="rgb(219,111,22)" fg:x="1207" fg:w="4"/><text x="97.9828%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="97.8138%" y="357" width="0.2429%" height="15" fill="rgb(253,29,49)" fg:x="1208" fg:w="3"/><text x="98.0638%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9757%" y="341" width="0.0810%" height="15" fill="rgb(238,129,49)" fg:x="1210" fg:w="1"/><text x="98.2257%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9757%" y="325" width="0.0810%" height="15" fill="rgb(240,26,41)" fg:x="1210" fg:w="1"/><text x="98.2257%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="97.9757%" y="309" width="0.0810%" height="15" fill="rgb(221,47,33)" fg:x="1210" fg:w="1"/><text x="98.2257%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="97.9757%" y="293" width="0.0810%" height="15" fill="rgb(216,200,17)" fg:x="1210" fg:w="1"/><text x="98.2257%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="97.7328%" y="437" width="0.4049%" height="15" fill="rgb(230,151,26)" fg:x="1207" fg:w="5"/><text x="97.9828%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="97.7328%" y="421" width="0.4049%" height="15" fill="rgb(242,182,16)" fg:x="1207" fg:w="5"/><text x="97.9828%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="97.7328%" y="405" width="0.4049%" height="15" fill="rgb(236,35,53)" fg:x="1207" fg:w="5"/><text x="97.9828%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0567%" y="389" width="0.0810%" height="15" fill="rgb(214,180,28)" fg:x="1211" fg:w="1"/><text x="98.3067%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0567%" y="373" width="0.0810%" height="15" fill="rgb(208,173,36)" fg:x="1211" fg:w="1"/><text x="98.3067%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.73%)</title><rect x="97.4899%" y="485" width="0.7287%" height="15" fill="rgb(218,39,15)" fg:x="1204" fg:w="9"/><text x="97.7399%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.73%)</title><rect x="97.4899%" y="469" width="0.7287%" height="15" fill="rgb(213,145,15)" fg:x="1204" fg:w="9"/><text x="97.7399%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.57%)</title><rect x="97.6518%" y="453" width="0.5668%" height="15" fill="rgb(242,110,37)" fg:x="1206" fg:w="7"/><text x="97.9018%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1377%" y="437" width="0.0810%" height="15" fill="rgb(247,146,22)" fg:x="1212" fg:w="1"/><text x="98.3877%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1377%" y="421" width="0.0810%" height="15" fill="rgb(215,191,7)" fg:x="1212" fg:w="1"/><text x="98.3877%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.1377%" y="405" width="0.0810%" height="15" fill="rgb(240,158,1)" fg:x="1212" fg:w="1"/><text x="98.3877%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.1377%" y="389" width="0.0810%" height="15" fill="rgb(241,78,32)" fg:x="1212" fg:w="1"/><text x="98.3877%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1377%" y="373" width="0.0810%" height="15" fill="rgb(248,83,10)" fg:x="1212" fg:w="1"/><text x="98.3877%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.1377%" y="357" width="0.0810%" height="15" fill="rgb(241,52,0)" fg:x="1212" fg:w="1"/><text x="98.3877%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.1377%" y="341" width="0.0810%" height="15" fill="rgb(238,37,13)" fg:x="1212" fg:w="1"/><text x="98.3877%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.1377%" y="325" width="0.0810%" height="15" fill="rgb(242,194,17)" fg:x="1212" fg:w="1"/><text x="98.3877%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.2186%" y="389" width="0.0810%" height="15" fill="rgb(236,96,3)" fg:x="1213" fg:w="1"/><text x="98.4686%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="98.2186%" y="453" width="0.1619%" height="15" fill="rgb(235,148,34)" fg:x="1213" fg:w="2"/><text x="98.4686%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="98.2186%" y="437" width="0.1619%" height="15" fill="rgb(254,12,11)" fg:x="1213" fg:w="2"/><text x="98.4686%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="98.2186%" y="421" width="0.1619%" height="15" fill="rgb(207,31,54)" fg:x="1213" fg:w="2"/><text x="98.4686%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="98.2186%" y="405" width="0.1619%" height="15" fill="rgb(252,14,28)" fg:x="1213" fg:w="2"/><text x="98.4686%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.2996%" y="389" width="0.0810%" height="15" fill="rgb(252,108,36)" fg:x="1214" fg:w="1"/><text x="98.5496%" y="399.50"></text></g><g><title>engine::session::internal::Added::find_refs (12 samples, 0.97%)</title><rect x="97.4899%" y="517" width="0.9717%" height="15" fill="rgb(214,149,7)" fg:x="1204" fg:w="12"/><text x="97.7399%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (12 samples, 0.97%)</title><rect x="97.4899%" y="501" width="0.9717%" height="15" fill="rgb(243,94,12)" fg:x="1204" fg:w="12"/><text x="97.7399%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.2186%" y="485" width="0.2429%" height="15" fill="rgb(208,36,10)" fg:x="1213" fg:w="3"/><text x="98.4686%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.2186%" y="469" width="0.2429%" height="15" fill="rgb(233,185,52)" fg:x="1213" fg:w="3"/><text x="98.4686%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3806%" y="453" width="0.0810%" height="15" fill="rgb(234,50,45)" fg:x="1215" fg:w="1"/><text x="98.6306%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4615%" y="469" width="0.0810%" height="15" fill="rgb(228,92,54)" fg:x="1216" fg:w="1"/><text x="98.7115%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.4615%" y="453" width="0.0810%" height="15" fill="rgb(224,85,25)" fg:x="1216" fg:w="1"/><text x="98.7115%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4615%" y="437" width="0.0810%" height="15" fill="rgb(246,1,45)" fg:x="1216" fg:w="1"/><text x="98.7115%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.4615%" y="501" width="0.1619%" height="15" fill="rgb(240,66,23)" fg:x="1216" fg:w="2"/><text x="98.7115%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.4615%" y="485" width="0.1619%" height="15" fill="rgb(222,96,27)" fg:x="1216" fg:w="2"/><text x="98.7115%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5425%" y="469" width="0.0810%" height="15" fill="rgb(212,136,10)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5425%" y="453" width="0.0810%" height="15" fill="rgb(226,192,50)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.5425%" y="437" width="0.0810%" height="15" fill="rgb(241,182,31)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.5425%" y="421" width="0.0810%" height="15" fill="rgb(219,205,47)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.5425%" y="405" width="0.0810%" height="15" fill="rgb(207,96,14)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.5425%" y="389" width="0.0810%" height="15" fill="rgb(216,119,9)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.5425%" y="373" width="0.0810%" height="15" fill="rgb(235,62,36)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.5425%" y="357" width="0.0810%" height="15" fill="rgb(214,41,27)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.5425%" y="341" width="0.0810%" height="15" fill="rgb(214,174,37)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.5425%" y="325" width="0.0810%" height="15" fill="rgb(212,11,25)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.5425%" y="309" width="0.0810%" height="15" fill="rgb(217,71,35)" fg:x="1217" fg:w="1"/><text x="98.7925%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.6235%" y="373" width="0.0810%" height="15" fill="rgb(234,152,9)" fg:x="1218" fg:w="1"/><text x="98.8735%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6235%" y="357" width="0.0810%" height="15" fill="rgb(228,32,51)" fg:x="1218" fg:w="1"/><text x="98.8735%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.6235%" y="341" width="0.0810%" height="15" fill="rgb(209,14,47)" fg:x="1218" fg:w="1"/><text x="98.8735%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.6235%" y="325" width="0.0810%" height="15" fill="rgb(218,201,17)" fg:x="1218" fg:w="1"/><text x="98.8735%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6235%" y="309" width="0.0810%" height="15" fill="rgb(218,98,15)" fg:x="1218" fg:w="1"/><text x="98.8735%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="98.6235%" y="501" width="0.1619%" height="15" fill="rgb(233,202,29)" fg:x="1218" fg:w="2"/><text x="98.8735%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.6235%" y="485" width="0.1619%" height="15" fill="rgb(207,196,44)" fg:x="1218" fg:w="2"/><text x="98.8735%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.6235%" y="469" width="0.1619%" height="15" fill="rgb(218,63,34)" fg:x="1218" fg:w="2"/><text x="98.8735%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.6235%" y="453" width="0.1619%" height="15" fill="rgb(209,10,5)" fg:x="1218" fg:w="2"/><text x="98.8735%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.6235%" y="437" width="0.1619%" height="15" fill="rgb(224,36,28)" fg:x="1218" fg:w="2"/><text x="98.8735%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.6235%" y="421" width="0.1619%" height="15" fill="rgb(249,178,7)" fg:x="1218" fg:w="2"/><text x="98.8735%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.6235%" y="405" width="0.1619%" height="15" fill="rgb(253,163,10)" fg:x="1218" fg:w="2"/><text x="98.8735%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6235%" y="389" width="0.1619%" height="15" fill="rgb(245,67,46)" fg:x="1218" fg:w="2"/><text x="98.8735%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.7045%" y="373" width="0.0810%" height="15" fill="rgb(225,14,18)" fg:x="1219" fg:w="1"/><text x="98.9545%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7045%" y="357" width="0.0810%" height="15" fill="rgb(217,41,54)" fg:x="1219" fg:w="1"/><text x="98.9545%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7045%" y="341" width="0.0810%" height="15" fill="rgb(222,111,11)" fg:x="1219" fg:w="1"/><text x="98.9545%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7045%" y="325" width="0.0810%" height="15" fill="rgb(211,85,31)" fg:x="1219" fg:w="1"/><text x="98.9545%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7045%" y="309" width="0.0810%" height="15" fill="rgb(223,29,26)" fg:x="1219" fg:w="1"/><text x="98.9545%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7045%" y="293" width="0.0810%" height="15" fill="rgb(236,124,50)" fg:x="1219" fg:w="1"/><text x="98.9545%" y="303.50"></text></g><g><title>engine::session::Session::load_entity (17 samples, 1.38%)</title><rect x="97.4899%" y="533" width="1.3765%" height="15" fill="rgb(219,148,15)" fg:x="1204" fg:w="17"/><text x="97.7399%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="98.4615%" y="517" width="0.4049%" height="15" fill="rgb(248,159,33)" fg:x="1216" fg:w="5"/><text x="98.7115%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="98.7854%" y="501" width="0.0810%" height="15" fill="rgb(252,65,8)" fg:x="1220" fg:w="1"/><text x="99.0354%" y="511.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="98.7854%" y="485" width="0.0810%" height="15" fill="rgb(236,45,7)" fg:x="1220" fg:w="1"/><text x="99.0354%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7854%" y="469" width="0.0810%" height="15" fill="rgb(244,3,48)" fg:x="1220" fg:w="1"/><text x="99.0354%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7854%" y="453" width="0.0810%" height="15" fill="rgb(224,123,53)" fg:x="1220" fg:w="1"/><text x="99.0354%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7854%" y="437" width="0.0810%" height="15" fill="rgb(223,173,15)" fg:x="1220" fg:w="1"/><text x="99.0354%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7854%" y="421" width="0.0810%" height="15" fill="rgb(254,181,5)" fg:x="1220" fg:w="1"/><text x="99.0354%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7854%" y="405" width="0.0810%" height="15" fill="rgb(243,124,33)" fg:x="1220" fg:w="1"/><text x="99.0354%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="98.8664%" y="485" width="0.0810%" height="15" fill="rgb(253,220,11)" fg:x="1221" fg:w="1"/><text x="99.1164%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8664%" y="469" width="0.0810%" height="15" fill="rgb(217,14,4)" fg:x="1221" fg:w="1"/><text x="99.1164%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8664%" y="453" width="0.0810%" height="15" fill="rgb(209,196,12)" fg:x="1221" fg:w="1"/><text x="99.1164%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8664%" y="437" width="0.0810%" height="15" fill="rgb(237,108,29)" fg:x="1221" fg:w="1"/><text x="99.1164%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9474%" y="469" width="0.0810%" height="15" fill="rgb(216,173,20)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9474%" y="453" width="0.0810%" height="15" fill="rgb(245,27,6)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.9474%" y="437" width="0.0810%" height="15" fill="rgb(210,181,20)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.9474%" y="421" width="0.0810%" height="15" fill="rgb(235,213,1)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.9474%" y="405" width="0.0810%" height="15" fill="rgb(239,68,43)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.9474%" y="389" width="0.0810%" height="15" fill="rgb(254,137,43)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.9474%" y="373" width="0.0810%" height="15" fill="rgb(252,170,38)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.9474%" y="357" width="0.0810%" height="15" fill="rgb(234,21,42)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.9474%" y="341" width="0.0810%" height="15" fill="rgb(216,145,40)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.9474%" y="325" width="0.0810%" height="15" fill="rgb(251,73,9)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.9474%" y="309" width="0.0810%" height="15" fill="rgb(242,54,6)" fg:x="1222" fg:w="1"/><text x="99.1974%" y="319.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="98.9474%" y="485" width="0.1619%" height="15" fill="rgb(239,70,7)" fg:x="1222" fg:w="2"/><text x="99.1974%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0283%" y="469" width="0.0810%" height="15" fill="rgb(216,159,35)" fg:x="1223" fg:w="1"/><text x="99.2783%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.0283%" y="453" width="0.0810%" height="15" fill="rgb(224,50,39)" fg:x="1223" fg:w="1"/><text x="99.2783%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="99.1093%" y="485" width="0.0810%" height="15" fill="rgb(235,9,35)" fg:x="1224" fg:w="1"/><text x="99.3593%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1093%" y="469" width="0.0810%" height="15" fill="rgb(239,34,21)" fg:x="1224" fg:w="1"/><text x="99.3593%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1903%" y="389" width="0.0810%" height="15" fill="rgb(218,162,43)" fg:x="1225" fg:w="1"/><text x="99.4403%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1903%" y="373" width="0.0810%" height="15" fill="rgb(219,89,33)" fg:x="1225" fg:w="1"/><text x="99.4403%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1903%" y="357" width="0.0810%" height="15" fill="rgb(226,125,37)" fg:x="1225" fg:w="1"/><text x="99.4403%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1903%" y="341" width="0.0810%" height="15" fill="rgb(233,149,30)" fg:x="1225" fg:w="1"/><text x="99.4403%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2713%" y="357" width="0.0810%" height="15" fill="rgb(236,8,18)" fg:x="1226" fg:w="1"/><text x="99.5213%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.2713%" y="341" width="0.0810%" height="15" fill="rgb(205,176,9)" fg:x="1226" fg:w="1"/><text x="99.5213%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4332%" y="309" width="0.0810%" height="15" fill="rgb(252,103,44)" fg:x="1228" fg:w="1"/><text x="99.6832%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.4332%" y="293" width="0.0810%" height="15" fill="rgb(207,68,53)" fg:x="1228" fg:w="1"/><text x="99.6832%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.4332%" y="277" width="0.0810%" height="15" fill="rgb(218,193,48)" fg:x="1228" fg:w="1"/><text x="99.6832%" y="287.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="99.1903%" y="485" width="0.4049%" height="15" fill="rgb(234,121,52)" fg:x="1225" fg:w="5"/><text x="99.4403%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="99.1903%" y="469" width="0.4049%" height="15" fill="rgb(227,218,49)" fg:x="1225" fg:w="5"/><text x="99.4403%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.1903%" y="453" width="0.4049%" height="15" fill="rgb(221,8,7)" fg:x="1225" fg:w="5"/><text x="99.4403%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="99.1903%" y="437" width="0.4049%" height="15" fill="rgb(217,151,36)" fg:x="1225" fg:w="5"/><text x="99.4403%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="99.1903%" y="421" width="0.4049%" height="15" fill="rgb(213,71,5)" fg:x="1225" fg:w="5"/><text x="99.4403%" y="431.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="99.1903%" y="405" width="0.4049%" height="15" fill="rgb(225,145,43)" fg:x="1225" fg:w="5"/><text x="99.4403%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.2713%" y="389" width="0.3239%" height="15" fill="rgb(235,118,19)" fg:x="1226" fg:w="4"/><text x="99.5213%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.2713%" y="373" width="0.3239%" height="15" fill="rgb(214,102,36)" fg:x="1226" fg:w="4"/><text x="99.5213%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="99.3522%" y="357" width="0.2429%" height="15" fill="rgb(220,56,43)" fg:x="1227" fg:w="3"/><text x="99.6022%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.3522%" y="341" width="0.2429%" height="15" fill="rgb(246,136,46)" fg:x="1227" fg:w="3"/><text x="99.6022%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.3522%" y="325" width="0.2429%" height="15" fill="rgb(249,99,12)" fg:x="1227" fg:w="3"/><text x="99.6022%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.5142%" y="309" width="0.0810%" height="15" fill="rgb(224,31,42)" fg:x="1229" fg:w="1"/><text x="99.7642%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5142%" y="293" width="0.0810%" height="15" fill="rgb(208,96,21)" fg:x="1229" fg:w="1"/><text x="99.7642%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5951%" y="389" width="0.0810%" height="15" fill="rgb(237,229,7)" fg:x="1230" fg:w="1"/><text x="99.8451%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5951%" y="373" width="0.0810%" height="15" fill="rgb(210,12,6)" fg:x="1230" fg:w="1"/><text x="99.8451%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5951%" y="357" width="0.0810%" height="15" fill="rgb(240,9,34)" fg:x="1230" fg:w="1"/><text x="99.8451%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5951%" y="341" width="0.0810%" height="15" fill="rgb(211,68,37)" fg:x="1230" fg:w="1"/><text x="99.8451%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5951%" y="325" width="0.0810%" height="15" fill="rgb(249,138,50)" fg:x="1230" fg:w="1"/><text x="99.8451%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5951%" y="309" width="0.0810%" height="15" fill="rgb(243,185,40)" fg:x="1230" fg:w="1"/><text x="99.8451%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5951%" y="293" width="0.0810%" height="15" fill="rgb(242,92,35)" fg:x="1230" fg:w="1"/><text x="99.8451%" y="303.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="99.5951%" y="277" width="0.0810%" height="15" fill="rgb(244,98,5)" fg:x="1230" fg:w="1"/><text x="99.8451%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.6761%" y="389" width="0.0810%" height="15" fill="rgb(228,186,29)" fg:x="1231" fg:w="1"/><text x="99.9261%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.6761%" y="373" width="0.0810%" height="15" fill="rgb(253,7,44)" fg:x="1231" fg:w="1"/><text x="99.9261%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.5951%" y="421" width="0.2429%" height="15" fill="rgb(216,11,45)" fg:x="1230" fg:w="3"/><text x="99.8451%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.5951%" y="405" width="0.2429%" height="15" fill="rgb(205,67,3)" fg:x="1230" fg:w="3"/><text x="99.8451%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7571%" y="389" width="0.0810%" height="15" fill="rgb(250,18,3)" fg:x="1232" fg:w="1"/><text x="100.0071%" y="399.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (70 samples, 5.67%)</title><rect x="94.2510%" y="565" width="5.6680%" height="15" fill="rgb(241,222,43)" fg:x="1164" fg:w="70"/><text x="94.5010%" y="575.50">engine:..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (70 samples, 5.67%)</title><rect x="94.2510%" y="549" width="5.6680%" height="15" fill="rgb(233,115,3)" fg:x="1164" fg:w="70"/><text x="94.5010%" y="559.50">engine:..</text></g><g><title>kernel::model::EntityPtrResolver::world (13 samples, 1.05%)</title><rect x="98.8664%" y="533" width="1.0526%" height="15" fill="rgb(215,165,25)" fg:x="1221" fg:w="13"/><text x="99.1164%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (13 samples, 1.05%)</title><rect x="98.8664%" y="517" width="1.0526%" height="15" fill="rgb(234,179,6)" fg:x="1221" fg:w="13"/><text x="99.1164%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.05%)</title><rect x="98.8664%" y="501" width="1.0526%" height="15" fill="rgb(215,82,23)" fg:x="1221" fg:w="13"/><text x="99.1164%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="99.5951%" y="485" width="0.3239%" height="15" fill="rgb(211,47,18)" fg:x="1230" fg:w="4"/><text x="99.8451%" y="495.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="99.5951%" y="469" width="0.3239%" height="15" fill="rgb(248,17,9)" fg:x="1230" fg:w="4"/><text x="99.8451%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.5951%" y="453" width="0.3239%" height="15" fill="rgb(210,212,12)" fg:x="1230" fg:w="4"/><text x="99.8451%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.5951%" y="437" width="0.3239%" height="15" fill="rgb(230,135,45)" fg:x="1230" fg:w="4"/><text x="99.8451%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.8381%" y="421" width="0.0810%" height="15" fill="rgb(214,121,41)" fg:x="1233" fg:w="1"/><text x="100.0881%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8381%" y="405" width="0.0810%" height="15" fill="rgb(239,165,45)" fg:x="1233" fg:w="1"/><text x="100.0881%" y="415.50"></text></g><g><title>all (1,235 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(214,85,51)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="927.50"></text></g><g><title>simple-c04c6483 (1,235 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(223,90,27)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="911.50">simple-c04c6483</text></g><g><title>_start (1,235 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(244,84,11)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="895.50">_start</text></g><g><title>__libc_start_main (1,235 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(253,41,47)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="879.50">__libc_start_main</text></g><g><title>main (1,235 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(232,39,5)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (1,235 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(211,93,4)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,235 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(219,50,49)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,235 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(232,80,19)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,235 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(215,227,39)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="799.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,235 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(211,99,12)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="783.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,235 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(214,158,5)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,235 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(242,19,53)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,235 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(208,18,20)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,235 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(250,44,11)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,235 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(238,159,13)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="703.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,235 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(231,74,18)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,235 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(229,219,45)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="671.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,235 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(210,221,1)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="655.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,235 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(209,60,51)" fg:x="0" fg:w="1235"/><text x="0.2500%" y="639.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (354 samples, 28.66%)</title><rect x="71.3360%" y="613" width="28.6640%" height="15" fill="rgb(252,97,34)" fg:x="881" fg:w="354"/><text x="71.5860%" y="623.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criter..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (354 samples, 28.66%)</title><rect x="71.3360%" y="597" width="28.6640%" height="15" fill="rgb(243,211,37)" fg:x="881" fg:w="354"/><text x="71.5860%" y="607.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (354 samples, 28.66%)</title><rect x="71.3360%" y="581" width="28.6640%" height="15" fill="rgb(210,229,37)" fg:x="881" fg:w="354"/><text x="71.5860%" y="591.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9190%" y="565" width="0.0810%" height="15" fill="rgb(220,208,43)" fg:x="1234" fg:w="1"/><text x="100.1690%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9190%" y="549" width="0.0810%" height="15" fill="rgb(218,118,50)" fg:x="1234" fg:w="1"/><text x="100.1690%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9190%" y="533" width="0.0810%" height="15" fill="rgb(254,169,52)" fg:x="1234" fg:w="1"/><text x="100.1690%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.9190%" y="517" width="0.0810%" height="15" fill="rgb(221,214,37)" fg:x="1234" fg:w="1"/><text x="100.1690%" y="527.50"></text></g></svg></svg>