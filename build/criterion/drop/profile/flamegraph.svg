<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1283"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1559%" y="517" width="0.0779%" height="15" fill="rgb(214,177,31)" fg:x="2" fg:w="1"/><text x="0.4059%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="0.3118%" y="501" width="0.2338%" height="15" fill="rgb(226,58,51)" fg:x="4" fg:w="3"/><text x="0.5618%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.55%)</title><rect x="0.0779%" y="565" width="0.5456%" height="15" fill="rgb(250,119,16)" fg:x="1" fg:w="7"/><text x="0.3279%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.55%)</title><rect x="0.0779%" y="549" width="0.5456%" height="15" fill="rgb(223,128,53)" fg:x="1" fg:w="7"/><text x="0.3279%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.47%)</title><rect x="0.1559%" y="533" width="0.4677%" height="15" fill="rgb(251,199,15)" fg:x="2" fg:w="6"/><text x="0.4059%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.39%)</title><rect x="0.2338%" y="517" width="0.3897%" height="15" fill="rgb(235,168,42)" fg:x="3" fg:w="5"/><text x="0.4838%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (1 samples, 0.08%)</title><rect x="0.5456%" y="501" width="0.0779%" height="15" fill="rgb(250,210,17)" fg:x="7" fg:w="1"/><text x="0.7956%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5456%" y="485" width="0.0779%" height="15" fill="rgb(226,36,41)" fg:x="7" fg:w="1"/><text x="0.7956%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8574%" y="453" width="0.1559%" height="15" fill="rgb(225,87,10)" fg:x="11" fg:w="2"/><text x="1.1074%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="1.0133%" y="453" width="0.2338%" height="15" fill="rgb(228,83,9)" fg:x="13" fg:w="3"/><text x="1.2633%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.4030%" y="437" width="0.1559%" height="15" fill="rgb(225,16,36)" fg:x="18" fg:w="2"/><text x="1.6530%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="1.9486%" y="421" width="0.2338%" height="15" fill="rgb(242,198,13)" fg:x="25" fg:w="3"/><text x="2.1986%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="2.1824%" y="421" width="0.1559%" height="15" fill="rgb(239,25,51)" fg:x="28" fg:w="2"/><text x="2.4324%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.1824%" y="405" width="0.1559%" height="15" fill="rgb(239,28,37)" fg:x="28" fg:w="2"/><text x="2.4324%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.71%)</title><rect x="0.7015%" y="501" width="1.7147%" height="15" fill="rgb(234,70,17)" fg:x="9" fg:w="22"/><text x="0.9515%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (21 samples, 1.64%)</title><rect x="0.7794%" y="485" width="1.6368%" height="15" fill="rgb(231,215,53)" fg:x="10" fg:w="21"/><text x="1.0294%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (21 samples, 1.64%)</title><rect x="0.7794%" y="469" width="1.6368%" height="15" fill="rgb(218,140,42)" fg:x="10" fg:w="21"/><text x="1.0294%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.17%)</title><rect x="1.2471%" y="453" width="1.1691%" height="15" fill="rgb(233,227,45)" fg:x="16" fg:w="15"/><text x="1.4971%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="1.5588%" y="437" width="0.8574%" height="15" fill="rgb(225,189,21)" fg:x="20" fg:w="11"/><text x="1.8088%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.3383%" y="421" width="0.0779%" height="15" fill="rgb(237,176,54)" fg:x="30" fg:w="1"/><text x="2.5883%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="2.4162%" y="485" width="0.2338%" height="15" fill="rgb(215,131,46)" fg:x="31" fg:w="3"/><text x="2.6662%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.6500%" y="485" width="0.0779%" height="15" fill="rgb(218,95,20)" fg:x="34" fg:w="1"/><text x="2.9000%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.6500%" y="469" width="0.0779%" height="15" fill="rgb(208,198,12)" fg:x="34" fg:w="1"/><text x="2.9000%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.0398%" y="469" width="0.0779%" height="15" fill="rgb(239,107,50)" fg:x="39" fg:w="1"/><text x="3.2898%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.31%)</title><rect x="3.1177%" y="469" width="0.3118%" height="15" fill="rgb(240,217,37)" fg:x="40" fg:w="4"/><text x="3.3677%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="3.1956%" y="453" width="0.2338%" height="15" fill="rgb(242,197,49)" fg:x="41" fg:w="3"/><text x="3.4456%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="3.4295%" y="453" width="0.2338%" height="15" fill="rgb(219,171,17)" fg:x="44" fg:w="3"/><text x="3.6795%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.6633%" y="453" width="0.0779%" height="15" fill="rgb(209,81,40)" fg:x="47" fg:w="1"/><text x="3.9133%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6633%" y="437" width="0.0779%" height="15" fill="rgb(237,156,30)" fg:x="47" fg:w="1"/><text x="3.9133%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8971%" y="437" width="0.0779%" height="15" fill="rgb(212,127,16)" fg:x="50" fg:w="1"/><text x="4.1471%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.9751%" y="437" width="0.0779%" height="15" fill="rgb(226,66,32)" fg:x="51" fg:w="1"/><text x="4.2251%" y="447.50"></text></g><g><title>__libc_free (5 samples, 0.39%)</title><rect x="4.2089%" y="421" width="0.3897%" height="15" fill="rgb(245,22,46)" fg:x="54" fg:w="5"/><text x="4.4589%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.5986%" y="405" width="0.0779%" height="15" fill="rgb(210,112,21)" fg:x="59" fg:w="1"/><text x="4.8486%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.6765%" y="389" width="0.0779%" height="15" fill="rgb(207,118,39)" fg:x="60" fg:w="1"/><text x="4.9265%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 4.21%)</title><rect x="0.6235%" y="517" width="4.2089%" height="15" fill="rgb(205,206,35)" fg:x="8" fg:w="54"/><text x="0.8735%" y="527.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (31 samples, 2.42%)</title><rect x="2.4162%" y="501" width="2.4162%" height="15" fill="rgb(222,120,2)" fg:x="31" fg:w="31"/><text x="2.6662%" y="511.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 2.10%)</title><rect x="2.7280%" y="485" width="2.1044%" height="15" fill="rgb(205,38,18)" fg:x="35" fg:w="27"/><text x="2.9780%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.40%)</title><rect x="3.4295%" y="469" width="1.4030%" height="15" fill="rgb(226,61,2)" fg:x="44" fg:w="18"/><text x="3.6795%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.09%)</title><rect x="3.7412%" y="453" width="1.0912%" height="15" fill="rgb(242,161,23)" fg:x="48" fg:w="14"/><text x="3.9912%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.78%)</title><rect x="4.0530%" y="437" width="0.7794%" height="15" fill="rgb(213,13,52)" fg:x="52" fg:w="10"/><text x="4.3030%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="4.5986%" y="421" width="0.2338%" height="15" fill="rgb(246,209,47)" fg:x="59" fg:w="3"/><text x="4.8486%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="4.6765%" y="405" width="0.1559%" height="15" fill="rgb(214,41,3)" fg:x="60" fg:w="2"/><text x="4.9265%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="4.7545%" y="389" width="0.0779%" height="15" fill="rgb(236,119,38)" fg:x="61" fg:w="1"/><text x="5.0045%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.7545%" y="373" width="0.0779%" height="15" fill="rgb(218,50,11)" fg:x="61" fg:w="1"/><text x="5.0045%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 4.36%)</title><rect x="0.6235%" y="549" width="4.3648%" height="15" fill="rgb(228,38,11)" fg:x="8" fg:w="56"/><text x="0.8735%" y="559.50">&lt;hash..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (56 samples, 4.36%)</title><rect x="0.6235%" y="533" width="4.3648%" height="15" fill="rgb(212,13,9)" fg:x="8" fg:w="56"/><text x="0.8735%" y="543.50">core:..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.8324%" y="517" width="0.1559%" height="15" fill="rgb(208,211,9)" fg:x="62" fg:w="2"/><text x="5.0824%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 4.99%)</title><rect x="0.0779%" y="581" width="4.9883%" height="15" fill="rgb(239,39,32)" fg:x="1" fg:w="64"/><text x="0.3279%" y="591.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (57 samples, 4.44%)</title><rect x="0.6235%" y="565" width="4.4427%" height="15" fill="rgb(254,179,26)" fg:x="8" fg:w="57"/><text x="0.8735%" y="575.50">core:..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.9883%" y="549" width="0.0779%" height="15" fill="rgb(249,165,28)" fg:x="64" fg:w="1"/><text x="5.2383%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.0663%" y="533" width="0.0779%" height="15" fill="rgb(225,59,50)" fg:x="65" fg:w="1"/><text x="5.3163%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="5.0663%" y="517" width="0.0779%" height="15" fill="rgb(209,122,5)" fg:x="65" fg:w="1"/><text x="5.3163%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.0663%" y="501" width="0.0779%" height="15" fill="rgb(214,65,34)" fg:x="65" fg:w="1"/><text x="5.3163%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="5.1442%" y="533" width="0.0779%" height="15" fill="rgb(249,183,32)" fg:x="66" fg:w="1"/><text x="5.3942%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.1442%" y="517" width="0.0779%" height="15" fill="rgb(218,122,24)" fg:x="66" fg:w="1"/><text x="5.3942%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="5.2221%" y="533" width="0.0779%" height="15" fill="rgb(224,109,18)" fg:x="67" fg:w="1"/><text x="5.4721%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="5.2221%" y="517" width="0.0779%" height="15" fill="rgb(210,68,50)" fg:x="67" fg:w="1"/><text x="5.4721%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="5.3001%" y="533" width="0.0779%" height="15" fill="rgb(212,184,34)" fg:x="68" fg:w="1"/><text x="5.5501%" y="543.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.3780%" y="517" width="0.0779%" height="15" fill="rgb(238,105,48)" fg:x="69" fg:w="1"/><text x="5.6280%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.4560%" y="517" width="0.0779%" height="15" fill="rgb(222,134,54)" fg:x="70" fg:w="1"/><text x="5.7060%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.4560%" y="501" width="0.0779%" height="15" fill="rgb(246,24,43)" fg:x="70" fg:w="1"/><text x="5.7060%" y="511.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::key (1 samples, 0.08%)</title><rect x="5.7677%" y="485" width="0.0779%" height="15" fill="rgb(227,169,22)" fg:x="74" fg:w="1"/><text x="6.0177%" y="495.50"></text></g><g><title>&lt;plugins_core::building::actions::BidirectionalDigAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="5.8457%" y="453" width="0.0779%" height="15" fill="rgb(253,152,4)" fg:x="75" fg:w="1"/><text x="6.0957%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="5.8457%" y="437" width="0.0779%" height="15" fill="rgb(219,158,36)" fg:x="75" fg:w="1"/><text x="6.0957%" y="447.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="5.8457%" y="485" width="0.1559%" height="15" fill="rgb(251,128,40)" fg:x="75" fg:w="2"/><text x="6.0957%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="5.8457%" y="469" width="0.1559%" height="15" fill="rgb(254,101,39)" fg:x="75" fg:w="2"/><text x="6.0957%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="5.9236%" y="453" width="0.0779%" height="15" fill="rgb(221,168,40)" fg:x="76" fg:w="1"/><text x="6.1736%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.9236%" y="437" width="0.0779%" height="15" fill="rgb(221,14,27)" fg:x="76" fg:w="1"/><text x="6.1736%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.9236%" y="421" width="0.0779%" height="15" fill="rgb(207,36,43)" fg:x="76" fg:w="1"/><text x="6.1736%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::GiveToAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="6.0016%" y="453" width="0.0779%" height="15" fill="rgb(240,172,53)" fg:x="77" fg:w="1"/><text x="6.2516%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="6.0016%" y="437" width="0.0779%" height="15" fill="rgb(241,138,43)" fg:x="77" fg:w="1"/><text x="6.2516%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.0016%" y="421" width="0.0779%" height="15" fill="rgb(227,78,19)" fg:x="77" fg:w="1"/><text x="6.2516%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.0016%" y="405" width="0.0779%" height="15" fill="rgb(215,127,44)" fg:x="77" fg:w="1"/><text x="6.2516%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.0016%" y="389" width="0.0779%" height="15" fill="rgb(227,13,10)" fg:x="77" fg:w="1"/><text x="6.2516%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::TakeOutAction as kernel::plugins::HasActionSchema&gt;::action_schema (2 samples, 0.16%)</title><rect x="6.0795%" y="453" width="0.1559%" height="15" fill="rgb(249,177,6)" fg:x="78" fg:w="2"/><text x="6.3295%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (2 samples, 0.16%)</title><rect x="6.0795%" y="437" width="0.1559%" height="15" fill="rgb(215,154,26)" fg:x="78" fg:w="2"/><text x="6.3295%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.1574%" y="421" width="0.0779%" height="15" fill="rgb(250,168,20)" fg:x="79" fg:w="1"/><text x="6.4074%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.1574%" y="405" width="0.0779%" height="15" fill="rgb(222,53,38)" fg:x="79" fg:w="1"/><text x="6.4074%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.1574%" y="389" width="0.0779%" height="15" fill="rgb(245,154,5)" fg:x="79" fg:w="1"/><text x="6.4074%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.39%)</title><rect x="6.0016%" y="485" width="0.3897%" height="15" fill="rgb(214,89,50)" fg:x="77" fg:w="5"/><text x="6.2516%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.39%)</title><rect x="6.0016%" y="469" width="0.3897%" height="15" fill="rgb(232,73,14)" fg:x="77" fg:w="5"/><text x="6.2516%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="6.2354%" y="453" width="0.1559%" height="15" fill="rgb(230,101,20)" fg:x="80" fg:w="2"/><text x="6.4854%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.3133%" y="437" width="0.0779%" height="15" fill="rgb(208,56,28)" fg:x="81" fg:w="1"/><text x="6.5633%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.3133%" y="421" width="0.0779%" height="15" fill="rgb(247,205,22)" fg:x="81" fg:w="1"/><text x="6.5633%" y="431.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="6.3913%" y="485" width="0.1559%" height="15" fill="rgb(252,109,51)" fg:x="82" fg:w="2"/><text x="6.6413%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="6.3913%" y="469" width="0.1559%" height="15" fill="rgb(220,40,24)" fg:x="82" fg:w="2"/><text x="6.6413%" y="479.50"></text></g><g><title>&lt;plugins_core::chat::actions::SpeakAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="6.4692%" y="453" width="0.0779%" height="15" fill="rgb(251,108,7)" fg:x="83" fg:w="1"/><text x="6.7192%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="6.4692%" y="437" width="0.0779%" height="15" fill="rgb(238,102,51)" fg:x="83" fg:w="1"/><text x="6.7192%" y="447.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="6.5472%" y="453" width="0.0779%" height="15" fill="rgb(219,149,34)" fg:x="84" fg:w="1"/><text x="6.7972%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="6.5472%" y="437" width="0.0779%" height="15" fill="rgb(239,70,0)" fg:x="84" fg:w="1"/><text x="6.7972%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5472%" y="421" width="0.0779%" height="15" fill="rgb(246,214,23)" fg:x="84" fg:w="1"/><text x="6.7972%" y="431.50"></text></g><g><title>&lt;plugins_core::fashion::actions::RemoveAction as replies::DeserializeTagged&gt;::from_tagged_json (1 samples, 0.08%)</title><rect x="6.6251%" y="453" width="0.0779%" height="15" fill="rgb(239,221,51)" fg:x="85" fg:w="1"/><text x="6.8751%" y="463.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.23%)</title><rect x="6.5472%" y="485" width="0.2338%" height="15" fill="rgb(254,62,14)" fg:x="84" fg:w="3"/><text x="6.7972%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.23%)</title><rect x="6.5472%" y="469" width="0.2338%" height="15" fill="rgb(253,57,33)" fg:x="84" fg:w="3"/><text x="6.7972%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="6.7030%" y="453" width="0.0779%" height="15" fill="rgb(229,34,6)" fg:x="86" fg:w="1"/><text x="6.9530%" y="463.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="6.7810%" y="485" width="0.0779%" height="15" fill="rgb(235,191,23)" fg:x="87" fg:w="1"/><text x="7.0310%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="6.7810%" y="469" width="0.0779%" height="15" fill="rgb(217,207,27)" fg:x="87" fg:w="1"/><text x="7.0310%" y="479.50"></text></g><g><title>&lt;plugins_core::moving::actions::AddRouteAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="6.9369%" y="453" width="0.0779%" height="15" fill="rgb(232,41,44)" fg:x="89" fg:w="1"/><text x="7.1869%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="6.9369%" y="437" width="0.0779%" height="15" fill="rgb(221,188,19)" fg:x="89" fg:w="1"/><text x="7.1869%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.9369%" y="421" width="0.0779%" height="15" fill="rgb(245,180,45)" fg:x="89" fg:w="1"/><text x="7.1869%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0148%" y="453" width="0.0779%" height="15" fill="rgb(250,220,42)" fg:x="90" fg:w="1"/><text x="7.2648%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="7.0928%" y="453" width="0.0779%" height="15" fill="rgb(234,16,34)" fg:x="91" fg:w="1"/><text x="7.3428%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.0928%" y="437" width="0.0779%" height="15" fill="rgb(233,217,23)" fg:x="91" fg:w="1"/><text x="7.3428%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.0928%" y="421" width="0.0779%" height="15" fill="rgb(209,22,46)" fg:x="91" fg:w="1"/><text x="7.3428%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (5 samples, 0.39%)</title><rect x="6.8589%" y="485" width="0.3897%" height="15" fill="rgb(213,101,18)" fg:x="88" fg:w="5"/><text x="7.1089%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (5 samples, 0.39%)</title><rect x="6.8589%" y="469" width="0.3897%" height="15" fill="rgb(215,179,52)" fg:x="88" fg:w="5"/><text x="7.1089%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="7.1707%" y="453" width="0.0779%" height="15" fill="rgb(223,50,25)" fg:x="92" fg:w="1"/><text x="7.4207%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.1707%" y="437" width="0.0779%" height="15" fill="rgb(224,51,44)" fg:x="92" fg:w="1"/><text x="7.4207%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.1707%" y="421" width="0.0779%" height="15" fill="rgb(224,13,54)" fg:x="92" fg:w="1"/><text x="7.4207%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.1707%" y="405" width="0.0779%" height="15" fill="rgb(219,58,47)" fg:x="92" fg:w="1"/><text x="7.4207%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="7.2486%" y="485" width="0.0779%" height="15" fill="rgb(246,124,34)" fg:x="93" fg:w="1"/><text x="7.4986%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="7.2486%" y="469" width="0.0779%" height="15" fill="rgb(245,109,25)" fg:x="93" fg:w="1"/><text x="7.4986%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="7.2486%" y="453" width="0.0779%" height="15" fill="rgb(235,48,23)" fg:x="93" fg:w="1"/><text x="7.4986%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="7.2486%" y="437" width="0.0779%" height="15" fill="rgb(229,203,36)" fg:x="93" fg:w="1"/><text x="7.4986%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.3266%" y="485" width="0.0779%" height="15" fill="rgb(234,180,9)" fg:x="94" fg:w="1"/><text x="7.5766%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (25 samples, 1.95%)</title><rect x="5.6118%" y="501" width="1.9486%" height="15" fill="rgb(228,98,45)" fg:x="72" fg:w="25"/><text x="5.8618%" y="511.50">&lt;..</text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="7.4045%" y="485" width="0.1559%" height="15" fill="rgb(240,24,36)" fg:x="95" fg:w="2"/><text x="7.6545%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="7.4825%" y="469" width="0.0779%" height="15" fill="rgb(227,154,19)" fg:x="96" fg:w="1"/><text x="7.7325%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.5604%" y="437" width="0.0779%" height="15" fill="rgb(231,2,48)" fg:x="97" fg:w="1"/><text x="7.8104%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.5604%" y="421" width="0.0779%" height="15" fill="rgb(219,216,0)" fg:x="97" fg:w="1"/><text x="7.8104%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="7.5604%" y="405" width="0.0779%" height="15" fill="rgb(251,88,0)" fg:x="97" fg:w="1"/><text x="7.8104%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="7.5604%" y="389" width="0.0779%" height="15" fill="rgb(242,45,45)" fg:x="97" fg:w="1"/><text x="7.8104%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="7.5604%" y="373" width="0.0779%" height="15" fill="rgb(218,149,45)" fg:x="97" fg:w="1"/><text x="7.8104%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="7.5604%" y="357" width="0.0779%" height="15" fill="rgb(247,194,10)" fg:x="97" fg:w="1"/><text x="7.8104%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.5604%" y="341" width="0.0779%" height="15" fill="rgb(234,33,37)" fg:x="97" fg:w="1"/><text x="7.8104%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.5604%" y="325" width="0.0779%" height="15" fill="rgb(218,61,13)" fg:x="97" fg:w="1"/><text x="7.8104%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.5604%" y="309" width="0.0779%" height="15" fill="rgb(210,80,52)" fg:x="97" fg:w="1"/><text x="7.8104%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="7.5604%" y="293" width="0.0779%" height="15" fill="rgb(218,203,27)" fg:x="97" fg:w="1"/><text x="7.8104%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.5604%" y="277" width="0.0779%" height="15" fill="rgb(209,126,33)" fg:x="97" fg:w="1"/><text x="7.8104%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="7.5604%" y="261" width="0.0779%" height="15" fill="rgb(234,173,41)" fg:x="97" fg:w="1"/><text x="7.8104%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="7.5604%" y="245" width="0.0779%" height="15" fill="rgb(228,166,9)" fg:x="97" fg:w="1"/><text x="7.8104%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="7.5604%" y="229" width="0.0779%" height="15" fill="rgb(208,124,43)" fg:x="97" fg:w="1"/><text x="7.8104%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.5604%" y="213" width="0.0779%" height="15" fill="rgb(212,154,38)" fg:x="97" fg:w="1"/><text x="7.8104%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.08%)</title><rect x="7.7163%" y="261" width="0.0779%" height="15" fill="rgb(246,179,35)" fg:x="99" fg:w="1"/><text x="7.9663%" y="271.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.31%)</title><rect x="7.5604%" y="485" width="0.3118%" height="15" fill="rgb(251,3,50)" fg:x="97" fg:w="4"/><text x="7.8104%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="7.5604%" y="469" width="0.3118%" height="15" fill="rgb(219,96,8)" fg:x="97" fg:w="4"/><text x="7.8104%" y="479.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="7.5604%" y="453" width="0.3118%" height="15" fill="rgb(251,216,33)" fg:x="97" fg:w="4"/><text x="7.8104%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="7.6383%" y="437" width="0.2338%" height="15" fill="rgb(243,145,29)" fg:x="98" fg:w="3"/><text x="7.8883%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.7163%" y="421" width="0.1559%" height="15" fill="rgb(210,75,20)" fg:x="99" fg:w="2"/><text x="7.9663%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.7163%" y="405" width="0.1559%" height="15" fill="rgb(235,56,8)" fg:x="99" fg:w="2"/><text x="7.9663%" y="415.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="7.7163%" y="389" width="0.1559%" height="15" fill="rgb(226,175,49)" fg:x="99" fg:w="2"/><text x="7.9663%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="7.7163%" y="373" width="0.1559%" height="15" fill="rgb(242,204,23)" fg:x="99" fg:w="2"/><text x="7.9663%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="7.7163%" y="357" width="0.1559%" height="15" fill="rgb(225,104,24)" fg:x="99" fg:w="2"/><text x="7.9663%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="7.7163%" y="341" width="0.1559%" height="15" fill="rgb(253,34,1)" fg:x="99" fg:w="2"/><text x="7.9663%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="7.7163%" y="325" width="0.1559%" height="15" fill="rgb(233,199,23)" fg:x="99" fg:w="2"/><text x="7.9663%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="7.7163%" y="309" width="0.1559%" height="15" fill="rgb(247,7,51)" fg:x="99" fg:w="2"/><text x="7.9663%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="7.7163%" y="293" width="0.1559%" height="15" fill="rgb(214,146,12)" fg:x="99" fg:w="2"/><text x="7.9663%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="7.7163%" y="277" width="0.1559%" height="15" fill="rgb(234,181,43)" fg:x="99" fg:w="2"/><text x="7.9663%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.7942%" y="261" width="0.0779%" height="15" fill="rgb(239,148,6)" fg:x="100" fg:w="1"/><text x="8.0442%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="7.7942%" y="245" width="0.0779%" height="15" fill="rgb(206,151,17)" fg:x="100" fg:w="1"/><text x="8.0442%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="7.7942%" y="229" width="0.0779%" height="15" fill="rgb(213,215,10)" fg:x="100" fg:w="1"/><text x="8.0442%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="7.7942%" y="213" width="0.0779%" height="15" fill="rgb(215,220,44)" fg:x="100" fg:w="1"/><text x="8.0442%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.7942%" y="197" width="0.0779%" height="15" fill="rgb(245,205,37)" fg:x="100" fg:w="1"/><text x="8.0442%" y="207.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="7.8722%" y="485" width="0.0779%" height="15" fill="rgb(245,130,43)" fg:x="101" fg:w="1"/><text x="8.1222%" y="495.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.08%)</title><rect x="7.9501%" y="405" width="0.0779%" height="15" fill="rgb(231,227,38)" fg:x="102" fg:w="1"/><text x="8.2001%" y="415.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.08%)</title><rect x="7.9501%" y="389" width="0.0779%" height="15" fill="rgb(233,185,4)" fg:x="102" fg:w="1"/><text x="8.2001%" y="399.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.08%)</title><rect x="7.9501%" y="373" width="0.0779%" height="15" fill="rgb(224,154,43)" fg:x="102" fg:w="1"/><text x="8.2001%" y="383.50"></text></g><g><title>__errno_location (1 samples, 0.08%)</title><rect x="7.9501%" y="357" width="0.0779%" height="15" fill="rgb(235,156,15)" fg:x="102" fg:w="1"/><text x="8.2001%" y="367.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.94%)</title><rect x="7.5604%" y="501" width="0.9353%" height="15" fill="rgb(211,55,43)" fg:x="97" fg:w="12"/><text x="7.8104%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (7 samples, 0.55%)</title><rect x="7.9501%" y="485" width="0.5456%" height="15" fill="rgb(247,149,40)" fg:x="102" fg:w="7"/><text x="8.2001%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (7 samples, 0.55%)</title><rect x="7.9501%" y="469" width="0.5456%" height="15" fill="rgb(232,171,16)" fg:x="102" fg:w="7"/><text x="8.2001%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (7 samples, 0.55%)</title><rect x="7.9501%" y="453" width="0.5456%" height="15" fill="rgb(215,117,49)" fg:x="102" fg:w="7"/><text x="8.2001%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (7 samples, 0.55%)</title><rect x="7.9501%" y="437" width="0.5456%" height="15" fill="rgb(246,194,11)" fg:x="102" fg:w="7"/><text x="8.2001%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (7 samples, 0.55%)</title><rect x="7.9501%" y="421" width="0.5456%" height="15" fill="rgb(242,101,44)" fg:x="102" fg:w="7"/><text x="8.2001%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (6 samples, 0.47%)</title><rect x="8.0281%" y="405" width="0.4677%" height="15" fill="rgb(226,174,6)" fg:x="103" fg:w="6"/><text x="8.2781%" y="415.50"></text></g><g><title>statx (6 samples, 0.47%)</title><rect x="8.0281%" y="389" width="0.4677%" height="15" fill="rgb(213,150,20)" fg:x="103" fg:w="6"/><text x="8.2781%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="9.1193%" y="437" width="0.2338%" height="15" fill="rgb(222,124,42)" fg:x="117" fg:w="3"/><text x="9.3693%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="9.1193%" y="421" width="0.2338%" height="15" fill="rgb(250,19,47)" fg:x="117" fg:w="3"/><text x="9.3693%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.23%)</title><rect x="9.1193%" y="405" width="0.2338%" height="15" fill="rgb(241,217,19)" fg:x="117" fg:w="3"/><text x="9.3693%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="9.1193%" y="389" width="0.2338%" height="15" fill="rgb(207,210,34)" fg:x="117" fg:w="3"/><text x="9.3693%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.23%)</title><rect x="9.1193%" y="373" width="0.2338%" height="15" fill="rgb(244,45,4)" fg:x="117" fg:w="3"/><text x="9.3693%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="9.1193%" y="357" width="0.2338%" height="15" fill="rgb(252,134,50)" fg:x="117" fg:w="3"/><text x="9.3693%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="9.1193%" y="341" width="0.2338%" height="15" fill="rgb(238,74,2)" fg:x="117" fg:w="3"/><text x="9.3693%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.23%)</title><rect x="9.1193%" y="325" width="0.2338%" height="15" fill="rgb(226,58,46)" fg:x="117" fg:w="3"/><text x="9.3693%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.23%)</title><rect x="9.1193%" y="309" width="0.2338%" height="15" fill="rgb(232,83,35)" fg:x="117" fg:w="3"/><text x="9.3693%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="9.1193%" y="293" width="0.2338%" height="15" fill="rgb(212,148,47)" fg:x="117" fg:w="3"/><text x="9.3693%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.23%)</title><rect x="9.1193%" y="277" width="0.2338%" height="15" fill="rgb(235,29,1)" fg:x="117" fg:w="3"/><text x="9.3693%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="9.1193%" y="261" width="0.2338%" height="15" fill="rgb(247,55,37)" fg:x="117" fg:w="3"/><text x="9.3693%" y="271.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (13 samples, 1.01%)</title><rect x="8.5737%" y="485" width="1.0133%" height="15" fill="rgb(222,48,3)" fg:x="110" fg:w="13"/><text x="8.8237%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 1.01%)</title><rect x="8.5737%" y="469" width="1.0133%" height="15" fill="rgb(234,21,33)" fg:x="110" fg:w="13"/><text x="8.8237%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 1.01%)</title><rect x="8.5737%" y="453" width="1.0133%" height="15" fill="rgb(247,178,53)" fg:x="110" fg:w="13"/><text x="8.8237%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="9.3531%" y="437" width="0.2338%" height="15" fill="rgb(225,75,7)" fg:x="120" fg:w="3"/><text x="9.6031%" y="447.50"></text></g><g><title>glob::is_dir (10 samples, 0.78%)</title><rect x="9.6648%" y="437" width="0.7794%" height="15" fill="rgb(219,199,7)" fg:x="124" fg:w="10"/><text x="9.9148%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (10 samples, 0.78%)</title><rect x="9.6648%" y="421" width="0.7794%" height="15" fill="rgb(209,93,42)" fg:x="124" fg:w="10"/><text x="9.9148%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (10 samples, 0.78%)</title><rect x="9.6648%" y="405" width="0.7794%" height="15" fill="rgb(240,175,17)" fg:x="124" fg:w="10"/><text x="9.9148%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (10 samples, 0.78%)</title><rect x="9.6648%" y="389" width="0.7794%" height="15" fill="rgb(232,106,7)" fg:x="124" fg:w="10"/><text x="9.9148%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (10 samples, 0.78%)</title><rect x="9.6648%" y="373" width="0.7794%" height="15" fill="rgb(242,106,43)" fg:x="124" fg:w="10"/><text x="9.9148%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (10 samples, 0.78%)</title><rect x="9.6648%" y="357" width="0.7794%" height="15" fill="rgb(242,61,37)" fg:x="124" fg:w="10"/><text x="9.9148%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (10 samples, 0.78%)</title><rect x="9.6648%" y="341" width="0.7794%" height="15" fill="rgb(205,72,10)" fg:x="124" fg:w="10"/><text x="9.9148%" y="351.50"></text></g><g><title>statx (10 samples, 0.78%)</title><rect x="9.6648%" y="325" width="0.7794%" height="15" fill="rgb(214,184,36)" fg:x="124" fg:w="10"/><text x="9.9148%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.94%)</title><rect x="9.5869%" y="469" width="0.9353%" height="15" fill="rgb(206,107,18)" fg:x="123" fg:w="12"/><text x="9.8369%" y="479.50"></text></g><g><title>glob::fill_todo (12 samples, 0.94%)</title><rect x="9.5869%" y="453" width="0.9353%" height="15" fill="rgb(210,75,5)" fg:x="123" fg:w="12"/><text x="9.8369%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="10.4443%" y="437" width="0.0779%" height="15" fill="rgb(205,3,19)" fg:x="134" fg:w="1"/><text x="10.6943%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="10.4443%" y="421" width="0.0779%" height="15" fill="rgb(207,181,42)" fg:x="134" fg:w="1"/><text x="10.6943%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="10.4443%" y="405" width="0.0779%" height="15" fill="rgb(229,179,43)" fg:x="134" fg:w="1"/><text x="10.6943%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="10.4443%" y="389" width="0.0779%" height="15" fill="rgb(246,95,30)" fg:x="134" fg:w="1"/><text x="10.6943%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="10.4443%" y="373" width="0.0779%" height="15" fill="rgb(234,144,45)" fg:x="134" fg:w="1"/><text x="10.6943%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="10.4443%" y="357" width="0.0779%" height="15" fill="rgb(250,54,25)" fg:x="134" fg:w="1"/><text x="10.6943%" y="367.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="10.4443%" y="341" width="0.0779%" height="15" fill="rgb(215,195,40)" fg:x="134" fg:w="1"/><text x="10.6943%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;glob::Paths&gt; (1 samples, 0.08%)</title><rect x="10.5222%" y="469" width="0.0779%" height="15" fill="rgb(233,188,42)" fg:x="135" fg:w="1"/><text x="10.7722%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.5222%" y="453" width="0.0779%" height="15" fill="rgb(247,227,35)" fg:x="135" fg:w="1"/><text x="10.7722%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5222%" y="437" width="0.0779%" height="15" fill="rgb(249,124,27)" fg:x="135" fg:w="1"/><text x="10.7722%" y="447.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="10.6781%" y="437" width="0.0779%" height="15" fill="rgb(219,207,25)" fg:x="137" fg:w="1"/><text x="10.9281%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="10.6781%" y="421" width="0.0779%" height="15" fill="rgb(241,216,47)" fg:x="137" fg:w="1"/><text x="10.9281%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="10.6781%" y="405" width="0.0779%" height="15" fill="rgb(233,82,50)" fg:x="137" fg:w="1"/><text x="10.9281%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="10.6781%" y="389" width="0.0779%" height="15" fill="rgb(232,63,2)" fg:x="137" fg:w="1"/><text x="10.9281%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="10.6781%" y="373" width="0.0779%" height="15" fill="rgb(236,184,28)" fg:x="137" fg:w="1"/><text x="10.9281%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="10.6781%" y="357" width="0.0779%" height="15" fill="rgb(254,63,27)" fg:x="137" fg:w="1"/><text x="10.9281%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="10.6781%" y="341" width="0.0779%" height="15" fill="rgb(253,106,28)" fg:x="137" fg:w="1"/><text x="10.9281%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.08%)</title><rect x="10.6781%" y="325" width="0.0779%" height="15" fill="rgb(225,141,39)" fg:x="137" fg:w="1"/><text x="10.9281%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.08%)</title><rect x="10.6781%" y="309" width="0.0779%" height="15" fill="rgb(222,157,20)" fg:x="137" fg:w="1"/><text x="10.9281%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="10.7560%" y="421" width="0.3118%" height="15" fill="rgb(210,190,9)" fg:x="138" fg:w="4"/><text x="11.0060%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.31%)</title><rect x="10.7560%" y="405" width="0.3118%" height="15" fill="rgb(242,167,7)" fg:x="138" fg:w="4"/><text x="11.0060%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.31%)</title><rect x="10.7560%" y="389" width="0.3118%" height="15" fill="rgb(227,82,41)" fg:x="138" fg:w="4"/><text x="11.0060%" y="399.50"></text></g><g><title>realloc (4 samples, 0.31%)</title><rect x="10.7560%" y="373" width="0.3118%" height="15" fill="rgb(222,131,13)" fg:x="138" fg:w="4"/><text x="11.0060%" y="383.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (34 samples, 2.65%)</title><rect x="8.4957%" y="501" width="2.6500%" height="15" fill="rgb(221,98,26)" fg:x="109" fg:w="34"/><text x="8.7457%" y="511.50">&lt;p..</text></g><g><title>plugins_rune::sources::load_directory_sources (20 samples, 1.56%)</title><rect x="9.5869%" y="485" width="1.5588%" height="15" fill="rgb(251,63,52)" fg:x="123" fg:w="20"/><text x="9.8369%" y="495.50"></text></g><g><title>glob::glob (7 samples, 0.55%)</title><rect x="10.6002%" y="469" width="0.5456%" height="15" fill="rgb(246,25,43)" fg:x="136" fg:w="7"/><text x="10.8502%" y="479.50"></text></g><g><title>glob::glob_with (7 samples, 0.55%)</title><rect x="10.6002%" y="453" width="0.5456%" height="15" fill="rgb(247,167,15)" fg:x="136" fg:w="7"/><text x="10.8502%" y="463.50"></text></g><g><title>glob::Pattern::new (5 samples, 0.39%)</title><rect x="10.7560%" y="437" width="0.3897%" height="15" fill="rgb(240,104,42)" fg:x="138" fg:w="5"/><text x="11.0060%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="11.0678%" y="421" width="0.0779%" height="15" fill="rgb(224,54,6)" fg:x="142" fg:w="1"/><text x="11.3178%" y="431.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="11.1458%" y="501" width="0.0779%" height="15" fill="rgb(244,108,35)" fg:x="143" fg:w="1"/><text x="11.3958%" y="511.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="11.1458%" y="485" width="0.0779%" height="15" fill="rgb(216,154,2)" fg:x="143" fg:w="1"/><text x="11.3958%" y="495.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="11.1458%" y="469" width="0.0779%" height="15" fill="rgb(222,8,47)" fg:x="143" fg:w="1"/><text x="11.3958%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="11.1458%" y="453" width="0.0779%" height="15" fill="rgb(252,93,1)" fg:x="143" fg:w="1"/><text x="11.3958%" y="463.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="11.1458%" y="437" width="0.0779%" height="15" fill="rgb(223,226,51)" fg:x="143" fg:w="1"/><text x="11.3958%" y="447.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.08%)</title><rect x="11.1458%" y="421" width="0.0779%" height="15" fill="rgb(206,147,9)" fg:x="143" fg:w="1"/><text x="11.3958%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.3016%" y="485" width="0.1559%" height="15" fill="rgb(248,180,41)" fg:x="145" fg:w="2"/><text x="11.5516%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (5 samples, 0.39%)</title><rect x="11.2237%" y="501" width="0.3897%" height="15" fill="rgb(209,47,50)" fg:x="144" fg:w="5"/><text x="11.4737%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (2 samples, 0.16%)</title><rect x="11.4575%" y="485" width="0.1559%" height="15" fill="rgb(243,65,31)" fg:x="147" fg:w="2"/><text x="11.7075%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5355%" y="469" width="0.0779%" height="15" fill="rgb(228,128,1)" fg:x="148" fg:w="1"/><text x="11.7855%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (83 samples, 6.47%)</title><rect x="5.5339%" y="517" width="6.4692%" height="15" fill="rgb(231,192,16)" fg:x="71" fg:w="83"/><text x="5.7839%" y="527.50">kernel::..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (5 samples, 0.39%)</title><rect x="11.6134%" y="501" width="0.3897%" height="15" fill="rgb(224,26,40)" fg:x="149" fg:w="5"/><text x="11.8634%" y="511.50"></text></g><g><title>clock_gettime (4 samples, 0.31%)</title><rect x="11.6913%" y="485" width="0.3118%" height="15" fill="rgb(214,192,17)" fg:x="150" fg:w="4"/><text x="11.9413%" y="495.50"></text></g><g><title>engine::session::Session::initialize (87 samples, 6.78%)</title><rect x="5.3780%" y="533" width="6.7810%" height="15" fill="rgb(225,147,18)" fg:x="69" fg:w="87"/><text x="5.6280%" y="543.50">engine::s..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="12.0031%" y="517" width="0.1559%" height="15" fill="rgb(205,35,11)" fg:x="154" fg:w="2"/><text x="12.2531%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="12.0031%" y="501" width="0.1559%" height="15" fill="rgb(242,40,42)" fg:x="154" fg:w="2"/><text x="12.2531%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.0811%" y="485" width="0.0779%" height="15" fill="rgb(250,170,13)" fg:x="155" fg:w="1"/><text x="12.3311%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.0811%" y="469" width="0.0779%" height="15" fill="rgb(240,161,28)" fg:x="155" fg:w="1"/><text x="12.3311%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.0811%" y="453" width="0.0779%" height="15" fill="rgb(245,179,12)" fg:x="155" fg:w="1"/><text x="12.3311%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (95 samples, 7.40%)</title><rect x="5.0663%" y="581" width="7.4045%" height="15" fill="rgb(250,92,32)" fg:x="65" fg:w="95"/><text x="5.3163%" y="591.50">&lt;engine::d..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (95 samples, 7.40%)</title><rect x="5.0663%" y="565" width="7.4045%" height="15" fill="rgb(233,10,40)" fg:x="65" fg:w="95"/><text x="5.3163%" y="575.50">engine::do..</text></g><g><title>engine::session::Session::new (95 samples, 7.40%)</title><rect x="5.0663%" y="549" width="7.4045%" height="15" fill="rgb(217,98,1)" fg:x="65" fg:w="95"/><text x="5.3163%" y="559.50">engine::se..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (4 samples, 0.31%)</title><rect x="12.1590%" y="533" width="0.3118%" height="15" fill="rgb(238,202,7)" fg:x="156" fg:w="4"/><text x="12.4090%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="12.1590%" y="517" width="0.3118%" height="15" fill="rgb(222,91,3)" fg:x="156" fg:w="4"/><text x="12.4090%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="12.3149%" y="501" width="0.1559%" height="15" fill="rgb(211,170,49)" fg:x="158" fg:w="2"/><text x="12.5649%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="12.3149%" y="485" width="0.1559%" height="15" fill="rgb(253,139,18)" fg:x="158" fg:w="2"/><text x="12.5649%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="12.3149%" y="469" width="0.1559%" height="15" fill="rgb(222,4,43)" fg:x="158" fg:w="2"/><text x="12.5649%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4708%" y="533" width="0.0779%" height="15" fill="rgb(207,205,12)" fg:x="160" fg:w="1"/><text x="12.7208%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5487%" y="517" width="0.0779%" height="15" fill="rgb(216,159,46)" fg:x="161" fg:w="1"/><text x="12.7987%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="12.4708%" y="549" width="0.2338%" height="15" fill="rgb(236,115,1)" fg:x="160" fg:w="3"/><text x="12.7208%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.5487%" y="533" width="0.1559%" height="15" fill="rgb(251,35,33)" fg:x="161" fg:w="2"/><text x="12.7987%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.6267%" y="517" width="0.0779%" height="15" fill="rgb(248,62,51)" fg:x="162" fg:w="1"/><text x="12.8767%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.7825%" y="517" width="0.0779%" height="15" fill="rgb(254,180,19)" fg:x="164" fg:w="1"/><text x="13.0325%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="12.7825%" y="501" width="0.0779%" height="15" fill="rgb(217,100,32)" fg:x="164" fg:w="1"/><text x="13.0325%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="12.7825%" y="485" width="0.0779%" height="15" fill="rgb(224,71,22)" fg:x="164" fg:w="1"/><text x="13.0325%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7825%" y="469" width="0.0779%" height="15" fill="rgb(251,185,33)" fg:x="164" fg:w="1"/><text x="13.0325%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7825%" y="453" width="0.0779%" height="15" fill="rgb(209,75,48)" fg:x="164" fg:w="1"/><text x="13.0325%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.7825%" y="437" width="0.0779%" height="15" fill="rgb(253,190,16)" fg:x="164" fg:w="1"/><text x="13.0325%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.7825%" y="421" width="0.0779%" height="15" fill="rgb(226,140,1)" fg:x="164" fg:w="1"/><text x="13.0325%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.7825%" y="405" width="0.0779%" height="15" fill="rgb(206,75,30)" fg:x="164" fg:w="1"/><text x="13.0325%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.7825%" y="389" width="0.0779%" height="15" fill="rgb(231,208,37)" fg:x="164" fg:w="1"/><text x="13.0325%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.7825%" y="373" width="0.0779%" height="15" fill="rgb(238,136,40)" fg:x="164" fg:w="1"/><text x="13.0325%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="13.1723%" y="437" width="0.2338%" height="15" fill="rgb(247,137,17)" fg:x="169" fg:w="3"/><text x="13.4223%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="13.1723%" y="421" width="0.2338%" height="15" fill="rgb(240,60,40)" fg:x="169" fg:w="3"/><text x="13.4223%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="13.1723%" y="405" width="0.2338%" height="15" fill="rgb(236,68,50)" fg:x="169" fg:w="3"/><text x="13.4223%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="13.1723%" y="389" width="0.2338%" height="15" fill="rgb(230,42,12)" fg:x="169" fg:w="3"/><text x="13.4223%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.2502%" y="373" width="0.1559%" height="15" fill="rgb(219,16,16)" fg:x="170" fg:w="2"/><text x="13.5002%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.2502%" y="357" width="0.1559%" height="15" fill="rgb(220,38,35)" fg:x="170" fg:w="2"/><text x="13.5002%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="13.2502%" y="341" width="0.1559%" height="15" fill="rgb(228,33,1)" fg:x="170" fg:w="2"/><text x="13.5002%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.31%)</title><rect x="13.1723%" y="453" width="0.3118%" height="15" fill="rgb(241,46,31)" fg:x="169" fg:w="4"/><text x="13.4223%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.4061%" y="437" width="0.0779%" height="15" fill="rgb(232,58,20)" fg:x="172" fg:w="1"/><text x="13.6561%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.4061%" y="421" width="0.0779%" height="15" fill="rgb(206,228,53)" fg:x="172" fg:w="1"/><text x="13.6561%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.4840%" y="437" width="0.0779%" height="15" fill="rgb(206,88,33)" fg:x="173" fg:w="1"/><text x="13.7340%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.5620%" y="389" width="0.1559%" height="15" fill="rgb(238,69,7)" fg:x="174" fg:w="2"/><text x="13.8120%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.6399%" y="373" width="0.0779%" height="15" fill="rgb(250,21,46)" fg:x="175" fg:w="1"/><text x="13.8899%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.6399%" y="357" width="0.0779%" height="15" fill="rgb(215,212,21)" fg:x="175" fg:w="1"/><text x="13.8899%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.6399%" y="341" width="0.0779%" height="15" fill="rgb(211,35,12)" fg:x="175" fg:w="1"/><text x="13.8899%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="13.5620%" y="437" width="0.2338%" height="15" fill="rgb(231,184,16)" fg:x="174" fg:w="3"/><text x="13.8120%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="13.5620%" y="421" width="0.2338%" height="15" fill="rgb(242,140,15)" fg:x="174" fg:w="3"/><text x="13.8120%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="13.5620%" y="405" width="0.2338%" height="15" fill="rgb(220,37,14)" fg:x="174" fg:w="3"/><text x="13.8120%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="13.7178%" y="389" width="0.0779%" height="15" fill="rgb(223,146,22)" fg:x="176" fg:w="1"/><text x="13.9678%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.7958%" y="373" width="0.0779%" height="15" fill="rgb(216,132,15)" fg:x="177" fg:w="1"/><text x="14.0458%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.7958%" y="357" width="0.0779%" height="15" fill="rgb(248,83,5)" fg:x="177" fg:w="1"/><text x="14.0458%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.8737%" y="357" width="0.0779%" height="15" fill="rgb(231,206,48)" fg:x="178" fg:w="1"/><text x="14.1237%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="13.7958%" y="421" width="0.2338%" height="15" fill="rgb(253,185,37)" fg:x="177" fg:w="3"/><text x="14.0458%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="13.7958%" y="405" width="0.2338%" height="15" fill="rgb(208,21,44)" fg:x="177" fg:w="3"/><text x="14.0458%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="13.7958%" y="389" width="0.2338%" height="15" fill="rgb(236,125,4)" fg:x="177" fg:w="3"/><text x="14.0458%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="13.8737%" y="373" width="0.1559%" height="15" fill="rgb(226,134,25)" fg:x="178" fg:w="2"/><text x="14.1237%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="13.9517%" y="357" width="0.0779%" height="15" fill="rgb(250,201,12)" fg:x="179" fg:w="1"/><text x="14.2017%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="13.9517%" y="341" width="0.0779%" height="15" fill="rgb(225,92,18)" fg:x="179" fg:w="1"/><text x="14.2017%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.0296%" y="421" width="0.0779%" height="15" fill="rgb(227,35,22)" fg:x="180" fg:w="1"/><text x="14.2796%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.0296%" y="405" width="0.0779%" height="15" fill="rgb(214,180,52)" fg:x="180" fg:w="1"/><text x="14.2796%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.0296%" y="389" width="0.0779%" height="15" fill="rgb(233,55,38)" fg:x="180" fg:w="1"/><text x="14.2796%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.0296%" y="373" width="0.0779%" height="15" fill="rgb(249,171,43)" fg:x="180" fg:w="1"/><text x="14.2796%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.1855%" y="389" width="0.0779%" height="15" fill="rgb(239,87,2)" fg:x="182" fg:w="1"/><text x="14.4355%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.1855%" y="373" width="0.0779%" height="15" fill="rgb(248,141,5)" fg:x="182" fg:w="1"/><text x="14.4355%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.1855%" y="357" width="0.0779%" height="15" fill="rgb(238,33,42)" fg:x="182" fg:w="1"/><text x="14.4355%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.1855%" y="341" width="0.0779%" height="15" fill="rgb(231,57,19)" fg:x="182" fg:w="1"/><text x="14.4355%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.1855%" y="325" width="0.0779%" height="15" fill="rgb(214,78,53)" fg:x="182" fg:w="1"/><text x="14.4355%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.1855%" y="309" width="0.0779%" height="15" fill="rgb(206,132,29)" fg:x="182" fg:w="1"/><text x="14.4355%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.1855%" y="293" width="0.0779%" height="15" fill="rgb(248,174,31)" fg:x="182" fg:w="1"/><text x="14.4355%" y="303.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="14.2634%" y="389" width="0.3118%" height="15" fill="rgb(221,87,13)" fg:x="183" fg:w="4"/><text x="14.5134%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="14.3414%" y="373" width="0.2338%" height="15" fill="rgb(223,197,17)" fg:x="184" fg:w="3"/><text x="14.5914%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.4193%" y="357" width="0.1559%" height="15" fill="rgb(220,144,50)" fg:x="185" fg:w="2"/><text x="14.6693%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.4973%" y="341" width="0.0779%" height="15" fill="rgb(244,201,11)" fg:x="186" fg:w="1"/><text x="14.7473%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.4973%" y="325" width="0.0779%" height="15" fill="rgb(249,81,34)" fg:x="186" fg:w="1"/><text x="14.7473%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.70%)</title><rect x="14.1076%" y="421" width="0.7015%" height="15" fill="rgb(205,161,12)" fg:x="181" fg:w="9"/><text x="14.3576%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.70%)</title><rect x="14.1076%" y="405" width="0.7015%" height="15" fill="rgb(252,139,50)" fg:x="181" fg:w="9"/><text x="14.3576%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="14.5752%" y="389" width="0.2338%" height="15" fill="rgb(205,169,14)" fg:x="187" fg:w="3"/><text x="14.8252%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="14.6532%" y="373" width="0.1559%" height="15" fill="rgb(248,198,33)" fg:x="188" fg:w="2"/><text x="14.9032%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.17%)</title><rect x="13.7958%" y="437" width="1.1691%" height="15" fill="rgb(236,23,21)" fg:x="177" fg:w="15"/><text x="14.0458%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.8090%" y="421" width="0.1559%" height="15" fill="rgb(231,13,38)" fg:x="190" fg:w="2"/><text x="15.0590%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="14.8090%" y="405" width="0.1559%" height="15" fill="rgb(239,139,21)" fg:x="190" fg:w="2"/><text x="15.0590%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="14.8090%" y="389" width="0.1559%" height="15" fill="rgb(222,164,45)" fg:x="190" fg:w="2"/><text x="15.0590%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.64%)</title><rect x="13.4840%" y="453" width="1.6368%" height="15" fill="rgb(230,52,27)" fg:x="173" fg:w="21"/><text x="13.7340%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="14.9649%" y="437" width="0.1559%" height="15" fill="rgb(227,143,42)" fg:x="192" fg:w="2"/><text x="15.2149%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.0429%" y="421" width="0.0779%" height="15" fill="rgb(249,127,1)" fg:x="193" fg:w="1"/><text x="15.2929%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.0429%" y="405" width="0.0779%" height="15" fill="rgb(243,107,26)" fg:x="193" fg:w="1"/><text x="15.2929%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.0429%" y="389" width="0.0779%" height="15" fill="rgb(225,7,45)" fg:x="193" fg:w="1"/><text x="15.2929%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.0429%" y="373" width="0.0779%" height="15" fill="rgb(241,88,38)" fg:x="193" fg:w="1"/><text x="15.2929%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.0429%" y="357" width="0.0779%" height="15" fill="rgb(226,121,9)" fg:x="193" fg:w="1"/><text x="15.2929%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.26%)</title><rect x="13.0943%" y="469" width="2.2603%" height="15" fill="rgb(253,60,29)" fg:x="168" fg:w="29"/><text x="13.3443%" y="479.50">&lt;..</text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="15.1208%" y="453" width="0.2338%" height="15" fill="rgb(244,181,39)" fg:x="194" fg:w="3"/><text x="15.3708%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.1988%" y="437" width="0.1559%" height="15" fill="rgb(252,203,31)" fg:x="195" fg:w="2"/><text x="15.4488%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.1988%" y="421" width="0.1559%" height="15" fill="rgb(224,120,8)" fg:x="195" fg:w="2"/><text x="15.4488%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="15.1988%" y="405" width="0.1559%" height="15" fill="rgb(205,171,54)" fg:x="195" fg:w="2"/><text x="15.4488%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="15.1988%" y="389" width="0.1559%" height="15" fill="rgb(235,89,11)" fg:x="195" fg:w="2"/><text x="15.4488%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.1988%" y="373" width="0.1559%" height="15" fill="rgb(212,180,28)" fg:x="195" fg:w="2"/><text x="15.4488%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.4326%" y="405" width="0.0779%" height="15" fill="rgb(247,84,49)" fg:x="198" fg:w="1"/><text x="15.6826%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5105%" y="389" width="0.0779%" height="15" fill="rgb(236,187,52)" fg:x="199" fg:w="1"/><text x="15.7605%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="15.3546%" y="469" width="0.3118%" height="15" fill="rgb(227,24,15)" fg:x="197" fg:w="4"/><text x="15.6046%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.31%)</title><rect x="15.3546%" y="453" width="0.3118%" height="15" fill="rgb(227,211,13)" fg:x="197" fg:w="4"/><text x="15.6046%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="15.3546%" y="437" width="0.3118%" height="15" fill="rgb(245,52,14)" fg:x="197" fg:w="4"/><text x="15.6046%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="15.3546%" y="421" width="0.3118%" height="15" fill="rgb(225,185,13)" fg:x="197" fg:w="4"/><text x="15.6046%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.5105%" y="405" width="0.1559%" height="15" fill="rgb(217,160,29)" fg:x="199" fg:w="2"/><text x="15.7605%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="15.5885%" y="389" width="0.0779%" height="15" fill="rgb(216,115,53)" fg:x="200" fg:w="1"/><text x="15.8385%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7443%" y="437" width="0.0779%" height="15" fill="rgb(236,99,5)" fg:x="202" fg:w="1"/><text x="15.9943%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.7443%" y="421" width="0.0779%" height="15" fill="rgb(222,60,38)" fg:x="202" fg:w="1"/><text x="15.9943%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.31%)</title><rect x="15.6664%" y="453" width="0.3118%" height="15" fill="rgb(212,82,22)" fg:x="201" fg:w="4"/><text x="15.9164%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="15.8223%" y="437" width="0.1559%" height="15" fill="rgb(214,48,28)" fg:x="203" fg:w="2"/><text x="16.0723%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9782%" y="421" width="0.0779%" height="15" fill="rgb(245,196,50)" fg:x="205" fg:w="1"/><text x="16.2282%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.0561%" y="421" width="0.1559%" height="15" fill="rgb(225,159,46)" fg:x="206" fg:w="2"/><text x="16.3061%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2120%" y="421" width="0.0779%" height="15" fill="rgb(207,195,48)" fg:x="208" fg:w="1"/><text x="16.4620%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.2120%" y="405" width="0.0779%" height="15" fill="rgb(240,73,3)" fg:x="208" fg:w="1"/><text x="16.4620%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="16.4458%" y="357" width="0.0779%" height="15" fill="rgb(245,57,23)" fg:x="211" fg:w="1"/><text x="16.6958%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4458%" y="341" width="0.0779%" height="15" fill="rgb(240,75,18)" fg:x="211" fg:w="1"/><text x="16.6958%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5238%" y="325" width="0.0779%" height="15" fill="rgb(238,168,12)" fg:x="212" fg:w="1"/><text x="16.7738%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5238%" y="309" width="0.0779%" height="15" fill="rgb(226,20,40)" fg:x="212" fg:w="1"/><text x="16.7738%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="16.4458%" y="373" width="0.3118%" height="15" fill="rgb(224,130,35)" fg:x="211" fg:w="4"/><text x="16.6958%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="16.5238%" y="357" width="0.2338%" height="15" fill="rgb(225,63,41)" fg:x="212" fg:w="3"/><text x="16.7738%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="16.5238%" y="341" width="0.2338%" height="15" fill="rgb(219,3,3)" fg:x="212" fg:w="3"/><text x="16.7738%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="16.6017%" y="325" width="0.1559%" height="15" fill="rgb(218,157,4)" fg:x="213" fg:w="2"/><text x="16.8517%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="16.6017%" y="309" width="0.1559%" height="15" fill="rgb(232,76,36)" fg:x="213" fg:w="2"/><text x="16.8517%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9135%" y="341" width="0.0779%" height="15" fill="rgb(247,36,0)" fg:x="217" fg:w="1"/><text x="17.1635%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.9914%" y="309" width="0.0779%" height="15" fill="rgb(205,2,34)" fg:x="218" fg:w="1"/><text x="17.2414%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9914%" y="293" width="0.0779%" height="15" fill="rgb(239,136,13)" fg:x="218" fg:w="1"/><text x="17.2414%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="16.9914%" y="325" width="0.2338%" height="15" fill="rgb(253,122,12)" fg:x="218" fg:w="3"/><text x="17.2414%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="17.0694%" y="309" width="0.1559%" height="15" fill="rgb(222,174,7)" fg:x="219" fg:w="2"/><text x="17.3194%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1473%" y="293" width="0.0779%" height="15" fill="rgb(208,191,42)" fg:x="220" fg:w="1"/><text x="17.3973%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.86%)</title><rect x="16.4458%" y="389" width="0.8574%" height="15" fill="rgb(237,212,15)" fg:x="211" fg:w="11"/><text x="16.6958%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="16.7576%" y="373" width="0.5456%" height="15" fill="rgb(215,65,20)" fg:x="215" fg:w="7"/><text x="17.0076%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="16.8355%" y="357" width="0.4677%" height="15" fill="rgb(232,103,11)" fg:x="216" fg:w="6"/><text x="17.0855%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="16.9914%" y="341" width="0.3118%" height="15" fill="rgb(235,148,18)" fg:x="218" fg:w="4"/><text x="17.2414%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2253%" y="325" width="0.0779%" height="15" fill="rgb(240,173,7)" fg:x="221" fg:w="1"/><text x="17.4753%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.01%)</title><rect x="16.3679%" y="405" width="1.0133%" height="15" fill="rgb(228,182,25)" fg:x="210" fg:w="13"/><text x="16.6179%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="17.3032%" y="389" width="0.0779%" height="15" fill="rgb(247,3,52)" fg:x="222" fg:w="1"/><text x="17.5532%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3032%" y="373" width="0.0779%" height="15" fill="rgb(226,155,8)" fg:x="222" fg:w="1"/><text x="17.5532%" y="383.50"></text></g><g><title>engine::session::Session::flush (64 samples, 4.99%)</title><rect x="12.4708%" y="565" width="4.9883%" height="15" fill="rgb(243,195,38)" fg:x="160" fg:w="64"/><text x="12.7208%" y="575.50">engine..</text></g><g><title>engine::session::state::State::close (61 samples, 4.75%)</title><rect x="12.7046%" y="549" width="4.7545%" height="15" fill="rgb(254,181,33)" fg:x="163" fg:w="61"/><text x="12.9546%" y="559.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (60 samples, 4.68%)</title><rect x="12.7825%" y="533" width="4.6765%" height="15" fill="rgb(232,98,23)" fg:x="164" fg:w="60"/><text x="13.0325%" y="543.50">engin..</text></g><g><title>core::iter::adapters::try_process (59 samples, 4.60%)</title><rect x="12.8605%" y="517" width="4.5986%" height="15" fill="rgb(205,23,10)" fg:x="165" fg:w="59"/><text x="13.1105%" y="527.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (59 samples, 4.60%)</title><rect x="12.8605%" y="501" width="4.5986%" height="15" fill="rgb(212,124,38)" fg:x="165" fg:w="59"/><text x="13.1105%" y="511.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (58 samples, 4.52%)</title><rect x="12.9384%" y="485" width="4.5207%" height="15" fill="rgb(228,207,2)" fg:x="166" fg:w="58"/><text x="13.1884%" y="495.50">engin..</text></g><g><title>kernel::model::any_entity_changes (23 samples, 1.79%)</title><rect x="15.6664%" y="469" width="1.7927%" height="15" fill="rgb(215,120,22)" fg:x="201" fg:w="23"/><text x="15.9164%" y="479.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.48%)</title><rect x="15.9782%" y="453" width="1.4809%" height="15" fill="rgb(251,172,33)" fg:x="205" fg:w="19"/><text x="16.2282%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.48%)</title><rect x="15.9782%" y="437" width="1.4809%" height="15" fill="rgb(250,83,2)" fg:x="205" fg:w="19"/><text x="16.2282%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.17%)</title><rect x="16.2899%" y="421" width="1.1691%" height="15" fill="rgb(210,132,53)" fg:x="209" fg:w="15"/><text x="16.5399%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.3811%" y="405" width="0.0779%" height="15" fill="rgb(221,208,36)" fg:x="223" fg:w="1"/><text x="17.6311%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.3811%" y="389" width="0.0779%" height="15" fill="rgb(205,192,46)" fg:x="223" fg:w="1"/><text x="17.6311%" y="399.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="17.4591%" y="565" width="0.0779%" height="15" fill="rgb(223,163,14)" fg:x="224" fg:w="1"/><text x="17.7091%" y="575.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="17.4591%" y="549" width="0.0779%" height="15" fill="rgb(218,41,28)" fg:x="224" fg:w="1"/><text x="17.7091%" y="559.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="17.4591%" y="533" width="0.0779%" height="15" fill="rgb(235,104,10)" fg:x="224" fg:w="1"/><text x="17.7091%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="17.4591%" y="517" width="0.0779%" height="15" fill="rgb(246,17,4)" fg:x="224" fg:w="1"/><text x="17.7091%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.5370%" y="517" width="0.0779%" height="15" fill="rgb(240,7,16)" fg:x="225" fg:w="1"/><text x="17.7870%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.5370%" y="501" width="0.0779%" height="15" fill="rgb(213,160,23)" fg:x="225" fg:w="1"/><text x="17.7870%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5370%" y="485" width="0.0779%" height="15" fill="rgb(251,179,49)" fg:x="225" fg:w="1"/><text x="17.7870%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="17.5370%" y="533" width="0.2338%" height="15" fill="rgb(247,198,10)" fg:x="225" fg:w="3"/><text x="17.7870%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.6150%" y="517" width="0.1559%" height="15" fill="rgb(220,65,29)" fg:x="226" fg:w="2"/><text x="17.8650%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.6150%" y="501" width="0.1559%" height="15" fill="rgb(237,171,28)" fg:x="226" fg:w="2"/><text x="17.8650%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="17.6150%" y="485" width="0.1559%" height="15" fill="rgb(228,44,26)" fg:x="226" fg:w="2"/><text x="17.8650%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.6150%" y="469" width="0.1559%" height="15" fill="rgb(216,210,27)" fg:x="226" fg:w="2"/><text x="17.8650%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.6150%" y="453" width="0.1559%" height="15" fill="rgb(252,10,17)" fg:x="226" fg:w="2"/><text x="17.8650%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.6150%" y="437" width="0.1559%" height="15" fill="rgb(214,172,30)" fg:x="226" fg:w="2"/><text x="17.8650%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.6929%" y="421" width="0.0779%" height="15" fill="rgb(253,130,48)" fg:x="227" fg:w="1"/><text x="17.9429%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.6929%" y="405" width="0.0779%" height="15" fill="rgb(226,99,43)" fg:x="227" fg:w="1"/><text x="17.9429%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="17.5370%" y="549" width="0.3118%" height="15" fill="rgb(239,111,26)" fg:x="225" fg:w="4"/><text x="17.7870%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="17.7708%" y="533" width="0.0779%" height="15" fill="rgb(240,27,53)" fg:x="228" fg:w="1"/><text x="18.0208%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="17.8488%" y="533" width="0.1559%" height="15" fill="rgb(254,163,12)" fg:x="229" fg:w="2"/><text x="18.0988%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9267%" y="517" width="0.0779%" height="15" fill="rgb(225,51,48)" fg:x="230" fg:w="1"/><text x="18.1767%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9267%" y="501" width="0.0779%" height="15" fill="rgb(205,19,32)" fg:x="230" fg:w="1"/><text x="18.1767%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.9267%" y="485" width="0.0779%" height="15" fill="rgb(218,119,26)" fg:x="230" fg:w="1"/><text x="18.1767%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9267%" y="469" width="0.0779%" height="15" fill="rgb(231,173,33)" fg:x="230" fg:w="1"/><text x="18.1767%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9267%" y="453" width="0.0779%" height="15" fill="rgb(241,100,29)" fg:x="230" fg:w="1"/><text x="18.1767%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9267%" y="437" width="0.0779%" height="15" fill="rgb(250,194,34)" fg:x="230" fg:w="1"/><text x="18.1767%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9267%" y="421" width="0.0779%" height="15" fill="rgb(215,23,50)" fg:x="230" fg:w="1"/><text x="18.1767%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9267%" y="405" width="0.0779%" height="15" fill="rgb(206,49,37)" fg:x="230" fg:w="1"/><text x="18.1767%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.9267%" y="389" width="0.0779%" height="15" fill="rgb(247,39,21)" fg:x="230" fg:w="1"/><text x="18.1767%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.9267%" y="373" width="0.0779%" height="15" fill="rgb(209,220,15)" fg:x="230" fg:w="1"/><text x="18.1767%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.9267%" y="357" width="0.0779%" height="15" fill="rgb(206,41,33)" fg:x="230" fg:w="1"/><text x="18.1767%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.9267%" y="341" width="0.0779%" height="15" fill="rgb(221,225,45)" fg:x="230" fg:w="1"/><text x="18.1767%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.9267%" y="325" width="0.0779%" height="15" fill="rgb(216,27,18)" fg:x="230" fg:w="1"/><text x="18.1767%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.9267%" y="309" width="0.0779%" height="15" fill="rgb(250,193,34)" fg:x="230" fg:w="1"/><text x="18.1767%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9267%" y="293" width="0.0779%" height="15" fill="rgb(227,215,20)" fg:x="230" fg:w="1"/><text x="18.1767%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.0047%" y="501" width="0.1559%" height="15" fill="rgb(242,211,27)" fg:x="231" fg:w="2"/><text x="18.2547%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0826%" y="485" width="0.0779%" height="15" fill="rgb(229,190,30)" fg:x="232" fg:w="1"/><text x="18.3326%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0826%" y="469" width="0.0779%" height="15" fill="rgb(253,31,29)" fg:x="232" fg:w="1"/><text x="18.3326%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.0826%" y="453" width="0.0779%" height="15" fill="rgb(229,177,52)" fg:x="232" fg:w="1"/><text x="18.3326%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.0826%" y="437" width="0.0779%" height="15" fill="rgb(226,88,8)" fg:x="232" fg:w="1"/><text x="18.3326%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.0826%" y="421" width="0.0779%" height="15" fill="rgb(214,55,27)" fg:x="232" fg:w="1"/><text x="18.3326%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.0826%" y="405" width="0.0779%" height="15" fill="rgb(233,202,5)" fg:x="232" fg:w="1"/><text x="18.3326%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.0826%" y="389" width="0.0779%" height="15" fill="rgb(251,49,30)" fg:x="232" fg:w="1"/><text x="18.3326%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.2385%" y="437" width="0.0779%" height="15" fill="rgb(235,18,52)" fg:x="234" fg:w="1"/><text x="18.4885%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="18.2385%" y="421" width="0.0779%" height="15" fill="rgb(250,111,51)" fg:x="234" fg:w="1"/><text x="18.4885%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="18.2385%" y="405" width="0.0779%" height="15" fill="rgb(218,13,25)" fg:x="234" fg:w="1"/><text x="18.4885%" y="415.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (5 samples, 0.39%)</title><rect x="18.0047%" y="517" width="0.3897%" height="15" fill="rgb(248,96,7)" fg:x="231" fg:w="5"/><text x="18.2547%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (3 samples, 0.23%)</title><rect x="18.1606%" y="501" width="0.2338%" height="15" fill="rgb(217,31,15)" fg:x="233" fg:w="3"/><text x="18.4106%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="18.1606%" y="485" width="0.2338%" height="15" fill="rgb(228,59,49)" fg:x="233" fg:w="3"/><text x="18.4106%" y="495.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (2 samples, 0.16%)</title><rect x="18.2385%" y="469" width="0.1559%" height="15" fill="rgb(210,152,38)" fg:x="234" fg:w="2"/><text x="18.4885%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.2385%" y="453" width="0.1559%" height="15" fill="rgb(206,71,11)" fg:x="234" fg:w="2"/><text x="18.4885%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="18.3164%" y="437" width="0.0779%" height="15" fill="rgb(244,199,5)" fg:x="235" fg:w="1"/><text x="18.5664%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.47%)</title><rect x="18.0047%" y="533" width="0.4677%" height="15" fill="rgb(253,49,1)" fg:x="231" fg:w="6"/><text x="18.2547%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="18.3944%" y="517" width="0.0779%" height="15" fill="rgb(225,206,40)" fg:x="236" fg:w="1"/><text x="18.6444%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="18.3944%" y="501" width="0.0779%" height="15" fill="rgb(243,116,47)" fg:x="236" fg:w="1"/><text x="18.6444%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="18.5503%" y="485" width="0.1559%" height="15" fill="rgb(219,225,16)" fg:x="238" fg:w="2"/><text x="18.8003%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.5503%" y="469" width="0.1559%" height="15" fill="rgb(233,29,47)" fg:x="238" fg:w="2"/><text x="18.8003%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.5503%" y="453" width="0.1559%" height="15" fill="rgb(250,179,18)" fg:x="238" fg:w="2"/><text x="18.8003%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.6282%" y="437" width="0.0779%" height="15" fill="rgb(215,176,6)" fg:x="239" fg:w="1"/><text x="18.8782%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6282%" y="421" width="0.0779%" height="15" fill="rgb(214,117,39)" fg:x="239" fg:w="1"/><text x="18.8782%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6282%" y="405" width="0.0779%" height="15" fill="rgb(247,183,36)" fg:x="239" fg:w="1"/><text x="18.8782%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.6282%" y="389" width="0.0779%" height="15" fill="rgb(237,200,3)" fg:x="239" fg:w="1"/><text x="18.8782%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.6282%" y="373" width="0.0779%" height="15" fill="rgb(212,220,24)" fg:x="239" fg:w="1"/><text x="18.8782%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.6282%" y="357" width="0.0779%" height="15" fill="rgb(245,216,20)" fg:x="239" fg:w="1"/><text x="18.8782%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.6282%" y="341" width="0.0779%" height="15" fill="rgb(219,124,7)" fg:x="239" fg:w="1"/><text x="18.8782%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.6282%" y="325" width="0.0779%" height="15" fill="rgb(227,167,8)" fg:x="239" fg:w="1"/><text x="18.8782%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.6282%" y="309" width="0.0779%" height="15" fill="rgb(241,37,2)" fg:x="239" fg:w="1"/><text x="18.8782%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.6282%" y="293" width="0.0779%" height="15" fill="rgb(238,134,33)" fg:x="239" fg:w="1"/><text x="18.8782%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.6282%" y="277" width="0.0779%" height="15" fill="rgb(248,48,27)" fg:x="239" fg:w="1"/><text x="18.8782%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.6282%" y="261" width="0.0779%" height="15" fill="rgb(212,14,16)" fg:x="239" fg:w="1"/><text x="18.8782%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6282%" y="245" width="0.0779%" height="15" fill="rgb(217,205,37)" fg:x="239" fg:w="1"/><text x="18.8782%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="18.7062%" y="485" width="0.0779%" height="15" fill="rgb(233,185,47)" fg:x="240" fg:w="1"/><text x="18.9562%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="18.7062%" y="469" width="0.0779%" height="15" fill="rgb(244,88,8)" fg:x="240" fg:w="1"/><text x="18.9562%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.47%)</title><rect x="18.4723%" y="517" width="0.4677%" height="15" fill="rgb(213,0,20)" fg:x="237" fg:w="6"/><text x="18.7223%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (6 samples, 0.47%)</title><rect x="18.4723%" y="501" width="0.4677%" height="15" fill="rgb(238,159,36)" fg:x="237" fg:w="6"/><text x="18.7223%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="18.7841%" y="485" width="0.1559%" height="15" fill="rgb(253,173,17)" fg:x="241" fg:w="2"/><text x="19.0341%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="18.7841%" y="469" width="0.1559%" height="15" fill="rgb(221,23,28)" fg:x="241" fg:w="2"/><text x="19.0341%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8620%" y="453" width="0.0779%" height="15" fill="rgb(218,113,15)" fg:x="242" fg:w="1"/><text x="19.1120%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8620%" y="437" width="0.0779%" height="15" fill="rgb(233,58,3)" fg:x="242" fg:w="1"/><text x="19.1120%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9400%" y="485" width="0.0779%" height="15" fill="rgb(250,46,35)" fg:x="243" fg:w="1"/><text x="19.1900%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9400%" y="469" width="0.0779%" height="15" fill="rgb(210,169,11)" fg:x="243" fg:w="1"/><text x="19.1900%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.9400%" y="453" width="0.0779%" height="15" fill="rgb(246,88,19)" fg:x="243" fg:w="1"/><text x="19.1900%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="19.0179%" y="485" width="0.0779%" height="15" fill="rgb(206,81,49)" fg:x="244" fg:w="1"/><text x="19.2679%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.0179%" y="469" width="0.0779%" height="15" fill="rgb(232,144,18)" fg:x="244" fg:w="1"/><text x="19.2679%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0179%" y="453" width="0.0779%" height="15" fill="rgb(235,2,27)" fg:x="244" fg:w="1"/><text x="19.2679%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.23%)</title><rect x="19.0959%" y="469" width="0.2338%" height="15" fill="rgb(239,157,39)" fg:x="245" fg:w="3"/><text x="19.3459%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="19.0959%" y="453" width="0.2338%" height="15" fill="rgb(220,11,17)" fg:x="245" fg:w="3"/><text x="19.3459%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="19.0959%" y="437" width="0.2338%" height="15" fill="rgb(243,94,50)" fg:x="245" fg:w="3"/><text x="19.3459%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="19.1738%" y="421" width="0.1559%" height="15" fill="rgb(218,22,0)" fg:x="246" fg:w="2"/><text x="19.4238%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2518%" y="405" width="0.0779%" height="15" fill="rgb(249,70,21)" fg:x="247" fg:w="1"/><text x="19.5018%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.2518%" y="389" width="0.0779%" height="15" fill="rgb(245,111,46)" fg:x="247" fg:w="1"/><text x="19.5018%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2518%" y="373" width="0.0779%" height="15" fill="rgb(244,183,12)" fg:x="247" fg:w="1"/><text x="19.5018%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2518%" y="357" width="0.0779%" height="15" fill="rgb(207,117,0)" fg:x="247" fg:w="1"/><text x="19.5018%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.56%)</title><rect x="17.8488%" y="549" width="1.5588%" height="15" fill="rgb(206,20,43)" fg:x="229" fg:w="20"/><text x="18.0988%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.94%)</title><rect x="18.4723%" y="533" width="0.9353%" height="15" fill="rgb(221,104,11)" fg:x="237" fg:w="12"/><text x="18.7223%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.47%)</title><rect x="18.9400%" y="517" width="0.4677%" height="15" fill="rgb(254,36,50)" fg:x="243" fg:w="6"/><text x="19.1900%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="18.9400%" y="501" width="0.4677%" height="15" fill="rgb(252,17,15)" fg:x="243" fg:w="6"/><text x="19.1900%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.31%)</title><rect x="19.0959%" y="485" width="0.3118%" height="15" fill="rgb(219,129,43)" fg:x="245" fg:w="4"/><text x="19.3459%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3297%" y="469" width="0.0779%" height="15" fill="rgb(205,34,45)" fg:x="248" fg:w="1"/><text x="19.5797%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.4076%" y="517" width="0.0779%" height="15" fill="rgb(251,201,32)" fg:x="249" fg:w="1"/><text x="19.6576%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.4076%" y="501" width="0.0779%" height="15" fill="rgb(205,56,0)" fg:x="249" fg:w="1"/><text x="19.6576%" y="511.50"></text></g><g><title>plugins_core::build::Build::save (27 samples, 2.10%)</title><rect x="17.5370%" y="565" width="2.1044%" height="15" fill="rgb(211,193,27)" fg:x="225" fg:w="27"/><text x="17.7870%" y="575.50">p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="19.4076%" y="549" width="0.2338%" height="15" fill="rgb(231,100,42)" fg:x="249" fg:w="3"/><text x="19.6576%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="19.4076%" y="533" width="0.2338%" height="15" fill="rgb(245,85,27)" fg:x="249" fg:w="3"/><text x="19.6576%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.4856%" y="517" width="0.1559%" height="15" fill="rgb(241,76,24)" fg:x="250" fg:w="2"/><text x="19.7356%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.08%)</title><rect x="19.6415%" y="565" width="0.0779%" height="15" fill="rgb(249,157,15)" fg:x="252" fg:w="1"/><text x="19.8915%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="19.6415%" y="549" width="0.0779%" height="15" fill="rgb(222,218,25)" fg:x="252" fg:w="1"/><text x="19.8915%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="19.6415%" y="533" width="0.0779%" height="15" fill="rgb(252,156,52)" fg:x="252" fg:w="1"/><text x="19.8915%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="19.6415%" y="517" width="0.0779%" height="15" fill="rgb(211,185,7)" fg:x="252" fg:w="1"/><text x="19.8915%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="19.7973%" y="501" width="0.0779%" height="15" fill="rgb(234,108,24)" fg:x="254" fg:w="1"/><text x="20.0473%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="19.7973%" y="485" width="0.0779%" height="15" fill="rgb(227,218,2)" fg:x="254" fg:w="1"/><text x="20.0473%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7973%" y="469" width="0.0779%" height="15" fill="rgb(224,0,36)" fg:x="254" fg:w="1"/><text x="20.0473%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7973%" y="453" width="0.0779%" height="15" fill="rgb(233,201,10)" fg:x="254" fg:w="1"/><text x="20.0473%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.7973%" y="437" width="0.0779%" height="15" fill="rgb(252,209,14)" fg:x="254" fg:w="1"/><text x="20.0473%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7973%" y="421" width="0.0779%" height="15" fill="rgb(205,93,49)" fg:x="254" fg:w="1"/><text x="20.0473%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8753%" y="469" width="0.0779%" height="15" fill="rgb(234,116,45)" fg:x="255" fg:w="1"/><text x="20.1253%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.8753%" y="453" width="0.0779%" height="15" fill="rgb(248,89,35)" fg:x="255" fg:w="1"/><text x="20.1253%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="19.9532%" y="405" width="0.0779%" height="15" fill="rgb(233,167,45)" fg:x="256" fg:w="1"/><text x="20.2032%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.9532%" y="389" width="0.0779%" height="15" fill="rgb(248,228,14)" fg:x="256" fg:w="1"/><text x="20.2032%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9532%" y="373" width="0.0779%" height="15" fill="rgb(246,91,14)" fg:x="256" fg:w="1"/><text x="20.2032%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="19.8753%" y="485" width="0.2338%" height="15" fill="rgb(227,142,5)" fg:x="255" fg:w="3"/><text x="20.1253%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.9532%" y="469" width="0.1559%" height="15" fill="rgb(221,63,33)" fg:x="256" fg:w="2"/><text x="20.2032%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.9532%" y="453" width="0.1559%" height="15" fill="rgb(233,49,0)" fg:x="256" fg:w="2"/><text x="20.2032%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="19.9532%" y="437" width="0.1559%" height="15" fill="rgb(251,115,38)" fg:x="256" fg:w="2"/><text x="20.2032%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.9532%" y="421" width="0.1559%" height="15" fill="rgb(231,214,32)" fg:x="256" fg:w="2"/><text x="20.2032%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.0312%" y="405" width="0.0779%" height="15" fill="rgb(248,73,46)" fg:x="257" fg:w="1"/><text x="20.2812%" y="415.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.39%)</title><rect x="19.7973%" y="533" width="0.3897%" height="15" fill="rgb(237,156,4)" fg:x="254" fg:w="5"/><text x="20.0473%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="19.7973%" y="517" width="0.3897%" height="15" fill="rgb(227,132,2)" fg:x="254" fg:w="5"/><text x="20.0473%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="19.8753%" y="501" width="0.3118%" height="15" fill="rgb(248,161,9)" fg:x="255" fg:w="4"/><text x="20.1253%" y="511.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="20.1091%" y="485" width="0.0779%" height="15" fill="rgb(238,77,38)" fg:x="258" fg:w="1"/><text x="20.3591%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.1871%" y="485" width="0.0779%" height="15" fill="rgb(222,166,40)" fg:x="259" fg:w="1"/><text x="20.4371%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.23%)</title><rect x="20.1871%" y="533" width="0.2338%" height="15" fill="rgb(214,168,45)" fg:x="259" fg:w="3"/><text x="20.4371%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.23%)</title><rect x="20.1871%" y="517" width="0.2338%" height="15" fill="rgb(226,64,37)" fg:x="259" fg:w="3"/><text x="20.4371%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="20.1871%" y="501" width="0.2338%" height="15" fill="rgb(232,210,43)" fg:x="259" fg:w="3"/><text x="20.4371%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="20.2650%" y="485" width="0.1559%" height="15" fill="rgb(214,76,33)" fg:x="260" fg:w="2"/><text x="20.5150%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (2 samples, 0.16%)</title><rect x="20.2650%" y="469" width="0.1559%" height="15" fill="rgb(210,78,5)" fg:x="260" fg:w="2"/><text x="20.5150%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.3429%" y="453" width="0.0779%" height="15" fill="rgb(211,107,37)" fg:x="261" fg:w="1"/><text x="20.5929%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="20.4988%" y="517" width="0.1559%" height="15" fill="rgb(249,67,16)" fg:x="263" fg:w="2"/><text x="20.7488%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.4988%" y="501" width="0.1559%" height="15" fill="rgb(222,114,31)" fg:x="263" fg:w="2"/><text x="20.7488%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.4988%" y="485" width="0.1559%" height="15" fill="rgb(242,118,19)" fg:x="263" fg:w="2"/><text x="20.7488%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.5768%" y="469" width="0.0779%" height="15" fill="rgb(223,115,1)" fg:x="264" fg:w="1"/><text x="20.8268%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5768%" y="453" width="0.0779%" height="15" fill="rgb(241,182,54)" fg:x="264" fg:w="1"/><text x="20.8268%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.5768%" y="437" width="0.0779%" height="15" fill="rgb(244,166,36)" fg:x="264" fg:w="1"/><text x="20.8268%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.5768%" y="421" width="0.0779%" height="15" fill="rgb(241,52,43)" fg:x="264" fg:w="1"/><text x="20.8268%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.5768%" y="405" width="0.0779%" height="15" fill="rgb(236,82,9)" fg:x="264" fg:w="1"/><text x="20.8268%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6547%" y="517" width="0.0779%" height="15" fill="rgb(241,119,0)" fg:x="265" fg:w="1"/><text x="20.9047%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.7327%" y="453" width="0.0779%" height="15" fill="rgb(221,19,22)" fg:x="266" fg:w="1"/><text x="20.9827%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.7327%" y="437" width="0.0779%" height="15" fill="rgb(254,144,35)" fg:x="266" fg:w="1"/><text x="20.9827%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.7327%" y="421" width="0.0779%" height="15" fill="rgb(246,132,30)" fg:x="266" fg:w="1"/><text x="20.9827%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7327%" y="405" width="0.0779%" height="15" fill="rgb(234,69,28)" fg:x="266" fg:w="1"/><text x="20.9827%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7327%" y="389" width="0.0779%" height="15" fill="rgb(219,106,47)" fg:x="266" fg:w="1"/><text x="20.9827%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.7327%" y="373" width="0.0779%" height="15" fill="rgb(218,79,24)" fg:x="266" fg:w="1"/><text x="20.9827%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.7327%" y="357" width="0.0779%" height="15" fill="rgb(225,26,21)" fg:x="266" fg:w="1"/><text x="20.9827%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.7327%" y="341" width="0.0779%" height="15" fill="rgb(217,68,49)" fg:x="266" fg:w="1"/><text x="20.9827%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7327%" y="325" width="0.0779%" height="15" fill="rgb(220,204,28)" fg:x="266" fg:w="1"/><text x="20.9827%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7327%" y="309" width="0.0779%" height="15" fill="rgb(237,208,43)" fg:x="266" fg:w="1"/><text x="20.9827%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.7327%" y="293" width="0.0779%" height="15" fill="rgb(213,97,42)" fg:x="266" fg:w="1"/><text x="20.9827%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="20.7327%" y="277" width="0.0779%" height="15" fill="rgb(238,96,52)" fg:x="266" fg:w="1"/><text x="20.9827%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="20.7327%" y="261" width="0.0779%" height="15" fill="rgb(228,14,13)" fg:x="266" fg:w="1"/><text x="20.9827%" y="271.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="20.7327%" y="485" width="0.2338%" height="15" fill="rgb(219,123,13)" fg:x="266" fg:w="3"/><text x="20.9827%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="20.7327%" y="469" width="0.2338%" height="15" fill="rgb(216,144,17)" fg:x="266" fg:w="3"/><text x="20.9827%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.8106%" y="453" width="0.1559%" height="15" fill="rgb(230,228,29)" fg:x="267" fg:w="2"/><text x="21.0606%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8106%" y="437" width="0.1559%" height="15" fill="rgb(233,18,5)" fg:x="267" fg:w="2"/><text x="21.0606%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.8106%" y="421" width="0.1559%" height="15" fill="rgb(233,197,12)" fg:x="267" fg:w="2"/><text x="21.0606%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8106%" y="405" width="0.1559%" height="15" fill="rgb(234,140,29)" fg:x="267" fg:w="2"/><text x="21.0606%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.8106%" y="389" width="0.1559%" height="15" fill="rgb(233,113,19)" fg:x="267" fg:w="2"/><text x="21.0606%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8106%" y="373" width="0.1559%" height="15" fill="rgb(246,209,13)" fg:x="267" fg:w="2"/><text x="21.0606%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="20.8885%" y="357" width="0.0779%" height="15" fill="rgb(242,79,54)" fg:x="268" fg:w="1"/><text x="21.1385%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.8885%" y="341" width="0.0779%" height="15" fill="rgb(219,73,16)" fg:x="268" fg:w="1"/><text x="21.1385%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="20.9665%" y="469" width="0.0779%" height="15" fill="rgb(224,52,10)" fg:x="269" fg:w="1"/><text x="21.2165%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9665%" y="453" width="0.0779%" height="15" fill="rgb(237,179,5)" fg:x="269" fg:w="1"/><text x="21.2165%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.70%)</title><rect x="20.4209%" y="533" width="0.7015%" height="15" fill="rgb(231,20,6)" fg:x="262" fg:w="9"/><text x="20.6709%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (5 samples, 0.39%)</title><rect x="20.7327%" y="517" width="0.3897%" height="15" fill="rgb(253,171,45)" fg:x="266" fg:w="5"/><text x="20.9827%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.39%)</title><rect x="20.7327%" y="501" width="0.3897%" height="15" fill="rgb(230,75,49)" fg:x="266" fg:w="5"/><text x="20.9827%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="20.9665%" y="485" width="0.1559%" height="15" fill="rgb(216,83,46)" fg:x="269" fg:w="2"/><text x="21.2165%" y="495.50"></text></g><g><title>kernel::model::props::Props::string_property (1 samples, 0.08%)</title><rect x="21.0444%" y="469" width="0.0779%" height="15" fill="rgb(236,56,9)" fg:x="270" fg:w="1"/><text x="21.2944%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (19 samples, 1.48%)</title><rect x="19.7194%" y="565" width="1.4809%" height="15" fill="rgb(215,28,34)" fg:x="253" fg:w="19"/><text x="19.9694%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (19 samples, 1.48%)</title><rect x="19.7194%" y="549" width="1.4809%" height="15" fill="rgb(230,222,20)" fg:x="253" fg:w="19"/><text x="19.9694%" y="559.50"></text></g><g><title>plugins_core::location::model::Location::set (1 samples, 0.08%)</title><rect x="21.1224%" y="533" width="0.0779%" height="15" fill="rgb(235,209,51)" fg:x="271" fg:w="1"/><text x="21.3724%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="21.1224%" y="517" width="0.0779%" height="15" fill="rgb(235,167,1)" fg:x="271" fg:w="1"/><text x="21.3724%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1224%" y="501" width="0.0779%" height="15" fill="rgb(248,220,0)" fg:x="271" fg:w="1"/><text x="21.3724%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.1224%" y="485" width="0.0779%" height="15" fill="rgb(239,0,18)" fg:x="271" fg:w="1"/><text x="21.3724%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="21.1224%" y="469" width="0.0779%" height="15" fill="rgb(229,179,11)" fg:x="271" fg:w="1"/><text x="21.3724%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.1224%" y="453" width="0.0779%" height="15" fill="rgb(226,116,53)" fg:x="271" fg:w="1"/><text x="21.3724%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1224%" y="437" width="0.0779%" height="15" fill="rgb(218,1,49)" fg:x="271" fg:w="1"/><text x="21.3724%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.1224%" y="421" width="0.0779%" height="15" fill="rgb(208,184,47)" fg:x="271" fg:w="1"/><text x="21.3724%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.1224%" y="405" width="0.0779%" height="15" fill="rgb(238,174,3)" fg:x="271" fg:w="1"/><text x="21.3724%" y="415.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="21.2783%" y="549" width="0.0779%" height="15" fill="rgb(247,188,6)" fg:x="273" fg:w="1"/><text x="21.5283%" y="559.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="21.2783%" y="533" width="0.0779%" height="15" fill="rgb(211,165,46)" fg:x="273" fg:w="1"/><text x="21.5283%" y="543.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="21.2783%" y="517" width="0.0779%" height="15" fill="rgb(222,190,10)" fg:x="273" fg:w="1"/><text x="21.5283%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.3562%" y="549" width="0.0779%" height="15" fill="rgb(206,185,3)" fg:x="274" fg:w="1"/><text x="21.6062%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="21.3562%" y="533" width="0.0779%" height="15" fill="rgb(244,125,37)" fg:x="274" fg:w="1"/><text x="21.6062%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.3562%" y="517" width="0.0779%" height="15" fill="rgb(211,43,7)" fg:x="274" fg:w="1"/><text x="21.6062%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.3562%" y="501" width="0.0779%" height="15" fill="rgb(250,41,42)" fg:x="274" fg:w="1"/><text x="21.6062%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3562%" y="485" width="0.0779%" height="15" fill="rgb(254,54,42)" fg:x="274" fg:w="1"/><text x="21.6062%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5121%" y="309" width="0.0779%" height="15" fill="rgb(213,71,43)" fg:x="276" fg:w="1"/><text x="21.7621%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5121%" y="293" width="0.0779%" height="15" fill="rgb(249,3,44)" fg:x="276" fg:w="1"/><text x="21.7621%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.5121%" y="277" width="0.0779%" height="15" fill="rgb(229,80,41)" fg:x="276" fg:w="1"/><text x="21.7621%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.5121%" y="261" width="0.0779%" height="15" fill="rgb(231,25,28)" fg:x="276" fg:w="1"/><text x="21.7621%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.5121%" y="245" width="0.0779%" height="15" fill="rgb(208,79,48)" fg:x="276" fg:w="1"/><text x="21.7621%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.5121%" y="229" width="0.0779%" height="15" fill="rgb(207,196,38)" fg:x="276" fg:w="1"/><text x="21.7621%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5121%" y="213" width="0.0779%" height="15" fill="rgb(228,105,49)" fg:x="276" fg:w="1"/><text x="21.7621%" y="223.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.5121%" y="469" width="0.1559%" height="15" fill="rgb(237,99,15)" fg:x="276" fg:w="2"/><text x="21.7621%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="21.5121%" y="453" width="0.1559%" height="15" fill="rgb(224,207,46)" fg:x="276" fg:w="2"/><text x="21.7621%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.5121%" y="437" width="0.1559%" height="15" fill="rgb(249,117,50)" fg:x="276" fg:w="2"/><text x="21.7621%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.5121%" y="421" width="0.1559%" height="15" fill="rgb(248,17,13)" fg:x="276" fg:w="2"/><text x="21.7621%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.5121%" y="405" width="0.1559%" height="15" fill="rgb(228,187,36)" fg:x="276" fg:w="2"/><text x="21.7621%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.5121%" y="389" width="0.1559%" height="15" fill="rgb(234,132,20)" fg:x="276" fg:w="2"/><text x="21.7621%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="21.5121%" y="373" width="0.1559%" height="15" fill="rgb(209,170,46)" fg:x="276" fg:w="2"/><text x="21.7621%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="21.5121%" y="357" width="0.1559%" height="15" fill="rgb(237,23,19)" fg:x="276" fg:w="2"/><text x="21.7621%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="21.5121%" y="341" width="0.1559%" height="15" fill="rgb(227,21,26)" fg:x="276" fg:w="2"/><text x="21.7621%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="21.5121%" y="325" width="0.1559%" height="15" fill="rgb(222,220,48)" fg:x="276" fg:w="2"/><text x="21.7621%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="21.5900%" y="309" width="0.0779%" height="15" fill="rgb(214,9,16)" fg:x="277" fg:w="1"/><text x="21.8400%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.5900%" y="293" width="0.0779%" height="15" fill="rgb(209,73,30)" fg:x="277" fg:w="1"/><text x="21.8400%" y="303.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.6680%" y="469" width="0.0779%" height="15" fill="rgb(207,20,33)" fg:x="278" fg:w="1"/><text x="21.9180%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="21.6680%" y="453" width="0.0779%" height="15" fill="rgb(219,153,12)" fg:x="278" fg:w="1"/><text x="21.9180%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.6680%" y="437" width="0.0779%" height="15" fill="rgb(235,97,25)" fg:x="278" fg:w="1"/><text x="21.9180%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.6680%" y="421" width="0.0779%" height="15" fill="rgb(244,30,34)" fg:x="278" fg:w="1"/><text x="21.9180%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.6680%" y="405" width="0.0779%" height="15" fill="rgb(214,106,45)" fg:x="278" fg:w="1"/><text x="21.9180%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.6680%" y="389" width="0.0779%" height="15" fill="rgb(226,41,9)" fg:x="278" fg:w="1"/><text x="21.9180%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="21.6680%" y="373" width="0.0779%" height="15" fill="rgb(253,139,29)" fg:x="278" fg:w="1"/><text x="21.9180%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.39%)</title><rect x="21.4341%" y="549" width="0.3897%" height="15" fill="rgb(213,205,39)" fg:x="275" fg:w="5"/><text x="21.6841%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.39%)</title><rect x="21.4341%" y="533" width="0.3897%" height="15" fill="rgb(209,27,10)" fg:x="275" fg:w="5"/><text x="21.6841%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.31%)</title><rect x="21.5121%" y="517" width="0.3118%" height="15" fill="rgb(249,142,16)" fg:x="276" fg:w="4"/><text x="21.7621%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.31%)</title><rect x="21.5121%" y="501" width="0.3118%" height="15" fill="rgb(242,65,12)" fg:x="276" fg:w="4"/><text x="21.7621%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="21.5121%" y="485" width="0.3118%" height="15" fill="rgb(232,48,10)" fg:x="276" fg:w="4"/><text x="21.7621%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7459%" y="469" width="0.0779%" height="15" fill="rgb(253,67,19)" fg:x="279" fg:w="1"/><text x="21.9959%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::EntityPtr&gt;&gt; (1 samples, 0.08%)</title><rect x="21.8239%" y="549" width="0.0779%" height="15" fill="rgb(227,93,29)" fg:x="280" fg:w="1"/><text x="22.0739%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.9018%" y="517" width="0.0779%" height="15" fill="rgb(226,189,53)" fg:x="281" fg:w="1"/><text x="22.1518%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="21.9018%" y="533" width="0.2338%" height="15" fill="rgb(223,224,1)" fg:x="281" fg:w="3"/><text x="22.1518%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.9797%" y="517" width="0.1559%" height="15" fill="rgb(221,84,32)" fg:x="282" fg:w="2"/><text x="22.2297%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="22.1356%" y="517" width="0.0779%" height="15" fill="rgb(214,189,28)" fg:x="284" fg:w="1"/><text x="22.3856%" y="527.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="22.1356%" y="501" width="0.0779%" height="15" fill="rgb(234,7,52)" fg:x="284" fg:w="1"/><text x="22.3856%" y="511.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="22.1356%" y="485" width="0.0779%" height="15" fill="rgb(249,73,31)" fg:x="284" fg:w="1"/><text x="22.3856%" y="495.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="22.1356%" y="469" width="0.0779%" height="15" fill="rgb(253,153,41)" fg:x="284" fg:w="1"/><text x="22.3856%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="22.1356%" y="453" width="0.0779%" height="15" fill="rgb(249,52,34)" fg:x="284" fg:w="1"/><text x="22.3856%" y="463.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="22.1356%" y="437" width="0.0779%" height="15" fill="rgb(236,177,47)" fg:x="284" fg:w="1"/><text x="22.3856%" y="447.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="22.1356%" y="421" width="0.0779%" height="15" fill="rgb(252,185,45)" fg:x="284" fg:w="1"/><text x="22.3856%" y="431.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="22.1356%" y="405" width="0.0779%" height="15" fill="rgb(251,15,30)" fg:x="284" fg:w="1"/><text x="22.3856%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.2915%" y="485" width="0.0779%" height="15" fill="rgb(233,31,4)" fg:x="286" fg:w="1"/><text x="22.5415%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="22.3694%" y="453" width="0.1559%" height="15" fill="rgb(254,44,24)" fg:x="287" fg:w="2"/><text x="22.6194%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4474%" y="437" width="0.0779%" height="15" fill="rgb(218,54,1)" fg:x="288" fg:w="1"/><text x="22.6974%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.4474%" y="421" width="0.0779%" height="15" fill="rgb(243,209,39)" fg:x="288" fg:w="1"/><text x="22.6974%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.4474%" y="405" width="0.0779%" height="15" fill="rgb(206,75,33)" fg:x="288" fg:w="1"/><text x="22.6974%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.4474%" y="389" width="0.0779%" height="15" fill="rgb(223,108,18)" fg:x="288" fg:w="1"/><text x="22.6974%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.4474%" y="373" width="0.0779%" height="15" fill="rgb(244,89,31)" fg:x="288" fg:w="1"/><text x="22.6974%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4474%" y="357" width="0.0779%" height="15" fill="rgb(222,167,27)" fg:x="288" fg:w="1"/><text x="22.6974%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.4474%" y="341" width="0.0779%" height="15" fill="rgb(247,41,16)" fg:x="288" fg:w="1"/><text x="22.6974%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.4474%" y="325" width="0.0779%" height="15" fill="rgb(233,168,40)" fg:x="288" fg:w="1"/><text x="22.6974%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.4474%" y="309" width="0.0779%" height="15" fill="rgb(205,211,8)" fg:x="288" fg:w="1"/><text x="22.6974%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.4474%" y="293" width="0.0779%" height="15" fill="rgb(238,105,11)" fg:x="288" fg:w="1"/><text x="22.6974%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.4474%" y="277" width="0.0779%" height="15" fill="rgb(223,142,52)" fg:x="288" fg:w="1"/><text x="22.6974%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4474%" y="261" width="0.0779%" height="15" fill="rgb(238,51,33)" fg:x="288" fg:w="1"/><text x="22.6974%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5253%" y="453" width="0.0779%" height="15" fill="rgb(231,188,43)" fg:x="289" fg:w="1"/><text x="22.7753%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="22.3694%" y="485" width="0.3118%" height="15" fill="rgb(216,92,17)" fg:x="287" fg:w="4"/><text x="22.6194%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.31%)</title><rect x="22.3694%" y="469" width="0.3118%" height="15" fill="rgb(228,2,40)" fg:x="287" fg:w="4"/><text x="22.6194%" y="479.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="22.6033%" y="453" width="0.0779%" height="15" fill="rgb(226,73,15)" fg:x="290" fg:w="1"/><text x="22.8533%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6033%" y="437" width="0.0779%" height="15" fill="rgb(227,66,46)" fg:x="290" fg:w="1"/><text x="22.8533%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="22.7592%" y="437" width="0.1559%" height="15" fill="rgb(209,71,6)" fg:x="292" fg:w="2"/><text x="23.0092%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="22.7592%" y="421" width="0.1559%" height="15" fill="rgb(246,100,25)" fg:x="292" fg:w="2"/><text x="23.0092%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="22.7592%" y="405" width="0.1559%" height="15" fill="rgb(248,185,27)" fg:x="292" fg:w="2"/><text x="23.0092%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="22.7592%" y="389" width="0.1559%" height="15" fill="rgb(225,118,47)" fg:x="292" fg:w="2"/><text x="23.0092%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="22.7592%" y="373" width="0.1559%" height="15" fill="rgb(220,185,44)" fg:x="292" fg:w="2"/><text x="23.0092%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.8371%" y="357" width="0.0779%" height="15" fill="rgb(227,95,24)" fg:x="293" fg:w="1"/><text x="23.0871%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.2268%" y="357" width="0.0779%" height="15" fill="rgb(252,84,24)" fg:x="298" fg:w="1"/><text x="23.4768%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.2268%" y="341" width="0.0779%" height="15" fill="rgb(240,34,44)" fg:x="298" fg:w="1"/><text x="23.4768%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.2268%" y="325" width="0.0779%" height="15" fill="rgb(209,72,54)" fg:x="298" fg:w="1"/><text x="23.4768%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.2268%" y="309" width="0.0779%" height="15" fill="rgb(226,19,45)" fg:x="298" fg:w="1"/><text x="23.4768%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="23.1489%" y="405" width="0.2338%" height="15" fill="rgb(246,7,45)" fg:x="297" fg:w="3"/><text x="23.3989%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.2268%" y="389" width="0.1559%" height="15" fill="rgb(225,45,2)" fg:x="298" fg:w="2"/><text x="23.4768%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.2268%" y="373" width="0.1559%" height="15" fill="rgb(221,80,29)" fg:x="298" fg:w="2"/><text x="23.4768%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="23.3048%" y="357" width="0.0779%" height="15" fill="rgb(228,11,19)" fg:x="299" fg:w="1"/><text x="23.5548%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.55%)</title><rect x="22.9930%" y="421" width="0.5456%" height="15" fill="rgb(243,17,21)" fg:x="295" fg:w="7"/><text x="23.2430%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.3827%" y="405" width="0.1559%" height="15" fill="rgb(243,88,8)" fg:x="300" fg:w="2"/><text x="23.6327%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="23.5386%" y="405" width="0.2338%" height="15" fill="rgb(214,17,9)" fg:x="302" fg:w="3"/><text x="23.7886%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="23.5386%" y="389" width="0.2338%" height="15" fill="rgb(232,169,15)" fg:x="302" fg:w="3"/><text x="23.7886%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="23.5386%" y="373" width="0.2338%" height="15" fill="rgb(232,86,53)" fg:x="302" fg:w="3"/><text x="23.7886%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="23.5386%" y="357" width="0.2338%" height="15" fill="rgb(222,100,4)" fg:x="302" fg:w="3"/><text x="23.7886%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.6945%" y="341" width="0.0779%" height="15" fill="rgb(253,151,38)" fg:x="304" fg:w="1"/><text x="23.9445%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.6945%" y="325" width="0.0779%" height="15" fill="rgb(238,215,29)" fg:x="304" fg:w="1"/><text x="23.9445%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.6945%" y="309" width="0.0779%" height="15" fill="rgb(205,128,53)" fg:x="304" fg:w="1"/><text x="23.9445%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="23.7724%" y="357" width="0.0779%" height="15" fill="rgb(248,183,14)" fg:x="305" fg:w="1"/><text x="24.0224%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.7724%" y="341" width="0.0779%" height="15" fill="rgb(244,172,35)" fg:x="305" fg:w="1"/><text x="24.0224%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.7724%" y="325" width="0.0779%" height="15" fill="rgb(234,93,19)" fg:x="305" fg:w="1"/><text x="24.0224%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.7724%" y="309" width="0.0779%" height="15" fill="rgb(227,109,7)" fg:x="305" fg:w="1"/><text x="24.0224%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="23.8504%" y="341" width="0.0779%" height="15" fill="rgb(233,136,54)" fg:x="306" fg:w="1"/><text x="24.1004%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="23.8504%" y="325" width="0.0779%" height="15" fill="rgb(233,19,40)" fg:x="306" fg:w="1"/><text x="24.1004%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.8504%" y="309" width="0.0779%" height="15" fill="rgb(247,41,18)" fg:x="306" fg:w="1"/><text x="24.1004%" y="319.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.8504%" y="293" width="0.0779%" height="15" fill="rgb(220,34,34)" fg:x="306" fg:w="1"/><text x="24.1004%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="23.8504%" y="277" width="0.0779%" height="15" fill="rgb(222,135,32)" fg:x="306" fg:w="1"/><text x="24.1004%" y="287.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="23.7724%" y="373" width="0.2338%" height="15" fill="rgb(214,80,19)" fg:x="305" fg:w="3"/><text x="24.0224%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="23.8504%" y="357" width="0.1559%" height="15" fill="rgb(234,54,46)" fg:x="306" fg:w="2"/><text x="24.1004%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.9283%" y="341" width="0.0779%" height="15" fill="rgb(251,48,23)" fg:x="307" fg:w="1"/><text x="24.1783%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.9283%" y="325" width="0.0779%" height="15" fill="rgb(254,109,52)" fg:x="307" fg:w="1"/><text x="24.1783%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="23.7724%" y="389" width="0.3118%" height="15" fill="rgb(240,186,19)" fg:x="305" fg:w="4"/><text x="24.0224%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.0062%" y="373" width="0.0779%" height="15" fill="rgb(246,187,17)" fg:x="308" fg:w="1"/><text x="24.2562%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="24.0842%" y="389" width="0.3118%" height="15" fill="rgb(212,21,5)" fg:x="309" fg:w="4"/><text x="24.3342%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.2401%" y="373" width="0.1559%" height="15" fill="rgb(225,185,18)" fg:x="311" fg:w="2"/><text x="24.4901%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.3959%" y="373" width="0.0779%" height="15" fill="rgb(245,114,17)" fg:x="313" fg:w="1"/><text x="24.6459%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="24.4739%" y="373" width="0.3118%" height="15" fill="rgb(223,164,24)" fg:x="314" fg:w="4"/><text x="24.7239%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.7077%" y="357" width="0.0779%" height="15" fill="rgb(211,228,3)" fg:x="317" fg:w="1"/><text x="24.9577%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.7077%" y="341" width="0.0779%" height="15" fill="rgb(223,16,38)" fg:x="317" fg:w="1"/><text x="24.9577%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.7077%" y="325" width="0.0779%" height="15" fill="rgb(207,31,54)" fg:x="317" fg:w="1"/><text x="24.9577%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.7077%" y="309" width="0.0779%" height="15" fill="rgb(220,39,11)" fg:x="317" fg:w="1"/><text x="24.9577%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.7077%" y="293" width="0.0779%" height="15" fill="rgb(235,185,0)" fg:x="317" fg:w="1"/><text x="24.9577%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.7077%" y="277" width="0.0779%" height="15" fill="rgb(249,39,18)" fg:x="317" fg:w="1"/><text x="24.9577%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.7857%" y="357" width="0.0779%" height="15" fill="rgb(240,110,33)" fg:x="318" fg:w="1"/><text x="25.0357%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="24.8636%" y="357" width="0.3897%" height="15" fill="rgb(210,92,42)" fg:x="319" fg:w="5"/><text x="25.1136%" y="367.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="24.9415%" y="341" width="0.3118%" height="15" fill="rgb(218,215,28)" fg:x="320" fg:w="4"/><text x="25.1915%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="25.0974%" y="325" width="0.1559%" height="15" fill="rgb(238,215,36)" fg:x="322" fg:w="2"/><text x="25.3474%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.1754%" y="309" width="0.0779%" height="15" fill="rgb(220,31,10)" fg:x="323" fg:w="1"/><text x="25.4254%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="25.2533%" y="357" width="0.0779%" height="15" fill="rgb(212,93,14)" fg:x="324" fg:w="1"/><text x="25.5033%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.2533%" y="341" width="0.0779%" height="15" fill="rgb(254,207,2)" fg:x="324" fg:w="1"/><text x="25.5033%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.2533%" y="325" width="0.0779%" height="15" fill="rgb(205,57,44)" fg:x="324" fg:w="1"/><text x="25.5033%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.79%)</title><rect x="23.7724%" y="405" width="1.7927%" height="15" fill="rgb(226,151,19)" fg:x="305" fg:w="23"/><text x="24.0224%" y="415.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.17%)</title><rect x="24.3959%" y="389" width="1.1691%" height="15" fill="rgb(230,72,30)" fg:x="313" fg:w="15"/><text x="24.6459%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="24.7857%" y="373" width="0.7794%" height="15" fill="rgb(244,0,8)" fg:x="318" fg:w="10"/><text x="25.0357%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="25.3313%" y="357" width="0.2338%" height="15" fill="rgb(230,192,6)" fg:x="325" fg:w="3"/><text x="25.5813%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.4871%" y="341" width="0.0779%" height="15" fill="rgb(233,207,13)" fg:x="327" fg:w="1"/><text x="25.7371%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.4871%" y="325" width="0.0779%" height="15" fill="rgb(206,227,7)" fg:x="327" fg:w="1"/><text x="25.7371%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.20%)</title><rect x="22.9150%" y="437" width="3.1956%" height="15" fill="rgb(213,217,25)" fg:x="294" fg:w="41"/><text x="23.1650%" y="447.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.57%)</title><rect x="23.5386%" y="421" width="2.5721%" height="15" fill="rgb(249,75,4)" fg:x="302" fg:w="33"/><text x="23.7886%" y="431.50">se..</text></g><g><title>std::io::Write::write_all (7 samples, 0.55%)</title><rect x="25.5651%" y="405" width="0.5456%" height="15" fill="rgb(225,114,18)" fg:x="328" fg:w="7"/><text x="25.8151%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.47%)</title><rect x="25.6430%" y="389" width="0.4677%" height="15" fill="rgb(211,162,40)" fg:x="329" fg:w="6"/><text x="25.8930%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="25.7989%" y="373" width="0.3118%" height="15" fill="rgb(206,49,29)" fg:x="331" fg:w="4"/><text x="26.0489%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="25.9548%" y="357" width="0.1559%" height="15" fill="rgb(244,8,6)" fg:x="333" fg:w="2"/><text x="26.2048%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.0327%" y="341" width="0.0779%" height="15" fill="rgb(231,194,28)" fg:x="334" fg:w="1"/><text x="26.2827%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.0327%" y="325" width="0.0779%" height="15" fill="rgb(210,69,5)" fg:x="334" fg:w="1"/><text x="26.2827%" y="335.50"></text></g><g><title>burrow_bon::perms::find_acls (1 samples, 0.08%)</title><rect x="26.1107%" y="437" width="0.0779%" height="15" fill="rgb(216,186,12)" fg:x="335" fg:w="1"/><text x="26.3607%" y="447.50"></text></g><g><title>burrow_bon::scour::scour (1 samples, 0.08%)</title><rect x="26.1107%" y="421" width="0.0779%" height="15" fill="rgb(238,61,15)" fg:x="335" fg:w="1"/><text x="26.3607%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="26.1886%" y="405" width="0.1559%" height="15" fill="rgb(226,104,1)" fg:x="336" fg:w="2"/><text x="26.4386%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.1886%" y="389" width="0.1559%" height="15" fill="rgb(229,128,15)" fg:x="336" fg:w="2"/><text x="26.4386%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3445%" y="389" width="0.0779%" height="15" fill="rgb(247,110,15)" fg:x="338" fg:w="1"/><text x="26.5945%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.4224%" y="389" width="0.0779%" height="15" fill="rgb(210,74,48)" fg:x="339" fg:w="1"/><text x="26.6724%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.6563%" y="357" width="0.1559%" height="15" fill="rgb(246,121,10)" fg:x="342" fg:w="2"/><text x="26.9063%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.8122%" y="357" width="0.0779%" height="15" fill="rgb(214,156,37)" fg:x="344" fg:w="1"/><text x="27.0622%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="26.1886%" y="437" width="0.8574%" height="15" fill="rgb(214,210,34)" fg:x="336" fg:w="11"/><text x="26.4386%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.86%)</title><rect x="26.1886%" y="421" width="0.8574%" height="15" fill="rgb(237,93,35)" fg:x="336" fg:w="11"/><text x="26.4386%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.70%)</title><rect x="26.3445%" y="405" width="0.7015%" height="15" fill="rgb(206,36,8)" fg:x="338" fg:w="9"/><text x="26.5945%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="26.5004%" y="389" width="0.5456%" height="15" fill="rgb(208,151,12)" fg:x="340" fg:w="7"/><text x="26.7504%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="26.5783%" y="373" width="0.4677%" height="15" fill="rgb(225,133,52)" fg:x="341" fg:w="6"/><text x="26.8283%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.8901%" y="357" width="0.1559%" height="15" fill="rgb(231,71,53)" fg:x="345" fg:w="2"/><text x="27.1401%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="27.0460%" y="437" width="0.0779%" height="15" fill="rgb(243,76,21)" fg:x="347" fg:w="1"/><text x="27.2960%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="27.1239%" y="405" width="0.1559%" height="15" fill="rgb(252,144,3)" fg:x="348" fg:w="2"/><text x="27.3739%" y="415.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="27.2798%" y="405" width="0.0779%" height="15" fill="rgb(231,199,10)" fg:x="350" fg:w="1"/><text x="27.5298%" y="415.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="27.3578%" y="405" width="0.0779%" height="15" fill="rgb(215,18,11)" fg:x="351" fg:w="1"/><text x="27.6078%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="27.3578%" y="389" width="0.0779%" height="15" fill="rgb(241,65,24)" fg:x="351" fg:w="1"/><text x="27.6078%" y="399.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.3578%" y="373" width="0.0779%" height="15" fill="rgb(251,192,38)" fg:x="351" fg:w="1"/><text x="27.6078%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (5 samples, 0.39%)</title><rect x="27.1239%" y="421" width="0.3897%" height="15" fill="rgb(205,9,35)" fg:x="348" fg:w="5"/><text x="27.3739%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.4357%" y="405" width="0.0779%" height="15" fill="rgb(229,225,49)" fg:x="352" fg:w="1"/><text x="27.6857%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.9813%" y="389" width="0.0779%" height="15" fill="rgb(207,125,39)" fg:x="359" fg:w="1"/><text x="28.2313%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="28.0592%" y="389" width="0.0779%" height="15" fill="rgb(222,78,19)" fg:x="360" fg:w="1"/><text x="28.3092%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.0592%" y="373" width="0.0779%" height="15" fill="rgb(248,207,20)" fg:x="360" fg:w="1"/><text x="28.3092%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0592%" y="357" width="0.0779%" height="15" fill="rgb(205,103,49)" fg:x="360" fg:w="1"/><text x="28.3092%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="28.1372%" y="389" width="0.0779%" height="15" fill="rgb(216,42,28)" fg:x="361" fg:w="1"/><text x="28.3872%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.1372%" y="373" width="0.0779%" height="15" fill="rgb(213,205,53)" fg:x="361" fg:w="1"/><text x="28.3872%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="28.3710%" y="373" width="0.0779%" height="15" fill="rgb(239,140,53)" fg:x="364" fg:w="1"/><text x="28.6210%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="28.6048%" y="277" width="0.0779%" height="15" fill="rgb(248,95,9)" fg:x="367" fg:w="1"/><text x="28.8548%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="28.6048%" y="261" width="0.0779%" height="15" fill="rgb(254,58,47)" fg:x="367" fg:w="1"/><text x="28.8548%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.6048%" y="245" width="0.0779%" height="15" fill="rgb(234,227,14)" fg:x="367" fg:w="1"/><text x="28.8548%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="28.4489%" y="341" width="0.3118%" height="15" fill="rgb(205,192,45)" fg:x="365" fg:w="4"/><text x="28.6989%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="28.4489%" y="325" width="0.3118%" height="15" fill="rgb(253,187,31)" fg:x="365" fg:w="4"/><text x="28.6989%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="28.4489%" y="309" width="0.3118%" height="15" fill="rgb(222,6,32)" fg:x="365" fg:w="4"/><text x="28.6989%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="28.4489%" y="293" width="0.3118%" height="15" fill="rgb(249,190,19)" fg:x="365" fg:w="4"/><text x="28.6989%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.6828%" y="277" width="0.0779%" height="15" fill="rgb(251,28,20)" fg:x="368" fg:w="1"/><text x="28.9328%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.47%)</title><rect x="29.2284%" y="309" width="0.4677%" height="15" fill="rgb(210,223,40)" fg:x="375" fg:w="6"/><text x="29.4784%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.5401%" y="293" width="0.1559%" height="15" fill="rgb(216,137,22)" fg:x="379" fg:w="2"/><text x="29.7901%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.7740%" y="277" width="0.0779%" height="15" fill="rgb(247,39,34)" fg:x="382" fg:w="1"/><text x="30.0240%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7740%" y="261" width="0.0779%" height="15" fill="rgb(239,43,50)" fg:x="382" fg:w="1"/><text x="30.0240%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.78%)</title><rect x="29.1504%" y="325" width="0.7794%" height="15" fill="rgb(241,212,9)" fg:x="374" fg:w="10"/><text x="29.4004%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="29.6960%" y="309" width="0.2338%" height="15" fill="rgb(205,8,2)" fg:x="381" fg:w="3"/><text x="29.9460%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="29.7740%" y="293" width="0.1559%" height="15" fill="rgb(217,173,54)" fg:x="382" fg:w="2"/><text x="30.0240%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="29.8519%" y="277" width="0.0779%" height="15" fill="rgb(208,149,52)" fg:x="383" fg:w="1"/><text x="30.1019%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.8519%" y="261" width="0.0779%" height="15" fill="rgb(239,99,40)" fg:x="383" fg:w="1"/><text x="30.1019%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.56%)</title><rect x="28.4489%" y="357" width="1.5588%" height="15" fill="rgb(233,214,26)" fg:x="365" fg:w="20"/><text x="28.6989%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.25%)</title><rect x="28.7607%" y="341" width="1.2471%" height="15" fill="rgb(231,225,37)" fg:x="369" fg:w="16"/><text x="29.0107%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9299%" y="325" width="0.0779%" height="15" fill="rgb(252,55,35)" fg:x="384" fg:w="1"/><text x="30.1799%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 1.71%)</title><rect x="28.4489%" y="373" width="1.7147%" height="15" fill="rgb(239,43,18)" fg:x="365" fg:w="22"/><text x="28.6989%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="30.0078%" y="357" width="0.1559%" height="15" fill="rgb(251,125,49)" fg:x="385" fg:w="2"/><text x="30.2578%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="30.0078%" y="341" width="0.1559%" height="15" fill="rgb(212,83,54)" fg:x="385" fg:w="2"/><text x="30.2578%" y="351.50"></text></g><g><title>engine::session::state::State::flush_entities (105 samples, 8.18%)</title><rect x="22.2915%" y="501" width="8.1839%" height="15" fill="rgb(250,75,6)" fg:x="286" fg:w="105"/><text x="22.5415%" y="511.50">engine::ses..</text></g><g><title>core::iter::adapters::try_process (100 samples, 7.79%)</title><rect x="22.6812%" y="485" width="7.7942%" height="15" fill="rgb(252,36,40)" fg:x="291" fg:w="100"/><text x="22.9312%" y="495.50">core::iter:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 7.79%)</title><rect x="22.6812%" y="469" width="7.7942%" height="15" fill="rgb(230,91,51)" fg:x="291" fg:w="100"/><text x="22.9312%" y="479.50">&lt;alloc::vec..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (100 samples, 7.79%)</title><rect x="22.6812%" y="453" width="7.7942%" height="15" fill="rgb(212,92,28)" fg:x="291" fg:w="100"/><text x="22.9312%" y="463.50">engine::ses..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.35%)</title><rect x="27.1239%" y="437" width="3.3515%" height="15" fill="rgb(227,13,22)" fg:x="348" fg:w="43"/><text x="27.3739%" y="447.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (38 samples, 2.96%)</title><rect x="27.5136%" y="421" width="2.9618%" height="15" fill="rgb(239,204,32)" fg:x="353" fg:w="38"/><text x="27.7636%" y="431.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 2.81%)</title><rect x="27.6695%" y="405" width="2.8059%" height="15" fill="rgb(228,49,41)" fg:x="355" fg:w="36"/><text x="27.9195%" y="415.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.26%)</title><rect x="28.2151%" y="389" width="2.2603%" height="15" fill="rgb(206,95,6)" fg:x="362" fg:w="29"/><text x="28.4651%" y="399.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="30.1637%" y="373" width="0.3118%" height="15" fill="rgb(251,20,14)" fg:x="387" fg:w="4"/><text x="30.4137%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="30.3975%" y="357" width="0.0779%" height="15" fill="rgb(214,99,28)" fg:x="390" fg:w="1"/><text x="30.6475%" y="367.50"></text></g><g><title>engine::session::Session::flush (111 samples, 8.65%)</title><rect x="21.9018%" y="549" width="8.6516%" height="15" fill="rgb(239,122,54)" fg:x="281" fg:w="111"/><text x="22.1518%" y="559.50">engine::sess..</text></g><g><title>engine::session::Session::save_changes (108 samples, 8.42%)</title><rect x="22.1356%" y="533" width="8.4178%" height="15" fill="rgb(218,217,46)" fg:x="284" fg:w="108"/><text x="22.3856%" y="543.50">engine::sess..</text></g><g><title>engine::session::state::State::close (107 samples, 8.34%)</title><rect x="22.2136%" y="517" width="8.3398%" height="15" fill="rgb(249,106,28)" fg:x="285" fg:w="107"/><text x="22.4636%" y="527.50">engine::sess..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="30.4754%" y="501" width="0.0779%" height="15" fill="rgb(250,158,18)" fg:x="391" fg:w="1"/><text x="30.7254%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="30.5534%" y="549" width="0.0779%" height="15" fill="rgb(226,137,29)" fg:x="392" fg:w="1"/><text x="30.8034%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (1 samples, 0.08%)</title><rect x="30.5534%" y="533" width="0.0779%" height="15" fill="rgb(210,188,1)" fg:x="392" fg:w="1"/><text x="30.8034%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="30.5534%" y="517" width="0.0779%" height="15" fill="rgb(227,84,42)" fg:x="392" fg:w="1"/><text x="30.8034%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="30.7093%" y="533" width="0.0779%" height="15" fill="rgb(222,147,48)" fg:x="394" fg:w="1"/><text x="30.9593%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="30.7093%" y="517" width="0.0779%" height="15" fill="rgb(241,150,43)" fg:x="394" fg:w="1"/><text x="30.9593%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.7093%" y="501" width="0.0779%" height="15" fill="rgb(206,139,52)" fg:x="394" fg:w="1"/><text x="30.9593%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.7093%" y="485" width="0.0779%" height="15" fill="rgb(230,63,14)" fg:x="394" fg:w="1"/><text x="30.9593%" y="495.50"></text></g><g><title>plugins_core::build::Build::new (4 samples, 0.31%)</title><rect x="30.6313%" y="549" width="0.3118%" height="15" fill="rgb(247,8,20)" fg:x="393" fg:w="4"/><text x="30.8813%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="30.7872%" y="533" width="0.1559%" height="15" fill="rgb(213,115,4)" fg:x="395" fg:w="2"/><text x="31.0372%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="30.8652%" y="517" width="0.0779%" height="15" fill="rgb(241,79,49)" fg:x="396" fg:w="1"/><text x="31.1152%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="30.8652%" y="501" width="0.0779%" height="15" fill="rgb(222,42,35)" fg:x="396" fg:w="1"/><text x="31.1152%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.8652%" y="485" width="0.0779%" height="15" fill="rgb(247,59,23)" fg:x="396" fg:w="1"/><text x="31.1152%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.8652%" y="469" width="0.0779%" height="15" fill="rgb(247,93,18)" fg:x="396" fg:w="1"/><text x="31.1152%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.8652%" y="453" width="0.0779%" height="15" fill="rgb(249,107,47)" fg:x="396" fg:w="1"/><text x="31.1152%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.8652%" y="437" width="0.0779%" height="15" fill="rgb(219,27,1)" fg:x="396" fg:w="1"/><text x="31.1152%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="30.8652%" y="421" width="0.0779%" height="15" fill="rgb(217,82,32)" fg:x="396" fg:w="1"/><text x="31.1152%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="30.8652%" y="405" width="0.0779%" height="15" fill="rgb(250,129,47)" fg:x="396" fg:w="1"/><text x="31.1152%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="30.8652%" y="389" width="0.0779%" height="15" fill="rgb(253,88,35)" fg:x="396" fg:w="1"/><text x="31.1152%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9431%" y="501" width="0.0779%" height="15" fill="rgb(245,221,14)" fg:x="397" fg:w="1"/><text x="31.1931%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9431%" y="485" width="0.0779%" height="15" fill="rgb(217,119,54)" fg:x="397" fg:w="1"/><text x="31.1931%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9431%" y="469" width="0.0779%" height="15" fill="rgb(247,128,31)" fg:x="397" fg:w="1"/><text x="31.1931%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9431%" y="453" width="0.0779%" height="15" fill="rgb(211,99,22)" fg:x="397" fg:w="1"/><text x="31.1931%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0210%" y="501" width="0.0779%" height="15" fill="rgb(212,20,17)" fg:x="398" fg:w="1"/><text x="31.2710%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="30.9431%" y="533" width="0.2338%" height="15" fill="rgb(209,159,29)" fg:x="397" fg:w="3"/><text x="31.1931%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="30.9431%" y="517" width="0.2338%" height="15" fill="rgb(222,177,53)" fg:x="397" fg:w="3"/><text x="31.1931%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0990%" y="501" width="0.0779%" height="15" fill="rgb(234,46,43)" fg:x="399" fg:w="1"/><text x="31.3490%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0990%" y="485" width="0.0779%" height="15" fill="rgb(208,108,14)" fg:x="399" fg:w="1"/><text x="31.3490%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.0990%" y="469" width="0.0779%" height="15" fill="rgb(226,78,53)" fg:x="399" fg:w="1"/><text x="31.3490%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0990%" y="453" width="0.0779%" height="15" fill="rgb(230,20,41)" fg:x="399" fg:w="1"/><text x="31.3490%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.0990%" y="437" width="0.0779%" height="15" fill="rgb(213,195,35)" fg:x="399" fg:w="1"/><text x="31.3490%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="31.1769%" y="517" width="0.0779%" height="15" fill="rgb(242,62,36)" fg:x="400" fg:w="1"/><text x="31.4269%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.2549%" y="453" width="0.1559%" height="15" fill="rgb(222,210,37)" fg:x="401" fg:w="2"/><text x="31.5049%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.2549%" y="437" width="0.1559%" height="15" fill="rgb(232,107,19)" fg:x="401" fg:w="2"/><text x="31.5049%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.2549%" y="421" width="0.1559%" height="15" fill="rgb(235,85,17)" fg:x="401" fg:w="2"/><text x="31.5049%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.2549%" y="405" width="0.1559%" height="15" fill="rgb(219,195,31)" fg:x="401" fg:w="2"/><text x="31.5049%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.2549%" y="389" width="0.1559%" height="15" fill="rgb(231,183,30)" fg:x="401" fg:w="2"/><text x="31.5049%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="31.2549%" y="373" width="0.1559%" height="15" fill="rgb(212,0,11)" fg:x="401" fg:w="2"/><text x="31.5049%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="31.2549%" y="357" width="0.1559%" height="15" fill="rgb(249,53,54)" fg:x="401" fg:w="2"/><text x="31.5049%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="31.2549%" y="341" width="0.1559%" height="15" fill="rgb(211,118,13)" fg:x="401" fg:w="2"/><text x="31.5049%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="31.2549%" y="325" width="0.1559%" height="15" fill="rgb(237,42,9)" fg:x="401" fg:w="2"/><text x="31.5049%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="31.2549%" y="309" width="0.1559%" height="15" fill="rgb(227,68,32)" fg:x="401" fg:w="2"/><text x="31.5049%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="31.2549%" y="293" width="0.1559%" height="15" fill="rgb(238,10,7)" fg:x="401" fg:w="2"/><text x="31.5049%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="31.2549%" y="277" width="0.1559%" height="15" fill="rgb(224,42,12)" fg:x="401" fg:w="2"/><text x="31.5049%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="31.2549%" y="261" width="0.1559%" height="15" fill="rgb(252,190,5)" fg:x="401" fg:w="2"/><text x="31.5049%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="31.2549%" y="245" width="0.1559%" height="15" fill="rgb(220,214,39)" fg:x="401" fg:w="2"/><text x="31.5049%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.2549%" y="229" width="0.1559%" height="15" fill="rgb(247,98,4)" fg:x="401" fg:w="2"/><text x="31.5049%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="31.4108%" y="389" width="0.0779%" height="15" fill="rgb(211,60,12)" fg:x="403" fg:w="1"/><text x="31.6608%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (4 samples, 0.31%)</title><rect x="31.2549%" y="469" width="0.3118%" height="15" fill="rgb(224,42,10)" fg:x="401" fg:w="4"/><text x="31.5049%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.4108%" y="453" width="0.1559%" height="15" fill="rgb(217,167,4)" fg:x="403" fg:w="2"/><text x="31.6608%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.4108%" y="437" width="0.1559%" height="15" fill="rgb(253,18,17)" fg:x="403" fg:w="2"/><text x="31.6608%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.4108%" y="421" width="0.1559%" height="15" fill="rgb(249,186,44)" fg:x="403" fg:w="2"/><text x="31.6608%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.4108%" y="405" width="0.1559%" height="15" fill="rgb(254,124,54)" fg:x="403" fg:w="2"/><text x="31.6608%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.4887%" y="389" width="0.0779%" height="15" fill="rgb(220,124,39)" fg:x="404" fg:w="1"/><text x="31.7387%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.4887%" y="373" width="0.0779%" height="15" fill="rgb(225,96,46)" fg:x="404" fg:w="1"/><text x="31.7387%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="31.5666%" y="469" width="0.0779%" height="15" fill="rgb(221,106,12)" fg:x="405" fg:w="1"/><text x="31.8166%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.5666%" y="453" width="0.0779%" height="15" fill="rgb(227,133,23)" fg:x="405" fg:w="1"/><text x="31.8166%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5666%" y="437" width="0.0779%" height="15" fill="rgb(216,44,52)" fg:x="405" fg:w="1"/><text x="31.8166%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.7225%" y="437" width="0.0779%" height="15" fill="rgb(239,149,7)" fg:x="407" fg:w="1"/><text x="31.9725%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.7225%" y="421" width="0.0779%" height="15" fill="rgb(211,157,31)" fg:x="407" fg:w="1"/><text x="31.9725%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.7225%" y="405" width="0.0779%" height="15" fill="rgb(206,215,22)" fg:x="407" fg:w="1"/><text x="31.9725%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.62%)</title><rect x="31.2549%" y="501" width="0.6235%" height="15" fill="rgb(208,113,15)" fg:x="401" fg:w="8"/><text x="31.5049%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (8 samples, 0.62%)</title><rect x="31.2549%" y="485" width="0.6235%" height="15" fill="rgb(207,189,15)" fg:x="401" fg:w="8"/><text x="31.5049%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.23%)</title><rect x="31.6446%" y="469" width="0.2338%" height="15" fill="rgb(231,115,4)" fg:x="406" fg:w="3"/><text x="31.8946%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="31.7225%" y="453" width="0.1559%" height="15" fill="rgb(253,117,2)" fg:x="407" fg:w="2"/><text x="31.9725%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.8005%" y="437" width="0.0779%" height="15" fill="rgb(248,48,24)" fg:x="408" fg:w="1"/><text x="32.0505%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="31.8784%" y="501" width="0.0779%" height="15" fill="rgb(241,28,46)" fg:x="409" fg:w="1"/><text x="32.1284%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.8784%" y="485" width="0.0779%" height="15" fill="rgb(216,165,52)" fg:x="409" fg:w="1"/><text x="32.1284%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.8784%" y="469" width="0.0779%" height="15" fill="rgb(220,222,34)" fg:x="409" fg:w="1"/><text x="32.1284%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.8784%" y="453" width="0.0779%" height="15" fill="rgb(247,222,49)" fg:x="409" fg:w="1"/><text x="32.1284%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.8784%" y="437" width="0.0779%" height="15" fill="rgb(240,10,31)" fg:x="409" fg:w="1"/><text x="32.1284%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.8784%" y="421" width="0.0779%" height="15" fill="rgb(221,199,35)" fg:x="409" fg:w="1"/><text x="32.1284%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.8784%" y="405" width="0.0779%" height="15" fill="rgb(230,223,11)" fg:x="409" fg:w="1"/><text x="32.1284%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.8784%" y="389" width="0.0779%" height="15" fill="rgb(218,82,45)" fg:x="409" fg:w="1"/><text x="32.1284%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.0343%" y="389" width="0.0779%" height="15" fill="rgb(233,213,33)" fg:x="411" fg:w="1"/><text x="32.2843%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.0343%" y="373" width="0.0779%" height="15" fill="rgb(210,143,52)" fg:x="411" fg:w="1"/><text x="32.2843%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0343%" y="357" width="0.0779%" height="15" fill="rgb(206,95,4)" fg:x="411" fg:w="1"/><text x="32.2843%" y="367.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.94%)</title><rect x="31.2549%" y="517" width="0.9353%" height="15" fill="rgb(246,164,46)" fg:x="401" fg:w="12"/><text x="31.5049%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.23%)</title><rect x="31.9564%" y="501" width="0.2338%" height="15" fill="rgb(213,210,47)" fg:x="410" fg:w="3"/><text x="32.2064%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="31.9564%" y="485" width="0.2338%" height="15" fill="rgb(210,12,38)" fg:x="410" fg:w="3"/><text x="32.2064%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="32.0343%" y="469" width="0.1559%" height="15" fill="rgb(252,192,54)" fg:x="411" fg:w="2"/><text x="32.2843%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="32.0343%" y="453" width="0.1559%" height="15" fill="rgb(242,92,6)" fg:x="411" fg:w="2"/><text x="32.2843%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.0343%" y="437" width="0.1559%" height="15" fill="rgb(253,154,15)" fg:x="411" fg:w="2"/><text x="32.2843%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.0343%" y="421" width="0.1559%" height="15" fill="rgb(209,20,43)" fg:x="411" fg:w="2"/><text x="32.2843%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="32.0343%" y="405" width="0.1559%" height="15" fill="rgb(232,28,49)" fg:x="411" fg:w="2"/><text x="32.2843%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.1122%" y="389" width="0.0779%" height="15" fill="rgb(248,131,53)" fg:x="412" fg:w="1"/><text x="32.3622%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="32.1122%" y="373" width="0.0779%" height="15" fill="rgb(214,16,30)" fg:x="412" fg:w="1"/><text x="32.3622%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.1122%" y="357" width="0.0779%" height="15" fill="rgb(245,16,0)" fg:x="412" fg:w="1"/><text x="32.3622%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1122%" y="341" width="0.0779%" height="15" fill="rgb(245,17,35)" fg:x="412" fg:w="1"/><text x="32.3622%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.09%)</title><rect x="31.1769%" y="533" width="1.0912%" height="15" fill="rgb(249,27,53)" fg:x="400" fg:w="14"/><text x="31.4269%" y="543.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="32.1902%" y="517" width="0.0779%" height="15" fill="rgb(214,73,24)" fg:x="413" fg:w="1"/><text x="32.4402%" y="527.50"></text></g><g><title>plugins_core::build::Build::save (20 samples, 1.56%)</title><rect x="30.9431%" y="549" width="1.5588%" height="15" fill="rgb(223,84,37)" fg:x="397" fg:w="20"/><text x="31.1931%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="32.2681%" y="533" width="0.2338%" height="15" fill="rgb(210,109,28)" fg:x="414" fg:w="3"/><text x="32.5181%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="32.2681%" y="517" width="0.2338%" height="15" fill="rgb(208,186,6)" fg:x="414" fg:w="3"/><text x="32.5181%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4240%" y="501" width="0.0779%" height="15" fill="rgb(235,201,30)" fg:x="416" fg:w="1"/><text x="32.6740%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4240%" y="485" width="0.0779%" height="15" fill="rgb(216,198,48)" fg:x="416" fg:w="1"/><text x="32.6740%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.4240%" y="469" width="0.0779%" height="15" fill="rgb(254,186,25)" fg:x="416" fg:w="1"/><text x="32.6740%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.4240%" y="453" width="0.0779%" height="15" fill="rgb(227,87,5)" fg:x="416" fg:w="1"/><text x="32.6740%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.4240%" y="437" width="0.0779%" height="15" fill="rgb(236,205,25)" fg:x="416" fg:w="1"/><text x="32.6740%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.4240%" y="421" width="0.0779%" height="15" fill="rgb(229,99,32)" fg:x="416" fg:w="1"/><text x="32.6740%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.4240%" y="405" width="0.0779%" height="15" fill="rgb(231,177,31)" fg:x="416" fg:w="1"/><text x="32.6740%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.4240%" y="389" width="0.0779%" height="15" fill="rgb(246,15,2)" fg:x="416" fg:w="1"/><text x="32.6740%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.4240%" y="373" width="0.0779%" height="15" fill="rgb(207,39,15)" fg:x="416" fg:w="1"/><text x="32.6740%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.4240%" y="357" width="0.0779%" height="15" fill="rgb(207,44,9)" fg:x="416" fg:w="1"/><text x="32.6740%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.4240%" y="341" width="0.0779%" height="15" fill="rgb(225,224,33)" fg:x="416" fg:w="1"/><text x="32.6740%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.4240%" y="325" width="0.0779%" height="15" fill="rgb(252,151,3)" fg:x="416" fg:w="1"/><text x="32.6740%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.4240%" y="309" width="0.0779%" height="15" fill="rgb(211,140,13)" fg:x="416" fg:w="1"/><text x="32.6740%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4240%" y="293" width="0.0779%" height="15" fill="rgb(239,225,17)" fg:x="416" fg:w="1"/><text x="32.6740%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="32.5019%" y="517" width="0.0779%" height="15" fill="rgb(223,170,52)" fg:x="417" fg:w="1"/><text x="32.7519%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.5019%" y="501" width="0.0779%" height="15" fill="rgb(212,64,21)" fg:x="417" fg:w="1"/><text x="32.7519%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5019%" y="485" width="0.0779%" height="15" fill="rgb(236,126,48)" fg:x="417" fg:w="1"/><text x="32.7519%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.5799%" y="453" width="0.0779%" height="15" fill="rgb(209,135,11)" fg:x="418" fg:w="1"/><text x="32.8299%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.5799%" y="437" width="0.0779%" height="15" fill="rgb(228,126,40)" fg:x="418" fg:w="1"/><text x="32.8299%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.5799%" y="421" width="0.0779%" height="15" fill="rgb(205,196,36)" fg:x="418" fg:w="1"/><text x="32.8299%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5799%" y="405" width="0.0779%" height="15" fill="rgb(243,160,33)" fg:x="418" fg:w="1"/><text x="32.8299%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5799%" y="389" width="0.0779%" height="15" fill="rgb(210,84,20)" fg:x="418" fg:w="1"/><text x="32.8299%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.5799%" y="373" width="0.0779%" height="15" fill="rgb(228,213,30)" fg:x="418" fg:w="1"/><text x="32.8299%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.5799%" y="357" width="0.0779%" height="15" fill="rgb(252,33,45)" fg:x="418" fg:w="1"/><text x="32.8299%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.5799%" y="341" width="0.0779%" height="15" fill="rgb(254,227,20)" fg:x="418" fg:w="1"/><text x="32.8299%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.5799%" y="325" width="0.0779%" height="15" fill="rgb(228,192,2)" fg:x="418" fg:w="1"/><text x="32.8299%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.5799%" y="309" width="0.0779%" height="15" fill="rgb(233,32,8)" fg:x="418" fg:w="1"/><text x="32.8299%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.5799%" y="293" width="0.0779%" height="15" fill="rgb(220,146,47)" fg:x="418" fg:w="1"/><text x="32.8299%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.5799%" y="277" width="0.0779%" height="15" fill="rgb(246,194,1)" fg:x="418" fg:w="1"/><text x="32.8299%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.5799%" y="261" width="0.0779%" height="15" fill="rgb(218,203,9)" fg:x="418" fg:w="1"/><text x="32.8299%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.5799%" y="245" width="0.0779%" height="15" fill="rgb(237,97,14)" fg:x="418" fg:w="1"/><text x="32.8299%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5799%" y="229" width="0.0779%" height="15" fill="rgb(239,76,15)" fg:x="418" fg:w="1"/><text x="32.8299%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6578%" y="421" width="0.0779%" height="15" fill="rgb(222,53,45)" fg:x="419" fg:w="1"/><text x="32.9078%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.7358%" y="389" width="0.0779%" height="15" fill="rgb(237,88,5)" fg:x="420" fg:w="1"/><text x="32.9858%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.7358%" y="373" width="0.0779%" height="15" fill="rgb(218,223,35)" fg:x="420" fg:w="1"/><text x="32.9858%" y="383.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="32.5799%" y="485" width="0.3118%" height="15" fill="rgb(243,229,38)" fg:x="418" fg:w="4"/><text x="32.8299%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.31%)</title><rect x="32.5799%" y="469" width="0.3118%" height="15" fill="rgb(240,75,41)" fg:x="418" fg:w="4"/><text x="32.8299%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="32.6578%" y="453" width="0.2338%" height="15" fill="rgb(209,110,37)" fg:x="419" fg:w="3"/><text x="32.9078%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="32.6578%" y="437" width="0.2338%" height="15" fill="rgb(221,130,46)" fg:x="419" fg:w="3"/><text x="32.9078%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.7358%" y="421" width="0.1559%" height="15" fill="rgb(237,160,20)" fg:x="420" fg:w="2"/><text x="32.9858%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.7358%" y="405" width="0.1559%" height="15" fill="rgb(234,126,24)" fg:x="420" fg:w="2"/><text x="32.9858%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.8137%" y="389" width="0.0779%" height="15" fill="rgb(207,177,9)" fg:x="421" fg:w="1"/><text x="33.0637%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.8137%" y="373" width="0.0779%" height="15" fill="rgb(231,191,33)" fg:x="421" fg:w="1"/><text x="33.0637%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="32.8917%" y="469" width="0.0779%" height="15" fill="rgb(207,42,1)" fg:x="422" fg:w="1"/><text x="33.1417%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8917%" y="453" width="0.0779%" height="15" fill="rgb(218,34,50)" fg:x="422" fg:w="1"/><text x="33.1417%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (6 samples, 0.47%)</title><rect x="32.5799%" y="517" width="0.4677%" height="15" fill="rgb(254,126,39)" fg:x="418" fg:w="6"/><text x="32.8299%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.47%)</title><rect x="32.5799%" y="501" width="0.4677%" height="15" fill="rgb(251,17,26)" fg:x="418" fg:w="6"/><text x="32.8299%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="32.8917%" y="485" width="0.1559%" height="15" fill="rgb(252,215,34)" fg:x="422" fg:w="2"/><text x="33.1417%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="32.9696%" y="469" width="0.0779%" height="15" fill="rgb(217,120,44)" fg:x="423" fg:w="1"/><text x="33.2196%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9696%" y="453" width="0.0779%" height="15" fill="rgb(211,31,11)" fg:x="423" fg:w="1"/><text x="33.2196%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="33.0475%" y="501" width="0.0779%" height="15" fill="rgb(222,69,51)" fg:x="424" fg:w="1"/><text x="33.2975%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.0475%" y="485" width="0.0779%" height="15" fill="rgb(215,229,42)" fg:x="424" fg:w="1"/><text x="33.2975%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="33.0475%" y="469" width="0.0779%" height="15" fill="rgb(212,102,15)" fg:x="424" fg:w="1"/><text x="33.2975%" y="479.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (10 samples, 0.78%)</title><rect x="32.5019%" y="549" width="0.7794%" height="15" fill="rgb(205,179,41)" fg:x="417" fg:w="10"/><text x="32.7519%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (10 samples, 0.78%)</title><rect x="32.5019%" y="533" width="0.7794%" height="15" fill="rgb(219,148,46)" fg:x="417" fg:w="10"/><text x="32.7519%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.23%)</title><rect x="33.0475%" y="517" width="0.2338%" height="15" fill="rgb(243,40,19)" fg:x="424" fg:w="3"/><text x="33.2975%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="33.1255%" y="501" width="0.1559%" height="15" fill="rgb(208,206,34)" fg:x="425" fg:w="2"/><text x="33.3755%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.1255%" y="485" width="0.1559%" height="15" fill="rgb(244,184,38)" fg:x="425" fg:w="2"/><text x="33.3755%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="33.1255%" y="469" width="0.1559%" height="15" fill="rgb(244,151,47)" fg:x="425" fg:w="2"/><text x="33.3755%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="33.2034%" y="453" width="0.0779%" height="15" fill="rgb(236,134,42)" fg:x="426" fg:w="1"/><text x="33.4534%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.2034%" y="437" width="0.0779%" height="15" fill="rgb(233,93,22)" fg:x="426" fg:w="1"/><text x="33.4534%" y="447.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="33.2814%" y="533" width="0.0779%" height="15" fill="rgb(211,202,10)" fg:x="427" fg:w="1"/><text x="33.5314%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.2814%" y="517" width="0.0779%" height="15" fill="rgb(240,63,8)" fg:x="427" fg:w="1"/><text x="33.5314%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.2814%" y="501" width="0.0779%" height="15" fill="rgb(214,9,4)" fg:x="427" fg:w="1"/><text x="33.5314%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3593%" y="501" width="0.0779%" height="15" fill="rgb(243,66,45)" fg:x="428" fg:w="1"/><text x="33.6093%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="33.4373%" y="485" width="0.0779%" height="15" fill="rgb(220,50,42)" fg:x="429" fg:w="1"/><text x="33.6873%" y="495.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (4 samples, 0.31%)</title><rect x="33.2814%" y="549" width="0.3118%" height="15" fill="rgb(220,134,27)" fg:x="427" fg:w="4"/><text x="33.5314%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.23%)</title><rect x="33.3593%" y="533" width="0.2338%" height="15" fill="rgb(246,151,50)" fg:x="428" fg:w="3"/><text x="33.6093%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.23%)</title><rect x="33.3593%" y="517" width="0.2338%" height="15" fill="rgb(238,216,27)" fg:x="428" fg:w="3"/><text x="33.6093%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="33.4373%" y="501" width="0.1559%" height="15" fill="rgb(250,92,11)" fg:x="429" fg:w="2"/><text x="33.6873%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (1 samples, 0.08%)</title><rect x="33.5152%" y="485" width="0.0779%" height="15" fill="rgb(248,183,6)" fg:x="430" fg:w="1"/><text x="33.7652%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="33.5152%" y="469" width="0.0779%" height="15" fill="rgb(211,204,50)" fg:x="430" fg:w="1"/><text x="33.7652%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="33.5152%" y="453" width="0.0779%" height="15" fill="rgb(252,55,47)" fg:x="430" fg:w="1"/><text x="33.7652%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::OpenedScopeRefMut&lt;plugins_core::carrying::model::Containing,kernel::model::entity::Entity&gt;&gt; (1 samples, 0.08%)</title><rect x="33.5931%" y="533" width="0.0779%" height="15" fill="rgb(240,198,32)" fg:x="431" fg:w="1"/><text x="33.8431%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5931%" y="517" width="0.0779%" height="15" fill="rgb(224,203,19)" fg:x="431" fg:w="1"/><text x="33.8431%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6711%" y="469" width="0.0779%" height="15" fill="rgb(205,27,16)" fg:x="432" fg:w="1"/><text x="33.9211%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6711%" y="453" width="0.0779%" height="15" fill="rgb(224,226,17)" fg:x="432" fg:w="1"/><text x="33.9211%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="33.6711%" y="501" width="0.1559%" height="15" fill="rgb(205,216,54)" fg:x="432" fg:w="2"/><text x="33.9211%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="33.6711%" y="485" width="0.1559%" height="15" fill="rgb(248,168,46)" fg:x="432" fg:w="2"/><text x="33.9211%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7490%" y="469" width="0.0779%" height="15" fill="rgb(226,111,45)" fg:x="433" fg:w="1"/><text x="33.9990%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.7490%" y="453" width="0.0779%" height="15" fill="rgb(231,15,9)" fg:x="433" fg:w="1"/><text x="33.9990%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.23%)</title><rect x="33.6711%" y="533" width="0.2338%" height="15" fill="rgb(243,168,3)" fg:x="432" fg:w="3"/><text x="33.9211%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="33.6711%" y="517" width="0.2338%" height="15" fill="rgb(221,220,54)" fg:x="432" fg:w="3"/><text x="33.9211%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.8270%" y="501" width="0.0779%" height="15" fill="rgb(232,174,38)" fg:x="434" fg:w="1"/><text x="34.0770%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="33.8270%" y="485" width="0.0779%" height="15" fill="rgb(205,14,38)" fg:x="434" fg:w="1"/><text x="34.0770%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8270%" y="469" width="0.0779%" height="15" fill="rgb(234,89,19)" fg:x="434" fg:w="1"/><text x="34.0770%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8270%" y="453" width="0.0779%" height="15" fill="rgb(216,68,51)" fg:x="434" fg:w="1"/><text x="34.0770%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8270%" y="437" width="0.0779%" height="15" fill="rgb(213,49,2)" fg:x="434" fg:w="1"/><text x="34.0770%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.8270%" y="421" width="0.0779%" height="15" fill="rgb(242,146,30)" fg:x="434" fg:w="1"/><text x="34.0770%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.8270%" y="405" width="0.0779%" height="15" fill="rgb(224,188,11)" fg:x="434" fg:w="1"/><text x="34.0770%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.8270%" y="389" width="0.0779%" height="15" fill="rgb(213,159,11)" fg:x="434" fg:w="1"/><text x="34.0770%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8270%" y="373" width="0.0779%" height="15" fill="rgb(229,13,31)" fg:x="434" fg:w="1"/><text x="34.0770%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8270%" y="357" width="0.0779%" height="15" fill="rgb(209,103,11)" fg:x="434" fg:w="1"/><text x="34.0770%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.8270%" y="341" width="0.0779%" height="15" fill="rgb(206,3,4)" fg:x="434" fg:w="1"/><text x="34.0770%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.8270%" y="325" width="0.0779%" height="15" fill="rgb(252,10,49)" fg:x="434" fg:w="1"/><text x="34.0770%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.8270%" y="309" width="0.0779%" height="15" fill="rgb(217,160,32)" fg:x="434" fg:w="1"/><text x="34.0770%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.8270%" y="293" width="0.0779%" height="15" fill="rgb(249,196,0)" fg:x="434" fg:w="1"/><text x="34.0770%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8270%" y="277" width="0.0779%" height="15" fill="rgb(213,17,48)" fg:x="434" fg:w="1"/><text x="34.0770%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.9829%" y="485" width="0.0779%" height="15" fill="rgb(206,42,46)" fg:x="436" fg:w="1"/><text x="34.2329%" y="495.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.23%)</title><rect x="33.9049%" y="533" width="0.2338%" height="15" fill="rgb(212,105,24)" fg:x="435" fg:w="3"/><text x="34.1549%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.23%)</title><rect x="33.9049%" y="517" width="0.2338%" height="15" fill="rgb(243,216,30)" fg:x="435" fg:w="3"/><text x="34.1549%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="33.9049%" y="501" width="0.2338%" height="15" fill="rgb(207,121,3)" fg:x="435" fg:w="3"/><text x="34.1549%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.0608%" y="485" width="0.0779%" height="15" fill="rgb(249,78,0)" fg:x="437" fg:w="1"/><text x="34.3108%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.2167%" y="501" width="0.0779%" height="15" fill="rgb(244,151,32)" fg:x="439" fg:w="1"/><text x="34.4667%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.2167%" y="485" width="0.0779%" height="15" fill="rgb(228,63,25)" fg:x="439" fg:w="1"/><text x="34.4667%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2167%" y="469" width="0.0779%" height="15" fill="rgb(231,158,23)" fg:x="439" fg:w="1"/><text x="34.4667%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (5 samples, 0.39%)</title><rect x="34.1387%" y="517" width="0.3897%" height="15" fill="rgb(248,107,23)" fg:x="438" fg:w="5"/><text x="34.3887%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="34.2946%" y="501" width="0.2338%" height="15" fill="rgb(215,168,21)" fg:x="440" fg:w="3"/><text x="34.5446%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="34.2946%" y="485" width="0.2338%" height="15" fill="rgb(227,83,22)" fg:x="440" fg:w="3"/><text x="34.5446%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.3726%" y="469" width="0.1559%" height="15" fill="rgb(217,118,43)" fg:x="441" fg:w="2"/><text x="34.6226%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.3726%" y="453" width="0.1559%" height="15" fill="rgb(229,220,41)" fg:x="441" fg:w="2"/><text x="34.6226%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.3726%" y="437" width="0.1559%" height="15" fill="rgb(254,146,46)" fg:x="441" fg:w="2"/><text x="34.6226%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.3726%" y="421" width="0.1559%" height="15" fill="rgb(233,208,31)" fg:x="441" fg:w="2"/><text x="34.6226%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="34.3726%" y="405" width="0.1559%" height="15" fill="rgb(222,162,7)" fg:x="441" fg:w="2"/><text x="34.6226%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.4505%" y="389" width="0.0779%" height="15" fill="rgb(230,117,45)" fg:x="442" fg:w="1"/><text x="34.7005%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.5284%" y="453" width="0.1559%" height="15" fill="rgb(239,163,6)" fg:x="443" fg:w="2"/><text x="34.7784%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="34.5284%" y="469" width="0.2338%" height="15" fill="rgb(246,130,17)" fg:x="443" fg:w="3"/><text x="34.7784%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6843%" y="453" width="0.0779%" height="15" fill="rgb(216,84,5)" fg:x="445" fg:w="1"/><text x="34.9343%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6843%" y="437" width="0.0779%" height="15" fill="rgb(230,200,21)" fg:x="445" fg:w="1"/><text x="34.9343%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.6843%" y="421" width="0.0779%" height="15" fill="rgb(224,2,8)" fg:x="445" fg:w="1"/><text x="34.9343%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6843%" y="405" width="0.0779%" height="15" fill="rgb(238,178,10)" fg:x="445" fg:w="1"/><text x="34.9343%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6843%" y="389" width="0.0779%" height="15" fill="rgb(242,153,24)" fg:x="445" fg:w="1"/><text x="34.9343%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6843%" y="373" width="0.0779%" height="15" fill="rgb(242,32,48)" fg:x="445" fg:w="1"/><text x="34.9343%" y="383.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="34.5284%" y="485" width="0.3118%" height="15" fill="rgb(227,36,0)" fg:x="443" fg:w="4"/><text x="34.7784%" y="495.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="34.7623%" y="469" width="0.0779%" height="15" fill="rgb(251,33,35)" fg:x="446" fg:w="1"/><text x="35.0123%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.7623%" y="453" width="0.0779%" height="15" fill="rgb(232,168,51)" fg:x="446" fg:w="1"/><text x="35.0123%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8402%" y="453" width="0.0779%" height="15" fill="rgb(228,56,10)" fg:x="447" fg:w="1"/><text x="35.0902%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8402%" y="437" width="0.0779%" height="15" fill="rgb(231,10,26)" fg:x="447" fg:w="1"/><text x="35.0902%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.8402%" y="421" width="0.0779%" height="15" fill="rgb(226,202,12)" fg:x="447" fg:w="1"/><text x="35.0902%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8402%" y="405" width="0.0779%" height="15" fill="rgb(251,49,21)" fg:x="447" fg:w="1"/><text x="35.0902%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8402%" y="389" width="0.0779%" height="15" fill="rgb(206,228,28)" fg:x="447" fg:w="1"/><text x="35.0902%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8402%" y="373" width="0.0779%" height="15" fill="rgb(205,198,31)" fg:x="447" fg:w="1"/><text x="35.0902%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8402%" y="357" width="0.0779%" height="15" fill="rgb(213,69,1)" fg:x="447" fg:w="1"/><text x="35.0902%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8402%" y="341" width="0.0779%" height="15" fill="rgb(209,177,9)" fg:x="447" fg:w="1"/><text x="35.0902%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.8402%" y="325" width="0.0779%" height="15" fill="rgb(227,119,30)" fg:x="447" fg:w="1"/><text x="35.0902%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.8402%" y="309" width="0.0779%" height="15" fill="rgb(234,106,41)" fg:x="447" fg:w="1"/><text x="35.0902%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="34.8402%" y="469" width="0.2338%" height="15" fill="rgb(244,103,47)" fg:x="447" fg:w="3"/><text x="35.0902%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.9182%" y="453" width="0.1559%" height="15" fill="rgb(212,211,25)" fg:x="448" fg:w="2"/><text x="35.1682%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.9182%" y="437" width="0.1559%" height="15" fill="rgb(208,63,53)" fg:x="448" fg:w="2"/><text x="35.1682%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.9961%" y="421" width="0.0779%" height="15" fill="rgb(213,176,21)" fg:x="449" fg:w="1"/><text x="35.2461%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9961%" y="405" width="0.0779%" height="15" fill="rgb(243,124,12)" fg:x="449" fg:w="1"/><text x="35.2461%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9961%" y="389" width="0.0779%" height="15" fill="rgb(239,2,35)" fg:x="449" fg:w="1"/><text x="35.2461%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.9961%" y="373" width="0.0779%" height="15" fill="rgb(253,169,22)" fg:x="449" fg:w="1"/><text x="35.2461%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.0740%" y="469" width="0.0779%" height="15" fill="rgb(254,51,12)" fg:x="450" fg:w="1"/><text x="35.3240%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0740%" y="453" width="0.0779%" height="15" fill="rgb(244,17,47)" fg:x="450" fg:w="1"/><text x="35.3240%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (14 samples, 1.09%)</title><rect x="34.1387%" y="533" width="1.0912%" height="15" fill="rgb(251,45,46)" fg:x="438" fg:w="14"/><text x="34.3887%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (9 samples, 0.70%)</title><rect x="34.5284%" y="517" width="0.7015%" height="15" fill="rgb(223,87,43)" fg:x="443" fg:w="9"/><text x="34.7784%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.70%)</title><rect x="34.5284%" y="501" width="0.7015%" height="15" fill="rgb(230,132,31)" fg:x="443" fg:w="9"/><text x="34.7784%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="34.8402%" y="485" width="0.3897%" height="15" fill="rgb(206,99,1)" fg:x="447" fg:w="5"/><text x="35.0902%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.1520%" y="469" width="0.0779%" height="15" fill="rgb(227,110,25)" fg:x="451" fg:w="1"/><text x="35.4020%" y="479.50"></text></g><g><title>plugins_core::tools::set_container (23 samples, 1.79%)</title><rect x="33.5931%" y="549" width="1.7927%" height="15" fill="rgb(217,182,7)" fg:x="431" fg:w="23"/><text x="33.8431%" y="559.50">p..</text></g><g><title>plugins_core::location::model::Location::set (2 samples, 0.16%)</title><rect x="35.2299%" y="533" width="0.1559%" height="15" fill="rgb(250,176,4)" fg:x="452" fg:w="2"/><text x="35.4799%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="35.2299%" y="517" width="0.1559%" height="15" fill="rgb(244,98,30)" fg:x="452" fg:w="2"/><text x="35.4799%" y="527.50"></text></g><g><title>plugins_core::location::model::_::&lt;impl serde::ser::Serialize for plugins_core::location::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="35.2299%" y="501" width="0.1559%" height="15" fill="rgb(228,150,42)" fg:x="452" fg:w="2"/><text x="35.4799%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.2299%" y="485" width="0.1559%" height="15" fill="rgb(231,91,46)" fg:x="452" fg:w="2"/><text x="35.4799%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="35.2299%" y="469" width="0.1559%" height="15" fill="rgb(252,161,32)" fg:x="452" fg:w="2"/><text x="35.4799%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.2299%" y="453" width="0.1559%" height="15" fill="rgb(236,69,41)" fg:x="452" fg:w="2"/><text x="35.4799%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.2299%" y="437" width="0.1559%" height="15" fill="rgb(212,160,3)" fg:x="452" fg:w="2"/><text x="35.4799%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.3858%" y="501" width="0.0779%" height="15" fill="rgb(216,5,50)" fg:x="454" fg:w="1"/><text x="35.6358%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="35.3858%" y="517" width="0.1559%" height="15" fill="rgb(241,138,25)" fg:x="454" fg:w="2"/><text x="35.6358%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.4638%" y="501" width="0.0779%" height="15" fill="rgb(239,42,18)" fg:x="455" fg:w="1"/><text x="35.7138%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (185 samples, 14.42%)</title><rect x="21.2003%" y="565" width="14.4193%" height="15" fill="rgb(239,40,7)" fg:x="272" fg:w="185"/><text x="21.4503%" y="575.50">plugins_core::build::B..</text></g><g><title>plugins_core::tools::set_wearing (3 samples, 0.23%)</title><rect x="35.3858%" y="549" width="0.2338%" height="15" fill="rgb(239,11,31)" fg:x="454" fg:w="3"/><text x="35.6358%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.23%)</title><rect x="35.3858%" y="533" width="0.2338%" height="15" fill="rgb(224,77,40)" fg:x="454" fg:w="3"/><text x="35.6358%" y="543.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="35.5417%" y="517" width="0.0779%" height="15" fill="rgb(226,15,5)" fg:x="456" fg:w="1"/><text x="35.7917%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.5417%" y="501" width="0.0779%" height="15" fill="rgb(254,188,5)" fg:x="456" fg:w="1"/><text x="35.7917%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.5417%" y="485" width="0.0779%" height="15" fill="rgb(241,148,52)" fg:x="456" fg:w="1"/><text x="35.7917%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="35.5417%" y="469" width="0.0779%" height="15" fill="rgb(251,48,36)" fg:x="456" fg:w="1"/><text x="35.7917%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="35.6196%" y="533" width="0.0779%" height="15" fill="rgb(243,83,13)" fg:x="457" fg:w="1"/><text x="35.8696%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="35.6196%" y="517" width="0.0779%" height="15" fill="rgb(210,105,0)" fg:x="457" fg:w="1"/><text x="35.8696%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="35.6196%" y="501" width="0.0779%" height="15" fill="rgb(239,60,36)" fg:x="457" fg:w="1"/><text x="35.8696%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="35.6196%" y="485" width="0.0779%" height="15" fill="rgb(210,20,0)" fg:x="457" fg:w="1"/><text x="35.8696%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="35.6196%" y="469" width="0.0779%" height="15" fill="rgb(244,26,53)" fg:x="457" fg:w="1"/><text x="35.8696%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6196%" y="453" width="0.0779%" height="15" fill="rgb(240,100,49)" fg:x="457" fg:w="1"/><text x="35.8696%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.6196%" y="437" width="0.0779%" height="15" fill="rgb(250,46,45)" fg:x="457" fg:w="1"/><text x="35.8696%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.6196%" y="421" width="0.0779%" height="15" fill="rgb(220,181,29)" fg:x="457" fg:w="1"/><text x="35.8696%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.6196%" y="405" width="0.0779%" height="15" fill="rgb(213,137,33)" fg:x="457" fg:w="1"/><text x="35.8696%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.6196%" y="389" width="0.0779%" height="15" fill="rgb(213,27,48)" fg:x="457" fg:w="1"/><text x="35.8696%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.6196%" y="373" width="0.0779%" height="15" fill="rgb(245,180,39)" fg:x="457" fg:w="1"/><text x="35.8696%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6196%" y="357" width="0.0779%" height="15" fill="rgb(212,158,42)" fg:x="457" fg:w="1"/><text x="35.8696%" y="367.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="35.6976%" y="533" width="0.0779%" height="15" fill="rgb(228,193,18)" fg:x="458" fg:w="1"/><text x="35.9476%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.6976%" y="517" width="0.0779%" height="15" fill="rgb(245,172,29)" fg:x="458" fg:w="1"/><text x="35.9476%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.23%)</title><rect x="35.6196%" y="565" width="0.2338%" height="15" fill="rgb(207,98,24)" fg:x="457" fg:w="3"/><text x="35.8696%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.23%)</title><rect x="35.6196%" y="549" width="0.2338%" height="15" fill="rgb(249,92,26)" fg:x="457" fg:w="3"/><text x="35.8696%" y="559.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="35.7755%" y="533" width="0.0779%" height="15" fill="rgb(217,176,26)" fg:x="459" fg:w="1"/><text x="36.0255%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="35.8535%" y="517" width="0.0779%" height="15" fill="rgb(221,8,39)" fg:x="460" fg:w="1"/><text x="36.1035%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.8535%" y="501" width="0.0779%" height="15" fill="rgb(208,90,18)" fg:x="460" fg:w="1"/><text x="36.1035%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="35.9314%" y="469" width="0.0779%" height="15" fill="rgb(207,202,30)" fg:x="461" fg:w="1"/><text x="36.1814%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (4 samples, 0.31%)</title><rect x="35.8535%" y="533" width="0.3118%" height="15" fill="rgb(231,124,22)" fg:x="460" fg:w="4"/><text x="36.1035%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.23%)</title><rect x="35.9314%" y="517" width="0.2338%" height="15" fill="rgb(206,15,5)" fg:x="461" fg:w="3"/><text x="36.1814%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="35.9314%" y="501" width="0.2338%" height="15" fill="rgb(239,16,52)" fg:x="461" fg:w="3"/><text x="36.1814%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.23%)</title><rect x="35.9314%" y="485" width="0.2338%" height="15" fill="rgb(245,213,29)" fg:x="461" fg:w="3"/><text x="36.1814%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="36.0094%" y="469" width="0.1559%" height="15" fill="rgb(213,203,36)" fg:x="462" fg:w="2"/><text x="36.2594%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.0094%" y="453" width="0.1559%" height="15" fill="rgb(209,55,18)" fg:x="462" fg:w="2"/><text x="36.2594%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0873%" y="437" width="0.0779%" height="15" fill="rgb(207,133,49)" fg:x="463" fg:w="1"/><text x="36.3373%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.0873%" y="421" width="0.0779%" height="15" fill="rgb(240,33,46)" fg:x="463" fg:w="1"/><text x="36.3373%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.1652%" y="533" width="0.0779%" height="15" fill="rgb(212,35,2)" fg:x="464" fg:w="1"/><text x="36.4152%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.1652%" y="517" width="0.0779%" height="15" fill="rgb(231,119,28)" fg:x="464" fg:w="1"/><text x="36.4152%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.1652%" y="501" width="0.0779%" height="15" fill="rgb(252,178,7)" fg:x="464" fg:w="1"/><text x="36.4152%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.1652%" y="485" width="0.0779%" height="15" fill="rgb(251,91,4)" fg:x="464" fg:w="1"/><text x="36.4152%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1652%" y="469" width="0.0779%" height="15" fill="rgb(233,122,19)" fg:x="464" fg:w="1"/><text x="36.4152%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.2432%" y="517" width="0.0779%" height="15" fill="rgb(231,208,46)" fg:x="465" fg:w="1"/><text x="36.4932%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="36.2432%" y="501" width="0.0779%" height="15" fill="rgb(243,15,41)" fg:x="465" fg:w="1"/><text x="36.4932%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2432%" y="485" width="0.0779%" height="15" fill="rgb(210,32,43)" fg:x="465" fg:w="1"/><text x="36.4932%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2432%" y="469" width="0.0779%" height="15" fill="rgb(222,177,15)" fg:x="465" fg:w="1"/><text x="36.4932%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.2432%" y="453" width="0.0779%" height="15" fill="rgb(244,121,34)" fg:x="465" fg:w="1"/><text x="36.4932%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.3211%" y="485" width="0.1559%" height="15" fill="rgb(234,138,4)" fg:x="466" fg:w="2"/><text x="36.5711%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3991%" y="469" width="0.0779%" height="15" fill="rgb(240,97,48)" fg:x="467" fg:w="1"/><text x="36.6491%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3991%" y="453" width="0.0779%" height="15" fill="rgb(237,65,54)" fg:x="467" fg:w="1"/><text x="36.6491%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.3991%" y="437" width="0.0779%" height="15" fill="rgb(214,25,24)" fg:x="467" fg:w="1"/><text x="36.6491%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.3991%" y="421" width="0.0779%" height="15" fill="rgb(213,5,3)" fg:x="467" fg:w="1"/><text x="36.6491%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.3991%" y="405" width="0.0779%" height="15" fill="rgb(219,81,29)" fg:x="467" fg:w="1"/><text x="36.6491%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.3991%" y="389" width="0.0779%" height="15" fill="rgb(220,43,48)" fg:x="467" fg:w="1"/><text x="36.6491%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.3991%" y="373" width="0.0779%" height="15" fill="rgb(239,157,2)" fg:x="467" fg:w="1"/><text x="36.6491%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.3991%" y="357" width="0.0779%" height="15" fill="rgb(213,104,43)" fg:x="467" fg:w="1"/><text x="36.6491%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.3991%" y="341" width="0.0779%" height="15" fill="rgb(237,84,9)" fg:x="467" fg:w="1"/><text x="36.6491%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.3991%" y="325" width="0.0779%" height="15" fill="rgb(252,6,33)" fg:x="467" fg:w="1"/><text x="36.6491%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.3991%" y="309" width="0.0779%" height="15" fill="rgb(251,172,22)" fg:x="467" fg:w="1"/><text x="36.6491%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3991%" y="293" width="0.0779%" height="15" fill="rgb(244,91,53)" fg:x="467" fg:w="1"/><text x="36.6491%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="36.3211%" y="501" width="0.2338%" height="15" fill="rgb(219,29,30)" fg:x="466" fg:w="3"/><text x="36.5711%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4770%" y="485" width="0.0779%" height="15" fill="rgb(213,3,15)" fg:x="468" fg:w="1"/><text x="36.7270%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="36.5549%" y="501" width="0.0779%" height="15" fill="rgb(208,25,28)" fg:x="469" fg:w="1"/><text x="36.8049%" y="511.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="36.5549%" y="485" width="0.0779%" height="15" fill="rgb(252,144,25)" fg:x="469" fg:w="1"/><text x="36.8049%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="36.5549%" y="469" width="0.0779%" height="15" fill="rgb(226,220,25)" fg:x="469" fg:w="1"/><text x="36.8049%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.5549%" y="453" width="0.0779%" height="15" fill="rgb(212,131,28)" fg:x="469" fg:w="1"/><text x="36.8049%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="36.6329%" y="453" width="0.0779%" height="15" fill="rgb(219,143,52)" fg:x="470" fg:w="1"/><text x="36.8829%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.6329%" y="437" width="0.0779%" height="15" fill="rgb(215,56,7)" fg:x="470" fg:w="1"/><text x="36.8829%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.6329%" y="421" width="0.0779%" height="15" fill="rgb(239,59,51)" fg:x="470" fg:w="1"/><text x="36.8829%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.6329%" y="405" width="0.0779%" height="15" fill="rgb(209,215,4)" fg:x="470" fg:w="1"/><text x="36.8829%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.6329%" y="389" width="0.0779%" height="15" fill="rgb(221,118,39)" fg:x="470" fg:w="1"/><text x="36.8829%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="36.7108%" y="453" width="0.0779%" height="15" fill="rgb(236,6,44)" fg:x="471" fg:w="1"/><text x="36.9608%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="36.6329%" y="485" width="0.2338%" height="15" fill="rgb(216,122,9)" fg:x="470" fg:w="3"/><text x="36.8829%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.23%)</title><rect x="36.6329%" y="469" width="0.2338%" height="15" fill="rgb(244,134,42)" fg:x="470" fg:w="3"/><text x="36.8829%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.7888%" y="453" width="0.0779%" height="15" fill="rgb(209,189,35)" fg:x="472" fg:w="1"/><text x="37.0388%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.7888%" y="437" width="0.0779%" height="15" fill="rgb(250,47,36)" fg:x="472" fg:w="1"/><text x="37.0388%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.7888%" y="421" width="0.0779%" height="15" fill="rgb(252,112,4)" fg:x="472" fg:w="1"/><text x="37.0388%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7888%" y="405" width="0.0779%" height="15" fill="rgb(221,79,51)" fg:x="472" fg:w="1"/><text x="37.0388%" y="415.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="36.8667%" y="485" width="0.0779%" height="15" fill="rgb(232,65,53)" fg:x="473" fg:w="1"/><text x="37.1167%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8667%" y="469" width="0.0779%" height="15" fill="rgb(211,37,7)" fg:x="473" fg:w="1"/><text x="37.1167%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.0226%" y="453" width="0.1559%" height="15" fill="rgb(234,221,18)" fg:x="475" fg:w="2"/><text x="37.2726%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1785%" y="453" width="0.0779%" height="15" fill="rgb(220,158,26)" fg:x="477" fg:w="1"/><text x="37.4285%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.2564%" y="421" width="0.0779%" height="15" fill="rgb(220,70,6)" fg:x="478" fg:w="1"/><text x="37.5064%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2564%" y="405" width="0.0779%" height="15" fill="rgb(250,39,48)" fg:x="478" fg:w="1"/><text x="37.5064%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.2564%" y="389" width="0.0779%" height="15" fill="rgb(206,40,27)" fg:x="478" fg:w="1"/><text x="37.5064%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2564%" y="373" width="0.0779%" height="15" fill="rgb(247,80,36)" fg:x="478" fg:w="1"/><text x="37.5064%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.2564%" y="357" width="0.0779%" height="15" fill="rgb(222,9,20)" fg:x="478" fg:w="1"/><text x="37.5064%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.09%)</title><rect x="36.3211%" y="517" width="1.0912%" height="15" fill="rgb(217,26,45)" fg:x="466" fg:w="14"/><text x="36.5711%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.78%)</title><rect x="36.6329%" y="501" width="0.7794%" height="15" fill="rgb(221,67,14)" fg:x="470" fg:w="10"/><text x="36.8829%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.47%)</title><rect x="36.9447%" y="485" width="0.4677%" height="15" fill="rgb(248,100,24)" fg:x="474" fg:w="6"/><text x="37.1947%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="36.9447%" y="469" width="0.4677%" height="15" fill="rgb(230,187,16)" fg:x="474" fg:w="6"/><text x="37.1947%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="37.2564%" y="453" width="0.1559%" height="15" fill="rgb(205,108,13)" fg:x="478" fg:w="2"/><text x="37.5064%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="37.2564%" y="437" width="0.1559%" height="15" fill="rgb(235,71,51)" fg:x="478" fg:w="2"/><text x="37.5064%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="37.3344%" y="421" width="0.0779%" height="15" fill="rgb(251,172,48)" fg:x="479" fg:w="1"/><text x="37.5844%" y="431.50"></text></g><g><title>plugins_core::build::Build::save (17 samples, 1.33%)</title><rect x="36.2432%" y="533" width="1.3250%" height="15" fill="rgb(240,96,49)" fg:x="465" fg:w="17"/><text x="36.4932%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.4123%" y="517" width="0.1559%" height="15" fill="rgb(235,46,36)" fg:x="480" fg:w="2"/><text x="37.6623%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.4903%" y="501" width="0.0779%" height="15" fill="rgb(244,3,49)" fg:x="481" fg:w="1"/><text x="37.7403%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4903%" y="485" width="0.0779%" height="15" fill="rgb(206,78,54)" fg:x="481" fg:w="1"/><text x="37.7403%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (23 samples, 1.79%)</title><rect x="35.8535%" y="565" width="1.7927%" height="15" fill="rgb(208,85,42)" fg:x="460" fg:w="23"/><text x="36.1035%" y="575.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (23 samples, 1.79%)</title><rect x="35.8535%" y="549" width="1.7927%" height="15" fill="rgb(219,196,21)" fg:x="460" fg:w="23"/><text x="36.1035%" y="559.50">p..</text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="37.5682%" y="533" width="0.0779%" height="15" fill="rgb(238,19,9)" fg:x="482" fg:w="1"/><text x="37.8182%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="37.5682%" y="517" width="0.0779%" height="15" fill="rgb(206,86,13)" fg:x="482" fg:w="1"/><text x="37.8182%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="37.5682%" y="501" width="0.0779%" height="15" fill="rgb(214,123,40)" fg:x="482" fg:w="1"/><text x="37.8182%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.5682%" y="485" width="0.0779%" height="15" fill="rgb(243,53,5)" fg:x="482" fg:w="1"/><text x="37.8182%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.5682%" y="469" width="0.0779%" height="15" fill="rgb(254,186,31)" fg:x="482" fg:w="1"/><text x="37.8182%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.5682%" y="453" width="0.0779%" height="15" fill="rgb(221,216,25)" fg:x="482" fg:w="1"/><text x="37.8182%" y="463.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.23%)</title><rect x="37.6461%" y="533" width="0.2338%" height="15" fill="rgb(248,107,42)" fg:x="483" fg:w="3"/><text x="37.8961%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="37.6461%" y="517" width="0.2338%" height="15" fill="rgb(221,85,43)" fg:x="483" fg:w="3"/><text x="37.8961%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="37.6461%" y="501" width="0.2338%" height="15" fill="rgb(225,34,24)" fg:x="483" fg:w="3"/><text x="37.8961%" y="511.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="37.8020%" y="485" width="0.0779%" height="15" fill="rgb(211,119,1)" fg:x="485" fg:w="1"/><text x="38.0520%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="37.8800%" y="533" width="0.0779%" height="15" fill="rgb(254,216,46)" fg:x="486" fg:w="1"/><text x="38.1300%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="37.9579%" y="533" width="0.1559%" height="15" fill="rgb(238,11,38)" fg:x="487" fg:w="2"/><text x="38.2079%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.9579%" y="517" width="0.1559%" height="15" fill="rgb(233,50,15)" fg:x="487" fg:w="2"/><text x="38.2079%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="37.9579%" y="501" width="0.1559%" height="15" fill="rgb(217,181,29)" fg:x="487" fg:w="2"/><text x="38.2079%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="38.0359%" y="485" width="0.0779%" height="15" fill="rgb(214,56,3)" fg:x="488" fg:w="1"/><text x="38.2859%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (9 samples, 0.70%)</title><rect x="37.6461%" y="549" width="0.7015%" height="15" fill="rgb(230,69,45)" fg:x="483" fg:w="9"/><text x="37.8961%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.23%)</title><rect x="38.1138%" y="533" width="0.2338%" height="15" fill="rgb(224,201,50)" fg:x="489" fg:w="3"/><text x="38.3638%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="38.1138%" y="517" width="0.2338%" height="15" fill="rgb(217,228,18)" fg:x="489" fg:w="3"/><text x="38.3638%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.23%)</title><rect x="38.1138%" y="501" width="0.2338%" height="15" fill="rgb(239,33,44)" fg:x="489" fg:w="3"/><text x="38.3638%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="38.2697%" y="485" width="0.0779%" height="15" fill="rgb(248,210,23)" fg:x="491" fg:w="1"/><text x="38.5197%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="38.2697%" y="469" width="0.0779%" height="15" fill="rgb(253,135,8)" fg:x="491" fg:w="1"/><text x="38.5197%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.2697%" y="453" width="0.0779%" height="15" fill="rgb(217,98,21)" fg:x="491" fg:w="1"/><text x="38.5197%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.3476%" y="549" width="0.0779%" height="15" fill="rgb(253,130,21)" fg:x="492" fg:w="1"/><text x="38.5976%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.3476%" y="533" width="0.0779%" height="15" fill="rgb(207,81,54)" fg:x="492" fg:w="1"/><text x="38.5976%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.3476%" y="517" width="0.0779%" height="15" fill="rgb(232,48,33)" fg:x="492" fg:w="1"/><text x="38.5976%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.3476%" y="501" width="0.0779%" height="15" fill="rgb(211,9,35)" fg:x="492" fg:w="1"/><text x="38.5976%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.3476%" y="485" width="0.0779%" height="15" fill="rgb(205,152,21)" fg:x="492" fg:w="1"/><text x="38.5976%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::Entity&gt; (1 samples, 0.08%)</title><rect x="38.4256%" y="549" width="0.0779%" height="15" fill="rgb(249,21,27)" fg:x="493" fg:w="1"/><text x="38.6756%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4256%" y="533" width="0.0779%" height="15" fill="rgb(252,29,24)" fg:x="493" fg:w="1"/><text x="38.6756%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="38.6594%" y="517" width="0.0779%" height="15" fill="rgb(230,130,50)" fg:x="496" fg:w="1"/><text x="38.9094%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="38.6594%" y="501" width="0.0779%" height="15" fill="rgb(239,144,14)" fg:x="496" fg:w="1"/><text x="38.9094%" y="511.50"></text></g><g><title>kernel::model::base::Identity::new (1 samples, 0.08%)</title><rect x="38.6594%" y="485" width="0.0779%" height="15" fill="rgb(227,111,50)" fg:x="496" fg:w="1"/><text x="38.9094%" y="495.50"></text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.31%)</title><rect x="38.5035%" y="549" width="0.3118%" height="15" fill="rgb(254,84,20)" fg:x="494" fg:w="4"/><text x="38.7535%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.23%)</title><rect x="38.5814%" y="533" width="0.2338%" height="15" fill="rgb(232,90,48)" fg:x="495" fg:w="3"/><text x="38.8314%" y="543.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="38.7373%" y="517" width="0.0779%" height="15" fill="rgb(253,63,47)" fg:x="497" fg:w="1"/><text x="38.9873%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="38.7373%" y="501" width="0.0779%" height="15" fill="rgb(251,146,35)" fg:x="497" fg:w="1"/><text x="38.9873%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="38.7373%" y="485" width="0.0779%" height="15" fill="rgb(229,192,35)" fg:x="497" fg:w="1"/><text x="38.9873%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.8153%" y="501" width="0.1559%" height="15" fill="rgb(225,68,9)" fg:x="498" fg:w="2"/><text x="39.0653%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.8153%" y="485" width="0.1559%" height="15" fill="rgb(214,97,34)" fg:x="498" fg:w="2"/><text x="39.0653%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.8932%" y="469" width="0.0779%" height="15" fill="rgb(253,31,26)" fg:x="499" fg:w="1"/><text x="39.1432%" y="479.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="38.8153%" y="533" width="0.3118%" height="15" fill="rgb(225,151,47)" fg:x="498" fg:w="4"/><text x="39.0653%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (4 samples, 0.31%)</title><rect x="38.8153%" y="517" width="0.3118%" height="15" fill="rgb(206,185,9)" fg:x="498" fg:w="4"/><text x="39.0653%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.9712%" y="501" width="0.1559%" height="15" fill="rgb(249,65,17)" fg:x="500" fg:w="2"/><text x="39.2212%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.9712%" y="485" width="0.1559%" height="15" fill="rgb(220,110,10)" fg:x="500" fg:w="2"/><text x="39.2212%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.0491%" y="469" width="0.0779%" height="15" fill="rgb(222,198,49)" fg:x="501" fg:w="1"/><text x="39.2991%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.0491%" y="453" width="0.0779%" height="15" fill="rgb(239,81,13)" fg:x="501" fg:w="1"/><text x="39.2991%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.0491%" y="437" width="0.0779%" height="15" fill="rgb(216,128,11)" fg:x="501" fg:w="1"/><text x="39.2991%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="39.1270%" y="517" width="0.0779%" height="15" fill="rgb(247,156,8)" fg:x="502" fg:w="1"/><text x="39.3770%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.1270%" y="501" width="0.0779%" height="15" fill="rgb(219,173,1)" fg:x="502" fg:w="1"/><text x="39.3770%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.1270%" y="485" width="0.0779%" height="15" fill="rgb(227,42,24)" fg:x="502" fg:w="1"/><text x="39.3770%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2829%" y="453" width="0.0779%" height="15" fill="rgb(253,219,50)" fg:x="504" fg:w="1"/><text x="39.5329%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2829%" y="437" width="0.0779%" height="15" fill="rgb(215,191,54)" fg:x="504" fg:w="1"/><text x="39.5329%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2829%" y="421" width="0.0779%" height="15" fill="rgb(238,83,12)" fg:x="504" fg:w="1"/><text x="39.5329%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2829%" y="405" width="0.0779%" height="15" fill="rgb(205,124,9)" fg:x="504" fg:w="1"/><text x="39.5329%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2829%" y="389" width="0.0779%" height="15" fill="rgb(253,174,7)" fg:x="504" fg:w="1"/><text x="39.5329%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.2829%" y="373" width="0.0779%" height="15" fill="rgb(206,134,49)" fg:x="504" fg:w="1"/><text x="39.5329%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.2829%" y="357" width="0.0779%" height="15" fill="rgb(221,89,20)" fg:x="504" fg:w="1"/><text x="39.5329%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.2829%" y="341" width="0.0779%" height="15" fill="rgb(240,205,13)" fg:x="504" fg:w="1"/><text x="39.5329%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2829%" y="325" width="0.0779%" height="15" fill="rgb(237,174,32)" fg:x="504" fg:w="1"/><text x="39.5329%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2829%" y="309" width="0.0779%" height="15" fill="rgb(226,12,15)" fg:x="504" fg:w="1"/><text x="39.5329%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.2829%" y="293" width="0.0779%" height="15" fill="rgb(245,160,52)" fg:x="504" fg:w="1"/><text x="39.5329%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.2829%" y="277" width="0.0779%" height="15" fill="rgb(253,80,21)" fg:x="504" fg:w="1"/><text x="39.5329%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.2829%" y="261" width="0.0779%" height="15" fill="rgb(231,225,22)" fg:x="504" fg:w="1"/><text x="39.5329%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.2829%" y="245" width="0.0779%" height="15" fill="rgb(253,185,12)" fg:x="504" fg:w="1"/><text x="39.5329%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2829%" y="229" width="0.0779%" height="15" fill="rgb(234,197,21)" fg:x="504" fg:w="1"/><text x="39.5329%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.4388%" y="389" width="0.0779%" height="15" fill="rgb(210,47,30)" fg:x="506" fg:w="1"/><text x="39.6888%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.4388%" y="373" width="0.0779%" height="15" fill="rgb(246,139,27)" fg:x="506" fg:w="1"/><text x="39.6888%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4388%" y="357" width="0.0779%" height="15" fill="rgb(226,130,16)" fg:x="506" fg:w="1"/><text x="39.6888%" y="367.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (6 samples, 0.47%)</title><rect x="39.2050%" y="469" width="0.4677%" height="15" fill="rgb(237,208,20)" fg:x="503" fg:w="6"/><text x="39.4550%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="39.3609%" y="453" width="0.3118%" height="15" fill="rgb(245,186,28)" fg:x="505" fg:w="4"/><text x="39.6109%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="39.3609%" y="437" width="0.3118%" height="15" fill="rgb(238,105,39)" fg:x="505" fg:w="4"/><text x="39.6109%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="39.3609%" y="421" width="0.3118%" height="15" fill="rgb(253,228,11)" fg:x="505" fg:w="4"/><text x="39.6109%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="39.3609%" y="405" width="0.3118%" height="15" fill="rgb(224,136,38)" fg:x="505" fg:w="4"/><text x="39.6109%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.5168%" y="389" width="0.1559%" height="15" fill="rgb(211,3,25)" fg:x="507" fg:w="2"/><text x="39.7668%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5168%" y="373" width="0.1559%" height="15" fill="rgb(238,66,34)" fg:x="507" fg:w="2"/><text x="39.7668%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.5947%" y="357" width="0.0779%" height="15" fill="rgb(223,188,11)" fg:x="508" fg:w="1"/><text x="39.8447%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.5947%" y="341" width="0.0779%" height="15" fill="rgb(221,10,35)" fg:x="508" fg:w="1"/><text x="39.8447%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="39.6726%" y="469" width="0.0779%" height="15" fill="rgb(223,18,44)" fg:x="509" fg:w="1"/><text x="39.9226%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.6726%" y="453" width="0.0779%" height="15" fill="rgb(220,97,41)" fg:x="509" fg:w="1"/><text x="39.9226%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.6726%" y="437" width="0.0779%" height="15" fill="rgb(206,95,45)" fg:x="509" fg:w="1"/><text x="39.9226%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="39.6726%" y="421" width="0.0779%" height="15" fill="rgb(209,96,13)" fg:x="509" fg:w="1"/><text x="39.9226%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.62%)</title><rect x="39.2050%" y="501" width="0.6235%" height="15" fill="rgb(237,39,34)" fg:x="503" fg:w="8"/><text x="39.4550%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (8 samples, 0.62%)</title><rect x="39.2050%" y="485" width="0.6235%" height="15" fill="rgb(213,49,47)" fg:x="503" fg:w="8"/><text x="39.4550%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.7506%" y="469" width="0.0779%" height="15" fill="rgb(205,107,27)" fg:x="510" fg:w="1"/><text x="40.0006%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="39.7506%" y="453" width="0.0779%" height="15" fill="rgb(212,142,9)" fg:x="510" fg:w="1"/><text x="40.0006%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="39.7506%" y="437" width="0.0779%" height="15" fill="rgb(226,182,0)" fg:x="510" fg:w="1"/><text x="40.0006%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7506%" y="421" width="0.0779%" height="15" fill="rgb(231,3,53)" fg:x="510" fg:w="1"/><text x="40.0006%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="39.8285%" y="501" width="0.1559%" height="15" fill="rgb(246,111,28)" fg:x="511" fg:w="2"/><text x="40.0785%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.8285%" y="485" width="0.1559%" height="15" fill="rgb(254,183,7)" fg:x="511" fg:w="2"/><text x="40.0785%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="39.8285%" y="469" width="0.1559%" height="15" fill="rgb(247,177,28)" fg:x="511" fg:w="2"/><text x="40.0785%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9065%" y="453" width="0.0779%" height="15" fill="rgb(244,43,1)" fg:x="512" fg:w="1"/><text x="40.1565%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="39.9844%" y="469" width="0.0779%" height="15" fill="rgb(207,2,35)" fg:x="513" fg:w="1"/><text x="40.2344%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.94%)</title><rect x="39.2050%" y="517" width="0.9353%" height="15" fill="rgb(213,83,22)" fg:x="503" fg:w="12"/><text x="39.4550%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="39.9844%" y="501" width="0.1559%" height="15" fill="rgb(246,212,13)" fg:x="513" fg:w="2"/><text x="40.2344%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="39.9844%" y="485" width="0.1559%" height="15" fill="rgb(213,127,46)" fg:x="513" fg:w="2"/><text x="40.2344%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="40.0624%" y="469" width="0.0779%" height="15" fill="rgb(219,215,39)" fg:x="514" fg:w="1"/><text x="40.3124%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="40.0624%" y="453" width="0.0779%" height="15" fill="rgb(227,99,17)" fg:x="514" fg:w="1"/><text x="40.3124%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (356 samples, 27.75%)</title><rect x="12.4708%" y="581" width="27.7475%" height="15" fill="rgb(208,155,18)" fg:x="160" fg:w="356"/><text x="12.7208%" y="591.50">&lt;tests::HoldingKeyInVessel as tests::WorldFix..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (33 samples, 2.57%)</title><rect x="37.6461%" y="565" width="2.5721%" height="15" fill="rgb(223,204,38)" fg:x="483" fg:w="33"/><text x="37.8961%" y="575.50">pl..</text></g><g><title>plugins_core::build::Build::save (18 samples, 1.40%)</title><rect x="38.8153%" y="549" width="1.4030%" height="15" fill="rgb(212,114,21)" fg:x="498" fg:w="18"/><text x="39.0653%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.09%)</title><rect x="39.1270%" y="533" width="1.0912%" height="15" fill="rgb(250,74,13)" fg:x="502" fg:w="14"/><text x="39.3770%" y="543.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="40.1403%" y="517" width="0.0779%" height="15" fill="rgb(234,7,1)" fg:x="515" fg:w="1"/><text x="40.3903%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.1403%" y="501" width="0.0779%" height="15" fill="rgb(207,138,31)" fg:x="515" fg:w="1"/><text x="40.3903%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.1403%" y="485" width="0.0779%" height="15" fill="rgb(215,186,42)" fg:x="515" fg:w="1"/><text x="40.3903%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="40.2182%" y="581" width="0.0779%" height="15" fill="rgb(229,205,49)" fg:x="516" fg:w="1"/><text x="40.4682%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.2182%" y="565" width="0.0779%" height="15" fill="rgb(216,156,32)" fg:x="516" fg:w="1"/><text x="40.4682%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="40.2962%" y="581" width="0.0779%" height="15" fill="rgb(238,7,21)" fg:x="517" fg:w="1"/><text x="40.5462%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="40.2962%" y="565" width="0.0779%" height="15" fill="rgb(249,190,22)" fg:x="517" fg:w="1"/><text x="40.5462%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="40.2962%" y="549" width="0.0779%" height="15" fill="rgb(253,51,31)" fg:x="517" fg:w="1"/><text x="40.5462%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.2962%" y="533" width="0.0779%" height="15" fill="rgb(237,90,54)" fg:x="517" fg:w="1"/><text x="40.5462%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2962%" y="517" width="0.0779%" height="15" fill="rgb(250,214,33)" fg:x="517" fg:w="1"/><text x="40.5462%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4521%" y="549" width="0.0779%" height="15" fill="rgb(237,10,49)" fg:x="519" fg:w="1"/><text x="40.7021%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4521%" y="533" width="0.0779%" height="15" fill="rgb(241,56,36)" fg:x="519" fg:w="1"/><text x="40.7021%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.4521%" y="517" width="0.0779%" height="15" fill="rgb(227,164,12)" fg:x="519" fg:w="1"/><text x="40.7021%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.4521%" y="501" width="0.0779%" height="15" fill="rgb(249,149,35)" fg:x="519" fg:w="1"/><text x="40.7021%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.4521%" y="485" width="0.0779%" height="15" fill="rgb(238,227,50)" fg:x="519" fg:w="1"/><text x="40.7021%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.4521%" y="469" width="0.0779%" height="15" fill="rgb(235,102,45)" fg:x="519" fg:w="1"/><text x="40.7021%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.4521%" y="453" width="0.0779%" height="15" fill="rgb(211,10,38)" fg:x="519" fg:w="1"/><text x="40.7021%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="40.3741%" y="565" width="0.2338%" height="15" fill="rgb(219,77,48)" fg:x="518" fg:w="3"/><text x="40.6241%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.5300%" y="549" width="0.0779%" height="15" fill="rgb(246,6,15)" fg:x="520" fg:w="1"/><text x="40.7800%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="40.6080%" y="565" width="0.1559%" height="15" fill="rgb(207,220,2)" fg:x="521" fg:w="2"/><text x="40.8580%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="40.6080%" y="549" width="0.1559%" height="15" fill="rgb(242,48,14)" fg:x="521" fg:w="2"/><text x="40.8580%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="40.6080%" y="533" width="0.1559%" height="15" fill="rgb(218,19,27)" fg:x="521" fg:w="2"/><text x="40.8580%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="40.6080%" y="517" width="0.1559%" height="15" fill="rgb(228,0,35)" fg:x="521" fg:w="2"/><text x="40.8580%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="40.6080%" y="501" width="0.1559%" height="15" fill="rgb(244,142,54)" fg:x="521" fg:w="2"/><text x="40.8580%" y="511.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="40.6080%" y="485" width="0.1559%" height="15" fill="rgb(243,217,40)" fg:x="521" fg:w="2"/><text x="40.8580%" y="495.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="40.6080%" y="469" width="0.1559%" height="15" fill="rgb(207,114,16)" fg:x="521" fg:w="2"/><text x="40.8580%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="40.6080%" y="453" width="0.1559%" height="15" fill="rgb(224,33,25)" fg:x="521" fg:w="2"/><text x="40.8580%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="40.6080%" y="437" width="0.1559%" height="15" fill="rgb(230,93,54)" fg:x="521" fg:w="2"/><text x="40.8580%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="40.6859%" y="421" width="0.0779%" height="15" fill="rgb(224,56,24)" fg:x="522" fg:w="1"/><text x="40.9359%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="40.6859%" y="405" width="0.0779%" height="15" fill="rgb(235,189,50)" fg:x="522" fg:w="1"/><text x="40.9359%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="40.6859%" y="389" width="0.0779%" height="15" fill="rgb(242,173,8)" fg:x="522" fg:w="1"/><text x="40.9359%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="40.7638%" y="533" width="0.0779%" height="15" fill="rgb(209,206,10)" fg:x="523" fg:w="1"/><text x="41.0138%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.7638%" y="517" width="0.0779%" height="15" fill="rgb(213,182,44)" fg:x="523" fg:w="1"/><text x="41.0138%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.7638%" y="501" width="0.0779%" height="15" fill="rgb(243,51,15)" fg:x="523" fg:w="1"/><text x="41.0138%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.7638%" y="485" width="0.0779%" height="15" fill="rgb(241,13,14)" fg:x="523" fg:w="1"/><text x="41.0138%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="40.8418%" y="533" width="0.1559%" height="15" fill="rgb(239,147,24)" fg:x="524" fg:w="2"/><text x="41.0918%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="40.8418%" y="517" width="0.1559%" height="15" fill="rgb(223,129,16)" fg:x="524" fg:w="2"/><text x="41.0918%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="40.8418%" y="501" width="0.1559%" height="15" fill="rgb(209,169,13)" fg:x="524" fg:w="2"/><text x="41.0918%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9197%" y="485" width="0.0779%" height="15" fill="rgb(235,159,41)" fg:x="525" fg:w="1"/><text x="41.1697%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9197%" y="469" width="0.0779%" height="15" fill="rgb(223,219,48)" fg:x="525" fg:w="1"/><text x="41.1697%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.9197%" y="453" width="0.0779%" height="15" fill="rgb(236,80,13)" fg:x="525" fg:w="1"/><text x="41.1697%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.9197%" y="437" width="0.0779%" height="15" fill="rgb(213,5,6)" fg:x="525" fg:w="1"/><text x="41.1697%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.9197%" y="421" width="0.0779%" height="15" fill="rgb(205,59,21)" fg:x="525" fg:w="1"/><text x="41.1697%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9197%" y="405" width="0.0779%" height="15" fill="rgb(247,137,35)" fg:x="525" fg:w="1"/><text x="41.1697%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9197%" y="389" width="0.0779%" height="15" fill="rgb(242,208,28)" fg:x="525" fg:w="1"/><text x="41.1697%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.9197%" y="373" width="0.0779%" height="15" fill="rgb(245,62,25)" fg:x="525" fg:w="1"/><text x="41.1697%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.9197%" y="357" width="0.0779%" height="15" fill="rgb(233,99,54)" fg:x="525" fg:w="1"/><text x="41.1697%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.9197%" y="341" width="0.0779%" height="15" fill="rgb(213,10,37)" fg:x="525" fg:w="1"/><text x="41.1697%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.9197%" y="325" width="0.0779%" height="15" fill="rgb(235,143,30)" fg:x="525" fg:w="1"/><text x="41.1697%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9197%" y="309" width="0.0779%" height="15" fill="rgb(250,146,33)" fg:x="525" fg:w="1"/><text x="41.1697%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="41.0756%" y="485" width="0.0779%" height="15" fill="rgb(226,198,42)" fg:x="527" fg:w="1"/><text x="41.3256%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.0756%" y="469" width="0.0779%" height="15" fill="rgb(222,55,6)" fg:x="527" fg:w="1"/><text x="41.3256%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="41.1535%" y="453" width="0.1559%" height="15" fill="rgb(213,224,31)" fg:x="528" fg:w="2"/><text x="41.4035%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.1535%" y="437" width="0.1559%" height="15" fill="rgb(226,103,35)" fg:x="528" fg:w="2"/><text x="41.4035%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="41.1535%" y="421" width="0.1559%" height="15" fill="rgb(205,66,45)" fg:x="528" fg:w="2"/><text x="41.4035%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="41.1535%" y="405" width="0.1559%" height="15" fill="rgb(226,51,42)" fg:x="528" fg:w="2"/><text x="41.4035%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="41.1535%" y="389" width="0.1559%" height="15" fill="rgb(206,69,1)" fg:x="528" fg:w="2"/><text x="41.4035%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="41.1535%" y="373" width="0.1559%" height="15" fill="rgb(213,228,47)" fg:x="528" fg:w="2"/><text x="41.4035%" y="383.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="41.1535%" y="357" width="0.1559%" height="15" fill="rgb(224,204,18)" fg:x="528" fg:w="2"/><text x="41.4035%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.31%)</title><rect x="41.1535%" y="469" width="0.3118%" height="15" fill="rgb(253,187,47)" fg:x="528" fg:w="4"/><text x="41.4035%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.3094%" y="453" width="0.1559%" height="15" fill="rgb(232,61,2)" fg:x="530" fg:w="2"/><text x="41.5594%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.3874%" y="437" width="0.0779%" height="15" fill="rgb(213,132,35)" fg:x="531" fg:w="1"/><text x="41.6374%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.3874%" y="421" width="0.0779%" height="15" fill="rgb(247,33,21)" fg:x="531" fg:w="1"/><text x="41.6374%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="41.4653%" y="453" width="0.2338%" height="15" fill="rgb(233,71,46)" fg:x="532" fg:w="3"/><text x="41.7153%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="41.4653%" y="437" width="0.2338%" height="15" fill="rgb(222,173,43)" fg:x="532" fg:w="3"/><text x="41.7153%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="41.5433%" y="421" width="0.1559%" height="15" fill="rgb(249,218,47)" fg:x="533" fg:w="2"/><text x="41.7933%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="41.5433%" y="405" width="0.1559%" height="15" fill="rgb(254,185,48)" fg:x="533" fg:w="2"/><text x="41.7933%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.7771%" y="437" width="0.0779%" height="15" fill="rgb(252,165,50)" fg:x="536" fg:w="1"/><text x="42.0271%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="41.8550%" y="373" width="0.0779%" height="15" fill="rgb(206,219,6)" fg:x="537" fg:w="1"/><text x="42.1050%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="41.8550%" y="389" width="0.1559%" height="15" fill="rgb(212,212,45)" fg:x="537" fg:w="2"/><text x="42.1050%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.9330%" y="373" width="0.0779%" height="15" fill="rgb(221,31,9)" fg:x="538" fg:w="1"/><text x="42.1830%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.9330%" y="357" width="0.0779%" height="15" fill="rgb(234,198,39)" fg:x="538" fg:w="1"/><text x="42.1830%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="41.8550%" y="405" width="0.3118%" height="15" fill="rgb(252,145,46)" fg:x="537" fg:w="4"/><text x="42.1050%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="42.0109%" y="389" width="0.1559%" height="15" fill="rgb(237,149,0)" fg:x="539" fg:w="2"/><text x="42.2609%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="42.0889%" y="373" width="0.0779%" height="15" fill="rgb(229,65,5)" fg:x="540" fg:w="1"/><text x="42.3389%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.0889%" y="357" width="0.0779%" height="15" fill="rgb(235,60,36)" fg:x="540" fg:w="1"/><text x="42.3389%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="41.8550%" y="437" width="0.3897%" height="15" fill="rgb(222,47,18)" fg:x="537" fg:w="5"/><text x="42.1050%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="41.8550%" y="421" width="0.3897%" height="15" fill="rgb(235,114,22)" fg:x="537" fg:w="5"/><text x="42.1050%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="42.1668%" y="405" width="0.0779%" height="15" fill="rgb(209,167,11)" fg:x="541" fg:w="1"/><text x="42.4168%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="42.2447%" y="437" width="0.4677%" height="15" fill="rgb(251,73,18)" fg:x="542" fg:w="6"/><text x="42.4947%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="42.4006%" y="421" width="0.3118%" height="15" fill="rgb(217,60,17)" fg:x="544" fg:w="4"/><text x="42.6506%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="42.4786%" y="405" width="0.2338%" height="15" fill="rgb(224,36,37)" fg:x="545" fg:w="3"/><text x="42.7286%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.6345%" y="389" width="0.0779%" height="15" fill="rgb(211,21,32)" fg:x="547" fg:w="1"/><text x="42.8845%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="42.7124%" y="421" width="0.2338%" height="15" fill="rgb(231,55,48)" fg:x="548" fg:w="3"/><text x="42.9624%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="42.7903%" y="405" width="0.1559%" height="15" fill="rgb(227,42,18)" fg:x="549" fg:w="2"/><text x="43.0403%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.40%)</title><rect x="41.6991%" y="453" width="1.4030%" height="15" fill="rgb(217,2,27)" fg:x="535" fg:w="18"/><text x="41.9491%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="42.7124%" y="437" width="0.3897%" height="15" fill="rgb(251,138,23)" fg:x="548" fg:w="5"/><text x="42.9624%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="42.9462%" y="421" width="0.1559%" height="15" fill="rgb(226,184,11)" fg:x="551" fg:w="2"/><text x="43.1962%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="42.9462%" y="405" width="0.1559%" height="15" fill="rgb(242,142,12)" fg:x="551" fg:w="2"/><text x="43.1962%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.0242%" y="389" width="0.0779%" height="15" fill="rgb(234,187,18)" fg:x="552" fg:w="1"/><text x="43.2742%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.0242%" y="373" width="0.0779%" height="15" fill="rgb(237,44,42)" fg:x="552" fg:w="1"/><text x="43.2742%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.0242%" y="357" width="0.0779%" height="15" fill="rgb(211,90,23)" fg:x="552" fg:w="1"/><text x="43.2742%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (26 samples, 2.03%)</title><rect x="41.1535%" y="485" width="2.0265%" height="15" fill="rgb(207,81,18)" fg:x="528" fg:w="26"/><text x="41.4035%" y="495.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.71%)</title><rect x="41.4653%" y="469" width="1.7147%" height="15" fill="rgb(222,107,28)" fg:x="532" fg:w="22"/><text x="41.7153%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.1021%" y="453" width="0.0779%" height="15" fill="rgb(237,83,52)" fg:x="553" fg:w="1"/><text x="43.3521%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.1021%" y="437" width="0.0779%" height="15" fill="rgb(208,67,11)" fg:x="553" fg:w="1"/><text x="43.3521%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.1021%" y="421" width="0.0779%" height="15" fill="rgb(249,157,49)" fg:x="553" fg:w="1"/><text x="43.3521%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1800%" y="437" width="0.0779%" height="15" fill="rgb(243,200,1)" fg:x="554" fg:w="1"/><text x="43.4300%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.3359%" y="421" width="0.1559%" height="15" fill="rgb(225,162,37)" fg:x="556" fg:w="2"/><text x="43.5859%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="43.4918%" y="421" width="0.1559%" height="15" fill="rgb(242,92,13)" fg:x="558" fg:w="2"/><text x="43.7418%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="43.6477%" y="421" width="0.0779%" height="15" fill="rgb(220,43,36)" fg:x="560" fg:w="1"/><text x="43.8977%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.70%)</title><rect x="43.1800%" y="485" width="0.7015%" height="15" fill="rgb(213,165,48)" fg:x="554" fg:w="9"/><text x="43.4300%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.70%)</title><rect x="43.1800%" y="469" width="0.7015%" height="15" fill="rgb(227,200,9)" fg:x="554" fg:w="9"/><text x="43.4300%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.70%)</title><rect x="43.1800%" y="453" width="0.7015%" height="15" fill="rgb(221,222,28)" fg:x="554" fg:w="9"/><text x="43.4300%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.62%)</title><rect x="43.2580%" y="437" width="0.6235%" height="15" fill="rgb(223,142,26)" fg:x="555" fg:w="8"/><text x="43.5080%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="43.7256%" y="421" width="0.1559%" height="15" fill="rgb(243,46,9)" fg:x="561" fg:w="2"/><text x="43.9756%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="43.8036%" y="405" width="0.0779%" height="15" fill="rgb(250,56,11)" fg:x="562" fg:w="1"/><text x="44.0536%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.8036%" y="389" width="0.0779%" height="15" fill="rgb(229,113,5)" fg:x="562" fg:w="1"/><text x="44.0536%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.8036%" y="373" width="0.0779%" height="15" fill="rgb(244,108,28)" fg:x="562" fg:w="1"/><text x="44.0536%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.9595%" y="437" width="0.0779%" height="15" fill="rgb(242,119,50)" fg:x="564" fg:w="1"/><text x="44.2095%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.1154%" y="421" width="0.0779%" height="15" fill="rgb(224,164,23)" fg:x="566" fg:w="1"/><text x="44.3654%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1154%" y="405" width="0.0779%" height="15" fill="rgb(214,227,44)" fg:x="566" fg:w="1"/><text x="44.3654%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1933%" y="405" width="0.0779%" height="15" fill="rgb(238,202,4)" fg:x="567" fg:w="1"/><text x="44.4433%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.2712%" y="405" width="0.1559%" height="15" fill="rgb(213,190,30)" fg:x="568" fg:w="2"/><text x="44.5212%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3492%" y="389" width="0.0779%" height="15" fill="rgb(239,15,2)" fg:x="569" fg:w="1"/><text x="44.5992%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="44.5051%" y="389" width="0.1559%" height="15" fill="rgb(249,229,4)" fg:x="571" fg:w="2"/><text x="44.7551%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.5830%" y="373" width="0.0779%" height="15" fill="rgb(239,75,44)" fg:x="572" fg:w="1"/><text x="44.8330%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.5830%" y="357" width="0.0779%" height="15" fill="rgb(251,206,23)" fg:x="572" fg:w="1"/><text x="44.8330%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.5830%" y="341" width="0.0779%" height="15" fill="rgb(215,208,0)" fg:x="572" fg:w="1"/><text x="44.8330%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.5830%" y="325" width="0.0779%" height="15" fill="rgb(230,75,50)" fg:x="572" fg:w="1"/><text x="44.8330%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.5830%" y="309" width="0.0779%" height="15" fill="rgb(246,180,39)" fg:x="572" fg:w="1"/><text x="44.8330%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.8168%" y="373" width="0.0779%" height="15" fill="rgb(249,175,24)" fg:x="575" fg:w="1"/><text x="45.0668%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.09%)</title><rect x="43.9595%" y="453" width="1.0912%" height="15" fill="rgb(247,176,22)" fg:x="564" fg:w="14"/><text x="44.2095%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.01%)</title><rect x="44.0374%" y="437" width="1.0133%" height="15" fill="rgb(241,100,24)" fg:x="565" fg:w="13"/><text x="44.2874%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="44.1933%" y="421" width="0.8574%" height="15" fill="rgb(233,4,35)" fg:x="567" fg:w="11"/><text x="44.4433%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.62%)</title><rect x="44.4271%" y="405" width="0.6235%" height="15" fill="rgb(211,164,46)" fg:x="570" fg:w="8"/><text x="44.6771%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="44.6610%" y="389" width="0.3897%" height="15" fill="rgb(242,99,53)" fg:x="573" fg:w="5"/><text x="44.9110%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.8948%" y="373" width="0.1559%" height="15" fill="rgb(243,45,33)" fg:x="576" fg:w="2"/><text x="45.1448%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.8948%" y="357" width="0.1559%" height="15" fill="rgb(217,55,21)" fg:x="576" fg:w="2"/><text x="45.1448%" y="367.50"></text></g><g><title>&lt;burrow_bon::dotted::DottedPaths as core::convert::Into&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt;::into (1 samples, 0.08%)</title><rect x="45.0507%" y="453" width="0.0779%" height="15" fill="rgb(245,145,46)" fg:x="578" fg:w="1"/><text x="45.3007%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="45.0507%" y="437" width="0.0779%" height="15" fill="rgb(215,112,45)" fg:x="578" fg:w="1"/><text x="45.3007%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="45.0507%" y="421" width="0.0779%" height="15" fill="rgb(228,104,16)" fg:x="578" fg:w="1"/><text x="45.3007%" y="431.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="45.1286%" y="453" width="0.0779%" height="15" fill="rgb(239,186,38)" fg:x="579" fg:w="1"/><text x="45.3786%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="45.1286%" y="437" width="0.0779%" height="15" fill="rgb(228,38,35)" fg:x="579" fg:w="1"/><text x="45.3786%" y="447.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.1286%" y="421" width="0.0779%" height="15" fill="rgb(251,42,40)" fg:x="579" fg:w="1"/><text x="45.3786%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.08%)</title><rect x="45.1286%" y="405" width="0.0779%" height="15" fill="rgb(210,51,19)" fg:x="579" fg:w="1"/><text x="45.3786%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="45.2845%" y="389" width="0.0779%" height="15" fill="rgb(236,94,42)" fg:x="581" fg:w="1"/><text x="45.5345%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.2845%" y="373" width="0.0779%" height="15" fill="rgb(239,167,16)" fg:x="581" fg:w="1"/><text x="45.5345%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (20 samples, 1.56%)</title><rect x="43.8815%" y="469" width="1.5588%" height="15" fill="rgb(252,175,31)" fg:x="563" fg:w="20"/><text x="44.1315%" y="479.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.23%)</title><rect x="45.2065%" y="453" width="0.2338%" height="15" fill="rgb(206,166,30)" fg:x="580" fg:w="3"/><text x="45.4565%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="45.2065%" y="437" width="0.2338%" height="15" fill="rgb(206,209,37)" fg:x="580" fg:w="3"/><text x="45.4565%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="45.2065%" y="421" width="0.2338%" height="15" fill="rgb(226,91,4)" fg:x="580" fg:w="3"/><text x="45.4565%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="45.2845%" y="405" width="0.1559%" height="15" fill="rgb(222,167,0)" fg:x="581" fg:w="2"/><text x="45.5345%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.3624%" y="389" width="0.0779%" height="15" fill="rgb(211,70,14)" fg:x="582" fg:w="1"/><text x="45.6124%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.3624%" y="373" width="0.0779%" height="15" fill="rgb(214,84,42)" fg:x="582" fg:w="1"/><text x="45.6124%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.3624%" y="357" width="0.0779%" height="15" fill="rgb(235,157,37)" fg:x="582" fg:w="1"/><text x="45.6124%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="45.4404%" y="453" width="0.0779%" height="15" fill="rgb(225,13,6)" fg:x="583" fg:w="1"/><text x="45.6904%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.5963%" y="437" width="0.0779%" height="15" fill="rgb(205,202,1)" fg:x="585" fg:w="1"/><text x="45.8463%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="45.6742%" y="437" width="0.3118%" height="15" fill="rgb(232,195,26)" fg:x="586" fg:w="4"/><text x="45.9242%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.9080%" y="421" width="0.0779%" height="15" fill="rgb(208,102,26)" fg:x="589" fg:w="1"/><text x="46.1580%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.23%)</title><rect x="45.9860%" y="437" width="0.2338%" height="15" fill="rgb(215,41,39)" fg:x="590" fg:w="3"/><text x="46.2360%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="45.9860%" y="421" width="0.2338%" height="15" fill="rgb(247,139,11)" fg:x="590" fg:w="3"/><text x="46.2360%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.0639%" y="405" width="0.1559%" height="15" fill="rgb(243,99,6)" fg:x="591" fg:w="2"/><text x="46.3139%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.1419%" y="389" width="0.0779%" height="15" fill="rgb(230,168,48)" fg:x="592" fg:w="1"/><text x="46.3919%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="46.2977%" y="421" width="0.0779%" height="15" fill="rgb(238,227,13)" fg:x="594" fg:w="1"/><text x="46.5477%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.5316%" y="405" width="0.0779%" height="15" fill="rgb(209,109,13)" fg:x="597" fg:w="1"/><text x="46.7816%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.47%)</title><rect x="46.7654%" y="389" width="0.4677%" height="15" fill="rgb(228,195,1)" fg:x="600" fg:w="6"/><text x="47.0154%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="46.9992%" y="373" width="0.2338%" height="15" fill="rgb(230,218,0)" fg:x="603" fg:w="3"/><text x="47.2492%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.3889%" y="309" width="0.1559%" height="15" fill="rgb(206,1,45)" fg:x="608" fg:w="2"/><text x="47.6389%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.3889%" y="293" width="0.1559%" height="15" fill="rgb(209,124,26)" fg:x="608" fg:w="2"/><text x="47.6389%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="47.2330%" y="389" width="0.3897%" height="15" fill="rgb(220,59,8)" fg:x="606" fg:w="5"/><text x="47.4830%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="47.3110%" y="373" width="0.3118%" height="15" fill="rgb(251,41,37)" fg:x="607" fg:w="4"/><text x="47.5610%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="47.3110%" y="357" width="0.3118%" height="15" fill="rgb(239,152,21)" fg:x="607" fg:w="4"/><text x="47.5610%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="47.3889%" y="341" width="0.2338%" height="15" fill="rgb(226,32,1)" fg:x="608" fg:w="3"/><text x="47.6389%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="47.3889%" y="325" width="0.2338%" height="15" fill="rgb(230,154,36)" fg:x="608" fg:w="3"/><text x="47.6389%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="47.5448%" y="309" width="0.0779%" height="15" fill="rgb(208,228,43)" fg:x="610" fg:w="1"/><text x="47.7948%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="47.5448%" y="293" width="0.0779%" height="15" fill="rgb(214,203,3)" fg:x="610" fg:w="1"/><text x="47.7948%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="47.5448%" y="277" width="0.0779%" height="15" fill="rgb(207,149,29)" fg:x="610" fg:w="1"/><text x="47.7948%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.7786%" y="357" width="0.1559%" height="15" fill="rgb(250,105,7)" fg:x="613" fg:w="2"/><text x="48.0286%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.8566%" y="341" width="0.0779%" height="15" fill="rgb(232,222,16)" fg:x="614" fg:w="1"/><text x="48.1066%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.1684%" y="325" width="0.0779%" height="15" fill="rgb(209,32,24)" fg:x="618" fg:w="1"/><text x="48.4184%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1684%" y="309" width="0.0779%" height="15" fill="rgb(225,13,6)" fg:x="618" fg:w="1"/><text x="48.4184%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.71%)</title><rect x="46.6095%" y="405" width="1.7147%" height="15" fill="rgb(245,226,26)" fg:x="598" fg:w="22"/><text x="46.8595%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.70%)</title><rect x="47.6228%" y="389" width="0.7015%" height="15" fill="rgb(229,178,27)" fg:x="611" fg:w="9"/><text x="47.8728%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="47.7786%" y="373" width="0.5456%" height="15" fill="rgb(205,227,28)" fg:x="613" fg:w="7"/><text x="48.0286%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="47.9345%" y="357" width="0.3897%" height="15" fill="rgb(210,191,45)" fg:x="615" fg:w="5"/><text x="48.1845%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="48.1684%" y="341" width="0.1559%" height="15" fill="rgb(206,124,16)" fg:x="618" fg:w="2"/><text x="48.4184%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="48.2463%" y="325" width="0.0779%" height="15" fill="rgb(210,162,0)" fg:x="619" fg:w="1"/><text x="48.4963%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.18%)</title><rect x="46.3757%" y="421" width="2.1824%" height="15" fill="rgb(211,54,38)" fg:x="595" fg:w="28"/><text x="46.6257%" y="431.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.23%)</title><rect x="48.3242%" y="405" width="0.2338%" height="15" fill="rgb(248,192,3)" fg:x="620" fg:w="3"/><text x="48.5742%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4801%" y="389" width="0.0779%" height="15" fill="rgb(233,187,18)" fg:x="622" fg:w="1"/><text x="48.7301%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5581%" y="421" width="0.0779%" height="15" fill="rgb(237,208,14)" fg:x="623" fg:w="1"/><text x="48.8081%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (42 samples, 3.27%)</title><rect x="45.4404%" y="469" width="3.2736%" height="15" fill="rgb(212,77,1)" fg:x="583" fg:w="42"/><text x="45.6904%" y="479.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 3.20%)</title><rect x="45.5183%" y="453" width="3.1956%" height="15" fill="rgb(210,163,22)" fg:x="584" fg:w="41"/><text x="45.7683%" y="463.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (32 samples, 2.49%)</title><rect x="46.2198%" y="437" width="2.4942%" height="15" fill="rgb(250,58,28)" fg:x="593" fg:w="32"/><text x="46.4698%" y="447.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6360%" y="421" width="0.0779%" height="15" fill="rgb(254,28,41)" fg:x="624" fg:w="1"/><text x="48.8860%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.6360%" y="405" width="0.0779%" height="15" fill="rgb(237,162,36)" fg:x="624" fg:w="1"/><text x="48.8860%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="48.9478%" y="357" width="0.1559%" height="15" fill="rgb(232,56,6)" fg:x="628" fg:w="2"/><text x="49.1978%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.1037%" y="293" width="0.0779%" height="15" fill="rgb(216,127,42)" fg:x="630" fg:w="1"/><text x="49.3537%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.1037%" y="277" width="0.0779%" height="15" fill="rgb(241,69,15)" fg:x="630" fg:w="1"/><text x="49.3537%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.1037%" y="325" width="0.1559%" height="15" fill="rgb(227,180,19)" fg:x="630" fg:w="2"/><text x="49.3537%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.1037%" y="309" width="0.1559%" height="15" fill="rgb(231,188,29)" fg:x="630" fg:w="2"/><text x="49.3537%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.1816%" y="293" width="0.0779%" height="15" fill="rgb(224,176,27)" fg:x="631" fg:w="1"/><text x="49.4316%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.3375%" y="277" width="0.0779%" height="15" fill="rgb(249,214,19)" fg:x="633" fg:w="1"/><text x="49.5875%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.4154%" y="277" width="0.0779%" height="15" fill="rgb(240,0,4)" fg:x="634" fg:w="1"/><text x="49.6654%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="49.2595%" y="309" width="0.3118%" height="15" fill="rgb(233,28,41)" fg:x="632" fg:w="4"/><text x="49.5095%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="49.2595%" y="293" width="0.3118%" height="15" fill="rgb(220,90,51)" fg:x="632" fg:w="4"/><text x="49.5095%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4934%" y="277" width="0.0779%" height="15" fill="rgb(250,52,22)" fg:x="635" fg:w="1"/><text x="49.7434%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4934%" y="261" width="0.0779%" height="15" fill="rgb(231,152,36)" fg:x="635" fg:w="1"/><text x="49.7434%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4934%" y="245" width="0.0779%" height="15" fill="rgb(250,218,4)" fg:x="635" fg:w="1"/><text x="49.7434%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="49.1037%" y="341" width="0.5456%" height="15" fill="rgb(210,38,21)" fg:x="630" fg:w="7"/><text x="49.3537%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="49.2595%" y="325" width="0.3897%" height="15" fill="rgb(230,75,13)" fg:x="632" fg:w="5"/><text x="49.5095%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.5713%" y="309" width="0.0779%" height="15" fill="rgb(250,68,53)" fg:x="636" fg:w="1"/><text x="49.8213%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.5713%" y="293" width="0.0779%" height="15" fill="rgb(250,210,16)" fg:x="636" fg:w="1"/><text x="49.8213%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.78%)</title><rect x="48.9478%" y="373" width="0.7794%" height="15" fill="rgb(240,132,5)" fg:x="628" fg:w="10"/><text x="49.1978%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.62%)</title><rect x="49.1037%" y="357" width="0.6235%" height="15" fill="rgb(222,148,48)" fg:x="630" fg:w="8"/><text x="49.3537%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.6493%" y="341" width="0.0779%" height="15" fill="rgb(247,181,24)" fg:x="637" fg:w="1"/><text x="49.8993%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.6493%" y="325" width="0.0779%" height="15" fill="rgb(239,5,31)" fg:x="637" fg:w="1"/><text x="49.8993%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="49.7272%" y="373" width="0.2338%" height="15" fill="rgb(241,152,38)" fg:x="638" fg:w="3"/><text x="49.9772%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.8831%" y="357" width="0.0779%" height="15" fill="rgb(246,200,37)" fg:x="640" fg:w="1"/><text x="50.1331%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.17%)</title><rect x="48.8698%" y="405" width="1.1691%" height="15" fill="rgb(243,210,26)" fg:x="627" fg:w="15"/><text x="49.1198%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.09%)</title><rect x="48.9478%" y="389" width="1.0912%" height="15" fill="rgb(222,22,22)" fg:x="628" fg:w="14"/><text x="49.1978%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.9610%" y="373" width="0.0779%" height="15" fill="rgb(208,129,28)" fg:x="641" fg:w="1"/><text x="50.2110%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.0390%" y="405" width="0.0779%" height="15" fill="rgb(254,169,28)" fg:x="642" fg:w="1"/><text x="50.2890%" y="415.50"></text></g><g><title>engine::session::state::State::close (121 samples, 9.43%)</title><rect x="40.7638%" y="565" width="9.4310%" height="15" fill="rgb(225,45,17)" fg:x="523" fg:w="121"/><text x="41.0138%" y="575.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (121 samples, 9.43%)</title><rect x="40.7638%" y="549" width="9.4310%" height="15" fill="rgb(232,199,2)" fg:x="523" fg:w="121"/><text x="41.0138%" y="559.50">engine::sessi..</text></g><g><title>core::iter::adapters::try_process (118 samples, 9.20%)</title><rect x="40.9977%" y="533" width="9.1972%" height="15" fill="rgb(235,33,40)" fg:x="526" fg:w="118"/><text x="41.2477%" y="543.50">core::iter::a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (118 samples, 9.20%)</title><rect x="40.9977%" y="517" width="9.1972%" height="15" fill="rgb(237,89,50)" fg:x="526" fg:w="118"/><text x="41.2477%" y="527.50">&lt;alloc::vec::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (117 samples, 9.12%)</title><rect x="41.0756%" y="501" width="9.1193%" height="15" fill="rgb(238,126,5)" fg:x="527" fg:w="117"/><text x="41.3256%" y="511.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (81 samples, 6.31%)</title><rect x="43.8815%" y="485" width="6.3133%" height="15" fill="rgb(247,214,42)" fg:x="563" fg:w="81"/><text x="44.1315%" y="495.50">kernel::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (19 samples, 1.48%)</title><rect x="48.7140%" y="469" width="1.4809%" height="15" fill="rgb(238,60,45)" fg:x="625" fg:w="19"/><text x="48.9640%" y="479.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.48%)</title><rect x="48.7140%" y="453" width="1.4809%" height="15" fill="rgb(225,69,44)" fg:x="625" fg:w="19"/><text x="48.9640%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.48%)</title><rect x="48.7140%" y="437" width="1.4809%" height="15" fill="rgb(241,13,44)" fg:x="625" fg:w="19"/><text x="48.9640%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.48%)</title><rect x="48.7140%" y="421" width="1.4809%" height="15" fill="rgb(227,121,22)" fg:x="625" fg:w="19"/><text x="48.9640%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.1169%" y="405" width="0.0779%" height="15" fill="rgb(231,160,23)" fg:x="643" fg:w="1"/><text x="50.3669%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.1169%" y="389" width="0.0779%" height="15" fill="rgb(250,179,43)" fg:x="643" fg:w="1"/><text x="50.3669%" y="399.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="50.1949%" y="565" width="0.0779%" height="15" fill="rgb(233,54,46)" fg:x="644" fg:w="1"/><text x="50.4449%" y="575.50"></text></g><g><title>engine::session::Session::close (128 samples, 9.98%)</title><rect x="40.3741%" y="581" width="9.9766%" height="15" fill="rgb(247,120,42)" fg:x="518" fg:w="128"/><text x="40.6241%" y="591.50">engine::sessio..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="50.2728%" y="565" width="0.0779%" height="15" fill="rgb(221,219,12)" fg:x="645" fg:w="1"/><text x="50.5228%" y="575.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="50.2728%" y="549" width="0.0779%" height="15" fill="rgb(211,126,8)" fg:x="645" fg:w="1"/><text x="50.5228%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="50.2728%" y="533" width="0.0779%" height="15" fill="rgb(218,154,33)" fg:x="645" fg:w="1"/><text x="50.5228%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="50.2728%" y="517" width="0.0779%" height="15" fill="rgb(212,199,16)" fg:x="645" fg:w="1"/><text x="50.5228%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="50.2728%" y="501" width="0.0779%" height="15" fill="rgb(236,215,46)" fg:x="645" fg:w="1"/><text x="50.5228%" y="511.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="50.5066%" y="517" width="0.0779%" height="15" fill="rgb(232,32,22)" fg:x="648" fg:w="1"/><text x="50.7566%" y="527.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="50.5066%" y="501" width="0.0779%" height="15" fill="rgb(234,79,15)" fg:x="648" fg:w="1"/><text x="50.7566%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="50.5066%" y="485" width="0.0779%" height="15" fill="rgb(235,187,47)" fg:x="648" fg:w="1"/><text x="50.7566%" y="495.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::sources (4 samples, 0.31%)</title><rect x="50.5846%" y="517" width="0.3118%" height="15" fill="rgb(244,69,37)" fg:x="649" fg:w="4"/><text x="50.8346%" y="527.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (7 samples, 0.55%)</title><rect x="50.4287%" y="549" width="0.5456%" height="15" fill="rgb(249,140,25)" fg:x="647" fg:w="7"/><text x="50.6787%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.55%)</title><rect x="50.4287%" y="533" width="0.5456%" height="15" fill="rgb(213,69,8)" fg:x="647" fg:w="7"/><text x="50.6787%" y="543.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="50.8963%" y="517" width="0.0779%" height="15" fill="rgb(220,136,2)" fg:x="653" fg:w="1"/><text x="51.1463%" y="527.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="50.8963%" y="501" width="0.0779%" height="15" fill="rgb(237,50,36)" fg:x="653" fg:w="1"/><text x="51.1463%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="50.8963%" y="485" width="0.0779%" height="15" fill="rgb(226,18,11)" fg:x="653" fg:w="1"/><text x="51.1463%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="50.9743%" y="533" width="0.1559%" height="15" fill="rgb(243,156,2)" fg:x="654" fg:w="2"/><text x="51.2243%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="50.9743%" y="517" width="0.1559%" height="15" fill="rgb(218,8,34)" fg:x="654" fg:w="2"/><text x="51.2243%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="50.9743%" y="501" width="0.1559%" height="15" fill="rgb(250,94,35)" fg:x="654" fg:w="2"/><text x="51.2243%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="50.9743%" y="485" width="0.1559%" height="15" fill="rgb(229,127,21)" fg:x="654" fg:w="2"/><text x="51.2243%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="50.9743%" y="469" width="0.1559%" height="15" fill="rgb(234,49,5)" fg:x="654" fg:w="2"/><text x="51.2243%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.16%)</title><rect x="50.9743%" y="453" width="0.1559%" height="15" fill="rgb(248,12,16)" fg:x="654" fg:w="2"/><text x="51.2243%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.16%)</title><rect x="50.9743%" y="437" width="0.1559%" height="15" fill="rgb(208,220,31)" fg:x="654" fg:w="2"/><text x="51.2243%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.16%)</title><rect x="50.9743%" y="421" width="0.1559%" height="15" fill="rgb(243,184,0)" fg:x="654" fg:w="2"/><text x="51.2243%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.16%)</title><rect x="50.9743%" y="405" width="0.1559%" height="15" fill="rgb(217,38,21)" fg:x="654" fg:w="2"/><text x="51.2243%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.0522%" y="389" width="0.0779%" height="15" fill="rgb(239,120,45)" fg:x="655" fg:w="1"/><text x="51.3022%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.08%)</title><rect x="51.0522%" y="373" width="0.0779%" height="15" fill="rgb(235,33,2)" fg:x="655" fg:w="1"/><text x="51.3022%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.08%)</title><rect x="51.0522%" y="357" width="0.0779%" height="15" fill="rgb(249,161,5)" fg:x="655" fg:w="1"/><text x="51.3022%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="51.0522%" y="341" width="0.0779%" height="15" fill="rgb(250,165,48)" fg:x="655" fg:w="1"/><text x="51.3022%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.08%)</title><rect x="51.0522%" y="325" width="0.0779%" height="15" fill="rgb(221,23,45)" fg:x="655" fg:w="1"/><text x="51.3022%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.0522%" y="309" width="0.0779%" height="15" fill="rgb(217,108,46)" fg:x="655" fg:w="1"/><text x="51.3022%" y="319.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (1 samples, 0.08%)</title><rect x="51.0522%" y="293" width="0.0779%" height="15" fill="rgb(254,26,35)" fg:x="655" fg:w="1"/><text x="51.3022%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="51.0522%" y="277" width="0.0779%" height="15" fill="rgb(218,223,28)" fg:x="655" fg:w="1"/><text x="51.3022%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="51.0522%" y="261" width="0.0779%" height="15" fill="rgb(242,27,47)" fg:x="655" fg:w="1"/><text x="51.3022%" y="271.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="51.0522%" y="245" width="0.0779%" height="15" fill="rgb(218,39,35)" fg:x="655" fg:w="1"/><text x="51.3022%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.0522%" y="229" width="0.0779%" height="15" fill="rgb(232,127,16)" fg:x="655" fg:w="1"/><text x="51.3022%" y="239.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="51.1302%" y="533" width="0.0779%" height="15" fill="rgb(231,219,51)" fg:x="656" fg:w="1"/><text x="51.3802%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1302%" y="517" width="0.0779%" height="15" fill="rgb(217,220,46)" fg:x="656" fg:w="1"/><text x="51.3802%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2081%" y="517" width="0.0779%" height="15" fill="rgb(230,75,1)" fg:x="657" fg:w="1"/><text x="51.4581%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="51.2860%" y="517" width="0.0779%" height="15" fill="rgb(218,2,8)" fg:x="658" fg:w="1"/><text x="51.5360%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::logs::SessionSubscriber&gt; (2 samples, 0.16%)</title><rect x="51.3640%" y="517" width="0.1559%" height="15" fill="rgb(206,111,30)" fg:x="659" fg:w="2"/><text x="51.6140%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="51.3640%" y="501" width="0.1559%" height="15" fill="rgb(209,135,6)" fg:x="659" fg:w="2"/><text x="51.6140%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (5 samples, 0.39%)</title><rect x="51.5199%" y="517" width="0.3897%" height="15" fill="rgb(205,169,10)" fg:x="661" fg:w="5"/><text x="51.7699%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (5 samples, 0.39%)</title><rect x="51.5199%" y="501" width="0.3897%" height="15" fill="rgb(212,204,38)" fg:x="661" fg:w="5"/><text x="51.7699%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (5 samples, 0.39%)</title><rect x="51.5199%" y="485" width="0.3897%" height="15" fill="rgb(205,199,14)" fg:x="661" fg:w="5"/><text x="51.7699%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (4 samples, 0.31%)</title><rect x="51.5978%" y="469" width="0.3118%" height="15" fill="rgb(212,4,6)" fg:x="662" fg:w="4"/><text x="51.8478%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.9875%" y="389" width="0.0779%" height="15" fill="rgb(250,15,10)" fg:x="667" fg:w="1"/><text x="52.2375%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="51.9875%" y="405" width="0.1559%" height="15" fill="rgb(212,49,51)" fg:x="667" fg:w="2"/><text x="52.2375%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.0655%" y="389" width="0.0779%" height="15" fill="rgb(235,21,9)" fg:x="668" fg:w="1"/><text x="52.3155%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.0655%" y="373" width="0.0779%" height="15" fill="rgb(251,31,32)" fg:x="668" fg:w="1"/><text x="52.3155%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.0655%" y="357" width="0.0779%" height="15" fill="rgb(246,23,9)" fg:x="668" fg:w="1"/><text x="52.3155%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.0655%" y="341" width="0.0779%" height="15" fill="rgb(225,216,14)" fg:x="668" fg:w="1"/><text x="52.3155%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.2214%" y="293" width="0.1559%" height="15" fill="rgb(215,200,26)" fg:x="670" fg:w="2"/><text x="52.4714%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.2993%" y="277" width="0.0779%" height="15" fill="rgb(237,130,47)" fg:x="671" fg:w="1"/><text x="52.5493%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2993%" y="261" width="0.0779%" height="15" fill="rgb(247,74,14)" fg:x="671" fg:w="1"/><text x="52.5493%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="52.1434%" y="341" width="0.3118%" height="15" fill="rgb(254,97,46)" fg:x="669" fg:w="4"/><text x="52.3934%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="52.2214%" y="325" width="0.2338%" height="15" fill="rgb(234,191,1)" fg:x="670" fg:w="3"/><text x="52.4714%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="52.2214%" y="309" width="0.2338%" height="15" fill="rgb(215,165,14)" fg:x="670" fg:w="3"/><text x="52.4714%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3772%" y="293" width="0.0779%" height="15" fill="rgb(230,182,6)" fg:x="672" fg:w="1"/><text x="52.6272%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3772%" y="277" width="0.0779%" height="15" fill="rgb(210,127,39)" fg:x="672" fg:w="1"/><text x="52.6272%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3772%" y="261" width="0.0779%" height="15" fill="rgb(223,212,51)" fg:x="672" fg:w="1"/><text x="52.6272%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3772%" y="245" width="0.0779%" height="15" fill="rgb(226,176,43)" fg:x="672" fg:w="1"/><text x="52.6272%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3772%" y="229" width="0.0779%" height="15" fill="rgb(222,155,4)" fg:x="672" fg:w="1"/><text x="52.6272%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.3772%" y="213" width="0.0779%" height="15" fill="rgb(215,149,7)" fg:x="672" fg:w="1"/><text x="52.6272%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.3772%" y="197" width="0.0779%" height="15" fill="rgb(252,199,23)" fg:x="672" fg:w="1"/><text x="52.6272%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.3772%" y="181" width="0.0779%" height="15" fill="rgb(245,52,29)" fg:x="672" fg:w="1"/><text x="52.6272%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.3772%" y="165" width="0.0779%" height="15" fill="rgb(221,228,19)" fg:x="672" fg:w="1"/><text x="52.6272%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.3772%" y="149" width="0.0779%" height="15" fill="rgb(253,101,6)" fg:x="672" fg:w="1"/><text x="52.6272%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.3772%" y="133" width="0.0779%" height="15" fill="rgb(211,130,8)" fg:x="672" fg:w="1"/><text x="52.6272%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.3772%" y="117" width="0.0779%" height="15" fill="rgb(238,37,53)" fg:x="672" fg:w="1"/><text x="52.6272%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.3772%" y="101" width="0.0779%" height="15" fill="rgb(235,145,5)" fg:x="672" fg:w="1"/><text x="52.6272%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.3772%" y="85" width="0.0779%" height="15" fill="rgb(244,12,43)" fg:x="672" fg:w="1"/><text x="52.6272%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3772%" y="69" width="0.0779%" height="15" fill="rgb(246,195,24)" fg:x="672" fg:w="1"/><text x="52.6272%" y="79.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4552%" y="325" width="0.0779%" height="15" fill="rgb(235,163,6)" fg:x="673" fg:w="1"/><text x="52.7052%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4552%" y="309" width="0.0779%" height="15" fill="rgb(236,218,17)" fg:x="673" fg:w="1"/><text x="52.7052%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4552%" y="293" width="0.0779%" height="15" fill="rgb(235,12,38)" fg:x="673" fg:w="1"/><text x="52.7052%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.4552%" y="277" width="0.0779%" height="15" fill="rgb(225,195,33)" fg:x="673" fg:w="1"/><text x="52.7052%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.4552%" y="261" width="0.0779%" height="15" fill="rgb(238,54,35)" fg:x="673" fg:w="1"/><text x="52.7052%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.4552%" y="245" width="0.0779%" height="15" fill="rgb(238,33,7)" fg:x="673" fg:w="1"/><text x="52.7052%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.4552%" y="229" width="0.0779%" height="15" fill="rgb(245,5,14)" fg:x="673" fg:w="1"/><text x="52.7052%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.4552%" y="213" width="0.0779%" height="15" fill="rgb(251,95,31)" fg:x="673" fg:w="1"/><text x="52.7052%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.4552%" y="197" width="0.0779%" height="15" fill="rgb(222,15,46)" fg:x="673" fg:w="1"/><text x="52.7052%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.4552%" y="181" width="0.0779%" height="15" fill="rgb(226,182,24)" fg:x="673" fg:w="1"/><text x="52.7052%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.4552%" y="165" width="0.0779%" height="15" fill="rgb(229,105,41)" fg:x="673" fg:w="1"/><text x="52.7052%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.4552%" y="149" width="0.0779%" height="15" fill="rgb(216,99,53)" fg:x="673" fg:w="1"/><text x="52.7052%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4552%" y="133" width="0.0779%" height="15" fill="rgb(253,26,20)" fg:x="673" fg:w="1"/><text x="52.7052%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="52.4552%" y="341" width="0.2338%" height="15" fill="rgb(249,155,28)" fg:x="673" fg:w="3"/><text x="52.7052%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.5331%" y="325" width="0.1559%" height="15" fill="rgb(241,221,2)" fg:x="674" fg:w="2"/><text x="52.7831%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.5331%" y="309" width="0.1559%" height="15" fill="rgb(219,124,6)" fg:x="674" fg:w="2"/><text x="52.7831%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="52.5331%" y="293" width="0.1559%" height="15" fill="rgb(233,37,6)" fg:x="674" fg:w="2"/><text x="52.7831%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.5331%" y="277" width="0.1559%" height="15" fill="rgb(238,20,14)" fg:x="674" fg:w="2"/><text x="52.7831%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.5331%" y="261" width="0.1559%" height="15" fill="rgb(232,106,27)" fg:x="674" fg:w="2"/><text x="52.7831%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.5331%" y="245" width="0.1559%" height="15" fill="rgb(246,157,24)" fg:x="674" fg:w="2"/><text x="52.7831%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.6111%" y="229" width="0.0779%" height="15" fill="rgb(214,153,10)" fg:x="675" fg:w="1"/><text x="52.8611%" y="239.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="52.6890%" y="341" width="0.0779%" height="15" fill="rgb(212,94,6)" fg:x="676" fg:w="1"/><text x="52.9390%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6890%" y="325" width="0.0779%" height="15" fill="rgb(254,25,27)" fg:x="676" fg:w="1"/><text x="52.9390%" y="335.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="52.7670%" y="341" width="0.0779%" height="15" fill="rgb(250,43,52)" fg:x="677" fg:w="1"/><text x="53.0170%" y="351.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::de::Deserialize for burrow_bon::perms::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="52.9228%" y="293" width="0.0779%" height="15" fill="rgb(221,226,40)" fg:x="679" fg:w="1"/><text x="53.1728%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.9228%" y="277" width="0.0779%" height="15" fill="rgb(235,162,34)" fg:x="679" fg:w="1"/><text x="53.1728%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9228%" y="261" width="0.0779%" height="15" fill="rgb(239,24,26)" fg:x="679" fg:w="1"/><text x="53.1728%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.0008%" y="261" width="0.0779%" height="15" fill="rgb(244,226,11)" fg:x="680" fg:w="1"/><text x="53.2508%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.0787%" y="245" width="0.0779%" height="15" fill="rgb(225,23,10)" fg:x="681" fg:w="1"/><text x="53.3287%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.0787%" y="229" width="0.0779%" height="15" fill="rgb(249,125,6)" fg:x="681" fg:w="1"/><text x="53.3287%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.0787%" y="213" width="0.0779%" height="15" fill="rgb(246,212,12)" fg:x="681" fg:w="1"/><text x="53.3287%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.0787%" y="197" width="0.0779%" height="15" fill="rgb(230,43,32)" fg:x="681" fg:w="1"/><text x="53.3287%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.0787%" y="181" width="0.0779%" height="15" fill="rgb(210,95,23)" fg:x="681" fg:w="1"/><text x="53.3287%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.0787%" y="165" width="0.0779%" height="15" fill="rgb(229,103,33)" fg:x="681" fg:w="1"/><text x="53.3287%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.0787%" y="149" width="0.0779%" height="15" fill="rgb(222,104,27)" fg:x="681" fg:w="1"/><text x="53.3287%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.0787%" y="133" width="0.0779%" height="15" fill="rgb(239,221,23)" fg:x="681" fg:w="1"/><text x="53.3287%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="53.0787%" y="117" width="0.0779%" height="15" fill="rgb(222,98,21)" fg:x="681" fg:w="1"/><text x="53.3287%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.1567%" y="213" width="0.0779%" height="15" fill="rgb(231,101,20)" fg:x="682" fg:w="1"/><text x="53.4067%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="53.1567%" y="245" width="0.1559%" height="15" fill="rgb(215,150,22)" fg:x="682" fg:w="2"/><text x="53.4067%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="53.1567%" y="229" width="0.1559%" height="15" fill="rgb(248,3,34)" fg:x="682" fg:w="2"/><text x="53.4067%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.2346%" y="213" width="0.0779%" height="15" fill="rgb(220,141,21)" fg:x="683" fg:w="1"/><text x="53.4846%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.2346%" y="197" width="0.0779%" height="15" fill="rgb(223,41,48)" fg:x="683" fg:w="1"/><text x="53.4846%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.2346%" y="181" width="0.0779%" height="15" fill="rgb(247,12,5)" fg:x="683" fg:w="1"/><text x="53.4846%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="53.0008%" y="293" width="0.3897%" height="15" fill="rgb(206,173,10)" fg:x="680" fg:w="5"/><text x="53.2508%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="53.0008%" y="277" width="0.3897%" height="15" fill="rgb(233,214,37)" fg:x="680" fg:w="5"/><text x="53.2508%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.31%)</title><rect x="53.0787%" y="261" width="0.3118%" height="15" fill="rgb(238,86,43)" fg:x="681" fg:w="4"/><text x="53.3287%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.3125%" y="245" width="0.0779%" height="15" fill="rgb(212,182,8)" fg:x="684" fg:w="1"/><text x="53.5625%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.3125%" y="229" width="0.0779%" height="15" fill="rgb(240,91,47)" fg:x="684" fg:w="1"/><text x="53.5625%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.3125%" y="213" width="0.0779%" height="15" fill="rgb(209,138,26)" fg:x="684" fg:w="1"/><text x="53.5625%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.3125%" y="197" width="0.0779%" height="15" fill="rgb(231,163,20)" fg:x="684" fg:w="1"/><text x="53.5625%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.3125%" y="181" width="0.0779%" height="15" fill="rgb(214,91,54)" fg:x="684" fg:w="1"/><text x="53.5625%" y="191.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.62%)</title><rect x="52.8449%" y="341" width="0.6235%" height="15" fill="rgb(230,32,17)" fg:x="678" fg:w="8"/><text x="53.0949%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.62%)</title><rect x="52.8449%" y="325" width="0.6235%" height="15" fill="rgb(231,34,34)" fg:x="678" fg:w="8"/><text x="53.0949%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.62%)</title><rect x="52.8449%" y="309" width="0.6235%" height="15" fill="rgb(224,228,27)" fg:x="678" fg:w="8"/><text x="53.0949%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.3905%" y="293" width="0.0779%" height="15" fill="rgb(219,35,40)" fg:x="685" fg:w="1"/><text x="53.6405%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.3905%" y="277" width="0.0779%" height="15" fill="rgb(234,42,8)" fg:x="685" fg:w="1"/><text x="53.6405%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.3905%" y="261" width="0.0779%" height="15" fill="rgb(226,75,22)" fg:x="685" fg:w="1"/><text x="53.6405%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.3905%" y="245" width="0.0779%" height="15" fill="rgb(242,203,28)" fg:x="685" fg:w="1"/><text x="53.6405%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.5464%" y="133" width="0.1559%" height="15" fill="rgb(221,3,9)" fg:x="687" fg:w="2"/><text x="53.7964%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.5464%" y="117" width="0.1559%" height="15" fill="rgb(214,34,31)" fg:x="687" fg:w="2"/><text x="53.7964%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.6243%" y="101" width="0.0779%" height="15" fill="rgb(252,119,15)" fg:x="688" fg:w="1"/><text x="53.8743%" y="111.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.6243%" y="85" width="0.0779%" height="15" fill="rgb(244,224,31)" fg:x="688" fg:w="1"/><text x="53.8743%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="53.5464%" y="165" width="0.2338%" height="15" fill="rgb(215,8,51)" fg:x="687" fg:w="3"/><text x="53.7964%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="53.5464%" y="149" width="0.2338%" height="15" fill="rgb(207,24,1)" fg:x="687" fg:w="3"/><text x="53.7964%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.7023%" y="133" width="0.0779%" height="15" fill="rgb(245,90,0)" fg:x="689" fg:w="1"/><text x="53.9523%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="53.4684%" y="197" width="0.3897%" height="15" fill="rgb(246,43,48)" fg:x="686" fg:w="5"/><text x="53.7184%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="53.4684%" y="181" width="0.3897%" height="15" fill="rgb(252,218,10)" fg:x="686" fg:w="5"/><text x="53.7184%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.7802%" y="165" width="0.0779%" height="15" fill="rgb(231,24,35)" fg:x="690" fg:w="1"/><text x="54.0302%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.8581%" y="149" width="0.0779%" height="15" fill="rgb(225,66,19)" fg:x="691" fg:w="1"/><text x="54.1081%" y="159.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="53.8581%" y="133" width="0.0779%" height="15" fill="rgb(214,96,51)" fg:x="691" fg:w="1"/><text x="54.1081%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="53.9361%" y="149" width="0.1559%" height="15" fill="rgb(251,151,47)" fg:x="692" fg:w="2"/><text x="54.1861%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.0140%" y="133" width="0.0779%" height="15" fill="rgb(236,79,14)" fg:x="693" fg:w="1"/><text x="54.2640%" y="143.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="53.8581%" y="181" width="0.3118%" height="15" fill="rgb(210,205,11)" fg:x="691" fg:w="4"/><text x="54.1081%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="53.8581%" y="165" width="0.3118%" height="15" fill="rgb(233,142,53)" fg:x="691" fg:w="4"/><text x="54.1081%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.0920%" y="149" width="0.0779%" height="15" fill="rgb(212,116,48)" fg:x="694" fg:w="1"/><text x="54.3420%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.78%)</title><rect x="53.4684%" y="213" width="0.7794%" height="15" fill="rgb(234,55,33)" fg:x="686" fg:w="10"/><text x="53.7184%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="53.8581%" y="197" width="0.3897%" height="15" fill="rgb(253,92,27)" fg:x="691" fg:w="5"/><text x="54.1081%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.1699%" y="181" width="0.0779%" height="15" fill="rgb(220,7,35)" fg:x="695" fg:w="1"/><text x="54.4199%" y="191.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (28 samples, 2.18%)</title><rect x="52.1434%" y="405" width="2.1824%" height="15" fill="rgb(246,124,6)" fg:x="669" fg:w="28"/><text x="52.3934%" y="415.50">&lt;..</text></g><g><title>kernel::model::EntityPtrResolver::entity (28 samples, 2.18%)</title><rect x="52.1434%" y="389" width="2.1824%" height="15" fill="rgb(212,111,51)" fg:x="669" fg:w="28"/><text x="52.3934%" y="399.50">k..</text></g><g><title>engine::session::Session::load_entity (28 samples, 2.18%)</title><rect x="52.1434%" y="373" width="2.1824%" height="15" fill="rgb(253,116,7)" fg:x="669" fg:w="28"/><text x="52.3934%" y="383.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (28 samples, 2.18%)</title><rect x="52.1434%" y="357" width="2.1824%" height="15" fill="rgb(213,145,18)" fg:x="669" fg:w="28"/><text x="52.3934%" y="367.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.86%)</title><rect x="53.4684%" y="341" width="0.8574%" height="15" fill="rgb(219,149,7)" fg:x="686" fg:w="11"/><text x="53.7184%" y="351.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.86%)</title><rect x="53.4684%" y="325" width="0.8574%" height="15" fill="rgb(225,156,20)" fg:x="686" fg:w="11"/><text x="53.7184%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="53.4684%" y="309" width="0.8574%" height="15" fill="rgb(211,98,19)" fg:x="686" fg:w="11"/><text x="53.7184%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="53.4684%" y="293" width="0.8574%" height="15" fill="rgb(231,192,31)" fg:x="686" fg:w="11"/><text x="53.7184%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="53.4684%" y="277" width="0.8574%" height="15" fill="rgb(249,95,19)" fg:x="686" fg:w="11"/><text x="53.7184%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="53.4684%" y="261" width="0.8574%" height="15" fill="rgb(247,101,36)" fg:x="686" fg:w="11"/><text x="53.7184%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="53.4684%" y="245" width="0.8574%" height="15" fill="rgb(221,45,43)" fg:x="686" fg:w="11"/><text x="53.7184%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="53.4684%" y="229" width="0.8574%" height="15" fill="rgb(220,42,1)" fg:x="686" fg:w="11"/><text x="53.7184%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2479%" y="213" width="0.0779%" height="15" fill="rgb(236,19,24)" fg:x="696" fg:w="1"/><text x="54.4979%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2479%" y="197" width="0.0779%" height="15" fill="rgb(225,192,6)" fg:x="696" fg:w="1"/><text x="54.4979%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2479%" y="181" width="0.0779%" height="15" fill="rgb(242,30,19)" fg:x="696" fg:w="1"/><text x="54.4979%" y="191.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (31 samples, 2.42%)</title><rect x="51.9875%" y="421" width="2.4162%" height="15" fill="rgb(240,36,6)" fg:x="667" fg:w="31"/><text x="52.2375%" y="431.50">&lt;p..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3258%" y="405" width="0.0779%" height="15" fill="rgb(246,40,28)" fg:x="697" fg:w="1"/><text x="54.5758%" y="415.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (33 samples, 2.57%)</title><rect x="51.9875%" y="437" width="2.5721%" height="15" fill="rgb(225,155,33)" fg:x="667" fg:w="33"/><text x="52.2375%" y="447.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="54.4037%" y="421" width="0.1559%" height="15" fill="rgb(240,65,18)" fg:x="698" fg:w="2"/><text x="54.6537%" y="431.50"></text></g><g><title>kernel::model::EntityPtrResolver::world (1 samples, 0.08%)</title><rect x="54.4817%" y="405" width="0.0779%" height="15" fill="rgb(217,0,48)" fg:x="699" fg:w="1"/><text x="54.7317%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="54.4817%" y="389" width="0.0779%" height="15" fill="rgb(217,80,15)" fg:x="699" fg:w="1"/><text x="54.7317%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="54.4817%" y="373" width="0.0779%" height="15" fill="rgb(253,43,51)" fg:x="699" fg:w="1"/><text x="54.7317%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="54.9493%" y="213" width="0.0779%" height="15" fill="rgb(246,60,4)" fg:x="705" fg:w="1"/><text x="55.1993%" y="223.50"></text></g><g><title>&lt;core::char::ToUppercase as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.08%)</title><rect x="55.0273%" y="213" width="0.0779%" height="15" fill="rgb(230,40,54)" fg:x="706" fg:w="1"/><text x="55.2773%" y="223.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (6 samples, 0.47%)</title><rect x="54.7155%" y="405" width="0.4677%" height="15" fill="rgb(208,20,44)" fg:x="702" fg:w="6"/><text x="54.9655%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (6 samples, 0.47%)</title><rect x="54.7155%" y="389" width="0.4677%" height="15" fill="rgb(230,22,22)" fg:x="702" fg:w="6"/><text x="54.9655%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (6 samples, 0.47%)</title><rect x="54.7155%" y="373" width="0.4677%" height="15" fill="rgb(207,57,4)" fg:x="702" fg:w="6"/><text x="54.9655%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.47%)</title><rect x="54.7155%" y="357" width="0.4677%" height="15" fill="rgb(242,130,33)" fg:x="702" fg:w="6"/><text x="54.9655%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (6 samples, 0.47%)</title><rect x="54.7155%" y="341" width="0.4677%" height="15" fill="rgb(218,66,43)" fg:x="702" fg:w="6"/><text x="54.9655%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.47%)</title><rect x="54.7155%" y="325" width="0.4677%" height="15" fill="rgb(236,105,16)" fg:x="702" fg:w="6"/><text x="54.9655%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.47%)</title><rect x="54.7155%" y="309" width="0.4677%" height="15" fill="rgb(230,46,15)" fg:x="702" fg:w="6"/><text x="54.9655%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (6 samples, 0.47%)</title><rect x="54.7155%" y="293" width="0.4677%" height="15" fill="rgb(251,172,40)" fg:x="702" fg:w="6"/><text x="54.9655%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (4 samples, 0.31%)</title><rect x="54.8714%" y="277" width="0.3118%" height="15" fill="rgb(225,217,32)" fg:x="704" fg:w="4"/><text x="55.1214%" y="287.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::SimpleReply&gt;&gt;::try_from (4 samples, 0.31%)</title><rect x="54.8714%" y="261" width="0.3118%" height="15" fill="rgb(243,10,29)" fg:x="704" fg:w="4"/><text x="55.1214%" y="271.50"></text></g><g><title>&lt;replies::SimpleReply as replies::ToTaggedJson&gt;::to_tagged_json (4 samples, 0.31%)</title><rect x="54.8714%" y="245" width="0.3118%" height="15" fill="rgb(207,102,10)" fg:x="704" fg:w="4"/><text x="55.1214%" y="255.50"></text></g><g><title>replies::identifier_to_key (4 samples, 0.31%)</title><rect x="54.8714%" y="229" width="0.3118%" height="15" fill="rgb(241,125,5)" fg:x="704" fg:w="4"/><text x="55.1214%" y="239.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.08%)</title><rect x="55.1052%" y="213" width="0.0779%" height="15" fill="rgb(230,125,29)" fg:x="707" fg:w="1"/><text x="55.3552%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="55.2611%" y="373" width="0.1559%" height="15" fill="rgb(223,65,44)" fg:x="709" fg:w="2"/><text x="55.5111%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4949%" y="325" width="0.0779%" height="15" fill="rgb(224,188,28)" fg:x="712" fg:w="1"/><text x="55.7449%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4949%" y="309" width="0.0779%" height="15" fill="rgb(254,197,27)" fg:x="712" fg:w="1"/><text x="55.7449%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.4949%" y="293" width="0.0779%" height="15" fill="rgb(220,200,25)" fg:x="712" fg:w="1"/><text x="55.7449%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.4949%" y="277" width="0.0779%" height="15" fill="rgb(239,225,54)" fg:x="712" fg:w="1"/><text x="55.7449%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.4949%" y="261" width="0.0779%" height="15" fill="rgb(211,59,40)" fg:x="712" fg:w="1"/><text x="55.7449%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4949%" y="245" width="0.0779%" height="15" fill="rgb(213,176,46)" fg:x="712" fg:w="1"/><text x="55.7449%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4949%" y="229" width="0.0779%" height="15" fill="rgb(226,99,4)" fg:x="712" fg:w="1"/><text x="55.7449%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.4949%" y="213" width="0.0779%" height="15" fill="rgb(239,203,43)" fg:x="712" fg:w="1"/><text x="55.7449%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.4949%" y="197" width="0.0779%" height="15" fill="rgb(246,1,45)" fg:x="712" fg:w="1"/><text x="55.7449%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.4949%" y="181" width="0.0779%" height="15" fill="rgb(231,42,52)" fg:x="712" fg:w="1"/><text x="55.7449%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.4949%" y="165" width="0.0779%" height="15" fill="rgb(240,13,50)" fg:x="712" fg:w="1"/><text x="55.7449%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.4949%" y="341" width="0.1559%" height="15" fill="rgb(225,81,14)" fg:x="712" fg:w="2"/><text x="55.7449%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5729%" y="325" width="0.0779%" height="15" fill="rgb(216,182,23)" fg:x="713" fg:w="1"/><text x="55.8229%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.5729%" y="309" width="0.0779%" height="15" fill="rgb(233,137,19)" fg:x="713" fg:w="1"/><text x="55.8229%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5729%" y="293" width="0.0779%" height="15" fill="rgb(242,61,46)" fg:x="713" fg:w="1"/><text x="55.8229%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5729%" y="277" width="0.0779%" height="15" fill="rgb(221,168,51)" fg:x="713" fg:w="1"/><text x="55.8229%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.5729%" y="261" width="0.0779%" height="15" fill="rgb(238,48,15)" fg:x="713" fg:w="1"/><text x="55.8229%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.5729%" y="245" width="0.0779%" height="15" fill="rgb(216,13,16)" fg:x="713" fg:w="1"/><text x="55.8229%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.5729%" y="229" width="0.0779%" height="15" fill="rgb(223,185,34)" fg:x="713" fg:w="1"/><text x="55.8229%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.5729%" y="213" width="0.0779%" height="15" fill="rgb(228,94,42)" fg:x="713" fg:w="1"/><text x="55.8229%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.5729%" y="197" width="0.0779%" height="15" fill="rgb(218,166,43)" fg:x="713" fg:w="1"/><text x="55.8229%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.5729%" y="181" width="0.0779%" height="15" fill="rgb(232,30,50)" fg:x="713" fg:w="1"/><text x="55.8229%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.5729%" y="165" width="0.0779%" height="15" fill="rgb(245,206,45)" fg:x="713" fg:w="1"/><text x="55.8229%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.5729%" y="149" width="0.0779%" height="15" fill="rgb(220,56,22)" fg:x="713" fg:w="1"/><text x="55.8229%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.5729%" y="133" width="0.0779%" height="15" fill="rgb(239,129,38)" fg:x="713" fg:w="1"/><text x="55.8229%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5729%" y="117" width="0.0779%" height="15" fill="rgb(207,68,41)" fg:x="713" fg:w="1"/><text x="55.8229%" y="127.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (7 samples, 0.55%)</title><rect x="55.4170%" y="357" width="0.5456%" height="15" fill="rgb(221,21,7)" fg:x="711" fg:w="7"/><text x="55.6670%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="55.6508%" y="341" width="0.3118%" height="15" fill="rgb(240,33,25)" fg:x="714" fg:w="4"/><text x="55.9008%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.8067%" y="325" width="0.1559%" height="15" fill="rgb(242,119,10)" fg:x="716" fg:w="2"/><text x="56.0567%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="55.8846%" y="309" width="0.0779%" height="15" fill="rgb(214,149,40)" fg:x="717" fg:w="1"/><text x="56.1346%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="55.8846%" y="293" width="0.0779%" height="15" fill="rgb(228,25,36)" fg:x="717" fg:w="1"/><text x="56.1346%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="55.8846%" y="277" width="0.0779%" height="15" fill="rgb(222,59,15)" fg:x="717" fg:w="1"/><text x="56.1346%" y="287.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="55.9626%" y="309" width="0.1559%" height="15" fill="rgb(218,170,0)" fg:x="718" fg:w="2"/><text x="56.2126%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.0405%" y="293" width="0.0779%" height="15" fill="rgb(232,173,23)" fg:x="719" fg:w="1"/><text x="56.2905%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.0405%" y="277" width="0.0779%" height="15" fill="rgb(218,116,1)" fg:x="719" fg:w="1"/><text x="56.2905%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.0405%" y="261" width="0.0779%" height="15" fill="rgb(207,34,4)" fg:x="719" fg:w="1"/><text x="56.2905%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.0405%" y="245" width="0.0779%" height="15" fill="rgb(229,54,52)" fg:x="719" fg:w="1"/><text x="56.2905%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.0405%" y="229" width="0.0779%" height="15" fill="rgb(211,86,23)" fg:x="719" fg:w="1"/><text x="56.2905%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.0405%" y="213" width="0.0779%" height="15" fill="rgb(254,153,34)" fg:x="719" fg:w="1"/><text x="56.2905%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.0405%" y="197" width="0.0779%" height="15" fill="rgb(219,220,14)" fg:x="719" fg:w="1"/><text x="56.2905%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.0405%" y="181" width="0.0779%" height="15" fill="rgb(247,8,26)" fg:x="719" fg:w="1"/><text x="56.2905%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.0405%" y="165" width="0.0779%" height="15" fill="rgb(213,129,42)" fg:x="719" fg:w="1"/><text x="56.2905%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.0405%" y="149" width="0.0779%" height="15" fill="rgb(225,95,41)" fg:x="719" fg:w="1"/><text x="56.2905%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.0405%" y="133" width="0.0779%" height="15" fill="rgb(215,134,24)" fg:x="719" fg:w="1"/><text x="56.2905%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0405%" y="117" width="0.0779%" height="15" fill="rgb(235,23,54)" fg:x="719" fg:w="1"/><text x="56.2905%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.1185%" y="261" width="0.0779%" height="15" fill="rgb(229,96,31)" fg:x="720" fg:w="1"/><text x="56.3685%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.1185%" y="245" width="0.0779%" height="15" fill="rgb(206,111,12)" fg:x="720" fg:w="1"/><text x="56.3685%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.1185%" y="229" width="0.0779%" height="15" fill="rgb(222,177,8)" fg:x="720" fg:w="1"/><text x="56.3685%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1185%" y="213" width="0.0779%" height="15" fill="rgb(251,36,52)" fg:x="720" fg:w="1"/><text x="56.3685%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="56.1185%" y="293" width="0.2338%" height="15" fill="rgb(216,182,29)" fg:x="720" fg:w="3"/><text x="56.3685%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="56.1185%" y="277" width="0.2338%" height="15" fill="rgb(241,145,50)" fg:x="720" fg:w="3"/><text x="56.3685%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.1964%" y="261" width="0.1559%" height="15" fill="rgb(231,71,35)" fg:x="721" fg:w="2"/><text x="56.4464%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.2744%" y="245" width="0.0779%" height="15" fill="rgb(218,22,17)" fg:x="722" fg:w="1"/><text x="56.5244%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.2744%" y="229" width="0.0779%" height="15" fill="rgb(225,227,6)" fg:x="722" fg:w="1"/><text x="56.5244%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.2744%" y="213" width="0.0779%" height="15" fill="rgb(224,204,17)" fg:x="722" fg:w="1"/><text x="56.5244%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.2744%" y="197" width="0.0779%" height="15" fill="rgb(227,61,28)" fg:x="722" fg:w="1"/><text x="56.5244%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.2744%" y="181" width="0.0779%" height="15" fill="rgb(242,148,23)" fg:x="722" fg:w="1"/><text x="56.5244%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.2744%" y="165" width="0.0779%" height="15" fill="rgb(237,105,33)" fg:x="722" fg:w="1"/><text x="56.5244%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.2744%" y="149" width="0.0779%" height="15" fill="rgb(238,218,40)" fg:x="722" fg:w="1"/><text x="56.5244%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.2744%" y="133" width="0.0779%" height="15" fill="rgb(209,126,11)" fg:x="722" fg:w="1"/><text x="56.5244%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.2744%" y="117" width="0.0779%" height="15" fill="rgb(245,90,11)" fg:x="722" fg:w="1"/><text x="56.5244%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.2744%" y="101" width="0.0779%" height="15" fill="rgb(211,195,10)" fg:x="722" fg:w="1"/><text x="56.5244%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2744%" y="85" width="0.0779%" height="15" fill="rgb(231,45,45)" fg:x="722" fg:w="1"/><text x="56.5244%" y="95.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.4302%" y="213" width="0.0779%" height="15" fill="rgb(246,100,43)" fg:x="724" fg:w="1"/><text x="56.6802%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.4302%" y="197" width="0.0779%" height="15" fill="rgb(241,193,8)" fg:x="724" fg:w="1"/><text x="56.6802%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.4302%" y="181" width="0.0779%" height="15" fill="rgb(208,76,19)" fg:x="724" fg:w="1"/><text x="56.6802%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="56.3523%" y="293" width="0.2338%" height="15" fill="rgb(223,69,40)" fg:x="723" fg:w="3"/><text x="56.6023%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.4302%" y="277" width="0.1559%" height="15" fill="rgb(207,120,39)" fg:x="724" fg:w="2"/><text x="56.6802%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.4302%" y="261" width="0.1559%" height="15" fill="rgb(212,209,28)" fg:x="724" fg:w="2"/><text x="56.6802%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="56.4302%" y="245" width="0.1559%" height="15" fill="rgb(246,82,29)" fg:x="724" fg:w="2"/><text x="56.6802%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.4302%" y="229" width="0.1559%" height="15" fill="rgb(239,6,40)" fg:x="724" fg:w="2"/><text x="56.6802%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.5082%" y="213" width="0.0779%" height="15" fill="rgb(228,181,35)" fg:x="725" fg:w="1"/><text x="56.7582%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.5082%" y="197" width="0.0779%" height="15" fill="rgb(238,151,2)" fg:x="725" fg:w="1"/><text x="56.7582%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6641%" y="245" width="0.0779%" height="15" fill="rgb(236,94,18)" fg:x="727" fg:w="1"/><text x="56.9141%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.7420%" y="213" width="0.0779%" height="15" fill="rgb(208,38,14)" fg:x="728" fg:w="1"/><text x="56.9920%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.7420%" y="197" width="0.0779%" height="15" fill="rgb(234,215,27)" fg:x="728" fg:w="1"/><text x="56.9920%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.8200%" y="197" width="0.0779%" height="15" fill="rgb(254,211,53)" fg:x="729" fg:w="1"/><text x="57.0700%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.8200%" y="181" width="0.0779%" height="15" fill="rgb(216,175,11)" fg:x="729" fg:w="1"/><text x="57.0700%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.8200%" y="165" width="0.0779%" height="15" fill="rgb(246,179,26)" fg:x="729" fg:w="1"/><text x="57.0700%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.8200%" y="149" width="0.0779%" height="15" fill="rgb(249,19,52)" fg:x="729" fg:w="1"/><text x="57.0700%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8200%" y="133" width="0.0779%" height="15" fill="rgb(230,42,52)" fg:x="729" fg:w="1"/><text x="57.0700%" y="143.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.55%)</title><rect x="56.5861%" y="293" width="0.5456%" height="15" fill="rgb(221,171,0)" fg:x="726" fg:w="7"/><text x="56.8361%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="56.5861%" y="277" width="0.5456%" height="15" fill="rgb(222,177,40)" fg:x="726" fg:w="7"/><text x="56.8361%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="56.5861%" y="261" width="0.5456%" height="15" fill="rgb(247,34,16)" fg:x="726" fg:w="7"/><text x="56.8361%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="56.7420%" y="245" width="0.3897%" height="15" fill="rgb(213,217,37)" fg:x="728" fg:w="5"/><text x="56.9920%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="56.7420%" y="229" width="0.3897%" height="15" fill="rgb(231,189,24)" fg:x="728" fg:w="5"/><text x="56.9920%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.31%)</title><rect x="56.8200%" y="213" width="0.3118%" height="15" fill="rgb(214,22,9)" fg:x="729" fg:w="4"/><text x="57.0700%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="56.8979%" y="197" width="0.2338%" height="15" fill="rgb(212,70,22)" fg:x="730" fg:w="3"/><text x="57.1479%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="56.8979%" y="181" width="0.2338%" height="15" fill="rgb(249,64,51)" fg:x="730" fg:w="3"/><text x="57.1479%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.9758%" y="165" width="0.1559%" height="15" fill="rgb(249,148,20)" fg:x="731" fg:w="2"/><text x="57.2258%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.9758%" y="149" width="0.1559%" height="15" fill="rgb(246,46,48)" fg:x="731" fg:w="2"/><text x="57.2258%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.9758%" y="133" width="0.1559%" height="15" fill="rgb(217,34,48)" fg:x="731" fg:w="2"/><text x="57.2258%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.9758%" y="117" width="0.1559%" height="15" fill="rgb(222,45,26)" fg:x="731" fg:w="2"/><text x="57.2258%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.9758%" y="101" width="0.1559%" height="15" fill="rgb(230,201,36)" fg:x="731" fg:w="2"/><text x="57.2258%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.9758%" y="85" width="0.1559%" height="15" fill="rgb(217,30,43)" fg:x="731" fg:w="2"/><text x="57.2258%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0538%" y="69" width="0.0779%" height="15" fill="rgb(230,197,40)" fg:x="732" fg:w="1"/><text x="57.3038%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.1317%" y="197" width="0.1559%" height="15" fill="rgb(239,181,18)" fg:x="733" fg:w="2"/><text x="57.3817%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.1317%" y="181" width="0.1559%" height="15" fill="rgb(222,60,39)" fg:x="733" fg:w="2"/><text x="57.3817%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.2097%" y="165" width="0.0779%" height="15" fill="rgb(210,60,22)" fg:x="734" fg:w="1"/><text x="57.4597%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.2097%" y="149" width="0.0779%" height="15" fill="rgb(239,213,48)" fg:x="734" fg:w="1"/><text x="57.4597%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2097%" y="133" width="0.0779%" height="15" fill="rgb(253,214,23)" fg:x="734" fg:w="1"/><text x="57.4597%" y="143.50"></text></g><g><title>plugins_core::tools::contained_by (25 samples, 1.95%)</title><rect x="55.4170%" y="373" width="1.9486%" height="15" fill="rgb(211,98,45)" fg:x="711" fg:w="25"/><text x="55.6670%" y="383.50">p..</text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (18 samples, 1.40%)</title><rect x="55.9626%" y="357" width="1.4030%" height="15" fill="rgb(239,130,44)" fg:x="718" fg:w="18"/><text x="56.2126%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (18 samples, 1.40%)</title><rect x="55.9626%" y="341" width="1.4030%" height="15" fill="rgb(222,181,35)" fg:x="718" fg:w="18"/><text x="56.2126%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (18 samples, 1.40%)</title><rect x="55.9626%" y="325" width="1.4030%" height="15" fill="rgb(219,219,49)" fg:x="718" fg:w="18"/><text x="56.2126%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.25%)</title><rect x="56.1185%" y="309" width="1.2471%" height="15" fill="rgb(227,161,51)" fg:x="720" fg:w="16"/><text x="56.3685%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.23%)</title><rect x="57.1317%" y="293" width="0.2338%" height="15" fill="rgb(239,112,27)" fg:x="733" fg:w="3"/><text x="57.3817%" y="303.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.23%)</title><rect x="57.1317%" y="277" width="0.2338%" height="15" fill="rgb(248,122,18)" fg:x="733" fg:w="3"/><text x="57.3817%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="57.1317%" y="261" width="0.2338%" height="15" fill="rgb(245,130,23)" fg:x="733" fg:w="3"/><text x="57.3817%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="57.1317%" y="245" width="0.2338%" height="15" fill="rgb(211,225,28)" fg:x="733" fg:w="3"/><text x="57.3817%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="57.1317%" y="229" width="0.2338%" height="15" fill="rgb(242,105,44)" fg:x="733" fg:w="3"/><text x="57.3817%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="57.1317%" y="213" width="0.2338%" height="15" fill="rgb(216,183,46)" fg:x="733" fg:w="3"/><text x="57.3817%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2876%" y="197" width="0.0779%" height="15" fill="rgb(227,112,9)" fg:x="735" fg:w="1"/><text x="57.5376%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2876%" y="181" width="0.0779%" height="15" fill="rgb(244,21,0)" fg:x="735" fg:w="1"/><text x="57.5376%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2876%" y="165" width="0.0779%" height="15" fill="rgb(236,185,14)" fg:x="735" fg:w="1"/><text x="57.5376%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.4435%" y="341" width="0.1559%" height="15" fill="rgb(236,170,30)" fg:x="737" fg:w="2"/><text x="57.6935%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.4435%" y="325" width="0.1559%" height="15" fill="rgb(209,198,51)" fg:x="737" fg:w="2"/><text x="57.6935%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.5214%" y="309" width="0.0779%" height="15" fill="rgb(205,171,26)" fg:x="738" fg:w="1"/><text x="57.7714%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.5214%" y="293" width="0.0779%" height="15" fill="rgb(246,41,49)" fg:x="738" fg:w="1"/><text x="57.7714%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.5214%" y="277" width="0.0779%" height="15" fill="rgb(240,229,12)" fg:x="738" fg:w="1"/><text x="57.7714%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.5214%" y="261" width="0.0779%" height="15" fill="rgb(212,8,54)" fg:x="738" fg:w="1"/><text x="57.7714%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.5214%" y="245" width="0.0779%" height="15" fill="rgb(230,114,13)" fg:x="738" fg:w="1"/><text x="57.7714%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.5214%" y="229" width="0.0779%" height="15" fill="rgb(229,130,28)" fg:x="738" fg:w="1"/><text x="57.7714%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.5214%" y="213" width="0.0779%" height="15" fill="rgb(206,139,15)" fg:x="738" fg:w="1"/><text x="57.7714%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.5214%" y="197" width="0.0779%" height="15" fill="rgb(241,188,35)" fg:x="738" fg:w="1"/><text x="57.7714%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.5214%" y="181" width="0.0779%" height="15" fill="rgb(208,224,26)" fg:x="738" fg:w="1"/><text x="57.7714%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.5214%" y="165" width="0.0779%" height="15" fill="rgb(251,131,28)" fg:x="738" fg:w="1"/><text x="57.7714%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.5214%" y="149" width="0.0779%" height="15" fill="rgb(208,153,1)" fg:x="738" fg:w="1"/><text x="57.7714%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.5214%" y="133" width="0.0779%" height="15" fill="rgb(234,33,36)" fg:x="738" fg:w="1"/><text x="57.7714%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.5214%" y="117" width="0.0779%" height="15" fill="rgb(246,42,29)" fg:x="738" fg:w="1"/><text x="57.7714%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5214%" y="101" width="0.0779%" height="15" fill="rgb(251,114,16)" fg:x="738" fg:w="1"/><text x="57.7714%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="57.5994%" y="341" width="0.0779%" height="15" fill="rgb(233,13,38)" fg:x="739" fg:w="1"/><text x="57.8494%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.9111%" y="181" width="0.0779%" height="15" fill="rgb(247,120,19)" fg:x="743" fg:w="1"/><text x="58.1611%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="57.8332%" y="213" width="0.2338%" height="15" fill="rgb(205,11,16)" fg:x="742" fg:w="3"/><text x="58.0832%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="57.8332%" y="197" width="0.2338%" height="15" fill="rgb(228,185,19)" fg:x="742" fg:w="3"/><text x="58.0832%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.9891%" y="181" width="0.0779%" height="15" fill="rgb(239,88,52)" fg:x="744" fg:w="1"/><text x="58.2391%" y="191.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (5 samples, 0.39%)</title><rect x="57.7553%" y="261" width="0.3897%" height="15" fill="rgb(219,23,1)" fg:x="741" fg:w="5"/><text x="58.0053%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="57.7553%" y="245" width="0.3897%" height="15" fill="rgb(253,177,16)" fg:x="741" fg:w="5"/><text x="58.0053%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="57.7553%" y="229" width="0.3897%" height="15" fill="rgb(225,150,40)" fg:x="741" fg:w="5"/><text x="58.0053%" y="239.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="58.0670%" y="213" width="0.0779%" height="15" fill="rgb(208,108,30)" fg:x="745" fg:w="1"/><text x="58.3170%" y="223.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (11 samples, 0.86%)</title><rect x="57.3655%" y="357" width="0.8574%" height="15" fill="rgb(214,122,4)" fg:x="736" fg:w="11"/><text x="57.6155%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="57.6773%" y="341" width="0.5456%" height="15" fill="rgb(229,74,37)" fg:x="740" fg:w="7"/><text x="57.9273%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="57.6773%" y="325" width="0.5456%" height="15" fill="rgb(233,61,41)" fg:x="740" fg:w="7"/><text x="57.9273%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (6 samples, 0.47%)</title><rect x="57.7553%" y="309" width="0.4677%" height="15" fill="rgb(238,191,5)" fg:x="741" fg:w="6"/><text x="58.0053%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (6 samples, 0.47%)</title><rect x="57.7553%" y="293" width="0.4677%" height="15" fill="rgb(233,78,24)" fg:x="741" fg:w="6"/><text x="58.0053%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (6 samples, 0.47%)</title><rect x="57.7553%" y="277" width="0.4677%" height="15" fill="rgb(211,142,8)" fg:x="741" fg:w="6"/><text x="58.0053%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.1450%" y="261" width="0.0779%" height="15" fill="rgb(253,38,53)" fg:x="746" fg:w="1"/><text x="58.3950%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.1450%" y="245" width="0.0779%" height="15" fill="rgb(234,63,51)" fg:x="746" fg:w="1"/><text x="58.3950%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1450%" y="229" width="0.0779%" height="15" fill="rgb(205,23,31)" fg:x="746" fg:w="1"/><text x="58.3950%" y="239.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="58.2229%" y="357" width="0.0779%" height="15" fill="rgb(210,184,50)" fg:x="747" fg:w="1"/><text x="58.4729%" y="367.50"></text></g><g><title>plugins_core::tools::occupied_by (14 samples, 1.09%)</title><rect x="57.3655%" y="373" width="1.0912%" height="15" fill="rgb(222,112,26)" fg:x="736" fg:w="14"/><text x="57.6155%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (2 samples, 0.16%)</title><rect x="58.3009%" y="357" width="0.1559%" height="15" fill="rgb(250,98,18)" fg:x="748" fg:w="2"/><text x="58.5509%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (2 samples, 0.16%)</title><rect x="58.3009%" y="341" width="0.1559%" height="15" fill="rgb(250,34,12)" fg:x="748" fg:w="2"/><text x="58.5509%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (43 samples, 3.35%)</title><rect x="55.1832%" y="389" width="3.3515%" height="15" fill="rgb(236,141,30)" fg:x="708" fg:w="43"/><text x="55.4332%" y="399.50">plu..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="58.4567%" y="373" width="0.0779%" height="15" fill="rgb(246,134,38)" fg:x="750" fg:w="1"/><text x="58.7067%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="58.4567%" y="357" width="0.0779%" height="15" fill="rgb(240,114,4)" fg:x="750" fg:w="1"/><text x="58.7067%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.4567%" y="341" width="0.0779%" height="15" fill="rgb(243,113,39)" fg:x="750" fg:w="1"/><text x="58.7067%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4567%" y="325" width="0.0779%" height="15" fill="rgb(239,215,4)" fg:x="750" fg:w="1"/><text x="58.7067%" y="335.50"></text></g><g><title>engine::session::Session::captured (98 samples, 7.64%)</title><rect x="50.9743%" y="549" width="7.6383%" height="15" fill="rgb(236,229,45)" fg:x="654" fg:w="98"/><text x="51.2243%" y="559.50">engine::se..</text></g><g><title>engine::session::logs::capture (95 samples, 7.40%)</title><rect x="51.2081%" y="533" width="7.4045%" height="15" fill="rgb(242,2,6)" fg:x="657" fg:w="95"/><text x="51.4581%" y="543.50">engine::se..</text></g><g><title>tracing_core::dispatcher::with_default (86 samples, 6.70%)</title><rect x="51.9096%" y="517" width="6.7030%" height="15" fill="rgb(239,108,21)" fg:x="666" fg:w="86"/><text x="52.1596%" y="527.50">tracing_c..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (86 samples, 6.70%)</title><rect x="51.9096%" y="501" width="6.7030%" height="15" fill="rgb(215,168,34)" fg:x="666" fg:w="86"/><text x="52.1596%" y="511.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (85 samples, 6.63%)</title><rect x="51.9875%" y="485" width="6.6251%" height="15" fill="rgb(238,31,17)" fg:x="667" fg:w="85"/><text x="52.2375%" y="495.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (85 samples, 6.63%)</title><rect x="51.9875%" y="469" width="6.6251%" height="15" fill="rgb(220,133,11)" fg:x="667" fg:w="85"/><text x="52.2375%" y="479.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (85 samples, 6.63%)</title><rect x="51.9875%" y="453" width="6.6251%" height="15" fill="rgb(212,158,23)" fg:x="667" fg:w="85"/><text x="52.2375%" y="463.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (52 samples, 4.05%)</title><rect x="54.5596%" y="437" width="4.0530%" height="15" fill="rgb(223,172,7)" fg:x="700" fg:w="52"/><text x="54.8096%" y="447.50">kern..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (52 samples, 4.05%)</title><rect x="54.5596%" y="421" width="4.0530%" height="15" fill="rgb(244,3,52)" fg:x="700" fg:w="52"/><text x="54.8096%" y="431.50">&lt;plu..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (44 samples, 3.43%)</title><rect x="55.1832%" y="405" width="3.4295%" height="15" fill="rgb(207,69,27)" fg:x="708" fg:w="44"/><text x="55.4332%" y="415.50">plu..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="58.5347%" y="389" width="0.0779%" height="15" fill="rgb(213,136,45)" fg:x="751" fg:w="1"/><text x="58.7847%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5347%" y="373" width="0.0779%" height="15" fill="rgb(218,79,17)" fg:x="751" fg:w="1"/><text x="58.7847%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.6906%" y="453" width="0.0779%" height="15" fill="rgb(216,106,36)" fg:x="753" fg:w="1"/><text x="58.9406%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7685%" y="341" width="0.0779%" height="15" fill="rgb(251,27,45)" fg:x="754" fg:w="1"/><text x="59.0185%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7685%" y="325" width="0.0779%" height="15" fill="rgb(232,21,34)" fg:x="754" fg:w="1"/><text x="59.0185%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.7685%" y="309" width="0.0779%" height="15" fill="rgb(249,191,16)" fg:x="754" fg:w="1"/><text x="59.0185%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.7685%" y="293" width="0.0779%" height="15" fill="rgb(224,88,20)" fg:x="754" fg:w="1"/><text x="59.0185%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.7685%" y="277" width="0.0779%" height="15" fill="rgb(237,93,27)" fg:x="754" fg:w="1"/><text x="59.0185%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.7685%" y="261" width="0.0779%" height="15" fill="rgb(226,198,48)" fg:x="754" fg:w="1"/><text x="59.0185%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7685%" y="245" width="0.0779%" height="15" fill="rgb(207,162,53)" fg:x="754" fg:w="1"/><text x="59.0185%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="58.6126%" y="501" width="0.3118%" height="15" fill="rgb(207,169,9)" fg:x="752" fg:w="4"/><text x="58.8626%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="58.6906%" y="485" width="0.2338%" height="15" fill="rgb(224,166,46)" fg:x="753" fg:w="3"/><text x="58.9406%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="58.6906%" y="469" width="0.2338%" height="15" fill="rgb(233,26,6)" fg:x="753" fg:w="3"/><text x="58.9406%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.7685%" y="453" width="0.1559%" height="15" fill="rgb(218,106,45)" fg:x="754" fg:w="2"/><text x="59.0185%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.7685%" y="437" width="0.1559%" height="15" fill="rgb(240,217,4)" fg:x="754" fg:w="2"/><text x="59.0185%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.7685%" y="421" width="0.1559%" height="15" fill="rgb(246,171,10)" fg:x="754" fg:w="2"/><text x="59.0185%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.7685%" y="405" width="0.1559%" height="15" fill="rgb(223,197,30)" fg:x="754" fg:w="2"/><text x="59.0185%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.7685%" y="389" width="0.1559%" height="15" fill="rgb(207,92,16)" fg:x="754" fg:w="2"/><text x="59.0185%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.7685%" y="373" width="0.1559%" height="15" fill="rgb(211,6,44)" fg:x="754" fg:w="2"/><text x="59.0185%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.7685%" y="357" width="0.1559%" height="15" fill="rgb(219,139,2)" fg:x="754" fg:w="2"/><text x="59.0185%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.8465%" y="341" width="0.0779%" height="15" fill="rgb(224,103,21)" fg:x="755" fg:w="1"/><text x="59.0965%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.8465%" y="325" width="0.0779%" height="15" fill="rgb(254,110,48)" fg:x="755" fg:w="1"/><text x="59.0965%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1582%" y="421" width="0.0779%" height="15" fill="rgb(212,88,19)" fg:x="759" fg:w="1"/><text x="59.4082%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1582%" y="405" width="0.0779%" height="15" fill="rgb(248,103,6)" fg:x="759" fg:w="1"/><text x="59.4082%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1582%" y="389" width="0.0779%" height="15" fill="rgb(214,53,46)" fg:x="759" fg:w="1"/><text x="59.4082%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="59.0803%" y="453" width="0.2338%" height="15" fill="rgb(236,190,24)" fg:x="758" fg:w="3"/><text x="59.3303%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="59.0803%" y="437" width="0.2338%" height="15" fill="rgb(254,58,28)" fg:x="758" fg:w="3"/><text x="59.3303%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2362%" y="421" width="0.0779%" height="15" fill="rgb(243,63,27)" fg:x="760" fg:w="1"/><text x="59.4862%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.3141%" y="405" width="0.0779%" height="15" fill="rgb(206,81,20)" fg:x="761" fg:w="1"/><text x="59.5641%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3141%" y="389" width="0.0779%" height="15" fill="rgb(252,69,51)" fg:x="761" fg:w="1"/><text x="59.5641%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.3141%" y="373" width="0.0779%" height="15" fill="rgb(222,213,4)" fg:x="761" fg:w="1"/><text x="59.5641%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3141%" y="357" width="0.0779%" height="15" fill="rgb(226,198,12)" fg:x="761" fg:w="1"/><text x="59.5641%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3141%" y="341" width="0.0779%" height="15" fill="rgb(248,115,11)" fg:x="761" fg:w="1"/><text x="59.5641%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.3141%" y="325" width="0.0779%" height="15" fill="rgb(221,148,54)" fg:x="761" fg:w="1"/><text x="59.5641%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.3141%" y="309" width="0.0779%" height="15" fill="rgb(214,209,51)" fg:x="761" fg:w="1"/><text x="59.5641%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.3141%" y="293" width="0.0779%" height="15" fill="rgb(249,116,53)" fg:x="761" fg:w="1"/><text x="59.5641%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3141%" y="277" width="0.0779%" height="15" fill="rgb(248,170,1)" fg:x="761" fg:w="1"/><text x="59.5641%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3141%" y="261" width="0.0779%" height="15" fill="rgb(244,105,10)" fg:x="761" fg:w="1"/><text x="59.5641%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.3141%" y="245" width="0.0779%" height="15" fill="rgb(229,100,5)" fg:x="761" fg:w="1"/><text x="59.5641%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.3141%" y="229" width="0.0779%" height="15" fill="rgb(233,221,39)" fg:x="761" fg:w="1"/><text x="59.5641%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.3141%" y="213" width="0.0779%" height="15" fill="rgb(233,88,21)" fg:x="761" fg:w="1"/><text x="59.5641%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.3141%" y="197" width="0.0779%" height="15" fill="rgb(206,13,0)" fg:x="761" fg:w="1"/><text x="59.5641%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3141%" y="181" width="0.0779%" height="15" fill="rgb(242,15,35)" fg:x="761" fg:w="1"/><text x="59.5641%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="59.3920%" y="357" width="0.2338%" height="15" fill="rgb(247,142,41)" fg:x="762" fg:w="3"/><text x="59.6420%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="59.3920%" y="341" width="0.2338%" height="15" fill="rgb(245,51,29)" fg:x="762" fg:w="3"/><text x="59.6420%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="59.5479%" y="325" width="0.0779%" height="15" fill="rgb(228,209,43)" fg:x="764" fg:w="1"/><text x="59.7979%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="59.5479%" y="309" width="0.0779%" height="15" fill="rgb(233,185,9)" fg:x="764" fg:w="1"/><text x="59.7979%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.5479%" y="293" width="0.0779%" height="15" fill="rgb(226,93,0)" fg:x="764" fg:w="1"/><text x="59.7979%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="59.3920%" y="405" width="0.3118%" height="15" fill="rgb(245,194,43)" fg:x="762" fg:w="4"/><text x="59.6420%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.31%)</title><rect x="59.3920%" y="389" width="0.3118%" height="15" fill="rgb(211,145,34)" fg:x="762" fg:w="4"/><text x="59.6420%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.31%)</title><rect x="59.3920%" y="373" width="0.3118%" height="15" fill="rgb(231,228,28)" fg:x="762" fg:w="4"/><text x="59.6420%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.6259%" y="357" width="0.0779%" height="15" fill="rgb(236,149,4)" fg:x="765" fg:w="1"/><text x="59.8759%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.6259%" y="341" width="0.0779%" height="15" fill="rgb(234,114,38)" fg:x="765" fg:w="1"/><text x="59.8759%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="59.6259%" y="325" width="0.0779%" height="15" fill="rgb(246,132,51)" fg:x="765" fg:w="1"/><text x="59.8759%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="59.6259%" y="309" width="0.0779%" height="15" fill="rgb(251,137,22)" fg:x="765" fg:w="1"/><text x="59.8759%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="59.6259%" y="293" width="0.0779%" height="15" fill="rgb(243,59,52)" fg:x="765" fg:w="1"/><text x="59.8759%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="59.6259%" y="277" width="0.0779%" height="15" fill="rgb(239,56,28)" fg:x="765" fg:w="1"/><text x="59.8759%" y="287.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="59.6259%" y="261" width="0.0779%" height="15" fill="rgb(218,168,27)" fg:x="765" fg:w="1"/><text x="59.8759%" y="271.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="59.6259%" y="245" width="0.0779%" height="15" fill="rgb(232,165,11)" fg:x="765" fg:w="1"/><text x="59.8759%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="59.6259%" y="229" width="0.0779%" height="15" fill="rgb(253,55,41)" fg:x="765" fg:w="1"/><text x="59.8759%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="59.6259%" y="213" width="0.0779%" height="15" fill="rgb(233,206,24)" fg:x="765" fg:w="1"/><text x="59.8759%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.6259%" y="197" width="0.0779%" height="15" fill="rgb(220,199,8)" fg:x="765" fg:w="1"/><text x="59.8759%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.6259%" y="181" width="0.0779%" height="15" fill="rgb(254,65,26)" fg:x="765" fg:w="1"/><text x="59.8759%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.6259%" y="165" width="0.0779%" height="15" fill="rgb(253,102,23)" fg:x="765" fg:w="1"/><text x="59.8759%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.6259%" y="149" width="0.0779%" height="15" fill="rgb(231,103,35)" fg:x="765" fg:w="1"/><text x="59.8759%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.6259%" y="133" width="0.0779%" height="15" fill="rgb(238,26,10)" fg:x="765" fg:w="1"/><text x="59.8759%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.6259%" y="117" width="0.0779%" height="15" fill="rgb(234,191,34)" fg:x="765" fg:w="1"/><text x="59.8759%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.6259%" y="101" width="0.0779%" height="15" fill="rgb(206,210,9)" fg:x="765" fg:w="1"/><text x="59.8759%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.47%)</title><rect x="59.3141%" y="453" width="0.4677%" height="15" fill="rgb(219,155,3)" fg:x="761" fg:w="6"/><text x="59.5641%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.47%)</title><rect x="59.3141%" y="437" width="0.4677%" height="15" fill="rgb(221,62,52)" fg:x="761" fg:w="6"/><text x="59.5641%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.47%)</title><rect x="59.3141%" y="421" width="0.4677%" height="15" fill="rgb(215,197,36)" fg:x="761" fg:w="6"/><text x="59.5641%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.7038%" y="405" width="0.0779%" height="15" fill="rgb(226,222,6)" fg:x="766" fg:w="1"/><text x="59.9538%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.7038%" y="389" width="0.0779%" height="15" fill="rgb(215,58,28)" fg:x="766" fg:w="1"/><text x="59.9538%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.01%)</title><rect x="58.9244%" y="501" width="1.0133%" height="15" fill="rgb(212,148,2)" fg:x="756" fg:w="13"/><text x="59.1744%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.01%)</title><rect x="58.9244%" y="485" width="1.0133%" height="15" fill="rgb(208,21,42)" fg:x="756" fg:w="13"/><text x="59.1744%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (12 samples, 0.94%)</title><rect x="59.0023%" y="469" width="0.9353%" height="15" fill="rgb(209,107,26)" fg:x="757" fg:w="12"/><text x="59.2523%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.7818%" y="453" width="0.1559%" height="15" fill="rgb(254,60,47)" fg:x="767" fg:w="2"/><text x="60.0318%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.7818%" y="437" width="0.1559%" height="15" fill="rgb(207,226,45)" fg:x="767" fg:w="2"/><text x="60.0318%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.8597%" y="421" width="0.0779%" height="15" fill="rgb(223,124,22)" fg:x="768" fg:w="1"/><text x="60.1097%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.8597%" y="405" width="0.0779%" height="15" fill="rgb(240,162,13)" fg:x="768" fg:w="1"/><text x="60.1097%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.0935%" y="453" width="0.0779%" height="15" fill="rgb(244,199,31)" fg:x="771" fg:w="1"/><text x="60.3435%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.0935%" y="437" width="0.0779%" height="15" fill="rgb(207,92,16)" fg:x="771" fg:w="1"/><text x="60.3435%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="60.0935%" y="469" width="0.1559%" height="15" fill="rgb(215,31,19)" fg:x="771" fg:w="2"/><text x="60.3435%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.1715%" y="453" width="0.0779%" height="15" fill="rgb(245,118,14)" fg:x="772" fg:w="1"/><text x="60.4215%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.1715%" y="437" width="0.0779%" height="15" fill="rgb(248,12,46)" fg:x="772" fg:w="1"/><text x="60.4215%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.1715%" y="421" width="0.0779%" height="15" fill="rgb(209,119,0)" fg:x="772" fg:w="1"/><text x="60.4215%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.1715%" y="405" width="0.0779%" height="15" fill="rgb(254,51,44)" fg:x="772" fg:w="1"/><text x="60.4215%" y="415.50"></text></g><g><title>engine::session::internal::Added::find_refs (22 samples, 1.71%)</title><rect x="58.6126%" y="533" width="1.7147%" height="15" fill="rgb(253,182,35)" fg:x="752" fg:w="22"/><text x="58.8626%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (22 samples, 1.71%)</title><rect x="58.6126%" y="517" width="1.7147%" height="15" fill="rgb(205,198,39)" fg:x="752" fg:w="22"/><text x="58.8626%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="59.9376%" y="501" width="0.3897%" height="15" fill="rgb(251,175,48)" fg:x="769" fg:w="5"/><text x="60.1876%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="59.9376%" y="485" width="0.3897%" height="15" fill="rgb(239,38,17)" fg:x="769" fg:w="5"/><text x="60.1876%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2494%" y="469" width="0.0779%" height="15" fill="rgb(212,101,8)" fg:x="773" fg:w="1"/><text x="60.4994%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.4053%" y="485" width="0.0779%" height="15" fill="rgb(228,35,17)" fg:x="775" fg:w="1"/><text x="60.6553%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4053%" y="469" width="0.0779%" height="15" fill="rgb(214,95,8)" fg:x="775" fg:w="1"/><text x="60.6553%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.4053%" y="453" width="0.0779%" height="15" fill="rgb(210,176,35)" fg:x="775" fg:w="1"/><text x="60.6553%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4053%" y="437" width="0.0779%" height="15" fill="rgb(226,4,3)" fg:x="775" fg:w="1"/><text x="60.6553%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4053%" y="421" width="0.0779%" height="15" fill="rgb(232,133,14)" fg:x="775" fg:w="1"/><text x="60.6553%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.4053%" y="405" width="0.0779%" height="15" fill="rgb(250,191,8)" fg:x="775" fg:w="1"/><text x="60.6553%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.4053%" y="389" width="0.0779%" height="15" fill="rgb(213,12,45)" fg:x="775" fg:w="1"/><text x="60.6553%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.4053%" y="373" width="0.0779%" height="15" fill="rgb(233,78,26)" fg:x="775" fg:w="1"/><text x="60.6553%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.4053%" y="357" width="0.0779%" height="15" fill="rgb(245,222,11)" fg:x="775" fg:w="1"/><text x="60.6553%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.4053%" y="341" width="0.0779%" height="15" fill="rgb(216,174,12)" fg:x="775" fg:w="1"/><text x="60.6553%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.4053%" y="325" width="0.0779%" height="15" fill="rgb(213,15,9)" fg:x="775" fg:w="1"/><text x="60.6553%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.4053%" y="309" width="0.0779%" height="15" fill="rgb(238,103,32)" fg:x="775" fg:w="1"/><text x="60.6553%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.4053%" y="293" width="0.0779%" height="15" fill="rgb(245,85,15)" fg:x="775" fg:w="1"/><text x="60.6553%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.4053%" y="277" width="0.0779%" height="15" fill="rgb(254,204,5)" fg:x="775" fg:w="1"/><text x="60.6553%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.4053%" y="261" width="0.0779%" height="15" fill="rgb(231,178,15)" fg:x="775" fg:w="1"/><text x="60.6553%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="60.3274%" y="517" width="0.2338%" height="15" fill="rgb(248,151,3)" fg:x="774" fg:w="3"/><text x="60.5774%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.4053%" y="501" width="0.1559%" height="15" fill="rgb(250,139,13)" fg:x="775" fg:w="2"/><text x="60.6553%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4832%" y="485" width="0.0779%" height="15" fill="rgb(243,107,53)" fg:x="776" fg:w="1"/><text x="60.7332%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4832%" y="469" width="0.0779%" height="15" fill="rgb(232,81,15)" fg:x="776" fg:w="1"/><text x="60.7332%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.4832%" y="453" width="0.0779%" height="15" fill="rgb(225,187,48)" fg:x="776" fg:w="1"/><text x="60.7332%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.4832%" y="437" width="0.0779%" height="15" fill="rgb(205,116,12)" fg:x="776" fg:w="1"/><text x="60.7332%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.4832%" y="421" width="0.0779%" height="15" fill="rgb(220,222,31)" fg:x="776" fg:w="1"/><text x="60.7332%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.4832%" y="405" width="0.0779%" height="15" fill="rgb(233,187,49)" fg:x="776" fg:w="1"/><text x="60.7332%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.4832%" y="389" width="0.0779%" height="15" fill="rgb(211,168,53)" fg:x="776" fg:w="1"/><text x="60.7332%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.4832%" y="373" width="0.0779%" height="15" fill="rgb(206,160,16)" fg:x="776" fg:w="1"/><text x="60.7332%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.4832%" y="357" width="0.0779%" height="15" fill="rgb(254,164,13)" fg:x="776" fg:w="1"/><text x="60.7332%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.4832%" y="341" width="0.0779%" height="15" fill="rgb(229,45,30)" fg:x="776" fg:w="1"/><text x="60.7332%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.4832%" y="325" width="0.0779%" height="15" fill="rgb(237,32,10)" fg:x="776" fg:w="1"/><text x="60.7332%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.5612%" y="517" width="0.0779%" height="15" fill="rgb(251,20,47)" fg:x="777" fg:w="1"/><text x="60.8112%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="60.6391%" y="517" width="0.0779%" height="15" fill="rgb(251,116,12)" fg:x="778" fg:w="1"/><text x="60.8891%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.6391%" y="501" width="0.0779%" height="15" fill="rgb(214,227,27)" fg:x="778" fg:w="1"/><text x="60.8891%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6391%" y="485" width="0.0779%" height="15" fill="rgb(248,10,53)" fg:x="778" fg:w="1"/><text x="60.8891%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.6391%" y="469" width="0.0779%" height="15" fill="rgb(221,176,25)" fg:x="778" fg:w="1"/><text x="60.8891%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.6391%" y="453" width="0.0779%" height="15" fill="rgb(205,70,46)" fg:x="778" fg:w="1"/><text x="60.8891%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.7950%" y="437" width="0.0779%" height="15" fill="rgb(217,45,38)" fg:x="780" fg:w="1"/><text x="61.0450%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.8730%" y="389" width="0.0779%" height="15" fill="rgb(243,6,54)" fg:x="781" fg:w="1"/><text x="61.1230%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.8730%" y="373" width="0.0779%" height="15" fill="rgb(242,76,23)" fg:x="781" fg:w="1"/><text x="61.1230%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="60.8730%" y="357" width="0.0779%" height="15" fill="rgb(239,166,0)" fg:x="781" fg:w="1"/><text x="61.1230%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.0288%" y="373" width="0.0779%" height="15" fill="rgb(238,174,32)" fg:x="783" fg:w="1"/><text x="61.2788%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.23%)</title><rect x="60.9509%" y="389" width="0.2338%" height="15" fill="rgb(238,124,44)" fg:x="782" fg:w="3"/><text x="61.2009%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="61.1068%" y="373" width="0.0779%" height="15" fill="rgb(206,185,9)" fg:x="784" fg:w="1"/><text x="61.3568%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="60.8730%" y="421" width="0.3897%" height="15" fill="rgb(215,157,17)" fg:x="781" fg:w="5"/><text x="61.1230%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="60.8730%" y="405" width="0.3897%" height="15" fill="rgb(251,17,29)" fg:x="781" fg:w="5"/><text x="61.1230%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1847%" y="389" width="0.0779%" height="15" fill="rgb(227,113,27)" fg:x="785" fg:w="1"/><text x="61.4347%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.3406%" y="389" width="0.0779%" height="15" fill="rgb(217,226,24)" fg:x="787" fg:w="1"/><text x="61.5906%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.78%)</title><rect x="60.7171%" y="517" width="0.7794%" height="15" fill="rgb(251,99,38)" fg:x="779" fg:w="10"/><text x="60.9671%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.78%)</title><rect x="60.7171%" y="501" width="0.7794%" height="15" fill="rgb(231,147,19)" fg:x="779" fg:w="10"/><text x="60.9671%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.78%)</title><rect x="60.7171%" y="485" width="0.7794%" height="15" fill="rgb(230,86,8)" fg:x="779" fg:w="10"/><text x="60.9671%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.78%)</title><rect x="60.7171%" y="469" width="0.7794%" height="15" fill="rgb(237,159,39)" fg:x="779" fg:w="10"/><text x="60.9671%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.78%)</title><rect x="60.7171%" y="453" width="0.7794%" height="15" fill="rgb(247,179,47)" fg:x="779" fg:w="10"/><text x="60.9671%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.62%)</title><rect x="60.8730%" y="437" width="0.6235%" height="15" fill="rgb(253,152,26)" fg:x="781" fg:w="8"/><text x="61.1230%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="61.2627%" y="421" width="0.2338%" height="15" fill="rgb(222,211,15)" fg:x="786" fg:w="3"/><text x="61.5127%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="61.2627%" y="405" width="0.2338%" height="15" fill="rgb(236,193,6)" fg:x="786" fg:w="3"/><text x="61.5127%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.4186%" y="389" width="0.0779%" height="15" fill="rgb(226,206,10)" fg:x="788" fg:w="1"/><text x="61.6686%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.4186%" y="373" width="0.0779%" height="15" fill="rgb(213,125,22)" fg:x="788" fg:w="1"/><text x="61.6686%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.4186%" y="357" width="0.0779%" height="15" fill="rgb(221,66,28)" fg:x="788" fg:w="1"/><text x="61.6686%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4186%" y="341" width="0.0779%" height="15" fill="rgb(222,84,53)" fg:x="788" fg:w="1"/><text x="61.6686%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.4186%" y="325" width="0.0779%" height="15" fill="rgb(243,50,15)" fg:x="788" fg:w="1"/><text x="61.6686%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.4186%" y="309" width="0.0779%" height="15" fill="rgb(208,184,23)" fg:x="788" fg:w="1"/><text x="61.6686%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.6524%" y="373" width="0.0779%" height="15" fill="rgb(221,83,2)" fg:x="791" fg:w="1"/><text x="61.9024%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.6524%" y="357" width="0.0779%" height="15" fill="rgb(236,53,24)" fg:x="791" fg:w="1"/><text x="61.9024%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.6524%" y="341" width="0.0779%" height="15" fill="rgb(244,171,29)" fg:x="791" fg:w="1"/><text x="61.9024%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.6524%" y="325" width="0.0779%" height="15" fill="rgb(205,19,11)" fg:x="791" fg:w="1"/><text x="61.9024%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="61.5744%" y="389" width="0.2338%" height="15" fill="rgb(207,108,29)" fg:x="790" fg:w="3"/><text x="61.8244%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.7303%" y="373" width="0.0779%" height="15" fill="rgb(236,215,43)" fg:x="792" fg:w="1"/><text x="61.9803%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="61.4965%" y="421" width="0.3897%" height="15" fill="rgb(213,58,35)" fg:x="789" fg:w="5"/><text x="61.7465%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="61.5744%" y="405" width="0.3118%" height="15" fill="rgb(220,211,46)" fg:x="790" fg:w="4"/><text x="61.8244%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8083%" y="389" width="0.0779%" height="15" fill="rgb(212,134,16)" fg:x="793" fg:w="1"/><text x="62.0583%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8083%" y="373" width="0.0779%" height="15" fill="rgb(232,90,44)" fg:x="793" fg:w="1"/><text x="62.0583%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8083%" y="357" width="0.0779%" height="15" fill="rgb(212,18,36)" fg:x="793" fg:w="1"/><text x="62.0583%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.8862%" y="405" width="0.0779%" height="15" fill="rgb(206,112,24)" fg:x="794" fg:w="1"/><text x="62.1362%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="61.4965%" y="453" width="0.5456%" height="15" fill="rgb(238,223,40)" fg:x="789" fg:w="7"/><text x="61.7465%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.55%)</title><rect x="61.4965%" y="437" width="0.5456%" height="15" fill="rgb(226,169,20)" fg:x="789" fg:w="7"/><text x="61.7465%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.8862%" y="421" width="0.1559%" height="15" fill="rgb(241,64,52)" fg:x="794" fg:w="2"/><text x="62.1362%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9641%" y="405" width="0.0779%" height="15" fill="rgb(228,120,25)" fg:x="795" fg:w="1"/><text x="62.2141%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.0421%" y="453" width="0.0779%" height="15" fill="rgb(234,108,19)" fg:x="796" fg:w="1"/><text x="62.2921%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.0421%" y="437" width="0.0779%" height="15" fill="rgb(236,133,29)" fg:x="796" fg:w="1"/><text x="62.2921%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (46 samples, 3.59%)</title><rect x="58.6126%" y="549" width="3.5853%" height="15" fill="rgb(246,174,53)" fg:x="752" fg:w="46"/><text x="58.8626%" y="559.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.87%)</title><rect x="60.3274%" y="533" width="1.8706%" height="15" fill="rgb(210,105,35)" fg:x="774" fg:w="24"/><text x="60.5774%" y="543.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.70%)</title><rect x="61.4965%" y="517" width="0.7015%" height="15" fill="rgb(225,27,26)" fg:x="789" fg:w="9"/><text x="61.7465%" y="527.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.70%)</title><rect x="61.4965%" y="501" width="0.7015%" height="15" fill="rgb(233,2,39)" fg:x="789" fg:w="9"/><text x="61.7465%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.70%)</title><rect x="61.4965%" y="485" width="0.7015%" height="15" fill="rgb(219,164,26)" fg:x="789" fg:w="9"/><text x="61.7465%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.70%)</title><rect x="61.4965%" y="469" width="0.7015%" height="15" fill="rgb(236,211,5)" fg:x="789" fg:w="9"/><text x="61.7465%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1200%" y="453" width="0.0779%" height="15" fill="rgb(244,227,23)" fg:x="797" fg:w="1"/><text x="62.3700%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1980%" y="533" width="0.0779%" height="15" fill="rgb(230,184,8)" fg:x="798" fg:w="1"/><text x="62.4480%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1980%" y="517" width="0.0779%" height="15" fill="rgb(217,125,48)" fg:x="798" fg:w="1"/><text x="62.4480%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.1980%" y="501" width="0.0779%" height="15" fill="rgb(223,192,47)" fg:x="798" fg:w="1"/><text x="62.4480%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.1980%" y="485" width="0.0779%" height="15" fill="rgb(226,119,10)" fg:x="798" fg:w="1"/><text x="62.4480%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.1980%" y="469" width="0.0779%" height="15" fill="rgb(221,49,29)" fg:x="798" fg:w="1"/><text x="62.4480%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1980%" y="453" width="0.0779%" height="15" fill="rgb(217,205,19)" fg:x="798" fg:w="1"/><text x="62.4480%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1980%" y="437" width="0.0779%" height="15" fill="rgb(242,104,7)" fg:x="798" fg:w="1"/><text x="62.4480%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.1980%" y="421" width="0.0779%" height="15" fill="rgb(209,154,48)" fg:x="798" fg:w="1"/><text x="62.4480%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.1980%" y="405" width="0.0779%" height="15" fill="rgb(219,213,46)" fg:x="798" fg:w="1"/><text x="62.4480%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.1980%" y="389" width="0.0779%" height="15" fill="rgb(229,105,38)" fg:x="798" fg:w="1"/><text x="62.4480%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.1980%" y="373" width="0.0779%" height="15" fill="rgb(205,151,5)" fg:x="798" fg:w="1"/><text x="62.4480%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1980%" y="357" width="0.0779%" height="15" fill="rgb(248,115,40)" fg:x="798" fg:w="1"/><text x="62.4480%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.2759%" y="517" width="0.1559%" height="15" fill="rgb(206,179,2)" fg:x="799" fg:w="2"/><text x="62.5259%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3539%" y="501" width="0.0779%" height="15" fill="rgb(230,103,24)" fg:x="800" fg:w="1"/><text x="62.6039%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3539%" y="485" width="0.0779%" height="15" fill="rgb(218,152,4)" fg:x="800" fg:w="1"/><text x="62.6039%" y="495.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.31%)</title><rect x="62.1980%" y="549" width="0.3118%" height="15" fill="rgb(236,161,54)" fg:x="798" fg:w="4"/><text x="62.4480%" y="559.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (3 samples, 0.23%)</title><rect x="62.2759%" y="533" width="0.2338%" height="15" fill="rgb(226,65,17)" fg:x="799" fg:w="3"/><text x="62.5259%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.4318%" y="517" width="0.0779%" height="15" fill="rgb(221,134,44)" fg:x="801" fg:w="1"/><text x="62.6818%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.4318%" y="501" width="0.0779%" height="15" fill="rgb(251,129,4)" fg:x="801" fg:w="1"/><text x="62.6818%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="62.5877%" y="517" width="0.0779%" height="15" fill="rgb(244,32,34)" fg:x="803" fg:w="1"/><text x="62.8377%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.7436%" y="469" width="0.0779%" height="15" fill="rgb(251,224,37)" fg:x="805" fg:w="1"/><text x="62.9936%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8215%" y="469" width="0.0779%" height="15" fill="rgb(248,117,31)" fg:x="806" fg:w="1"/><text x="63.0715%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8215%" y="453" width="0.0779%" height="15" fill="rgb(222,208,37)" fg:x="806" fg:w="1"/><text x="63.0715%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.8215%" y="437" width="0.0779%" height="15" fill="rgb(234,211,25)" fg:x="806" fg:w="1"/><text x="63.0715%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.8215%" y="421" width="0.0779%" height="15" fill="rgb(211,72,6)" fg:x="806" fg:w="1"/><text x="63.0715%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.8215%" y="405" width="0.0779%" height="15" fill="rgb(249,198,38)" fg:x="806" fg:w="1"/><text x="63.0715%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8215%" y="389" width="0.0779%" height="15" fill="rgb(221,86,51)" fg:x="806" fg:w="1"/><text x="63.0715%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8215%" y="373" width="0.0779%" height="15" fill="rgb(226,178,43)" fg:x="806" fg:w="1"/><text x="63.0715%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.8215%" y="357" width="0.0779%" height="15" fill="rgb(215,145,7)" fg:x="806" fg:w="1"/><text x="63.0715%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.8215%" y="341" width="0.0779%" height="15" fill="rgb(250,202,36)" fg:x="806" fg:w="1"/><text x="63.0715%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.8215%" y="325" width="0.0779%" height="15" fill="rgb(215,86,13)" fg:x="806" fg:w="1"/><text x="63.0715%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.8215%" y="309" width="0.0779%" height="15" fill="rgb(221,134,12)" fg:x="806" fg:w="1"/><text x="63.0715%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8215%" y="293" width="0.0779%" height="15" fill="rgb(213,82,10)" fg:x="806" fg:w="1"/><text x="63.0715%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="62.6656%" y="501" width="0.3897%" height="15" fill="rgb(214,142,0)" fg:x="804" fg:w="5"/><text x="62.9156%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="62.6656%" y="485" width="0.3897%" height="15" fill="rgb(205,145,9)" fg:x="804" fg:w="5"/><text x="62.9156%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.8995%" y="469" width="0.1559%" height="15" fill="rgb(244,214,8)" fg:x="807" fg:w="2"/><text x="63.1495%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.0553%" y="501" width="0.0779%" height="15" fill="rgb(224,72,51)" fg:x="809" fg:w="1"/><text x="63.3053%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="63.0553%" y="485" width="0.0779%" height="15" fill="rgb(233,137,37)" fg:x="809" fg:w="1"/><text x="63.3053%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0553%" y="469" width="0.0779%" height="15" fill="rgb(208,71,28)" fg:x="809" fg:w="1"/><text x="63.3053%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2112%" y="453" width="0.0779%" height="15" fill="rgb(226,31,7)" fg:x="811" fg:w="1"/><text x="63.4612%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="63.1333%" y="501" width="0.2338%" height="15" fill="rgb(229,62,18)" fg:x="810" fg:w="3"/><text x="63.3833%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="63.1333%" y="485" width="0.2338%" height="15" fill="rgb(226,74,28)" fg:x="810" fg:w="3"/><text x="63.3833%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.2112%" y="469" width="0.1559%" height="15" fill="rgb(214,170,18)" fg:x="811" fg:w="2"/><text x="63.4612%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2892%" y="453" width="0.0779%" height="15" fill="rgb(227,229,35)" fg:x="812" fg:w="1"/><text x="63.5392%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2892%" y="437" width="0.0779%" height="15" fill="rgb(225,181,39)" fg:x="812" fg:w="1"/><text x="63.5392%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.2892%" y="421" width="0.0779%" height="15" fill="rgb(253,124,44)" fg:x="812" fg:w="1"/><text x="63.5392%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.2892%" y="405" width="0.0779%" height="15" fill="rgb(220,75,18)" fg:x="812" fg:w="1"/><text x="63.5392%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.2892%" y="389" width="0.0779%" height="15" fill="rgb(239,175,43)" fg:x="812" fg:w="1"/><text x="63.5392%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2892%" y="373" width="0.0779%" height="15" fill="rgb(228,112,50)" fg:x="812" fg:w="1"/><text x="63.5392%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2892%" y="357" width="0.0779%" height="15" fill="rgb(232,105,36)" fg:x="812" fg:w="1"/><text x="63.5392%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.2892%" y="341" width="0.0779%" height="15" fill="rgb(227,137,47)" fg:x="812" fg:w="1"/><text x="63.5392%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.2892%" y="325" width="0.0779%" height="15" fill="rgb(217,51,9)" fg:x="812" fg:w="1"/><text x="63.5392%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.2892%" y="309" width="0.0779%" height="15" fill="rgb(245,117,0)" fg:x="812" fg:w="1"/><text x="63.5392%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.2892%" y="293" width="0.0779%" height="15" fill="rgb(252,52,30)" fg:x="812" fg:w="1"/><text x="63.5392%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.2892%" y="277" width="0.0779%" height="15" fill="rgb(227,85,33)" fg:x="812" fg:w="1"/><text x="63.5392%" y="287.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="63.3671%" y="501" width="0.0779%" height="15" fill="rgb(220,157,20)" fg:x="813" fg:w="1"/><text x="63.6171%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3671%" y="485" width="0.0779%" height="15" fill="rgb(254,14,34)" fg:x="813" fg:w="1"/><text x="63.6171%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3671%" y="469" width="0.0779%" height="15" fill="rgb(216,103,41)" fg:x="813" fg:w="1"/><text x="63.6171%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.3671%" y="453" width="0.0779%" height="15" fill="rgb(245,221,9)" fg:x="813" fg:w="1"/><text x="63.6171%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.3671%" y="437" width="0.0779%" height="15" fill="rgb(254,136,47)" fg:x="813" fg:w="1"/><text x="63.6171%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.3671%" y="421" width="0.0779%" height="15" fill="rgb(235,71,46)" fg:x="813" fg:w="1"/><text x="63.6171%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.3671%" y="405" width="0.0779%" height="15" fill="rgb(242,154,29)" fg:x="813" fg:w="1"/><text x="63.6171%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.3671%" y="389" width="0.0779%" height="15" fill="rgb(210,65,31)" fg:x="813" fg:w="1"/><text x="63.6171%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="63.4451%" y="501" width="0.0779%" height="15" fill="rgb(244,9,50)" fg:x="814" fg:w="1"/><text x="63.6951%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.6789%" y="421" width="0.0779%" height="15" fill="rgb(215,141,38)" fg:x="817" fg:w="1"/><text x="63.9289%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7568%" y="405" width="0.0779%" height="15" fill="rgb(241,129,6)" fg:x="818" fg:w="1"/><text x="64.0068%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7568%" y="389" width="0.0779%" height="15" fill="rgb(253,169,4)" fg:x="818" fg:w="1"/><text x="64.0068%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7568%" y="373" width="0.0779%" height="15" fill="rgb(237,82,36)" fg:x="818" fg:w="1"/><text x="64.0068%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7568%" y="357" width="0.0779%" height="15" fill="rgb(209,171,11)" fg:x="818" fg:w="1"/><text x="64.0068%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7568%" y="341" width="0.0779%" height="15" fill="rgb(242,19,22)" fg:x="818" fg:w="1"/><text x="64.0068%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7568%" y="325" width="0.0779%" height="15" fill="rgb(251,122,24)" fg:x="818" fg:w="1"/><text x="64.0068%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.7568%" y="309" width="0.0779%" height="15" fill="rgb(226,166,42)" fg:x="818" fg:w="1"/><text x="64.0068%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.7568%" y="293" width="0.0779%" height="15" fill="rgb(244,101,48)" fg:x="818" fg:w="1"/><text x="64.0068%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="63.8348%" y="405" width="0.1559%" height="15" fill="rgb(227,125,1)" fg:x="819" fg:w="2"/><text x="64.0848%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.9127%" y="389" width="0.0779%" height="15" fill="rgb(206,79,43)" fg:x="820" fg:w="1"/><text x="64.1627%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.9127%" y="373" width="0.0779%" height="15" fill="rgb(241,109,41)" fg:x="820" fg:w="1"/><text x="64.1627%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9127%" y="357" width="0.0779%" height="15" fill="rgb(219,73,4)" fg:x="820" fg:w="1"/><text x="64.1627%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.55%)</title><rect x="63.5230%" y="501" width="0.5456%" height="15" fill="rgb(239,25,41)" fg:x="815" fg:w="7"/><text x="63.7730%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="63.5230%" y="485" width="0.5456%" height="15" fill="rgb(208,88,46)" fg:x="815" fg:w="7"/><text x="63.7730%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="63.5230%" y="469" width="0.5456%" height="15" fill="rgb(239,184,9)" fg:x="815" fg:w="7"/><text x="63.7730%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="63.6789%" y="453" width="0.3897%" height="15" fill="rgb(223,114,13)" fg:x="817" fg:w="5"/><text x="63.9289%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="63.6789%" y="437" width="0.3897%" height="15" fill="rgb(214,28,42)" fg:x="817" fg:w="5"/><text x="63.9289%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.31%)</title><rect x="63.7568%" y="421" width="0.3118%" height="15" fill="rgb(252,32,44)" fg:x="818" fg:w="4"/><text x="64.0068%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9906%" y="405" width="0.0779%" height="15" fill="rgb(231,159,4)" fg:x="821" fg:w="1"/><text x="64.2406%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9906%" y="389" width="0.0779%" height="15" fill="rgb(210,35,26)" fg:x="821" fg:w="1"/><text x="64.2406%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.9906%" y="373" width="0.0779%" height="15" fill="rgb(208,190,37)" fg:x="821" fg:w="1"/><text x="64.2406%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9906%" y="357" width="0.0779%" height="15" fill="rgb(226,148,22)" fg:x="821" fg:w="1"/><text x="64.2406%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9906%" y="341" width="0.0779%" height="15" fill="rgb(242,153,24)" fg:x="821" fg:w="1"/><text x="64.2406%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.9906%" y="325" width="0.0779%" height="15" fill="rgb(213,133,7)" fg:x="821" fg:w="1"/><text x="64.2406%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9906%" y="309" width="0.0779%" height="15" fill="rgb(248,206,18)" fg:x="821" fg:w="1"/><text x="64.2406%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9906%" y="293" width="0.0779%" height="15" fill="rgb(233,157,4)" fg:x="821" fg:w="1"/><text x="64.2406%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.9906%" y="277" width="0.0779%" height="15" fill="rgb(249,179,32)" fg:x="821" fg:w="1"/><text x="64.2406%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.3024%" y="389" width="0.0779%" height="15" fill="rgb(248,69,35)" fg:x="825" fg:w="1"/><text x="64.5524%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.4583%" y="357" width="0.0779%" height="15" fill="rgb(249,158,38)" fg:x="827" fg:w="1"/><text x="64.7083%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4583%" y="341" width="0.0779%" height="15" fill="rgb(223,18,43)" fg:x="827" fg:w="1"/><text x="64.7083%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4583%" y="325" width="0.0779%" height="15" fill="rgb(238,42,45)" fg:x="827" fg:w="1"/><text x="64.7083%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4583%" y="309" width="0.0779%" height="15" fill="rgb(219,65,47)" fg:x="827" fg:w="1"/><text x="64.7083%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="64.0686%" y="437" width="0.5456%" height="15" fill="rgb(248,153,12)" fg:x="822" fg:w="7"/><text x="64.3186%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="64.1465%" y="421" width="0.4677%" height="15" fill="rgb(240,118,4)" fg:x="823" fg:w="6"/><text x="64.3965%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="64.3024%" y="405" width="0.3118%" height="15" fill="rgb(250,96,34)" fg:x="825" fg:w="4"/><text x="64.5524%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="64.3804%" y="389" width="0.2338%" height="15" fill="rgb(221,15,4)" fg:x="826" fg:w="3"/><text x="64.6304%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="64.3804%" y="373" width="0.2338%" height="15" fill="rgb(217,149,33)" fg:x="826" fg:w="3"/><text x="64.6304%" y="383.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="64.5362%" y="357" width="0.0779%" height="15" fill="rgb(213,58,29)" fg:x="828" fg:w="1"/><text x="64.7862%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.6142%" y="437" width="0.0779%" height="15" fill="rgb(236,218,9)" fg:x="829" fg:w="1"/><text x="64.8642%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (831 samples, 64.77%)</title><rect x="0.0000%" y="629" width="64.7701%" height="15" fill="rgb(248,40,19)" fg:x="0" fg:w="831"/><text x="0.2500%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (831 samples, 64.77%)</title><rect x="0.0000%" y="613" width="64.7701%" height="15" fill="rgb(212,17,6)" fg:x="0" fg:w="831"/><text x="0.2500%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (831 samples, 64.77%)</title><rect x="0.0000%" y="597" width="64.7701%" height="15" fill="rgb(206,212,20)" fg:x="0" fg:w="831"/><text x="0.2500%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (185 samples, 14.42%)</title><rect x="50.3507%" y="581" width="14.4193%" height="15" fill="rgb(229,80,37)" fg:x="646" fg:w="185"/><text x="50.6007%" y="591.50">engine::session::Sessi..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (184 samples, 14.34%)</title><rect x="50.4287%" y="565" width="14.3414%" height="15" fill="rgb(253,8,37)" fg:x="647" fg:w="184"/><text x="50.6787%" y="575.50">engine::session::Sessi..</text></g><g><title>kernel::model::EntityPtrResolver::world (29 samples, 2.26%)</title><rect x="62.5097%" y="549" width="2.2603%" height="15" fill="rgb(215,16,43)" fg:x="802" fg:w="29"/><text x="62.7597%" y="559.50">k..</text></g><g><title>engine::session::Session::load_entity (28 samples, 2.18%)</title><rect x="62.5877%" y="533" width="2.1824%" height="15" fill="rgb(236,219,16)" fg:x="803" fg:w="28"/><text x="62.8377%" y="543.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.10%)</title><rect x="62.6656%" y="517" width="2.1044%" height="15" fill="rgb(251,0,3)" fg:x="804" fg:w="27"/><text x="62.9156%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.70%)</title><rect x="64.0686%" y="501" width="0.7015%" height="15" fill="rgb(207,133,37)" fg:x="822" fg:w="9"/><text x="64.3186%" y="511.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.70%)</title><rect x="64.0686%" y="485" width="0.7015%" height="15" fill="rgb(250,143,20)" fg:x="822" fg:w="9"/><text x="64.3186%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.70%)</title><rect x="64.0686%" y="469" width="0.7015%" height="15" fill="rgb(242,19,50)" fg:x="822" fg:w="9"/><text x="64.3186%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.70%)</title><rect x="64.0686%" y="453" width="0.7015%" height="15" fill="rgb(206,124,43)" fg:x="822" fg:w="9"/><text x="64.3186%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6921%" y="437" width="0.0779%" height="15" fill="rgb(229,4,38)" fg:x="830" fg:w="1"/><text x="64.9421%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6921%" y="421" width="0.0779%" height="15" fill="rgb(247,220,45)" fg:x="830" fg:w="1"/><text x="64.9421%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.6921%" y="405" width="0.0779%" height="15" fill="rgb(247,195,0)" fg:x="830" fg:w="1"/><text x="64.9421%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.0039%" y="501" width="0.1559%" height="15" fill="rgb(252,12,19)" fg:x="834" fg:w="2"/><text x="65.2539%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.47%)</title><rect x="64.9260%" y="565" width="0.4677%" height="15" fill="rgb(222,49,50)" fg:x="833" fg:w="6"/><text x="65.1760%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.39%)</title><rect x="65.0039%" y="549" width="0.3897%" height="15" fill="rgb(209,157,28)" fg:x="834" fg:w="5"/><text x="65.2539%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.39%)</title><rect x="65.0039%" y="533" width="0.3897%" height="15" fill="rgb(238,174,24)" fg:x="834" fg:w="5"/><text x="65.2539%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.39%)</title><rect x="65.0039%" y="517" width="0.3897%" height="15" fill="rgb(224,17,28)" fg:x="834" fg:w="5"/><text x="65.2539%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.23%)</title><rect x="65.1598%" y="501" width="0.2338%" height="15" fill="rgb(249,7,29)" fg:x="836" fg:w="3"/><text x="65.4098%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="65.1598%" y="485" width="0.2338%" height="15" fill="rgb(243,178,4)" fg:x="836" fg:w="3"/><text x="65.4098%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5495%" y="485" width="0.0779%" height="15" fill="rgb(246,138,35)" fg:x="841" fg:w="1"/><text x="65.7995%" y="495.50"></text></g><g><title>__libc_free (5 samples, 0.39%)</title><rect x="65.7833%" y="453" width="0.3897%" height="15" fill="rgb(251,85,18)" fg:x="844" fg:w="5"/><text x="66.0333%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.2510%" y="437" width="0.1559%" height="15" fill="rgb(254,55,9)" fg:x="850" fg:w="2"/><text x="66.5010%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.4069%" y="421" width="0.0779%" height="15" fill="rgb(248,4,50)" fg:x="852" fg:w="1"/><text x="66.6569%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.4069%" y="405" width="0.0779%" height="15" fill="rgb(215,208,14)" fg:x="852" fg:w="1"/><text x="66.6569%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.17%)</title><rect x="65.4716%" y="501" width="1.1691%" height="15" fill="rgb(218,37,18)" fg:x="840" fg:w="15"/><text x="65.7216%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (13 samples, 1.01%)</title><rect x="65.6274%" y="485" width="1.0133%" height="15" fill="rgb(206,104,13)" fg:x="842" fg:w="13"/><text x="65.8774%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.01%)</title><rect x="65.6274%" y="469" width="1.0133%" height="15" fill="rgb(248,94,22)" fg:x="842" fg:w="13"/><text x="65.8774%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="66.1730%" y="453" width="0.4677%" height="15" fill="rgb(235,42,46)" fg:x="849" fg:w="6"/><text x="66.4230%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="66.4069%" y="437" width="0.2338%" height="15" fill="rgb(220,228,48)" fg:x="852" fg:w="3"/><text x="66.6569%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="66.4848%" y="421" width="0.1559%" height="15" fill="rgb(216,58,12)" fg:x="853" fg:w="2"/><text x="66.7348%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="66.4848%" y="405" width="0.1559%" height="15" fill="rgb(223,97,52)" fg:x="853" fg:w="2"/><text x="66.7348%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6407%" y="501" width="0.0779%" height="15" fill="rgb(208,159,17)" fg:x="855" fg:w="1"/><text x="66.8907%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.9525%" y="453" width="0.0779%" height="15" fill="rgb(215,172,9)" fg:x="859" fg:w="1"/><text x="67.2025%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.0304%" y="453" width="0.0779%" height="15" fill="rgb(252,175,30)" fg:x="860" fg:w="1"/><text x="67.2804%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.1083%" y="437" width="0.1559%" height="15" fill="rgb(209,159,10)" fg:x="861" fg:w="2"/><text x="67.3583%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2642%" y="421" width="0.0779%" height="15" fill="rgb(229,73,51)" fg:x="863" fg:w="1"/><text x="67.5142%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 1.95%)</title><rect x="65.4716%" y="517" width="1.9486%" height="15" fill="rgb(208,212,43)" fg:x="840" fg:w="25"/><text x="65.7216%" y="527.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.70%)</title><rect x="66.7186%" y="501" width="0.7015%" height="15" fill="rgb(254,123,53)" fg:x="856" fg:w="9"/><text x="66.9686%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="66.8745%" y="485" width="0.5456%" height="15" fill="rgb(254,128,49)" fg:x="858" fg:w="7"/><text x="67.1245%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="66.8745%" y="469" width="0.5456%" height="15" fill="rgb(246,16,16)" fg:x="858" fg:w="7"/><text x="67.1245%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="67.1083%" y="453" width="0.3118%" height="15" fill="rgb(209,200,1)" fg:x="861" fg:w="4"/><text x="67.3583%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.2642%" y="437" width="0.1559%" height="15" fill="rgb(235,9,3)" fg:x="863" fg:w="2"/><text x="67.5142%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.3422%" y="421" width="0.0779%" height="15" fill="rgb(233,121,54)" fg:x="864" fg:w="1"/><text x="67.5922%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.10%)</title><rect x="65.3936%" y="549" width="2.1044%" height="15" fill="rgb(236,80,25)" fg:x="839" fg:w="27"/><text x="65.6436%" y="559.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (26 samples, 2.03%)</title><rect x="65.4716%" y="533" width="2.0265%" height="15" fill="rgb(220,44,24)" fg:x="840" fg:w="26"/><text x="65.7216%" y="543.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4201%" y="517" width="0.0779%" height="15" fill="rgb(236,225,16)" fg:x="865" fg:w="1"/><text x="67.6701%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (28 samples, 2.18%)</title><rect x="65.3936%" y="565" width="2.1824%" height="15" fill="rgb(237,140,0)" fg:x="839" fg:w="28"/><text x="65.6436%" y="575.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4981%" y="549" width="0.0779%" height="15" fill="rgb(243,225,53)" fg:x="866" fg:w="1"/><text x="67.7481%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 2.88%)</title><rect x="64.8480%" y="581" width="2.8839%" height="15" fill="rgb(240,140,30)" fg:x="832" fg:w="37"/><text x="65.0980%" y="591.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::Captured&gt; (2 samples, 0.16%)</title><rect x="67.5760%" y="565" width="0.1559%" height="15" fill="rgb(217,51,16)" fg:x="867" fg:w="2"/><text x="67.8260%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6539%" y="549" width="0.0779%" height="15" fill="rgb(245,75,50)" fg:x="868" fg:w="1"/><text x="67.9039%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="67.8098%" y="533" width="0.0779%" height="15" fill="rgb(208,174,22)" fg:x="870" fg:w="1"/><text x="68.0598%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8098%" y="517" width="0.0779%" height="15" fill="rgb(219,98,50)" fg:x="870" fg:w="1"/><text x="68.0598%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (2 samples, 0.16%)</title><rect x="67.8878%" y="533" width="0.1559%" height="15" fill="rgb(243,138,3)" fg:x="871" fg:w="2"/><text x="68.1378%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="68.0436%" y="453" width="0.1559%" height="15" fill="rgb(243,132,26)" fg:x="873" fg:w="2"/><text x="68.2936%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="68.1995%" y="453" width="0.0779%" height="15" fill="rgb(250,201,8)" fg:x="875" fg:w="1"/><text x="68.4495%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.1995%" y="437" width="0.0779%" height="15" fill="rgb(213,91,26)" fg:x="875" fg:w="1"/><text x="68.4495%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.1995%" y="421" width="0.0779%" height="15" fill="rgb(229,117,1)" fg:x="875" fg:w="1"/><text x="68.4495%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1995%" y="405" width="0.0779%" height="15" fill="rgb(229,24,6)" fg:x="875" fg:w="1"/><text x="68.4495%" y="415.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Plugin&gt;::schema (4 samples, 0.31%)</title><rect x="68.0436%" y="485" width="0.3118%" height="15" fill="rgb(206,69,11)" fg:x="873" fg:w="4"/><text x="68.2936%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (4 samples, 0.31%)</title><rect x="68.0436%" y="469" width="0.3118%" height="15" fill="rgb(234,111,34)" fg:x="873" fg:w="4"/><text x="68.2936%" y="479.50"></text></g><g><title>kernel::plugins::ActionSchema::new (1 samples, 0.08%)</title><rect x="68.2775%" y="453" width="0.0779%" height="15" fill="rgb(213,187,51)" fg:x="876" fg:w="1"/><text x="68.5275%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::TakeOutAction as kernel::plugins::HasActionSchema&gt;::action_schema (1 samples, 0.08%)</title><rect x="68.3554%" y="453" width="0.0779%" height="15" fill="rgb(207,45,11)" fg:x="877" fg:w="1"/><text x="68.6054%" y="463.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="68.3554%" y="437" width="0.0779%" height="15" fill="rgb(225,151,47)" fg:x="877" fg:w="1"/><text x="68.6054%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.3554%" y="421" width="0.0779%" height="15" fill="rgb(211,226,5)" fg:x="877" fg:w="1"/><text x="68.6054%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.3554%" y="405" width="0.0779%" height="15" fill="rgb(214,83,52)" fg:x="877" fg:w="1"/><text x="68.6054%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3554%" y="389" width="0.0779%" height="15" fill="rgb(229,49,53)" fg:x="877" fg:w="1"/><text x="68.6054%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.4334%" y="453" width="0.0779%" height="15" fill="rgb(246,8,28)" fg:x="878" fg:w="1"/><text x="68.6834%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.4334%" y="437" width="0.0779%" height="15" fill="rgb(207,28,41)" fg:x="878" fg:w="1"/><text x="68.6834%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.4334%" y="421" width="0.0779%" height="15" fill="rgb(254,22,25)" fg:x="878" fg:w="1"/><text x="68.6834%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.23%)</title><rect x="68.3554%" y="485" width="0.2338%" height="15" fill="rgb(209,120,42)" fg:x="877" fg:w="3"/><text x="68.6054%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.23%)</title><rect x="68.3554%" y="469" width="0.2338%" height="15" fill="rgb(216,194,18)" fg:x="877" fg:w="3"/><text x="68.6054%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="68.5113%" y="453" width="0.0779%" height="15" fill="rgb(213,70,17)" fg:x="879" fg:w="1"/><text x="68.7613%" y="463.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="68.5892%" y="485" width="0.0779%" height="15" fill="rgb(228,66,19)" fg:x="880" fg:w="1"/><text x="68.8392%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="68.5892%" y="469" width="0.0779%" height="15" fill="rgb(236,221,54)" fg:x="880" fg:w="1"/><text x="68.8392%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="68.5892%" y="453" width="0.0779%" height="15" fill="rgb(207,175,15)" fg:x="880" fg:w="1"/><text x="68.8392%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.5892%" y="437" width="0.0779%" height="15" fill="rgb(234,76,8)" fg:x="880" fg:w="1"/><text x="68.8392%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.5892%" y="421" width="0.0779%" height="15" fill="rgb(243,106,0)" fg:x="880" fg:w="1"/><text x="68.8392%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.6672%" y="453" width="0.0779%" height="15" fill="rgb(208,48,19)" fg:x="881" fg:w="1"/><text x="68.9172%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.6672%" y="437" width="0.0779%" height="15" fill="rgb(251,50,29)" fg:x="881" fg:w="1"/><text x="68.9172%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6672%" y="421" width="0.0779%" height="15" fill="rgb(222,31,49)" fg:x="881" fg:w="1"/><text x="68.9172%" y="431.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="68.6672%" y="485" width="0.1559%" height="15" fill="rgb(232,33,18)" fg:x="881" fg:w="2"/><text x="68.9172%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="68.6672%" y="469" width="0.1559%" height="15" fill="rgb(209,1,44)" fg:x="881" fg:w="2"/><text x="68.9172%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="68.7451%" y="453" width="0.0779%" height="15" fill="rgb(211,7,1)" fg:x="882" fg:w="1"/><text x="68.9951%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.7451%" y="437" width="0.0779%" height="15" fill="rgb(224,111,27)" fg:x="882" fg:w="1"/><text x="68.9951%" y="447.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="68.7451%" y="421" width="0.0779%" height="15" fill="rgb(252,195,39)" fg:x="882" fg:w="1"/><text x="68.9951%" y="431.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="68.7451%" y="405" width="0.0779%" height="15" fill="rgb(237,198,5)" fg:x="882" fg:w="1"/><text x="68.9951%" y="415.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="68.8231%" y="485" width="0.0779%" height="15" fill="rgb(232,148,1)" fg:x="883" fg:w="1"/><text x="69.0731%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="68.8231%" y="469" width="0.0779%" height="15" fill="rgb(249,41,3)" fg:x="883" fg:w="1"/><text x="69.0731%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="68.8231%" y="453" width="0.0779%" height="15" fill="rgb(215,14,33)" fg:x="883" fg:w="1"/><text x="69.0731%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.8231%" y="437" width="0.0779%" height="15" fill="rgb(209,146,24)" fg:x="883" fg:w="1"/><text x="69.0731%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.8231%" y="421" width="0.0779%" height="15" fill="rgb(219,51,47)" fg:x="883" fg:w="1"/><text x="69.0731%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.8231%" y="405" width="0.0779%" height="15" fill="rgb(234,217,40)" fg:x="883" fg:w="1"/><text x="69.0731%" y="415.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Plugin&gt;::schema (1 samples, 0.08%)</title><rect x="68.9010%" y="485" width="0.0779%" height="15" fill="rgb(228,34,26)" fg:x="884" fg:w="1"/><text x="69.1510%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (1 samples, 0.08%)</title><rect x="68.9010%" y="469" width="0.0779%" height="15" fill="rgb(224,50,29)" fg:x="884" fg:w="1"/><text x="69.1510%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.9010%" y="453" width="0.0779%" height="15" fill="rgb(205,79,51)" fg:x="884" fg:w="1"/><text x="69.1510%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.9010%" y="437" width="0.0779%" height="15" fill="rgb(218,136,28)" fg:x="884" fg:w="1"/><text x="69.1510%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.9010%" y="421" width="0.0779%" height="15" fill="rgb(220,150,10)" fg:x="884" fg:w="1"/><text x="69.1510%" y="431.50"></text></g><g><title>kernel::plugins::ActionSchema::arg (1 samples, 0.08%)</title><rect x="69.0569%" y="453" width="0.0779%" height="15" fill="rgb(242,158,47)" fg:x="886" fg:w="1"/><text x="69.3069%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="69.0569%" y="437" width="0.0779%" height="15" fill="rgb(209,68,0)" fg:x="886" fg:w="1"/><text x="69.3069%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.0569%" y="421" width="0.0779%" height="15" fill="rgb(208,13,41)" fg:x="886" fg:w="1"/><text x="69.3069%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0569%" y="405" width="0.0779%" height="15" fill="rgb(226,201,7)" fg:x="886" fg:w="1"/><text x="69.3069%" y="415.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Plugin&gt;::schema (3 samples, 0.23%)</title><rect x="68.9790%" y="485" width="0.2338%" height="15" fill="rgb(236,103,26)" fg:x="885" fg:w="3"/><text x="69.2290%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (3 samples, 0.23%)</title><rect x="68.9790%" y="469" width="0.2338%" height="15" fill="rgb(243,162,8)" fg:x="885" fg:w="3"/><text x="69.2290%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="69.1348%" y="453" width="0.0779%" height="15" fill="rgb(237,225,11)" fg:x="887" fg:w="1"/><text x="69.3848%" y="463.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::schema (2 samples, 0.16%)</title><rect x="69.2128%" y="485" width="0.1559%" height="15" fill="rgb(247,186,32)" fg:x="888" fg:w="2"/><text x="69.4628%" y="495.50"></text></g><g><title>kernel::plugins::Schema::action (2 samples, 0.16%)</title><rect x="69.2128%" y="469" width="0.1559%" height="15" fill="rgb(215,26,28)" fg:x="888" fg:w="2"/><text x="69.4628%" y="479.50"></text></g><g><title>replies::identifier_to_key (1 samples, 0.08%)</title><rect x="69.2907%" y="453" width="0.0779%" height="15" fill="rgb(208,121,6)" fg:x="889" fg:w="1"/><text x="69.5407%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="69.2907%" y="437" width="0.0779%" height="15" fill="rgb(225,91,3)" fg:x="889" fg:w="1"/><text x="69.5407%" y="447.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.2907%" y="421" width="0.0779%" height="15" fill="rgb(246,119,36)" fg:x="889" fg:w="1"/><text x="69.5407%" y="431.50"></text></g><g><title>&lt;core::char::CaseMappingIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.2907%" y="405" width="0.0779%" height="15" fill="rgb(254,173,2)" fg:x="889" fg:w="1"/><text x="69.5407%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 1.40%)</title><rect x="68.0436%" y="501" width="1.4030%" height="15" fill="rgb(209,87,54)" fg:x="873" fg:w="18"/><text x="68.2936%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3687%" y="485" width="0.0779%" height="15" fill="rgb(223,216,20)" fg:x="890" fg:w="1"/><text x="69.6187%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.5246%" y="437" width="0.0779%" height="15" fill="rgb(220,31,8)" fg:x="892" fg:w="1"/><text x="69.7746%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.5246%" y="421" width="0.0779%" height="15" fill="rgb(220,185,15)" fg:x="892" fg:w="1"/><text x="69.7746%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="69.5246%" y="405" width="0.0779%" height="15" fill="rgb(247,190,50)" fg:x="892" fg:w="1"/><text x="69.7746%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="69.5246%" y="389" width="0.0779%" height="15" fill="rgb(239,173,47)" fg:x="892" fg:w="1"/><text x="69.7746%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="69.5246%" y="373" width="0.0779%" height="15" fill="rgb(218,190,42)" fg:x="892" fg:w="1"/><text x="69.7746%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="69.5246%" y="357" width="0.0779%" height="15" fill="rgb(251,207,16)" fg:x="892" fg:w="1"/><text x="69.7746%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.5246%" y="341" width="0.0779%" height="15" fill="rgb(222,199,47)" fg:x="892" fg:w="1"/><text x="69.7746%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.5246%" y="325" width="0.0779%" height="15" fill="rgb(245,190,7)" fg:x="892" fg:w="1"/><text x="69.7746%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.5246%" y="309" width="0.0779%" height="15" fill="rgb(239,85,38)" fg:x="892" fg:w="1"/><text x="69.7746%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="69.5246%" y="293" width="0.0779%" height="15" fill="rgb(229,69,51)" fg:x="892" fg:w="1"/><text x="69.7746%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.5246%" y="277" width="0.0779%" height="15" fill="rgb(231,104,51)" fg:x="892" fg:w="1"/><text x="69.7746%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="69.5246%" y="261" width="0.0779%" height="15" fill="rgb(235,49,4)" fg:x="892" fg:w="1"/><text x="69.7746%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="69.5246%" y="245" width="0.0779%" height="15" fill="rgb(246,166,20)" fg:x="892" fg:w="1"/><text x="69.7746%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="69.5246%" y="229" width="0.0779%" height="15" fill="rgb(230,119,37)" fg:x="892" fg:w="1"/><text x="69.7746%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="69.5246%" y="485" width="0.1559%" height="15" fill="rgb(234,77,34)" fg:x="892" fg:w="2"/><text x="69.7746%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="69.5246%" y="469" width="0.1559%" height="15" fill="rgb(211,222,33)" fg:x="892" fg:w="2"/><text x="69.7746%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="69.5246%" y="453" width="0.1559%" height="15" fill="rgb(226,45,42)" fg:x="892" fg:w="2"/><text x="69.7746%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.6025%" y="437" width="0.0779%" height="15" fill="rgb(215,174,28)" fg:x="893" fg:w="1"/><text x="69.8525%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.6025%" y="421" width="0.0779%" height="15" fill="rgb(254,173,49)" fg:x="893" fg:w="1"/><text x="69.8525%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.6025%" y="405" width="0.0779%" height="15" fill="rgb(229,191,6)" fg:x="893" fg:w="1"/><text x="69.8525%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="69.6025%" y="389" width="0.0779%" height="15" fill="rgb(212,145,22)" fg:x="893" fg:w="1"/><text x="69.8525%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="69.6025%" y="373" width="0.0779%" height="15" fill="rgb(226,6,51)" fg:x="893" fg:w="1"/><text x="69.8525%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="69.6025%" y="357" width="0.0779%" height="15" fill="rgb(227,128,8)" fg:x="893" fg:w="1"/><text x="69.8525%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="69.6025%" y="341" width="0.0779%" height="15" fill="rgb(205,24,10)" fg:x="893" fg:w="1"/><text x="69.8525%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.6025%" y="325" width="0.0779%" height="15" fill="rgb(217,147,27)" fg:x="893" fg:w="1"/><text x="69.8525%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.6025%" y="309" width="0.0779%" height="15" fill="rgb(250,82,42)" fg:x="893" fg:w="1"/><text x="69.8525%" y="319.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.47%)</title><rect x="69.4466%" y="501" width="0.4677%" height="15" fill="rgb(248,93,17)" fg:x="891" fg:w="6"/><text x="69.6966%" y="511.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.23%)</title><rect x="69.6804%" y="485" width="0.2338%" height="15" fill="rgb(254,212,40)" fg:x="894" fg:w="3"/><text x="69.9304%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (3 samples, 0.23%)</title><rect x="69.6804%" y="469" width="0.2338%" height="15" fill="rgb(229,209,2)" fg:x="894" fg:w="3"/><text x="69.9304%" y="479.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.23%)</title><rect x="69.6804%" y="453" width="0.2338%" height="15" fill="rgb(211,50,43)" fg:x="894" fg:w="3"/><text x="69.9304%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (3 samples, 0.23%)</title><rect x="69.6804%" y="437" width="0.2338%" height="15" fill="rgb(245,196,29)" fg:x="894" fg:w="3"/><text x="69.9304%" y="447.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.23%)</title><rect x="69.6804%" y="421" width="0.2338%" height="15" fill="rgb(216,132,13)" fg:x="894" fg:w="3"/><text x="69.9304%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.23%)</title><rect x="69.6804%" y="405" width="0.2338%" height="15" fill="rgb(251,108,21)" fg:x="894" fg:w="3"/><text x="69.9304%" y="415.50"></text></g><g><title>statx (3 samples, 0.23%)</title><rect x="69.6804%" y="389" width="0.2338%" height="15" fill="rgb(229,174,54)" fg:x="894" fg:w="3"/><text x="69.9304%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9143%" y="453" width="0.0779%" height="15" fill="rgb(211,175,47)" fg:x="897" fg:w="1"/><text x="70.1643%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9143%" y="437" width="0.0779%" height="15" fill="rgb(234,5,37)" fg:x="897" fg:w="1"/><text x="70.1643%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.9143%" y="421" width="0.0779%" height="15" fill="rgb(244,150,43)" fg:x="897" fg:w="1"/><text x="70.1643%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.9143%" y="405" width="0.0779%" height="15" fill="rgb(242,172,38)" fg:x="897" fg:w="1"/><text x="70.1643%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.9143%" y="389" width="0.0779%" height="15" fill="rgb(205,27,8)" fg:x="897" fg:w="1"/><text x="70.1643%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9143%" y="373" width="0.0779%" height="15" fill="rgb(217,57,3)" fg:x="897" fg:w="1"/><text x="70.1643%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9143%" y="357" width="0.0779%" height="15" fill="rgb(242,21,38)" fg:x="897" fg:w="1"/><text x="70.1643%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.9143%" y="341" width="0.0779%" height="15" fill="rgb(209,64,43)" fg:x="897" fg:w="1"/><text x="70.1643%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.9143%" y="325" width="0.0779%" height="15" fill="rgb(222,2,46)" fg:x="897" fg:w="1"/><text x="70.1643%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.9143%" y="309" width="0.0779%" height="15" fill="rgb(218,19,44)" fg:x="897" fg:w="1"/><text x="70.1643%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.9143%" y="293" width="0.0779%" height="15" fill="rgb(240,203,42)" fg:x="897" fg:w="1"/><text x="70.1643%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9143%" y="277" width="0.0779%" height="15" fill="rgb(229,23,45)" fg:x="897" fg:w="1"/><text x="70.1643%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3819%" y="261" width="0.0779%" height="15" fill="rgb(205,228,51)" fg:x="903" fg:w="1"/><text x="70.6319%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="70.2260%" y="437" width="0.3118%" height="15" fill="rgb(239,36,20)" fg:x="901" fg:w="4"/><text x="70.4760%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="70.2260%" y="421" width="0.3118%" height="15" fill="rgb(248,172,27)" fg:x="901" fg:w="4"/><text x="70.4760%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.31%)</title><rect x="70.2260%" y="405" width="0.3118%" height="15" fill="rgb(244,55,32)" fg:x="901" fg:w="4"/><text x="70.4760%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.31%)</title><rect x="70.2260%" y="389" width="0.3118%" height="15" fill="rgb(215,97,16)" fg:x="901" fg:w="4"/><text x="70.4760%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.31%)</title><rect x="70.2260%" y="373" width="0.3118%" height="15" fill="rgb(224,80,29)" fg:x="901" fg:w="4"/><text x="70.4760%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.31%)</title><rect x="70.2260%" y="357" width="0.3118%" height="15" fill="rgb(216,93,47)" fg:x="901" fg:w="4"/><text x="70.4760%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.31%)</title><rect x="70.2260%" y="341" width="0.3118%" height="15" fill="rgb(238,159,10)" fg:x="901" fg:w="4"/><text x="70.4760%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.31%)</title><rect x="70.2260%" y="325" width="0.3118%" height="15" fill="rgb(223,98,29)" fg:x="901" fg:w="4"/><text x="70.4760%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.31%)</title><rect x="70.2260%" y="309" width="0.3118%" height="15" fill="rgb(210,176,23)" fg:x="901" fg:w="4"/><text x="70.4760%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.31%)</title><rect x="70.2260%" y="293" width="0.3118%" height="15" fill="rgb(242,162,27)" fg:x="901" fg:w="4"/><text x="70.4760%" y="303.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.31%)</title><rect x="70.2260%" y="277" width="0.3118%" height="15" fill="rgb(245,109,32)" fg:x="901" fg:w="4"/><text x="70.4760%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="70.4599%" y="261" width="0.0779%" height="15" fill="rgb(248,87,8)" fg:x="904" fg:w="1"/><text x="70.7099%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="70.4599%" y="245" width="0.0779%" height="15" fill="rgb(250,160,50)" fg:x="904" fg:w="1"/><text x="70.7099%" y="255.50"></text></g><g><title>plugins_rune::runner::SharedRunners::initialize (10 samples, 0.78%)</title><rect x="69.9143%" y="485" width="0.7794%" height="15" fill="rgb(246,165,25)" fg:x="897" fg:w="10"/><text x="70.1643%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.78%)</title><rect x="69.9143%" y="469" width="0.7794%" height="15" fill="rgb(249,219,3)" fg:x="897" fg:w="10"/><text x="70.1643%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.70%)</title><rect x="69.9922%" y="453" width="0.7015%" height="15" fill="rgb(226,66,5)" fg:x="898" fg:w="9"/><text x="70.2422%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.5378%" y="437" width="0.1559%" height="15" fill="rgb(250,220,43)" fg:x="905" fg:w="2"/><text x="70.7878%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6937%" y="437" width="0.0779%" height="15" fill="rgb(225,111,31)" fg:x="907" fg:w="1"/><text x="70.9437%" y="447.50"></text></g><g><title>glob::is_dir (5 samples, 0.39%)</title><rect x="70.7716%" y="437" width="0.3897%" height="15" fill="rgb(248,106,18)" fg:x="908" fg:w="5"/><text x="71.0216%" y="447.50"></text></g><g><title>std::sys::unix::fs::stat (5 samples, 0.39%)</title><rect x="70.7716%" y="421" width="0.3897%" height="15" fill="rgb(220,226,45)" fg:x="908" fg:w="5"/><text x="71.0216%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (5 samples, 0.39%)</title><rect x="70.7716%" y="405" width="0.3897%" height="15" fill="rgb(208,58,53)" fg:x="908" fg:w="5"/><text x="71.0216%" y="415.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (5 samples, 0.39%)</title><rect x="70.7716%" y="389" width="0.3897%" height="15" fill="rgb(209,133,1)" fg:x="908" fg:w="5"/><text x="71.0216%" y="399.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (5 samples, 0.39%)</title><rect x="70.7716%" y="373" width="0.3897%" height="15" fill="rgb(228,216,27)" fg:x="908" fg:w="5"/><text x="71.0216%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 0.39%)</title><rect x="70.7716%" y="357" width="0.3897%" height="15" fill="rgb(238,155,2)" fg:x="908" fg:w="5"/><text x="71.0216%" y="367.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.39%)</title><rect x="70.7716%" y="341" width="0.3897%" height="15" fill="rgb(244,99,37)" fg:x="908" fg:w="5"/><text x="71.0216%" y="351.50"></text></g><g><title>statx (5 samples, 0.39%)</title><rect x="70.7716%" y="325" width="0.3897%" height="15" fill="rgb(254,32,3)" fg:x="908" fg:w="5"/><text x="71.0216%" y="335.50"></text></g><g><title>&lt;glob::Paths as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.55%)</title><rect x="70.6937%" y="469" width="0.5456%" height="15" fill="rgb(234,46,50)" fg:x="907" fg:w="7"/><text x="70.9437%" y="479.50"></text></g><g><title>glob::fill_todo (7 samples, 0.55%)</title><rect x="70.6937%" y="453" width="0.5456%" height="15" fill="rgb(232,118,51)" fg:x="907" fg:w="7"/><text x="70.9437%" y="463.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="71.1613%" y="437" width="0.0779%" height="15" fill="rgb(207,24,32)" fg:x="913" fg:w="1"/><text x="71.4113%" y="447.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="71.1613%" y="421" width="0.0779%" height="15" fill="rgb(208,107,43)" fg:x="913" fg:w="1"/><text x="71.4113%" y="431.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="71.1613%" y="405" width="0.0779%" height="15" fill="rgb(231,28,9)" fg:x="913" fg:w="1"/><text x="71.4113%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat::{{closure}} (1 samples, 0.08%)</title><rect x="71.1613%" y="389" width="0.0779%" height="15" fill="rgb(241,204,15)" fg:x="913" fg:w="1"/><text x="71.4113%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="71.1613%" y="373" width="0.0779%" height="15" fill="rgb(214,54,15)" fg:x="913" fg:w="1"/><text x="71.4113%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="71.1613%" y="357" width="0.0779%" height="15" fill="rgb(230,12,28)" fg:x="913" fg:w="1"/><text x="71.4113%" y="367.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="71.1613%" y="341" width="0.0779%" height="15" fill="rgb(221,171,5)" fg:x="913" fg:w="1"/><text x="71.4113%" y="351.50"></text></g><g><title>&lt;std::path::PathBuf as core::iter::traits::collect::FromIterator&lt;P&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.2393%" y="437" width="0.0779%" height="15" fill="rgb(207,72,25)" fg:x="914" fg:w="1"/><text x="71.4893%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="71.2393%" y="421" width="0.0779%" height="15" fill="rgb(249,79,37)" fg:x="914" fg:w="1"/><text x="71.4893%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="71.2393%" y="405" width="0.0779%" height="15" fill="rgb(209,98,49)" fg:x="914" fg:w="1"/><text x="71.4893%" y="415.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="71.2393%" y="389" width="0.0779%" height="15" fill="rgb(221,62,13)" fg:x="914" fg:w="1"/><text x="71.4893%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="71.2393%" y="373" width="0.0779%" height="15" fill="rgb(223,39,6)" fg:x="914" fg:w="1"/><text x="71.4893%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="71.2393%" y="357" width="0.0779%" height="15" fill="rgb(246,163,20)" fg:x="914" fg:w="1"/><text x="71.4893%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="71.2393%" y="341" width="0.0779%" height="15" fill="rgb(211,111,29)" fg:x="914" fg:w="1"/><text x="71.4893%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.2393%" y="325" width="0.0779%" height="15" fill="rgb(243,118,5)" fg:x="914" fg:w="1"/><text x="71.4893%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="71.2393%" y="309" width="0.0779%" height="15" fill="rgb(240,144,52)" fg:x="914" fg:w="1"/><text x="71.4893%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.2393%" y="293" width="0.0779%" height="15" fill="rgb(244,158,36)" fg:x="914" fg:w="1"/><text x="71.4893%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="71.2393%" y="277" width="0.0779%" height="15" fill="rgb(241,109,37)" fg:x="914" fg:w="1"/><text x="71.4893%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.08%)</title><rect x="71.2393%" y="261" width="0.0779%" height="15" fill="rgb(213,95,32)" fg:x="914" fg:w="1"/><text x="71.4893%" y="271.50"></text></g><g><title>glob::Pattern::new (1 samples, 0.08%)</title><rect x="71.3172%" y="437" width="0.0779%" height="15" fill="rgb(252,193,9)" fg:x="915" fg:w="1"/><text x="71.5672%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.3172%" y="421" width="0.0779%" height="15" fill="rgb(225,213,21)" fg:x="915" fg:w="1"/><text x="71.5672%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.3172%" y="405" width="0.0779%" height="15" fill="rgb(220,172,46)" fg:x="915" fg:w="1"/><text x="71.5672%" y="415.50"></text></g><g><title>&lt;plugins_rune::RunePlugin as kernel::plugins::Plugin&gt;::initialize (20 samples, 1.56%)</title><rect x="69.9143%" y="501" width="1.5588%" height="15" fill="rgb(235,75,41)" fg:x="897" fg:w="20"/><text x="70.1643%" y="511.50"></text></g><g><title>plugins_rune::sources::load_directory_sources (10 samples, 0.78%)</title><rect x="70.6937%" y="485" width="0.7794%" height="15" fill="rgb(213,86,9)" fg:x="907" fg:w="10"/><text x="70.9437%" y="495.50"></text></g><g><title>glob::glob (3 samples, 0.23%)</title><rect x="71.2393%" y="469" width="0.2338%" height="15" fill="rgb(238,127,51)" fg:x="914" fg:w="3"/><text x="71.4893%" y="479.50"></text></g><g><title>glob::glob_with (3 samples, 0.23%)</title><rect x="71.2393%" y="453" width="0.2338%" height="15" fill="rgb(215,2,54)" fg:x="914" fg:w="3"/><text x="71.4893%" y="463.50"></text></g><g><title>std::ffi::os_str::&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (1 samples, 0.08%)</title><rect x="71.3952%" y="437" width="0.0779%" height="15" fill="rgb(245,80,6)" fg:x="916" fg:w="1"/><text x="71.6452%" y="447.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.08%)</title><rect x="71.3952%" y="421" width="0.0779%" height="15" fill="rgb(233,106,42)" fg:x="916" fg:w="1"/><text x="71.6452%" y="431.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.08%)</title><rect x="71.3952%" y="405" width="0.0779%" height="15" fill="rgb(244,86,38)" fg:x="916" fg:w="1"/><text x="71.6452%" y="415.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.08%)</title><rect x="71.3952%" y="389" width="0.0779%" height="15" fill="rgb(242,167,7)" fg:x="916" fg:w="1"/><text x="71.6452%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::plugins::Schema)&gt; (5 samples, 0.39%)</title><rect x="71.4731%" y="501" width="0.3897%" height="15" fill="rgb(218,216,3)" fg:x="917" fg:w="5"/><text x="71.7231%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::plugins::ArgSchema&gt;&gt; (3 samples, 0.23%)</title><rect x="71.6290%" y="485" width="0.2338%" height="15" fill="rgb(206,136,36)" fg:x="919" fg:w="3"/><text x="71.8790%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7849%" y="469" width="0.0779%" height="15" fill="rgb(206,206,15)" fg:x="921" fg:w="1"/><text x="72.0349%" y="479.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (51 samples, 3.98%)</title><rect x="68.0436%" y="517" width="3.9751%" height="15" fill="rgb(207,163,34)" fg:x="873" fg:w="51"/><text x="68.2936%" y="527.50">kern..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="71.8628%" y="501" width="0.1559%" height="15" fill="rgb(240,127,22)" fg:x="922" fg:w="2"/><text x="72.1128%" y="511.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="71.8628%" y="485" width="0.1559%" height="15" fill="rgb(227,49,5)" fg:x="922" fg:w="2"/><text x="72.1128%" y="495.50"></text></g><g><title>engine::session::Session::initialize (53 samples, 4.13%)</title><rect x="68.0436%" y="533" width="4.1309%" height="15" fill="rgb(231,8,6)" fg:x="873" fg:w="53"/><text x="68.2936%" y="543.50">engin..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="72.0187%" y="517" width="0.1559%" height="15" fill="rgb(223,21,24)" fg:x="924" fg:w="2"/><text x="72.2687%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="72.0187%" y="501" width="0.1559%" height="15" fill="rgb(244,44,52)" fg:x="924" fg:w="2"/><text x="72.2687%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (61 samples, 4.75%)</title><rect x="67.7319%" y="581" width="4.7545%" height="15" fill="rgb(207,73,28)" fg:x="869" fg:w="61"/><text x="67.9819%" y="591.50">&lt;engin..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (61 samples, 4.75%)</title><rect x="67.7319%" y="565" width="4.7545%" height="15" fill="rgb(234,215,10)" fg:x="869" fg:w="61"/><text x="67.9819%" y="575.50">engine..</text></g><g><title>engine::session::Session::new (61 samples, 4.75%)</title><rect x="67.7319%" y="549" width="4.7545%" height="15" fill="rgb(236,85,3)" fg:x="869" fg:w="61"/><text x="67.9819%" y="559.50">engine..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (4 samples, 0.31%)</title><rect x="72.1746%" y="533" width="0.3118%" height="15" fill="rgb(236,102,39)" fg:x="926" fg:w="4"/><text x="72.4246%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="72.1746%" y="517" width="0.3118%" height="15" fill="rgb(243,50,8)" fg:x="926" fg:w="4"/><text x="72.4246%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.4084%" y="501" width="0.0779%" height="15" fill="rgb(207,111,4)" fg:x="929" fg:w="1"/><text x="72.6584%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.4084%" y="485" width="0.0779%" height="15" fill="rgb(230,52,42)" fg:x="929" fg:w="1"/><text x="72.6584%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.4084%" y="469" width="0.0779%" height="15" fill="rgb(252,178,50)" fg:x="929" fg:w="1"/><text x="72.6584%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.4864%" y="565" width="0.0779%" height="15" fill="rgb(234,46,35)" fg:x="930" fg:w="1"/><text x="72.7364%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="72.4864%" y="549" width="0.0779%" height="15" fill="rgb(228,69,37)" fg:x="930" fg:w="1"/><text x="72.7364%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.4864%" y="533" width="0.0779%" height="15" fill="rgb(221,21,11)" fg:x="930" fg:w="1"/><text x="72.7364%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.4864%" y="517" width="0.0779%" height="15" fill="rgb(223,56,9)" fg:x="930" fg:w="1"/><text x="72.7364%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4864%" y="501" width="0.0779%" height="15" fill="rgb(234,30,19)" fg:x="930" fg:w="1"/><text x="72.7364%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="72.5643%" y="549" width="0.1559%" height="15" fill="rgb(211,64,54)" fg:x="931" fg:w="2"/><text x="72.8143%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6422%" y="533" width="0.0779%" height="15" fill="rgb(250,189,5)" fg:x="932" fg:w="1"/><text x="72.8922%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6422%" y="517" width="0.0779%" height="15" fill="rgb(214,180,13)" fg:x="932" fg:w="1"/><text x="72.8922%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.6422%" y="501" width="0.0779%" height="15" fill="rgb(238,40,40)" fg:x="932" fg:w="1"/><text x="72.8922%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.6422%" y="485" width="0.0779%" height="15" fill="rgb(214,101,38)" fg:x="932" fg:w="1"/><text x="72.8922%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.6422%" y="469" width="0.0779%" height="15" fill="rgb(242,65,53)" fg:x="932" fg:w="1"/><text x="72.8922%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6422%" y="453" width="0.0779%" height="15" fill="rgb(230,22,45)" fg:x="932" fg:w="1"/><text x="72.8922%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6422%" y="437" width="0.0779%" height="15" fill="rgb(223,77,1)" fg:x="932" fg:w="1"/><text x="72.8922%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.6422%" y="421" width="0.0779%" height="15" fill="rgb(227,33,37)" fg:x="932" fg:w="1"/><text x="72.8922%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.6422%" y="405" width="0.0779%" height="15" fill="rgb(224,148,39)" fg:x="932" fg:w="1"/><text x="72.8922%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.6422%" y="389" width="0.0779%" height="15" fill="rgb(232,212,39)" fg:x="932" fg:w="1"/><text x="72.8922%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.6422%" y="373" width="0.0779%" height="15" fill="rgb(251,172,7)" fg:x="932" fg:w="1"/><text x="72.8922%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6422%" y="357" width="0.0779%" height="15" fill="rgb(219,39,9)" fg:x="932" fg:w="1"/><text x="72.8922%" y="367.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="72.7202%" y="549" width="0.0779%" height="15" fill="rgb(228,118,14)" fg:x="933" fg:w="1"/><text x="72.9702%" y="559.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="72.7202%" y="533" width="0.0779%" height="15" fill="rgb(207,140,10)" fg:x="933" fg:w="1"/><text x="72.9702%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="72.7202%" y="517" width="0.0779%" height="15" fill="rgb(227,111,53)" fg:x="933" fg:w="1"/><text x="72.9702%" y="527.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="72.7202%" y="501" width="0.0779%" height="15" fill="rgb(216,165,16)" fg:x="933" fg:w="1"/><text x="72.9702%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="72.7202%" y="485" width="0.0779%" height="15" fill="rgb(226,111,18)" fg:x="933" fg:w="1"/><text x="72.9702%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="72.7202%" y="469" width="0.0779%" height="15" fill="rgb(251,27,17)" fg:x="933" fg:w="1"/><text x="72.9702%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="72.7202%" y="453" width="0.0779%" height="15" fill="rgb(254,69,9)" fg:x="933" fg:w="1"/><text x="72.9702%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="72.7202%" y="437" width="0.0779%" height="15" fill="rgb(234,140,37)" fg:x="933" fg:w="1"/><text x="72.9702%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="72.8761%" y="453" width="0.0779%" height="15" fill="rgb(220,93,8)" fg:x="935" fg:w="1"/><text x="73.1261%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.8761%" y="437" width="0.0779%" height="15" fill="rgb(236,113,3)" fg:x="935" fg:w="1"/><text x="73.1261%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.8761%" y="421" width="0.0779%" height="15" fill="rgb(234,108,23)" fg:x="935" fg:w="1"/><text x="73.1261%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.8761%" y="405" width="0.0779%" height="15" fill="rgb(205,114,34)" fg:x="935" fg:w="1"/><text x="73.1261%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.8761%" y="389" width="0.0779%" height="15" fill="rgb(236,200,45)" fg:x="935" fg:w="1"/><text x="73.1261%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.8761%" y="373" width="0.0779%" height="15" fill="rgb(227,194,29)" fg:x="935" fg:w="1"/><text x="73.1261%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.8761%" y="357" width="0.0779%" height="15" fill="rgb(250,76,42)" fg:x="935" fg:w="1"/><text x="73.1261%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.8761%" y="341" width="0.0779%" height="15" fill="rgb(208,128,8)" fg:x="935" fg:w="1"/><text x="73.1261%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.1878%" y="389" width="0.0779%" height="15" fill="rgb(229,209,35)" fg:x="939" fg:w="1"/><text x="73.4378%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="73.0320%" y="437" width="0.3118%" height="15" fill="rgb(215,39,53)" fg:x="937" fg:w="4"/><text x="73.2820%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="73.1099%" y="421" width="0.2338%" height="15" fill="rgb(219,123,41)" fg:x="938" fg:w="3"/><text x="73.3599%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="73.1099%" y="405" width="0.2338%" height="15" fill="rgb(212,158,18)" fg:x="938" fg:w="3"/><text x="73.3599%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="73.2658%" y="389" width="0.0779%" height="15" fill="rgb(234,196,53)" fg:x="940" fg:w="1"/><text x="73.5158%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.3437%" y="389" width="0.0779%" height="15" fill="rgb(210,139,12)" fg:x="941" fg:w="1"/><text x="73.5937%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.4996%" y="373" width="0.0779%" height="15" fill="rgb(220,116,54)" fg:x="943" fg:w="1"/><text x="73.7496%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5776%" y="373" width="0.0779%" height="15" fill="rgb(247,103,28)" fg:x="944" fg:w="1"/><text x="73.8276%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.5776%" y="357" width="0.0779%" height="15" fill="rgb(253,156,45)" fg:x="944" fg:w="1"/><text x="73.8276%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.5776%" y="341" width="0.0779%" height="15" fill="rgb(237,157,52)" fg:x="944" fg:w="1"/><text x="73.8276%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.5776%" y="325" width="0.0779%" height="15" fill="rgb(253,112,16)" fg:x="944" fg:w="1"/><text x="73.8276%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5776%" y="309" width="0.0779%" height="15" fill="rgb(234,70,18)" fg:x="944" fg:w="1"/><text x="73.8276%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="73.3437%" y="405" width="0.3897%" height="15" fill="rgb(247,138,19)" fg:x="941" fg:w="5"/><text x="73.5937%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="73.4217%" y="389" width="0.3118%" height="15" fill="rgb(207,171,1)" fg:x="942" fg:w="4"/><text x="73.6717%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6555%" y="373" width="0.0779%" height="15" fill="rgb(239,213,3)" fg:x="945" fg:w="1"/><text x="73.9055%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6555%" y="357" width="0.0779%" height="15" fill="rgb(226,112,4)" fg:x="945" fg:w="1"/><text x="73.9055%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.6555%" y="341" width="0.0779%" height="15" fill="rgb(252,170,12)" fg:x="945" fg:w="1"/><text x="73.9055%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.55%)</title><rect x="73.3437%" y="421" width="0.5456%" height="15" fill="rgb(241,106,13)" fg:x="941" fg:w="7"/><text x="73.5937%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.7334%" y="405" width="0.1559%" height="15" fill="rgb(225,73,23)" fg:x="946" fg:w="2"/><text x="73.9834%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.7334%" y="389" width="0.1559%" height="15" fill="rgb(251,227,29)" fg:x="946" fg:w="2"/><text x="73.9834%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="73.8893%" y="421" width="0.2338%" height="15" fill="rgb(237,144,13)" fg:x="948" fg:w="3"/><text x="74.1393%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="73.8893%" y="405" width="0.2338%" height="15" fill="rgb(232,106,46)" fg:x="948" fg:w="3"/><text x="74.1393%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.9673%" y="389" width="0.1559%" height="15" fill="rgb(245,154,53)" fg:x="949" fg:w="2"/><text x="74.2173%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="73.9673%" y="373" width="0.1559%" height="15" fill="rgb(212,119,47)" fg:x="949" fg:w="2"/><text x="74.2173%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.0452%" y="357" width="0.0779%" height="15" fill="rgb(253,135,25)" fg:x="950" fg:w="1"/><text x="74.2952%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.0452%" y="341" width="0.0779%" height="15" fill="rgb(253,208,39)" fg:x="950" fg:w="1"/><text x="74.2952%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.0452%" y="325" width="0.0779%" height="15" fill="rgb(226,64,12)" fg:x="950" fg:w="1"/><text x="74.2952%" y="335.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.08%)</title><rect x="74.1231%" y="405" width="0.0779%" height="15" fill="rgb(214,162,37)" fg:x="951" fg:w="1"/><text x="74.3731%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="74.2011%" y="405" width="0.2338%" height="15" fill="rgb(250,104,5)" fg:x="952" fg:w="3"/><text x="74.4511%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="74.2011%" y="389" width="0.2338%" height="15" fill="rgb(220,202,50)" fg:x="952" fg:w="3"/><text x="74.4511%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="74.2011%" y="373" width="0.2338%" height="15" fill="rgb(248,67,38)" fg:x="952" fg:w="3"/><text x="74.4511%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="74.2790%" y="357" width="0.1559%" height="15" fill="rgb(242,94,35)" fg:x="953" fg:w="2"/><text x="74.5290%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="74.2790%" y="341" width="0.1559%" height="15" fill="rgb(209,78,37)" fg:x="953" fg:w="2"/><text x="74.5290%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="74.2790%" y="325" width="0.1559%" height="15" fill="rgb(230,126,47)" fg:x="953" fg:w="2"/><text x="74.5290%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="74.2790%" y="309" width="0.1559%" height="15" fill="rgb(222,110,35)" fg:x="953" fg:w="2"/><text x="74.5290%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.5129%" y="389" width="0.1559%" height="15" fill="rgb(233,154,20)" fg:x="956" fg:w="2"/><text x="74.7629%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="74.1231%" y="421" width="0.7794%" height="15" fill="rgb(223,53,50)" fg:x="951" fg:w="10"/><text x="74.3731%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="74.4349%" y="405" width="0.4677%" height="15" fill="rgb(251,27,26)" fg:x="955" fg:w="6"/><text x="74.6849%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="74.6687%" y="389" width="0.2338%" height="15" fill="rgb(223,189,16)" fg:x="958" fg:w="3"/><text x="74.9187%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.7467%" y="373" width="0.1559%" height="15" fill="rgb(207,5,54)" fg:x="959" fg:w="2"/><text x="74.9967%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.64%)</title><rect x="73.3437%" y="437" width="1.6368%" height="15" fill="rgb(254,124,50)" fg:x="941" fg:w="21"/><text x="73.5937%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.9026%" y="421" width="0.0779%" height="15" fill="rgb(253,193,24)" fg:x="961" fg:w="1"/><text x="75.1526%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.26%)</title><rect x="72.8761%" y="469" width="2.2603%" height="15" fill="rgb(235,170,24)" fg:x="935" fg:w="29"/><text x="73.1261%" y="479.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.18%)</title><rect x="72.9540%" y="453" width="2.1824%" height="15" fill="rgb(222,212,52)" fg:x="936" fg:w="28"/><text x="73.2040%" y="463.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.9805%" y="437" width="0.1559%" height="15" fill="rgb(223,17,45)" fg:x="962" fg:w="2"/><text x="75.2305%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.0585%" y="421" width="0.0779%" height="15" fill="rgb(227,103,26)" fg:x="963" fg:w="1"/><text x="75.3085%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.0585%" y="405" width="0.0779%" height="15" fill="rgb(251,151,25)" fg:x="963" fg:w="1"/><text x="75.3085%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.1364%" y="437" width="0.0779%" height="15" fill="rgb(248,144,29)" fg:x="964" fg:w="1"/><text x="75.3864%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.1364%" y="421" width="0.0779%" height="15" fill="rgb(245,97,16)" fg:x="964" fg:w="1"/><text x="75.3864%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.2923%" y="389" width="0.0779%" height="15" fill="rgb(220,200,29)" fg:x="966" fg:w="1"/><text x="75.5423%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="75.1364%" y="469" width="0.3897%" height="15" fill="rgb(206,38,29)" fg:x="964" fg:w="5"/><text x="75.3864%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="75.1364%" y="453" width="0.3897%" height="15" fill="rgb(245,19,52)" fg:x="964" fg:w="5"/><text x="75.3864%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="75.2143%" y="437" width="0.3118%" height="15" fill="rgb(205,67,43)" fg:x="965" fg:w="4"/><text x="75.4643%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="75.2923%" y="421" width="0.2338%" height="15" fill="rgb(217,128,23)" fg:x="966" fg:w="3"/><text x="75.5423%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="75.2923%" y="405" width="0.2338%" height="15" fill="rgb(210,109,28)" fg:x="966" fg:w="3"/><text x="75.5423%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="75.3702%" y="389" width="0.1559%" height="15" fill="rgb(233,181,7)" fg:x="967" fg:w="2"/><text x="75.6202%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="75.3702%" y="373" width="0.1559%" height="15" fill="rgb(244,11,22)" fg:x="967" fg:w="2"/><text x="75.6202%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.4482%" y="357" width="0.0779%" height="15" fill="rgb(205,124,54)" fg:x="968" fg:w="1"/><text x="75.6982%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.4482%" y="341" width="0.0779%" height="15" fill="rgb(218,21,27)" fg:x="968" fg:w="1"/><text x="75.6982%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4482%" y="325" width="0.0779%" height="15" fill="rgb(224,153,33)" fg:x="968" fg:w="1"/><text x="75.6982%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.6041%" y="437" width="0.0779%" height="15" fill="rgb(240,219,28)" fg:x="970" fg:w="1"/><text x="75.8541%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.6820%" y="437" width="0.0779%" height="15" fill="rgb(214,80,29)" fg:x="971" fg:w="1"/><text x="75.9320%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.7599%" y="405" width="0.0779%" height="15" fill="rgb(247,148,44)" fg:x="972" fg:w="1"/><text x="76.0099%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (5 samples, 0.39%)</title><rect x="75.5261%" y="453" width="0.3897%" height="15" fill="rgb(243,110,30)" fg:x="969" fg:w="5"/><text x="75.7761%" y="463.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (2 samples, 0.16%)</title><rect x="75.7599%" y="437" width="0.1559%" height="15" fill="rgb(243,173,41)" fg:x="972" fg:w="2"/><text x="76.0099%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="75.7599%" y="421" width="0.1559%" height="15" fill="rgb(225,160,47)" fg:x="972" fg:w="2"/><text x="76.0099%" y="431.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.8379%" y="405" width="0.0779%" height="15" fill="rgb(215,44,21)" fg:x="973" fg:w="1"/><text x="76.0879%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.9158%" y="421" width="0.1559%" height="15" fill="rgb(248,90,3)" fg:x="974" fg:w="2"/><text x="76.1658%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0717%" y="421" width="0.0779%" height="15" fill="rgb(220,196,49)" fg:x="976" fg:w="1"/><text x="76.3217%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1496%" y="373" width="0.0779%" height="15" fill="rgb(217,138,14)" fg:x="977" fg:w="1"/><text x="76.3996%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1496%" y="357" width="0.0779%" height="15" fill="rgb(219,111,20)" fg:x="977" fg:w="1"/><text x="76.3996%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="76.2276%" y="357" width="0.0779%" height="15" fill="rgb(218,114,4)" fg:x="978" fg:w="1"/><text x="76.4776%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="76.3055%" y="341" width="0.2338%" height="15" fill="rgb(238,133,3)" fg:x="979" fg:w="3"/><text x="76.5555%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="76.3055%" y="357" width="0.3118%" height="15" fill="rgb(224,95,0)" fg:x="979" fg:w="4"/><text x="76.5555%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5394%" y="341" width="0.0779%" height="15" fill="rgb(220,169,35)" fg:x="982" fg:w="1"/><text x="76.7894%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.5394%" y="325" width="0.0779%" height="15" fill="rgb(242,116,47)" fg:x="982" fg:w="1"/><text x="76.7894%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5394%" y="309" width="0.0779%" height="15" fill="rgb(251,42,20)" fg:x="982" fg:w="1"/><text x="76.7894%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="76.1496%" y="389" width="0.5456%" height="15" fill="rgb(234,7,34)" fg:x="977" fg:w="7"/><text x="76.3996%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.47%)</title><rect x="76.2276%" y="373" width="0.4677%" height="15" fill="rgb(243,208,13)" fg:x="978" fg:w="6"/><text x="76.4776%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6173%" y="357" width="0.0779%" height="15" fill="rgb(227,33,28)" fg:x="983" fg:w="1"/><text x="76.8673%" y="367.50"></text></g><g><title>engine::session::Session::flush (55 samples, 4.29%)</title><rect x="72.5643%" y="565" width="4.2868%" height="15" fill="rgb(250,47,37)" fg:x="931" fg:w="55"/><text x="72.8143%" y="575.50">engin..</text></g><g><title>engine::session::state::State::close (52 samples, 4.05%)</title><rect x="72.7981%" y="549" width="4.0530%" height="15" fill="rgb(235,111,52)" fg:x="934" fg:w="52"/><text x="73.0481%" y="559.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (52 samples, 4.05%)</title><rect x="72.7981%" y="533" width="4.0530%" height="15" fill="rgb(223,64,28)" fg:x="934" fg:w="52"/><text x="73.0481%" y="543.50">engi..</text></g><g><title>core::iter::adapters::try_process (52 samples, 4.05%)</title><rect x="72.7981%" y="517" width="4.0530%" height="15" fill="rgb(236,67,22)" fg:x="934" fg:w="52"/><text x="73.0481%" y="527.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 4.05%)</title><rect x="72.7981%" y="501" width="4.0530%" height="15" fill="rgb(243,79,24)" fg:x="934" fg:w="52"/><text x="73.0481%" y="511.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (52 samples, 4.05%)</title><rect x="72.7981%" y="485" width="4.0530%" height="15" fill="rgb(241,225,22)" fg:x="934" fg:w="52"/><text x="73.0481%" y="495.50">engi..</text></g><g><title>kernel::model::any_entity_changes (17 samples, 1.33%)</title><rect x="75.5261%" y="469" width="1.3250%" height="15" fill="rgb(228,214,26)" fg:x="969" fg:w="17"/><text x="75.7761%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.94%)</title><rect x="75.9158%" y="453" width="0.9353%" height="15" fill="rgb(219,84,52)" fg:x="974" fg:w="12"/><text x="76.1658%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.94%)</title><rect x="75.9158%" y="437" width="0.9353%" height="15" fill="rgb(220,12,22)" fg:x="974" fg:w="12"/><text x="76.1658%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.70%)</title><rect x="76.1496%" y="421" width="0.7015%" height="15" fill="rgb(219,9,49)" fg:x="977" fg:w="9"/><text x="76.3996%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.70%)</title><rect x="76.1496%" y="405" width="0.7015%" height="15" fill="rgb(237,40,43)" fg:x="977" fg:w="9"/><text x="76.3996%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="76.6952%" y="389" width="0.1559%" height="15" fill="rgb(212,189,32)" fg:x="984" fg:w="2"/><text x="76.9452%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7732%" y="373" width="0.0779%" height="15" fill="rgb(247,48,9)" fg:x="985" fg:w="1"/><text x="77.0232%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8511%" y="517" width="0.0779%" height="15" fill="rgb(247,112,3)" fg:x="986" fg:w="1"/><text x="77.1011%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8511%" y="501" width="0.0779%" height="15" fill="rgb(243,110,18)" fg:x="986" fg:w="1"/><text x="77.1011%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.8511%" y="549" width="0.1559%" height="15" fill="rgb(233,223,44)" fg:x="986" fg:w="2"/><text x="77.1011%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="76.8511%" y="533" width="0.1559%" height="15" fill="rgb(245,160,20)" fg:x="986" fg:w="2"/><text x="77.1011%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.9291%" y="517" width="0.0779%" height="15" fill="rgb(225,37,1)" fg:x="987" fg:w="1"/><text x="77.1791%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9291%" y="501" width="0.0779%" height="15" fill="rgb(253,227,39)" fg:x="987" fg:w="1"/><text x="77.1791%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.9291%" y="485" width="0.0779%" height="15" fill="rgb(240,179,26)" fg:x="987" fg:w="1"/><text x="77.1791%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="77.0070%" y="533" width="0.0779%" height="15" fill="rgb(237,212,23)" fg:x="988" fg:w="1"/><text x="77.2570%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.0070%" y="517" width="0.0779%" height="15" fill="rgb(221,38,11)" fg:x="988" fg:w="1"/><text x="77.2570%" y="527.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="77.0850%" y="517" width="0.0779%" height="15" fill="rgb(215,85,6)" fg:x="989" fg:w="1"/><text x="77.3350%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.0850%" y="501" width="0.0779%" height="15" fill="rgb(239,64,14)" fg:x="989" fg:w="1"/><text x="77.3350%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (2 samples, 0.16%)</title><rect x="77.1629%" y="501" width="0.1559%" height="15" fill="rgb(215,150,32)" fg:x="990" fg:w="2"/><text x="77.4129%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="77.2408%" y="485" width="0.0779%" height="15" fill="rgb(238,15,13)" fg:x="991" fg:w="1"/><text x="77.4908%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.31%)</title><rect x="77.0850%" y="533" width="0.3118%" height="15" fill="rgb(251,87,8)" fg:x="989" fg:w="4"/><text x="77.3350%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (3 samples, 0.23%)</title><rect x="77.1629%" y="517" width="0.2338%" height="15" fill="rgb(206,86,1)" fg:x="990" fg:w="3"/><text x="77.4129%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="77.3188%" y="501" width="0.0779%" height="15" fill="rgb(208,151,45)" fg:x="992" fg:w="1"/><text x="77.5688%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.3188%" y="485" width="0.0779%" height="15" fill="rgb(231,181,24)" fg:x="992" fg:w="1"/><text x="77.5688%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.3188%" y="469" width="0.0779%" height="15" fill="rgb(240,106,29)" fg:x="992" fg:w="1"/><text x="77.5688%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3967%" y="469" width="0.0779%" height="15" fill="rgb(227,166,11)" fg:x="993" fg:w="1"/><text x="77.6467%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3967%" y="453" width="0.0779%" height="15" fill="rgb(254,14,34)" fg:x="993" fg:w="1"/><text x="77.6467%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3967%" y="437" width="0.0779%" height="15" fill="rgb(223,222,6)" fg:x="993" fg:w="1"/><text x="77.6467%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3967%" y="421" width="0.0779%" height="15" fill="rgb(245,69,24)" fg:x="993" fg:w="1"/><text x="77.6467%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3967%" y="405" width="0.0779%" height="15" fill="rgb(213,193,7)" fg:x="993" fg:w="1"/><text x="77.6467%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.3967%" y="389" width="0.0779%" height="15" fill="rgb(237,92,51)" fg:x="993" fg:w="1"/><text x="77.6467%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.3967%" y="373" width="0.0779%" height="15" fill="rgb(225,194,6)" fg:x="993" fg:w="1"/><text x="77.6467%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.3967%" y="357" width="0.0779%" height="15" fill="rgb(205,159,49)" fg:x="993" fg:w="1"/><text x="77.6467%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3967%" y="341" width="0.0779%" height="15" fill="rgb(219,69,2)" fg:x="993" fg:w="1"/><text x="77.6467%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3967%" y="325" width="0.0779%" height="15" fill="rgb(215,107,24)" fg:x="993" fg:w="1"/><text x="77.6467%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.3967%" y="309" width="0.0779%" height="15" fill="rgb(249,208,29)" fg:x="993" fg:w="1"/><text x="77.6467%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.3967%" y="293" width="0.0779%" height="15" fill="rgb(213,147,10)" fg:x="993" fg:w="1"/><text x="77.6467%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.3967%" y="277" width="0.0779%" height="15" fill="rgb(254,140,42)" fg:x="993" fg:w="1"/><text x="77.6467%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.3967%" y="261" width="0.0779%" height="15" fill="rgb(249,9,15)" fg:x="993" fg:w="1"/><text x="77.6467%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3967%" y="245" width="0.0779%" height="15" fill="rgb(210,19,33)" fg:x="993" fg:w="1"/><text x="77.6467%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.62%)</title><rect x="77.0070%" y="549" width="0.6235%" height="15" fill="rgb(241,121,22)" fg:x="988" fg:w="8"/><text x="77.2570%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="77.3967%" y="533" width="0.2338%" height="15" fill="rgb(244,69,52)" fg:x="993" fg:w="3"/><text x="77.6467%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="77.3967%" y="517" width="0.2338%" height="15" fill="rgb(244,191,54)" fg:x="993" fg:w="3"/><text x="77.6467%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.23%)</title><rect x="77.3967%" y="501" width="0.2338%" height="15" fill="rgb(250,3,53)" fg:x="993" fg:w="3"/><text x="77.6467%" y="511.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.23%)</title><rect x="77.3967%" y="485" width="0.2338%" height="15" fill="rgb(205,77,3)" fg:x="993" fg:w="3"/><text x="77.6467%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.4747%" y="469" width="0.1559%" height="15" fill="rgb(207,155,3)" fg:x="994" fg:w="2"/><text x="77.7247%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.4747%" y="453" width="0.1559%" height="15" fill="rgb(224,79,2)" fg:x="994" fg:w="2"/><text x="77.7247%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="77.4747%" y="437" width="0.1559%" height="15" fill="rgb(243,172,5)" fg:x="994" fg:w="2"/><text x="77.7247%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.4747%" y="421" width="0.1559%" height="15" fill="rgb(217,23,43)" fg:x="994" fg:w="2"/><text x="77.7247%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.4747%" y="405" width="0.1559%" height="15" fill="rgb(223,109,20)" fg:x="994" fg:w="2"/><text x="77.7247%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.4747%" y="389" width="0.1559%" height="15" fill="rgb(232,159,21)" fg:x="994" fg:w="2"/><text x="77.7247%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.5526%" y="373" width="0.0779%" height="15" fill="rgb(219,58,2)" fg:x="995" fg:w="1"/><text x="77.8026%" y="383.50"></text></g><g><title>plugins_core::build::Build::save (11 samples, 0.86%)</title><rect x="76.8511%" y="565" width="0.8574%" height="15" fill="rgb(241,56,8)" fg:x="986" fg:w="11"/><text x="77.1011%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.6306%" y="549" width="0.0779%" height="15" fill="rgb(249,10,27)" fg:x="996" fg:w="1"/><text x="77.8806%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6306%" y="533" width="0.0779%" height="15" fill="rgb(248,177,5)" fg:x="996" fg:w="1"/><text x="77.8806%" y="543.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::carryable (1 samples, 0.08%)</title><rect x="77.7085%" y="565" width="0.0779%" height="15" fill="rgb(239,12,30)" fg:x="997" fg:w="1"/><text x="77.9585%" y="575.50"></text></g><g><title>plugins_core::tools::set_quantity (1 samples, 0.08%)</title><rect x="77.7085%" y="549" width="0.0779%" height="15" fill="rgb(229,164,25)" fg:x="997" fg:w="1"/><text x="77.9585%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="77.7085%" y="533" width="0.0779%" height="15" fill="rgb(231,217,50)" fg:x="997" fg:w="1"/><text x="77.9585%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="77.7085%" y="517" width="0.0779%" height="15" fill="rgb(247,99,32)" fg:x="997" fg:w="1"/><text x="77.9585%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.08%)</title><rect x="77.7085%" y="501" width="0.0779%" height="15" fill="rgb(240,74,50)" fg:x="997" fg:w="1"/><text x="77.9585%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="77.7864%" y="533" width="0.0779%" height="15" fill="rgb(218,54,8)" fg:x="998" fg:w="1"/><text x="78.0364%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.7864%" y="517" width="0.0779%" height="15" fill="rgb(227,132,20)" fg:x="998" fg:w="1"/><text x="78.0364%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.7864%" y="501" width="0.0779%" height="15" fill="rgb(232,134,12)" fg:x="998" fg:w="1"/><text x="78.0364%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="77.7864%" y="485" width="0.0779%" height="15" fill="rgb(250,129,18)" fg:x="998" fg:w="1"/><text x="78.0364%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.7864%" y="469" width="0.0779%" height="15" fill="rgb(232,129,47)" fg:x="998" fg:w="1"/><text x="78.0364%" y="479.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="77.8644%" y="533" width="0.0779%" height="15" fill="rgb(230,31,40)" fg:x="999" fg:w="1"/><text x="78.1144%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="77.8644%" y="517" width="0.0779%" height="15" fill="rgb(232,126,10)" fg:x="999" fg:w="1"/><text x="78.1144%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8644%" y="501" width="0.0779%" height="15" fill="rgb(205,46,31)" fg:x="999" fg:w="1"/><text x="78.1144%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (3 samples, 0.23%)</title><rect x="77.7864%" y="565" width="0.2338%" height="15" fill="rgb(232,37,37)" fg:x="998" fg:w="3"/><text x="78.0364%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.23%)</title><rect x="77.7864%" y="549" width="0.2338%" height="15" fill="rgb(240,91,16)" fg:x="998" fg:w="3"/><text x="78.0364%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="77.9423%" y="533" width="0.0779%" height="15" fill="rgb(224,160,9)" fg:x="1000" fg:w="1"/><text x="78.1923%" y="543.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="77.9423%" y="517" width="0.0779%" height="15" fill="rgb(215,116,14)" fg:x="1000" fg:w="1"/><text x="78.1923%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9423%" y="501" width="0.0779%" height="15" fill="rgb(235,46,36)" fg:x="1000" fg:w="1"/><text x="78.1923%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9423%" y="485" width="0.0779%" height="15" fill="rgb(238,39,28)" fg:x="1000" fg:w="1"/><text x="78.1923%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="78.0203%" y="533" width="0.0779%" height="15" fill="rgb(242,125,29)" fg:x="1001" fg:w="1"/><text x="78.2703%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.0203%" y="517" width="0.0779%" height="15" fill="rgb(238,211,30)" fg:x="1001" fg:w="1"/><text x="78.2703%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0203%" y="501" width="0.0779%" height="15" fill="rgb(227,201,28)" fg:x="1001" fg:w="1"/><text x="78.2703%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.0203%" y="485" width="0.0779%" height="15" fill="rgb(238,77,29)" fg:x="1001" fg:w="1"/><text x="78.2703%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (3 samples, 0.23%)</title><rect x="78.0203%" y="549" width="0.2338%" height="15" fill="rgb(213,221,40)" fg:x="1001" fg:w="3"/><text x="78.2703%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="78.0982%" y="533" width="0.1559%" height="15" fill="rgb(226,220,44)" fg:x="1002" fg:w="2"/><text x="78.3482%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="78.0982%" y="517" width="0.1559%" height="15" fill="rgb(228,90,23)" fg:x="1002" fg:w="2"/><text x="78.3482%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="78.0982%" y="501" width="0.1559%" height="15" fill="rgb(235,72,29)" fg:x="1002" fg:w="2"/><text x="78.3482%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="78.0982%" y="485" width="0.1559%" height="15" fill="rgb(248,117,39)" fg:x="1002" fg:w="2"/><text x="78.3482%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.1761%" y="469" width="0.0779%" height="15" fill="rgb(225,43,28)" fg:x="1003" fg:w="1"/><text x="78.4261%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.2541%" y="549" width="0.0779%" height="15" fill="rgb(240,93,4)" fg:x="1004" fg:w="1"/><text x="78.5041%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.2541%" y="533" width="0.0779%" height="15" fill="rgb(234,178,27)" fg:x="1004" fg:w="1"/><text x="78.5041%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.2541%" y="517" width="0.0779%" height="15" fill="rgb(254,88,22)" fg:x="1004" fg:w="1"/><text x="78.5041%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.2541%" y="501" width="0.0779%" height="15" fill="rgb(240,206,50)" fg:x="1004" fg:w="1"/><text x="78.5041%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3320%" y="549" width="0.0779%" height="15" fill="rgb(249,103,8)" fg:x="1005" fg:w="1"/><text x="78.5820%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="78.4100%" y="549" width="0.0779%" height="15" fill="rgb(241,178,36)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.4100%" y="533" width="0.0779%" height="15" fill="rgb(246,110,15)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.4100%" y="517" width="0.0779%" height="15" fill="rgb(207,14,43)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (1 samples, 0.08%)</title><rect x="78.4100%" y="501" width="0.0779%" height="15" fill="rgb(253,219,19)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="78.4100%" y="485" width="0.0779%" height="15" fill="rgb(216,126,5)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.4100%" y="469" width="0.0779%" height="15" fill="rgb(218,78,42)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="78.4100%" y="453" width="0.0779%" height="15" fill="rgb(215,154,40)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4100%" y="437" width="0.0779%" height="15" fill="rgb(235,129,32)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4100%" y="421" width="0.0779%" height="15" fill="rgb(218,51,8)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4100%" y="405" width="0.0779%" height="15" fill="rgb(245,48,4)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4100%" y="389" width="0.0779%" height="15" fill="rgb(250,175,12)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.4879%" y="485" width="0.0779%" height="15" fill="rgb(237,95,40)" fg:x="1007" fg:w="1"/><text x="78.7379%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.4879%" y="469" width="0.0779%" height="15" fill="rgb(244,120,0)" fg:x="1007" fg:w="1"/><text x="78.7379%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="78.4879%" y="453" width="0.0779%" height="15" fill="rgb(241,19,42)" fg:x="1007" fg:w="1"/><text x="78.7379%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="78.6438%" y="437" width="0.1559%" height="15" fill="rgb(217,174,48)" fg:x="1009" fg:w="2"/><text x="78.8938%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.6438%" y="421" width="0.1559%" height="15" fill="rgb(239,36,38)" fg:x="1009" fg:w="2"/><text x="78.8938%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.6438%" y="405" width="0.1559%" height="15" fill="rgb(220,63,49)" fg:x="1009" fg:w="2"/><text x="78.8938%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.6438%" y="389" width="0.1559%" height="15" fill="rgb(240,101,13)" fg:x="1009" fg:w="2"/><text x="78.8938%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.31%)</title><rect x="78.7997%" y="421" width="0.3118%" height="15" fill="rgb(209,184,51)" fg:x="1011" fg:w="4"/><text x="79.0497%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="78.7997%" y="405" width="0.3118%" height="15" fill="rgb(206,136,39)" fg:x="1011" fg:w="4"/><text x="79.0497%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="78.8776%" y="389" width="0.2338%" height="15" fill="rgb(254,47,45)" fg:x="1012" fg:w="3"/><text x="79.1276%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="78.8776%" y="373" width="0.2338%" height="15" fill="rgb(252,103,20)" fg:x="1012" fg:w="3"/><text x="79.1276%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="78.8776%" y="357" width="0.2338%" height="15" fill="rgb(230,69,12)" fg:x="1012" fg:w="3"/><text x="79.1276%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.0335%" y="341" width="0.0779%" height="15" fill="rgb(219,2,28)" fg:x="1014" fg:w="1"/><text x="79.2835%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.0335%" y="325" width="0.0779%" height="15" fill="rgb(210,9,12)" fg:x="1014" fg:w="1"/><text x="79.2835%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.0335%" y="309" width="0.0779%" height="15" fill="rgb(235,99,33)" fg:x="1014" fg:w="1"/><text x="79.2835%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.1115%" y="405" width="0.0779%" height="15" fill="rgb(230,11,38)" fg:x="1015" fg:w="1"/><text x="79.3615%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1115%" y="389" width="0.0779%" height="15" fill="rgb(217,129,0)" fg:x="1015" fg:w="1"/><text x="79.3615%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.1115%" y="373" width="0.0779%" height="15" fill="rgb(222,198,4)" fg:x="1015" fg:w="1"/><text x="79.3615%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.1115%" y="357" width="0.0779%" height="15" fill="rgb(246,170,27)" fg:x="1015" fg:w="1"/><text x="79.3615%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.1115%" y="341" width="0.0779%" height="15" fill="rgb(229,17,28)" fg:x="1015" fg:w="1"/><text x="79.3615%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.1115%" y="325" width="0.0779%" height="15" fill="rgb(233,198,48)" fg:x="1015" fg:w="1"/><text x="79.3615%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.1115%" y="309" width="0.0779%" height="15" fill="rgb(238,103,23)" fg:x="1015" fg:w="1"/><text x="79.3615%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.2673%" y="389" width="0.0779%" height="15" fill="rgb(206,91,41)" fg:x="1017" fg:w="1"/><text x="79.5173%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2673%" y="373" width="0.0779%" height="15" fill="rgb(227,34,25)" fg:x="1017" fg:w="1"/><text x="79.5173%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.2673%" y="357" width="0.0779%" height="15" fill="rgb(210,110,44)" fg:x="1017" fg:w="1"/><text x="79.5173%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2673%" y="341" width="0.0779%" height="15" fill="rgb(216,189,8)" fg:x="1017" fg:w="1"/><text x="79.5173%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.3453%" y="389" width="0.1559%" height="15" fill="rgb(234,9,46)" fg:x="1018" fg:w="2"/><text x="79.5953%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.4232%" y="373" width="0.0779%" height="15" fill="rgb(251,200,5)" fg:x="1019" fg:w="1"/><text x="79.6732%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4232%" y="357" width="0.0779%" height="15" fill="rgb(238,165,37)" fg:x="1019" fg:w="1"/><text x="79.6732%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.4232%" y="341" width="0.0779%" height="15" fill="rgb(232,77,38)" fg:x="1019" fg:w="1"/><text x="79.6732%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="79.5012%" y="373" width="0.2338%" height="15" fill="rgb(253,179,33)" fg:x="1020" fg:w="3"/><text x="79.7512%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.6571%" y="357" width="0.0779%" height="15" fill="rgb(240,13,35)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.6571%" y="341" width="0.0779%" height="15" fill="rgb(242,150,49)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.6571%" y="325" width="0.0779%" height="15" fill="rgb(237,176,28)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.6571%" y="309" width="0.0779%" height="15" fill="rgb(214,176,33)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.6571%" y="293" width="0.0779%" height="15" fill="rgb(214,25,12)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.6571%" y="277" width="0.0779%" height="15" fill="rgb(238,190,20)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.8129%" y="357" width="0.0779%" height="15" fill="rgb(208,11,19)" fg:x="1024" fg:w="1"/><text x="80.0629%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="79.7350%" y="373" width="0.3118%" height="15" fill="rgb(239,90,4)" fg:x="1023" fg:w="4"/><text x="79.9850%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.8909%" y="357" width="0.1559%" height="15" fill="rgb(248,110,3)" fg:x="1025" fg:w="2"/><text x="80.1409%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.8909%" y="341" width="0.1559%" height="15" fill="rgb(210,41,30)" fg:x="1025" fg:w="2"/><text x="80.1409%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.9688%" y="325" width="0.0779%" height="15" fill="rgb(239,36,8)" fg:x="1026" fg:w="1"/><text x="80.2188%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.62%)</title><rect x="79.5012%" y="389" width="0.6235%" height="15" fill="rgb(237,201,47)" fg:x="1020" fg:w="8"/><text x="79.7512%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.0468%" y="373" width="0.0779%" height="15" fill="rgb(224,140,29)" fg:x="1027" fg:w="1"/><text x="80.2968%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.09%)</title><rect x="79.1894%" y="405" width="1.0912%" height="15" fill="rgb(231,209,17)" fg:x="1016" fg:w="14"/><text x="79.4394%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.1247%" y="389" width="0.1559%" height="15" fill="rgb(249,196,1)" fg:x="1028" fg:w="2"/><text x="80.3747%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.1247%" y="373" width="0.1559%" height="15" fill="rgb(223,207,51)" fg:x="1028" fg:w="2"/><text x="80.3747%" y="383.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.71%)</title><rect x="78.7997%" y="437" width="1.7147%" height="15" fill="rgb(210,14,40)" fg:x="1011" fg:w="22"/><text x="79.0497%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.40%)</title><rect x="79.1115%" y="421" width="1.4030%" height="15" fill="rgb(250,20,52)" fg:x="1015" fg:w="18"/><text x="79.3615%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="80.2806%" y="405" width="0.2338%" height="15" fill="rgb(241,46,11)" fg:x="1030" fg:w="3"/><text x="80.5306%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.3585%" y="389" width="0.1559%" height="15" fill="rgb(219,105,5)" fg:x="1031" fg:w="2"/><text x="80.6085%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="80.3585%" y="373" width="0.1559%" height="15" fill="rgb(252,77,35)" fg:x="1031" fg:w="2"/><text x="80.6085%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="80.3585%" y="357" width="0.1559%" height="15" fill="rgb(243,119,2)" fg:x="1031" fg:w="2"/><text x="80.6085%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.4365%" y="341" width="0.0779%" height="15" fill="rgb(206,82,28)" fg:x="1032" fg:w="1"/><text x="80.6865%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.4365%" y="325" width="0.0779%" height="15" fill="rgb(227,120,12)" fg:x="1032" fg:w="1"/><text x="80.6865%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="80.5924%" y="357" width="0.0779%" height="15" fill="rgb(229,134,41)" fg:x="1034" fg:w="1"/><text x="80.8424%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.5924%" y="341" width="0.0779%" height="15" fill="rgb(239,96,32)" fg:x="1034" fg:w="1"/><text x="80.8424%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5924%" y="325" width="0.0779%" height="15" fill="rgb(225,46,27)" fg:x="1034" fg:w="1"/><text x="80.8424%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7482%" y="341" width="0.0779%" height="15" fill="rgb(215,168,2)" fg:x="1036" fg:w="1"/><text x="80.9982%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="80.5144%" y="437" width="0.3897%" height="15" fill="rgb(207,170,52)" fg:x="1033" fg:w="5"/><text x="80.7644%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="80.5144%" y="421" width="0.3897%" height="15" fill="rgb(237,198,36)" fg:x="1033" fg:w="5"/><text x="80.7644%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="80.5144%" y="405" width="0.3897%" height="15" fill="rgb(213,27,14)" fg:x="1033" fg:w="5"/><text x="80.7644%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="80.5924%" y="389" width="0.3118%" height="15" fill="rgb(218,77,5)" fg:x="1034" fg:w="4"/><text x="80.8424%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="80.5924%" y="373" width="0.3118%" height="15" fill="rgb(230,219,39)" fg:x="1034" fg:w="4"/><text x="80.8424%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="80.6703%" y="357" width="0.2338%" height="15" fill="rgb(245,177,7)" fg:x="1035" fg:w="3"/><text x="80.9203%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.8262%" y="341" width="0.0779%" height="15" fill="rgb(246,44,46)" fg:x="1037" fg:w="1"/><text x="81.0762%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.9821%" y="405" width="0.0779%" height="15" fill="rgb(207,173,15)" fg:x="1039" fg:w="1"/><text x="81.2321%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.23%)</title><rect x="80.9041%" y="421" width="0.2338%" height="15" fill="rgb(245,170,50)" fg:x="1038" fg:w="3"/><text x="81.1541%" y="431.50"></text></g><g><title>burrow_bon::dotted::DottedPaths::truncate (1 samples, 0.08%)</title><rect x="81.0600%" y="405" width="0.0779%" height="15" fill="rgb(233,156,21)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.0600%" y="389" width="0.0779%" height="15" fill="rgb(253,146,27)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="399.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.0600%" y="373" width="0.0779%" height="15" fill="rgb(247,66,29)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2159%" y="389" width="0.0779%" height="15" fill="rgb(218,207,26)" fg:x="1042" fg:w="1"/><text x="81.4659%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.5277%" y="341" width="0.0779%" height="15" fill="rgb(234,93,26)" fg:x="1046" fg:w="1"/><text x="81.7777%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="81.5277%" y="325" width="0.0779%" height="15" fill="rgb(214,75,48)" fg:x="1046" fg:w="1"/><text x="81.7777%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.6056%" y="325" width="0.0779%" height="15" fill="rgb(229,119,22)" fg:x="1047" fg:w="1"/><text x="81.8556%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6056%" y="309" width="0.0779%" height="15" fill="rgb(226,153,19)" fg:x="1047" fg:w="1"/><text x="81.8556%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.23%)</title><rect x="81.5277%" y="373" width="0.2338%" height="15" fill="rgb(220,204,36)" fg:x="1046" fg:w="3"/><text x="81.7777%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="81.5277%" y="357" width="0.2338%" height="15" fill="rgb(253,181,43)" fg:x="1046" fg:w="3"/><text x="81.7777%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.6056%" y="341" width="0.1559%" height="15" fill="rgb(211,41,51)" fg:x="1047" fg:w="2"/><text x="81.8556%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6836%" y="325" width="0.0779%" height="15" fill="rgb(207,215,0)" fg:x="1048" fg:w="1"/><text x="81.9336%" y="335.50"></text></g><g><title>engine::session::Session::flush (44 samples, 3.43%)</title><rect x="78.4879%" y="549" width="3.4295%" height="15" fill="rgb(212,153,10)" fg:x="1007" fg:w="44"/><text x="78.7379%" y="559.50">eng..</text></g><g><title>engine::session::Session::save_changes (44 samples, 3.43%)</title><rect x="78.4879%" y="533" width="3.4295%" height="15" fill="rgb(251,171,36)" fg:x="1007" fg:w="44"/><text x="78.7379%" y="543.50">eng..</text></g><g><title>engine::session::state::State::close (44 samples, 3.43%)</title><rect x="78.4879%" y="517" width="3.4295%" height="15" fill="rgb(225,219,41)" fg:x="1007" fg:w="44"/><text x="78.7379%" y="527.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (44 samples, 3.43%)</title><rect x="78.4879%" y="501" width="3.4295%" height="15" fill="rgb(208,200,1)" fg:x="1007" fg:w="44"/><text x="78.7379%" y="511.50">eng..</text></g><g><title>core::iter::adapters::try_process (43 samples, 3.35%)</title><rect x="78.5659%" y="485" width="3.3515%" height="15" fill="rgb(206,75,47)" fg:x="1008" fg:w="43"/><text x="78.8159%" y="495.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 3.35%)</title><rect x="78.5659%" y="469" width="3.3515%" height="15" fill="rgb(248,3,16)" fg:x="1008" fg:w="43"/><text x="78.8159%" y="479.50">&lt;al..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (43 samples, 3.35%)</title><rect x="78.5659%" y="453" width="3.3515%" height="15" fill="rgb(242,157,36)" fg:x="1008" fg:w="43"/><text x="78.8159%" y="463.50">eng..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.01%)</title><rect x="80.9041%" y="437" width="1.0133%" height="15" fill="rgb(215,175,11)" fg:x="1038" fg:w="13"/><text x="81.1541%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.78%)</title><rect x="81.1380%" y="421" width="0.7794%" height="15" fill="rgb(252,222,22)" fg:x="1041" fg:w="10"/><text x="81.3880%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.78%)</title><rect x="81.1380%" y="405" width="0.7794%" height="15" fill="rgb(250,121,35)" fg:x="1041" fg:w="10"/><text x="81.3880%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.62%)</title><rect x="81.2938%" y="389" width="0.6235%" height="15" fill="rgb(233,120,49)" fg:x="1043" fg:w="8"/><text x="81.5438%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="81.7615%" y="373" width="0.1559%" height="15" fill="rgb(205,201,14)" fg:x="1049" fg:w="2"/><text x="82.0115%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="81.9174%" y="549" width="0.1559%" height="15" fill="rgb(219,58,45)" fg:x="1051" fg:w="2"/><text x="82.1674%" y="559.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="81.9174%" y="533" width="0.1559%" height="15" fill="rgb(251,65,12)" fg:x="1051" fg:w="2"/><text x="82.1674%" y="543.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_name (2 samples, 0.16%)</title><rect x="81.9174%" y="517" width="0.1559%" height="15" fill="rgb(224,47,31)" fg:x="1051" fg:w="2"/><text x="82.1674%" y="527.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (2 samples, 0.16%)</title><rect x="81.9174%" y="501" width="0.1559%" height="15" fill="rgb(233,74,26)" fg:x="1051" fg:w="2"/><text x="82.1674%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.1512%" y="533" width="0.1559%" height="15" fill="rgb(231,211,31)" fg:x="1054" fg:w="2"/><text x="82.4012%" y="543.50"></text></g><g><title>kernel::model::props::Props::u64_property (1 samples, 0.08%)</title><rect x="82.2292%" y="517" width="0.0779%" height="15" fill="rgb(239,167,5)" fg:x="1055" fg:w="1"/><text x="82.4792%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.2292%" y="501" width="0.0779%" height="15" fill="rgb(241,85,0)" fg:x="1055" fg:w="1"/><text x="82.4792%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="82.3071%" y="517" width="0.1559%" height="15" fill="rgb(229,130,21)" fg:x="1056" fg:w="2"/><text x="82.5571%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3850%" y="501" width="0.0779%" height="15" fill="rgb(254,84,49)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3850%" y="485" width="0.0779%" height="15" fill="rgb(235,85,21)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3850%" y="469" width="0.0779%" height="15" fill="rgb(246,128,52)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3850%" y="453" width="0.0779%" height="15" fill="rgb(243,114,49)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3850%" y="437" width="0.0779%" height="15" fill="rgb(240,224,22)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3850%" y="421" width="0.0779%" height="15" fill="rgb(247,201,52)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3850%" y="405" width="0.0779%" height="15" fill="rgb(231,70,45)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3850%" y="389" width="0.0779%" height="15" fill="rgb(217,215,20)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3850%" y="373" width="0.0779%" height="15" fill="rgb(226,170,30)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3850%" y="357" width="0.0779%" height="15" fill="rgb(220,190,43)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3850%" y="341" width="0.0779%" height="15" fill="rgb(218,20,18)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3850%" y="325" width="0.0779%" height="15" fill="rgb(245,37,26)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="335.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="82.4630%" y="501" width="0.0779%" height="15" fill="rgb(241,127,29)" fg:x="1058" fg:w="1"/><text x="82.7130%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="82.4630%" y="485" width="0.0779%" height="15" fill="rgb(241,33,26)" fg:x="1058" fg:w="1"/><text x="82.7130%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.23%)</title><rect x="82.4630%" y="517" width="0.2338%" height="15" fill="rgb(220,106,21)" fg:x="1058" fg:w="3"/><text x="82.7130%" y="527.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="82.5409%" y="501" width="0.1559%" height="15" fill="rgb(225,125,35)" fg:x="1059" fg:w="2"/><text x="82.7909%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="82.6189%" y="485" width="0.0779%" height="15" fill="rgb(248,80,22)" fg:x="1060" fg:w="1"/><text x="82.8689%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.6968%" y="389" width="0.0779%" height="15" fill="rgb(231,117,39)" fg:x="1061" fg:w="1"/><text x="82.9468%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6968%" y="373" width="0.0779%" height="15" fill="rgb(239,183,16)" fg:x="1061" fg:w="1"/><text x="82.9468%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.6968%" y="501" width="0.1559%" height="15" fill="rgb(221,61,19)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.6968%" y="485" width="0.1559%" height="15" fill="rgb(239,196,44)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="82.6968%" y="469" width="0.1559%" height="15" fill="rgb(206,113,19)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.6968%" y="453" width="0.1559%" height="15" fill="rgb(245,114,12)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.6968%" y="437" width="0.1559%" height="15" fill="rgb(247,89,39)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="82.6968%" y="421" width="0.1559%" height="15" fill="rgb(213,85,14)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.6968%" y="405" width="0.1559%" height="15" fill="rgb(249,206,33)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7747%" y="389" width="0.0779%" height="15" fill="rgb(235,167,47)" fg:x="1062" fg:w="1"/><text x="83.0247%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7747%" y="373" width="0.0779%" height="15" fill="rgb(217,177,16)" fg:x="1062" fg:w="1"/><text x="83.0247%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="82.8527%" y="469" width="0.3118%" height="15" fill="rgb(250,228,29)" fg:x="1063" fg:w="4"/><text x="83.1027%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0865%" y="453" width="0.0779%" height="15" fill="rgb(216,195,42)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.0865%" y="437" width="0.0779%" height="15" fill="rgb(232,192,32)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.94%)</title><rect x="82.3071%" y="533" width="0.9353%" height="15" fill="rgb(211,8,47)" fg:x="1056" fg:w="12"/><text x="82.5571%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.55%)</title><rect x="82.6968%" y="517" width="0.5456%" height="15" fill="rgb(251,201,9)" fg:x="1061" fg:w="7"/><text x="82.9468%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.39%)</title><rect x="82.8527%" y="501" width="0.3897%" height="15" fill="rgb(206,185,47)" fg:x="1063" fg:w="5"/><text x="83.1027%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.39%)</title><rect x="82.8527%" y="485" width="0.3897%" height="15" fill="rgb(245,54,32)" fg:x="1063" fg:w="5"/><text x="83.1027%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.1645%" y="469" width="0.0779%" height="15" fill="rgb(208,1,8)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="83.1645%" y="453" width="0.0779%" height="15" fill="rgb(228,57,24)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.1645%" y="437" width="0.0779%" height="15" fill="rgb(251,24,8)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1645%" y="421" width="0.0779%" height="15" fill="rgb(236,196,50)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.1645%" y="405" width="0.0779%" height="15" fill="rgb(246,222,29)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1645%" y="389" width="0.0779%" height="15" fill="rgb(211,34,40)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.1645%" y="373" width="0.0779%" height="15" fill="rgb(210,66,51)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1645%" y="357" width="0.0779%" height="15" fill="rgb(250,56,43)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1645%" y="341" width="0.0779%" height="15" fill="rgb(240,111,50)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1645%" y="325" width="0.0779%" height="15" fill="rgb(209,117,13)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="335.50"></text></g><g><title>plugins_core::build::Build::save (16 samples, 1.25%)</title><rect x="82.0733%" y="549" width="1.2471%" height="15" fill="rgb(232,164,45)" fg:x="1053" fg:w="16"/><text x="82.3233%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.2424%" y="533" width="0.0779%" height="15" fill="rgb(205,69,32)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.2424%" y="517" width="0.0779%" height="15" fill="rgb(240,147,45)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2424%" y="501" width="0.0779%" height="15" fill="rgb(221,94,48)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="511.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::holding (1 samples, 0.08%)</title><rect x="83.3203%" y="549" width="0.0779%" height="15" fill="rgb(249,209,17)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="559.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="83.3203%" y="533" width="0.0779%" height="15" fill="rgb(228,57,28)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="83.3203%" y="517" width="0.0779%" height="15" fill="rgb(250,133,26)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="83.3203%" y="501" width="0.0779%" height="15" fill="rgb(254,15,16)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.3203%" y="485" width="0.0779%" height="15" fill="rgb(209,147,42)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3203%" y="469" width="0.0779%" height="15" fill="rgb(208,5,29)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.3203%" y="453" width="0.0779%" height="15" fill="rgb(250,73,31)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3203%" y="437" width="0.0779%" height="15" fill="rgb(238,45,10)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.4762%" y="485" width="0.0779%" height="15" fill="rgb(214,104,5)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="83.4762%" y="469" width="0.0779%" height="15" fill="rgb(242,217,19)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4762%" y="453" width="0.0779%" height="15" fill="rgb(246,113,27)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4762%" y="437" width="0.0779%" height="15" fill="rgb(221,34,27)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.4762%" y="421" width="0.0779%" height="15" fill="rgb(246,109,6)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4762%" y="405" width="0.0779%" height="15" fill="rgb(217,12,25)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4762%" y="389" width="0.0779%" height="15" fill="rgb(250,195,5)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4762%" y="373" width="0.0779%" height="15" fill="rgb(244,140,45)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.5542%" y="389" width="0.0779%" height="15" fill="rgb(230,64,14)" fg:x="1072" fg:w="1"/><text x="83.8042%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.5542%" y="373" width="0.0779%" height="15" fill="rgb(206,27,27)" fg:x="1072" fg:w="1"/><text x="83.8042%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.23%)</title><rect x="83.4762%" y="517" width="0.2338%" height="15" fill="rgb(230,14,50)" fg:x="1071" fg:w="3"/><text x="83.7262%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="83.4762%" y="501" width="0.2338%" height="15" fill="rgb(237,172,14)" fg:x="1071" fg:w="3"/><text x="83.7262%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.5542%" y="485" width="0.1559%" height="15" fill="rgb(209,25,21)" fg:x="1072" fg:w="2"/><text x="83.8042%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="83.5542%" y="469" width="0.1559%" height="15" fill="rgb(248,148,22)" fg:x="1072" fg:w="2"/><text x="83.8042%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.5542%" y="453" width="0.1559%" height="15" fill="rgb(234,100,22)" fg:x="1072" fg:w="2"/><text x="83.8042%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.5542%" y="437" width="0.1559%" height="15" fill="rgb(210,20,30)" fg:x="1072" fg:w="2"/><text x="83.8042%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="83.5542%" y="421" width="0.1559%" height="15" fill="rgb(232,58,0)" fg:x="1072" fg:w="2"/><text x="83.8042%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.5542%" y="405" width="0.1559%" height="15" fill="rgb(221,68,13)" fg:x="1072" fg:w="2"/><text x="83.8042%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6321%" y="389" width="0.0779%" height="15" fill="rgb(231,194,11)" fg:x="1073" fg:w="1"/><text x="83.8821%" y="399.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupying (6 samples, 0.47%)</title><rect x="83.3983%" y="549" width="0.4677%" height="15" fill="rgb(235,51,41)" fg:x="1070" fg:w="6"/><text x="83.6483%" y="559.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.39%)</title><rect x="83.4762%" y="533" width="0.3897%" height="15" fill="rgb(240,50,32)" fg:x="1071" fg:w="5"/><text x="83.7262%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="83.7101%" y="517" width="0.1559%" height="15" fill="rgb(240,185,36)" fg:x="1074" fg:w="2"/><text x="83.9601%" y="527.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="83.7101%" y="501" width="0.1559%" height="15" fill="rgb(211,168,15)" fg:x="1074" fg:w="2"/><text x="83.9601%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.7101%" y="485" width="0.1559%" height="15" fill="rgb(221,70,0)" fg:x="1074" fg:w="2"/><text x="83.9601%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="83.7101%" y="469" width="0.1559%" height="15" fill="rgb(205,21,33)" fg:x="1074" fg:w="2"/><text x="83.9601%" y="479.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="83.7101%" y="453" width="0.1559%" height="15" fill="rgb(225,106,10)" fg:x="1074" fg:w="2"/><text x="83.9601%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="83.7101%" y="437" width="0.1559%" height="15" fill="rgb(236,200,50)" fg:x="1074" fg:w="2"/><text x="83.9601%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.7101%" y="421" width="0.1559%" height="15" fill="rgb(249,93,23)" fg:x="1074" fg:w="2"/><text x="83.9601%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;O&gt; as kernel::model::scopes::OpenScopeRefMut&lt;O&gt;&gt;::scope_mut (2 samples, 0.16%)</title><rect x="83.8659%" y="533" width="0.1559%" height="15" fill="rgb(244,115,35)" fg:x="1076" fg:w="2"/><text x="84.1159%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.8659%" y="517" width="0.1559%" height="15" fill="rgb(231,129,47)" fg:x="1076" fg:w="2"/><text x="84.1159%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.8659%" y="501" width="0.1559%" height="15" fill="rgb(225,160,50)" fg:x="1076" fg:w="2"/><text x="84.1159%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="83.8659%" y="485" width="0.1559%" height="15" fill="rgb(218,135,23)" fg:x="1076" fg:w="2"/><text x="84.1159%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="83.8659%" y="469" width="0.1559%" height="15" fill="rgb(227,119,14)" fg:x="1076" fg:w="2"/><text x="84.1159%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="83.8659%" y="453" width="0.1559%" height="15" fill="rgb(242,138,13)" fg:x="1076" fg:w="2"/><text x="84.1159%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.8659%" y="437" width="0.1559%" height="15" fill="rgb(215,11,16)" fg:x="1076" fg:w="2"/><text x="84.1159%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9439%" y="421" width="0.0779%" height="15" fill="rgb(234,170,50)" fg:x="1077" fg:w="1"/><text x="84.1939%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="84.0218%" y="533" width="0.0779%" height="15" fill="rgb(233,34,20)" fg:x="1078" fg:w="1"/><text x="84.2718%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0218%" y="517" width="0.0779%" height="15" fill="rgb(237,100,45)" fg:x="1078" fg:w="1"/><text x="84.2718%" y="527.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::routes (5 samples, 0.39%)</title><rect x="83.8659%" y="549" width="0.3897%" height="15" fill="rgb(231,184,36)" fg:x="1076" fg:w="5"/><text x="84.1159%" y="559.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (2 samples, 0.16%)</title><rect x="84.0998%" y="533" width="0.1559%" height="15" fill="rgb(252,93,2)" fg:x="1079" fg:w="2"/><text x="84.3498%" y="543.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="84.0998%" y="517" width="0.1559%" height="15" fill="rgb(248,176,47)" fg:x="1079" fg:w="2"/><text x="84.3498%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="84.0998%" y="501" width="0.1559%" height="15" fill="rgb(249,125,23)" fg:x="1079" fg:w="2"/><text x="84.3498%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Route&gt;::serialize (2 samples, 0.16%)</title><rect x="84.0998%" y="485" width="0.1559%" height="15" fill="rgb(239,67,42)" fg:x="1079" fg:w="2"/><text x="84.3498%" y="495.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::SimpleRoute&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1777%" y="469" width="0.0779%" height="15" fill="rgb(244,162,4)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1777%" y="453" width="0.0779%" height="15" fill="rgb(214,150,38)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="463.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1777%" y="437" width="0.0779%" height="15" fill="rgb(228,211,28)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1777%" y="421" width="0.0779%" height="15" fill="rgb(212,98,48)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.2557%" y="405" width="0.1559%" height="15" fill="rgb(213,45,13)" fg:x="1081" fg:w="2"/><text x="84.5057%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="84.2557%" y="389" width="0.1559%" height="15" fill="rgb(218,35,29)" fg:x="1081" fg:w="2"/><text x="84.5057%" y="399.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (3 samples, 0.23%)</title><rect x="84.2557%" y="533" width="0.2338%" height="15" fill="rgb(244,13,3)" fg:x="1081" fg:w="3"/><text x="84.5057%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.23%)</title><rect x="84.2557%" y="517" width="0.2338%" height="15" fill="rgb(235,170,19)" fg:x="1081" fg:w="3"/><text x="84.5057%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="84.2557%" y="501" width="0.2338%" height="15" fill="rgb(233,193,43)" fg:x="1081" fg:w="3"/><text x="84.5057%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (3 samples, 0.23%)</title><rect x="84.2557%" y="485" width="0.2338%" height="15" fill="rgb(228,223,20)" fg:x="1081" fg:w="3"/><text x="84.5057%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="84.2557%" y="469" width="0.2338%" height="15" fill="rgb(208,85,54)" fg:x="1081" fg:w="3"/><text x="84.5057%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="84.2557%" y="453" width="0.2338%" height="15" fill="rgb(254,14,45)" fg:x="1081" fg:w="3"/><text x="84.5057%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.23%)</title><rect x="84.2557%" y="437" width="0.2338%" height="15" fill="rgb(247,99,29)" fg:x="1081" fg:w="3"/><text x="84.5057%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="84.2557%" y="421" width="0.2338%" height="15" fill="rgb(225,180,54)" fg:x="1081" fg:w="3"/><text x="84.5057%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4115%" y="405" width="0.0779%" height="15" fill="rgb(239,88,43)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4115%" y="389" width="0.0779%" height="15" fill="rgb(209,47,11)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="399.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="84.4895%" y="533" width="0.0779%" height="15" fill="rgb(219,179,23)" fg:x="1084" fg:w="1"/><text x="84.7395%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4895%" y="517" width="0.0779%" height="15" fill="rgb(213,183,19)" fg:x="1084" fg:w="1"/><text x="84.7395%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4895%" y="501" width="0.0779%" height="15" fill="rgb(210,11,9)" fg:x="1084" fg:w="1"/><text x="84.7395%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.4895%" y="485" width="0.0779%" height="15" fill="rgb(239,194,16)" fg:x="1084" fg:w="1"/><text x="84.7395%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4895%" y="469" width="0.0779%" height="15" fill="rgb(246,23,50)" fg:x="1084" fg:w="1"/><text x="84.7395%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4895%" y="453" width="0.0779%" height="15" fill="rgb(245,10,41)" fg:x="1084" fg:w="1"/><text x="84.7395%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4895%" y="437" width="0.0779%" height="15" fill="rgb(228,43,24)" fg:x="1084" fg:w="1"/><text x="84.7395%" y="447.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.5674%" y="485" width="0.0779%" height="15" fill="rgb(220,151,0)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.5674%" y="469" width="0.0779%" height="15" fill="rgb(232,219,10)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5674%" y="453" width="0.0779%" height="15" fill="rgb(227,217,48)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5674%" y="437" width="0.0779%" height="15" fill="rgb(210,66,35)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.5674%" y="421" width="0.0779%" height="15" fill="rgb(254,6,7)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5674%" y="405" width="0.0779%" height="15" fill="rgb(235,222,42)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5674%" y="389" width="0.0779%" height="15" fill="rgb(245,126,5)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5674%" y="373" width="0.0779%" height="15" fill="rgb(215,73,17)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.5674%" y="357" width="0.0779%" height="15" fill="rgb(219,198,52)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.5674%" y="341" width="0.0779%" height="15" fill="rgb(217,159,18)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6454%" y="453" width="0.0779%" height="15" fill="rgb(212,177,18)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6454%" y="437" width="0.0779%" height="15" fill="rgb(241,10,11)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6454%" y="421" width="0.0779%" height="15" fill="rgb(232,114,35)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.6454%" y="405" width="0.0779%" height="15" fill="rgb(238,222,8)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.6454%" y="389" width="0.0779%" height="15" fill="rgb(251,153,44)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.6454%" y="373" width="0.0779%" height="15" fill="rgb(210,140,51)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6454%" y="357" width="0.0779%" height="15" fill="rgb(222,63,0)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.6454%" y="341" width="0.0779%" height="15" fill="rgb(240,18,40)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.6454%" y="325" width="0.0779%" height="15" fill="rgb(237,88,16)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.6454%" y="309" width="0.0779%" height="15" fill="rgb(251,117,13)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.6454%" y="293" width="0.0779%" height="15" fill="rgb(251,228,8)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.6454%" y="277" width="0.0779%" height="15" fill="rgb(205,107,49)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6454%" y="261" width="0.0779%" height="15" fill="rgb(238,72,41)" fg:x="1086" fg:w="1"/><text x="84.8954%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="84.6454%" y="469" width="0.1559%" height="15" fill="rgb(248,183,52)" fg:x="1086" fg:w="2"/><text x="84.8954%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.7233%" y="453" width="0.0779%" height="15" fill="rgb(215,58,20)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.7233%" y="437" width="0.0779%" height="15" fill="rgb(209,49,13)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.7233%" y="421" width="0.0779%" height="15" fill="rgb(208,113,17)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (88 samples, 6.86%)</title><rect x="78.0203%" y="565" width="6.8589%" height="15" fill="rgb(208,14,22)" fg:x="1001" fg:w="88"/><text x="78.2703%" y="575.50">plugins_c..</text></g><g><title>plugins_core::tools::set_container (8 samples, 0.62%)</title><rect x="84.2557%" y="549" width="0.6235%" height="15" fill="rgb(222,95,2)" fg:x="1081" fg:w="8"/><text x="84.5057%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.31%)</title><rect x="84.5674%" y="533" width="0.3118%" height="15" fill="rgb(253,180,37)" fg:x="1085" fg:w="4"/><text x="84.8174%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::entity_ref (4 samples, 0.31%)</title><rect x="84.5674%" y="517" width="0.3118%" height="15" fill="rgb(250,81,33)" fg:x="1085" fg:w="4"/><text x="84.8174%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.31%)</title><rect x="84.5674%" y="501" width="0.3118%" height="15" fill="rgb(251,151,41)" fg:x="1085" fg:w="4"/><text x="84.8174%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="84.6454%" y="485" width="0.2338%" height="15" fill="rgb(210,135,17)" fg:x="1086" fg:w="3"/><text x="84.8954%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="84.8012%" y="469" width="0.0779%" height="15" fill="rgb(239,21,29)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="479.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="84.8792%" y="533" width="0.0779%" height="15" fill="rgb(231,215,16)" fg:x="1089" fg:w="1"/><text x="85.1292%" y="543.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="84.8792%" y="517" width="0.0779%" height="15" fill="rgb(239,151,54)" fg:x="1089" fg:w="1"/><text x="85.1292%" y="527.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.9571%" y="517" width="0.0779%" height="15" fill="rgb(222,122,38)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="84.9571%" y="501" width="0.0779%" height="15" fill="rgb(243,128,1)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9571%" y="485" width="0.0779%" height="15" fill="rgb(225,74,21)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9571%" y="469" width="0.0779%" height="15" fill="rgb(216,210,10)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9571%" y="453" width="0.0779%" height="15" fill="rgb(228,76,19)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9571%" y="437" width="0.0779%" height="15" fill="rgb(236,80,34)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9571%" y="421" width="0.0779%" height="15" fill="rgb(225,173,23)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9571%" y="405" width="0.0779%" height="15" fill="rgb(253,38,1)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9571%" y="389" width="0.0779%" height="15" fill="rgb(206,155,35)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9571%" y="373" width="0.0779%" height="15" fill="rgb(254,27,53)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9571%" y="357" width="0.0779%" height="15" fill="rgb(225,52,41)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9571%" y="341" width="0.0779%" height="15" fill="rgb(244,53,18)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.9571%" y="325" width="0.0779%" height="15" fill="rgb(254,206,48)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.9571%" y="309" width="0.0779%" height="15" fill="rgb(236,182,23)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.9571%" y="293" width="0.0779%" height="15" fill="rgb(236,191,37)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.9571%" y="277" width="0.0779%" height="15" fill="rgb(245,53,8)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9571%" y="261" width="0.0779%" height="15" fill="rgb(245,147,9)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="85.0351%" y="485" width="0.0779%" height="15" fill="rgb(218,24,48)" fg:x="1091" fg:w="1"/><text x="85.2851%" y="495.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.0351%" y="469" width="0.0779%" height="15" fill="rgb(254,23,9)" fg:x="1091" fg:w="1"/><text x="85.2851%" y="479.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::MutCoreProps&lt;kernel::model::props::Properties&gt;&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.0351%" y="453" width="0.0779%" height="15" fill="rgb(244,105,9)" fg:x="1091" fg:w="1"/><text x="85.2851%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0351%" y="437" width="0.0779%" height="15" fill="rgb(212,142,22)" fg:x="1091" fg:w="1"/><text x="85.2851%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.0351%" y="421" width="0.0779%" height="15" fill="rgb(221,114,49)" fg:x="1091" fg:w="1"/><text x="85.2851%" y="431.50"></text></g><g><title>burrow_bon::perms::_::&lt;impl serde::ser::Serialize for burrow_bon::perms::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1910%" y="453" width="0.0779%" height="15" fill="rgb(223,210,25)" fg:x="1093" fg:w="1"/><text x="85.4410%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1910%" y="437" width="0.0779%" height="15" fill="rgb(235,162,44)" fg:x="1093" fg:w="1"/><text x="85.4410%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1910%" y="421" width="0.0779%" height="15" fill="rgb(237,65,45)" fg:x="1093" fg:w="1"/><text x="85.4410%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1910%" y="405" width="0.0779%" height="15" fill="rgb(208,79,9)" fg:x="1093" fg:w="1"/><text x="85.4410%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="85.0351%" y="517" width="0.3118%" height="15" fill="rgb(215,228,8)" fg:x="1091" fg:w="4"/><text x="85.2851%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="85.0351%" y="501" width="0.3118%" height="15" fill="rgb(205,185,17)" fg:x="1091" fg:w="4"/><text x="85.2851%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.23%)</title><rect x="85.1130%" y="485" width="0.2338%" height="15" fill="rgb(213,62,36)" fg:x="1092" fg:w="3"/><text x="85.3630%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="85.1130%" y="469" width="0.2338%" height="15" fill="rgb(209,34,9)" fg:x="1092" fg:w="3"/><text x="85.3630%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.2689%" y="453" width="0.0779%" height="15" fill="rgb(246,151,27)" fg:x="1094" fg:w="1"/><text x="85.5189%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="85.2689%" y="437" width="0.0779%" height="15" fill="rgb(218,206,3)" fg:x="1094" fg:w="1"/><text x="85.5189%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.2689%" y="421" width="0.0779%" height="15" fill="rgb(242,202,1)" fg:x="1094" fg:w="1"/><text x="85.5189%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2689%" y="405" width="0.0779%" height="15" fill="rgb(227,185,16)" fg:x="1094" fg:w="1"/><text x="85.5189%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.2689%" y="389" width="0.0779%" height="15" fill="rgb(241,1,14)" fg:x="1094" fg:w="1"/><text x="85.5189%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2689%" y="373" width="0.0779%" height="15" fill="rgb(212,113,25)" fg:x="1094" fg:w="1"/><text x="85.5189%" y="383.50"></text></g><g><title>plugins_core::build::Build::save (7 samples, 0.55%)</title><rect x="84.9571%" y="533" width="0.5456%" height="15" fill="rgb(247,37,43)" fg:x="1090" fg:w="7"/><text x="85.2071%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="85.3468%" y="517" width="0.1559%" height="15" fill="rgb(226,54,8)" fg:x="1095" fg:w="2"/><text x="85.5968%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.3468%" y="501" width="0.1559%" height="15" fill="rgb(251,205,25)" fg:x="1095" fg:w="2"/><text x="85.5968%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.3468%" y="485" width="0.1559%" height="15" fill="rgb(246,87,35)" fg:x="1095" fg:w="2"/><text x="85.5968%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (9 samples, 0.70%)</title><rect x="84.8792%" y="565" width="0.7015%" height="15" fill="rgb(251,145,46)" fg:x="1089" fg:w="9"/><text x="85.1292%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.70%)</title><rect x="84.8792%" y="549" width="0.7015%" height="15" fill="rgb(210,210,33)" fg:x="1089" fg:w="9"/><text x="85.1292%" y="559.50"></text></g><g><title>plugins_core::build::BuildEntityPtr::occupyable (1 samples, 0.08%)</title><rect x="85.5027%" y="533" width="0.0779%" height="15" fill="rgb(221,151,11)" fg:x="1097" fg:w="1"/><text x="85.7527%" y="543.50"></text></g><g><title>kernel::model::scopes::OpenedScopeRefMut&lt;T,O&gt;::save (1 samples, 0.08%)</title><rect x="85.5027%" y="517" width="0.0779%" height="15" fill="rgb(208,160,28)" fg:x="1097" fg:w="1"/><text x="85.7527%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::StoreScope&gt;::store_scope (1 samples, 0.08%)</title><rect x="85.5027%" y="501" width="0.0779%" height="15" fill="rgb(243,69,29)" fg:x="1097" fg:w="1"/><text x="85.7527%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5027%" y="485" width="0.0779%" height="15" fill="rgb(224,144,4)" fg:x="1097" fg:w="1"/><text x="85.7527%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (1 samples, 0.08%)</title><rect x="85.6586%" y="533" width="0.0779%" height="15" fill="rgb(211,140,38)" fg:x="1099" fg:w="1"/><text x="85.9086%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="85.6586%" y="517" width="0.0779%" height="15" fill="rgb(252,189,15)" fg:x="1099" fg:w="1"/><text x="85.9086%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.6586%" y="501" width="0.0779%" height="15" fill="rgb(251,175,23)" fg:x="1099" fg:w="1"/><text x="85.9086%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_name (4 samples, 0.31%)</title><rect x="85.5807%" y="549" width="0.3118%" height="15" fill="rgb(212,184,11)" fg:x="1098" fg:w="4"/><text x="85.8307%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="85.7366%" y="533" width="0.1559%" height="15" fill="rgb(217,205,6)" fg:x="1100" fg:w="2"/><text x="85.9866%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.7366%" y="517" width="0.1559%" height="15" fill="rgb(235,45,45)" fg:x="1100" fg:w="2"/><text x="85.9866%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.7366%" y="501" width="0.1559%" height="15" fill="rgb(211,157,53)" fg:x="1100" fg:w="2"/><text x="85.9866%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="85.7366%" y="485" width="0.1559%" height="15" fill="rgb(212,13,8)" fg:x="1100" fg:w="2"/><text x="85.9866%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="85.7366%" y="469" width="0.1559%" height="15" fill="rgb(218,80,36)" fg:x="1100" fg:w="2"/><text x="85.9866%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8145%" y="453" width="0.0779%" height="15" fill="rgb(211,123,43)" fg:x="1101" fg:w="1"/><text x="86.0645%" y="463.50"></text></g><g><title>&lt;T as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.8924%" y="533" width="0.0779%" height="15" fill="rgb(206,165,2)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="85.8924%" y="517" width="0.0779%" height="15" fill="rgb(248,63,35)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8924%" y="501" width="0.0779%" height="15" fill="rgb(219,133,41)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8924%" y="485" width="0.0779%" height="15" fill="rgb(206,175,46)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.8924%" y="469" width="0.0779%" height="15" fill="rgb(224,41,35)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8924%" y="453" width="0.0779%" height="15" fill="rgb(226,113,24)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8924%" y="437" width="0.0779%" height="15" fill="rgb(219,51,41)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8924%" y="421" width="0.0779%" height="15" fill="rgb(220,145,47)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.8924%" y="405" width="0.0779%" height="15" fill="rgb(239,121,47)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.0483%" y="517" width="0.0779%" height="15" fill="rgb(207,60,40)" fg:x="1104" fg:w="1"/><text x="86.2983%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="86.1263%" y="517" width="0.1559%" height="15" fill="rgb(224,229,11)" fg:x="1105" fg:w="2"/><text x="86.3763%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.1263%" y="501" width="0.1559%" height="15" fill="rgb(252,28,32)" fg:x="1105" fg:w="2"/><text x="86.3763%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.1263%" y="485" width="0.1559%" height="15" fill="rgb(207,52,49)" fg:x="1105" fg:w="2"/><text x="86.3763%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.55%)</title><rect x="85.9704%" y="533" width="0.5456%" height="15" fill="rgb(243,51,50)" fg:x="1103" fg:w="7"/><text x="86.2204%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="86.2822%" y="517" width="0.2338%" height="15" fill="rgb(212,92,21)" fg:x="1107" fg:w="3"/><text x="86.5322%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="86.2822%" y="501" width="0.2338%" height="15" fill="rgb(230,183,50)" fg:x="1107" fg:w="3"/><text x="86.5322%" y="511.50"></text></g><g><title>&lt;T as kernel::model::props::MutCoreProps&lt;T&gt;&gt;::set_gid (3 samples, 0.23%)</title><rect x="86.2822%" y="485" width="0.2338%" height="15" fill="rgb(225,48,9)" fg:x="1107" fg:w="3"/><text x="86.5322%" y="495.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScopeMut&lt;O&gt;&gt;::scope_mut (3 samples, 0.23%)</title><rect x="86.2822%" y="469" width="0.2338%" height="15" fill="rgb(254,44,4)" fg:x="1107" fg:w="3"/><text x="86.5322%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="86.2822%" y="453" width="0.2338%" height="15" fill="rgb(252,128,37)" fg:x="1107" fg:w="3"/><text x="86.5322%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="86.2822%" y="437" width="0.2338%" height="15" fill="rgb(227,178,8)" fg:x="1107" fg:w="3"/><text x="86.5322%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.23%)</title><rect x="86.2822%" y="421" width="0.2338%" height="15" fill="rgb(205,206,32)" fg:x="1107" fg:w="3"/><text x="86.5322%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.3601%" y="405" width="0.1559%" height="15" fill="rgb(220,218,22)" fg:x="1108" fg:w="2"/><text x="86.6101%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.3601%" y="389" width="0.1559%" height="15" fill="rgb(236,41,28)" fg:x="1108" fg:w="2"/><text x="86.6101%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.3601%" y="373" width="0.1559%" height="15" fill="rgb(219,37,7)" fg:x="1108" fg:w="2"/><text x="86.6101%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.4380%" y="357" width="0.0779%" height="15" fill="rgb(206,160,15)" fg:x="1109" fg:w="1"/><text x="86.6880%" y="367.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (182 samples, 14.19%)</title><rect x="72.4864%" y="581" width="14.1855%" height="15" fill="rgb(208,82,21)" fg:x="930" fg:w="182"/><text x="72.7364%" y="591.50">&lt;tests::HoldingKeyInVe..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (14 samples, 1.09%)</title><rect x="85.5807%" y="565" width="1.0912%" height="15" fill="rgb(226,130,25)" fg:x="1098" fg:w="14"/><text x="85.8307%" y="575.50"></text></g><g><title>plugins_core::build::Build::save (10 samples, 0.78%)</title><rect x="85.8924%" y="549" width="0.7794%" height="15" fill="rgb(212,72,24)" fg:x="1102" fg:w="10"/><text x="86.1424%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="86.5160%" y="533" width="0.1559%" height="15" fill="rgb(206,28,16)" fg:x="1110" fg:w="2"/><text x="86.7660%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5939%" y="517" width="0.0779%" height="15" fill="rgb(249,41,5)" fg:x="1111" fg:w="1"/><text x="86.8439%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5939%" y="501" width="0.0779%" height="15" fill="rgb(233,96,48)" fg:x="1111" fg:w="1"/><text x="86.8439%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.6719%" y="533" width="0.0779%" height="15" fill="rgb(240,198,11)" fg:x="1112" fg:w="1"/><text x="86.9219%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="86.6719%" y="517" width="0.0779%" height="15" fill="rgb(209,175,35)" fg:x="1112" fg:w="1"/><text x="86.9219%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7498%" y="533" width="0.0779%" height="15" fill="rgb(214,40,51)" fg:x="1113" fg:w="1"/><text x="86.9998%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.9057%" y="453" width="0.1559%" height="15" fill="rgb(252,56,4)" fg:x="1115" fg:w="2"/><text x="87.1557%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9836%" y="437" width="0.0779%" height="15" fill="rgb(219,131,5)" fg:x="1116" fg:w="1"/><text x="87.2336%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.9836%" y="421" width="0.0779%" height="15" fill="rgb(223,67,53)" fg:x="1116" fg:w="1"/><text x="87.2336%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.9836%" y="405" width="0.0779%" height="15" fill="rgb(227,154,8)" fg:x="1116" fg:w="1"/><text x="87.2336%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.9836%" y="389" width="0.0779%" height="15" fill="rgb(216,174,51)" fg:x="1116" fg:w="1"/><text x="87.2336%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.9836%" y="373" width="0.0779%" height="15" fill="rgb(239,60,34)" fg:x="1116" fg:w="1"/><text x="87.2336%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.9836%" y="357" width="0.0779%" height="15" fill="rgb(236,165,48)" fg:x="1116" fg:w="1"/><text x="87.2336%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.31%)</title><rect x="86.9057%" y="469" width="0.3118%" height="15" fill="rgb(210,37,26)" fg:x="1115" fg:w="4"/><text x="87.1557%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.0616%" y="453" width="0.1559%" height="15" fill="rgb(211,3,17)" fg:x="1117" fg:w="2"/><text x="87.3116%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.1395%" y="437" width="0.0779%" height="15" fill="rgb(234,88,49)" fg:x="1118" fg:w="1"/><text x="87.3895%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.1395%" y="421" width="0.0779%" height="15" fill="rgb(233,40,17)" fg:x="1118" fg:w="1"/><text x="87.3895%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.2954%" y="405" width="0.1559%" height="15" fill="rgb(235,127,31)" fg:x="1120" fg:w="2"/><text x="87.5454%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.2954%" y="389" width="0.1559%" height="15" fill="rgb(248,167,17)" fg:x="1120" fg:w="2"/><text x="87.5454%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.4513%" y="389" width="0.0779%" height="15" fill="rgb(218,179,8)" fg:x="1122" fg:w="1"/><text x="87.7013%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.4513%" y="373" width="0.0779%" height="15" fill="rgb(216,92,14)" fg:x="1122" fg:w="1"/><text x="87.7013%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.4513%" y="357" width="0.0779%" height="15" fill="rgb(221,198,46)" fg:x="1122" fg:w="1"/><text x="87.7013%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.5292%" y="373" width="0.0779%" height="15" fill="rgb(244,7,25)" fg:x="1123" fg:w="1"/><text x="87.7792%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="87.2954%" y="437" width="0.3897%" height="15" fill="rgb(233,75,6)" fg:x="1120" fg:w="5"/><text x="87.5454%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="87.2954%" y="421" width="0.3897%" height="15" fill="rgb(240,189,41)" fg:x="1120" fg:w="5"/><text x="87.5454%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="87.4513%" y="405" width="0.2338%" height="15" fill="rgb(237,157,21)" fg:x="1122" fg:w="3"/><text x="87.7013%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="87.5292%" y="389" width="0.1559%" height="15" fill="rgb(210,136,49)" fg:x="1123" fg:w="2"/><text x="87.7792%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.6072%" y="373" width="0.0779%" height="15" fill="rgb(210,68,29)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6072%" y="357" width="0.0779%" height="15" fill="rgb(247,207,20)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.7631%" y="405" width="0.1559%" height="15" fill="rgb(224,73,48)" fg:x="1126" fg:w="2"/><text x="88.0131%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.7631%" y="389" width="0.1559%" height="15" fill="rgb(215,136,47)" fg:x="1126" fg:w="2"/><text x="88.0131%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.7631%" y="373" width="0.1559%" height="15" fill="rgb(232,222,16)" fg:x="1126" fg:w="2"/><text x="88.0131%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.7631%" y="357" width="0.1559%" height="15" fill="rgb(249,202,47)" fg:x="1126" fg:w="2"/><text x="88.0131%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.8410%" y="341" width="0.0779%" height="15" fill="rgb(236,56,8)" fg:x="1127" fg:w="1"/><text x="88.0910%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.8410%" y="325" width="0.0779%" height="15" fill="rgb(222,6,3)" fg:x="1127" fg:w="1"/><text x="88.0910%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.8410%" y="309" width="0.0779%" height="15" fill="rgb(254,222,28)" fg:x="1127" fg:w="1"/><text x="88.0910%" y="319.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="87.6851%" y="421" width="0.3897%" height="15" fill="rgb(219,57,23)" fg:x="1125" fg:w="5"/><text x="87.9351%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="87.9189%" y="405" width="0.1559%" height="15" fill="rgb(251,106,48)" fg:x="1128" fg:w="2"/><text x="88.1689%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.9189%" y="389" width="0.1559%" height="15" fill="rgb(242,2,23)" fg:x="1128" fg:w="2"/><text x="88.1689%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.9969%" y="373" width="0.0779%" height="15" fill="rgb(212,109,31)" fg:x="1129" fg:w="1"/><text x="88.2469%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.9969%" y="357" width="0.0779%" height="15" fill="rgb(241,9,22)" fg:x="1129" fg:w="1"/><text x="88.2469%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.01%)</title><rect x="87.2175%" y="453" width="1.0133%" height="15" fill="rgb(209,64,27)" fg:x="1119" fg:w="13"/><text x="87.4675%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="87.6851%" y="437" width="0.5456%" height="15" fill="rgb(248,13,44)" fg:x="1125" fg:w="7"/><text x="87.9351%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.0748%" y="421" width="0.1559%" height="15" fill="rgb(213,86,6)" fg:x="1130" fg:w="2"/><text x="88.3248%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.1528%" y="405" width="0.0779%" height="15" fill="rgb(247,11,18)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.40%)</title><rect x="86.9057%" y="485" width="1.4030%" height="15" fill="rgb(252,31,11)" fg:x="1115" fg:w="18"/><text x="87.1557%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.09%)</title><rect x="87.2175%" y="469" width="1.0912%" height="15" fill="rgb(215,63,51)" fg:x="1119" fg:w="14"/><text x="87.4675%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.2307%" y="453" width="0.0779%" height="15" fill="rgb(222,180,4)" fg:x="1132" fg:w="1"/><text x="88.4807%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.3866%" y="437" width="0.0779%" height="15" fill="rgb(233,4,23)" fg:x="1134" fg:w="1"/><text x="88.6366%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5425%" y="421" width="0.0779%" height="15" fill="rgb(230,116,22)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="88.3087%" y="485" width="0.3897%" height="15" fill="rgb(222,20,14)" fg:x="1133" fg:w="5"/><text x="88.5587%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="88.3087%" y="469" width="0.3897%" height="15" fill="rgb(210,176,43)" fg:x="1133" fg:w="5"/><text x="88.5587%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="88.3087%" y="453" width="0.3897%" height="15" fill="rgb(219,67,32)" fg:x="1133" fg:w="5"/><text x="88.5587%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="88.4645%" y="437" width="0.2338%" height="15" fill="rgb(228,91,39)" fg:x="1135" fg:w="3"/><text x="88.7145%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.6204%" y="421" width="0.0779%" height="15" fill="rgb(254,63,14)" fg:x="1137" fg:w="1"/><text x="88.8704%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.6204%" y="405" width="0.0779%" height="15" fill="rgb(216,171,39)" fg:x="1137" fg:w="1"/><text x="88.8704%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6204%" y="389" width="0.0779%" height="15" fill="rgb(248,68,25)" fg:x="1137" fg:w="1"/><text x="88.8704%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="88.6984%" y="437" width="0.1559%" height="15" fill="rgb(239,63,16)" fg:x="1138" fg:w="2"/><text x="88.9484%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="88.8542%" y="421" width="0.1559%" height="15" fill="rgb(225,111,43)" fg:x="1140" fg:w="2"/><text x="89.1042%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="89.0101%" y="421" width="0.2338%" height="15" fill="rgb(246,165,17)" fg:x="1142" fg:w="3"/><text x="89.2601%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.0881%" y="405" width="0.1559%" height="15" fill="rgb(208,124,1)" fg:x="1143" fg:w="2"/><text x="89.3381%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.2440%" y="389" width="0.0779%" height="15" fill="rgb(234,147,33)" fg:x="1145" fg:w="1"/><text x="89.4940%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.2440%" y="373" width="0.0779%" height="15" fill="rgb(240,86,30)" fg:x="1145" fg:w="1"/><text x="89.4940%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.2440%" y="357" width="0.0779%" height="15" fill="rgb(237,34,51)" fg:x="1145" fg:w="1"/><text x="89.4940%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2440%" y="341" width="0.0779%" height="15" fill="rgb(232,131,41)" fg:x="1145" fg:w="1"/><text x="89.4940%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.78%)</title><rect x="88.6984%" y="453" width="0.7794%" height="15" fill="rgb(227,129,53)" fg:x="1138" fg:w="10"/><text x="88.9484%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.62%)</title><rect x="88.8542%" y="437" width="0.6235%" height="15" fill="rgb(230,90,35)" fg:x="1140" fg:w="8"/><text x="89.1042%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="89.2440%" y="421" width="0.2338%" height="15" fill="rgb(248,88,27)" fg:x="1145" fg:w="3"/><text x="89.4940%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="89.2440%" y="405" width="0.2338%" height="15" fill="rgb(223,18,17)" fg:x="1145" fg:w="3"/><text x="89.4940%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.3219%" y="389" width="0.1559%" height="15" fill="rgb(241,11,10)" fg:x="1146" fg:w="2"/><text x="89.5719%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.3998%" y="373" width="0.0779%" height="15" fill="rgb(232,111,52)" fg:x="1147" fg:w="1"/><text x="89.6498%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3998%" y="357" width="0.0779%" height="15" fill="rgb(228,67,8)" fg:x="1147" fg:w="1"/><text x="89.6498%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4778%" y="453" width="0.0779%" height="15" fill="rgb(251,168,31)" fg:x="1148" fg:w="1"/><text x="89.7278%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (13 samples, 1.01%)</title><rect x="88.6984%" y="469" width="1.0133%" height="15" fill="rgb(249,164,11)" fg:x="1138" fg:w="13"/><text x="88.9484%" y="479.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="89.5557%" y="453" width="0.1559%" height="15" fill="rgb(239,81,9)" fg:x="1149" fg:w="2"/><text x="89.8057%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6337%" y="437" width="0.0779%" height="15" fill="rgb(222,145,38)" fg:x="1150" fg:w="1"/><text x="89.8837%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6337%" y="421" width="0.0779%" height="15" fill="rgb(238,80,54)" fg:x="1150" fg:w="1"/><text x="89.8837%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6337%" y="405" width="0.0779%" height="15" fill="rgb(237,116,16)" fg:x="1150" fg:w="1"/><text x="89.8837%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="89.7896%" y="437" width="0.2338%" height="15" fill="rgb(218,135,19)" fg:x="1152" fg:w="3"/><text x="90.0396%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.0234%" y="437" width="0.0779%" height="15" fill="rgb(216,207,44)" fg:x="1155" fg:w="1"/><text x="90.2734%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.0234%" y="421" width="0.0779%" height="15" fill="rgb(226,152,40)" fg:x="1155" fg:w="1"/><text x="90.2734%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0234%" y="405" width="0.0779%" height="15" fill="rgb(219,98,35)" fg:x="1155" fg:w="1"/><text x="90.2734%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.1793%" y="405" width="0.0779%" height="15" fill="rgb(222,136,46)" fg:x="1157" fg:w="1"/><text x="90.4293%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2572%" y="373" width="0.0779%" height="15" fill="rgb(222,71,8)" fg:x="1158" fg:w="1"/><text x="90.5072%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.2572%" y="389" width="0.1559%" height="15" fill="rgb(209,89,53)" fg:x="1158" fg:w="2"/><text x="90.5072%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.3352%" y="373" width="0.0779%" height="15" fill="rgb(210,97,51)" fg:x="1159" fg:w="1"/><text x="90.5852%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.6469%" y="293" width="0.0779%" height="15" fill="rgb(248,65,21)" fg:x="1163" fg:w="1"/><text x="90.8969%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.6469%" y="277" width="0.0779%" height="15" fill="rgb(222,5,31)" fg:x="1163" fg:w="1"/><text x="90.8969%" y="287.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="90.4131%" y="389" width="0.3897%" height="15" fill="rgb(241,16,30)" fg:x="1160" fg:w="5"/><text x="90.6631%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="90.4131%" y="373" width="0.3897%" height="15" fill="rgb(215,86,30)" fg:x="1160" fg:w="5"/><text x="90.6631%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="90.4910%" y="357" width="0.3118%" height="15" fill="rgb(235,26,44)" fg:x="1161" fg:w="4"/><text x="90.7410%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="90.4910%" y="341" width="0.3118%" height="15" fill="rgb(228,147,14)" fg:x="1161" fg:w="4"/><text x="90.7410%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="90.4910%" y="325" width="0.3118%" height="15" fill="rgb(253,38,50)" fg:x="1161" fg:w="4"/><text x="90.7410%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="90.4910%" y="309" width="0.3118%" height="15" fill="rgb(251,151,16)" fg:x="1161" fg:w="4"/><text x="90.7410%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7249%" y="293" width="0.0779%" height="15" fill="rgb(224,64,19)" fg:x="1164" fg:w="1"/><text x="90.9749%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.9587%" y="357" width="0.1559%" height="15" fill="rgb(235,214,47)" fg:x="1167" fg:w="2"/><text x="91.2087%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.9587%" y="341" width="0.1559%" height="15" fill="rgb(218,15,19)" fg:x="1167" fg:w="2"/><text x="91.2087%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.09%)</title><rect x="90.2572%" y="405" width="1.0912%" height="15" fill="rgb(247,209,3)" fg:x="1158" fg:w="14"/><text x="90.5072%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="90.8028%" y="389" width="0.5456%" height="15" fill="rgb(217,29,2)" fg:x="1165" fg:w="7"/><text x="91.0528%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="90.9587%" y="373" width="0.3897%" height="15" fill="rgb(234,9,9)" fg:x="1167" fg:w="5"/><text x="91.2087%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="91.1146%" y="357" width="0.2338%" height="15" fill="rgb(207,43,14)" fg:x="1169" fg:w="3"/><text x="91.3646%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.1925%" y="341" width="0.1559%" height="15" fill="rgb(216,219,36)" fg:x="1170" fg:w="2"/><text x="91.4425%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.25%)</title><rect x="90.1793%" y="421" width="1.2471%" height="15" fill="rgb(238,12,26)" fg:x="1157" fg:w="16"/><text x="90.4293%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="91.3484%" y="405" width="0.0779%" height="15" fill="rgb(226,67,30)" fg:x="1172" fg:w="1"/><text x="91.5984%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.79%)</title><rect x="89.7116%" y="469" width="1.7927%" height="15" fill="rgb(229,154,7)" fg:x="1151" fg:w="23"/><text x="89.9616%" y="479.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 1.79%)</title><rect x="89.7116%" y="453" width="1.7927%" height="15" fill="rgb(249,90,18)" fg:x="1151" fg:w="23"/><text x="89.9616%" y="463.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.40%)</title><rect x="90.1013%" y="437" width="1.4030%" height="15" fill="rgb(223,53,15)" fg:x="1156" fg:w="18"/><text x="90.3513%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4263%" y="421" width="0.0779%" height="15" fill="rgb(253,86,38)" fg:x="1173" fg:w="1"/><text x="91.6763%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.8940%" y="293" width="0.0779%" height="15" fill="rgb(222,198,9)" fg:x="1179" fg:w="1"/><text x="92.1440%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8940%" y="277" width="0.0779%" height="15" fill="rgb(240,146,25)" fg:x="1179" fg:w="1"/><text x="92.1440%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.8940%" y="261" width="0.0779%" height="15" fill="rgb(225,38,10)" fg:x="1179" fg:w="1"/><text x="92.1440%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8940%" y="245" width="0.0779%" height="15" fill="rgb(246,93,4)" fg:x="1179" fg:w="1"/><text x="92.1440%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="91.8940%" y="325" width="0.2338%" height="15" fill="rgb(222,55,18)" fg:x="1179" fg:w="3"/><text x="92.1440%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="91.8940%" y="309" width="0.2338%" height="15" fill="rgb(233,137,48)" fg:x="1179" fg:w="3"/><text x="92.1440%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.9719%" y="293" width="0.1559%" height="15" fill="rgb(214,8,54)" fg:x="1180" fg:w="2"/><text x="92.2219%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0499%" y="277" width="0.0779%" height="15" fill="rgb(206,75,4)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0499%" y="261" width="0.0779%" height="15" fill="rgb(238,171,14)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.62%)</title><rect x="91.6602%" y="373" width="0.6235%" height="15" fill="rgb(233,70,41)" fg:x="1176" fg:w="8"/><text x="91.9102%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.62%)</title><rect x="91.6602%" y="357" width="0.6235%" height="15" fill="rgb(214,68,36)" fg:x="1176" fg:w="8"/><text x="91.9102%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.55%)</title><rect x="91.7381%" y="341" width="0.5456%" height="15" fill="rgb(223,29,5)" fg:x="1177" fg:w="7"/><text x="91.9881%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.1278%" y="325" width="0.1559%" height="15" fill="rgb(251,22,40)" fg:x="1182" fg:w="2"/><text x="92.3778%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.2058%" y="309" width="0.0779%" height="15" fill="rgb(210,67,41)" fg:x="1183" fg:w="1"/><text x="92.4558%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.2058%" y="293" width="0.0779%" height="15" fill="rgb(225,177,31)" fg:x="1183" fg:w="1"/><text x="92.4558%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.2837%" y="357" width="0.0779%" height="15" fill="rgb(221,229,11)" fg:x="1184" fg:w="1"/><text x="92.5337%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="91.5822%" y="405" width="0.8574%" height="15" fill="rgb(247,172,52)" fg:x="1175" fg:w="11"/><text x="91.8322%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="91.5822%" y="389" width="0.8574%" height="15" fill="rgb(212,73,19)" fg:x="1175" fg:w="11"/><text x="91.8322%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="92.2837%" y="373" width="0.1559%" height="15" fill="rgb(244,7,46)" fg:x="1184" fg:w="2"/><text x="92.5337%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3617%" y="357" width="0.0779%" height="15" fill="rgb(230,113,20)" fg:x="1185" fg:w="1"/><text x="92.6117%" y="367.50"></text></g><g><title>engine::session::state::State::close (76 samples, 5.92%)</title><rect x="86.6719%" y="565" width="5.9236%" height="15" fill="rgb(209,97,30)" fg:x="1112" fg:w="76"/><text x="86.9219%" y="575.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (76 samples, 5.92%)</title><rect x="86.6719%" y="549" width="5.9236%" height="15" fill="rgb(243,89,12)" fg:x="1112" fg:w="76"/><text x="86.9219%" y="559.50">engine::..</text></g><g><title>core::iter::adapters::try_process (74 samples, 5.77%)</title><rect x="86.8277%" y="533" width="5.7677%" height="15" fill="rgb(228,32,19)" fg:x="1114" fg:w="74"/><text x="87.0777%" y="543.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 5.77%)</title><rect x="86.8277%" y="517" width="5.7677%" height="15" fill="rgb(248,25,17)" fg:x="1114" fg:w="74"/><text x="87.0777%" y="527.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (74 samples, 5.77%)</title><rect x="86.8277%" y="501" width="5.7677%" height="15" fill="rgb(232,161,29)" fg:x="1114" fg:w="74"/><text x="87.0777%" y="511.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (50 samples, 3.90%)</title><rect x="88.6984%" y="485" width="3.8971%" height="15" fill="rgb(251,192,11)" fg:x="1138" fg:w="50"/><text x="88.9484%" y="495.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.09%)</title><rect x="91.5043%" y="469" width="1.0912%" height="15" fill="rgb(240,47,32)" fg:x="1174" fg:w="14"/><text x="91.7543%" y="479.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.09%)</title><rect x="91.5043%" y="453" width="1.0912%" height="15" fill="rgb(250,16,45)" fg:x="1174" fg:w="14"/><text x="91.7543%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.09%)</title><rect x="91.5043%" y="437" width="1.0912%" height="15" fill="rgb(227,217,42)" fg:x="1174" fg:w="14"/><text x="91.7543%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.01%)</title><rect x="91.5822%" y="421" width="1.0133%" height="15" fill="rgb(206,82,54)" fg:x="1175" fg:w="13"/><text x="91.8322%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="92.4396%" y="405" width="0.1559%" height="15" fill="rgb(243,145,25)" fg:x="1186" fg:w="2"/><text x="92.6896%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5175%" y="389" width="0.0779%" height="15" fill="rgb(207,166,24)" fg:x="1187" fg:w="1"/><text x="92.7675%" y="399.50"></text></g><g><title>engine::session::Session::close (79 samples, 6.16%)</title><rect x="86.6719%" y="581" width="6.1574%" height="15" fill="rgb(215,191,44)" fg:x="1112" fg:w="79"/><text x="86.9219%" y="591.50">engine::..</text></g><g><title>kernel::plugins::SessionPlugins::stop (3 samples, 0.23%)</title><rect x="92.5955%" y="565" width="0.2338%" height="15" fill="rgb(234,218,51)" fg:x="1188" fg:w="3"/><text x="92.8455%" y="575.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="92.8293%" y="549" width="0.0779%" height="15" fill="rgb(245,133,21)" fg:x="1191" fg:w="1"/><text x="93.0793%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="92.8293%" y="533" width="0.0779%" height="15" fill="rgb(230,136,45)" fg:x="1191" fg:w="1"/><text x="93.0793%" y="543.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="92.8293%" y="517" width="0.0779%" height="15" fill="rgb(247,63,43)" fg:x="1191" fg:w="1"/><text x="93.0793%" y="527.50"></text></g><g><title>core::fmt::Formatter::debug_tuple (1 samples, 0.08%)</title><rect x="92.9852%" y="373" width="0.0779%" height="15" fill="rgb(254,223,31)" fg:x="1193" fg:w="1"/><text x="93.2352%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.08%)</title><rect x="93.0631%" y="357" width="0.0779%" height="15" fill="rgb(236,185,0)" fg:x="1194" fg:w="1"/><text x="93.3131%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="93.0631%" y="341" width="0.0779%" height="15" fill="rgb(231,139,46)" fg:x="1194" fg:w="1"/><text x="93.3131%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.08%)</title><rect x="93.0631%" y="325" width="0.0779%" height="15" fill="rgb(236,147,31)" fg:x="1194" fg:w="1"/><text x="93.3131%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.23%)</title><rect x="92.9852%" y="389" width="0.2338%" height="15" fill="rgb(225,222,22)" fg:x="1193" fg:w="3"/><text x="93.2352%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (2 samples, 0.16%)</title><rect x="93.0631%" y="373" width="0.1559%" height="15" fill="rgb(225,193,14)" fg:x="1194" fg:w="2"/><text x="93.3131%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (1 samples, 0.08%)</title><rect x="93.1411%" y="357" width="0.0779%" height="15" fill="rgb(253,193,46)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="93.1411%" y="341" width="0.0779%" height="15" fill="rgb(218,187,39)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (1 samples, 0.08%)</title><rect x="93.1411%" y="325" width="0.0779%" height="15" fill="rgb(227,162,48)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="93.1411%" y="309" width="0.0779%" height="15" fill="rgb(222,25,5)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1411%" y="293" width="0.0779%" height="15" fill="rgb(211,205,16)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1411%" y="277" width="0.0779%" height="15" fill="rgb(244,191,2)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.1411%" y="261" width="0.0779%" height="15" fill="rgb(248,159,12)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.1411%" y="245" width="0.0779%" height="15" fill="rgb(235,204,17)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.1411%" y="229" width="0.0779%" height="15" fill="rgb(240,21,27)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.1411%" y="213" width="0.0779%" height="15" fill="rgb(224,170,31)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.1411%" y="197" width="0.0779%" height="15" fill="rgb(223,145,32)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="207.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.08%)</title><rect x="93.2190%" y="373" width="0.0779%" height="15" fill="rgb(243,100,5)" fg:x="1196" fg:w="1"/><text x="93.4690%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="93.2190%" y="357" width="0.0779%" height="15" fill="rgb(242,131,51)" fg:x="1196" fg:w="1"/><text x="93.4690%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.08%)</title><rect x="93.2190%" y="341" width="0.0779%" height="15" fill="rgb(223,156,46)" fg:x="1196" fg:w="1"/><text x="93.4690%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="93.2190%" y="389" width="0.1559%" height="15" fill="rgb(215,10,40)" fg:x="1196" fg:w="2"/><text x="93.4690%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.08%)</title><rect x="93.2970%" y="373" width="0.0779%" height="15" fill="rgb(233,155,0)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.08%)</title><rect x="93.2970%" y="357" width="0.0779%" height="15" fill="rgb(247,78,6)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (1 samples, 0.08%)</title><rect x="93.2970%" y="341" width="0.0779%" height="15" fill="rgb(237,217,21)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.2970%" y="325" width="0.0779%" height="15" fill="rgb(212,1,21)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.2970%" y="309" width="0.0779%" height="15" fill="rgb(213,7,14)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.2970%" y="293" width="0.0779%" height="15" fill="rgb(225,84,14)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.2970%" y="277" width="0.0779%" height="15" fill="rgb(239,216,39)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.2970%" y="261" width="0.0779%" height="15" fill="rgb(253,29,23)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.2970%" y="245" width="0.0779%" height="15" fill="rgb(220,167,50)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.2970%" y="229" width="0.0779%" height="15" fill="rgb(232,141,1)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.55%)</title><rect x="92.9072%" y="533" width="0.5456%" height="15" fill="rgb(222,210,1)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.55%)</title><rect x="92.9072%" y="517" width="0.5456%" height="15" fill="rgb(219,84,10)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="527.50"></text></g><g><title>core::fmt::write (7 samples, 0.55%)</title><rect x="92.9072%" y="501" width="0.5456%" height="15" fill="rgb(245,188,6)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.55%)</title><rect x="92.9072%" y="485" width="0.5456%" height="15" fill="rgb(252,139,39)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="495.50"></text></g><g><title>&lt;kernel::actions::Perform as core::fmt::Debug&gt;::fmt (7 samples, 0.55%)</title><rect x="92.9072%" y="469" width="0.5456%" height="15" fill="rgb(218,42,26)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (7 samples, 0.55%)</title><rect x="92.9072%" y="453" width="0.5456%" height="15" fill="rgb(237,226,51)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (7 samples, 0.55%)</title><rect x="92.9072%" y="437" width="0.5456%" height="15" fill="rgb(246,15,17)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (7 samples, 0.55%)</title><rect x="92.9072%" y="421" width="0.5456%" height="15" fill="rgb(228,170,42)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (7 samples, 0.55%)</title><rect x="92.9072%" y="405" width="0.5456%" height="15" fill="rgb(248,118,53)" fg:x="1192" fg:w="7"/><text x="93.1572%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="93.3749%" y="389" width="0.0779%" height="15" fill="rgb(207,30,10)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.3749%" y="373" width="0.0779%" height="15" fill="rgb(217,104,38)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.3749%" y="357" width="0.0779%" height="15" fill="rgb(211,165,26)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.3749%" y="341" width="0.0779%" height="15" fill="rgb(247,38,9)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.3749%" y="325" width="0.0779%" height="15" fill="rgb(218,187,8)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.3749%" y="309" width="0.0779%" height="15" fill="rgb(247,94,28)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.3749%" y="293" width="0.0779%" height="15" fill="rgb(218,173,30)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.3749%" y="277" width="0.0779%" height="15" fill="rgb(245,45,36)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.3749%" y="261" width="0.0779%" height="15" fill="rgb(221,172,44)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.3749%" y="245" width="0.0779%" height="15" fill="rgb(222,45,12)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="93.3749%" y="229" width="0.0779%" height="15" fill="rgb(250,10,22)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.3749%" y="213" width="0.0779%" height="15" fill="rgb(239,27,0)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="93.3749%" y="197" width="0.0779%" height="15" fill="rgb(223,118,22)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="93.3749%" y="181" width="0.0779%" height="15" fill="rgb(251,81,25)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="93.3749%" y="165" width="0.0779%" height="15" fill="rgb(237,225,53)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="175.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="93.4528%" y="533" width="0.0779%" height="15" fill="rgb(237,186,51)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="543.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new (1 samples, 0.08%)</title><rect x="93.5308%" y="517" width="0.0779%" height="15" fill="rgb(247,209,11)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="527.50"></text></g><g><title>tracing_core::callsite::register_dispatch (1 samples, 0.08%)</title><rect x="93.5308%" y="501" width="0.0779%" height="15" fill="rgb(223,109,27)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="511.50"></text></g><g><title>tracing_core::callsite::Callsites::rebuild_interest (1 samples, 0.08%)</title><rect x="93.5308%" y="485" width="0.0779%" height="15" fill="rgb(246,181,13)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="495.50"></text></g><g><title>tracing_core::callsite::dispatchers::Rebuilder::for_each (1 samples, 0.08%)</title><rect x="93.5308%" y="469" width="0.0779%" height="15" fill="rgb(234,57,44)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="479.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="93.6087%" y="405" width="0.0779%" height="15" fill="rgb(211,227,50)" fg:x="1201" fg:w="1"/><text x="93.8587%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.6087%" y="389" width="0.0779%" height="15" fill="rgb(254,57,34)" fg:x="1201" fg:w="1"/><text x="93.8587%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6087%" y="373" width="0.0779%" height="15" fill="rgb(227,212,26)" fg:x="1201" fg:w="1"/><text x="93.8587%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6867%" y="341" width="0.1559%" height="15" fill="rgb(244,169,44)" fg:x="1202" fg:w="2"/><text x="93.9367%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6867%" y="325" width="0.1559%" height="15" fill="rgb(236,135,50)" fg:x="1202" fg:w="2"/><text x="93.9367%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6867%" y="309" width="0.1559%" height="15" fill="rgb(241,89,30)" fg:x="1202" fg:w="2"/><text x="93.9367%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.6867%" y="293" width="0.1559%" height="15" fill="rgb(206,113,34)" fg:x="1202" fg:w="2"/><text x="93.9367%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6867%" y="277" width="0.1559%" height="15" fill="rgb(218,104,52)" fg:x="1202" fg:w="2"/><text x="93.9367%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6867%" y="261" width="0.1559%" height="15" fill="rgb(223,82,32)" fg:x="1202" fg:w="2"/><text x="93.9367%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7646%" y="245" width="0.0779%" height="15" fill="rgb(249,219,30)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7646%" y="229" width="0.0779%" height="15" fill="rgb(233,141,21)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.7646%" y="213" width="0.0779%" height="15" fill="rgb(252,87,44)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.7646%" y="197" width="0.0779%" height="15" fill="rgb(229,48,33)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.7646%" y="181" width="0.0779%" height="15" fill="rgb(229,23,22)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7646%" y="165" width="0.0779%" height="15" fill="rgb(244,116,16)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7646%" y="149" width="0.0779%" height="15" fill="rgb(247,45,10)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.7646%" y="133" width="0.0779%" height="15" fill="rgb(228,60,29)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.7646%" y="117" width="0.0779%" height="15" fill="rgb(205,129,15)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.7646%" y="101" width="0.0779%" height="15" fill="rgb(206,229,4)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.7646%" y="85" width="0.0779%" height="15" fill="rgb(249,191,30)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7646%" y="69" width="0.0779%" height="15" fill="rgb(250,84,54)" fg:x="1203" fg:w="1"/><text x="94.0146%" y="79.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.9205%" y="181" width="0.0779%" height="15" fill="rgb(207,25,53)" fg:x="1205" fg:w="1"/><text x="94.1705%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.9205%" y="245" width="0.1559%" height="15" fill="rgb(235,40,8)" fg:x="1205" fg:w="2"/><text x="94.1705%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="93.9205%" y="229" width="0.1559%" height="15" fill="rgb(226,169,33)" fg:x="1205" fg:w="2"/><text x="94.1705%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.9205%" y="213" width="0.1559%" height="15" fill="rgb(238,110,8)" fg:x="1205" fg:w="2"/><text x="94.1705%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.9205%" y="197" width="0.1559%" height="15" fill="rgb(251,206,12)" fg:x="1205" fg:w="2"/><text x="94.1705%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.9984%" y="181" width="0.0779%" height="15" fill="rgb(248,171,18)" fg:x="1206" fg:w="1"/><text x="94.2484%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.0764%" y="213" width="0.0779%" height="15" fill="rgb(213,65,46)" fg:x="1207" fg:w="1"/><text x="94.3264%" y="223.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="94.0764%" y="197" width="0.0779%" height="15" fill="rgb(211,154,15)" fg:x="1207" fg:w="1"/><text x="94.3264%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.1543%" y="197" width="0.0779%" height="15" fill="rgb(217,75,43)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.1543%" y="181" width="0.0779%" height="15" fill="rgb(230,32,33)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1543%" y="165" width="0.0779%" height="15" fill="rgb(221,100,16)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1543%" y="149" width="0.0779%" height="15" fill="rgb(212,129,47)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.1543%" y="133" width="0.0779%" height="15" fill="rgb(239,217,47)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1543%" y="117" width="0.0779%" height="15" fill="rgb(230,84,24)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1543%" y="101" width="0.0779%" height="15" fill="rgb(214,153,51)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.1543%" y="85" width="0.0779%" height="15" fill="rgb(231,6,35)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="95.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1543%" y="69" width="0.0779%" height="15" fill="rgb(229,122,30)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1543%" y="53" width="0.0779%" height="15" fill="rgb(234,71,10)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.1543%" y="37" width="0.0779%" height="15" fill="rgb(215,173,26)" fg:x="1208" fg:w="1"/><text x="94.4043%" y="47.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.47%)</title><rect x="93.8426%" y="341" width="0.4677%" height="15" fill="rgb(248,118,52)" fg:x="1204" fg:w="6"/><text x="94.0926%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="93.8426%" y="325" width="0.4677%" height="15" fill="rgb(237,55,46)" fg:x="1204" fg:w="6"/><text x="94.0926%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="93.8426%" y="309" width="0.4677%" height="15" fill="rgb(243,214,43)" fg:x="1204" fg:w="6"/><text x="94.0926%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="93.9205%" y="293" width="0.3897%" height="15" fill="rgb(252,123,30)" fg:x="1205" fg:w="5"/><text x="94.1705%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="93.9205%" y="277" width="0.3897%" height="15" fill="rgb(215,73,39)" fg:x="1205" fg:w="5"/><text x="94.1705%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.39%)</title><rect x="93.9205%" y="261" width="0.3897%" height="15" fill="rgb(251,194,29)" fg:x="1205" fg:w="5"/><text x="94.1705%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="94.0764%" y="245" width="0.2338%" height="15" fill="rgb(224,58,52)" fg:x="1207" fg:w="3"/><text x="94.3264%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="94.0764%" y="229" width="0.2338%" height="15" fill="rgb(248,106,46)" fg:x="1207" fg:w="3"/><text x="94.3264%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="94.1543%" y="213" width="0.1559%" height="15" fill="rgb(223,80,29)" fg:x="1208" fg:w="2"/><text x="94.4043%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2323%" y="197" width="0.0779%" height="15" fill="rgb(243,137,9)" fg:x="1209" fg:w="1"/><text x="94.4823%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.2323%" y="181" width="0.0779%" height="15" fill="rgb(235,121,28)" fg:x="1209" fg:w="1"/><text x="94.4823%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3102%" y="277" width="0.0779%" height="15" fill="rgb(219,121,41)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3102%" y="261" width="0.0779%" height="15" fill="rgb(251,60,6)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3102%" y="245" width="0.0779%" height="15" fill="rgb(208,12,30)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3102%" y="229" width="0.0779%" height="15" fill="rgb(207,176,36)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3102%" y="213" width="0.0779%" height="15" fill="rgb(211,188,29)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3102%" y="197" width="0.0779%" height="15" fill="rgb(220,184,37)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3102%" y="181" width="0.0779%" height="15" fill="rgb(239,87,37)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="191.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3102%" y="165" width="0.0779%" height="15" fill="rgb(232,113,44)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3102%" y="149" width="0.0779%" height="15" fill="rgb(246,25,39)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3102%" y="133" width="0.0779%" height="15" fill="rgb(247,30,13)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3102%" y="117" width="0.0779%" height="15" fill="rgb(230,176,35)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3102%" y="101" width="0.0779%" height="15" fill="rgb(222,23,18)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="111.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3102%" y="85" width="0.0779%" height="15" fill="rgb(234,86,8)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="95.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="94.3102%" y="69" width="0.0779%" height="15" fill="rgb(206,218,47)" fg:x="1210" fg:w="1"/><text x="94.5602%" y="79.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (10 samples, 0.78%)</title><rect x="93.6867%" y="405" width="0.7794%" height="15" fill="rgb(229,35,31)" fg:x="1202" fg:w="10"/><text x="93.9367%" y="415.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (10 samples, 0.78%)</title><rect x="93.6867%" y="389" width="0.7794%" height="15" fill="rgb(242,81,7)" fg:x="1202" fg:w="10"/><text x="93.9367%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (10 samples, 0.78%)</title><rect x="93.6867%" y="373" width="0.7794%" height="15" fill="rgb(231,11,35)" fg:x="1202" fg:w="10"/><text x="93.9367%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.78%)</title><rect x="93.6867%" y="357" width="0.7794%" height="15" fill="rgb(219,218,17)" fg:x="1202" fg:w="10"/><text x="93.9367%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="94.3102%" y="341" width="0.1559%" height="15" fill="rgb(221,83,32)" fg:x="1210" fg:w="2"/><text x="94.5602%" y="351.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="94.3102%" y="325" width="0.1559%" height="15" fill="rgb(233,49,54)" fg:x="1210" fg:w="2"/><text x="94.5602%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.3102%" y="309" width="0.1559%" height="15" fill="rgb(206,18,51)" fg:x="1210" fg:w="2"/><text x="94.5602%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.3102%" y="293" width="0.1559%" height="15" fill="rgb(249,193,15)" fg:x="1210" fg:w="2"/><text x="94.5602%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3882%" y="277" width="0.0779%" height="15" fill="rgb(245,186,19)" fg:x="1211" fg:w="1"/><text x="94.6382%" y="287.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (13 samples, 1.01%)</title><rect x="93.6087%" y="437" width="1.0133%" height="15" fill="rgb(230,4,24)" fg:x="1201" fg:w="13"/><text x="93.8587%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_area (13 samples, 1.01%)</title><rect x="93.6087%" y="421" width="1.0133%" height="15" fill="rgb(234,75,27)" fg:x="1201" fg:w="13"/><text x="93.8587%" y="431.50"></text></g><g><title>plugins_core::finding::DefaultFinder::find_top_container (2 samples, 0.16%)</title><rect x="94.4661%" y="405" width="0.1559%" height="15" fill="rgb(244,187,35)" fg:x="1212" fg:w="2"/><text x="94.7161%" y="415.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (1 samples, 0.08%)</title><rect x="94.5440%" y="389" width="0.0779%" height="15" fill="rgb(241,97,43)" fg:x="1213" fg:w="1"/><text x="94.7940%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="94.5440%" y="373" width="0.0779%" height="15" fill="rgb(236,94,2)" fg:x="1213" fg:w="1"/><text x="94.7940%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.7779%" y="325" width="0.0779%" height="15" fill="rgb(231,175,7)" fg:x="1216" fg:w="1"/><text x="95.0279%" y="335.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.23%)</title><rect x="94.7779%" y="405" width="0.2338%" height="15" fill="rgb(236,89,47)" fg:x="1216" fg:w="3"/><text x="95.0279%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.23%)</title><rect x="94.7779%" y="389" width="0.2338%" height="15" fill="rgb(213,191,37)" fg:x="1216" fg:w="3"/><text x="95.0279%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.23%)</title><rect x="94.7779%" y="373" width="0.2338%" height="15" fill="rgb(252,0,34)" fg:x="1216" fg:w="3"/><text x="95.0279%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.23%)</title><rect x="94.7779%" y="357" width="0.2338%" height="15" fill="rgb(208,145,44)" fg:x="1216" fg:w="3"/><text x="95.0279%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.23%)</title><rect x="94.7779%" y="341" width="0.2338%" height="15" fill="rgb(227,95,50)" fg:x="1216" fg:w="3"/><text x="95.0279%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="94.8558%" y="325" width="0.1559%" height="15" fill="rgb(222,136,24)" fg:x="1217" fg:w="2"/><text x="95.1058%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="94.8558%" y="309" width="0.1559%" height="15" fill="rgb(218,105,10)" fg:x="1217" fg:w="2"/><text x="95.1058%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="94.8558%" y="293" width="0.1559%" height="15" fill="rgb(216,65,28)" fg:x="1217" fg:w="2"/><text x="95.1058%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.0117%" y="389" width="0.0779%" height="15" fill="rgb(229,6,28)" fg:x="1219" fg:w="1"/><text x="95.2617%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0896%" y="389" width="0.0779%" height="15" fill="rgb(222,160,42)" fg:x="1220" fg:w="1"/><text x="95.3396%" y="399.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="95.4014%" y="357" width="0.1559%" height="15" fill="rgb(235,83,49)" fg:x="1224" fg:w="2"/><text x="95.6514%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.4793%" y="341" width="0.0779%" height="15" fill="rgb(236,86,36)" fg:x="1225" fg:w="1"/><text x="95.7293%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4793%" y="325" width="0.0779%" height="15" fill="rgb(236,19,41)" fg:x="1225" fg:w="1"/><text x="95.7293%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.4793%" y="309" width="0.0779%" height="15" fill="rgb(217,71,31)" fg:x="1225" fg:w="1"/><text x="95.7293%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4793%" y="293" width="0.0779%" height="15" fill="rgb(236,209,25)" fg:x="1225" fg:w="1"/><text x="95.7293%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.4793%" y="277" width="0.0779%" height="15" fill="rgb(247,104,21)" fg:x="1225" fg:w="1"/><text x="95.7293%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5573%" y="293" width="0.0779%" height="15" fill="rgb(243,80,38)" fg:x="1226" fg:w="1"/><text x="95.8073%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5573%" y="277" width="0.0779%" height="15" fill="rgb(232,109,38)" fg:x="1226" fg:w="1"/><text x="95.8073%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5573%" y="261" width="0.0779%" height="15" fill="rgb(212,177,53)" fg:x="1226" fg:w="1"/><text x="95.8073%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5573%" y="245" width="0.0779%" height="15" fill="rgb(227,30,34)" fg:x="1226" fg:w="1"/><text x="95.8073%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5573%" y="229" width="0.0779%" height="15" fill="rgb(205,175,25)" fg:x="1226" fg:w="1"/><text x="95.8073%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6352%" y="277" width="0.0779%" height="15" fill="rgb(249,39,54)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6352%" y="261" width="0.0779%" height="15" fill="rgb(215,54,37)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6352%" y="245" width="0.0779%" height="15" fill="rgb(205,60,46)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6352%" y="229" width="0.0779%" height="15" fill="rgb(238,89,29)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6352%" y="213" width="0.0779%" height="15" fill="rgb(212,48,10)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.6352%" y="197" width="0.0779%" height="15" fill="rgb(237,186,28)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.6352%" y="181" width="0.0779%" height="15" fill="rgb(237,204,4)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.6352%" y="165" width="0.0779%" height="15" fill="rgb(237,15,47)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6352%" y="149" width="0.0779%" height="15" fill="rgb(244,110,25)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6352%" y="133" width="0.0779%" height="15" fill="rgb(241,12,16)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.6352%" y="117" width="0.0779%" height="15" fill="rgb(235,25,9)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.6352%" y="101" width="0.0779%" height="15" fill="rgb(245,159,19)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.6352%" y="85" width="0.0779%" height="15" fill="rgb(236,63,32)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.6352%" y="69" width="0.0779%" height="15" fill="rgb(235,32,52)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6352%" y="53" width="0.0779%" height="15" fill="rgb(209,176,21)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (2 samples, 0.16%)</title><rect x="95.6352%" y="293" width="0.1559%" height="15" fill="rgb(205,90,42)" fg:x="1227" fg:w="2"/><text x="95.8852%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.7132%" y="277" width="0.0779%" height="15" fill="rgb(213,132,16)" fg:x="1228" fg:w="1"/><text x="95.9632%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.7132%" y="261" width="0.0779%" height="15" fill="rgb(232,11,22)" fg:x="1228" fg:w="1"/><text x="95.9632%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="95.8691%" y="245" width="0.0779%" height="15" fill="rgb(248,167,41)" fg:x="1230" fg:w="1"/><text x="96.1191%" y="255.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.31%)</title><rect x="95.7911%" y="293" width="0.3118%" height="15" fill="rgb(209,127,6)" fg:x="1229" fg:w="4"/><text x="96.0411%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="95.7911%" y="277" width="0.3118%" height="15" fill="rgb(246,210,34)" fg:x="1229" fg:w="4"/><text x="96.0411%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="95.7911%" y="261" width="0.3118%" height="15" fill="rgb(238,165,13)" fg:x="1229" fg:w="4"/><text x="96.0411%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="95.9470%" y="245" width="0.1559%" height="15" fill="rgb(233,98,15)" fg:x="1231" fg:w="2"/><text x="96.1970%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.9470%" y="229" width="0.1559%" height="15" fill="rgb(215,215,51)" fg:x="1231" fg:w="2"/><text x="96.1970%" y="239.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.9470%" y="213" width="0.1559%" height="15" fill="rgb(217,161,25)" fg:x="1231" fg:w="2"/><text x="96.1970%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.9470%" y="197" width="0.1559%" height="15" fill="rgb(217,167,48)" fg:x="1231" fg:w="2"/><text x="96.1970%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0249%" y="181" width="0.0779%" height="15" fill="rgb(205,163,34)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.0249%" y="165" width="0.0779%" height="15" fill="rgb(241,197,31)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0249%" y="149" width="0.0779%" height="15" fill="rgb(225,123,11)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0249%" y="133" width="0.0779%" height="15" fill="rgb(217,4,20)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.0249%" y="117" width="0.0779%" height="15" fill="rgb(215,55,9)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0249%" y="101" width="0.0779%" height="15" fill="rgb(218,165,5)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.0249%" y="85" width="0.0779%" height="15" fill="rgb(222,175,15)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.0249%" y="69" width="0.0779%" height="15" fill="rgb(223,85,34)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="79.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0249%" y="53" width="0.0779%" height="15" fill="rgb(234,228,29)" fg:x="1232" fg:w="1"/><text x="96.2749%" y="63.50"></text></g><g><title>plugins_core::tools::contained_by (12 samples, 0.94%)</title><rect x="95.2455%" y="373" width="0.9353%" height="15" fill="rgb(239,7,28)" fg:x="1222" fg:w="12"/><text x="95.4955%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntityPtr&gt;::to_entity (8 samples, 0.62%)</title><rect x="95.5573%" y="357" width="0.6235%" height="15" fill="rgb(252,222,53)" fg:x="1226" fg:w="8"/><text x="95.8073%" y="367.50"></text></g><g><title>kernel::model::EntityPtrResolver::entity (8 samples, 0.62%)</title><rect x="95.5573%" y="341" width="0.6235%" height="15" fill="rgb(232,146,44)" fg:x="1226" fg:w="8"/><text x="95.8073%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.62%)</title><rect x="95.5573%" y="325" width="0.6235%" height="15" fill="rgb(243,223,53)" fg:x="1226" fg:w="8"/><text x="95.8073%" y="335.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.62%)</title><rect x="95.5573%" y="309" width="0.6235%" height="15" fill="rgb(219,128,25)" fg:x="1226" fg:w="8"/><text x="95.8073%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="96.1029%" y="293" width="0.0779%" height="15" fill="rgb(223,56,32)" fg:x="1233" fg:w="1"/><text x="96.3529%" y="303.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="96.1029%" y="277" width="0.0779%" height="15" fill="rgb(237,41,3)" fg:x="1233" fg:w="1"/><text x="96.3529%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.1029%" y="261" width="0.0779%" height="15" fill="rgb(235,138,9)" fg:x="1233" fg:w="1"/><text x="96.3529%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.1029%" y="245" width="0.0779%" height="15" fill="rgb(214,131,10)" fg:x="1233" fg:w="1"/><text x="96.3529%" y="255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.1029%" y="229" width="0.0779%" height="15" fill="rgb(229,89,7)" fg:x="1233" fg:w="1"/><text x="96.3529%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.1029%" y="213" width="0.0779%" height="15" fill="rgb(240,24,42)" fg:x="1233" fg:w="1"/><text x="96.3529%" y="223.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.1029%" y="197" width="0.0779%" height="15" fill="rgb(243,188,54)" fg:x="1233" fg:w="1"/><text x="96.3529%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2588%" y="341" width="0.0779%" height="15" fill="rgb(246,92,22)" fg:x="1235" fg:w="1"/><text x="96.5088%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2588%" y="325" width="0.0779%" height="15" fill="rgb(211,176,51)" fg:x="1235" fg:w="1"/><text x="96.5088%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2588%" y="309" width="0.0779%" height="15" fill="rgb(246,207,34)" fg:x="1235" fg:w="1"/><text x="96.5088%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2588%" y="293" width="0.0779%" height="15" fill="rgb(239,95,2)" fg:x="1235" fg:w="1"/><text x="96.5088%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2588%" y="277" width="0.0779%" height="15" fill="rgb(211,124,25)" fg:x="1235" fg:w="1"/><text x="96.5088%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::LoadAndStoreScope&gt;::load_scope (1 samples, 0.08%)</title><rect x="96.3367%" y="341" width="0.0779%" height="15" fill="rgb(231,221,19)" fg:x="1236" fg:w="1"/><text x="96.5867%" y="351.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (4 samples, 0.31%)</title><rect x="96.1808%" y="357" width="0.3118%" height="15" fill="rgb(239,183,19)" fg:x="1234" fg:w="4"/><text x="96.4308%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4147%" y="341" width="0.0779%" height="15" fill="rgb(221,130,29)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4147%" y="325" width="0.0779%" height="15" fill="rgb(206,130,36)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.4147%" y="309" width="0.0779%" height="15" fill="rgb(215,70,19)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.4147%" y="293" width="0.0779%" height="15" fill="rgb(244,16,43)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.4147%" y="277" width="0.0779%" height="15" fill="rgb(222,115,32)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="287.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::de::Deserialize for plugins_core::moving::model::Route&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.4147%" y="261" width="0.0779%" height="15" fill="rgb(247,48,25)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4147%" y="245" width="0.0779%" height="15" fill="rgb(226,180,51)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4147%" y="229" width="0.0779%" height="15" fill="rgb(217,142,42)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4147%" y="213" width="0.0779%" height="15" fill="rgb(220,178,3)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4147%" y="197" width="0.0779%" height="15" fill="rgb(217,221,4)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="207.50"></text></g><g><title>plugins_core::tools::occupied_by (5 samples, 0.39%)</title><rect x="96.1808%" y="373" width="0.3897%" height="15" fill="rgb(237,63,43)" fg:x="1234" fg:w="5"/><text x="96.4308%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::moving::model::Occupyable&gt; (1 samples, 0.08%)</title><rect x="96.4926%" y="357" width="0.0779%" height="15" fill="rgb(220,57,8)" fg:x="1238" fg:w="1"/><text x="96.7426%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="96.4926%" y="341" width="0.0779%" height="15" fill="rgb(254,186,27)" fg:x="1238" fg:w="1"/><text x="96.7426%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4926%" y="325" width="0.0779%" height="15" fill="rgb(251,57,28)" fg:x="1238" fg:w="1"/><text x="96.7426%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.5705%" y="309" width="0.0779%" height="15" fill="rgb(215,228,0)" fg:x="1239" fg:w="1"/><text x="96.8205%" y="319.50"></text></g><g><title>engine::session::Session::captured (49 samples, 3.82%)</title><rect x="92.9072%" y="549" width="3.8192%" height="15" fill="rgb(237,218,39)" fg:x="1192" fg:w="49"/><text x="93.1572%" y="559.50">engi..</text></g><g><title>engine::session::logs::capture (41 samples, 3.20%)</title><rect x="93.5308%" y="533" width="3.1956%" height="15" fill="rgb(207,2,54)" fg:x="1200" fg:w="41"/><text x="93.7808%" y="543.50">eng..</text></g><g><title>tracing_core::dispatcher::with_default (40 samples, 3.12%)</title><rect x="93.6087%" y="517" width="3.1177%" height="15" fill="rgb(232,76,50)" fg:x="1201" fg:w="40"/><text x="93.8587%" y="527.50">tra..</text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (40 samples, 3.12%)</title><rect x="93.6087%" y="501" width="3.1177%" height="15" fill="rgb(211,85,31)" fg:x="1201" fg:w="40"/><text x="93.8587%" y="511.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (40 samples, 3.12%)</title><rect x="93.6087%" y="485" width="3.1177%" height="15" fill="rgb(223,210,27)" fg:x="1201" fg:w="40"/><text x="93.8587%" y="495.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (40 samples, 3.12%)</title><rect x="93.6087%" y="469" width="3.1177%" height="15" fill="rgb(254,36,8)" fg:x="1201" fg:w="40"/><text x="93.8587%" y="479.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (40 samples, 3.12%)</title><rect x="93.6087%" y="453" width="3.1177%" height="15" fill="rgb(213,4,25)" fg:x="1201" fg:w="40"/><text x="93.8587%" y="463.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (27 samples, 2.10%)</title><rect x="94.6220%" y="437" width="2.1044%" height="15" fill="rgb(224,2,39)" fg:x="1214" fg:w="27"/><text x="94.8720%" y="447.50">k..</text></g><g><title>&lt;plugins_rune::RuneMiddleware as kernel::plugins::mw::Middleware&gt;::handle (27 samples, 2.10%)</title><rect x="94.6220%" y="421" width="2.1044%" height="15" fill="rgb(208,8,39)" fg:x="1214" fg:w="27"/><text x="94.8720%" y="431.50">&lt;..</text></g><g><title>plugins_rune::sources::load_sources_from_surroundings (22 samples, 1.71%)</title><rect x="95.0117%" y="405" width="1.7147%" height="15" fill="rgb(216,226,3)" fg:x="1219" fg:w="22"/><text x="95.2617%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (20 samples, 1.56%)</title><rect x="95.1676%" y="389" width="1.5588%" height="15" fill="rgb(249,139,31)" fg:x="1221" fg:w="20"/><text x="95.4176%" y="399.50"></text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="96.5705%" y="373" width="0.1559%" height="15" fill="rgb(242,170,35)" fg:x="1239" fg:w="2"/><text x="96.8205%" y="383.50"></text></g><g><title>&lt;O as kernel::model::scopes::OpenScope&lt;O&gt;&gt;::scope (2 samples, 0.16%)</title><rect x="96.5705%" y="357" width="0.1559%" height="15" fill="rgb(238,14,9)" fg:x="1239" fg:w="2"/><text x="96.8205%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.5705%" y="341" width="0.1559%" height="15" fill="rgb(251,81,46)" fg:x="1239" fg:w="2"/><text x="96.8205%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.5705%" y="325" width="0.1559%" height="15" fill="rgb(230,23,4)" fg:x="1239" fg:w="2"/><text x="96.8205%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.6485%" y="309" width="0.0779%" height="15" fill="rgb(211,85,25)" fg:x="1240" fg:w="1"/><text x="96.8985%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.6485%" y="293" width="0.0779%" height="15" fill="rgb(252,23,31)" fg:x="1240" fg:w="1"/><text x="96.8985%" y="303.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.6485%" y="277" width="0.0779%" height="15" fill="rgb(234,163,38)" fg:x="1240" fg:w="1"/><text x="96.8985%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8044%" y="453" width="0.0779%" height="15" fill="rgb(210,190,50)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8044%" y="437" width="0.0779%" height="15" fill="rgb(228,158,3)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8044%" y="421" width="0.0779%" height="15" fill="rgb(216,130,0)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.8044%" y="405" width="0.0779%" height="15" fill="rgb(224,184,10)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.8044%" y="389" width="0.0779%" height="15" fill="rgb(214,202,18)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.8044%" y="373" width="0.0779%" height="15" fill="rgb(213,229,54)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8044%" y="357" width="0.0779%" height="15" fill="rgb(246,120,0)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8044%" y="341" width="0.0779%" height="15" fill="rgb(237,6,15)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.8044%" y="325" width="0.0779%" height="15" fill="rgb(252,156,15)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.8044%" y="309" width="0.0779%" height="15" fill="rgb(249,78,18)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.8044%" y="293" width="0.0779%" height="15" fill="rgb(230,223,44)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.8044%" y="277" width="0.0779%" height="15" fill="rgb(230,222,32)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8044%" y="261" width="0.0779%" height="15" fill="rgb(247,54,6)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="96.7264%" y="501" width="0.2338%" height="15" fill="rgb(247,115,45)" fg:x="1241" fg:w="3"/><text x="96.9764%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="96.7264%" y="485" width="0.2338%" height="15" fill="rgb(213,203,37)" fg:x="1241" fg:w="3"/><text x="96.9764%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.8044%" y="469" width="0.1559%" height="15" fill="rgb(248,188,18)" fg:x="1242" fg:w="2"/><text x="97.0544%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8823%" y="453" width="0.0779%" height="15" fill="rgb(206,80,8)" fg:x="1243" fg:w="1"/><text x="97.1323%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="96.9602%" y="469" width="0.0779%" height="15" fill="rgb(245,217,31)" fg:x="1244" fg:w="1"/><text x="97.2102%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.0382%" y="405" width="0.1559%" height="15" fill="rgb(220,193,15)" fg:x="1245" fg:w="2"/><text x="97.2882%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.0382%" y="389" width="0.1559%" height="15" fill="rgb(226,7,19)" fg:x="1245" fg:w="2"/><text x="97.2882%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1161%" y="373" width="0.0779%" height="15" fill="rgb(222,145,31)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1161%" y="357" width="0.0779%" height="15" fill="rgb(241,193,36)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1161%" y="341" width="0.0779%" height="15" fill="rgb(225,123,33)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1161%" y="325" width="0.0779%" height="15" fill="rgb(246,136,38)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1161%" y="309" width="0.0779%" height="15" fill="rgb(243,56,24)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1161%" y="293" width="0.0779%" height="15" fill="rgb(215,147,2)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1161%" y="277" width="0.0779%" height="15" fill="rgb(209,155,27)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1161%" y="261" width="0.0779%" height="15" fill="rgb(222,177,11)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1161%" y="245" width="0.0779%" height="15" fill="rgb(212,227,15)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1161%" y="229" width="0.0779%" height="15" fill="rgb(214,138,20)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1161%" y="213" width="0.0779%" height="15" fill="rgb(221,170,31)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1161%" y="197" width="0.0779%" height="15" fill="rgb(253,207,5)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1161%" y="181" width="0.0779%" height="15" fill="rgb(212,64,37)" fg:x="1246" fg:w="1"/><text x="97.3661%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.1941%" y="357" width="0.1559%" height="15" fill="rgb(208,113,51)" fg:x="1247" fg:w="2"/><text x="97.4441%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.1941%" y="341" width="0.1559%" height="15" fill="rgb(237,15,5)" fg:x="1247" fg:w="2"/><text x="97.4441%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.1941%" y="325" width="0.1559%" height="15" fill="rgb(238,33,18)" fg:x="1247" fg:w="2"/><text x="97.4441%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.1941%" y="309" width="0.1559%" height="15" fill="rgb(253,206,50)" fg:x="1247" fg:w="2"/><text x="97.4441%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.1941%" y="293" width="0.1559%" height="15" fill="rgb(242,158,43)" fg:x="1247" fg:w="2"/><text x="97.4441%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="97.1941%" y="405" width="0.2338%" height="15" fill="rgb(213,125,27)" fg:x="1247" fg:w="3"/><text x="97.4441%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="97.1941%" y="389" width="0.2338%" height="15" fill="rgb(233,161,31)" fg:x="1247" fg:w="3"/><text x="97.4441%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.23%)</title><rect x="97.1941%" y="373" width="0.2338%" height="15" fill="rgb(218,135,6)" fg:x="1247" fg:w="3"/><text x="97.4441%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.3500%" y="357" width="0.0779%" height="15" fill="rgb(222,73,53)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3500%" y="341" width="0.0779%" height="15" fill="rgb(229,66,53)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="97.3500%" y="325" width="0.0779%" height="15" fill="rgb(208,128,19)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="97.3500%" y="309" width="0.0779%" height="15" fill="rgb(235,70,27)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="319.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="97.3500%" y="293" width="0.0779%" height="15" fill="rgb(241,130,30)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="303.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="97.3500%" y="277" width="0.0779%" height="15" fill="rgb(222,57,48)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="287.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="97.3500%" y="261" width="0.0779%" height="15" fill="rgb(225,204,29)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="271.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="97.3500%" y="245" width="0.0779%" height="15" fill="rgb(240,196,35)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="97.3500%" y="229" width="0.0779%" height="15" fill="rgb(215,150,16)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3500%" y="213" width="0.0779%" height="15" fill="rgb(209,170,13)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3500%" y="197" width="0.0779%" height="15" fill="rgb(235,75,31)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.3500%" y="181" width="0.0779%" height="15" fill="rgb(252,1,47)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.3500%" y="165" width="0.0779%" height="15" fill="rgb(241,2,36)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.3500%" y="149" width="0.0779%" height="15" fill="rgb(236,191,4)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.3500%" y="133" width="0.0779%" height="15" fill="rgb(212,65,35)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.47%)</title><rect x="97.0382%" y="453" width="0.4677%" height="15" fill="rgb(209,49,33)" fg:x="1245" fg:w="6"/><text x="97.2882%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.47%)</title><rect x="97.0382%" y="437" width="0.4677%" height="15" fill="rgb(208,36,46)" fg:x="1245" fg:w="6"/><text x="97.2882%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.47%)</title><rect x="97.0382%" y="421" width="0.4677%" height="15" fill="rgb(210,125,2)" fg:x="1245" fg:w="6"/><text x="97.2882%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4279%" y="405" width="0.0779%" height="15" fill="rgb(225,62,6)" fg:x="1250" fg:w="1"/><text x="97.6779%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4279%" y="389" width="0.0779%" height="15" fill="rgb(210,54,27)" fg:x="1250" fg:w="1"/><text x="97.6779%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.4279%" y="373" width="0.0779%" height="15" fill="rgb(249,189,52)" fg:x="1250" fg:w="1"/><text x="97.6779%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.4279%" y="357" width="0.0779%" height="15" fill="rgb(225,134,40)" fg:x="1250" fg:w="1"/><text x="97.6779%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.70%)</title><rect x="96.9602%" y="501" width="0.7015%" height="15" fill="rgb(206,13,37)" fg:x="1244" fg:w="9"/><text x="97.2102%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.70%)</title><rect x="96.9602%" y="485" width="0.7015%" height="15" fill="rgb(232,114,28)" fg:x="1244" fg:w="9"/><text x="97.2102%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.62%)</title><rect x="97.0382%" y="469" width="0.6235%" height="15" fill="rgb(253,215,8)" fg:x="1245" fg:w="8"/><text x="97.2882%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5058%" y="453" width="0.1559%" height="15" fill="rgb(254,64,19)" fg:x="1251" fg:w="2"/><text x="97.7558%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5058%" y="437" width="0.1559%" height="15" fill="rgb(242,18,46)" fg:x="1251" fg:w="2"/><text x="97.7558%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="97.5058%" y="421" width="0.1559%" height="15" fill="rgb(239,192,30)" fg:x="1251" fg:w="2"/><text x="97.7558%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.5838%" y="405" width="0.0779%" height="15" fill="rgb(232,73,14)" fg:x="1252" fg:w="1"/><text x="97.8338%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.5838%" y="389" width="0.0779%" height="15" fill="rgb(225,51,9)" fg:x="1252" fg:w="1"/><text x="97.8338%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.5838%" y="373" width="0.0779%" height="15" fill="rgb(242,217,54)" fg:x="1252" fg:w="1"/><text x="97.8338%" y="383.50"></text></g><g><title>engine::session::internal::Added::find_refs (14 samples, 1.09%)</title><rect x="96.7264%" y="533" width="1.0912%" height="15" fill="rgb(216,93,3)" fg:x="1241" fg:w="14"/><text x="96.9764%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.09%)</title><rect x="96.7264%" y="517" width="1.0912%" height="15" fill="rgb(230,119,33)" fg:x="1241" fg:w="14"/><text x="96.9764%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.6617%" y="501" width="0.1559%" height="15" fill="rgb(238,170,27)" fg:x="1253" fg:w="2"/><text x="97.9117%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6617%" y="485" width="0.1559%" height="15" fill="rgb(229,8,2)" fg:x="1253" fg:w="2"/><text x="97.9117%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="97.6617%" y="469" width="0.1559%" height="15" fill="rgb(205,214,42)" fg:x="1253" fg:w="2"/><text x="97.9117%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="97.6617%" y="453" width="0.1559%" height="15" fill="rgb(245,113,1)" fg:x="1253" fg:w="2"/><text x="97.9117%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="97.6617%" y="437" width="0.1559%" height="15" fill="rgb(252,50,2)" fg:x="1253" fg:w="2"/><text x="97.9117%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.7397%" y="421" width="0.0779%" height="15" fill="rgb(225,122,24)" fg:x="1254" fg:w="1"/><text x="97.9897%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.7397%" y="405" width="0.0779%" height="15" fill="rgb(234,129,31)" fg:x="1254" fg:w="1"/><text x="97.9897%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7397%" y="389" width="0.0779%" height="15" fill="rgb(219,177,4)" fg:x="1254" fg:w="1"/><text x="97.9897%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8176%" y="469" width="0.0779%" height="15" fill="rgb(225,142,27)" fg:x="1255" fg:w="1"/><text x="98.0676%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8176%" y="501" width="0.1559%" height="15" fill="rgb(205,107,51)" fg:x="1255" fg:w="2"/><text x="98.0676%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8176%" y="485" width="0.1559%" height="15" fill="rgb(236,223,15)" fg:x="1255" fg:w="2"/><text x="98.0676%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8956%" y="469" width="0.0779%" height="15" fill="rgb(235,133,11)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8956%" y="453" width="0.0779%" height="15" fill="rgb(247,172,13)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.8956%" y="437" width="0.0779%" height="15" fill="rgb(233,191,41)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.8956%" y="421" width="0.0779%" height="15" fill="rgb(250,65,16)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.8956%" y="405" width="0.0779%" height="15" fill="rgb(206,10,27)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8956%" y="389" width="0.0779%" height="15" fill="rgb(212,96,22)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8956%" y="373" width="0.0779%" height="15" fill="rgb(206,50,0)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.8956%" y="357" width="0.0779%" height="15" fill="rgb(249,105,52)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.8956%" y="341" width="0.0779%" height="15" fill="rgb(216,93,51)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.8956%" y="325" width="0.0779%" height="15" fill="rgb(217,172,13)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.8956%" y="309" width="0.0779%" height="15" fill="rgb(235,199,38)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8956%" y="293" width="0.0779%" height="15" fill="rgb(221,97,33)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="97.8176%" y="517" width="0.2338%" height="15" fill="rgb(205,156,50)" fg:x="1255" fg:w="3"/><text x="98.0676%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9735%" y="501" width="0.0779%" height="15" fill="rgb(215,142,19)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9735%" y="485" width="0.0779%" height="15" fill="rgb(232,170,7)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.9735%" y="469" width="0.0779%" height="15" fill="rgb(223,50,17)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.9735%" y="453" width="0.0779%" height="15" fill="rgb(230,103,46)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.9735%" y="437" width="0.0779%" height="15" fill="rgb(254,30,34)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.9735%" y="421" width="0.0779%" height="15" fill="rgb(235,198,1)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.9735%" y="405" width="0.0779%" height="15" fill="rgb(217,105,47)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.9735%" y="389" width="0.0779%" height="15" fill="rgb(231,18,12)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.9735%" y="373" width="0.0779%" height="15" fill="rgb(218,196,1)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.9735%" y="357" width="0.0779%" height="15" fill="rgb(210,32,3)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.9735%" y="341" width="0.0779%" height="15" fill="rgb(227,178,30)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9735%" y="325" width="0.0779%" height="15" fill="rgb(231,140,27)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="98.0514%" y="517" width="0.0779%" height="15" fill="rgb(206,66,35)" fg:x="1258" fg:w="1"/><text x="98.3014%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0514%" y="501" width="0.0779%" height="15" fill="rgb(212,34,2)" fg:x="1258" fg:w="1"/><text x="98.3014%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0514%" y="485" width="0.0779%" height="15" fill="rgb(207,201,33)" fg:x="1258" fg:w="1"/><text x="98.3014%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.0514%" y="469" width="0.0779%" height="15" fill="rgb(221,135,32)" fg:x="1258" fg:w="1"/><text x="98.3014%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0514%" y="453" width="0.0779%" height="15" fill="rgb(206,77,31)" fg:x="1258" fg:w="1"/><text x="98.3014%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1294%" y="421" width="0.0779%" height="15" fill="rgb(252,198,50)" fg:x="1259" fg:w="1"/><text x="98.3794%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1294%" y="405" width="0.0779%" height="15" fill="rgb(206,79,27)" fg:x="1259" fg:w="1"/><text x="98.3794%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1294%" y="389" width="0.0779%" height="15" fill="rgb(228,108,9)" fg:x="1259" fg:w="1"/><text x="98.3794%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1294%" y="373" width="0.0779%" height="15" fill="rgb(213,9,39)" fg:x="1259" fg:w="1"/><text x="98.3794%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.1294%" y="357" width="0.0779%" height="15" fill="rgb(252,51,13)" fg:x="1259" fg:w="1"/><text x="98.3794%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.1294%" y="341" width="0.0779%" height="15" fill="rgb(218,202,39)" fg:x="1259" fg:w="1"/><text x="98.3794%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="98.2073%" y="373" width="0.1559%" height="15" fill="rgb(214,122,21)" fg:x="1260" fg:w="2"/><text x="98.4573%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.2853%" y="357" width="0.0779%" height="15" fill="rgb(217,205,48)" fg:x="1261" fg:w="1"/><text x="98.5353%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2853%" y="341" width="0.0779%" height="15" fill="rgb(230,216,13)" fg:x="1261" fg:w="1"/><text x="98.5353%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2853%" y="325" width="0.0779%" height="15" fill="rgb(249,118,4)" fg:x="1261" fg:w="1"/><text x="98.5353%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.2853%" y="309" width="0.0779%" height="15" fill="rgb(212,207,40)" fg:x="1261" fg:w="1"/><text x="98.5353%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.2853%" y="293" width="0.0779%" height="15" fill="rgb(217,156,26)" fg:x="1261" fg:w="1"/><text x="98.5353%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="98.1294%" y="469" width="0.3897%" height="15" fill="rgb(226,86,34)" fg:x="1259" fg:w="5"/><text x="98.3794%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="98.1294%" y="453" width="0.3897%" height="15" fill="rgb(217,111,30)" fg:x="1259" fg:w="5"/><text x="98.3794%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.39%)</title><rect x="98.1294%" y="437" width="0.3897%" height="15" fill="rgb(228,64,18)" fg:x="1259" fg:w="5"/><text x="98.3794%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="98.2073%" y="421" width="0.3118%" height="15" fill="rgb(254,217,48)" fg:x="1260" fg:w="4"/><text x="98.4573%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="98.2073%" y="405" width="0.3118%" height="15" fill="rgb(226,156,48)" fg:x="1260" fg:w="4"/><text x="98.4573%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.31%)</title><rect x="98.2073%" y="389" width="0.3118%" height="15" fill="rgb(236,168,20)" fg:x="1260" fg:w="4"/><text x="98.4573%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.3632%" y="373" width="0.1559%" height="15" fill="rgb(239,210,33)" fg:x="1262" fg:w="2"/><text x="98.6132%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3632%" y="357" width="0.1559%" height="15" fill="rgb(242,85,17)" fg:x="1262" fg:w="2"/><text x="98.6132%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.4412%" y="341" width="0.0779%" height="15" fill="rgb(221,196,15)" fg:x="1263" fg:w="1"/><text x="98.6912%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4412%" y="325" width="0.0779%" height="15" fill="rgb(249,76,21)" fg:x="1263" fg:w="1"/><text x="98.6912%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4412%" y="309" width="0.0779%" height="15" fill="rgb(243,67,29)" fg:x="1263" fg:w="1"/><text x="98.6912%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.47%)</title><rect x="98.1294%" y="517" width="0.4677%" height="15" fill="rgb(240,159,2)" fg:x="1259" fg:w="6"/><text x="98.3794%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="98.1294%" y="501" width="0.4677%" height="15" fill="rgb(244,64,3)" fg:x="1259" fg:w="6"/><text x="98.3794%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="98.1294%" y="485" width="0.4677%" height="15" fill="rgb(220,86,40)" fg:x="1259" fg:w="6"/><text x="98.3794%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.5191%" y="469" width="0.0779%" height="15" fill="rgb(222,194,51)" fg:x="1264" fg:w="1"/><text x="98.7691%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5191%" y="453" width="0.0779%" height="15" fill="rgb(207,154,19)" fg:x="1264" fg:w="1"/><text x="98.7691%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5191%" y="437" width="0.0779%" height="15" fill="rgb(206,178,36)" fg:x="1264" fg:w="1"/><text x="98.7691%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.5970%" y="373" width="0.0779%" height="15" fill="rgb(218,8,24)" fg:x="1265" fg:w="1"/><text x="98.8470%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.5970%" y="357" width="0.0779%" height="15" fill="rgb(226,83,41)" fg:x="1265" fg:w="1"/><text x="98.8470%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5970%" y="341" width="0.0779%" height="15" fill="rgb(224,23,22)" fg:x="1265" fg:w="1"/><text x="98.8470%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5970%" y="325" width="0.0779%" height="15" fill="rgb(218,198,45)" fg:x="1265" fg:w="1"/><text x="98.8470%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5970%" y="309" width="0.0779%" height="15" fill="rgb(249,147,41)" fg:x="1265" fg:w="1"/><text x="98.8470%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.6750%" y="325" width="0.0779%" height="15" fill="rgb(244,224,13)" fg:x="1266" fg:w="1"/><text x="98.9250%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="98.5970%" y="405" width="0.2338%" height="15" fill="rgb(225,97,27)" fg:x="1265" fg:w="3"/><text x="98.8470%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="98.5970%" y="389" width="0.2338%" height="15" fill="rgb(254,64,0)" fg:x="1265" fg:w="3"/><text x="98.8470%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6750%" y="373" width="0.1559%" height="15" fill="rgb(208,130,43)" fg:x="1266" fg:w="2"/><text x="98.9250%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.6750%" y="357" width="0.1559%" height="15" fill="rgb(247,91,25)" fg:x="1266" fg:w="2"/><text x="98.9250%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6750%" y="341" width="0.1559%" height="15" fill="rgb(215,218,42)" fg:x="1266" fg:w="2"/><text x="98.9250%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7529%" y="325" width="0.0779%" height="15" fill="rgb(233,9,24)" fg:x="1267" fg:w="1"/><text x="99.0029%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="98.5970%" y="421" width="0.3118%" height="15" fill="rgb(252,105,38)" fg:x="1265" fg:w="4"/><text x="98.8470%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8309%" y="405" width="0.0779%" height="15" fill="rgb(225,40,49)" fg:x="1268" fg:w="1"/><text x="99.0809%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.17%)</title><rect x="97.8176%" y="533" width="1.1691%" height="15" fill="rgb(232,196,19)" fg:x="1255" fg:w="15"/><text x="98.0676%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.39%)</title><rect x="98.5970%" y="517" width="0.3897%" height="15" fill="rgb(207,35,15)" fg:x="1265" fg:w="5"/><text x="98.8470%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.39%)</title><rect x="98.5970%" y="501" width="0.3897%" height="15" fill="rgb(238,68,36)" fg:x="1265" fg:w="5"/><text x="98.8470%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="98.5970%" y="485" width="0.3897%" height="15" fill="rgb(205,158,20)" fg:x="1265" fg:w="5"/><text x="98.8470%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="98.5970%" y="469" width="0.3897%" height="15" fill="rgb(232,32,22)" fg:x="1265" fg:w="5"/><text x="98.8470%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="98.5970%" y="453" width="0.3897%" height="15" fill="rgb(210,169,6)" fg:x="1265" fg:w="5"/><text x="98.8470%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="98.5970%" y="437" width="0.3897%" height="15" fill="rgb(229,28,12)" fg:x="1265" fg:w="5"/><text x="98.8470%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.9088%" y="421" width="0.0779%" height="15" fill="rgb(229,78,10)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9088%" y="405" width="0.0779%" height="15" fill="rgb(223,139,54)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="415.50"></text></g><g><title>engine::session::Session::load_entity (30 samples, 2.34%)</title><rect x="96.7264%" y="549" width="2.3383%" height="15" fill="rgb(207,110,4)" fg:x="1241" fg:w="30"/><text x="96.9764%" y="559.50">e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="98.9867%" y="533" width="0.0779%" height="15" fill="rgb(248,30,41)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.1426%" y="501" width="0.1559%" height="15" fill="rgb(235,54,25)" fg:x="1272" fg:w="2"/><text x="99.3926%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.1426%" y="485" width="0.1559%" height="15" fill="rgb(213,107,41)" fg:x="1272" fg:w="2"/><text x="99.3926%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2206%" y="469" width="0.0779%" height="15" fill="rgb(237,102,9)" fg:x="1273" fg:w="1"/><text x="99.4706%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::HasProps&lt;kernel::model::entity::Entity&gt;&gt;::props (1 samples, 0.08%)</title><rect x="99.2985%" y="501" width="0.0779%" height="15" fill="rgb(252,137,49)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2985%" y="485" width="0.0779%" height="15" fill="rgb(233,202,33)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="495.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.3765%" y="501" width="0.0779%" height="15" fill="rgb(223,14,51)" fg:x="1275" fg:w="1"/><text x="99.6265%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4544%" y="421" width="0.0779%" height="15" fill="rgb(248,70,23)" fg:x="1276" fg:w="1"/><text x="99.7044%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.5323%" y="421" width="0.0779%" height="15" fill="rgb(209,207,47)" fg:x="1277" fg:w="1"/><text x="99.7823%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6103%" y="373" width="0.0779%" height="15" fill="rgb(245,124,2)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6103%" y="357" width="0.0779%" height="15" fill="rgb(249,208,11)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.6103%" y="341" width="0.0779%" height="15" fill="rgb(247,112,7)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6103%" y="325" width="0.0779%" height="15" fill="rgb(209,192,31)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6103%" y="309" width="0.0779%" height="15" fill="rgb(236,55,19)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.6103%" y="293" width="0.0779%" height="15" fill="rgb(252,89,41)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6103%" y="277" width="0.0779%" height="15" fill="rgb(220,172,14)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6103%" y="261" width="0.0779%" height="15" fill="rgb(252,65,2)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.6103%" y="405" width="0.1559%" height="15" fill="rgb(250,20,8)" fg:x="1278" fg:w="2"/><text x="99.8603%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.6103%" y="389" width="0.1559%" height="15" fill="rgb(234,149,13)" fg:x="1278" fg:w="2"/><text x="99.8603%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.6882%" y="373" width="0.0779%" height="15" fill="rgb(223,219,12)" fg:x="1279" fg:w="1"/><text x="99.9382%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="99.4544%" y="453" width="0.3897%" height="15" fill="rgb(234,13,49)" fg:x="1276" fg:w="5"/><text x="99.7044%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="99.4544%" y="437" width="0.3897%" height="15" fill="rgb(214,41,25)" fg:x="1276" fg:w="5"/><text x="99.7044%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.23%)</title><rect x="99.6103%" y="421" width="0.2338%" height="15" fill="rgb(232,198,52)" fg:x="1278" fg:w="3"/><text x="99.8603%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.7662%" y="405" width="0.0779%" height="15" fill="rgb(236,111,46)" fg:x="1280" fg:w="1"/><text x="100.0162%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.7662%" y="389" width="0.0779%" height="15" fill="rgb(253,30,20)" fg:x="1280" fg:w="1"/><text x="100.0162%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.7662%" y="373" width="0.0779%" height="15" fill="rgb(247,141,17)" fg:x="1280" fg:w="1"/><text x="100.0162%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.7662%" y="357" width="0.0779%" height="15" fill="rgb(214,195,21)" fg:x="1280" fg:w="1"/><text x="100.0162%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.47%)</title><rect x="99.4544%" y="501" width="0.4677%" height="15" fill="rgb(214,98,12)" fg:x="1276" fg:w="6"/><text x="99.7044%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="99.4544%" y="485" width="0.4677%" height="15" fill="rgb(239,4,26)" fg:x="1276" fg:w="6"/><text x="99.7044%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="99.4544%" y="469" width="0.4677%" height="15" fill="rgb(234,210,35)" fg:x="1276" fg:w="6"/><text x="99.7044%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.8441%" y="453" width="0.0779%" height="15" fill="rgb(252,178,27)" fg:x="1281" fg:w="1"/><text x="100.0941%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8441%" y="437" width="0.0779%" height="15" fill="rgb(217,50,1)" fg:x="1281" fg:w="1"/><text x="100.0941%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.8441%" y="421" width="0.0779%" height="15" fill="rgb(233,137,5)" fg:x="1281" fg:w="1"/><text x="100.0941%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.8441%" y="405" width="0.0779%" height="15" fill="rgb(217,227,25)" fg:x="1281" fg:w="1"/><text x="100.0941%" y="415.50"></text></g><g><title>all (1,283 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(242,89,38)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="943.50"></text></g><g><title>simple-6657d8a0 (1,283 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(212,190,30)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="927.50">simple-6657d8a0</text></g><g><title>_start (1,283 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(222,120,8)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="911.50">_start</text></g><g><title>__libc_start_main (1,283 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(227,181,9)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="895.50">__libc_start_main</text></g><g><title>main (1,283 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(222,125,29)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (1,283 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(215,153,31)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,283 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(228,77,30)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,283 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(226,110,9)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,283 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(219,111,7)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,283 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(229,167,25)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="799.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,283 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(209,77,43)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,283 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(233,70,39)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,283 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(207,171,44)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,283 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(244,91,6)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,283 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(234,136,12)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,283 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(216,210,38)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,283 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(241,227,7)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="687.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,283 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(241,222,11)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="671.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,283 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(246,86,18)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="655.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (452 samples, 35.23%)</title><rect x="64.7701%" y="629" width="35.2299%" height="15" fill="rgb(224,151,49)" fg:x="831" fg:w="452"/><text x="65.0201%" y="639.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routin..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (452 samples, 35.23%)</title><rect x="64.7701%" y="613" width="35.2299%" height="15" fill="rgb(235,4,41)" fg:x="831" fg:w="452"/><text x="65.0201%" y="623.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (452 samples, 35.23%)</title><rect x="64.7701%" y="597" width="35.2299%" height="15" fill="rgb(218,30,52)" fg:x="831" fg:w="452"/><text x="65.0201%" y="607.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (92 samples, 7.17%)</title><rect x="92.8293%" y="581" width="7.1707%" height="15" fill="rgb(205,124,51)" fg:x="1191" fg:w="92"/><text x="93.0793%" y="591.50">engine::se..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (92 samples, 7.17%)</title><rect x="92.8293%" y="565" width="7.1707%" height="15" fill="rgb(237,126,51)" fg:x="1191" fg:w="92"/><text x="93.0793%" y="575.50">engine::se..</text></g><g><title>kernel::model::EntityPtrResolver::world (12 samples, 0.94%)</title><rect x="99.0647%" y="549" width="0.9353%" height="15" fill="rgb(225,32,46)" fg:x="1271" fg:w="12"/><text x="99.3147%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (11 samples, 0.86%)</title><rect x="99.1426%" y="533" width="0.8574%" height="15" fill="rgb(251,60,49)" fg:x="1272" fg:w="11"/><text x="99.3926%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.86%)</title><rect x="99.1426%" y="517" width="0.8574%" height="15" fill="rgb(234,18,23)" fg:x="1272" fg:w="11"/><text x="99.3926%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="99.9221%" y="501" width="0.0779%" height="15" fill="rgb(234,25,23)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="511.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.9221%" y="485" width="0.0779%" height="15" fill="rgb(210,43,52)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.9221%" y="469" width="0.0779%" height="15" fill="rgb(237,198,21)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.9221%" y="453" width="0.0779%" height="15" fill="rgb(211,20,34)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.9221%" y="437" width="0.0779%" height="15" fill="rgb(221,155,50)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.9221%" y="421" width="0.0779%" height="15" fill="rgb(213,214,53)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="431.50"></text></g></svg></svg>