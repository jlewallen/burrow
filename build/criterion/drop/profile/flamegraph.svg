<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="1252"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1597%" y="645" width="0.0799%" height="15" fill="rgb(247,103,28)" fg:x="2" fg:w="1"/><text x="0.4097%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1597%" y="629" width="0.0799%" height="15" fill="rgb(253,156,45)" fg:x="2" fg:w="1"/><text x="0.4097%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.5591%" y="549" width="0.1597%" height="15" fill="rgb(237,157,52)" fg:x="7" fg:w="2"/><text x="0.8091%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7188%" y="549" width="0.0799%" height="15" fill="rgb(253,112,16)" fg:x="9" fg:w="1"/><text x="0.9688%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7188%" y="533" width="0.0799%" height="15" fill="rgb(234,70,18)" fg:x="9" fg:w="1"/><text x="0.9688%" y="543.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="0.9585%" y="517" width="0.3195%" height="15" fill="rgb(247,138,19)" fg:x="12" fg:w="4"/><text x="1.2085%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.2780%" y="517" width="0.0799%" height="15" fill="rgb(207,171,1)" fg:x="16" fg:w="1"/><text x="1.5280%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2780%" y="501" width="0.0799%" height="15" fill="rgb(239,213,3)" fg:x="16" fg:w="1"/><text x="1.5280%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="0.9585%" y="533" width="0.4792%" height="15" fill="rgb(226,112,4)" fg:x="12" fg:w="6"/><text x="1.2085%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.3578%" y="517" width="0.0799%" height="15" fill="rgb(252,170,12)" fg:x="17" fg:w="1"/><text x="1.6078%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.4377%" y="533" width="0.2396%" height="15" fill="rgb(241,106,13)" fg:x="18" fg:w="3"/><text x="1.6877%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.48%)</title><rect x="1.6773%" y="533" width="0.4792%" height="15" fill="rgb(225,73,23)" fg:x="21" fg:w="6"/><text x="1.9273%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.9169%" y="517" width="0.2396%" height="15" fill="rgb(251,227,29)" fg:x="24" fg:w="3"/><text x="2.1669%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2364%" y="517" width="0.0799%" height="15" fill="rgb(237,144,13)" fg:x="28" fg:w="1"/><text x="2.4864%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.3163%" y="517" width="0.1597%" height="15" fill="rgb(232,106,46)" fg:x="29" fg:w="2"/><text x="2.5663%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.4760%" y="501" width="0.2396%" height="15" fill="rgb(245,154,53)" fg:x="31" fg:w="3"/><text x="2.7260%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.7157%" y="501" width="0.1597%" height="15" fill="rgb(212,119,47)" fg:x="34" fg:w="2"/><text x="2.9657%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9553%" y="485" width="0.0799%" height="15" fill="rgb(253,135,25)" fg:x="37" fg:w="1"/><text x="3.2053%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 2.56%)</title><rect x="0.5591%" y="565" width="2.5559%" height="15" fill="rgb(253,208,39)" fg:x="7" fg:w="32"/><text x="0.8091%" y="575.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (29 samples, 2.32%)</title><rect x="0.7987%" y="549" width="2.3163%" height="15" fill="rgb(226,64,12)" fg:x="10" fg:w="29"/><text x="1.0487%" y="559.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="2.1565%" y="533" width="0.9585%" height="15" fill="rgb(214,162,37)" fg:x="27" fg:w="12"/><text x="2.4065%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="2.4760%" y="517" width="0.6390%" height="15" fill="rgb(250,104,5)" fg:x="31" fg:w="8"/><text x="2.7260%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="2.8754%" y="501" width="0.2396%" height="15" fill="rgb(220,202,50)" fg:x="36" fg:w="3"/><text x="3.1254%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.0351%" y="485" width="0.0799%" height="15" fill="rgb(248,67,38)" fg:x="38" fg:w="1"/><text x="3.2851%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.0351%" y="469" width="0.0799%" height="15" fill="rgb(242,94,35)" fg:x="38" fg:w="1"/><text x="3.2851%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 2.72%)</title><rect x="0.4792%" y="581" width="2.7157%" height="15" fill="rgb(209,78,37)" fg:x="6" fg:w="34"/><text x="0.7292%" y="591.50">&lt;h..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.1150%" y="565" width="0.0799%" height="15" fill="rgb(230,126,47)" fg:x="39" fg:w="1"/><text x="3.3650%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 3.27%)</title><rect x="0.0799%" y="661" width="3.2748%" height="15" fill="rgb(222,110,35)" fg:x="1" fg:w="41"/><text x="0.3299%" y="671.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (39 samples, 3.12%)</title><rect x="0.2396%" y="645" width="3.1150%" height="15" fill="rgb(233,154,20)" fg:x="3" fg:w="39"/><text x="0.4896%" y="655.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 3.04%)</title><rect x="0.3195%" y="629" width="3.0351%" height="15" fill="rgb(223,53,50)" fg:x="4" fg:w="38"/><text x="0.5695%" y="639.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (37 samples, 2.96%)</title><rect x="0.3994%" y="613" width="2.9553%" height="15" fill="rgb(251,27,26)" fg:x="5" fg:w="37"/><text x="0.6494%" y="623.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 2.96%)</title><rect x="0.3994%" y="597" width="2.9553%" height="15" fill="rgb(223,189,16)" fg:x="5" fg:w="37"/><text x="0.6494%" y="607.50">&lt;al..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.1949%" y="581" width="0.1597%" height="15" fill="rgb(207,5,54)" fg:x="40" fg:w="2"/><text x="3.4449%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.3546%" y="597" width="0.0799%" height="15" fill="rgb(254,124,50)" fg:x="42" fg:w="1"/><text x="3.6046%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.3546%" y="581" width="0.0799%" height="15" fill="rgb(253,193,24)" fg:x="42" fg:w="1"/><text x="3.6046%" y="591.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="3.4345%" y="597" width="0.0799%" height="15" fill="rgb(235,170,24)" fg:x="43" fg:w="1"/><text x="3.6845%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.08%)</title><rect x="3.4345%" y="581" width="0.0799%" height="15" fill="rgb(222,212,52)" fg:x="43" fg:w="1"/><text x="3.6845%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="3.6741%" y="565" width="0.0799%" height="15" fill="rgb(223,17,45)" fg:x="46" fg:w="1"/><text x="3.9241%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="3.6741%" y="549" width="0.0799%" height="15" fill="rgb(227,103,26)" fg:x="46" fg:w="1"/><text x="3.9241%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="3.6741%" y="533" width="0.0799%" height="15" fill="rgb(251,151,25)" fg:x="46" fg:w="1"/><text x="3.9241%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="3.6741%" y="517" width="0.0799%" height="15" fill="rgb(248,144,29)" fg:x="46" fg:w="1"/><text x="3.9241%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.6741%" y="501" width="0.0799%" height="15" fill="rgb(245,97,16)" fg:x="46" fg:w="1"/><text x="3.9241%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.6741%" y="485" width="0.0799%" height="15" fill="rgb(220,200,29)" fg:x="46" fg:w="1"/><text x="3.9241%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="3.6741%" y="469" width="0.0799%" height="15" fill="rgb(206,38,29)" fg:x="46" fg:w="1"/><text x="3.9241%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="3.6741%" y="453" width="0.0799%" height="15" fill="rgb(245,19,52)" fg:x="46" fg:w="1"/><text x="3.9241%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="3.6741%" y="437" width="0.0799%" height="15" fill="rgb(205,67,43)" fg:x="46" fg:w="1"/><text x="3.9241%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="3.6741%" y="421" width="0.0799%" height="15" fill="rgb(217,128,23)" fg:x="46" fg:w="1"/><text x="3.9241%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.6741%" y="405" width="0.0799%" height="15" fill="rgb(210,109,28)" fg:x="46" fg:w="1"/><text x="3.9241%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.6741%" y="389" width="0.0799%" height="15" fill="rgb(233,181,7)" fg:x="46" fg:w="1"/><text x="3.9241%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.6741%" y="373" width="0.0799%" height="15" fill="rgb(244,11,22)" fg:x="46" fg:w="1"/><text x="3.9241%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="3.6741%" y="357" width="0.0799%" height="15" fill="rgb(205,124,54)" fg:x="46" fg:w="1"/><text x="3.9241%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.6741%" y="341" width="0.0799%" height="15" fill="rgb(218,21,27)" fg:x="46" fg:w="1"/><text x="3.9241%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="3.6741%" y="325" width="0.0799%" height="15" fill="rgb(224,153,33)" fg:x="46" fg:w="1"/><text x="3.9241%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="3.6741%" y="309" width="0.0799%" height="15" fill="rgb(240,219,28)" fg:x="46" fg:w="1"/><text x="3.9241%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="3.6741%" y="293" width="0.0799%" height="15" fill="rgb(214,80,29)" fg:x="46" fg:w="1"/><text x="3.9241%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.6741%" y="277" width="0.0799%" height="15" fill="rgb(247,148,44)" fg:x="46" fg:w="1"/><text x="3.9241%" y="287.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="3.7540%" y="565" width="0.0799%" height="15" fill="rgb(243,110,30)" fg:x="47" fg:w="1"/><text x="4.0040%" y="575.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="3.8339%" y="549" width="0.2396%" height="15" fill="rgb(243,173,41)" fg:x="48" fg:w="3"/><text x="4.0839%" y="559.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="3.9137%" y="533" width="0.1597%" height="15" fill="rgb(225,160,47)" fg:x="49" fg:w="2"/><text x="4.1637%" y="543.50"></text></g><g><title>dlopen (18 samples, 1.44%)</title><rect x="4.0735%" y="549" width="1.4377%" height="15" fill="rgb(215,44,21)" fg:x="51" fg:w="18"/><text x="4.3235%" y="559.50"></text></g><g><title>_dl_catch_error (17 samples, 1.36%)</title><rect x="4.1534%" y="533" width="1.3578%" height="15" fill="rgb(248,90,3)" fg:x="52" fg:w="17"/><text x="4.4034%" y="543.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.36%)</title><rect x="4.1534%" y="517" width="1.3578%" height="15" fill="rgb(220,196,49)" fg:x="52" fg:w="17"/><text x="4.4034%" y="527.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.36%)</title><rect x="4.1534%" y="501" width="1.3578%" height="15" fill="rgb(217,138,14)" fg:x="52" fg:w="17"/><text x="4.4034%" y="511.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.36%)</title><rect x="4.1534%" y="485" width="1.3578%" height="15" fill="rgb(219,111,20)" fg:x="52" fg:w="17"/><text x="4.4034%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (25 samples, 2.00%)</title><rect x="3.5942%" y="581" width="1.9968%" height="15" fill="rgb(218,114,4)" fg:x="45" fg:w="25"/><text x="3.8442%" y="591.50">&lt;..</text></g><g><title>libloading::safe::Library::new (22 samples, 1.76%)</title><rect x="3.8339%" y="565" width="1.7572%" height="15" fill="rgb(238,133,3)" fg:x="48" fg:w="22"/><text x="4.0839%" y="575.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="5.5112%" y="549" width="0.0799%" height="15" fill="rgb(224,95,0)" fg:x="69" fg:w="1"/><text x="5.7612%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (29 samples, 2.32%)</title><rect x="3.5144%" y="597" width="2.3163%" height="15" fill="rgb(220,169,35)" fg:x="44" fg:w="29"/><text x="3.7644%" y="607.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.24%)</title><rect x="5.5911%" y="581" width="0.2396%" height="15" fill="rgb(242,116,47)" fg:x="70" fg:w="3"/><text x="5.8411%" y="591.50"></text></g><g><title>clock_gettime (3 samples, 0.24%)</title><rect x="5.5911%" y="565" width="0.2396%" height="15" fill="rgb(251,42,20)" fg:x="70" fg:w="3"/><text x="5.8411%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="5.8307%" y="565" width="0.1597%" height="15" fill="rgb(234,7,34)" fg:x="73" fg:w="2"/><text x="6.0807%" y="575.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (34 samples, 2.72%)</title><rect x="3.3546%" y="661" width="2.7157%" height="15" fill="rgb(243,208,13)" fg:x="42" fg:w="34"/><text x="3.6046%" y="671.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (34 samples, 2.72%)</title><rect x="3.3546%" y="645" width="2.7157%" height="15" fill="rgb(227,33,28)" fg:x="42" fg:w="34"/><text x="3.6046%" y="655.50">en..</text></g><g><title>engine::session::Session::new (34 samples, 2.72%)</title><rect x="3.3546%" y="629" width="2.7157%" height="15" fill="rgb(250,47,37)" fg:x="42" fg:w="34"/><text x="3.6046%" y="639.50">en..</text></g><g><title>engine::session::Session::initialize (34 samples, 2.72%)</title><rect x="3.3546%" y="613" width="2.7157%" height="15" fill="rgb(235,111,52)" fg:x="42" fg:w="34"/><text x="3.6046%" y="623.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="5.8307%" y="597" width="0.2396%" height="15" fill="rgb(223,64,28)" fg:x="73" fg:w="3"/><text x="6.0807%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="5.8307%" y="581" width="0.2396%" height="15" fill="rgb(236,67,22)" fg:x="73" fg:w="3"/><text x="6.0807%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.9904%" y="565" width="0.0799%" height="15" fill="rgb(243,79,24)" fg:x="75" fg:w="1"/><text x="6.2404%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.9904%" y="549" width="0.0799%" height="15" fill="rgb(241,225,22)" fg:x="75" fg:w="1"/><text x="6.2404%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.9904%" y="533" width="0.0799%" height="15" fill="rgb(228,214,26)" fg:x="75" fg:w="1"/><text x="6.2404%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.2300%" y="645" width="0.1597%" height="15" fill="rgb(219,84,52)" fg:x="78" fg:w="2"/><text x="6.4800%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.2300%" y="629" width="0.1597%" height="15" fill="rgb(220,12,22)" fg:x="78" fg:w="2"/><text x="6.4800%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.2300%" y="613" width="0.1597%" height="15" fill="rgb(219,9,49)" fg:x="78" fg:w="2"/><text x="6.4800%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="6.2300%" y="597" width="0.1597%" height="15" fill="rgb(237,40,43)" fg:x="78" fg:w="2"/><text x="6.4800%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="6.2300%" y="581" width="0.1597%" height="15" fill="rgb(212,189,32)" fg:x="78" fg:w="2"/><text x="6.4800%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="6.2300%" y="565" width="0.1597%" height="15" fill="rgb(247,48,9)" fg:x="78" fg:w="2"/><text x="6.4800%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="6.2300%" y="549" width="0.1597%" height="15" fill="rgb(247,112,3)" fg:x="78" fg:w="2"/><text x="6.4800%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="6.2300%" y="533" width="0.1597%" height="15" fill="rgb(243,110,18)" fg:x="78" fg:w="2"/><text x="6.4800%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="6.2300%" y="517" width="0.1597%" height="15" fill="rgb(233,223,44)" fg:x="78" fg:w="2"/><text x="6.4800%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="6.2300%" y="501" width="0.1597%" height="15" fill="rgb(245,160,20)" fg:x="78" fg:w="2"/><text x="6.4800%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="6.2300%" y="485" width="0.1597%" height="15" fill="rgb(225,37,1)" fg:x="78" fg:w="2"/><text x="6.4800%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="6.2300%" y="469" width="0.1597%" height="15" fill="rgb(253,227,39)" fg:x="78" fg:w="2"/><text x="6.4800%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.3099%" y="453" width="0.0799%" height="15" fill="rgb(240,179,26)" fg:x="79" fg:w="1"/><text x="6.5599%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="6.3898%" y="645" width="0.0799%" height="15" fill="rgb(237,212,23)" fg:x="80" fg:w="1"/><text x="6.6398%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.3898%" y="629" width="0.0799%" height="15" fill="rgb(221,38,11)" fg:x="80" fg:w="1"/><text x="6.6398%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4696%" y="613" width="0.0799%" height="15" fill="rgb(215,85,6)" fg:x="81" fg:w="1"/><text x="6.7196%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="6.4696%" y="629" width="0.1597%" height="15" fill="rgb(239,64,14)" fg:x="81" fg:w="2"/><text x="6.7196%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.5495%" y="613" width="0.0799%" height="15" fill="rgb(215,150,32)" fg:x="82" fg:w="1"/><text x="6.7995%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="6.6294%" y="597" width="0.1597%" height="15" fill="rgb(238,15,13)" fg:x="83" fg:w="2"/><text x="6.8794%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.7093%" y="581" width="0.0799%" height="15" fill="rgb(251,87,8)" fg:x="84" fg:w="1"/><text x="6.9593%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.7093%" y="565" width="0.0799%" height="15" fill="rgb(206,86,1)" fg:x="84" fg:w="1"/><text x="6.9593%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.7093%" y="549" width="0.0799%" height="15" fill="rgb(208,151,45)" fg:x="84" fg:w="1"/><text x="6.9593%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.7891%" y="597" width="0.0799%" height="15" fill="rgb(231,181,24)" fg:x="85" fg:w="1"/><text x="7.0391%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="6.7891%" y="581" width="0.0799%" height="15" fill="rgb(240,106,29)" fg:x="85" fg:w="1"/><text x="7.0391%" y="591.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="6.7891%" y="565" width="0.0799%" height="15" fill="rgb(227,166,11)" fg:x="85" fg:w="1"/><text x="7.0391%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="6.8690%" y="565" width="0.1597%" height="15" fill="rgb(254,14,34)" fg:x="86" fg:w="2"/><text x="7.1190%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="6.8690%" y="549" width="0.1597%" height="15" fill="rgb(223,222,6)" fg:x="86" fg:w="2"/><text x="7.1190%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="6.9489%" y="533" width="0.0799%" height="15" fill="rgb(245,69,24)" fg:x="87" fg:w="1"/><text x="7.1989%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="6.9489%" y="517" width="0.0799%" height="15" fill="rgb(213,193,7)" fg:x="87" fg:w="1"/><text x="7.1989%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.9489%" y="501" width="0.0799%" height="15" fill="rgb(237,92,51)" fg:x="87" fg:w="1"/><text x="7.1989%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="7.0288%" y="549" width="0.3994%" height="15" fill="rgb(225,194,6)" fg:x="88" fg:w="5"/><text x="7.2788%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.1885%" y="533" width="0.2396%" height="15" fill="rgb(205,159,49)" fg:x="90" fg:w="3"/><text x="7.4385%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.1885%" y="517" width="0.2396%" height="15" fill="rgb(219,69,2)" fg:x="90" fg:w="3"/><text x="7.4385%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.2684%" y="501" width="0.1597%" height="15" fill="rgb(215,107,24)" fg:x="91" fg:w="2"/><text x="7.5184%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.2684%" y="485" width="0.1597%" height="15" fill="rgb(249,208,29)" fg:x="91" fg:w="2"/><text x="7.5184%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.80%)</title><rect x="7.5080%" y="533" width="0.7987%" height="15" fill="rgb(213,147,10)" fg:x="94" fg:w="10"/><text x="7.7580%" y="543.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="7.8275%" y="517" width="0.4792%" height="15" fill="rgb(254,140,42)" fg:x="98" fg:w="6"/><text x="8.0775%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="7.9872%" y="501" width="0.3195%" height="15" fill="rgb(249,9,15)" fg:x="100" fg:w="4"/><text x="8.2372%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="7.9872%" y="485" width="0.3195%" height="15" fill="rgb(210,19,33)" fg:x="100" fg:w="4"/><text x="8.2372%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="7.9872%" y="469" width="0.3195%" height="15" fill="rgb(241,121,22)" fg:x="100" fg:w="4"/><text x="8.2372%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="7.9872%" y="453" width="0.3195%" height="15" fill="rgb(244,69,52)" fg:x="100" fg:w="4"/><text x="8.2372%" y="463.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="7.9872%" y="437" width="0.3195%" height="15" fill="rgb(244,191,54)" fg:x="100" fg:w="4"/><text x="8.2372%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="8.3067%" y="517" width="0.1597%" height="15" fill="rgb(250,3,53)" fg:x="104" fg:w="2"/><text x="8.5567%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.3067%" y="501" width="0.1597%" height="15" fill="rgb(205,77,3)" fg:x="104" fg:w="2"/><text x="8.5567%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.3067%" y="485" width="0.1597%" height="15" fill="rgb(207,155,3)" fg:x="104" fg:w="2"/><text x="8.5567%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.3067%" y="469" width="0.1597%" height="15" fill="rgb(224,79,2)" fg:x="104" fg:w="2"/><text x="8.5567%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.3067%" y="453" width="0.1597%" height="15" fill="rgb(243,172,5)" fg:x="104" fg:w="2"/><text x="8.5567%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.3067%" y="437" width="0.1597%" height="15" fill="rgb(217,23,43)" fg:x="104" fg:w="2"/><text x="8.5567%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.3866%" y="421" width="0.0799%" height="15" fill="rgb(223,109,20)" fg:x="105" fg:w="1"/><text x="8.6366%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.3866%" y="405" width="0.0799%" height="15" fill="rgb(232,159,21)" fg:x="105" fg:w="1"/><text x="8.6366%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.3866%" y="389" width="0.0799%" height="15" fill="rgb(219,58,2)" fg:x="105" fg:w="1"/><text x="8.6366%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.4665%" y="517" width="0.1597%" height="15" fill="rgb(241,56,8)" fg:x="106" fg:w="2"/><text x="8.7165%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.5463%" y="501" width="0.0799%" height="15" fill="rgb(249,10,27)" fg:x="107" fg:w="1"/><text x="8.7963%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.5463%" y="485" width="0.0799%" height="15" fill="rgb(248,177,5)" fg:x="107" fg:w="1"/><text x="8.7963%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.5463%" y="469" width="0.0799%" height="15" fill="rgb(239,12,30)" fg:x="107" fg:w="1"/><text x="8.7963%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.5463%" y="453" width="0.0799%" height="15" fill="rgb(229,164,25)" fg:x="107" fg:w="1"/><text x="8.7963%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.5463%" y="437" width="0.0799%" height="15" fill="rgb(231,217,50)" fg:x="107" fg:w="1"/><text x="8.7963%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.5463%" y="421" width="0.0799%" height="15" fill="rgb(247,99,32)" fg:x="107" fg:w="1"/><text x="8.7963%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.6262%" y="485" width="0.2396%" height="15" fill="rgb(240,74,50)" fg:x="108" fg:w="3"/><text x="8.8762%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.6262%" y="469" width="0.2396%" height="15" fill="rgb(218,54,8)" fg:x="108" fg:w="3"/><text x="8.8762%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.7061%" y="453" width="0.1597%" height="15" fill="rgb(227,132,20)" fg:x="109" fg:w="2"/><text x="8.9561%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.7859%" y="437" width="0.0799%" height="15" fill="rgb(232,134,12)" fg:x="110" fg:w="1"/><text x="9.0359%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.8658%" y="469" width="0.0799%" height="15" fill="rgb(250,129,18)" fg:x="111" fg:w="1"/><text x="9.1158%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.8658%" y="453" width="0.0799%" height="15" fill="rgb(232,129,47)" fg:x="111" fg:w="1"/><text x="9.1158%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.8658%" y="437" width="0.0799%" height="15" fill="rgb(230,31,40)" fg:x="111" fg:w="1"/><text x="9.1158%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8658%" y="421" width="0.0799%" height="15" fill="rgb(232,126,10)" fg:x="111" fg:w="1"/><text x="9.1158%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.9457%" y="469" width="0.1597%" height="15" fill="rgb(205,46,31)" fg:x="112" fg:w="2"/><text x="9.1957%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.9457%" y="453" width="0.1597%" height="15" fill="rgb(232,37,37)" fg:x="112" fg:w="2"/><text x="9.1957%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.9457%" y="437" width="0.1597%" height="15" fill="rgb(240,91,16)" fg:x="112" fg:w="2"/><text x="9.1957%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.9457%" y="421" width="0.1597%" height="15" fill="rgb(224,160,9)" fg:x="112" fg:w="2"/><text x="9.1957%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.9457%" y="405" width="0.1597%" height="15" fill="rgb(215,116,14)" fg:x="112" fg:w="2"/><text x="9.1957%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.0256%" y="389" width="0.0799%" height="15" fill="rgb(235,46,36)" fg:x="113" fg:w="1"/><text x="9.2756%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.0256%" y="373" width="0.0799%" height="15" fill="rgb(238,39,28)" fg:x="113" fg:w="1"/><text x="9.2756%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.0256%" y="357" width="0.0799%" height="15" fill="rgb(242,125,29)" fg:x="113" fg:w="1"/><text x="9.2756%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="8.8658%" y="485" width="0.3994%" height="15" fill="rgb(238,211,30)" fg:x="111" fg:w="5"/><text x="9.1158%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.1054%" y="469" width="0.1597%" height="15" fill="rgb(227,201,28)" fg:x="114" fg:w="2"/><text x="9.3554%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="8.3067%" y="533" width="1.0383%" height="15" fill="rgb(238,77,29)" fg:x="104" fg:w="13"/><text x="8.5567%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="8.6262%" y="517" width="0.7188%" height="15" fill="rgb(213,221,40)" fg:x="108" fg:w="9"/><text x="8.8762%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="8.6262%" y="501" width="0.7188%" height="15" fill="rgb(226,220,44)" fg:x="108" fg:w="9"/><text x="8.8762%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2652%" y="485" width="0.0799%" height="15" fill="rgb(228,90,23)" fg:x="116" fg:w="1"/><text x="9.5152%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.48%)</title><rect x="7.4281%" y="549" width="2.4760%" height="15" fill="rgb(235,72,29)" fg:x="93" fg:w="31"/><text x="7.6781%" y="559.50">se..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="9.3450%" y="533" width="0.5591%" height="15" fill="rgb(248,117,39)" fg:x="117" fg:w="7"/><text x="9.5950%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.6645%" y="517" width="0.2396%" height="15" fill="rgb(225,43,28)" fg:x="121" fg:w="3"/><text x="9.9145%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.6645%" y="501" width="0.2396%" height="15" fill="rgb(240,93,4)" fg:x="121" fg:w="3"/><text x="9.9145%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="9.6645%" y="485" width="0.2396%" height="15" fill="rgb(234,178,27)" fg:x="121" fg:w="3"/><text x="9.9145%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="9.6645%" y="469" width="0.2396%" height="15" fill="rgb(254,88,22)" fg:x="121" fg:w="3"/><text x="9.9145%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.8243%" y="453" width="0.0799%" height="15" fill="rgb(240,206,50)" fg:x="123" fg:w="1"/><text x="10.0743%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 2.96%)</title><rect x="7.0288%" y="565" width="2.9553%" height="15" fill="rgb(249,103,8)" fg:x="88" fg:w="37"/><text x="7.2788%" y="575.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.9042%" y="549" width="0.0799%" height="15" fill="rgb(241,178,36)" fg:x="124" fg:w="1"/><text x="10.1542%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.9042%" y="533" width="0.0799%" height="15" fill="rgb(246,110,15)" fg:x="124" fg:w="1"/><text x="10.1542%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.9042%" y="517" width="0.0799%" height="15" fill="rgb(207,14,43)" fg:x="124" fg:w="1"/><text x="10.1542%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.9840%" y="549" width="0.0799%" height="15" fill="rgb(253,219,19)" fg:x="125" fg:w="1"/><text x="10.2340%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.1438%" y="533" width="0.0799%" height="15" fill="rgb(216,126,5)" fg:x="127" fg:w="1"/><text x="10.3938%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="10.2236%" y="533" width="0.1597%" height="15" fill="rgb(218,78,42)" fg:x="128" fg:w="2"/><text x="10.4736%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3035%" y="517" width="0.0799%" height="15" fill="rgb(215,154,40)" fg:x="129" fg:w="1"/><text x="10.5535%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5431%" y="517" width="0.0799%" height="15" fill="rgb(235,129,32)" fg:x="132" fg:w="1"/><text x="10.7931%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.6230%" y="517" width="0.0799%" height="15" fill="rgb(218,51,8)" fg:x="133" fg:w="1"/><text x="10.8730%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.7029%" y="501" width="0.0799%" height="15" fill="rgb(245,48,4)" fg:x="134" fg:w="1"/><text x="10.9529%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.7827%" y="485" width="0.0799%" height="15" fill="rgb(250,175,12)" fg:x="135" fg:w="1"/><text x="11.0327%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="10.8626%" y="485" width="0.0799%" height="15" fill="rgb(237,95,40)" fg:x="136" fg:w="1"/><text x="11.1126%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.8626%" y="469" width="0.0799%" height="15" fill="rgb(244,120,0)" fg:x="136" fg:w="1"/><text x="11.1126%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8626%" y="453" width="0.0799%" height="15" fill="rgb(241,19,42)" fg:x="136" fg:w="1"/><text x="11.1126%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9425%" y="469" width="0.0799%" height="15" fill="rgb(217,174,48)" fg:x="137" fg:w="1"/><text x="11.1925%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9425%" y="453" width="0.0799%" height="15" fill="rgb(239,36,38)" fg:x="137" fg:w="1"/><text x="11.1925%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.1022%" y="453" width="0.0799%" height="15" fill="rgb(220,63,49)" fg:x="139" fg:w="1"/><text x="11.3522%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.1821%" y="453" width="0.0799%" height="15" fill="rgb(240,101,13)" fg:x="140" fg:w="1"/><text x="11.4321%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.1821%" y="437" width="0.0799%" height="15" fill="rgb(209,184,51)" fg:x="140" fg:w="1"/><text x="11.4321%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="9.9840%" y="565" width="1.3578%" height="15" fill="rgb(206,136,39)" fg:x="125" fg:w="17"/><text x="10.2340%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.28%)</title><rect x="10.0639%" y="549" width="1.2780%" height="15" fill="rgb(254,47,45)" fg:x="126" fg:w="16"/><text x="10.3139%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="10.3834%" y="533" width="0.9585%" height="15" fill="rgb(252,103,20)" fg:x="130" fg:w="12"/><text x="10.6334%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="10.7029%" y="517" width="0.6390%" height="15" fill="rgb(230,69,12)" fg:x="134" fg:w="8"/><text x="10.9529%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="10.7827%" y="501" width="0.5591%" height="15" fill="rgb(219,2,28)" fg:x="135" fg:w="7"/><text x="11.0327%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="10.9425%" y="485" width="0.3994%" height="15" fill="rgb(210,9,12)" fg:x="137" fg:w="5"/><text x="11.1925%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="11.0224%" y="469" width="0.3195%" height="15" fill="rgb(235,99,33)" fg:x="138" fg:w="4"/><text x="11.2724%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2620%" y="453" width="0.0799%" height="15" fill="rgb(230,11,38)" fg:x="141" fg:w="1"/><text x="11.5120%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="11.3419%" y="549" width="0.0799%" height="15" fill="rgb(217,129,0)" fg:x="142" fg:w="1"/><text x="11.5919%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="11.3419%" y="533" width="0.0799%" height="15" fill="rgb(222,198,4)" fg:x="142" fg:w="1"/><text x="11.5919%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="11.4217%" y="549" width="0.0799%" height="15" fill="rgb(246,170,27)" fg:x="143" fg:w="1"/><text x="11.6717%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.4217%" y="533" width="0.0799%" height="15" fill="rgb(229,17,28)" fg:x="143" fg:w="1"/><text x="11.6717%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.5815%" y="517" width="0.1597%" height="15" fill="rgb(233,198,48)" fg:x="145" fg:w="2"/><text x="11.8315%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.7412%" y="517" width="0.2396%" height="15" fill="rgb(238,103,23)" fg:x="147" fg:w="3"/><text x="11.9912%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9010%" y="501" width="0.0799%" height="15" fill="rgb(206,91,41)" fg:x="149" fg:w="1"/><text x="12.1510%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.9010%" y="485" width="0.0799%" height="15" fill="rgb(227,34,25)" fg:x="149" fg:w="1"/><text x="12.1510%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="11.9808%" y="517" width="0.0799%" height="15" fill="rgb(210,110,44)" fg:x="150" fg:w="1"/><text x="12.2308%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.9808%" y="501" width="0.0799%" height="15" fill="rgb(216,189,8)" fg:x="150" fg:w="1"/><text x="12.2308%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9808%" y="485" width="0.0799%" height="15" fill="rgb(234,9,46)" fg:x="150" fg:w="1"/><text x="12.2308%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="12.0607%" y="517" width="0.0799%" height="15" fill="rgb(251,200,5)" fg:x="151" fg:w="1"/><text x="12.3107%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.0607%" y="501" width="0.0799%" height="15" fill="rgb(238,165,37)" fg:x="151" fg:w="1"/><text x="12.3107%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0607%" y="485" width="0.0799%" height="15" fill="rgb(232,77,38)" fg:x="151" fg:w="1"/><text x="12.3107%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0607%" y="469" width="0.0799%" height="15" fill="rgb(253,179,33)" fg:x="151" fg:w="1"/><text x="12.3107%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.5399%" y="485" width="0.0799%" height="15" fill="rgb(240,13,35)" fg:x="157" fg:w="1"/><text x="12.7899%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6198%" y="469" width="0.0799%" height="15" fill="rgb(242,150,49)" fg:x="158" fg:w="1"/><text x="12.8698%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6198%" y="453" width="0.0799%" height="15" fill="rgb(237,176,28)" fg:x="158" fg:w="1"/><text x="12.8698%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6198%" y="437" width="0.0799%" height="15" fill="rgb(214,176,33)" fg:x="158" fg:w="1"/><text x="12.8698%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.7796%" y="437" width="0.0799%" height="15" fill="rgb(214,25,12)" fg:x="160" fg:w="1"/><text x="13.0296%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7796%" y="421" width="0.0799%" height="15" fill="rgb(238,190,20)" fg:x="160" fg:w="1"/><text x="13.0296%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7796%" y="405" width="0.0799%" height="15" fill="rgb(208,11,19)" fg:x="160" fg:w="1"/><text x="13.0296%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="12.6997%" y="469" width="0.2396%" height="15" fill="rgb(239,90,4)" fg:x="159" fg:w="3"/><text x="12.9497%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="12.6997%" y="453" width="0.2396%" height="15" fill="rgb(248,110,3)" fg:x="159" fg:w="3"/><text x="12.9497%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8594%" y="437" width="0.0799%" height="15" fill="rgb(210,41,30)" fg:x="161" fg:w="1"/><text x="13.1094%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="13.0192%" y="453" width="0.0799%" height="15" fill="rgb(239,36,8)" fg:x="163" fg:w="1"/><text x="13.2692%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0990%" y="405" width="0.0799%" height="15" fill="rgb(237,201,47)" fg:x="164" fg:w="1"/><text x="13.3490%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.0990%" y="437" width="0.1597%" height="15" fill="rgb(224,140,29)" fg:x="164" fg:w="2"/><text x="13.3490%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.0990%" y="421" width="0.1597%" height="15" fill="rgb(231,209,17)" fg:x="164" fg:w="2"/><text x="13.3490%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.1789%" y="405" width="0.0799%" height="15" fill="rgb(249,196,1)" fg:x="165" fg:w="1"/><text x="13.4289%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.4185%" y="373" width="0.1597%" height="15" fill="rgb(223,207,51)" fg:x="168" fg:w="2"/><text x="13.6685%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.4984%" y="357" width="0.0799%" height="15" fill="rgb(210,14,40)" fg:x="169" fg:w="1"/><text x="13.7484%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.4984%" y="341" width="0.0799%" height="15" fill="rgb(250,20,52)" fg:x="169" fg:w="1"/><text x="13.7484%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="13.4185%" y="389" width="0.2396%" height="15" fill="rgb(241,46,11)" fg:x="168" fg:w="3"/><text x="13.6685%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="13.5783%" y="373" width="0.0799%" height="15" fill="rgb(219,105,5)" fg:x="170" fg:w="1"/><text x="13.8283%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="13.5783%" y="357" width="0.0799%" height="15" fill="rgb(252,77,35)" fg:x="170" fg:w="1"/><text x="13.8283%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5783%" y="341" width="0.0799%" height="15" fill="rgb(243,119,2)" fg:x="170" fg:w="1"/><text x="13.8283%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5783%" y="325" width="0.0799%" height="15" fill="rgb(206,82,28)" fg:x="170" fg:w="1"/><text x="13.8283%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5783%" y="309" width="0.0799%" height="15" fill="rgb(227,120,12)" fg:x="170" fg:w="1"/><text x="13.8283%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="13.4185%" y="421" width="0.3994%" height="15" fill="rgb(229,134,41)" fg:x="168" fg:w="5"/><text x="13.6685%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="13.4185%" y="405" width="0.3994%" height="15" fill="rgb(239,96,32)" fg:x="168" fg:w="5"/><text x="13.6685%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.6581%" y="389" width="0.1597%" height="15" fill="rgb(225,46,27)" fg:x="171" fg:w="2"/><text x="13.9081%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="13.0990%" y="453" width="0.7987%" height="15" fill="rgb(215,168,2)" fg:x="164" fg:w="10"/><text x="13.3490%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="13.2588%" y="437" width="0.6390%" height="15" fill="rgb(207,170,52)" fg:x="166" fg:w="8"/><text x="13.5088%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8179%" y="421" width="0.0799%" height="15" fill="rgb(237,198,36)" fg:x="173" fg:w="1"/><text x="14.0679%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="12.6198%" y="485" width="1.3578%" height="15" fill="rgb(213,27,14)" fg:x="158" fg:w="17"/><text x="12.8698%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.04%)</title><rect x="12.9393%" y="469" width="1.0383%" height="15" fill="rgb(218,77,5)" fg:x="162" fg:w="13"/><text x="13.1893%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8978%" y="453" width="0.0799%" height="15" fill="rgb(230,219,39)" fg:x="174" fg:w="1"/><text x="14.1478%" y="463.50"></text></g><g><title>engine::session::Session::flush (95 samples, 7.59%)</title><rect x="6.4696%" y="645" width="7.5879%" height="15" fill="rgb(245,177,7)" fg:x="81" fg:w="95"/><text x="6.7196%" y="655.50">engine::se..</text></g><g><title>engine::session::state::State::close (93 samples, 7.43%)</title><rect x="6.6294%" y="629" width="7.4281%" height="15" fill="rgb(246,44,46)" fg:x="83" fg:w="93"/><text x="6.8794%" y="639.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (93 samples, 7.43%)</title><rect x="6.6294%" y="613" width="7.4281%" height="15" fill="rgb(207,173,15)" fg:x="83" fg:w="93"/><text x="6.8794%" y="623.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (90 samples, 7.19%)</title><rect x="6.8690%" y="597" width="7.1885%" height="15" fill="rgb(245,170,50)" fg:x="86" fg:w="90"/><text x="7.1190%" y="607.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (90 samples, 7.19%)</title><rect x="6.8690%" y="581" width="7.1885%" height="15" fill="rgb(233,156,21)" fg:x="86" fg:w="90"/><text x="7.1190%" y="591.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (34 samples, 2.72%)</title><rect x="11.3419%" y="565" width="2.7157%" height="15" fill="rgb(253,146,27)" fg:x="142" fg:w="34"/><text x="11.5919%" y="575.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (32 samples, 2.56%)</title><rect x="11.5016%" y="549" width="2.5559%" height="15" fill="rgb(247,66,29)" fg:x="144" fg:w="32"/><text x="11.7516%" y="559.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.48%)</title><rect x="11.5815%" y="533" width="2.4760%" height="15" fill="rgb(218,207,26)" fg:x="145" fg:w="31"/><text x="11.8315%" y="543.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.92%)</title><rect x="12.1406%" y="517" width="1.9169%" height="15" fill="rgb(234,93,26)" fg:x="152" fg:w="24"/><text x="12.3906%" y="527.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.68%)</title><rect x="12.3802%" y="501" width="1.6773%" height="15" fill="rgb(214,75,48)" fg:x="155" fg:w="21"/><text x="12.6302%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="13.9776%" y="485" width="0.0799%" height="15" fill="rgb(229,119,22)" fg:x="175" fg:w="1"/><text x="14.2276%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9776%" y="469" width="0.0799%" height="15" fill="rgb(226,153,19)" fg:x="175" fg:w="1"/><text x="14.2276%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.0575%" y="613" width="0.0799%" height="15" fill="rgb(220,204,36)" fg:x="176" fg:w="1"/><text x="14.3075%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.0575%" y="597" width="0.0799%" height="15" fill="rgb(253,181,43)" fg:x="176" fg:w="1"/><text x="14.3075%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.0575%" y="581" width="0.0799%" height="15" fill="rgb(211,41,51)" fg:x="176" fg:w="1"/><text x="14.3075%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1374%" y="565" width="0.1597%" height="15" fill="rgb(207,215,0)" fg:x="177" fg:w="2"/><text x="14.3874%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1374%" y="549" width="0.1597%" height="15" fill="rgb(212,153,10)" fg:x="177" fg:w="2"/><text x="14.3874%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1374%" y="533" width="0.1597%" height="15" fill="rgb(251,171,36)" fg:x="177" fg:w="2"/><text x="14.3874%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1374%" y="517" width="0.1597%" height="15" fill="rgb(225,219,41)" fg:x="177" fg:w="2"/><text x="14.3874%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.2173%" y="501" width="0.0799%" height="15" fill="rgb(208,200,1)" fg:x="178" fg:w="1"/><text x="14.4673%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.2173%" y="485" width="0.0799%" height="15" fill="rgb(206,75,47)" fg:x="178" fg:w="1"/><text x="14.4673%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.2173%" y="469" width="0.0799%" height="15" fill="rgb(248,3,16)" fg:x="178" fg:w="1"/><text x="14.4673%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.2173%" y="453" width="0.0799%" height="15" fill="rgb(242,157,36)" fg:x="178" fg:w="1"/><text x="14.4673%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.2173%" y="437" width="0.0799%" height="15" fill="rgb(215,175,11)" fg:x="178" fg:w="1"/><text x="14.4673%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.2173%" y="421" width="0.0799%" height="15" fill="rgb(252,222,22)" fg:x="178" fg:w="1"/><text x="14.4673%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.2173%" y="405" width="0.0799%" height="15" fill="rgb(250,121,35)" fg:x="178" fg:w="1"/><text x="14.4673%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.2173%" y="389" width="0.0799%" height="15" fill="rgb(233,120,49)" fg:x="178" fg:w="1"/><text x="14.4673%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.2173%" y="373" width="0.0799%" height="15" fill="rgb(205,201,14)" fg:x="178" fg:w="1"/><text x="14.4673%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.2173%" y="357" width="0.0799%" height="15" fill="rgb(219,58,45)" fg:x="178" fg:w="1"/><text x="14.4673%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.2173%" y="341" width="0.0799%" height="15" fill="rgb(251,65,12)" fg:x="178" fg:w="1"/><text x="14.4673%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2173%" y="325" width="0.0799%" height="15" fill="rgb(224,47,31)" fg:x="178" fg:w="1"/><text x="14.4673%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.2971%" y="469" width="0.0799%" height="15" fill="rgb(233,74,26)" fg:x="179" fg:w="1"/><text x="14.5471%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="14.1374%" y="613" width="0.3994%" height="15" fill="rgb(231,211,31)" fg:x="177" fg:w="5"/><text x="14.3874%" y="623.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="14.1374%" y="597" width="0.3994%" height="15" fill="rgb(239,167,5)" fg:x="177" fg:w="5"/><text x="14.3874%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="14.1374%" y="581" width="0.3994%" height="15" fill="rgb(241,85,0)" fg:x="177" fg:w="5"/><text x="14.3874%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.2971%" y="565" width="0.2396%" height="15" fill="rgb(229,130,21)" fg:x="179" fg:w="3"/><text x="14.5471%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.2971%" y="549" width="0.2396%" height="15" fill="rgb(254,84,49)" fg:x="179" fg:w="3"/><text x="14.5471%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.2971%" y="533" width="0.2396%" height="15" fill="rgb(235,85,21)" fg:x="179" fg:w="3"/><text x="14.5471%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.2971%" y="517" width="0.2396%" height="15" fill="rgb(246,128,52)" fg:x="179" fg:w="3"/><text x="14.5471%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="14.2971%" y="501" width="0.2396%" height="15" fill="rgb(243,114,49)" fg:x="179" fg:w="3"/><text x="14.5471%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.2971%" y="485" width="0.2396%" height="15" fill="rgb(240,224,22)" fg:x="179" fg:w="3"/><text x="14.5471%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.3770%" y="469" width="0.1597%" height="15" fill="rgb(247,201,52)" fg:x="180" fg:w="2"/><text x="14.6270%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.3770%" y="453" width="0.1597%" height="15" fill="rgb(231,70,45)" fg:x="180" fg:w="2"/><text x="14.6270%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (2 samples, 0.16%)</title><rect x="14.5367%" y="597" width="0.1597%" height="15" fill="rgb(217,215,20)" fg:x="182" fg:w="2"/><text x="14.7867%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="14.5367%" y="581" width="0.1597%" height="15" fill="rgb(226,170,30)" fg:x="182" fg:w="2"/><text x="14.7867%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="14.6965%" y="597" width="0.1597%" height="15" fill="rgb(220,190,43)" fg:x="184" fg:w="2"/><text x="14.9465%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.7764%" y="581" width="0.0799%" height="15" fill="rgb(218,20,18)" fg:x="185" fg:w="1"/><text x="15.0264%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8562%" y="581" width="0.0799%" height="15" fill="rgb(245,37,26)" fg:x="186" fg:w="1"/><text x="15.1062%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8562%" y="565" width="0.0799%" height="15" fill="rgb(241,127,29)" fg:x="186" fg:w="1"/><text x="15.1062%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.9361%" y="581" width="0.0799%" height="15" fill="rgb(241,33,26)" fg:x="187" fg:w="1"/><text x="15.1861%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.9361%" y="565" width="0.0799%" height="15" fill="rgb(220,106,21)" fg:x="187" fg:w="1"/><text x="15.1861%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9361%" y="549" width="0.0799%" height="15" fill="rgb(225,125,35)" fg:x="187" fg:w="1"/><text x="15.1861%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9361%" y="533" width="0.0799%" height="15" fill="rgb(248,80,22)" fg:x="187" fg:w="1"/><text x="15.1861%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (7 samples, 0.56%)</title><rect x="14.5367%" y="613" width="0.5591%" height="15" fill="rgb(231,117,39)" fg:x="182" fg:w="7"/><text x="14.7867%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="14.8562%" y="597" width="0.2396%" height="15" fill="rgb(239,183,16)" fg:x="186" fg:w="3"/><text x="15.1062%" y="607.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0160%" y="581" width="0.0799%" height="15" fill="rgb(221,61,19)" fg:x="188" fg:w="1"/><text x="15.2660%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.0160%" y="565" width="0.0799%" height="15" fill="rgb(239,196,44)" fg:x="188" fg:w="1"/><text x="15.2660%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0160%" y="549" width="0.0799%" height="15" fill="rgb(206,113,19)" fg:x="188" fg:w="1"/><text x="15.2660%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.0160%" y="533" width="0.0799%" height="15" fill="rgb(245,114,12)" fg:x="188" fg:w="1"/><text x="15.2660%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0160%" y="517" width="0.0799%" height="15" fill="rgb(247,89,39)" fg:x="188" fg:w="1"/><text x="15.2660%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0160%" y="501" width="0.0799%" height="15" fill="rgb(213,85,14)" fg:x="188" fg:w="1"/><text x="15.2660%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0958%" y="533" width="0.0799%" height="15" fill="rgb(249,206,33)" fg:x="189" fg:w="1"/><text x="15.3458%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0958%" y="517" width="0.0799%" height="15" fill="rgb(235,167,47)" fg:x="189" fg:w="1"/><text x="15.3458%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1757%" y="469" width="0.0799%" height="15" fill="rgb(217,177,16)" fg:x="190" fg:w="1"/><text x="15.4257%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="15.0958%" y="565" width="0.2396%" height="15" fill="rgb(250,228,29)" fg:x="189" fg:w="3"/><text x="15.3458%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.0958%" y="549" width="0.2396%" height="15" fill="rgb(216,195,42)" fg:x="189" fg:w="3"/><text x="15.3458%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1757%" y="533" width="0.1597%" height="15" fill="rgb(232,192,32)" fg:x="190" fg:w="2"/><text x="15.4257%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1757%" y="517" width="0.1597%" height="15" fill="rgb(211,8,47)" fg:x="190" fg:w="2"/><text x="15.4257%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1757%" y="501" width="0.1597%" height="15" fill="rgb(251,201,9)" fg:x="190" fg:w="2"/><text x="15.4257%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1757%" y="485" width="0.1597%" height="15" fill="rgb(206,185,47)" fg:x="190" fg:w="2"/><text x="15.4257%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.2556%" y="469" width="0.0799%" height="15" fill="rgb(245,54,32)" fg:x="191" fg:w="1"/><text x="15.5056%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2556%" y="453" width="0.0799%" height="15" fill="rgb(208,1,8)" fg:x="191" fg:w="1"/><text x="15.5056%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.2556%" y="437" width="0.0799%" height="15" fill="rgb(228,57,24)" fg:x="191" fg:w="1"/><text x="15.5056%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3355%" y="517" width="0.0799%" height="15" fill="rgb(251,24,8)" fg:x="192" fg:w="1"/><text x="15.5855%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3355%" y="501" width="0.0799%" height="15" fill="rgb(236,196,50)" fg:x="192" fg:w="1"/><text x="15.5855%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3355%" y="485" width="0.0799%" height="15" fill="rgb(246,222,29)" fg:x="192" fg:w="1"/><text x="15.5855%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3355%" y="469" width="0.0799%" height="15" fill="rgb(211,34,40)" fg:x="192" fg:w="1"/><text x="15.5855%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3355%" y="453" width="0.0799%" height="15" fill="rgb(210,66,51)" fg:x="192" fg:w="1"/><text x="15.5855%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.3355%" y="437" width="0.0799%" height="15" fill="rgb(250,56,43)" fg:x="192" fg:w="1"/><text x="15.5855%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.3355%" y="421" width="0.0799%" height="15" fill="rgb(240,111,50)" fg:x="192" fg:w="1"/><text x="15.5855%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.3355%" y="405" width="0.0799%" height="15" fill="rgb(209,117,13)" fg:x="192" fg:w="1"/><text x="15.5855%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3355%" y="389" width="0.0799%" height="15" fill="rgb(232,164,45)" fg:x="192" fg:w="1"/><text x="15.5855%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3355%" y="373" width="0.0799%" height="15" fill="rgb(205,69,32)" fg:x="192" fg:w="1"/><text x="15.5855%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.3355%" y="357" width="0.0799%" height="15" fill="rgb(240,147,45)" fg:x="192" fg:w="1"/><text x="15.5855%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.3355%" y="341" width="0.0799%" height="15" fill="rgb(221,94,48)" fg:x="192" fg:w="1"/><text x="15.5855%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.3355%" y="325" width="0.0799%" height="15" fill="rgb(249,209,17)" fg:x="192" fg:w="1"/><text x="15.5855%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.3355%" y="309" width="0.0799%" height="15" fill="rgb(228,57,28)" fg:x="192" fg:w="1"/><text x="15.5855%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3355%" y="293" width="0.0799%" height="15" fill="rgb(250,133,26)" fg:x="192" fg:w="1"/><text x="15.5855%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.3355%" y="533" width="0.1597%" height="15" fill="rgb(254,15,16)" fg:x="192" fg:w="2"/><text x="15.5855%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.4153%" y="517" width="0.0799%" height="15" fill="rgb(209,147,42)" fg:x="193" fg:w="1"/><text x="15.6653%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.4952%" y="469" width="0.0799%" height="15" fill="rgb(208,5,29)" fg:x="194" fg:w="1"/><text x="15.7452%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="15.0958%" y="597" width="0.5591%" height="15" fill="rgb(250,73,31)" fg:x="189" fg:w="7"/><text x="15.3458%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="15.0958%" y="581" width="0.5591%" height="15" fill="rgb(238,45,10)" fg:x="189" fg:w="7"/><text x="15.3458%" y="591.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="15.3355%" y="565" width="0.3195%" height="15" fill="rgb(214,104,5)" fg:x="192" fg:w="4"/><text x="15.5855%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="15.3355%" y="549" width="0.3195%" height="15" fill="rgb(242,217,19)" fg:x="192" fg:w="4"/><text x="15.5855%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.4952%" y="533" width="0.1597%" height="15" fill="rgb(246,113,27)" fg:x="194" fg:w="2"/><text x="15.7452%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="15.4952%" y="517" width="0.1597%" height="15" fill="rgb(221,34,27)" fg:x="194" fg:w="2"/><text x="15.7452%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.4952%" y="501" width="0.1597%" height="15" fill="rgb(246,109,6)" fg:x="194" fg:w="2"/><text x="15.7452%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.4952%" y="485" width="0.1597%" height="15" fill="rgb(217,12,25)" fg:x="194" fg:w="2"/><text x="15.7452%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5751%" y="469" width="0.0799%" height="15" fill="rgb(250,195,5)" fg:x="195" fg:w="1"/><text x="15.8251%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5751%" y="453" width="0.0799%" height="15" fill="rgb(244,140,45)" fg:x="195" fg:w="1"/><text x="15.8251%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (32 samples, 2.56%)</title><rect x="14.0575%" y="629" width="2.5559%" height="15" fill="rgb(230,64,14)" fg:x="176" fg:w="32"/><text x="14.3075%" y="639.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_entity (19 samples, 1.52%)</title><rect x="15.0958%" y="613" width="1.5176%" height="15" fill="rgb(206,27,27)" fg:x="189" fg:w="19"/><text x="15.3458%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (12 samples, 0.96%)</title><rect x="15.6550%" y="597" width="0.9585%" height="15" fill="rgb(230,14,50)" fg:x="196" fg:w="12"/><text x="15.9050%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.96%)</title><rect x="15.6550%" y="581" width="0.9585%" height="15" fill="rgb(237,172,14)" fg:x="196" fg:w="12"/><text x="15.9050%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.96%)</title><rect x="15.6550%" y="565" width="0.9585%" height="15" fill="rgb(209,25,21)" fg:x="196" fg:w="12"/><text x="15.9050%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.96%)</title><rect x="15.6550%" y="549" width="0.9585%" height="15" fill="rgb(248,148,22)" fg:x="196" fg:w="12"/><text x="15.9050%" y="559.50"></text></g><g><title>__libc_malloc (11 samples, 0.88%)</title><rect x="15.7348%" y="533" width="0.8786%" height="15" fill="rgb(234,100,22)" fg:x="197" fg:w="11"/><text x="15.9848%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="16.6134%" y="629" width="0.0799%" height="15" fill="rgb(210,20,30)" fg:x="208" fg:w="1"/><text x="16.8634%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="16.6134%" y="613" width="0.0799%" height="15" fill="rgb(232,58,0)" fg:x="208" fg:w="1"/><text x="16.8634%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.6134%" y="597" width="0.0799%" height="15" fill="rgb(221,68,13)" fg:x="208" fg:w="1"/><text x="16.8634%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6933%" y="533" width="0.0799%" height="15" fill="rgb(231,194,11)" fg:x="209" fg:w="1"/><text x="16.9433%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6933%" y="517" width="0.0799%" height="15" fill="rgb(235,51,41)" fg:x="209" fg:w="1"/><text x="16.9433%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7732%" y="533" width="0.0799%" height="15" fill="rgb(240,50,32)" fg:x="210" fg:w="1"/><text x="17.0232%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="16.8530%" y="469" width="0.1597%" height="15" fill="rgb(240,185,36)" fg:x="211" fg:w="2"/><text x="17.1030%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.8530%" y="453" width="0.1597%" height="15" fill="rgb(211,168,15)" fg:x="211" fg:w="2"/><text x="17.1030%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.8530%" y="437" width="0.1597%" height="15" fill="rgb(221,70,0)" fg:x="211" fg:w="2"/><text x="17.1030%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.8530%" y="421" width="0.1597%" height="15" fill="rgb(205,21,33)" fg:x="211" fg:w="2"/><text x="17.1030%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.9329%" y="405" width="0.0799%" height="15" fill="rgb(225,106,10)" fg:x="212" fg:w="1"/><text x="17.1829%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.9329%" y="389" width="0.0799%" height="15" fill="rgb(236,200,50)" fg:x="212" fg:w="1"/><text x="17.1829%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.9329%" y="373" width="0.0799%" height="15" fill="rgb(249,93,23)" fg:x="212" fg:w="1"/><text x="17.1829%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="16.6933%" y="581" width="0.3994%" height="15" fill="rgb(244,115,35)" fg:x="209" fg:w="5"/><text x="16.9433%" y="591.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="16.6933%" y="565" width="0.3994%" height="15" fill="rgb(231,129,47)" fg:x="209" fg:w="5"/><text x="16.9433%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="16.6933%" y="549" width="0.3994%" height="15" fill="rgb(225,160,50)" fg:x="209" fg:w="5"/><text x="16.9433%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="16.8530%" y="533" width="0.2396%" height="15" fill="rgb(218,135,23)" fg:x="211" fg:w="3"/><text x="17.1030%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.8530%" y="517" width="0.2396%" height="15" fill="rgb(227,119,14)" fg:x="211" fg:w="3"/><text x="17.1030%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="16.8530%" y="501" width="0.2396%" height="15" fill="rgb(242,138,13)" fg:x="211" fg:w="3"/><text x="17.1030%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.8530%" y="485" width="0.2396%" height="15" fill="rgb(215,11,16)" fg:x="211" fg:w="3"/><text x="17.1030%" y="495.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="17.0128%" y="469" width="0.0799%" height="15" fill="rgb(234,170,50)" fg:x="213" fg:w="1"/><text x="17.2628%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0927%" y="533" width="0.0799%" height="15" fill="rgb(233,34,20)" fg:x="214" fg:w="1"/><text x="17.3427%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0927%" y="517" width="0.0799%" height="15" fill="rgb(237,100,45)" fg:x="214" fg:w="1"/><text x="17.3427%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0927%" y="501" width="0.0799%" height="15" fill="rgb(231,184,36)" fg:x="214" fg:w="1"/><text x="17.3427%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0927%" y="485" width="0.0799%" height="15" fill="rgb(252,93,2)" fg:x="214" fg:w="1"/><text x="17.3427%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0927%" y="469" width="0.0799%" height="15" fill="rgb(248,176,47)" fg:x="214" fg:w="1"/><text x="17.3427%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0927%" y="453" width="0.0799%" height="15" fill="rgb(249,125,23)" fg:x="214" fg:w="1"/><text x="17.3427%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.1725%" y="533" width="0.0799%" height="15" fill="rgb(239,67,42)" fg:x="215" fg:w="1"/><text x="17.4225%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.1725%" y="517" width="0.0799%" height="15" fill="rgb(244,162,4)" fg:x="215" fg:w="1"/><text x="17.4225%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.1725%" y="501" width="0.0799%" height="15" fill="rgb(214,150,38)" fg:x="215" fg:w="1"/><text x="17.4225%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="16.6933%" y="613" width="0.7987%" height="15" fill="rgb(228,211,28)" fg:x="209" fg:w="10"/><text x="16.9433%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="16.6933%" y="597" width="0.7987%" height="15" fill="rgb(212,98,48)" fg:x="209" fg:w="10"/><text x="16.9433%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="17.0927%" y="581" width="0.3994%" height="15" fill="rgb(213,45,13)" fg:x="214" fg:w="5"/><text x="17.3427%" y="591.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="17.0927%" y="565" width="0.3994%" height="15" fill="rgb(218,35,29)" fg:x="214" fg:w="5"/><text x="17.3427%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="17.0927%" y="549" width="0.3994%" height="15" fill="rgb(244,13,3)" fg:x="214" fg:w="5"/><text x="17.3427%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.2524%" y="533" width="0.2396%" height="15" fill="rgb(235,170,19)" fg:x="216" fg:w="3"/><text x="17.5024%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.2524%" y="517" width="0.2396%" height="15" fill="rgb(233,193,43)" fg:x="216" fg:w="3"/><text x="17.5024%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.2524%" y="501" width="0.2396%" height="15" fill="rgb(228,223,20)" fg:x="216" fg:w="3"/><text x="17.5024%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.2524%" y="485" width="0.2396%" height="15" fill="rgb(208,85,54)" fg:x="216" fg:w="3"/><text x="17.5024%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="17.2524%" y="469" width="0.2396%" height="15" fill="rgb(254,14,45)" fg:x="216" fg:w="3"/><text x="17.5024%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.2524%" y="453" width="0.2396%" height="15" fill="rgb(247,99,29)" fg:x="216" fg:w="3"/><text x="17.5024%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.2524%" y="437" width="0.2396%" height="15" fill="rgb(225,180,54)" fg:x="216" fg:w="3"/><text x="17.5024%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.2524%" y="421" width="0.2396%" height="15" fill="rgb(239,88,43)" fg:x="216" fg:w="3"/><text x="17.5024%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.4121%" y="405" width="0.0799%" height="15" fill="rgb(209,47,11)" fg:x="218" fg:w="1"/><text x="17.6621%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.4121%" y="389" width="0.0799%" height="15" fill="rgb(219,179,23)" fg:x="218" fg:w="1"/><text x="17.6621%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="17.4121%" y="373" width="0.0799%" height="15" fill="rgb(213,183,19)" fg:x="218" fg:w="1"/><text x="17.6621%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="17.4121%" y="357" width="0.0799%" height="15" fill="rgb(210,11,9)" fg:x="218" fg:w="1"/><text x="17.6621%" y="367.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.4920%" y="613" width="0.0799%" height="15" fill="rgb(239,194,16)" fg:x="219" fg:w="1"/><text x="17.7420%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4920%" y="597" width="0.0799%" height="15" fill="rgb(246,23,50)" fg:x="219" fg:w="1"/><text x="17.7420%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4920%" y="581" width="0.0799%" height="15" fill="rgb(245,10,41)" fg:x="219" fg:w="1"/><text x="17.7420%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.4920%" y="565" width="0.0799%" height="15" fill="rgb(228,43,24)" fg:x="219" fg:w="1"/><text x="17.7420%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="17.4920%" y="549" width="0.0799%" height="15" fill="rgb(220,151,0)" fg:x="219" fg:w="1"/><text x="17.7420%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="17.5719%" y="549" width="0.0799%" height="15" fill="rgb(232,219,10)" fg:x="220" fg:w="1"/><text x="17.8219%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5719%" y="533" width="0.0799%" height="15" fill="rgb(227,217,48)" fg:x="220" fg:w="1"/><text x="17.8219%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6518%" y="517" width="0.0799%" height="15" fill="rgb(210,66,35)" fg:x="221" fg:w="1"/><text x="17.9018%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6518%" y="501" width="0.0799%" height="15" fill="rgb(254,6,7)" fg:x="221" fg:w="1"/><text x="17.9018%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6518%" y="485" width="0.0799%" height="15" fill="rgb(235,222,42)" fg:x="221" fg:w="1"/><text x="17.9018%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6518%" y="469" width="0.0799%" height="15" fill="rgb(245,126,5)" fg:x="221" fg:w="1"/><text x="17.9018%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6518%" y="453" width="0.0799%" height="15" fill="rgb(215,73,17)" fg:x="221" fg:w="1"/><text x="17.9018%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7316%" y="517" width="0.0799%" height="15" fill="rgb(219,198,52)" fg:x="222" fg:w="1"/><text x="17.9816%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7316%" y="501" width="0.0799%" height="15" fill="rgb(217,159,18)" fg:x="222" fg:w="1"/><text x="17.9816%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7316%" y="485" width="0.0799%" height="15" fill="rgb(212,177,18)" fg:x="222" fg:w="1"/><text x="17.9816%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7316%" y="469" width="0.0799%" height="15" fill="rgb(241,10,11)" fg:x="222" fg:w="1"/><text x="17.9816%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7316%" y="453" width="0.0799%" height="15" fill="rgb(232,114,35)" fg:x="222" fg:w="1"/><text x="17.9816%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.7316%" y="437" width="0.0799%" height="15" fill="rgb(238,222,8)" fg:x="222" fg:w="1"/><text x="17.9816%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.7316%" y="421" width="0.0799%" height="15" fill="rgb(251,153,44)" fg:x="222" fg:w="1"/><text x="17.9816%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.7316%" y="405" width="0.0799%" height="15" fill="rgb(210,140,51)" fg:x="222" fg:w="1"/><text x="17.9816%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.8914%" y="389" width="0.0799%" height="15" fill="rgb(222,63,0)" fg:x="224" fg:w="1"/><text x="18.1414%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8914%" y="373" width="0.0799%" height="15" fill="rgb(240,18,40)" fg:x="224" fg:w="1"/><text x="18.1414%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9712%" y="357" width="0.0799%" height="15" fill="rgb(237,88,16)" fg:x="225" fg:w="1"/><text x="18.2212%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="17.5719%" y="565" width="0.5591%" height="15" fill="rgb(251,117,13)" fg:x="220" fg:w="7"/><text x="17.8219%" y="575.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="17.6518%" y="549" width="0.4792%" height="15" fill="rgb(251,228,8)" fg:x="221" fg:w="6"/><text x="17.9018%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="17.6518%" y="533" width="0.4792%" height="15" fill="rgb(205,107,49)" fg:x="221" fg:w="6"/><text x="17.9018%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="17.8115%" y="517" width="0.3195%" height="15" fill="rgb(238,72,41)" fg:x="223" fg:w="4"/><text x="18.0615%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="17.8115%" y="501" width="0.3195%" height="15" fill="rgb(248,183,52)" fg:x="223" fg:w="4"/><text x="18.0615%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.8914%" y="485" width="0.2396%" height="15" fill="rgb(215,58,20)" fg:x="224" fg:w="3"/><text x="18.1414%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.8914%" y="469" width="0.2396%" height="15" fill="rgb(209,49,13)" fg:x="224" fg:w="3"/><text x="18.1414%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="17.8914%" y="453" width="0.2396%" height="15" fill="rgb(208,113,17)" fg:x="224" fg:w="3"/><text x="18.1414%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.8914%" y="437" width="0.2396%" height="15" fill="rgb(208,14,22)" fg:x="224" fg:w="3"/><text x="18.1414%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.8914%" y="421" width="0.2396%" height="15" fill="rgb(222,95,2)" fg:x="224" fg:w="3"/><text x="18.1414%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.8914%" y="405" width="0.2396%" height="15" fill="rgb(253,180,37)" fg:x="224" fg:w="3"/><text x="18.1414%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.9712%" y="389" width="0.1597%" height="15" fill="rgb(250,81,33)" fg:x="225" fg:w="2"/><text x="18.2212%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.9712%" y="373" width="0.1597%" height="15" fill="rgb(251,151,41)" fg:x="225" fg:w="2"/><text x="18.2212%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0511%" y="357" width="0.0799%" height="15" fill="rgb(210,135,17)" fg:x="226" fg:w="1"/><text x="18.3011%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.1310%" y="517" width="0.1597%" height="15" fill="rgb(239,21,29)" fg:x="227" fg:w="2"/><text x="18.3810%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2109%" y="501" width="0.0799%" height="15" fill="rgb(231,215,16)" fg:x="228" fg:w="1"/><text x="18.4609%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2109%" y="485" width="0.0799%" height="15" fill="rgb(239,151,54)" fg:x="228" fg:w="1"/><text x="18.4609%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2109%" y="469" width="0.0799%" height="15" fill="rgb(222,122,38)" fg:x="228" fg:w="1"/><text x="18.4609%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.2907%" y="517" width="0.0799%" height="15" fill="rgb(243,128,1)" fg:x="229" fg:w="1"/><text x="18.5407%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="17.5719%" y="597" width="0.8786%" height="15" fill="rgb(225,74,21)" fg:x="220" fg:w="11"/><text x="17.8219%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="17.5719%" y="581" width="0.8786%" height="15" fill="rgb(216,210,10)" fg:x="220" fg:w="11"/><text x="17.8219%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="18.1310%" y="565" width="0.3195%" height="15" fill="rgb(228,76,19)" fg:x="227" fg:w="4"/><text x="18.3810%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="18.1310%" y="549" width="0.3195%" height="15" fill="rgb(236,80,34)" fg:x="227" fg:w="4"/><text x="18.3810%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="18.1310%" y="533" width="0.3195%" height="15" fill="rgb(225,173,23)" fg:x="227" fg:w="4"/><text x="18.3810%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3706%" y="517" width="0.0799%" height="15" fill="rgb(253,38,1)" fg:x="230" fg:w="1"/><text x="18.6206%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3706%" y="501" width="0.0799%" height="15" fill="rgb(206,155,35)" fg:x="230" fg:w="1"/><text x="18.6206%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3706%" y="485" width="0.0799%" height="15" fill="rgb(254,27,53)" fg:x="230" fg:w="1"/><text x="18.6206%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3706%" y="469" width="0.0799%" height="15" fill="rgb(225,52,41)" fg:x="230" fg:w="1"/><text x="18.6206%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.3706%" y="453" width="0.0799%" height="15" fill="rgb(244,53,18)" fg:x="230" fg:w="1"/><text x="18.6206%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3706%" y="437" width="0.0799%" height="15" fill="rgb(254,206,48)" fg:x="230" fg:w="1"/><text x="18.6206%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3706%" y="421" width="0.0799%" height="15" fill="rgb(236,182,23)" fg:x="230" fg:w="1"/><text x="18.6206%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3706%" y="405" width="0.0799%" height="15" fill="rgb(236,191,37)" fg:x="230" fg:w="1"/><text x="18.6206%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.96%)</title><rect x="17.5719%" y="613" width="0.9585%" height="15" fill="rgb(245,53,8)" fg:x="220" fg:w="12"/><text x="17.8219%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="18.4505%" y="597" width="0.0799%" height="15" fill="rgb(245,147,9)" fg:x="231" fg:w="1"/><text x="18.7005%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.4505%" y="581" width="0.0799%" height="15" fill="rgb(218,24,48)" fg:x="231" fg:w="1"/><text x="18.7005%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="18.4505%" y="565" width="0.0799%" height="15" fill="rgb(254,23,9)" fg:x="231" fg:w="1"/><text x="18.7005%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="18.5304%" y="597" width="0.0799%" height="15" fill="rgb(244,105,9)" fg:x="232" fg:w="1"/><text x="18.7804%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.5304%" y="581" width="0.0799%" height="15" fill="rgb(212,142,22)" fg:x="232" fg:w="1"/><text x="18.7804%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5304%" y="565" width="0.0799%" height="15" fill="rgb(221,114,49)" fg:x="232" fg:w="1"/><text x="18.7804%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.6102%" y="549" width="0.0799%" height="15" fill="rgb(223,210,25)" fg:x="233" fg:w="1"/><text x="18.8602%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (60 samples, 4.79%)</title><rect x="14.0575%" y="645" width="4.7923%" height="15" fill="rgb(235,162,44)" fg:x="176" fg:w="60"/><text x="14.3075%" y="655.50">plugin..</text></g><g><title>plugins_core::tools::set_container (27 samples, 2.16%)</title><rect x="16.6933%" y="629" width="2.1565%" height="15" fill="rgb(237,65,45)" fg:x="209" fg:w="27"/><text x="16.9433%" y="639.50">p..</text></g><g><title>plugins_core::location::Location::set (4 samples, 0.32%)</title><rect x="18.5304%" y="613" width="0.3195%" height="15" fill="rgb(208,79,9)" fg:x="232" fg:w="4"/><text x="18.7804%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="18.6102%" y="597" width="0.2396%" height="15" fill="rgb(215,228,8)" fg:x="233" fg:w="3"/><text x="18.8602%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="18.6102%" y="581" width="0.2396%" height="15" fill="rgb(205,185,17)" fg:x="233" fg:w="3"/><text x="18.8602%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="18.6102%" y="565" width="0.2396%" height="15" fill="rgb(213,62,36)" fg:x="233" fg:w="3"/><text x="18.8602%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="18.6901%" y="549" width="0.1597%" height="15" fill="rgb(209,34,9)" fg:x="234" fg:w="2"/><text x="18.9401%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.7700%" y="533" width="0.0799%" height="15" fill="rgb(246,151,27)" fg:x="235" fg:w="1"/><text x="19.0200%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.7700%" y="517" width="0.0799%" height="15" fill="rgb(218,206,3)" fg:x="235" fg:w="1"/><text x="19.0200%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="18.8498%" y="613" width="0.1597%" height="15" fill="rgb(242,202,1)" fg:x="236" fg:w="2"/><text x="19.0998%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="18.8498%" y="597" width="0.1597%" height="15" fill="rgb(227,185,16)" fg:x="236" fg:w="2"/><text x="19.0998%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="18.8498%" y="581" width="0.1597%" height="15" fill="rgb(241,1,14)" fg:x="236" fg:w="2"/><text x="19.0998%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="18.8498%" y="565" width="0.1597%" height="15" fill="rgb(212,113,25)" fg:x="236" fg:w="2"/><text x="19.0998%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.8498%" y="549" width="0.1597%" height="15" fill="rgb(247,37,43)" fg:x="236" fg:w="2"/><text x="19.0998%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="18.8498%" y="533" width="0.1597%" height="15" fill="rgb(226,54,8)" fg:x="236" fg:w="2"/><text x="19.0998%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="18.8498%" y="517" width="0.1597%" height="15" fill="rgb(251,205,25)" fg:x="236" fg:w="2"/><text x="19.0998%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.9297%" y="501" width="0.0799%" height="15" fill="rgb(246,87,35)" fg:x="237" fg:w="1"/><text x="19.1797%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.9297%" y="485" width="0.0799%" height="15" fill="rgb(251,145,46)" fg:x="237" fg:w="1"/><text x="19.1797%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.9297%" y="469" width="0.0799%" height="15" fill="rgb(210,210,33)" fg:x="237" fg:w="1"/><text x="19.1797%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.9297%" y="453" width="0.0799%" height="15" fill="rgb(221,151,11)" fg:x="237" fg:w="1"/><text x="19.1797%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.9297%" y="437" width="0.0799%" height="15" fill="rgb(208,160,28)" fg:x="237" fg:w="1"/><text x="19.1797%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.9297%" y="421" width="0.0799%" height="15" fill="rgb(243,69,29)" fg:x="237" fg:w="1"/><text x="19.1797%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.9297%" y="405" width="0.0799%" height="15" fill="rgb(224,144,4)" fg:x="237" fg:w="1"/><text x="19.1797%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.0096%" y="501" width="0.0799%" height="15" fill="rgb(211,140,38)" fg:x="238" fg:w="1"/><text x="19.2596%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0096%" y="485" width="0.0799%" height="15" fill="rgb(252,189,15)" fg:x="238" fg:w="1"/><text x="19.2596%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0895%" y="501" width="0.0799%" height="15" fill="rgb(251,175,23)" fg:x="239" fg:w="1"/><text x="19.3395%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0895%" y="485" width="0.0799%" height="15" fill="rgb(212,184,11)" fg:x="239" fg:w="1"/><text x="19.3395%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.0895%" y="469" width="0.0799%" height="15" fill="rgb(217,205,6)" fg:x="239" fg:w="1"/><text x="19.3395%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.0895%" y="453" width="0.0799%" height="15" fill="rgb(235,45,45)" fg:x="239" fg:w="1"/><text x="19.3395%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.0895%" y="437" width="0.0799%" height="15" fill="rgb(211,157,53)" fg:x="239" fg:w="1"/><text x="19.3395%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0895%" y="421" width="0.0799%" height="15" fill="rgb(212,13,8)" fg:x="239" fg:w="1"/><text x="19.3395%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.0895%" y="405" width="0.0799%" height="15" fill="rgb(218,80,36)" fg:x="239" fg:w="1"/><text x="19.3395%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.0895%" y="389" width="0.0799%" height="15" fill="rgb(211,123,43)" fg:x="239" fg:w="1"/><text x="19.3395%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.0895%" y="373" width="0.0799%" height="15" fill="rgb(206,165,2)" fg:x="239" fg:w="1"/><text x="19.3395%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.0895%" y="357" width="0.0799%" height="15" fill="rgb(248,63,35)" fg:x="239" fg:w="1"/><text x="19.3395%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.0895%" y="341" width="0.0799%" height="15" fill="rgb(219,133,41)" fg:x="239" fg:w="1"/><text x="19.3395%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.0096%" y="549" width="0.2396%" height="15" fill="rgb(206,175,46)" fg:x="238" fg:w="3"/><text x="19.2596%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.0096%" y="533" width="0.2396%" height="15" fill="rgb(224,41,35)" fg:x="238" fg:w="3"/><text x="19.2596%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.0096%" y="517" width="0.2396%" height="15" fill="rgb(226,113,24)" fg:x="238" fg:w="3"/><text x="19.2596%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1693%" y="501" width="0.0799%" height="15" fill="rgb(219,51,41)" fg:x="240" fg:w="1"/><text x="19.4193%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="19.0096%" y="565" width="0.3195%" height="15" fill="rgb(220,145,47)" fg:x="238" fg:w="4"/><text x="19.2596%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2492%" y="549" width="0.0799%" height="15" fill="rgb(239,121,47)" fg:x="241" fg:w="1"/><text x="19.4992%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2492%" y="533" width="0.0799%" height="15" fill="rgb(207,60,40)" fg:x="241" fg:w="1"/><text x="19.4992%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.2492%" y="517" width="0.0799%" height="15" fill="rgb(224,229,11)" fg:x="241" fg:w="1"/><text x="19.4992%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.2492%" y="501" width="0.0799%" height="15" fill="rgb(252,28,32)" fg:x="241" fg:w="1"/><text x="19.4992%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.2492%" y="485" width="0.0799%" height="15" fill="rgb(207,52,49)" fg:x="241" fg:w="1"/><text x="19.4992%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2492%" y="469" width="0.0799%" height="15" fill="rgb(243,51,50)" fg:x="241" fg:w="1"/><text x="19.4992%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2492%" y="453" width="0.0799%" height="15" fill="rgb(212,92,21)" fg:x="241" fg:w="1"/><text x="19.4992%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.2492%" y="437" width="0.0799%" height="15" fill="rgb(230,183,50)" fg:x="241" fg:w="1"/><text x="19.4992%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.2492%" y="421" width="0.0799%" height="15" fill="rgb(225,48,9)" fg:x="241" fg:w="1"/><text x="19.4992%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.2492%" y="405" width="0.0799%" height="15" fill="rgb(254,44,4)" fg:x="241" fg:w="1"/><text x="19.4992%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.2492%" y="389" width="0.0799%" height="15" fill="rgb(252,128,37)" fg:x="241" fg:w="1"/><text x="19.4992%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2492%" y="373" width="0.0799%" height="15" fill="rgb(227,178,8)" fg:x="241" fg:w="1"/><text x="19.4992%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.3291%" y="533" width="0.0799%" height="15" fill="rgb(205,206,32)" fg:x="242" fg:w="1"/><text x="19.5791%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3291%" y="517" width="0.0799%" height="15" fill="rgb(220,218,22)" fg:x="242" fg:w="1"/><text x="19.5791%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="19.3291%" y="565" width="0.1597%" height="15" fill="rgb(236,41,28)" fg:x="242" fg:w="2"/><text x="19.5791%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="19.3291%" y="549" width="0.1597%" height="15" fill="rgb(219,37,7)" fg:x="242" fg:w="2"/><text x="19.5791%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4089%" y="533" width="0.0799%" height="15" fill="rgb(206,160,15)" fg:x="243" fg:w="1"/><text x="19.6589%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4089%" y="517" width="0.0799%" height="15" fill="rgb(208,82,21)" fg:x="243" fg:w="1"/><text x="19.6589%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4089%" y="501" width="0.0799%" height="15" fill="rgb(226,130,25)" fg:x="243" fg:w="1"/><text x="19.6589%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.4089%" y="485" width="0.0799%" height="15" fill="rgb(212,72,24)" fg:x="243" fg:w="1"/><text x="19.6589%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4089%" y="469" width="0.0799%" height="15" fill="rgb(206,28,16)" fg:x="243" fg:w="1"/><text x="19.6589%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.4888%" y="501" width="0.0799%" height="15" fill="rgb(249,41,5)" fg:x="244" fg:w="1"/><text x="19.7388%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="19.0096%" y="613" width="0.7188%" height="15" fill="rgb(233,96,48)" fg:x="238" fg:w="9"/><text x="19.2596%" y="623.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="19.0096%" y="597" width="0.7188%" height="15" fill="rgb(240,198,11)" fg:x="238" fg:w="9"/><text x="19.2596%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="19.0096%" y="581" width="0.7188%" height="15" fill="rgb(209,175,35)" fg:x="238" fg:w="9"/><text x="19.2596%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="19.4888%" y="565" width="0.2396%" height="15" fill="rgb(214,40,51)" fg:x="244" fg:w="3"/><text x="19.7388%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4888%" y="549" width="0.2396%" height="15" fill="rgb(252,56,4)" fg:x="244" fg:w="3"/><text x="19.7388%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="19.4888%" y="533" width="0.2396%" height="15" fill="rgb(219,131,5)" fg:x="244" fg:w="3"/><text x="19.7388%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4888%" y="517" width="0.2396%" height="15" fill="rgb(223,67,53)" fg:x="244" fg:w="3"/><text x="19.7388%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="19.5687%" y="501" width="0.1597%" height="15" fill="rgb(227,154,8)" fg:x="245" fg:w="2"/><text x="19.8187%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5687%" y="485" width="0.1597%" height="15" fill="rgb(216,174,51)" fg:x="245" fg:w="2"/><text x="19.8187%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.5687%" y="469" width="0.1597%" height="15" fill="rgb(239,60,34)" fg:x="245" fg:w="2"/><text x="19.8187%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5687%" y="453" width="0.1597%" height="15" fill="rgb(236,165,48)" fg:x="245" fg:w="2"/><text x="19.8187%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.5687%" y="437" width="0.1597%" height="15" fill="rgb(210,37,26)" fg:x="245" fg:w="2"/><text x="19.8187%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5687%" y="421" width="0.1597%" height="15" fill="rgb(211,3,17)" fg:x="245" fg:w="2"/><text x="19.8187%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="19.6486%" y="405" width="0.0799%" height="15" fill="rgb(234,88,49)" fg:x="246" fg:w="1"/><text x="19.8986%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="19.6486%" y="389" width="0.0799%" height="15" fill="rgb(233,40,17)" fg:x="246" fg:w="1"/><text x="19.8986%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="19.6486%" y="373" width="0.0799%" height="15" fill="rgb(235,127,31)" fg:x="246" fg:w="1"/><text x="19.8986%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="19.6486%" y="357" width="0.0799%" height="15" fill="rgb(248,167,17)" fg:x="246" fg:w="1"/><text x="19.8986%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.7284%" y="581" width="0.0799%" height="15" fill="rgb(218,179,8)" fg:x="247" fg:w="1"/><text x="19.9784%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="19.7284%" y="597" width="0.1597%" height="15" fill="rgb(216,92,14)" fg:x="247" fg:w="2"/><text x="19.9784%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.8083%" y="581" width="0.0799%" height="15" fill="rgb(221,198,46)" fg:x="248" fg:w="1"/><text x="20.0583%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.8083%" y="565" width="0.0799%" height="15" fill="rgb(244,7,25)" fg:x="248" fg:w="1"/><text x="20.0583%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8083%" y="549" width="0.0799%" height="15" fill="rgb(233,75,6)" fg:x="248" fg:w="1"/><text x="20.0583%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.8083%" y="533" width="0.0799%" height="15" fill="rgb(240,189,41)" fg:x="248" fg:w="1"/><text x="20.0583%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="19.7284%" y="613" width="0.2396%" height="15" fill="rgb(237,157,21)" fg:x="247" fg:w="3"/><text x="19.9784%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.8882%" y="597" width="0.0799%" height="15" fill="rgb(210,136,49)" fg:x="249" fg:w="1"/><text x="20.1382%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8882%" y="581" width="0.0799%" height="15" fill="rgb(210,68,29)" fg:x="249" fg:w="1"/><text x="20.1382%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.8882%" y="565" width="0.0799%" height="15" fill="rgb(247,207,20)" fg:x="249" fg:w="1"/><text x="20.1382%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.8882%" y="549" width="0.0799%" height="15" fill="rgb(224,73,48)" fg:x="249" fg:w="1"/><text x="20.1382%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="19.9681%" y="565" width="0.0799%" height="15" fill="rgb(215,136,47)" fg:x="250" fg:w="1"/><text x="20.2181%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.9681%" y="549" width="0.0799%" height="15" fill="rgb(232,222,16)" fg:x="250" fg:w="1"/><text x="20.2181%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.9681%" y="533" width="0.0799%" height="15" fill="rgb(249,202,47)" fg:x="250" fg:w="1"/><text x="20.2181%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9681%" y="517" width="0.0799%" height="15" fill="rgb(236,56,8)" fg:x="250" fg:w="1"/><text x="20.2181%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.9681%" y="501" width="0.0799%" height="15" fill="rgb(222,6,3)" fg:x="250" fg:w="1"/><text x="20.2181%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9681%" y="485" width="0.0799%" height="15" fill="rgb(254,222,28)" fg:x="250" fg:w="1"/><text x="20.2181%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.9681%" y="469" width="0.0799%" height="15" fill="rgb(219,57,23)" fg:x="250" fg:w="1"/><text x="20.2181%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9681%" y="453" width="0.0799%" height="15" fill="rgb(251,106,48)" fg:x="250" fg:w="1"/><text x="20.2181%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.9681%" y="437" width="0.0799%" height="15" fill="rgb(242,2,23)" fg:x="250" fg:w="1"/><text x="20.2181%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.9681%" y="421" width="0.0799%" height="15" fill="rgb(212,109,31)" fg:x="250" fg:w="1"/><text x="20.2181%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1278%" y="533" width="0.0799%" height="15" fill="rgb(241,9,22)" fg:x="252" fg:w="1"/><text x="20.3778%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1278%" y="517" width="0.0799%" height="15" fill="rgb(209,64,27)" fg:x="252" fg:w="1"/><text x="20.3778%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.2077%" y="485" width="0.0799%" height="15" fill="rgb(248,13,44)" fg:x="253" fg:w="1"/><text x="20.4577%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2077%" y="469" width="0.0799%" height="15" fill="rgb(213,86,6)" fg:x="253" fg:w="1"/><text x="20.4577%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.52%)</title><rect x="18.8498%" y="645" width="1.5176%" height="15" fill="rgb(247,11,18)" fg:x="236" fg:w="19"/><text x="19.0998%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.52%)</title><rect x="18.8498%" y="629" width="1.5176%" height="15" fill="rgb(252,31,11)" fg:x="236" fg:w="19"/><text x="19.0998%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="19.9681%" y="613" width="0.3994%" height="15" fill="rgb(215,63,51)" fg:x="250" fg:w="5"/><text x="20.2181%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="19.9681%" y="597" width="0.3994%" height="15" fill="rgb(222,180,4)" fg:x="250" fg:w="5"/><text x="20.2181%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="19.9681%" y="581" width="0.3994%" height="15" fill="rgb(233,4,23)" fg:x="250" fg:w="5"/><text x="20.2181%" y="591.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="20.0479%" y="565" width="0.3195%" height="15" fill="rgb(230,116,22)" fg:x="251" fg:w="4"/><text x="20.2979%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="20.0479%" y="549" width="0.3195%" height="15" fill="rgb(222,20,14)" fg:x="251" fg:w="4"/><text x="20.2979%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.2077%" y="533" width="0.1597%" height="15" fill="rgb(210,176,43)" fg:x="253" fg:w="2"/><text x="20.4577%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="20.2077%" y="517" width="0.1597%" height="15" fill="rgb(219,67,32)" fg:x="253" fg:w="2"/><text x="20.4577%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.2077%" y="501" width="0.1597%" height="15" fill="rgb(228,91,39)" fg:x="253" fg:w="2"/><text x="20.4577%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2875%" y="485" width="0.0799%" height="15" fill="rgb(254,63,14)" fg:x="254" fg:w="1"/><text x="20.5375%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="20.4473%" y="613" width="0.0799%" height="15" fill="rgb(216,171,39)" fg:x="256" fg:w="1"/><text x="20.6973%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.4473%" y="597" width="0.0799%" height="15" fill="rgb(248,68,25)" fg:x="256" fg:w="1"/><text x="20.6973%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.4473%" y="581" width="0.0799%" height="15" fill="rgb(239,63,16)" fg:x="256" fg:w="1"/><text x="20.6973%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.4473%" y="565" width="0.0799%" height="15" fill="rgb(225,111,43)" fg:x="256" fg:w="1"/><text x="20.6973%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.6070%" y="565" width="0.0799%" height="15" fill="rgb(246,165,17)" fg:x="258" fg:w="1"/><text x="20.8570%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6070%" y="549" width="0.0799%" height="15" fill="rgb(208,124,1)" fg:x="258" fg:w="1"/><text x="20.8570%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.5272%" y="581" width="0.2396%" height="15" fill="rgb(234,147,33)" fg:x="257" fg:w="3"/><text x="20.7772%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6869%" y="565" width="0.0799%" height="15" fill="rgb(240,86,30)" fg:x="259" fg:w="1"/><text x="20.9369%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.7668%" y="581" width="0.0799%" height="15" fill="rgb(237,34,51)" fg:x="260" fg:w="1"/><text x="21.0168%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.7668%" y="565" width="0.0799%" height="15" fill="rgb(232,131,41)" fg:x="260" fg:w="1"/><text x="21.0168%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.7668%" y="549" width="0.0799%" height="15" fill="rgb(227,129,53)" fg:x="260" fg:w="1"/><text x="21.0168%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7668%" y="533" width="0.0799%" height="15" fill="rgb(230,90,35)" fg:x="260" fg:w="1"/><text x="21.0168%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.8466%" y="485" width="0.0799%" height="15" fill="rgb(248,88,27)" fg:x="261" fg:w="1"/><text x="21.0966%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.8466%" y="469" width="0.0799%" height="15" fill="rgb(223,18,17)" fg:x="261" fg:w="1"/><text x="21.0966%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.8466%" y="453" width="0.0799%" height="15" fill="rgb(241,11,10)" fg:x="261" fg:w="1"/><text x="21.0966%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.8466%" y="437" width="0.0799%" height="15" fill="rgb(232,111,52)" fg:x="261" fg:w="1"/><text x="21.0966%" y="447.50"></text></g><g><title>kernel::model::props::save_props (8 samples, 0.64%)</title><rect x="20.5272%" y="613" width="0.6390%" height="15" fill="rgb(228,67,8)" fg:x="257" fg:w="8"/><text x="20.7772%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="20.5272%" y="597" width="0.6390%" height="15" fill="rgb(251,168,31)" fg:x="257" fg:w="8"/><text x="20.7772%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="20.8466%" y="581" width="0.3195%" height="15" fill="rgb(249,164,11)" fg:x="261" fg:w="4"/><text x="21.0966%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="20.8466%" y="565" width="0.3195%" height="15" fill="rgb(239,81,9)" fg:x="261" fg:w="4"/><text x="21.0966%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="20.8466%" y="549" width="0.3195%" height="15" fill="rgb(222,145,38)" fg:x="261" fg:w="4"/><text x="21.0966%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="20.8466%" y="533" width="0.3195%" height="15" fill="rgb(238,80,54)" fg:x="261" fg:w="4"/><text x="21.0966%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="20.8466%" y="517" width="0.3195%" height="15" fill="rgb(237,116,16)" fg:x="261" fg:w="4"/><text x="21.0966%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="20.8466%" y="501" width="0.3195%" height="15" fill="rgb(218,135,19)" fg:x="261" fg:w="4"/><text x="21.0966%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="20.9265%" y="485" width="0.2396%" height="15" fill="rgb(216,207,44)" fg:x="262" fg:w="3"/><text x="21.1765%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (11 samples, 0.88%)</title><rect x="20.3674%" y="645" width="0.8786%" height="15" fill="rgb(226,152,40)" fg:x="255" fg:w="11"/><text x="20.6174%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (10 samples, 0.80%)</title><rect x="20.4473%" y="629" width="0.7987%" height="15" fill="rgb(219,98,35)" fg:x="256" fg:w="10"/><text x="20.6973%" y="639.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="21.1661%" y="613" width="0.0799%" height="15" fill="rgb(222,136,46)" fg:x="265" fg:w="1"/><text x="21.4161%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.1661%" y="597" width="0.0799%" height="15" fill="rgb(222,71,8)" fg:x="265" fg:w="1"/><text x="21.4161%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="21.3259%" y="613" width="0.0799%" height="15" fill="rgb(209,89,53)" fg:x="267" fg:w="1"/><text x="21.5759%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="21.3259%" y="597" width="0.0799%" height="15" fill="rgb(210,97,51)" fg:x="267" fg:w="1"/><text x="21.5759%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="21.3259%" y="581" width="0.0799%" height="15" fill="rgb(248,65,21)" fg:x="267" fg:w="1"/><text x="21.5759%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.3259%" y="565" width="0.0799%" height="15" fill="rgb(222,5,31)" fg:x="267" fg:w="1"/><text x="21.5759%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.3259%" y="549" width="0.0799%" height="15" fill="rgb(241,16,30)" fg:x="267" fg:w="1"/><text x="21.5759%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.3259%" y="533" width="0.0799%" height="15" fill="rgb(215,86,30)" fg:x="267" fg:w="1"/><text x="21.5759%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="21.3259%" y="517" width="0.0799%" height="15" fill="rgb(235,26,44)" fg:x="267" fg:w="1"/><text x="21.5759%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.3259%" y="501" width="0.0799%" height="15" fill="rgb(228,147,14)" fg:x="267" fg:w="1"/><text x="21.5759%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.3259%" y="485" width="0.0799%" height="15" fill="rgb(253,38,50)" fg:x="267" fg:w="1"/><text x="21.5759%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.3259%" y="469" width="0.0799%" height="15" fill="rgb(251,151,16)" fg:x="267" fg:w="1"/><text x="21.5759%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="21.3259%" y="453" width="0.0799%" height="15" fill="rgb(224,64,19)" fg:x="267" fg:w="1"/><text x="21.5759%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.3259%" y="437" width="0.0799%" height="15" fill="rgb(235,214,47)" fg:x="267" fg:w="1"/><text x="21.5759%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.3259%" y="421" width="0.0799%" height="15" fill="rgb(218,15,19)" fg:x="267" fg:w="1"/><text x="21.5759%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.3259%" y="405" width="0.0799%" height="15" fill="rgb(247,209,3)" fg:x="267" fg:w="1"/><text x="21.5759%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4058%" y="533" width="0.1597%" height="15" fill="rgb(217,29,2)" fg:x="268" fg:w="2"/><text x="21.6558%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.4058%" y="517" width="0.1597%" height="15" fill="rgb(234,9,9)" fg:x="268" fg:w="2"/><text x="21.6558%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.4058%" y="501" width="0.1597%" height="15" fill="rgb(207,43,14)" fg:x="268" fg:w="2"/><text x="21.6558%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.4058%" y="565" width="0.2396%" height="15" fill="rgb(216,219,36)" fg:x="268" fg:w="3"/><text x="21.6558%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="21.4058%" y="549" width="0.2396%" height="15" fill="rgb(238,12,26)" fg:x="268" fg:w="3"/><text x="21.6558%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5655%" y="533" width="0.0799%" height="15" fill="rgb(226,67,30)" fg:x="270" fg:w="1"/><text x="21.8155%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.5655%" y="517" width="0.0799%" height="15" fill="rgb(229,154,7)" fg:x="270" fg:w="1"/><text x="21.8155%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.5655%" y="501" width="0.0799%" height="15" fill="rgb(249,90,18)" fg:x="270" fg:w="1"/><text x="21.8155%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.5655%" y="485" width="0.0799%" height="15" fill="rgb(223,53,15)" fg:x="270" fg:w="1"/><text x="21.8155%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.5655%" y="469" width="0.0799%" height="15" fill="rgb(253,86,38)" fg:x="270" fg:w="1"/><text x="21.8155%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5655%" y="453" width="0.0799%" height="15" fill="rgb(222,198,9)" fg:x="270" fg:w="1"/><text x="21.8155%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.5655%" y="437" width="0.0799%" height="15" fill="rgb(240,146,25)" fg:x="270" fg:w="1"/><text x="21.8155%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.5655%" y="421" width="0.0799%" height="15" fill="rgb(225,38,10)" fg:x="270" fg:w="1"/><text x="21.8155%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.5655%" y="405" width="0.0799%" height="15" fill="rgb(246,93,4)" fg:x="270" fg:w="1"/><text x="21.8155%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.5655%" y="389" width="0.0799%" height="15" fill="rgb(222,55,18)" fg:x="270" fg:w="1"/><text x="21.8155%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.5655%" y="373" width="0.0799%" height="15" fill="rgb(233,137,48)" fg:x="270" fg:w="1"/><text x="21.8155%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5655%" y="357" width="0.0799%" height="15" fill="rgb(214,8,54)" fg:x="270" fg:w="1"/><text x="21.8155%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="21.3259%" y="629" width="0.3994%" height="15" fill="rgb(206,75,4)" fg:x="267" fg:w="5"/><text x="21.5759%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="21.4058%" y="613" width="0.3195%" height="15" fill="rgb(238,171,14)" fg:x="268" fg:w="4"/><text x="21.6558%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="21.4058%" y="597" width="0.3195%" height="15" fill="rgb(233,70,41)" fg:x="268" fg:w="4"/><text x="21.6558%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="21.4058%" y="581" width="0.3195%" height="15" fill="rgb(214,68,36)" fg:x="268" fg:w="4"/><text x="21.6558%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.6454%" y="565" width="0.0799%" height="15" fill="rgb(223,29,5)" fg:x="271" fg:w="1"/><text x="21.8954%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.6454%" y="549" width="0.0799%" height="15" fill="rgb(251,22,40)" fg:x="271" fg:w="1"/><text x="21.8954%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.6454%" y="533" width="0.0799%" height="15" fill="rgb(210,67,41)" fg:x="271" fg:w="1"/><text x="21.8954%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6454%" y="517" width="0.0799%" height="15" fill="rgb(225,177,31)" fg:x="271" fg:w="1"/><text x="21.8954%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7252%" y="629" width="0.0799%" height="15" fill="rgb(221,229,11)" fg:x="272" fg:w="1"/><text x="21.9752%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7252%" y="613" width="0.0799%" height="15" fill="rgb(247,172,52)" fg:x="272" fg:w="1"/><text x="21.9752%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7252%" y="597" width="0.0799%" height="15" fill="rgb(212,73,19)" fg:x="272" fg:w="1"/><text x="21.9752%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.7252%" y="581" width="0.0799%" height="15" fill="rgb(244,7,46)" fg:x="272" fg:w="1"/><text x="21.9752%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.7252%" y="565" width="0.0799%" height="15" fill="rgb(230,113,20)" fg:x="272" fg:w="1"/><text x="21.9752%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.7252%" y="549" width="0.0799%" height="15" fill="rgb(209,97,30)" fg:x="272" fg:w="1"/><text x="21.9752%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.7252%" y="533" width="0.0799%" height="15" fill="rgb(243,89,12)" fg:x="272" fg:w="1"/><text x="21.9752%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.7252%" y="517" width="0.0799%" height="15" fill="rgb(228,32,19)" fg:x="272" fg:w="1"/><text x="21.9752%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.7252%" y="501" width="0.0799%" height="15" fill="rgb(248,25,17)" fg:x="272" fg:w="1"/><text x="21.9752%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.7252%" y="485" width="0.0799%" height="15" fill="rgb(232,161,29)" fg:x="272" fg:w="1"/><text x="21.9752%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.7252%" y="469" width="0.0799%" height="15" fill="rgb(251,192,11)" fg:x="272" fg:w="1"/><text x="21.9752%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.7252%" y="453" width="0.0799%" height="15" fill="rgb(240,47,32)" fg:x="272" fg:w="1"/><text x="21.9752%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7252%" y="437" width="0.0799%" height="15" fill="rgb(250,16,45)" fg:x="272" fg:w="1"/><text x="21.9752%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="21.8051%" y="629" width="0.2396%" height="15" fill="rgb(227,217,42)" fg:x="273" fg:w="3"/><text x="22.0551%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="21.8051%" y="613" width="0.2396%" height="15" fill="rgb(206,82,54)" fg:x="273" fg:w="3"/><text x="22.0551%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.8850%" y="597" width="0.1597%" height="15" fill="rgb(243,145,25)" fg:x="274" fg:w="2"/><text x="22.1350%" y="607.50"></text></g><g><title>&lt;engine::users::model::Usernames as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="21.8850%" y="581" width="0.1597%" height="15" fill="rgb(207,166,24)" fg:x="274" fg:w="2"/><text x="22.1350%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.9649%" y="565" width="0.0799%" height="15" fill="rgb(215,191,44)" fg:x="275" fg:w="1"/><text x="22.2149%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.9649%" y="549" width="0.0799%" height="15" fill="rgb(234,218,51)" fg:x="275" fg:w="1"/><text x="22.2149%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9649%" y="533" width="0.0799%" height="15" fill="rgb(245,133,21)" fg:x="275" fg:w="1"/><text x="22.2149%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.9649%" y="517" width="0.0799%" height="15" fill="rgb(230,136,45)" fg:x="275" fg:w="1"/><text x="22.2149%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9649%" y="501" width="0.0799%" height="15" fill="rgb(247,63,43)" fg:x="275" fg:w="1"/><text x="22.2149%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.1246%" y="549" width="0.1597%" height="15" fill="rgb(254,223,31)" fg:x="277" fg:w="2"/><text x="22.3746%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.1246%" y="533" width="0.1597%" height="15" fill="rgb(236,185,0)" fg:x="277" fg:w="2"/><text x="22.3746%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.1246%" y="517" width="0.1597%" height="15" fill="rgb(231,139,46)" fg:x="277" fg:w="2"/><text x="22.3746%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="22.1246%" y="501" width="0.1597%" height="15" fill="rgb(236,147,31)" fg:x="277" fg:w="2"/><text x="22.3746%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.2045%" y="485" width="0.0799%" height="15" fill="rgb(225,222,22)" fg:x="278" fg:w="1"/><text x="22.4545%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2843%" y="501" width="0.0799%" height="15" fill="rgb(225,193,14)" fg:x="279" fg:w="1"/><text x="22.5343%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2843%" y="485" width="0.0799%" height="15" fill="rgb(253,193,46)" fg:x="279" fg:w="1"/><text x="22.5343%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3642%" y="501" width="0.0799%" height="15" fill="rgb(218,187,39)" fg:x="280" fg:w="1"/><text x="22.6142%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="22.2843%" y="549" width="0.2396%" height="15" fill="rgb(227,162,48)" fg:x="279" fg:w="3"/><text x="22.5343%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="22.2843%" y="533" width="0.2396%" height="15" fill="rgb(222,25,5)" fg:x="279" fg:w="3"/><text x="22.5343%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="22.2843%" y="517" width="0.2396%" height="15" fill="rgb(211,205,16)" fg:x="279" fg:w="3"/><text x="22.5343%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4441%" y="501" width="0.0799%" height="15" fill="rgb(244,191,2)" fg:x="281" fg:w="1"/><text x="22.6941%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4441%" y="485" width="0.0799%" height="15" fill="rgb(248,159,12)" fg:x="281" fg:w="1"/><text x="22.6941%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.4441%" y="469" width="0.0799%" height="15" fill="rgb(235,204,17)" fg:x="281" fg:w="1"/><text x="22.6941%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.4441%" y="453" width="0.0799%" height="15" fill="rgb(240,21,27)" fg:x="281" fg:w="1"/><text x="22.6941%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.4441%" y="437" width="0.0799%" height="15" fill="rgb(224,170,31)" fg:x="281" fg:w="1"/><text x="22.6941%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4441%" y="421" width="0.0799%" height="15" fill="rgb(223,145,32)" fg:x="281" fg:w="1"/><text x="22.6941%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (7 samples, 0.56%)</title><rect x="22.0447%" y="581" width="0.5591%" height="15" fill="rgb(243,100,5)" fg:x="276" fg:w="7"/><text x="22.2947%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="22.1246%" y="565" width="0.4792%" height="15" fill="rgb(242,131,51)" fg:x="277" fg:w="6"/><text x="22.3746%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5240%" y="549" width="0.0799%" height="15" fill="rgb(223,156,46)" fg:x="282" fg:w="1"/><text x="22.7740%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="22.6038%" y="549" width="0.0799%" height="15" fill="rgb(215,10,40)" fg:x="283" fg:w="1"/><text x="22.8538%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="22.6038%" y="533" width="0.0799%" height="15" fill="rgb(233,155,0)" fg:x="283" fg:w="1"/><text x="22.8538%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.6038%" y="517" width="0.0799%" height="15" fill="rgb(247,78,6)" fg:x="283" fg:w="1"/><text x="22.8538%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="501" width="0.0799%" height="15" fill="rgb(237,217,21)" fg:x="283" fg:w="1"/><text x="22.8538%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.6038%" y="485" width="0.0799%" height="15" fill="rgb(212,1,21)" fg:x="283" fg:w="1"/><text x="22.8538%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="469" width="0.0799%" height="15" fill="rgb(213,7,14)" fg:x="283" fg:w="1"/><text x="22.8538%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="453" width="0.0799%" height="15" fill="rgb(225,84,14)" fg:x="283" fg:w="1"/><text x="22.8538%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="437" width="0.0799%" height="15" fill="rgb(239,216,39)" fg:x="283" fg:w="1"/><text x="22.8538%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.6038%" y="421" width="0.0799%" height="15" fill="rgb(253,29,23)" fg:x="283" fg:w="1"/><text x="22.8538%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="405" width="0.0799%" height="15" fill="rgb(220,167,50)" fg:x="283" fg:w="1"/><text x="22.8538%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="389" width="0.0799%" height="15" fill="rgb(232,141,1)" fg:x="283" fg:w="1"/><text x="22.8538%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="373" width="0.0799%" height="15" fill="rgb(222,210,1)" fg:x="283" fg:w="1"/><text x="22.8538%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.6038%" y="357" width="0.0799%" height="15" fill="rgb(219,84,10)" fg:x="283" fg:w="1"/><text x="22.8538%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="341" width="0.0799%" height="15" fill="rgb(245,188,6)" fg:x="283" fg:w="1"/><text x="22.8538%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="325" width="0.0799%" height="15" fill="rgb(252,139,39)" fg:x="283" fg:w="1"/><text x="22.8538%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="309" width="0.0799%" height="15" fill="rgb(218,42,26)" fg:x="283" fg:w="1"/><text x="22.8538%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.6038%" y="293" width="0.0799%" height="15" fill="rgb(237,226,51)" fg:x="283" fg:w="1"/><text x="22.8538%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.6038%" y="277" width="0.0799%" height="15" fill="rgb(246,15,17)" fg:x="283" fg:w="1"/><text x="22.8538%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.6038%" y="261" width="0.0799%" height="15" fill="rgb(228,170,42)" fg:x="283" fg:w="1"/><text x="22.8538%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.6038%" y="245" width="0.0799%" height="15" fill="rgb(248,118,53)" fg:x="283" fg:w="1"/><text x="22.8538%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="22.6038%" y="229" width="0.0799%" height="15" fill="rgb(207,30,10)" fg:x="283" fg:w="1"/><text x="22.8538%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="22.6038%" y="213" width="0.0799%" height="15" fill="rgb(217,104,38)" fg:x="283" fg:w="1"/><text x="22.8538%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="22.6038%" y="197" width="0.0799%" height="15" fill="rgb(211,165,26)" fg:x="283" fg:w="1"/><text x="22.8538%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="22.6038%" y="181" width="0.0799%" height="15" fill="rgb(247,38,9)" fg:x="283" fg:w="1"/><text x="22.8538%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.6038%" y="165" width="0.0799%" height="15" fill="rgb(218,187,8)" fg:x="283" fg:w="1"/><text x="22.8538%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.6038%" y="149" width="0.0799%" height="15" fill="rgb(247,94,28)" fg:x="283" fg:w="1"/><text x="22.8538%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.6038%" y="133" width="0.0799%" height="15" fill="rgb(218,173,30)" fg:x="283" fg:w="1"/><text x="22.8538%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="22.6038%" y="117" width="0.0799%" height="15" fill="rgb(245,45,36)" fg:x="283" fg:w="1"/><text x="22.8538%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.6038%" y="101" width="0.0799%" height="15" fill="rgb(221,172,44)" fg:x="283" fg:w="1"/><text x="22.8538%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="22.6038%" y="85" width="0.0799%" height="15" fill="rgb(222,45,12)" fg:x="283" fg:w="1"/><text x="22.8538%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="22.6038%" y="69" width="0.0799%" height="15" fill="rgb(250,10,22)" fg:x="283" fg:w="1"/><text x="22.8538%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="22.6038%" y="53" width="0.0799%" height="15" fill="rgb(239,27,0)" fg:x="283" fg:w="1"/><text x="22.8538%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.6038%" y="37" width="0.0799%" height="15" fill="rgb(223,118,22)" fg:x="283" fg:w="1"/><text x="22.8538%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6837%" y="501" width="0.0799%" height="15" fill="rgb(251,81,25)" fg:x="284" fg:w="1"/><text x="22.9337%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6837%" y="485" width="0.0799%" height="15" fill="rgb(237,225,53)" fg:x="284" fg:w="1"/><text x="22.9337%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6837%" y="469" width="0.0799%" height="15" fill="rgb(237,186,51)" fg:x="284" fg:w="1"/><text x="22.9337%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.6837%" y="453" width="0.0799%" height="15" fill="rgb(247,209,11)" fg:x="284" fg:w="1"/><text x="22.9337%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.6837%" y="437" width="0.0799%" height="15" fill="rgb(223,109,27)" fg:x="284" fg:w="1"/><text x="22.9337%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="22.6038%" y="581" width="0.3195%" height="15" fill="rgb(246,181,13)" fg:x="283" fg:w="4"/><text x="22.8538%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="22.6038%" y="565" width="0.3195%" height="15" fill="rgb(234,57,44)" fg:x="283" fg:w="4"/><text x="22.8538%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="22.6837%" y="549" width="0.2396%" height="15" fill="rgb(211,227,50)" fg:x="284" fg:w="3"/><text x="22.9337%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="22.6837%" y="533" width="0.2396%" height="15" fill="rgb(254,57,34)" fg:x="284" fg:w="3"/><text x="22.9337%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="22.6837%" y="517" width="0.2396%" height="15" fill="rgb(227,212,26)" fg:x="284" fg:w="3"/><text x="22.9337%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.7636%" y="501" width="0.1597%" height="15" fill="rgb(244,169,44)" fg:x="285" fg:w="2"/><text x="23.0136%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.7636%" y="485" width="0.1597%" height="15" fill="rgb(236,135,50)" fg:x="285" fg:w="2"/><text x="23.0136%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.7636%" y="469" width="0.1597%" height="15" fill="rgb(241,89,30)" fg:x="285" fg:w="2"/><text x="23.0136%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.7636%" y="453" width="0.1597%" height="15" fill="rgb(206,113,34)" fg:x="285" fg:w="2"/><text x="23.0136%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="22.7636%" y="437" width="0.1597%" height="15" fill="rgb(218,104,52)" fg:x="285" fg:w="2"/><text x="23.0136%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.7636%" y="421" width="0.1597%" height="15" fill="rgb(223,82,32)" fg:x="285" fg:w="2"/><text x="23.0136%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.7636%" y="405" width="0.1597%" height="15" fill="rgb(249,219,30)" fg:x="285" fg:w="2"/><text x="23.0136%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.7636%" y="389" width="0.1597%" height="15" fill="rgb(233,141,21)" fg:x="285" fg:w="2"/><text x="23.0136%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.7636%" y="373" width="0.1597%" height="15" fill="rgb(252,87,44)" fg:x="285" fg:w="2"/><text x="23.0136%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.7636%" y="357" width="0.1597%" height="15" fill="rgb(229,48,33)" fg:x="285" fg:w="2"/><text x="23.0136%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="22.8435%" y="341" width="0.0799%" height="15" fill="rgb(229,23,22)" fg:x="286" fg:w="1"/><text x="23.0935%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="22.8435%" y="325" width="0.0799%" height="15" fill="rgb(244,116,16)" fg:x="286" fg:w="1"/><text x="23.0935%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="22.9233%" y="549" width="0.0799%" height="15" fill="rgb(247,45,10)" fg:x="287" fg:w="1"/><text x="23.1733%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="22.9233%" y="533" width="0.0799%" height="15" fill="rgb(228,60,29)" fg:x="287" fg:w="1"/><text x="23.1733%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.0032%" y="549" width="0.0799%" height="15" fill="rgb(205,129,15)" fg:x="288" fg:w="1"/><text x="23.2532%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.0032%" y="533" width="0.0799%" height="15" fill="rgb(206,229,4)" fg:x="288" fg:w="1"/><text x="23.2532%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.0032%" y="517" width="0.0799%" height="15" fill="rgb(249,191,30)" fg:x="288" fg:w="1"/><text x="23.2532%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.0032%" y="501" width="0.0799%" height="15" fill="rgb(250,84,54)" fg:x="288" fg:w="1"/><text x="23.2532%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0032%" y="485" width="0.0799%" height="15" fill="rgb(207,25,53)" fg:x="288" fg:w="1"/><text x="23.2532%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.0032%" y="469" width="0.0799%" height="15" fill="rgb(235,40,8)" fg:x="288" fg:w="1"/><text x="23.2532%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0032%" y="453" width="0.0799%" height="15" fill="rgb(226,169,33)" fg:x="288" fg:w="1"/><text x="23.2532%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.0032%" y="437" width="0.0799%" height="15" fill="rgb(238,110,8)" fg:x="288" fg:w="1"/><text x="23.2532%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0032%" y="421" width="0.0799%" height="15" fill="rgb(251,206,12)" fg:x="288" fg:w="1"/><text x="23.2532%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.0032%" y="405" width="0.0799%" height="15" fill="rgb(248,171,18)" fg:x="288" fg:w="1"/><text x="23.2532%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0032%" y="389" width="0.0799%" height="15" fill="rgb(213,65,46)" fg:x="288" fg:w="1"/><text x="23.2532%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.0032%" y="373" width="0.0799%" height="15" fill="rgb(211,154,15)" fg:x="288" fg:w="1"/><text x="23.2532%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="23.0831%" y="549" width="0.0799%" height="15" fill="rgb(217,75,43)" fg:x="289" fg:w="1"/><text x="23.3331%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="23.0831%" y="533" width="0.0799%" height="15" fill="rgb(230,32,33)" fg:x="289" fg:w="1"/><text x="23.3331%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.0831%" y="517" width="0.0799%" height="15" fill="rgb(221,100,16)" fg:x="289" fg:w="1"/><text x="23.3331%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3227%" y="469" width="0.0799%" height="15" fill="rgb(212,129,47)" fg:x="292" fg:w="1"/><text x="23.5727%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.3227%" y="453" width="0.0799%" height="15" fill="rgb(239,217,47)" fg:x="292" fg:w="1"/><text x="23.5727%" y="463.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="23.2428%" y="501" width="0.2396%" height="15" fill="rgb(230,84,24)" fg:x="291" fg:w="3"/><text x="23.4928%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.2428%" y="485" width="0.2396%" height="15" fill="rgb(214,153,51)" fg:x="291" fg:w="3"/><text x="23.4928%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4026%" y="469" width="0.0799%" height="15" fill="rgb(231,6,35)" fg:x="293" fg:w="1"/><text x="23.6526%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4026%" y="453" width="0.0799%" height="15" fill="rgb(229,122,30)" fg:x="293" fg:w="1"/><text x="23.6526%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4026%" y="437" width="0.0799%" height="15" fill="rgb(234,71,10)" fg:x="293" fg:w="1"/><text x="23.6526%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4026%" y="421" width="0.0799%" height="15" fill="rgb(215,173,26)" fg:x="293" fg:w="1"/><text x="23.6526%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.4824%" y="389" width="0.0799%" height="15" fill="rgb(248,118,52)" fg:x="294" fg:w="1"/><text x="23.7324%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.4824%" y="469" width="0.1597%" height="15" fill="rgb(237,55,46)" fg:x="294" fg:w="2"/><text x="23.7324%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="23.4824%" y="453" width="0.1597%" height="15" fill="rgb(243,214,43)" fg:x="294" fg:w="2"/><text x="23.7324%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.4824%" y="437" width="0.1597%" height="15" fill="rgb(252,123,30)" fg:x="294" fg:w="2"/><text x="23.7324%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.4824%" y="421" width="0.1597%" height="15" fill="rgb(215,73,39)" fg:x="294" fg:w="2"/><text x="23.7324%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.4824%" y="405" width="0.1597%" height="15" fill="rgb(251,194,29)" fg:x="294" fg:w="2"/><text x="23.7324%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5623%" y="389" width="0.0799%" height="15" fill="rgb(224,58,52)" fg:x="295" fg:w="1"/><text x="23.8123%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6422%" y="405" width="0.0799%" height="15" fill="rgb(248,106,46)" fg:x="296" fg:w="1"/><text x="23.8922%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6422%" y="389" width="0.0799%" height="15" fill="rgb(223,80,29)" fg:x="296" fg:w="1"/><text x="23.8922%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.7220%" y="373" width="0.0799%" height="15" fill="rgb(243,137,9)" fg:x="297" fg:w="1"/><text x="23.9720%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="23.7220%" y="357" width="0.0799%" height="15" fill="rgb(235,121,28)" fg:x="297" fg:w="1"/><text x="23.9720%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7220%" y="341" width="0.0799%" height="15" fill="rgb(219,121,41)" fg:x="297" fg:w="1"/><text x="23.9720%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="22.9233%" y="565" width="0.9585%" height="15" fill="rgb(251,60,6)" fg:x="287" fg:w="12"/><text x="23.1733%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="23.1629%" y="549" width="0.7188%" height="15" fill="rgb(208,12,30)" fg:x="290" fg:w="9"/><text x="23.4129%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="23.2428%" y="533" width="0.6390%" height="15" fill="rgb(207,176,36)" fg:x="291" fg:w="8"/><text x="23.4928%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (8 samples, 0.64%)</title><rect x="23.2428%" y="517" width="0.6390%" height="15" fill="rgb(211,188,29)" fg:x="291" fg:w="8"/><text x="23.4928%" y="527.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="23.4824%" y="501" width="0.3994%" height="15" fill="rgb(220,184,37)" fg:x="294" fg:w="5"/><text x="23.7324%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="23.4824%" y="485" width="0.3994%" height="15" fill="rgb(239,87,37)" fg:x="294" fg:w="5"/><text x="23.7324%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="23.6422%" y="469" width="0.2396%" height="15" fill="rgb(232,113,44)" fg:x="296" fg:w="3"/><text x="23.8922%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.6422%" y="453" width="0.2396%" height="15" fill="rgb(246,25,39)" fg:x="296" fg:w="3"/><text x="23.8922%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="23.6422%" y="437" width="0.2396%" height="15" fill="rgb(247,30,13)" fg:x="296" fg:w="3"/><text x="23.8922%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.6422%" y="421" width="0.2396%" height="15" fill="rgb(230,176,35)" fg:x="296" fg:w="3"/><text x="23.8922%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="23.7220%" y="405" width="0.1597%" height="15" fill="rgb(222,23,18)" fg:x="297" fg:w="2"/><text x="23.9720%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="23.7220%" y="389" width="0.1597%" height="15" fill="rgb(234,86,8)" fg:x="297" fg:w="2"/><text x="23.9720%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.8019%" y="373" width="0.0799%" height="15" fill="rgb(206,218,47)" fg:x="298" fg:w="1"/><text x="24.0519%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.8019%" y="357" width="0.0799%" height="15" fill="rgb(229,35,31)" fg:x="298" fg:w="1"/><text x="24.0519%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.8019%" y="341" width="0.0799%" height="15" fill="rgb(242,81,7)" fg:x="298" fg:w="1"/><text x="24.0519%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="23.8818%" y="565" width="0.2396%" height="15" fill="rgb(231,11,35)" fg:x="299" fg:w="3"/><text x="24.1318%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="23.8818%" y="549" width="0.2396%" height="15" fill="rgb(219,218,17)" fg:x="299" fg:w="3"/><text x="24.1318%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.2013%" y="469" width="0.0799%" height="15" fill="rgb(221,83,32)" fg:x="303" fg:w="1"/><text x="24.4513%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.2013%" y="453" width="0.0799%" height="15" fill="rgb(233,49,54)" fg:x="303" fg:w="1"/><text x="24.4513%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.2013%" y="437" width="0.0799%" height="15" fill="rgb(206,18,51)" fg:x="303" fg:w="1"/><text x="24.4513%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="24.2013%" y="517" width="0.1597%" height="15" fill="rgb(249,193,15)" fg:x="303" fg:w="2"/><text x="24.4513%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="24.2013%" y="501" width="0.1597%" height="15" fill="rgb(245,186,19)" fg:x="303" fg:w="2"/><text x="24.4513%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.2013%" y="485" width="0.1597%" height="15" fill="rgb(230,4,24)" fg:x="303" fg:w="2"/><text x="24.4513%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.2812%" y="469" width="0.0799%" height="15" fill="rgb(234,75,27)" fg:x="304" fg:w="1"/><text x="24.5312%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2812%" y="453" width="0.0799%" height="15" fill="rgb(244,187,35)" fg:x="304" fg:w="1"/><text x="24.5312%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.2812%" y="437" width="0.0799%" height="15" fill="rgb(241,97,43)" fg:x="304" fg:w="1"/><text x="24.5312%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2812%" y="421" width="0.0799%" height="15" fill="rgb(236,94,2)" fg:x="304" fg:w="1"/><text x="24.5312%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.2812%" y="405" width="0.0799%" height="15" fill="rgb(231,175,7)" fg:x="304" fg:w="1"/><text x="24.5312%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2812%" y="389" width="0.0799%" height="15" fill="rgb(236,89,47)" fg:x="304" fg:w="1"/><text x="24.5312%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.2812%" y="373" width="0.0799%" height="15" fill="rgb(213,191,37)" fg:x="304" fg:w="1"/><text x="24.5312%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2812%" y="357" width="0.0799%" height="15" fill="rgb(252,0,34)" fg:x="304" fg:w="1"/><text x="24.5312%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.2812%" y="341" width="0.0799%" height="15" fill="rgb(208,145,44)" fg:x="304" fg:w="1"/><text x="24.5312%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.4409%" y="405" width="0.0799%" height="15" fill="rgb(227,95,50)" fg:x="306" fg:w="1"/><text x="24.6909%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4409%" y="389" width="0.0799%" height="15" fill="rgb(222,136,24)" fg:x="306" fg:w="1"/><text x="24.6909%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.3610%" y="437" width="0.2396%" height="15" fill="rgb(218,105,10)" fg:x="305" fg:w="3"/><text x="24.6110%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.3610%" y="421" width="0.2396%" height="15" fill="rgb(216,65,28)" fg:x="305" fg:w="3"/><text x="24.6110%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5208%" y="405" width="0.0799%" height="15" fill="rgb(229,6,28)" fg:x="307" fg:w="1"/><text x="24.7708%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5208%" y="389" width="0.0799%" height="15" fill="rgb(222,160,42)" fg:x="307" fg:w="1"/><text x="24.7708%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.5208%" y="373" width="0.0799%" height="15" fill="rgb(235,83,49)" fg:x="307" fg:w="1"/><text x="24.7708%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.5208%" y="357" width="0.0799%" height="15" fill="rgb(236,86,36)" fg:x="307" fg:w="1"/><text x="24.7708%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.5208%" y="341" width="0.0799%" height="15" fill="rgb(236,19,41)" fg:x="307" fg:w="1"/><text x="24.7708%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5208%" y="325" width="0.0799%" height="15" fill="rgb(217,71,31)" fg:x="307" fg:w="1"/><text x="24.7708%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.5208%" y="309" width="0.0799%" height="15" fill="rgb(236,209,25)" fg:x="307" fg:w="1"/><text x="24.7708%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.5208%" y="293" width="0.0799%" height="15" fill="rgb(247,104,21)" fg:x="307" fg:w="1"/><text x="24.7708%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.5208%" y="277" width="0.0799%" height="15" fill="rgb(243,80,38)" fg:x="307" fg:w="1"/><text x="24.7708%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.5208%" y="261" width="0.0799%" height="15" fill="rgb(232,109,38)" fg:x="307" fg:w="1"/><text x="24.7708%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.5208%" y="245" width="0.0799%" height="15" fill="rgb(212,177,53)" fg:x="307" fg:w="1"/><text x="24.7708%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5208%" y="229" width="0.0799%" height="15" fill="rgb(227,30,34)" fg:x="307" fg:w="1"/><text x="24.7708%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="24.3610%" y="453" width="0.3195%" height="15" fill="rgb(205,175,25)" fg:x="305" fg:w="4"/><text x="24.6110%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6006%" y="437" width="0.0799%" height="15" fill="rgb(249,39,54)" fg:x="308" fg:w="1"/><text x="24.8506%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6006%" y="421" width="0.0799%" height="15" fill="rgb(215,54,37)" fg:x="308" fg:w="1"/><text x="24.8506%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6006%" y="405" width="0.0799%" height="15" fill="rgb(205,60,46)" fg:x="308" fg:w="1"/><text x="24.8506%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6006%" y="389" width="0.0799%" height="15" fill="rgb(238,89,29)" fg:x="308" fg:w="1"/><text x="24.8506%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6006%" y="373" width="0.0799%" height="15" fill="rgb(212,48,10)" fg:x="308" fg:w="1"/><text x="24.8506%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6006%" y="357" width="0.0799%" height="15" fill="rgb(237,186,28)" fg:x="308" fg:w="1"/><text x="24.8506%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6006%" y="341" width="0.0799%" height="15" fill="rgb(237,204,4)" fg:x="308" fg:w="1"/><text x="24.8506%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.6006%" y="325" width="0.0799%" height="15" fill="rgb(237,15,47)" fg:x="308" fg:w="1"/><text x="24.8506%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.6006%" y="309" width="0.0799%" height="15" fill="rgb(244,110,25)" fg:x="308" fg:w="1"/><text x="24.8506%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.6006%" y="293" width="0.0799%" height="15" fill="rgb(241,12,16)" fg:x="308" fg:w="1"/><text x="24.8506%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.6006%" y="277" width="0.0799%" height="15" fill="rgb(235,25,9)" fg:x="308" fg:w="1"/><text x="24.8506%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="24.3610%" y="469" width="0.3994%" height="15" fill="rgb(245,159,19)" fg:x="305" fg:w="5"/><text x="24.6110%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6805%" y="453" width="0.0799%" height="15" fill="rgb(236,63,32)" fg:x="309" fg:w="1"/><text x="24.9305%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6805%" y="437" width="0.0799%" height="15" fill="rgb(235,32,52)" fg:x="309" fg:w="1"/><text x="24.9305%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6805%" y="421" width="0.0799%" height="15" fill="rgb(209,176,21)" fg:x="309" fg:w="1"/><text x="24.9305%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6805%" y="405" width="0.0799%" height="15" fill="rgb(205,90,42)" fg:x="309" fg:w="1"/><text x="24.9305%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6805%" y="389" width="0.0799%" height="15" fill="rgb(213,132,16)" fg:x="309" fg:w="1"/><text x="24.9305%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6805%" y="373" width="0.0799%" height="15" fill="rgb(232,11,22)" fg:x="309" fg:w="1"/><text x="24.9305%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6805%" y="357" width="0.0799%" height="15" fill="rgb(248,167,41)" fg:x="309" fg:w="1"/><text x="24.9305%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.6805%" y="341" width="0.0799%" height="15" fill="rgb(209,127,6)" fg:x="309" fg:w="1"/><text x="24.9305%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.6805%" y="325" width="0.0799%" height="15" fill="rgb(246,210,34)" fg:x="309" fg:w="1"/><text x="24.9305%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.6805%" y="309" width="0.0799%" height="15" fill="rgb(238,165,13)" fg:x="309" fg:w="1"/><text x="24.9305%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.6805%" y="293" width="0.0799%" height="15" fill="rgb(233,98,15)" fg:x="309" fg:w="1"/><text x="24.9305%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6805%" y="277" width="0.0799%" height="15" fill="rgb(215,215,51)" fg:x="309" fg:w="1"/><text x="24.9305%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.7604%" y="469" width="0.0799%" height="15" fill="rgb(217,161,25)" fg:x="310" fg:w="1"/><text x="25.0104%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="24.2013%" y="549" width="0.7188%" height="15" fill="rgb(217,167,48)" fg:x="303" fg:w="9"/><text x="24.4513%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="24.2013%" y="533" width="0.7188%" height="15" fill="rgb(205,163,34)" fg:x="303" fg:w="9"/><text x="24.4513%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="24.3610%" y="517" width="0.5591%" height="15" fill="rgb(241,197,31)" fg:x="305" fg:w="7"/><text x="24.6110%" y="527.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="24.3610%" y="501" width="0.5591%" height="15" fill="rgb(225,123,11)" fg:x="305" fg:w="7"/><text x="24.6110%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="24.3610%" y="485" width="0.5591%" height="15" fill="rgb(217,4,20)" fg:x="305" fg:w="7"/><text x="24.6110%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.8403%" y="469" width="0.0799%" height="15" fill="rgb(215,55,9)" fg:x="311" fg:w="1"/><text x="25.0903%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.8403%" y="453" width="0.0799%" height="15" fill="rgb(218,165,5)" fg:x="311" fg:w="1"/><text x="25.0903%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.8403%" y="437" width="0.0799%" height="15" fill="rgb(222,175,15)" fg:x="311" fg:w="1"/><text x="25.0903%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.8403%" y="421" width="0.0799%" height="15" fill="rgb(223,85,34)" fg:x="311" fg:w="1"/><text x="25.0903%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.8403%" y="405" width="0.0799%" height="15" fill="rgb(234,228,29)" fg:x="311" fg:w="1"/><text x="25.0903%" y="415.50"></text></g><g><title>plugins_core::build::Build::leads_to (26 samples, 2.08%)</title><rect x="22.9233%" y="581" width="2.0767%" height="15" fill="rgb(239,7,28)" fg:x="287" fg:w="26"/><text x="23.1733%" y="591.50">p..</text></g><g><title>plugins_core::tools::leads_to (11 samples, 0.88%)</title><rect x="24.1214%" y="565" width="0.8786%" height="15" fill="rgb(252,222,53)" fg:x="302" fg:w="11"/><text x="24.3714%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.9201%" y="549" width="0.0799%" height="15" fill="rgb(232,146,44)" fg:x="312" fg:w="1"/><text x="25.1701%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.0000%" y="549" width="0.0799%" height="15" fill="rgb(243,223,53)" fg:x="313" fg:w="1"/><text x="25.2500%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.0000%" y="533" width="0.0799%" height="15" fill="rgb(219,128,25)" fg:x="313" fg:w="1"/><text x="25.2500%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0000%" y="517" width="0.0799%" height="15" fill="rgb(223,56,32)" fg:x="313" fg:w="1"/><text x="25.2500%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0000%" y="501" width="0.0799%" height="15" fill="rgb(237,41,3)" fg:x="313" fg:w="1"/><text x="25.2500%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0000%" y="485" width="0.0799%" height="15" fill="rgb(235,138,9)" fg:x="313" fg:w="1"/><text x="25.2500%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0799%" y="485" width="0.0799%" height="15" fill="rgb(214,131,10)" fg:x="314" fg:w="1"/><text x="25.3299%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0799%" y="469" width="0.0799%" height="15" fill="rgb(229,89,7)" fg:x="314" fg:w="1"/><text x="25.3299%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0799%" y="453" width="0.0799%" height="15" fill="rgb(240,24,42)" fg:x="314" fg:w="1"/><text x="25.3299%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (40 samples, 3.19%)</title><rect x="22.0447%" y="629" width="3.1949%" height="15" fill="rgb(243,188,54)" fg:x="276" fg:w="40"/><text x="22.2947%" y="639.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 3.19%)</title><rect x="22.0447%" y="613" width="3.1949%" height="15" fill="rgb(246,92,22)" fg:x="276" fg:w="40"/><text x="22.2947%" y="623.50">&lt;al..</text></g><g><title>plugins_core::build::QuickThing::make (40 samples, 3.19%)</title><rect x="22.0447%" y="597" width="3.1949%" height="15" fill="rgb(211,176,51)" fg:x="276" fg:w="40"/><text x="22.2947%" y="607.50">plu..</text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="25.0000%" y="581" width="0.2396%" height="15" fill="rgb(246,207,34)" fg:x="313" fg:w="3"/><text x="25.2500%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="25.0000%" y="565" width="0.2396%" height="15" fill="rgb(239,95,2)" fg:x="313" fg:w="3"/><text x="25.2500%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="25.0799%" y="549" width="0.1597%" height="15" fill="rgb(211,124,25)" fg:x="314" fg:w="2"/><text x="25.3299%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.0799%" y="533" width="0.1597%" height="15" fill="rgb(231,221,19)" fg:x="314" fg:w="2"/><text x="25.3299%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="25.0799%" y="517" width="0.1597%" height="15" fill="rgb(239,183,19)" fg:x="314" fg:w="2"/><text x="25.3299%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.0799%" y="501" width="0.1597%" height="15" fill="rgb(221,130,29)" fg:x="314" fg:w="2"/><text x="25.3299%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1597%" y="485" width="0.0799%" height="15" fill="rgb(206,130,36)" fg:x="315" fg:w="1"/><text x="25.4097%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1597%" y="469" width="0.0799%" height="15" fill="rgb(215,70,19)" fg:x="315" fg:w="1"/><text x="25.4097%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="25.1597%" y="453" width="0.0799%" height="15" fill="rgb(244,16,43)" fg:x="315" fg:w="1"/><text x="25.4097%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1597%" y="437" width="0.0799%" height="15" fill="rgb(222,115,32)" fg:x="315" fg:w="1"/><text x="25.4097%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1597%" y="421" width="0.0799%" height="15" fill="rgb(247,48,25)" fg:x="315" fg:w="1"/><text x="25.4097%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1597%" y="405" width="0.0799%" height="15" fill="rgb(226,180,51)" fg:x="315" fg:w="1"/><text x="25.4097%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="25.2396%" y="629" width="0.0799%" height="15" fill="rgb(217,142,42)" fg:x="316" fg:w="1"/><text x="25.4896%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="25.2396%" y="613" width="0.0799%" height="15" fill="rgb(220,178,3)" fg:x="316" fg:w="1"/><text x="25.4896%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.2396%" y="597" width="0.0799%" height="15" fill="rgb(217,221,4)" fg:x="316" fg:w="1"/><text x="25.4896%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="25.3195%" y="597" width="0.1597%" height="15" fill="rgb(237,63,43)" fg:x="317" fg:w="2"/><text x="25.5695%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="25.3195%" y="613" width="0.2396%" height="15" fill="rgb(220,57,8)" fg:x="317" fg:w="3"/><text x="25.5695%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4792%" y="597" width="0.0799%" height="15" fill="rgb(254,186,27)" fg:x="319" fg:w="1"/><text x="25.7292%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4792%" y="581" width="0.0799%" height="15" fill="rgb(251,57,28)" fg:x="319" fg:w="1"/><text x="25.7292%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="25.4792%" y="565" width="0.0799%" height="15" fill="rgb(215,228,0)" fg:x="319" fg:w="1"/><text x="25.7292%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4792%" y="549" width="0.0799%" height="15" fill="rgb(237,218,39)" fg:x="319" fg:w="1"/><text x="25.7292%" y="559.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="25.5591%" y="597" width="0.1597%" height="15" fill="rgb(207,2,54)" fg:x="320" fg:w="2"/><text x="25.8091%" y="607.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="25.5591%" y="581" width="0.1597%" height="15" fill="rgb(232,76,50)" fg:x="320" fg:w="2"/><text x="25.8091%" y="591.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="25.5591%" y="565" width="0.1597%" height="15" fill="rgb(211,85,31)" fg:x="320" fg:w="2"/><text x="25.8091%" y="575.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="25.5591%" y="549" width="0.1597%" height="15" fill="rgb(223,210,27)" fg:x="320" fg:w="2"/><text x="25.8091%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="25.5591%" y="533" width="0.1597%" height="15" fill="rgb(254,36,8)" fg:x="320" fg:w="2"/><text x="25.8091%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="25.5591%" y="517" width="0.1597%" height="15" fill="rgb(213,4,25)" fg:x="320" fg:w="2"/><text x="25.8091%" y="527.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="25.5591%" y="501" width="0.1597%" height="15" fill="rgb(224,2,39)" fg:x="320" fg:w="2"/><text x="25.8091%" y="511.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="25.5591%" y="485" width="0.1597%" height="15" fill="rgb(208,8,39)" fg:x="320" fg:w="2"/><text x="25.8091%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="25.7987%" y="565" width="0.1597%" height="15" fill="rgb(216,226,3)" fg:x="323" fg:w="2"/><text x="26.0487%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.8786%" y="549" width="0.0799%" height="15" fill="rgb(249,139,31)" fg:x="324" fg:w="1"/><text x="26.1286%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.8786%" y="533" width="0.0799%" height="15" fill="rgb(242,170,35)" fg:x="324" fg:w="1"/><text x="26.1286%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.8786%" y="517" width="0.0799%" height="15" fill="rgb(238,14,9)" fg:x="324" fg:w="1"/><text x="26.1286%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="25.9585%" y="565" width="0.0799%" height="15" fill="rgb(251,81,46)" fg:x="325" fg:w="1"/><text x="26.2085%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="25.9585%" y="549" width="0.0799%" height="15" fill="rgb(230,23,4)" fg:x="325" fg:w="1"/><text x="26.2085%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="25.9585%" y="533" width="0.0799%" height="15" fill="rgb(211,85,25)" fg:x="325" fg:w="1"/><text x="26.2085%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="26.1981%" y="533" width="0.0799%" height="15" fill="rgb(252,23,31)" fg:x="328" fg:w="1"/><text x="26.4481%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.1981%" y="517" width="0.0799%" height="15" fill="rgb(234,163,38)" fg:x="328" fg:w="1"/><text x="26.4481%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.1981%" y="501" width="0.0799%" height="15" fill="rgb(210,190,50)" fg:x="328" fg:w="1"/><text x="26.4481%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.1981%" y="485" width="0.0799%" height="15" fill="rgb(228,158,3)" fg:x="328" fg:w="1"/><text x="26.4481%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.2780%" y="517" width="0.0799%" height="15" fill="rgb(216,130,0)" fg:x="329" fg:w="1"/><text x="26.5280%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="26.4377%" y="501" width="0.1597%" height="15" fill="rgb(224,184,10)" fg:x="331" fg:w="2"/><text x="26.6877%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="26.5176%" y="485" width="0.0799%" height="15" fill="rgb(214,202,18)" fg:x="332" fg:w="1"/><text x="26.7676%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="26.5176%" y="469" width="0.0799%" height="15" fill="rgb(213,229,54)" fg:x="332" fg:w="1"/><text x="26.7676%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="26.3578%" y="517" width="0.3994%" height="15" fill="rgb(246,120,0)" fg:x="330" fg:w="5"/><text x="26.6078%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="26.5974%" y="501" width="0.1597%" height="15" fill="rgb(237,6,15)" fg:x="333" fg:w="2"/><text x="26.8474%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="26.5974%" y="485" width="0.1597%" height="15" fill="rgb(252,156,15)" fg:x="333" fg:w="2"/><text x="26.8474%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="26.5974%" y="469" width="0.1597%" height="15" fill="rgb(249,78,18)" fg:x="333" fg:w="2"/><text x="26.8474%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.9968%" y="501" width="0.0799%" height="15" fill="rgb(230,223,44)" fg:x="338" fg:w="1"/><text x="27.2468%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="27.0767%" y="501" width="0.4792%" height="15" fill="rgb(230,222,32)" fg:x="339" fg:w="6"/><text x="27.3267%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="27.2364%" y="485" width="0.3195%" height="15" fill="rgb(247,54,6)" fg:x="341" fg:w="4"/><text x="27.4864%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="27.2364%" y="469" width="0.3195%" height="15" fill="rgb(247,115,45)" fg:x="341" fg:w="4"/><text x="27.4864%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4760%" y="453" width="0.0799%" height="15" fill="rgb(213,203,37)" fg:x="344" fg:w="1"/><text x="27.7260%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.7157%" y="453" width="0.0799%" height="15" fill="rgb(248,188,18)" fg:x="347" fg:w="1"/><text x="27.9657%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="27.7157%" y="485" width="0.1597%" height="15" fill="rgb(206,80,8)" fg:x="347" fg:w="2"/><text x="27.9657%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="27.7157%" y="469" width="0.1597%" height="15" fill="rgb(245,217,31)" fg:x="347" fg:w="2"/><text x="27.9657%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="27.7955%" y="453" width="0.0799%" height="15" fill="rgb(220,193,15)" fg:x="348" fg:w="1"/><text x="28.0455%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="27.7955%" y="437" width="0.0799%" height="15" fill="rgb(226,7,19)" fg:x="348" fg:w="1"/><text x="28.0455%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.7955%" y="421" width="0.0799%" height="15" fill="rgb(222,145,31)" fg:x="348" fg:w="1"/><text x="28.0455%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="27.8754%" y="485" width="0.3195%" height="15" fill="rgb(241,193,36)" fg:x="349" fg:w="4"/><text x="28.1254%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="27.8754%" y="469" width="0.3195%" height="15" fill="rgb(225,123,33)" fg:x="349" fg:w="4"/><text x="28.1254%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.9553%" y="453" width="0.2396%" height="15" fill="rgb(246,136,38)" fg:x="350" fg:w="3"/><text x="28.2053%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.0351%" y="437" width="0.1597%" height="15" fill="rgb(243,56,24)" fg:x="351" fg:w="2"/><text x="28.2851%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.1150%" y="421" width="0.0799%" height="15" fill="rgb(215,147,2)" fg:x="352" fg:w="1"/><text x="28.3650%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.1150%" y="405" width="0.0799%" height="15" fill="rgb(209,155,27)" fg:x="352" fg:w="1"/><text x="28.3650%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.1150%" y="389" width="0.0799%" height="15" fill="rgb(222,177,11)" fg:x="352" fg:w="1"/><text x="28.3650%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.2748%" y="469" width="0.0799%" height="15" fill="rgb(212,227,15)" fg:x="354" fg:w="1"/><text x="28.5248%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.2748%" y="453" width="0.0799%" height="15" fill="rgb(214,138,20)" fg:x="354" fg:w="1"/><text x="28.5248%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.4345%" y="453" width="0.0799%" height="15" fill="rgb(221,170,31)" fg:x="356" fg:w="1"/><text x="28.6845%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.5144%" y="453" width="0.0799%" height="15" fill="rgb(253,207,5)" fg:x="357" fg:w="1"/><text x="28.7644%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.5942%" y="437" width="0.0799%" height="15" fill="rgb(212,64,37)" fg:x="358" fg:w="1"/><text x="28.8442%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.5942%" y="421" width="0.0799%" height="15" fill="rgb(208,113,51)" fg:x="358" fg:w="1"/><text x="28.8442%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.5942%" y="405" width="0.0799%" height="15" fill="rgb(237,15,5)" fg:x="358" fg:w="1"/><text x="28.8442%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.7540%" y="421" width="0.0799%" height="15" fill="rgb(238,33,18)" fg:x="360" fg:w="1"/><text x="29.0040%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.7540%" y="405" width="0.0799%" height="15" fill="rgb(253,206,50)" fg:x="360" fg:w="1"/><text x="29.0040%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.7540%" y="389" width="0.0799%" height="15" fill="rgb(242,158,43)" fg:x="360" fg:w="1"/><text x="29.0040%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.7540%" y="373" width="0.0799%" height="15" fill="rgb(213,125,27)" fg:x="360" fg:w="1"/><text x="29.0040%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="28.8339%" y="421" width="0.2396%" height="15" fill="rgb(233,161,31)" fg:x="361" fg:w="3"/><text x="29.0839%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.8339%" y="405" width="0.2396%" height="15" fill="rgb(218,135,6)" fg:x="361" fg:w="3"/><text x="29.0839%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.9137%" y="389" width="0.1597%" height="15" fill="rgb(222,73,53)" fg:x="362" fg:w="2"/><text x="29.1637%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.9137%" y="373" width="0.1597%" height="15" fill="rgb(229,66,53)" fg:x="362" fg:w="2"/><text x="29.1637%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.9137%" y="357" width="0.1597%" height="15" fill="rgb(208,128,19)" fg:x="362" fg:w="2"/><text x="29.1637%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.9137%" y="341" width="0.1597%" height="15" fill="rgb(235,70,27)" fg:x="362" fg:w="2"/><text x="29.1637%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.9137%" y="325" width="0.1597%" height="15" fill="rgb(241,130,30)" fg:x="362" fg:w="2"/><text x="29.1637%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="28.6741%" y="437" width="0.4792%" height="15" fill="rgb(222,57,48)" fg:x="359" fg:w="6"/><text x="28.9241%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.0735%" y="421" width="0.0799%" height="15" fill="rgb(225,204,29)" fg:x="364" fg:w="1"/><text x="29.3235%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.0735%" y="405" width="0.0799%" height="15" fill="rgb(240,196,35)" fg:x="364" fg:w="1"/><text x="29.3235%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.0735%" y="389" width="0.0799%" height="15" fill="rgb(215,150,16)" fg:x="364" fg:w="1"/><text x="29.3235%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="28.5942%" y="453" width="0.7188%" height="15" fill="rgb(209,170,13)" fg:x="358" fg:w="9"/><text x="28.8442%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.1534%" y="437" width="0.1597%" height="15" fill="rgb(235,75,31)" fg:x="365" fg:w="2"/><text x="29.4034%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.1534%" y="421" width="0.1597%" height="15" fill="rgb(252,1,47)" fg:x="365" fg:w="2"/><text x="29.4034%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.1534%" y="405" width="0.1597%" height="15" fill="rgb(241,2,36)" fg:x="365" fg:w="2"/><text x="29.4034%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.2332%" y="389" width="0.0799%" height="15" fill="rgb(236,191,4)" fg:x="366" fg:w="1"/><text x="29.4832%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.2332%" y="373" width="0.0799%" height="15" fill="rgb(212,65,35)" fg:x="366" fg:w="1"/><text x="29.4832%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.2332%" y="357" width="0.0799%" height="15" fill="rgb(209,49,33)" fg:x="366" fg:w="1"/><text x="29.4832%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="27.5559%" y="501" width="1.8371%" height="15" fill="rgb(208,36,46)" fg:x="345" fg:w="23"/><text x="27.8059%" y="511.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="28.1949%" y="485" width="1.1981%" height="15" fill="rgb(210,125,2)" fg:x="353" fg:w="15"/><text x="28.4449%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="28.3546%" y="469" width="1.0383%" height="15" fill="rgb(225,62,6)" fg:x="355" fg:w="13"/><text x="28.6046%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3131%" y="453" width="0.0799%" height="15" fill="rgb(210,54,27)" fg:x="367" fg:w="1"/><text x="29.5631%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.3131%" y="437" width="0.0799%" height="15" fill="rgb(249,189,52)" fg:x="367" fg:w="1"/><text x="29.5631%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3131%" y="421" width="0.0799%" height="15" fill="rgb(225,134,40)" fg:x="367" fg:w="1"/><text x="29.5631%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="29.5527%" y="469" width="0.4792%" height="15" fill="rgb(206,13,37)" fg:x="370" fg:w="6"/><text x="29.8027%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="29.7923%" y="453" width="0.2396%" height="15" fill="rgb(232,114,28)" fg:x="373" fg:w="3"/><text x="30.0423%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="29.7923%" y="437" width="0.2396%" height="15" fill="rgb(253,215,8)" fg:x="373" fg:w="3"/><text x="30.0423%" y="447.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="29.7923%" y="421" width="0.2396%" height="15" fill="rgb(254,64,19)" fg:x="373" fg:w="3"/><text x="30.0423%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (48 samples, 3.83%)</title><rect x="26.2780%" y="533" width="3.8339%" height="15" fill="rgb(242,18,46)" fg:x="329" fg:w="48"/><text x="26.5280%" y="543.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (42 samples, 3.35%)</title><rect x="26.7572%" y="517" width="3.3546%" height="15" fill="rgb(239,192,30)" fg:x="335" fg:w="42"/><text x="27.0072%" y="527.50">ser..</text></g><g><title>std::io::Write::write_all (9 samples, 0.72%)</title><rect x="29.3930%" y="501" width="0.7188%" height="15" fill="rgb(232,73,14)" fg:x="368" fg:w="9"/><text x="29.6430%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.64%)</title><rect x="29.4728%" y="485" width="0.6390%" height="15" fill="rgb(225,51,9)" fg:x="369" fg:w="8"/><text x="29.7228%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.0319%" y="469" width="0.0799%" height="15" fill="rgb(242,217,54)" fg:x="376" fg:w="1"/><text x="30.2819%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1917%" y="501" width="0.0799%" height="15" fill="rgb(216,93,3)" fg:x="378" fg:w="1"/><text x="30.4417%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.2716%" y="485" width="0.0799%" height="15" fill="rgb(230,119,33)" fg:x="379" fg:w="1"/><text x="30.5216%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2716%" y="469" width="0.0799%" height="15" fill="rgb(238,170,27)" fg:x="379" fg:w="1"/><text x="30.5216%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3514%" y="469" width="0.0799%" height="15" fill="rgb(229,8,2)" fg:x="380" fg:w="1"/><text x="30.6014%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.4313%" y="469" width="0.0799%" height="15" fill="rgb(205,214,42)" fg:x="381" fg:w="1"/><text x="30.6813%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.4313%" y="453" width="0.0799%" height="15" fill="rgb(245,113,1)" fg:x="381" fg:w="1"/><text x="30.6813%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.5911%" y="453" width="0.0799%" height="15" fill="rgb(252,50,2)" fg:x="383" fg:w="1"/><text x="30.8411%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.5911%" y="437" width="0.0799%" height="15" fill="rgb(225,122,24)" fg:x="383" fg:w="1"/><text x="30.8411%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="30.6709%" y="453" width="0.0799%" height="15" fill="rgb(234,129,31)" fg:x="384" fg:w="1"/><text x="30.9209%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.7508%" y="421" width="0.0799%" height="15" fill="rgb(219,177,4)" fg:x="385" fg:w="1"/><text x="31.0008%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="30.1118%" y="533" width="0.7987%" height="15" fill="rgb(225,142,27)" fg:x="377" fg:w="10"/><text x="30.3618%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="30.1118%" y="517" width="0.7987%" height="15" fill="rgb(205,107,51)" fg:x="377" fg:w="10"/><text x="30.3618%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="30.2716%" y="501" width="0.6390%" height="15" fill="rgb(236,223,15)" fg:x="379" fg:w="8"/><text x="30.5216%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="30.3514%" y="485" width="0.5591%" height="15" fill="rgb(235,133,11)" fg:x="380" fg:w="7"/><text x="30.6014%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="30.5112%" y="469" width="0.3994%" height="15" fill="rgb(247,172,13)" fg:x="382" fg:w="5"/><text x="30.7612%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="30.7508%" y="453" width="0.1597%" height="15" fill="rgb(233,191,41)" fg:x="385" fg:w="2"/><text x="31.0008%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="30.7508%" y="437" width="0.1597%" height="15" fill="rgb(250,65,16)" fg:x="385" fg:w="2"/><text x="31.0008%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.8307%" y="421" width="0.0799%" height="15" fill="rgb(206,10,27)" fg:x="386" fg:w="1"/><text x="31.0807%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.8307%" y="405" width="0.0799%" height="15" fill="rgb(212,96,22)" fg:x="386" fg:w="1"/><text x="31.0807%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8307%" y="389" width="0.0799%" height="15" fill="rgb(206,50,0)" fg:x="386" fg:w="1"/><text x="31.0807%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.9904%" y="501" width="0.0799%" height="15" fill="rgb(249,105,52)" fg:x="388" fg:w="1"/><text x="31.2404%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9904%" y="485" width="0.0799%" height="15" fill="rgb(216,93,51)" fg:x="388" fg:w="1"/><text x="31.2404%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="30.9105%" y="517" width="0.2396%" height="15" fill="rgb(217,172,13)" fg:x="387" fg:w="3"/><text x="31.1605%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.0703%" y="501" width="0.0799%" height="15" fill="rgb(235,199,38)" fg:x="389" fg:w="1"/><text x="31.3203%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="31.1502%" y="501" width="0.0799%" height="15" fill="rgb(221,97,33)" fg:x="390" fg:w="1"/><text x="31.4002%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2300%" y="485" width="0.0799%" height="15" fill="rgb(205,156,50)" fg:x="391" fg:w="1"/><text x="31.4800%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="31.3099%" y="485" width="0.2396%" height="15" fill="rgb(215,142,19)" fg:x="392" fg:w="3"/><text x="31.5599%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.3898%" y="469" width="0.1597%" height="15" fill="rgb(232,170,7)" fg:x="393" fg:w="2"/><text x="31.6398%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="31.3898%" y="453" width="0.1597%" height="15" fill="rgb(223,50,17)" fg:x="393" fg:w="2"/><text x="31.6398%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="31.5495%" y="469" width="0.0799%" height="15" fill="rgb(230,103,46)" fg:x="395" fg:w="1"/><text x="31.7995%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="31.5495%" y="485" width="0.3195%" height="15" fill="rgb(254,30,34)" fg:x="395" fg:w="4"/><text x="31.7995%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="31.6294%" y="469" width="0.2396%" height="15" fill="rgb(235,198,1)" fg:x="396" fg:w="3"/><text x="31.8794%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7891%" y="453" width="0.0799%" height="15" fill="rgb(217,105,47)" fg:x="398" fg:w="1"/><text x="32.0391%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="31.8690%" y="485" width="0.0799%" height="15" fill="rgb(231,18,12)" fg:x="399" fg:w="1"/><text x="32.1190%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.8690%" y="469" width="0.0799%" height="15" fill="rgb(218,196,1)" fg:x="399" fg:w="1"/><text x="32.1190%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0288%" y="453" width="0.0799%" height="15" fill="rgb(210,32,3)" fg:x="401" fg:w="1"/><text x="32.2788%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="31.9489%" y="485" width="0.3195%" height="15" fill="rgb(227,178,30)" fg:x="400" fg:w="4"/><text x="32.1989%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="32.0288%" y="469" width="0.2396%" height="15" fill="rgb(231,140,27)" fg:x="401" fg:w="3"/><text x="32.2788%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.1086%" y="453" width="0.1597%" height="15" fill="rgb(206,66,35)" fg:x="402" fg:w="2"/><text x="32.3586%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.1086%" y="437" width="0.1597%" height="15" fill="rgb(212,34,2)" fg:x="402" fg:w="2"/><text x="32.3586%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.3482%" y="405" width="0.1597%" height="15" fill="rgb(207,201,33)" fg:x="405" fg:w="2"/><text x="32.5982%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.3482%" y="437" width="0.2396%" height="15" fill="rgb(221,135,32)" fg:x="405" fg:w="3"/><text x="32.5982%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="32.3482%" y="421" width="0.2396%" height="15" fill="rgb(206,77,31)" fg:x="405" fg:w="3"/><text x="32.5982%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="32.5080%" y="405" width="0.0799%" height="15" fill="rgb(252,198,50)" fg:x="407" fg:w="1"/><text x="32.7580%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="32.5080%" y="389" width="0.0799%" height="15" fill="rgb(206,79,27)" fg:x="407" fg:w="1"/><text x="32.7580%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.5879%" y="405" width="0.0799%" height="15" fill="rgb(228,108,9)" fg:x="408" fg:w="1"/><text x="32.8379%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="32.6677%" y="405" width="0.0799%" height="15" fill="rgb(213,9,39)" fg:x="409" fg:w="1"/><text x="32.9177%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.8275%" y="389" width="0.1597%" height="15" fill="rgb(252,51,13)" fg:x="411" fg:w="2"/><text x="33.0775%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.9073%" y="373" width="0.0799%" height="15" fill="rgb(218,202,39)" fg:x="412" fg:w="1"/><text x="33.1573%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="32.5879%" y="437" width="0.4792%" height="15" fill="rgb(214,122,21)" fg:x="408" fg:w="6"/><text x="32.8379%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="32.5879%" y="421" width="0.4792%" height="15" fill="rgb(217,205,48)" fg:x="408" fg:w="6"/><text x="32.8379%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="32.7476%" y="405" width="0.3195%" height="15" fill="rgb(230,216,13)" fg:x="410" fg:w="4"/><text x="32.9976%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.9872%" y="389" width="0.0799%" height="15" fill="rgb(249,118,4)" fg:x="413" fg:w="1"/><text x="33.2372%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2268%" y="405" width="0.0799%" height="15" fill="rgb(212,207,40)" fg:x="416" fg:w="1"/><text x="33.4768%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2268%" y="389" width="0.0799%" height="15" fill="rgb(217,156,26)" fg:x="416" fg:w="1"/><text x="33.4768%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2268%" y="373" width="0.0799%" height="15" fill="rgb(226,86,34)" fg:x="416" fg:w="1"/><text x="33.4768%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.3067%" y="389" width="0.0799%" height="15" fill="rgb(217,111,30)" fg:x="417" fg:w="1"/><text x="33.5567%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.5463%" y="341" width="0.0799%" height="15" fill="rgb(228,64,18)" fg:x="420" fg:w="1"/><text x="33.7963%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="33.5463%" y="357" width="0.2396%" height="15" fill="rgb(254,217,48)" fg:x="420" fg:w="3"/><text x="33.7963%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="33.6262%" y="341" width="0.1597%" height="15" fill="rgb(226,156,48)" fg:x="421" fg:w="2"/><text x="33.8762%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="33.6262%" y="325" width="0.1597%" height="15" fill="rgb(236,168,20)" fg:x="421" fg:w="2"/><text x="33.8762%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="33.6262%" y="309" width="0.1597%" height="15" fill="rgb(239,210,33)" fg:x="421" fg:w="2"/><text x="33.8762%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="33.3866%" y="389" width="0.6390%" height="15" fill="rgb(242,85,17)" fg:x="418" fg:w="8"/><text x="33.6366%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="33.4665%" y="373" width="0.5591%" height="15" fill="rgb(221,196,15)" fg:x="419" fg:w="7"/><text x="33.7165%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="33.7859%" y="357" width="0.2396%" height="15" fill="rgb(249,76,21)" fg:x="423" fg:w="3"/><text x="34.0359%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="33.1470%" y="421" width="0.9585%" height="15" fill="rgb(243,67,29)" fg:x="415" fg:w="12"/><text x="33.3970%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="33.3067%" y="405" width="0.7987%" height="15" fill="rgb(240,159,2)" fg:x="417" fg:w="10"/><text x="33.5567%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0256%" y="389" width="0.0799%" height="15" fill="rgb(244,64,3)" fg:x="426" fg:w="1"/><text x="34.2756%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.92%)</title><rect x="32.3482%" y="453" width="1.9169%" height="15" fill="rgb(220,86,40)" fg:x="405" fg:w="24"/><text x="32.5982%" y="463.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.20%)</title><rect x="33.0671%" y="437" width="1.1981%" height="15" fill="rgb(222,194,51)" fg:x="414" fg:w="15"/><text x="33.3171%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.1054%" y="421" width="0.1597%" height="15" fill="rgb(207,154,19)" fg:x="427" fg:w="2"/><text x="34.3554%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 2.16%)</title><rect x="32.3482%" y="469" width="2.1565%" height="15" fill="rgb(206,178,36)" fg:x="405" fg:w="27"/><text x="32.5982%" y="479.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="34.2652%" y="453" width="0.2396%" height="15" fill="rgb(218,8,24)" fg:x="429" fg:w="3"/><text x="34.5152%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.3450%" y="437" width="0.1597%" height="15" fill="rgb(226,83,41)" fg:x="430" fg:w="2"/><text x="34.5950%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.5048%" y="469" width="0.1597%" height="15" fill="rgb(224,23,22)" fg:x="432" fg:w="2"/><text x="34.7548%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (31 samples, 2.48%)</title><rect x="32.2684%" y="485" width="2.4760%" height="15" fill="rgb(218,198,45)" fg:x="404" fg:w="31"/><text x="32.5184%" y="495.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6645%" y="469" width="0.0799%" height="15" fill="rgb(249,147,41)" fg:x="434" fg:w="1"/><text x="34.9145%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.6645%" y="453" width="0.0799%" height="15" fill="rgb(244,224,13)" fg:x="434" fg:w="1"/><text x="34.9145%" y="463.50"></text></g><g><title>engine::session::Session::save_changes (116 samples, 9.27%)</title><rect x="25.5591%" y="613" width="9.2652%" height="15" fill="rgb(225,97,27)" fg:x="320" fg:w="116"/><text x="25.8091%" y="623.50">engine::sessi..</text></g><g><title>engine::session::state::State::close (114 samples, 9.11%)</title><rect x="25.7188%" y="597" width="9.1054%" height="15" fill="rgb(254,64,0)" fg:x="322" fg:w="114"/><text x="25.9688%" y="607.50">engine::sessi..</text></g><g><title>engine::session::state::State::flush_entities (113 samples, 9.03%)</title><rect x="25.7987%" y="581" width="9.0256%" height="15" fill="rgb(208,130,43)" fg:x="323" fg:w="113"/><text x="26.0487%" y="591.50">engine::sessi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (110 samples, 8.79%)</title><rect x="26.0383%" y="565" width="8.7859%" height="15" fill="rgb(247,91,25)" fg:x="326" fg:w="110"/><text x="26.2883%" y="575.50">engine::sess..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (110 samples, 8.79%)</title><rect x="26.0383%" y="549" width="8.7859%" height="15" fill="rgb(215,218,42)" fg:x="326" fg:w="110"/><text x="26.2883%" y="559.50">engine::sess..</text></g><g><title>kernel::model::any_entity_changes (49 samples, 3.91%)</title><rect x="30.9105%" y="533" width="3.9137%" height="15" fill="rgb(233,9,24)" fg:x="387" fg:w="49"/><text x="31.1605%" y="543.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (46 samples, 3.67%)</title><rect x="31.1502%" y="517" width="3.6741%" height="15" fill="rgb(252,105,38)" fg:x="390" fg:w="46"/><text x="31.4002%" y="527.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (45 samples, 3.59%)</title><rect x="31.2300%" y="501" width="3.5942%" height="15" fill="rgb(225,40,49)" fg:x="391" fg:w="45"/><text x="31.4800%" y="511.50">&lt;ser..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="34.7444%" y="485" width="0.0799%" height="15" fill="rgb(232,196,19)" fg:x="435" fg:w="1"/><text x="34.9944%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.7444%" y="469" width="0.0799%" height="15" fill="rgb(207,35,15)" fg:x="435" fg:w="1"/><text x="34.9944%" y="479.50"></text></g><g><title>engine::session::Session::flush (120 samples, 9.58%)</title><rect x="25.3195%" y="629" width="9.5847%" height="15" fill="rgb(238,68,36)" fg:x="317" fg:w="120"/><text x="25.5695%" y="639.50">engine::sessio..</text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="34.8243%" y="613" width="0.0799%" height="15" fill="rgb(205,158,20)" fg:x="436" fg:w="1"/><text x="35.0743%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="34.9042%" y="613" width="0.0799%" height="15" fill="rgb(232,32,22)" fg:x="437" fg:w="1"/><text x="35.1542%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="34.9042%" y="597" width="0.0799%" height="15" fill="rgb(210,169,6)" fg:x="437" fg:w="1"/><text x="35.1542%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="34.9042%" y="581" width="0.0799%" height="15" fill="rgb(229,28,12)" fg:x="437" fg:w="1"/><text x="35.1542%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.9042%" y="565" width="0.0799%" height="15" fill="rgb(229,78,10)" fg:x="437" fg:w="1"/><text x="35.1542%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="34.9042%" y="549" width="0.0799%" height="15" fill="rgb(223,139,54)" fg:x="437" fg:w="1"/><text x="35.1542%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.9042%" y="533" width="0.0799%" height="15" fill="rgb(207,110,4)" fg:x="437" fg:w="1"/><text x="35.1542%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9042%" y="517" width="0.0799%" height="15" fill="rgb(248,30,41)" fg:x="437" fg:w="1"/><text x="35.1542%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9840%" y="613" width="0.0799%" height="15" fill="rgb(235,54,25)" fg:x="438" fg:w="1"/><text x="35.2340%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.0639%" y="549" width="0.1597%" height="15" fill="rgb(213,107,41)" fg:x="439" fg:w="2"/><text x="35.3139%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1438%" y="533" width="0.0799%" height="15" fill="rgb(237,102,9)" fg:x="440" fg:w="1"/><text x="35.3938%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1438%" y="517" width="0.0799%" height="15" fill="rgb(252,137,49)" fg:x="440" fg:w="1"/><text x="35.3938%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="35.0639%" y="597" width="0.3195%" height="15" fill="rgb(233,202,33)" fg:x="439" fg:w="4"/><text x="35.3139%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="35.0639%" y="581" width="0.3195%" height="15" fill="rgb(223,14,51)" fg:x="439" fg:w="4"/><text x="35.3139%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="35.0639%" y="565" width="0.3195%" height="15" fill="rgb(248,70,23)" fg:x="439" fg:w="4"/><text x="35.3139%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="35.2236%" y="549" width="0.1597%" height="15" fill="rgb(209,207,47)" fg:x="441" fg:w="2"/><text x="35.4736%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.4633%" y="485" width="0.0799%" height="15" fill="rgb(245,124,2)" fg:x="444" fg:w="1"/><text x="35.7133%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.4633%" y="469" width="0.0799%" height="15" fill="rgb(249,208,11)" fg:x="444" fg:w="1"/><text x="35.7133%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (9 samples, 0.72%)</title><rect x="34.9042%" y="629" width="0.7188%" height="15" fill="rgb(247,112,7)" fg:x="437" fg:w="9"/><text x="35.1542%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="35.0639%" y="613" width="0.5591%" height="15" fill="rgb(209,192,31)" fg:x="439" fg:w="7"/><text x="35.3139%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="35.3834%" y="597" width="0.2396%" height="15" fill="rgb(236,55,19)" fg:x="443" fg:w="3"/><text x="35.6334%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="35.3834%" y="581" width="0.2396%" height="15" fill="rgb(252,89,41)" fg:x="443" fg:w="3"/><text x="35.6334%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.3834%" y="565" width="0.2396%" height="15" fill="rgb(220,172,14)" fg:x="443" fg:w="3"/><text x="35.6334%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="35.3834%" y="549" width="0.2396%" height="15" fill="rgb(252,65,2)" fg:x="443" fg:w="3"/><text x="35.6334%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.3834%" y="533" width="0.2396%" height="15" fill="rgb(250,20,8)" fg:x="443" fg:w="3"/><text x="35.6334%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="35.3834%" y="517" width="0.2396%" height="15" fill="rgb(234,149,13)" fg:x="443" fg:w="3"/><text x="35.6334%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.3834%" y="501" width="0.2396%" height="15" fill="rgb(223,219,12)" fg:x="443" fg:w="3"/><text x="35.6334%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5431%" y="485" width="0.0799%" height="15" fill="rgb(234,13,49)" fg:x="445" fg:w="1"/><text x="35.7931%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5431%" y="469" width="0.0799%" height="15" fill="rgb(214,41,25)" fg:x="445" fg:w="1"/><text x="35.7931%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7827%" y="389" width="0.0799%" height="15" fill="rgb(232,198,52)" fg:x="448" fg:w="1"/><text x="36.0327%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7827%" y="373" width="0.0799%" height="15" fill="rgb(236,111,46)" fg:x="448" fg:w="1"/><text x="36.0327%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.7827%" y="357" width="0.0799%" height="15" fill="rgb(253,30,20)" fg:x="448" fg:w="1"/><text x="36.0327%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.7827%" y="341" width="0.0799%" height="15" fill="rgb(247,141,17)" fg:x="448" fg:w="1"/><text x="36.0327%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.7827%" y="325" width="0.0799%" height="15" fill="rgb(214,195,21)" fg:x="448" fg:w="1"/><text x="36.0327%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.7827%" y="309" width="0.0799%" height="15" fill="rgb(214,98,12)" fg:x="448" fg:w="1"/><text x="36.0327%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.7827%" y="293" width="0.0799%" height="15" fill="rgb(239,4,26)" fg:x="448" fg:w="1"/><text x="36.0327%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.7827%" y="277" width="0.0799%" height="15" fill="rgb(234,210,35)" fg:x="448" fg:w="1"/><text x="36.0327%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.7827%" y="261" width="0.0799%" height="15" fill="rgb(252,178,27)" fg:x="448" fg:w="1"/><text x="36.0327%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.7827%" y="245" width="0.0799%" height="15" fill="rgb(217,50,1)" fg:x="448" fg:w="1"/><text x="36.0327%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.7827%" y="229" width="0.0799%" height="15" fill="rgb(233,137,5)" fg:x="448" fg:w="1"/><text x="36.0327%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7827%" y="213" width="0.0799%" height="15" fill="rgb(217,227,25)" fg:x="448" fg:w="1"/><text x="36.0327%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="35.7029%" y="597" width="0.2396%" height="15" fill="rgb(242,89,38)" fg:x="447" fg:w="3"/><text x="35.9529%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="35.7029%" y="581" width="0.2396%" height="15" fill="rgb(212,190,30)" fg:x="447" fg:w="3"/><text x="35.9529%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="35.7827%" y="565" width="0.1597%" height="15" fill="rgb(222,120,8)" fg:x="448" fg:w="2"/><text x="36.0327%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="35.7827%" y="549" width="0.1597%" height="15" fill="rgb(227,181,9)" fg:x="448" fg:w="2"/><text x="36.0327%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.7827%" y="533" width="0.1597%" height="15" fill="rgb(222,125,29)" fg:x="448" fg:w="2"/><text x="36.0327%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.7827%" y="517" width="0.1597%" height="15" fill="rgb(215,153,31)" fg:x="448" fg:w="2"/><text x="36.0327%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="35.7827%" y="501" width="0.1597%" height="15" fill="rgb(228,77,30)" fg:x="448" fg:w="2"/><text x="36.0327%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="35.7827%" y="485" width="0.1597%" height="15" fill="rgb(226,110,9)" fg:x="448" fg:w="2"/><text x="36.0327%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.7827%" y="469" width="0.1597%" height="15" fill="rgb(219,111,7)" fg:x="448" fg:w="2"/><text x="36.0327%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.7827%" y="453" width="0.1597%" height="15" fill="rgb(229,167,25)" fg:x="448" fg:w="2"/><text x="36.0327%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="35.7827%" y="437" width="0.1597%" height="15" fill="rgb(209,77,43)" fg:x="448" fg:w="2"/><text x="36.0327%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="35.7827%" y="421" width="0.1597%" height="15" fill="rgb(233,70,39)" fg:x="448" fg:w="2"/><text x="36.0327%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.7827%" y="405" width="0.1597%" height="15" fill="rgb(207,171,44)" fg:x="448" fg:w="2"/><text x="36.0327%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.8626%" y="389" width="0.0799%" height="15" fill="rgb(244,91,6)" fg:x="449" fg:w="1"/><text x="36.1126%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="35.8626%" y="373" width="0.0799%" height="15" fill="rgb(234,136,12)" fg:x="449" fg:w="1"/><text x="36.1126%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.8626%" y="357" width="0.0799%" height="15" fill="rgb(216,210,38)" fg:x="449" fg:w="1"/><text x="36.1126%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.8626%" y="341" width="0.0799%" height="15" fill="rgb(241,227,7)" fg:x="449" fg:w="1"/><text x="36.1126%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.8626%" y="325" width="0.0799%" height="15" fill="rgb(241,222,11)" fg:x="449" fg:w="1"/><text x="36.1126%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8626%" y="309" width="0.0799%" height="15" fill="rgb(246,86,18)" fg:x="449" fg:w="1"/><text x="36.1126%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8626%" y="293" width="0.0799%" height="15" fill="rgb(224,151,49)" fg:x="449" fg:w="1"/><text x="36.1126%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.8626%" y="277" width="0.0799%" height="15" fill="rgb(235,4,41)" fg:x="449" fg:w="1"/><text x="36.1126%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.8626%" y="261" width="0.0799%" height="15" fill="rgb(218,30,52)" fg:x="449" fg:w="1"/><text x="36.1126%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.8626%" y="245" width="0.0799%" height="15" fill="rgb(205,124,51)" fg:x="449" fg:w="1"/><text x="36.1126%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.8626%" y="229" width="0.0799%" height="15" fill="rgb(237,126,51)" fg:x="449" fg:w="1"/><text x="36.1126%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.8626%" y="213" width="0.0799%" height="15" fill="rgb(225,32,46)" fg:x="449" fg:w="1"/><text x="36.1126%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.8626%" y="197" width="0.0799%" height="15" fill="rgb(251,60,49)" fg:x="449" fg:w="1"/><text x="36.1126%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.8626%" y="181" width="0.0799%" height="15" fill="rgb(234,18,23)" fg:x="449" fg:w="1"/><text x="36.1126%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.8626%" y="165" width="0.0799%" height="15" fill="rgb(234,25,23)" fg:x="449" fg:w="1"/><text x="36.1126%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.8626%" y="149" width="0.0799%" height="15" fill="rgb(210,43,52)" fg:x="449" fg:w="1"/><text x="36.1126%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="35.8626%" y="133" width="0.0799%" height="15" fill="rgb(237,198,21)" fg:x="449" fg:w="1"/><text x="36.1126%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="35.8626%" y="117" width="0.0799%" height="15" fill="rgb(211,20,34)" fg:x="449" fg:w="1"/><text x="36.1126%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="35.8626%" y="101" width="0.0799%" height="15" fill="rgb(221,155,50)" fg:x="449" fg:w="1"/><text x="36.1126%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.8626%" y="85" width="0.0799%" height="15" fill="rgb(213,214,53)" fg:x="449" fg:w="1"/><text x="36.1126%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.9425%" y="581" width="0.0799%" height="15" fill="rgb(215,229,48)" fg:x="450" fg:w="1"/><text x="36.1925%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.9425%" y="565" width="0.0799%" height="15" fill="rgb(243,88,5)" fg:x="450" fg:w="1"/><text x="36.1925%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.0224%" y="485" width="0.1597%" height="15" fill="rgb(216,199,8)" fg:x="451" fg:w="2"/><text x="36.2724%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1022%" y="469" width="0.0799%" height="15" fill="rgb(241,22,4)" fg:x="452" fg:w="1"/><text x="36.3522%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1821%" y="405" width="0.0799%" height="15" fill="rgb(209,190,22)" fg:x="453" fg:w="1"/><text x="36.4321%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1821%" y="389" width="0.0799%" height="15" fill="rgb(251,138,45)" fg:x="453" fg:w="1"/><text x="36.4321%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.1821%" y="373" width="0.0799%" height="15" fill="rgb(219,111,22)" fg:x="453" fg:w="1"/><text x="36.4321%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.1821%" y="357" width="0.0799%" height="15" fill="rgb(253,29,49)" fg:x="453" fg:w="1"/><text x="36.4321%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.1821%" y="341" width="0.0799%" height="15" fill="rgb(238,129,49)" fg:x="453" fg:w="1"/><text x="36.4321%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.1821%" y="325" width="0.0799%" height="15" fill="rgb(240,26,41)" fg:x="453" fg:w="1"/><text x="36.4321%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1821%" y="309" width="0.0799%" height="15" fill="rgb(221,47,33)" fg:x="453" fg:w="1"/><text x="36.4321%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.1821%" y="485" width="0.1597%" height="15" fill="rgb(216,200,17)" fg:x="453" fg:w="2"/><text x="36.4321%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.1821%" y="469" width="0.1597%" height="15" fill="rgb(230,151,26)" fg:x="453" fg:w="2"/><text x="36.4321%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="36.1821%" y="453" width="0.1597%" height="15" fill="rgb(242,182,16)" fg:x="453" fg:w="2"/><text x="36.4321%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="36.1821%" y="437" width="0.1597%" height="15" fill="rgb(236,35,53)" fg:x="453" fg:w="2"/><text x="36.4321%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="36.1821%" y="421" width="0.1597%" height="15" fill="rgb(214,180,28)" fg:x="453" fg:w="2"/><text x="36.4321%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2620%" y="405" width="0.0799%" height="15" fill="rgb(208,173,36)" fg:x="454" fg:w="1"/><text x="36.5120%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2620%" y="389" width="0.0799%" height="15" fill="rgb(218,39,15)" fg:x="454" fg:w="1"/><text x="36.5120%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="36.0224%" y="501" width="0.3994%" height="15" fill="rgb(213,145,15)" fg:x="451" fg:w="5"/><text x="36.2724%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3419%" y="485" width="0.0799%" height="15" fill="rgb(242,110,37)" fg:x="455" fg:w="1"/><text x="36.5919%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="36.0224%" y="533" width="0.4792%" height="15" fill="rgb(247,146,22)" fg:x="451" fg:w="6"/><text x="36.2724%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="36.0224%" y="517" width="0.4792%" height="15" fill="rgb(215,191,7)" fg:x="451" fg:w="6"/><text x="36.2724%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4217%" y="501" width="0.0799%" height="15" fill="rgb(240,158,1)" fg:x="456" fg:w="1"/><text x="36.6717%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4217%" y="485" width="0.0799%" height="15" fill="rgb(241,78,32)" fg:x="456" fg:w="1"/><text x="36.6717%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.4217%" y="469" width="0.0799%" height="15" fill="rgb(248,83,10)" fg:x="456" fg:w="1"/><text x="36.6717%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.4217%" y="453" width="0.0799%" height="15" fill="rgb(241,52,0)" fg:x="456" fg:w="1"/><text x="36.6717%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.4217%" y="437" width="0.0799%" height="15" fill="rgb(238,37,13)" fg:x="456" fg:w="1"/><text x="36.6717%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.4217%" y="421" width="0.0799%" height="15" fill="rgb(242,194,17)" fg:x="456" fg:w="1"/><text x="36.6717%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.4217%" y="405" width="0.0799%" height="15" fill="rgb(236,96,3)" fg:x="456" fg:w="1"/><text x="36.6717%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.4217%" y="389" width="0.0799%" height="15" fill="rgb(235,148,34)" fg:x="456" fg:w="1"/><text x="36.6717%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.4217%" y="373" width="0.0799%" height="15" fill="rgb(254,12,11)" fg:x="456" fg:w="1"/><text x="36.6717%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.4217%" y="357" width="0.0799%" height="15" fill="rgb(207,31,54)" fg:x="456" fg:w="1"/><text x="36.6717%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.4217%" y="341" width="0.0799%" height="15" fill="rgb(252,14,28)" fg:x="456" fg:w="1"/><text x="36.6717%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4217%" y="325" width="0.0799%" height="15" fill="rgb(252,108,36)" fg:x="456" fg:w="1"/><text x="36.6717%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5016%" y="533" width="0.0799%" height="15" fill="rgb(214,149,7)" fg:x="457" fg:w="1"/><text x="36.7516%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5016%" y="517" width="0.0799%" height="15" fill="rgb(243,94,12)" fg:x="457" fg:w="1"/><text x="36.7516%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.5016%" y="501" width="0.0799%" height="15" fill="rgb(208,36,10)" fg:x="457" fg:w="1"/><text x="36.7516%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.5016%" y="485" width="0.0799%" height="15" fill="rgb(233,185,52)" fg:x="457" fg:w="1"/><text x="36.7516%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5016%" y="469" width="0.0799%" height="15" fill="rgb(234,50,45)" fg:x="457" fg:w="1"/><text x="36.7516%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.5016%" y="453" width="0.0799%" height="15" fill="rgb(228,92,54)" fg:x="457" fg:w="1"/><text x="36.7516%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.5016%" y="437" width="0.0799%" height="15" fill="rgb(224,85,25)" fg:x="457" fg:w="1"/><text x="36.7516%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="36.0224%" y="549" width="0.6390%" height="15" fill="rgb(246,1,45)" fg:x="451" fg:w="8"/><text x="36.2724%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5815%" y="533" width="0.0799%" height="15" fill="rgb(240,66,23)" fg:x="458" fg:w="1"/><text x="36.8315%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6613%" y="549" width="0.0799%" height="15" fill="rgb(222,96,27)" fg:x="459" fg:w="1"/><text x="36.9113%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (11 samples, 0.88%)</title><rect x="35.9425%" y="597" width="0.8786%" height="15" fill="rgb(212,136,10)" fg:x="450" fg:w="11"/><text x="36.1925%" y="607.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="36.0224%" y="581" width="0.7987%" height="15" fill="rgb(226,192,50)" fg:x="451" fg:w="10"/><text x="36.2724%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="36.0224%" y="565" width="0.7987%" height="15" fill="rgb(241,182,31)" fg:x="451" fg:w="10"/><text x="36.2724%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7412%" y="549" width="0.0799%" height="15" fill="rgb(219,205,47)" fg:x="460" fg:w="1"/><text x="36.9912%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7412%" y="533" width="0.0799%" height="15" fill="rgb(207,96,14)" fg:x="460" fg:w="1"/><text x="36.9912%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7412%" y="517" width="0.0799%" height="15" fill="rgb(216,119,9)" fg:x="460" fg:w="1"/><text x="36.9912%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7412%" y="501" width="0.0799%" height="15" fill="rgb(235,62,36)" fg:x="460" fg:w="1"/><text x="36.9912%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.7412%" y="485" width="0.0799%" height="15" fill="rgb(214,41,27)" fg:x="460" fg:w="1"/><text x="36.9912%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7412%" y="469" width="0.0799%" height="15" fill="rgb(214,174,37)" fg:x="460" fg:w="1"/><text x="36.9912%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.7412%" y="453" width="0.0799%" height="15" fill="rgb(212,11,25)" fg:x="460" fg:w="1"/><text x="36.9912%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.7412%" y="437" width="0.0799%" height="15" fill="rgb(217,71,35)" fg:x="460" fg:w="1"/><text x="36.9912%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="36.7412%" y="421" width="0.0799%" height="15" fill="rgb(234,152,9)" fg:x="460" fg:w="1"/><text x="36.9912%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="36.8211%" y="597" width="0.0799%" height="15" fill="rgb(228,32,51)" fg:x="461" fg:w="1"/><text x="37.0711%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="36.8211%" y="581" width="0.0799%" height="15" fill="rgb(209,14,47)" fg:x="461" fg:w="1"/><text x="37.0711%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.8211%" y="565" width="0.0799%" height="15" fill="rgb(218,201,17)" fg:x="461" fg:w="1"/><text x="37.0711%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.8211%" y="549" width="0.0799%" height="15" fill="rgb(218,98,15)" fg:x="461" fg:w="1"/><text x="37.0711%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.8211%" y="533" width="0.0799%" height="15" fill="rgb(233,202,29)" fg:x="461" fg:w="1"/><text x="37.0711%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.8211%" y="517" width="0.0799%" height="15" fill="rgb(207,196,44)" fg:x="461" fg:w="1"/><text x="37.0711%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.8211%" y="501" width="0.0799%" height="15" fill="rgb(218,63,34)" fg:x="461" fg:w="1"/><text x="37.0711%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.8211%" y="485" width="0.0799%" height="15" fill="rgb(209,10,5)" fg:x="461" fg:w="1"/><text x="37.0711%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.8211%" y="469" width="0.0799%" height="15" fill="rgb(224,36,28)" fg:x="461" fg:w="1"/><text x="37.0711%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.8211%" y="453" width="0.0799%" height="15" fill="rgb(249,178,7)" fg:x="461" fg:w="1"/><text x="37.0711%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.8211%" y="437" width="0.0799%" height="15" fill="rgb(253,163,10)" fg:x="461" fg:w="1"/><text x="37.0711%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.8211%" y="421" width="0.0799%" height="15" fill="rgb(245,67,46)" fg:x="461" fg:w="1"/><text x="37.0711%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.8211%" y="405" width="0.0799%" height="15" fill="rgb(225,14,18)" fg:x="461" fg:w="1"/><text x="37.0711%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.8211%" y="389" width="0.0799%" height="15" fill="rgb(217,41,54)" fg:x="461" fg:w="1"/><text x="37.0711%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8211%" y="373" width="0.0799%" height="15" fill="rgb(222,111,11)" fg:x="461" fg:w="1"/><text x="37.0711%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9010%" y="485" width="0.0799%" height="15" fill="rgb(211,85,31)" fg:x="462" fg:w="1"/><text x="37.1510%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9010%" y="469" width="0.0799%" height="15" fill="rgb(223,29,26)" fg:x="462" fg:w="1"/><text x="37.1510%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.9010%" y="453" width="0.0799%" height="15" fill="rgb(236,124,50)" fg:x="462" fg:w="1"/><text x="37.1510%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.9010%" y="437" width="0.0799%" height="15" fill="rgb(219,148,15)" fg:x="462" fg:w="1"/><text x="37.1510%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.9010%" y="517" width="0.1597%" height="15" fill="rgb(248,159,33)" fg:x="462" fg:w="2"/><text x="37.1510%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.9010%" y="501" width="0.1597%" height="15" fill="rgb(252,65,8)" fg:x="462" fg:w="2"/><text x="37.1510%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.9808%" y="485" width="0.0799%" height="15" fill="rgb(236,45,7)" fg:x="463" fg:w="1"/><text x="37.2308%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.9808%" y="469" width="0.0799%" height="15" fill="rgb(244,3,48)" fg:x="463" fg:w="1"/><text x="37.2308%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.9808%" y="453" width="0.0799%" height="15" fill="rgb(224,123,53)" fg:x="463" fg:w="1"/><text x="37.2308%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.9808%" y="437" width="0.0799%" height="15" fill="rgb(223,173,15)" fg:x="463" fg:w="1"/><text x="37.2308%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.9808%" y="421" width="0.0799%" height="15" fill="rgb(254,181,5)" fg:x="463" fg:w="1"/><text x="37.2308%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.9808%" y="405" width="0.0799%" height="15" fill="rgb(243,124,33)" fg:x="463" fg:w="1"/><text x="37.2308%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.9808%" y="389" width="0.0799%" height="15" fill="rgb(253,220,11)" fg:x="463" fg:w="1"/><text x="37.2308%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.9808%" y="373" width="0.0799%" height="15" fill="rgb(217,14,4)" fg:x="463" fg:w="1"/><text x="37.2308%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.9808%" y="357" width="0.0799%" height="15" fill="rgb(209,196,12)" fg:x="463" fg:w="1"/><text x="37.2308%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.9808%" y="341" width="0.0799%" height="15" fill="rgb(237,108,29)" fg:x="463" fg:w="1"/><text x="37.2308%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.9808%" y="325" width="0.0799%" height="15" fill="rgb(216,173,20)" fg:x="463" fg:w="1"/><text x="37.2308%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.9808%" y="309" width="0.0799%" height="15" fill="rgb(245,27,6)" fg:x="463" fg:w="1"/><text x="37.2308%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.0607%" y="517" width="0.0799%" height="15" fill="rgb(210,181,20)" fg:x="464" fg:w="1"/><text x="37.3107%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.1406%" y="517" width="0.0799%" height="15" fill="rgb(235,213,1)" fg:x="465" fg:w="1"/><text x="37.3906%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.1406%" y="501" width="0.0799%" height="15" fill="rgb(239,68,43)" fg:x="465" fg:w="1"/><text x="37.3906%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.1406%" y="485" width="0.0799%" height="15" fill="rgb(254,137,43)" fg:x="465" fg:w="1"/><text x="37.3906%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.1406%" y="469" width="0.0799%" height="15" fill="rgb(252,170,38)" fg:x="465" fg:w="1"/><text x="37.3906%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.1406%" y="453" width="0.0799%" height="15" fill="rgb(234,21,42)" fg:x="465" fg:w="1"/><text x="37.3906%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.1406%" y="437" width="0.0799%" height="15" fill="rgb(216,145,40)" fg:x="465" fg:w="1"/><text x="37.3906%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="36.9010%" y="581" width="0.3994%" height="15" fill="rgb(251,73,9)" fg:x="462" fg:w="5"/><text x="37.1510%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="36.9010%" y="565" width="0.3994%" height="15" fill="rgb(242,54,6)" fg:x="462" fg:w="5"/><text x="37.1510%" y="575.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="36.9010%" y="549" width="0.3994%" height="15" fill="rgb(239,70,7)" fg:x="462" fg:w="5"/><text x="37.1510%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="36.9010%" y="533" width="0.3994%" height="15" fill="rgb(216,159,35)" fg:x="462" fg:w="5"/><text x="37.1510%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2204%" y="517" width="0.0799%" height="15" fill="rgb(224,50,39)" fg:x="466" fg:w="1"/><text x="37.4704%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.2204%" y="501" width="0.0799%" height="15" fill="rgb(235,9,35)" fg:x="466" fg:w="1"/><text x="37.4704%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2204%" y="485" width="0.0799%" height="15" fill="rgb(239,34,21)" fg:x="466" fg:w="1"/><text x="37.4704%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.2204%" y="469" width="0.0799%" height="15" fill="rgb(218,162,43)" fg:x="466" fg:w="1"/><text x="37.4704%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="37.2204%" y="453" width="0.0799%" height="15" fill="rgb(219,89,33)" fg:x="466" fg:w="1"/><text x="37.4704%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2204%" y="437" width="0.0799%" height="15" fill="rgb(226,125,37)" fg:x="466" fg:w="1"/><text x="37.4704%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.2204%" y="421" width="0.0799%" height="15" fill="rgb(233,149,30)" fg:x="466" fg:w="1"/><text x="37.4704%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2204%" y="405" width="0.0799%" height="15" fill="rgb(236,8,18)" fg:x="466" fg:w="1"/><text x="37.4704%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2204%" y="389" width="0.0799%" height="15" fill="rgb(205,176,9)" fg:x="466" fg:w="1"/><text x="37.4704%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.2204%" y="373" width="0.0799%" height="15" fill="rgb(252,103,44)" fg:x="466" fg:w="1"/><text x="37.4704%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="36.9010%" y="597" width="0.4792%" height="15" fill="rgb(207,68,53)" fg:x="462" fg:w="6"/><text x="37.1510%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="37.3003%" y="581" width="0.0799%" height="15" fill="rgb(218,193,48)" fg:x="467" fg:w="1"/><text x="37.5503%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.76%)</title><rect x="35.7029%" y="613" width="1.7572%" height="15" fill="rgb(234,121,52)" fg:x="447" fg:w="22"/><text x="35.9529%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="37.3802%" y="597" width="0.0799%" height="15" fill="rgb(227,218,49)" fg:x="468" fg:w="1"/><text x="37.6302%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3802%" y="581" width="0.0799%" height="15" fill="rgb(221,8,7)" fg:x="468" fg:w="1"/><text x="37.6302%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.3802%" y="565" width="0.0799%" height="15" fill="rgb(217,151,36)" fg:x="468" fg:w="1"/><text x="37.6302%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.3802%" y="549" width="0.0799%" height="15" fill="rgb(213,71,5)" fg:x="468" fg:w="1"/><text x="37.6302%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.3802%" y="533" width="0.0799%" height="15" fill="rgb(225,145,43)" fg:x="468" fg:w="1"/><text x="37.6302%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.3802%" y="517" width="0.0799%" height="15" fill="rgb(235,118,19)" fg:x="468" fg:w="1"/><text x="37.6302%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.3802%" y="501" width="0.0799%" height="15" fill="rgb(214,102,36)" fg:x="468" fg:w="1"/><text x="37.6302%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.3802%" y="485" width="0.0799%" height="15" fill="rgb(220,56,43)" fg:x="468" fg:w="1"/><text x="37.6302%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.3802%" y="469" width="0.0799%" height="15" fill="rgb(246,136,46)" fg:x="468" fg:w="1"/><text x="37.6302%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.3802%" y="453" width="0.0799%" height="15" fill="rgb(249,99,12)" fg:x="468" fg:w="1"/><text x="37.6302%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.3802%" y="437" width="0.0799%" height="15" fill="rgb(224,31,42)" fg:x="468" fg:w="1"/><text x="37.6302%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.3802%" y="421" width="0.0799%" height="15" fill="rgb(208,96,21)" fg:x="468" fg:w="1"/><text x="37.6302%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3802%" y="405" width="0.0799%" height="15" fill="rgb(237,229,7)" fg:x="468" fg:w="1"/><text x="37.6302%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="37.4601%" y="597" width="0.0799%" height="15" fill="rgb(210,12,6)" fg:x="469" fg:w="1"/><text x="37.7101%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.6198%" y="469" width="0.0799%" height="15" fill="rgb(240,9,34)" fg:x="471" fg:w="1"/><text x="37.8698%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6198%" y="453" width="0.0799%" height="15" fill="rgb(211,68,37)" fg:x="471" fg:w="1"/><text x="37.8698%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6198%" y="437" width="0.0799%" height="15" fill="rgb(249,138,50)" fg:x="471" fg:w="1"/><text x="37.8698%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6198%" y="421" width="0.0799%" height="15" fill="rgb(243,185,40)" fg:x="471" fg:w="1"/><text x="37.8698%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6198%" y="405" width="0.0799%" height="15" fill="rgb(242,92,35)" fg:x="471" fg:w="1"/><text x="37.8698%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6198%" y="389" width="0.0799%" height="15" fill="rgb(244,98,5)" fg:x="471" fg:w="1"/><text x="37.8698%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6198%" y="373" width="0.0799%" height="15" fill="rgb(228,186,29)" fg:x="471" fg:w="1"/><text x="37.8698%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6198%" y="357" width="0.0799%" height="15" fill="rgb(253,7,44)" fg:x="471" fg:w="1"/><text x="37.8698%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6198%" y="341" width="0.0799%" height="15" fill="rgb(216,11,45)" fg:x="471" fg:w="1"/><text x="37.8698%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6198%" y="325" width="0.0799%" height="15" fill="rgb(205,67,3)" fg:x="471" fg:w="1"/><text x="37.8698%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6198%" y="309" width="0.0799%" height="15" fill="rgb(250,18,3)" fg:x="471" fg:w="1"/><text x="37.8698%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6198%" y="293" width="0.0799%" height="15" fill="rgb(241,222,43)" fg:x="471" fg:w="1"/><text x="37.8698%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6198%" y="277" width="0.0799%" height="15" fill="rgb(233,115,3)" fg:x="471" fg:w="1"/><text x="37.8698%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.5399%" y="517" width="0.2396%" height="15" fill="rgb(215,165,25)" fg:x="470" fg:w="3"/><text x="37.7899%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.5399%" y="501" width="0.2396%" height="15" fill="rgb(234,179,6)" fg:x="470" fg:w="3"/><text x="37.7899%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="37.5399%" y="485" width="0.2396%" height="15" fill="rgb(215,82,23)" fg:x="470" fg:w="3"/><text x="37.7899%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6997%" y="469" width="0.0799%" height="15" fill="rgb(211,47,18)" fg:x="472" fg:w="1"/><text x="37.9497%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6997%" y="453" width="0.0799%" height="15" fill="rgb(248,17,9)" fg:x="472" fg:w="1"/><text x="37.9497%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6997%" y="437" width="0.0799%" height="15" fill="rgb(210,212,12)" fg:x="472" fg:w="1"/><text x="37.9497%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6997%" y="421" width="0.0799%" height="15" fill="rgb(230,135,45)" fg:x="472" fg:w="1"/><text x="37.9497%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6997%" y="405" width="0.0799%" height="15" fill="rgb(214,121,41)" fg:x="472" fg:w="1"/><text x="37.9497%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6997%" y="389" width="0.0799%" height="15" fill="rgb(239,165,45)" fg:x="472" fg:w="1"/><text x="37.9497%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6997%" y="373" width="0.0799%" height="15" fill="rgb(214,85,51)" fg:x="472" fg:w="1"/><text x="37.9497%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6997%" y="357" width="0.0799%" height="15" fill="rgb(223,90,27)" fg:x="472" fg:w="1"/><text x="37.9497%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6997%" y="341" width="0.0799%" height="15" fill="rgb(244,84,11)" fg:x="472" fg:w="1"/><text x="37.9497%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6997%" y="325" width="0.0799%" height="15" fill="rgb(253,41,47)" fg:x="472" fg:w="1"/><text x="37.9497%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6997%" y="309" width="0.0799%" height="15" fill="rgb(232,39,5)" fg:x="472" fg:w="1"/><text x="37.9497%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="37.6997%" y="293" width="0.0799%" height="15" fill="rgb(211,93,4)" fg:x="472" fg:w="1"/><text x="37.9497%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.6997%" y="277" width="0.0799%" height="15" fill="rgb(219,50,49)" fg:x="472" fg:w="1"/><text x="37.9497%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="37.5399%" y="565" width="0.3195%" height="15" fill="rgb(232,80,19)" fg:x="470" fg:w="4"/><text x="37.7899%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="37.5399%" y="549" width="0.3195%" height="15" fill="rgb(215,227,39)" fg:x="470" fg:w="4"/><text x="37.7899%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="37.5399%" y="533" width="0.3195%" height="15" fill="rgb(211,99,12)" fg:x="470" fg:w="4"/><text x="37.7899%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7796%" y="517" width="0.0799%" height="15" fill="rgb(214,158,5)" fg:x="473" fg:w="1"/><text x="38.0296%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7796%" y="501" width="0.0799%" height="15" fill="rgb(242,19,53)" fg:x="473" fg:w="1"/><text x="38.0296%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7796%" y="485" width="0.0799%" height="15" fill="rgb(208,18,20)" fg:x="473" fg:w="1"/><text x="38.0296%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7796%" y="469" width="0.0799%" height="15" fill="rgb(250,44,11)" fg:x="473" fg:w="1"/><text x="38.0296%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.7796%" y="453" width="0.0799%" height="15" fill="rgb(238,159,13)" fg:x="473" fg:w="1"/><text x="38.0296%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7796%" y="437" width="0.0799%" height="15" fill="rgb(231,74,18)" fg:x="473" fg:w="1"/><text x="38.0296%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7796%" y="421" width="0.0799%" height="15" fill="rgb(229,219,45)" fg:x="473" fg:w="1"/><text x="38.0296%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7796%" y="405" width="0.0799%" height="15" fill="rgb(210,221,1)" fg:x="473" fg:w="1"/><text x="38.0296%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7796%" y="389" width="0.0799%" height="15" fill="rgb(209,60,51)" fg:x="473" fg:w="1"/><text x="38.0296%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7796%" y="373" width="0.0799%" height="15" fill="rgb(252,97,34)" fg:x="473" fg:w="1"/><text x="38.0296%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="37.7796%" y="357" width="0.0799%" height="15" fill="rgb(243,211,37)" fg:x="473" fg:w="1"/><text x="38.0296%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9393%" y="517" width="0.0799%" height="15" fill="rgb(210,229,37)" fg:x="475" fg:w="1"/><text x="38.1893%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9393%" y="501" width="0.0799%" height="15" fill="rgb(220,208,43)" fg:x="475" fg:w="1"/><text x="38.1893%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9393%" y="485" width="0.0799%" height="15" fill="rgb(218,118,50)" fg:x="475" fg:w="1"/><text x="38.1893%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9393%" y="469" width="0.0799%" height="15" fill="rgb(254,169,52)" fg:x="475" fg:w="1"/><text x="38.1893%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.0192%" y="517" width="0.0799%" height="15" fill="rgb(221,214,37)" fg:x="476" fg:w="1"/><text x="38.2692%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.0192%" y="501" width="0.0799%" height="15" fill="rgb(254,186,32)" fg:x="476" fg:w="1"/><text x="38.2692%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.0192%" y="485" width="0.0799%" height="15" fill="rgb(215,144,43)" fg:x="476" fg:w="1"/><text x="38.2692%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="37.5399%" y="597" width="0.7188%" height="15" fill="rgb(252,21,46)" fg:x="470" fg:w="9"/><text x="37.7899%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="37.5399%" y="581" width="0.7188%" height="15" fill="rgb(207,166,46)" fg:x="470" fg:w="9"/><text x="37.7899%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="37.8594%" y="565" width="0.3994%" height="15" fill="rgb(253,37,49)" fg:x="474" fg:w="5"/><text x="38.1094%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="37.8594%" y="549" width="0.3994%" height="15" fill="rgb(222,97,20)" fg:x="474" fg:w="5"/><text x="38.1094%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="37.8594%" y="533" width="0.3994%" height="15" fill="rgb(244,181,26)" fg:x="474" fg:w="5"/><text x="38.1094%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.0990%" y="517" width="0.1597%" height="15" fill="rgb(241,22,29)" fg:x="477" fg:w="2"/><text x="38.3490%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.0990%" y="501" width="0.1597%" height="15" fill="rgb(206,200,43)" fg:x="477" fg:w="2"/><text x="38.3490%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.0990%" y="485" width="0.1597%" height="15" fill="rgb(226,224,43)" fg:x="477" fg:w="2"/><text x="38.3490%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.0990%" y="469" width="0.1597%" height="15" fill="rgb(253,129,28)" fg:x="477" fg:w="2"/><text x="38.3490%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="38.0990%" y="453" width="0.1597%" height="15" fill="rgb(252,99,33)" fg:x="477" fg:w="2"/><text x="38.3490%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.0990%" y="437" width="0.1597%" height="15" fill="rgb(208,123,45)" fg:x="477" fg:w="2"/><text x="38.3490%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.0990%" y="421" width="0.1597%" height="15" fill="rgb(251,106,12)" fg:x="477" fg:w="2"/><text x="38.3490%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.0990%" y="405" width="0.1597%" height="15" fill="rgb(240,209,35)" fg:x="477" fg:w="2"/><text x="38.3490%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="38.0990%" y="389" width="0.1597%" height="15" fill="rgb(214,52,50)" fg:x="477" fg:w="2"/><text x="38.3490%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="38.2588%" y="597" width="0.0799%" height="15" fill="rgb(234,119,4)" fg:x="479" fg:w="1"/><text x="38.5088%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.2588%" y="581" width="0.0799%" height="15" fill="rgb(228,181,36)" fg:x="479" fg:w="1"/><text x="38.5088%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.2588%" y="565" width="0.0799%" height="15" fill="rgb(213,171,42)" fg:x="479" fg:w="1"/><text x="38.5088%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.2588%" y="549" width="0.0799%" height="15" fill="rgb(239,14,41)" fg:x="479" fg:w="1"/><text x="38.5088%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.2588%" y="533" width="0.0799%" height="15" fill="rgb(239,111,46)" fg:x="479" fg:w="1"/><text x="38.5088%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.2588%" y="517" width="0.0799%" height="15" fill="rgb(214,72,7)" fg:x="479" fg:w="1"/><text x="38.5088%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.2588%" y="501" width="0.0799%" height="15" fill="rgb(221,114,1)" fg:x="479" fg:w="1"/><text x="38.5088%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.2588%" y="485" width="0.0799%" height="15" fill="rgb(213,143,14)" fg:x="479" fg:w="1"/><text x="38.5088%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.2588%" y="469" width="0.0799%" height="15" fill="rgb(220,221,53)" fg:x="479" fg:w="1"/><text x="38.5088%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.2588%" y="453" width="0.0799%" height="15" fill="rgb(236,189,27)" fg:x="479" fg:w="1"/><text x="38.5088%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.2588%" y="437" width="0.0799%" height="15" fill="rgb(252,139,49)" fg:x="479" fg:w="1"/><text x="38.5088%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.2588%" y="421" width="0.0799%" height="15" fill="rgb(231,158,33)" fg:x="479" fg:w="1"/><text x="38.5088%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.2588%" y="405" width="0.0799%" height="15" fill="rgb(207,201,15)" fg:x="479" fg:w="1"/><text x="38.5088%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2588%" y="389" width="0.0799%" height="15" fill="rgb(218,43,48)" fg:x="479" fg:w="1"/><text x="38.5088%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3387%" y="549" width="0.0799%" height="15" fill="rgb(244,63,52)" fg:x="480" fg:w="1"/><text x="38.5887%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3387%" y="533" width="0.0799%" height="15" fill="rgb(236,60,17)" fg:x="480" fg:w="1"/><text x="38.5887%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="38.4185%" y="533" width="0.0799%" height="15" fill="rgb(205,206,29)" fg:x="481" fg:w="1"/><text x="38.6685%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="38.4185%" y="517" width="0.0799%" height="15" fill="rgb(205,209,35)" fg:x="481" fg:w="1"/><text x="38.6685%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="38.3387%" y="597" width="0.3994%" height="15" fill="rgb(227,112,14)" fg:x="480" fg:w="5"/><text x="38.5887%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (5 samples, 0.40%)</title><rect x="38.3387%" y="581" width="0.3994%" height="15" fill="rgb(248,151,9)" fg:x="480" fg:w="5"/><text x="38.5887%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="38.3387%" y="565" width="0.3994%" height="15" fill="rgb(247,45,40)" fg:x="480" fg:w="5"/><text x="38.5887%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="38.4185%" y="549" width="0.3195%" height="15" fill="rgb(232,185,16)" fg:x="481" fg:w="4"/><text x="38.6685%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="38.4984%" y="533" width="0.2396%" height="15" fill="rgb(215,45,44)" fg:x="482" fg:w="3"/><text x="38.7484%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.4984%" y="517" width="0.2396%" height="15" fill="rgb(206,69,32)" fg:x="482" fg:w="3"/><text x="38.7484%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6581%" y="501" width="0.0799%" height="15" fill="rgb(233,98,50)" fg:x="484" fg:w="1"/><text x="38.9081%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7380%" y="469" width="0.0799%" height="15" fill="rgb(232,217,52)" fg:x="485" fg:w="1"/><text x="38.9880%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.7380%" y="453" width="0.0799%" height="15" fill="rgb(250,42,51)" fg:x="485" fg:w="1"/><text x="38.9880%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.7380%" y="501" width="0.1597%" height="15" fill="rgb(241,200,26)" fg:x="485" fg:w="2"/><text x="38.9880%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.7380%" y="485" width="0.1597%" height="15" fill="rgb(207,10,32)" fg:x="485" fg:w="2"/><text x="38.9880%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8179%" y="469" width="0.0799%" height="15" fill="rgb(214,63,15)" fg:x="486" fg:w="1"/><text x="39.0679%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.8978%" y="501" width="0.0799%" height="15" fill="rgb(234,176,14)" fg:x="487" fg:w="1"/><text x="39.1478%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.9776%" y="421" width="0.0799%" height="15" fill="rgb(226,104,52)" fg:x="488" fg:w="1"/><text x="39.2276%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.9776%" y="501" width="0.2396%" height="15" fill="rgb(211,222,1)" fg:x="488" fg:w="3"/><text x="39.2276%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="38.9776%" y="485" width="0.2396%" height="15" fill="rgb(237,7,3)" fg:x="488" fg:w="3"/><text x="39.2276%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.9776%" y="469" width="0.2396%" height="15" fill="rgb(218,143,7)" fg:x="488" fg:w="3"/><text x="39.2276%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.9776%" y="453" width="0.2396%" height="15" fill="rgb(208,25,22)" fg:x="488" fg:w="3"/><text x="39.2276%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.9776%" y="437" width="0.2396%" height="15" fill="rgb(228,127,16)" fg:x="488" fg:w="3"/><text x="39.2276%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.0575%" y="421" width="0.1597%" height="15" fill="rgb(237,86,27)" fg:x="489" fg:w="2"/><text x="39.3075%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.0575%" y="405" width="0.1597%" height="15" fill="rgb(207,125,19)" fg:x="489" fg:w="2"/><text x="39.3075%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.0575%" y="389" width="0.1597%" height="15" fill="rgb(243,195,0)" fg:x="489" fg:w="2"/><text x="39.3075%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.2173%" y="405" width="0.0799%" height="15" fill="rgb(230,95,18)" fg:x="491" fg:w="1"/><text x="39.4673%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2173%" y="389" width="0.0799%" height="15" fill="rgb(232,157,21)" fg:x="491" fg:w="1"/><text x="39.4673%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2173%" y="373" width="0.0799%" height="15" fill="rgb(212,120,50)" fg:x="491" fg:w="1"/><text x="39.4673%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="38.7380%" y="549" width="0.7188%" height="15" fill="rgb(222,204,44)" fg:x="485" fg:w="9"/><text x="38.9880%" y="559.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="38.7380%" y="533" width="0.7188%" height="15" fill="rgb(236,6,33)" fg:x="485" fg:w="9"/><text x="38.9880%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="38.7380%" y="517" width="0.7188%" height="15" fill="rgb(247,11,38)" fg:x="485" fg:w="9"/><text x="38.9880%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.2173%" y="501" width="0.2396%" height="15" fill="rgb(215,111,0)" fg:x="491" fg:w="3"/><text x="39.4673%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.2173%" y="485" width="0.2396%" height="15" fill="rgb(211,65,46)" fg:x="491" fg:w="3"/><text x="39.4673%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.2173%" y="469" width="0.2396%" height="15" fill="rgb(216,5,12)" fg:x="491" fg:w="3"/><text x="39.4673%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.2173%" y="453" width="0.2396%" height="15" fill="rgb(226,7,2)" fg:x="491" fg:w="3"/><text x="39.4673%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="39.2173%" y="437" width="0.2396%" height="15" fill="rgb(242,116,12)" fg:x="491" fg:w="3"/><text x="39.4673%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.2173%" y="421" width="0.2396%" height="15" fill="rgb(249,209,7)" fg:x="491" fg:w="3"/><text x="39.4673%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.2971%" y="405" width="0.1597%" height="15" fill="rgb(232,73,17)" fg:x="492" fg:w="2"/><text x="39.5471%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.2971%" y="389" width="0.1597%" height="15" fill="rgb(214,13,32)" fg:x="492" fg:w="2"/><text x="39.5471%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.3770%" y="373" width="0.0799%" height="15" fill="rgb(221,125,10)" fg:x="493" fg:w="1"/><text x="39.6270%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4569%" y="533" width="0.0799%" height="15" fill="rgb(246,7,44)" fg:x="494" fg:w="1"/><text x="39.7069%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6965%" y="453" width="0.0799%" height="15" fill="rgb(239,18,35)" fg:x="497" fg:w="1"/><text x="39.9465%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6965%" y="437" width="0.0799%" height="15" fill="rgb(250,222,16)" fg:x="497" fg:w="1"/><text x="39.9465%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6965%" y="421" width="0.0799%" height="15" fill="rgb(219,100,8)" fg:x="497" fg:w="1"/><text x="39.9465%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.6965%" y="405" width="0.0799%" height="15" fill="rgb(240,62,13)" fg:x="497" fg:w="1"/><text x="39.9465%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.6965%" y="389" width="0.0799%" height="15" fill="rgb(253,194,2)" fg:x="497" fg:w="1"/><text x="39.9465%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.6965%" y="373" width="0.0799%" height="15" fill="rgb(235,58,31)" fg:x="497" fg:w="1"/><text x="39.9465%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.6965%" y="357" width="0.0799%" height="15" fill="rgb(231,37,11)" fg:x="497" fg:w="1"/><text x="39.9465%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.6965%" y="341" width="0.0799%" height="15" fill="rgb(235,133,0)" fg:x="497" fg:w="1"/><text x="39.9465%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7764%" y="453" width="0.0799%" height="15" fill="rgb(212,185,40)" fg:x="498" fg:w="1"/><text x="40.0264%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7764%" y="437" width="0.0799%" height="15" fill="rgb(216,68,42)" fg:x="498" fg:w="1"/><text x="40.0264%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.7764%" y="421" width="0.0799%" height="15" fill="rgb(239,81,4)" fg:x="498" fg:w="1"/><text x="40.0264%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.7764%" y="405" width="0.0799%" height="15" fill="rgb(206,86,6)" fg:x="498" fg:w="1"/><text x="40.0264%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.7764%" y="389" width="0.0799%" height="15" fill="rgb(249,95,27)" fg:x="498" fg:w="1"/><text x="40.0264%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7764%" y="373" width="0.0799%" height="15" fill="rgb(205,155,45)" fg:x="498" fg:w="1"/><text x="40.0264%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.7764%" y="357" width="0.0799%" height="15" fill="rgb(213,55,42)" fg:x="498" fg:w="1"/><text x="40.0264%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.7764%" y="341" width="0.0799%" height="15" fill="rgb(249,197,4)" fg:x="498" fg:w="1"/><text x="40.0264%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.7764%" y="325" width="0.0799%" height="15" fill="rgb(212,128,32)" fg:x="498" fg:w="1"/><text x="40.0264%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.7764%" y="309" width="0.0799%" height="15" fill="rgb(252,47,30)" fg:x="498" fg:w="1"/><text x="40.0264%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.7764%" y="293" width="0.0799%" height="15" fill="rgb(209,79,18)" fg:x="498" fg:w="1"/><text x="40.0264%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7764%" y="277" width="0.0799%" height="15" fill="rgb(225,81,38)" fg:x="498" fg:w="1"/><text x="40.0264%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="39.5367%" y="501" width="0.3994%" height="15" fill="rgb(205,95,16)" fg:x="495" fg:w="5"/><text x="39.7867%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.6965%" y="485" width="0.2396%" height="15" fill="rgb(214,30,4)" fg:x="497" fg:w="3"/><text x="39.9465%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="39.6965%" y="469" width="0.2396%" height="15" fill="rgb(232,137,22)" fg:x="497" fg:w="3"/><text x="39.9465%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8562%" y="453" width="0.0799%" height="15" fill="rgb(232,156,19)" fg:x="499" fg:w="1"/><text x="40.1062%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="39.9361%" y="501" width="0.1597%" height="15" fill="rgb(248,157,26)" fg:x="500" fg:w="2"/><text x="40.1861%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.0160%" y="485" width="0.0799%" height="15" fill="rgb(242,24,3)" fg:x="501" fg:w="1"/><text x="40.2660%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="40.0958%" y="421" width="0.1597%" height="15" fill="rgb(218,195,48)" fg:x="502" fg:w="2"/><text x="40.3458%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1757%" y="405" width="0.0799%" height="15" fill="rgb(214,193,36)" fg:x="503" fg:w="1"/><text x="40.4257%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="40.0958%" y="501" width="0.2396%" height="15" fill="rgb(242,110,40)" fg:x="502" fg:w="3"/><text x="40.3458%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="40.0958%" y="485" width="0.2396%" height="15" fill="rgb(233,150,26)" fg:x="502" fg:w="3"/><text x="40.3458%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="40.0958%" y="469" width="0.2396%" height="15" fill="rgb(239,200,30)" fg:x="502" fg:w="3"/><text x="40.3458%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="40.0958%" y="453" width="0.2396%" height="15" fill="rgb(226,28,11)" fg:x="502" fg:w="3"/><text x="40.3458%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="40.0958%" y="437" width="0.2396%" height="15" fill="rgb(220,26,48)" fg:x="502" fg:w="3"/><text x="40.3458%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.2556%" y="421" width="0.0799%" height="15" fill="rgb(232,10,11)" fg:x="504" fg:w="1"/><text x="40.5056%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.2556%" y="405" width="0.0799%" height="15" fill="rgb(252,143,50)" fg:x="504" fg:w="1"/><text x="40.5056%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (23 samples, 1.84%)</title><rect x="38.7380%" y="581" width="1.8371%" height="15" fill="rgb(206,58,22)" fg:x="485" fg:w="23"/><text x="38.9880%" y="591.50">k..</text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (23 samples, 1.84%)</title><rect x="38.7380%" y="565" width="1.8371%" height="15" fill="rgb(250,9,45)" fg:x="485" fg:w="23"/><text x="38.9880%" y="575.50">k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (14 samples, 1.12%)</title><rect x="39.4569%" y="549" width="1.1182%" height="15" fill="rgb(225,148,14)" fg:x="494" fg:w="14"/><text x="39.7069%" y="559.50"></text></g><g><title>kernel::model::props::load_props (13 samples, 1.04%)</title><rect x="39.5367%" y="533" width="1.0383%" height="15" fill="rgb(205,178,40)" fg:x="495" fg:w="13"/><text x="39.7867%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.04%)</title><rect x="39.5367%" y="517" width="1.0383%" height="15" fill="rgb(215,201,4)" fg:x="495" fg:w="13"/><text x="39.7867%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.3355%" y="501" width="0.2396%" height="15" fill="rgb(219,223,24)" fg:x="505" fg:w="3"/><text x="40.5855%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.3355%" y="485" width="0.2396%" height="15" fill="rgb(217,19,31)" fg:x="505" fg:w="3"/><text x="40.5855%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.3355%" y="469" width="0.2396%" height="15" fill="rgb(235,33,3)" fg:x="505" fg:w="3"/><text x="40.5855%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.3355%" y="453" width="0.2396%" height="15" fill="rgb(221,39,18)" fg:x="505" fg:w="3"/><text x="40.5855%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.3355%" y="437" width="0.2396%" height="15" fill="rgb(242,162,33)" fg:x="505" fg:w="3"/><text x="40.5855%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.3355%" y="421" width="0.2396%" height="15" fill="rgb(233,215,28)" fg:x="505" fg:w="3"/><text x="40.5855%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.3355%" y="405" width="0.2396%" height="15" fill="rgb(212,117,9)" fg:x="505" fg:w="3"/><text x="40.5855%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.3355%" y="389" width="0.2396%" height="15" fill="rgb(237,70,47)" fg:x="505" fg:w="3"/><text x="40.5855%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.4153%" y="373" width="0.1597%" height="15" fill="rgb(206,177,13)" fg:x="506" fg:w="2"/><text x="40.6653%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.4153%" y="357" width="0.1597%" height="15" fill="rgb(209,174,33)" fg:x="506" fg:w="2"/><text x="40.6653%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="40.4153%" y="341" width="0.1597%" height="15" fill="rgb(226,6,11)" fg:x="506" fg:w="2"/><text x="40.6653%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="40.4952%" y="325" width="0.0799%" height="15" fill="rgb(240,214,6)" fg:x="507" fg:w="1"/><text x="40.7452%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (25 samples, 2.00%)</title><rect x="38.7380%" y="597" width="1.9968%" height="15" fill="rgb(254,214,40)" fg:x="485" fg:w="25"/><text x="38.9880%" y="607.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="40.5751%" y="581" width="0.1597%" height="15" fill="rgb(230,187,15)" fg:x="508" fg:w="2"/><text x="40.8251%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.5751%" y="565" width="0.1597%" height="15" fill="rgb(250,11,27)" fg:x="508" fg:w="2"/><text x="40.8251%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="40.6550%" y="549" width="0.0799%" height="15" fill="rgb(243,107,19)" fg:x="509" fg:w="1"/><text x="40.9050%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="40.6550%" y="533" width="0.0799%" height="15" fill="rgb(253,66,26)" fg:x="509" fg:w="1"/><text x="40.9050%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="40.6550%" y="517" width="0.0799%" height="15" fill="rgb(228,43,8)" fg:x="509" fg:w="1"/><text x="40.9050%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="40.6550%" y="501" width="0.0799%" height="15" fill="rgb(232,197,36)" fg:x="509" fg:w="1"/><text x="40.9050%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="40.6550%" y="485" width="0.0799%" height="15" fill="rgb(221,182,31)" fg:x="509" fg:w="1"/><text x="40.9050%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.6550%" y="469" width="0.0799%" height="15" fill="rgb(244,25,36)" fg:x="509" fg:w="1"/><text x="40.9050%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.6550%" y="453" width="0.0799%" height="15" fill="rgb(247,101,19)" fg:x="509" fg:w="1"/><text x="40.9050%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="40.6550%" y="437" width="0.0799%" height="15" fill="rgb(223,117,19)" fg:x="509" fg:w="1"/><text x="40.9050%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="40.6550%" y="421" width="0.0799%" height="15" fill="rgb(249,63,38)" fg:x="509" fg:w="1"/><text x="40.9050%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="40.6550%" y="405" width="0.0799%" height="15" fill="rgb(220,143,23)" fg:x="509" fg:w="1"/><text x="40.9050%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="40.6550%" y="389" width="0.0799%" height="15" fill="rgb(252,183,22)" fg:x="509" fg:w="1"/><text x="40.9050%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.6550%" y="373" width="0.0799%" height="15" fill="rgb(243,176,15)" fg:x="509" fg:w="1"/><text x="40.9050%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.6550%" y="357" width="0.0799%" height="15" fill="rgb(244,204,46)" fg:x="509" fg:w="1"/><text x="40.9050%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="40.6550%" y="341" width="0.0799%" height="15" fill="rgb(227,28,54)" fg:x="509" fg:w="1"/><text x="40.9050%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.08%)</title><rect x="40.6550%" y="325" width="0.0799%" height="15" fill="rgb(231,10,15)" fg:x="509" fg:w="1"/><text x="40.9050%" y="335.50"></text></g><g><title>plugins_core::build::Build::holding (65 samples, 5.19%)</title><rect x="35.6230%" y="629" width="5.1917%" height="15" fill="rgb(210,200,17)" fg:x="446" fg:w="65"/><text x="35.8730%" y="639.50">plugin..</text></g><g><title>plugins_core::tools::set_container (42 samples, 3.35%)</title><rect x="37.4601%" y="613" width="3.3546%" height="15" fill="rgb(251,106,46)" fg:x="469" fg:w="42"/><text x="37.7101%" y="623.50">plu..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="40.7348%" y="597" width="0.0799%" height="15" fill="rgb(218,211,15)" fg:x="510" fg:w="1"/><text x="40.9848%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="40.7348%" y="581" width="0.0799%" height="15" fill="rgb(239,62,10)" fg:x="510" fg:w="1"/><text x="40.9848%" y="591.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="40.7348%" y="565" width="0.0799%" height="15" fill="rgb(225,53,53)" fg:x="510" fg:w="1"/><text x="40.9848%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.7348%" y="549" width="0.0799%" height="15" fill="rgb(207,16,24)" fg:x="510" fg:w="1"/><text x="40.9848%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="40.7348%" y="533" width="0.0799%" height="15" fill="rgb(217,52,28)" fg:x="510" fg:w="1"/><text x="40.9848%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.7348%" y="517" width="0.0799%" height="15" fill="rgb(246,1,5)" fg:x="510" fg:w="1"/><text x="40.9848%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.7348%" y="501" width="0.0799%" height="15" fill="rgb(221,29,26)" fg:x="510" fg:w="1"/><text x="40.9848%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="40.8147%" y="597" width="0.0799%" height="15" fill="rgb(250,133,32)" fg:x="511" fg:w="1"/><text x="41.0647%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="40.8147%" y="581" width="0.0799%" height="15" fill="rgb(236,63,16)" fg:x="511" fg:w="1"/><text x="41.0647%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="40.8147%" y="565" width="0.0799%" height="15" fill="rgb(231,159,14)" fg:x="511" fg:w="1"/><text x="41.0647%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8946%" y="501" width="0.0799%" height="15" fill="rgb(207,102,36)" fg:x="512" fg:w="1"/><text x="41.1446%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.8946%" y="485" width="0.0799%" height="15" fill="rgb(230,224,31)" fg:x="512" fg:w="1"/><text x="41.1446%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8946%" y="469" width="0.0799%" height="15" fill="rgb(215,182,16)" fg:x="512" fg:w="1"/><text x="41.1446%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8946%" y="453" width="0.0799%" height="15" fill="rgb(226,113,2)" fg:x="512" fg:w="1"/><text x="41.1446%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.8946%" y="437" width="0.0799%" height="15" fill="rgb(241,18,35)" fg:x="512" fg:w="1"/><text x="41.1446%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.8946%" y="421" width="0.0799%" height="15" fill="rgb(240,165,44)" fg:x="512" fg:w="1"/><text x="41.1446%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.8946%" y="405" width="0.0799%" height="15" fill="rgb(229,130,47)" fg:x="512" fg:w="1"/><text x="41.1446%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.8946%" y="389" width="0.0799%" height="15" fill="rgb(223,93,7)" fg:x="512" fg:w="1"/><text x="41.1446%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.8946%" y="373" width="0.0799%" height="15" fill="rgb(205,180,36)" fg:x="512" fg:w="1"/><text x="41.1446%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.8946%" y="533" width="0.1597%" height="15" fill="rgb(221,103,28)" fg:x="512" fg:w="2"/><text x="41.1446%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.8946%" y="517" width="0.1597%" height="15" fill="rgb(212,4,3)" fg:x="512" fg:w="2"/><text x="41.1446%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9744%" y="501" width="0.0799%" height="15" fill="rgb(209,221,53)" fg:x="513" fg:w="1"/><text x="41.2244%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.9744%" y="485" width="0.0799%" height="15" fill="rgb(233,229,52)" fg:x="513" fg:w="1"/><text x="41.2244%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.9744%" y="469" width="0.0799%" height="15" fill="rgb(254,127,37)" fg:x="513" fg:w="1"/><text x="41.2244%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.9744%" y="453" width="0.0799%" height="15" fill="rgb(207,161,26)" fg:x="513" fg:w="1"/><text x="41.2244%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.9744%" y="437" width="0.0799%" height="15" fill="rgb(223,75,5)" fg:x="513" fg:w="1"/><text x="41.2244%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9744%" y="421" width="0.0799%" height="15" fill="rgb(235,115,52)" fg:x="513" fg:w="1"/><text x="41.2244%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9744%" y="405" width="0.0799%" height="15" fill="rgb(240,91,46)" fg:x="513" fg:w="1"/><text x="41.2244%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.9744%" y="389" width="0.0799%" height="15" fill="rgb(251,144,21)" fg:x="513" fg:w="1"/><text x="41.2244%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.9744%" y="373" width="0.0799%" height="15" fill="rgb(247,220,47)" fg:x="513" fg:w="1"/><text x="41.2244%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.9744%" y="357" width="0.0799%" height="15" fill="rgb(253,122,1)" fg:x="513" fg:w="1"/><text x="41.2244%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.9744%" y="341" width="0.0799%" height="15" fill="rgb(221,0,24)" fg:x="513" fg:w="1"/><text x="41.2244%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9744%" y="325" width="0.0799%" height="15" fill="rgb(220,204,54)" fg:x="513" fg:w="1"/><text x="41.2244%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.8946%" y="549" width="0.2396%" height="15" fill="rgb(205,96,25)" fg:x="512" fg:w="3"/><text x="41.1446%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0543%" y="533" width="0.0799%" height="15" fill="rgb(247,77,20)" fg:x="514" fg:w="1"/><text x="41.3043%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0543%" y="517" width="0.0799%" height="15" fill="rgb(245,151,8)" fg:x="514" fg:w="1"/><text x="41.3043%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.0543%" y="501" width="0.0799%" height="15" fill="rgb(242,158,39)" fg:x="514" fg:w="1"/><text x="41.3043%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.0543%" y="485" width="0.0799%" height="15" fill="rgb(222,214,50)" fg:x="514" fg:w="1"/><text x="41.3043%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.0543%" y="469" width="0.0799%" height="15" fill="rgb(229,60,39)" fg:x="514" fg:w="1"/><text x="41.3043%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0543%" y="453" width="0.0799%" height="15" fill="rgb(240,148,18)" fg:x="514" fg:w="1"/><text x="41.3043%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0543%" y="437" width="0.0799%" height="15" fill="rgb(215,96,11)" fg:x="514" fg:w="1"/><text x="41.3043%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.0543%" y="421" width="0.0799%" height="15" fill="rgb(238,162,53)" fg:x="514" fg:w="1"/><text x="41.3043%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.0543%" y="405" width="0.0799%" height="15" fill="rgb(214,83,18)" fg:x="514" fg:w="1"/><text x="41.3043%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.0543%" y="389" width="0.0799%" height="15" fill="rgb(248,117,24)" fg:x="514" fg:w="1"/><text x="41.3043%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.0543%" y="373" width="0.0799%" height="15" fill="rgb(238,190,6)" fg:x="514" fg:w="1"/><text x="41.3043%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0543%" y="357" width="0.0799%" height="15" fill="rgb(213,51,6)" fg:x="514" fg:w="1"/><text x="41.3043%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="40.8946%" y="597" width="0.3195%" height="15" fill="rgb(212,136,1)" fg:x="512" fg:w="4"/><text x="41.1446%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="40.8946%" y="581" width="0.3195%" height="15" fill="rgb(221,192,14)" fg:x="512" fg:w="4"/><text x="41.1446%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="40.8946%" y="565" width="0.3195%" height="15" fill="rgb(244,38,54)" fg:x="512" fg:w="4"/><text x="41.1446%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.1342%" y="549" width="0.0799%" height="15" fill="rgb(240,45,28)" fg:x="515" fg:w="1"/><text x="41.3842%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.1342%" y="533" width="0.0799%" height="15" fill="rgb(240,123,12)" fg:x="515" fg:w="1"/><text x="41.3842%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.1342%" y="517" width="0.0799%" height="15" fill="rgb(216,14,30)" fg:x="515" fg:w="1"/><text x="41.3842%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.1342%" y="501" width="0.0799%" height="15" fill="rgb(212,50,24)" fg:x="515" fg:w="1"/><text x="41.3842%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.1342%" y="485" width="0.0799%" height="15" fill="rgb(253,229,47)" fg:x="515" fg:w="1"/><text x="41.3842%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.1342%" y="469" width="0.0799%" height="15" fill="rgb(214,26,17)" fg:x="515" fg:w="1"/><text x="41.3842%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="40.8147%" y="629" width="0.4792%" height="15" fill="rgb(252,60,11)" fg:x="511" fg:w="6"/><text x="41.0647%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="40.8147%" y="613" width="0.4792%" height="15" fill="rgb(209,59,37)" fg:x="511" fg:w="6"/><text x="41.0647%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2141%" y="597" width="0.0799%" height="15" fill="rgb(228,126,53)" fg:x="516" fg:w="1"/><text x="41.4641%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="41.2939%" y="629" width="0.1597%" height="15" fill="rgb(233,99,2)" fg:x="517" fg:w="2"/><text x="41.5439%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="41.2939%" y="613" width="0.1597%" height="15" fill="rgb(217,106,34)" fg:x="517" fg:w="2"/><text x="41.5439%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="41.2939%" y="597" width="0.1597%" height="15" fill="rgb(222,46,19)" fg:x="517" fg:w="2"/><text x="41.5439%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="41.2939%" y="581" width="0.1597%" height="15" fill="rgb(251,87,31)" fg:x="517" fg:w="2"/><text x="41.5439%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="41.3738%" y="565" width="0.0799%" height="15" fill="rgb(213,70,51)" fg:x="518" fg:w="1"/><text x="41.6238%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.3738%" y="549" width="0.0799%" height="15" fill="rgb(229,144,18)" fg:x="518" fg:w="1"/><text x="41.6238%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="41.3738%" y="533" width="0.0799%" height="15" fill="rgb(254,60,26)" fg:x="518" fg:w="1"/><text x="41.6238%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.3738%" y="517" width="0.0799%" height="15" fill="rgb(243,127,51)" fg:x="518" fg:w="1"/><text x="41.6238%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="41.3738%" y="501" width="0.0799%" height="15" fill="rgb(221,51,25)" fg:x="518" fg:w="1"/><text x="41.6238%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="41.3738%" y="485" width="0.0799%" height="15" fill="rgb(205,42,7)" fg:x="518" fg:w="1"/><text x="41.6238%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.3738%" y="469" width="0.0799%" height="15" fill="rgb(236,177,48)" fg:x="518" fg:w="1"/><text x="41.6238%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="41.4537%" y="597" width="0.0799%" height="15" fill="rgb(226,79,31)" fg:x="519" fg:w="1"/><text x="41.7037%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="41.4537%" y="581" width="0.0799%" height="15" fill="rgb(216,170,12)" fg:x="519" fg:w="1"/><text x="41.7037%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.4537%" y="565" width="0.0799%" height="15" fill="rgb(208,62,51)" fg:x="519" fg:w="1"/><text x="41.7037%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.4537%" y="549" width="0.0799%" height="15" fill="rgb(254,129,9)" fg:x="519" fg:w="1"/><text x="41.7037%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4537%" y="533" width="0.0799%" height="15" fill="rgb(243,209,31)" fg:x="519" fg:w="1"/><text x="41.7037%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.4537%" y="517" width="0.0799%" height="15" fill="rgb(213,159,23)" fg:x="519" fg:w="1"/><text x="41.7037%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4537%" y="501" width="0.0799%" height="15" fill="rgb(249,77,39)" fg:x="519" fg:w="1"/><text x="41.7037%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.4537%" y="485" width="0.0799%" height="15" fill="rgb(230,13,33)" fg:x="519" fg:w="1"/><text x="41.7037%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4537%" y="469" width="0.0799%" height="15" fill="rgb(215,215,7)" fg:x="519" fg:w="1"/><text x="41.7037%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.4537%" y="453" width="0.0799%" height="15" fill="rgb(222,92,25)" fg:x="519" fg:w="1"/><text x="41.7037%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.4537%" y="437" width="0.0799%" height="15" fill="rgb(215,173,22)" fg:x="519" fg:w="1"/><text x="41.7037%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.5335%" y="517" width="0.0799%" height="15" fill="rgb(247,205,52)" fg:x="520" fg:w="1"/><text x="41.7835%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="41.5335%" y="581" width="0.1597%" height="15" fill="rgb(240,210,37)" fg:x="520" fg:w="2"/><text x="41.7835%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.5335%" y="565" width="0.1597%" height="15" fill="rgb(224,13,10)" fg:x="520" fg:w="2"/><text x="41.7835%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.5335%" y="549" width="0.1597%" height="15" fill="rgb(209,48,33)" fg:x="520" fg:w="2"/><text x="41.7835%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.5335%" y="533" width="0.1597%" height="15" fill="rgb(228,219,23)" fg:x="520" fg:w="2"/><text x="41.7835%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.6134%" y="517" width="0.0799%" height="15" fill="rgb(239,46,49)" fg:x="521" fg:w="1"/><text x="41.8634%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="41.5335%" y="597" width="0.2396%" height="15" fill="rgb(206,172,51)" fg:x="520" fg:w="3"/><text x="41.7835%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="41.6933%" y="581" width="0.0799%" height="15" fill="rgb(213,212,35)" fg:x="522" fg:w="1"/><text x="41.9433%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="41.6933%" y="565" width="0.0799%" height="15" fill="rgb(252,40,27)" fg:x="522" fg:w="1"/><text x="41.9433%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7732%" y="501" width="0.0799%" height="15" fill="rgb(212,33,41)" fg:x="523" fg:w="1"/><text x="42.0232%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7732%" y="485" width="0.0799%" height="15" fill="rgb(232,160,27)" fg:x="523" fg:w="1"/><text x="42.0232%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7732%" y="469" width="0.0799%" height="15" fill="rgb(244,160,20)" fg:x="523" fg:w="1"/><text x="42.0232%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7732%" y="453" width="0.0799%" height="15" fill="rgb(205,66,20)" fg:x="523" fg:w="1"/><text x="42.0232%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7732%" y="437" width="0.0799%" height="15" fill="rgb(236,158,6)" fg:x="523" fg:w="1"/><text x="42.0232%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7732%" y="421" width="0.0799%" height="15" fill="rgb(232,25,36)" fg:x="523" fg:w="1"/><text x="42.0232%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.7732%" y="405" width="0.0799%" height="15" fill="rgb(220,153,35)" fg:x="523" fg:w="1"/><text x="42.0232%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.7732%" y="389" width="0.0799%" height="15" fill="rgb(216,5,8)" fg:x="523" fg:w="1"/><text x="42.0232%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.7732%" y="373" width="0.0799%" height="15" fill="rgb(240,97,3)" fg:x="523" fg:w="1"/><text x="42.0232%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.7732%" y="357" width="0.0799%" height="15" fill="rgb(220,99,26)" fg:x="523" fg:w="1"/><text x="42.0232%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.7732%" y="341" width="0.0799%" height="15" fill="rgb(237,96,2)" fg:x="523" fg:w="1"/><text x="42.0232%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.7732%" y="325" width="0.0799%" height="15" fill="rgb(217,197,47)" fg:x="523" fg:w="1"/><text x="42.0232%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.7732%" y="309" width="0.0799%" height="15" fill="rgb(252,133,54)" fg:x="523" fg:w="1"/><text x="42.0232%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.7732%" y="293" width="0.0799%" height="15" fill="rgb(233,37,30)" fg:x="523" fg:w="1"/><text x="42.0232%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.7732%" y="277" width="0.0799%" height="15" fill="rgb(239,182,12)" fg:x="523" fg:w="1"/><text x="42.0232%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.7732%" y="261" width="0.0799%" height="15" fill="rgb(245,83,39)" fg:x="523" fg:w="1"/><text x="42.0232%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.7732%" y="517" width="0.1597%" height="15" fill="rgb(222,109,36)" fg:x="523" fg:w="2"/><text x="42.0232%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8530%" y="501" width="0.0799%" height="15" fill="rgb(237,95,44)" fg:x="524" fg:w="1"/><text x="42.1030%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.9329%" y="517" width="0.1597%" height="15" fill="rgb(216,36,54)" fg:x="525" fg:w="2"/><text x="42.1829%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.0128%" y="501" width="0.0799%" height="15" fill="rgb(236,164,3)" fg:x="526" fg:w="1"/><text x="42.2628%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0128%" y="485" width="0.0799%" height="15" fill="rgb(223,15,21)" fg:x="526" fg:w="1"/><text x="42.2628%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="41.7732%" y="581" width="0.3994%" height="15" fill="rgb(239,191,12)" fg:x="523" fg:w="5"/><text x="42.0232%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="41.7732%" y="565" width="0.3994%" height="15" fill="rgb(231,191,37)" fg:x="523" fg:w="5"/><text x="42.0232%" y="575.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="41.7732%" y="549" width="0.3994%" height="15" fill="rgb(209,155,36)" fg:x="523" fg:w="5"/><text x="42.0232%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="41.7732%" y="533" width="0.3994%" height="15" fill="rgb(216,222,49)" fg:x="523" fg:w="5"/><text x="42.0232%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="42.0927%" y="517" width="0.0799%" height="15" fill="rgb(218,181,2)" fg:x="527" fg:w="1"/><text x="42.3427%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.0927%" y="501" width="0.0799%" height="15" fill="rgb(239,125,9)" fg:x="527" fg:w="1"/><text x="42.3427%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="42.0927%" y="485" width="0.0799%" height="15" fill="rgb(233,103,7)" fg:x="527" fg:w="1"/><text x="42.3427%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.0927%" y="469" width="0.0799%" height="15" fill="rgb(209,223,5)" fg:x="527" fg:w="1"/><text x="42.3427%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="42.0927%" y="453" width="0.0799%" height="15" fill="rgb(234,71,27)" fg:x="527" fg:w="1"/><text x="42.3427%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="42.0927%" y="437" width="0.0799%" height="15" fill="rgb(251,202,16)" fg:x="527" fg:w="1"/><text x="42.3427%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.0927%" y="421" width="0.0799%" height="15" fill="rgb(231,180,0)" fg:x="527" fg:w="1"/><text x="42.3427%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="42.0927%" y="405" width="0.0799%" height="15" fill="rgb(223,58,28)" fg:x="527" fg:w="1"/><text x="42.3427%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="41.4537%" y="613" width="0.7987%" height="15" fill="rgb(250,34,24)" fg:x="519" fg:w="10"/><text x="41.7037%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="41.7732%" y="597" width="0.4792%" height="15" fill="rgb(235,24,16)" fg:x="523" fg:w="6"/><text x="42.0232%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="42.1725%" y="581" width="0.0799%" height="15" fill="rgb(219,28,33)" fg:x="528" fg:w="1"/><text x="42.4225%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1725%" y="565" width="0.0799%" height="15" fill="rgb(228,150,43)" fg:x="528" fg:w="1"/><text x="42.4225%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1725%" y="549" width="0.0799%" height="15" fill="rgb(221,228,36)" fg:x="528" fg:w="1"/><text x="42.4225%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="42.3323%" y="597" width="0.0799%" height="15" fill="rgb(232,116,17)" fg:x="530" fg:w="1"/><text x="42.5823%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="42.3323%" y="581" width="0.0799%" height="15" fill="rgb(220,110,51)" fg:x="530" fg:w="1"/><text x="42.5823%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3323%" y="565" width="0.0799%" height="15" fill="rgb(207,26,25)" fg:x="530" fg:w="1"/><text x="42.5823%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.4920%" y="517" width="0.0799%" height="15" fill="rgb(223,58,19)" fg:x="532" fg:w="1"/><text x="42.7420%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.4920%" y="501" width="0.0799%" height="15" fill="rgb(234,125,39)" fg:x="532" fg:w="1"/><text x="42.7420%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.4920%" y="485" width="0.0799%" height="15" fill="rgb(241,48,36)" fg:x="532" fg:w="1"/><text x="42.7420%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.4920%" y="469" width="0.0799%" height="15" fill="rgb(217,148,51)" fg:x="532" fg:w="1"/><text x="42.7420%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4920%" y="453" width="0.0799%" height="15" fill="rgb(247,17,25)" fg:x="532" fg:w="1"/><text x="42.7420%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4920%" y="437" width="0.0799%" height="15" fill="rgb(219,89,38)" fg:x="532" fg:w="1"/><text x="42.7420%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.4920%" y="421" width="0.0799%" height="15" fill="rgb(220,145,2)" fg:x="532" fg:w="1"/><text x="42.7420%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.4920%" y="405" width="0.0799%" height="15" fill="rgb(244,66,47)" fg:x="532" fg:w="1"/><text x="42.7420%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.4920%" y="389" width="0.0799%" height="15" fill="rgb(226,182,5)" fg:x="532" fg:w="1"/><text x="42.7420%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.4920%" y="373" width="0.0799%" height="15" fill="rgb(211,98,20)" fg:x="532" fg:w="1"/><text x="42.7420%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.4920%" y="357" width="0.0799%" height="15" fill="rgb(217,103,52)" fg:x="532" fg:w="1"/><text x="42.7420%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.4920%" y="341" width="0.0799%" height="15" fill="rgb(208,125,52)" fg:x="532" fg:w="1"/><text x="42.7420%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.4920%" y="325" width="0.0799%" height="15" fill="rgb(244,70,13)" fg:x="532" fg:w="1"/><text x="42.7420%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.4920%" y="309" width="0.0799%" height="15" fill="rgb(253,124,3)" fg:x="532" fg:w="1"/><text x="42.7420%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.4920%" y="293" width="0.0799%" height="15" fill="rgb(222,145,32)" fg:x="532" fg:w="1"/><text x="42.7420%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4920%" y="277" width="0.0799%" height="15" fill="rgb(232,183,47)" fg:x="532" fg:w="1"/><text x="42.7420%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="42.4121%" y="565" width="0.2396%" height="15" fill="rgb(246,226,4)" fg:x="531" fg:w="3"/><text x="42.6621%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="42.4920%" y="549" width="0.1597%" height="15" fill="rgb(228,185,46)" fg:x="532" fg:w="2"/><text x="42.7420%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="42.4920%" y="533" width="0.1597%" height="15" fill="rgb(213,196,4)" fg:x="532" fg:w="2"/><text x="42.7420%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.5719%" y="517" width="0.0799%" height="15" fill="rgb(212,2,45)" fg:x="533" fg:w="1"/><text x="42.8219%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.5719%" y="501" width="0.0799%" height="15" fill="rgb(217,145,50)" fg:x="533" fg:w="1"/><text x="42.8219%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.5719%" y="485" width="0.0799%" height="15" fill="rgb(242,10,46)" fg:x="533" fg:w="1"/><text x="42.8219%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.5719%" y="469" width="0.0799%" height="15" fill="rgb(252,91,48)" fg:x="533" fg:w="1"/><text x="42.8219%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.5719%" y="453" width="0.0799%" height="15" fill="rgb(216,72,13)" fg:x="533" fg:w="1"/><text x="42.8219%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.5719%" y="437" width="0.0799%" height="15" fill="rgb(219,6,37)" fg:x="533" fg:w="1"/><text x="42.8219%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.5719%" y="421" width="0.0799%" height="15" fill="rgb(236,185,40)" fg:x="533" fg:w="1"/><text x="42.8219%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.5719%" y="405" width="0.0799%" height="15" fill="rgb(208,81,48)" fg:x="533" fg:w="1"/><text x="42.8219%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5719%" y="389" width="0.0799%" height="15" fill="rgb(211,42,33)" fg:x="533" fg:w="1"/><text x="42.8219%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6518%" y="549" width="0.0799%" height="15" fill="rgb(211,90,39)" fg:x="534" fg:w="1"/><text x="42.9018%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.6518%" y="533" width="0.0799%" height="15" fill="rgb(218,136,12)" fg:x="534" fg:w="1"/><text x="42.9018%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.6518%" y="517" width="0.0799%" height="15" fill="rgb(234,12,32)" fg:x="534" fg:w="1"/><text x="42.9018%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.6518%" y="501" width="0.0799%" height="15" fill="rgb(221,164,18)" fg:x="534" fg:w="1"/><text x="42.9018%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.6518%" y="485" width="0.0799%" height="15" fill="rgb(239,135,14)" fg:x="534" fg:w="1"/><text x="42.9018%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.6518%" y="469" width="0.0799%" height="15" fill="rgb(226,198,47)" fg:x="534" fg:w="1"/><text x="42.9018%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.6518%" y="453" width="0.0799%" height="15" fill="rgb(244,121,47)" fg:x="534" fg:w="1"/><text x="42.9018%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.6518%" y="437" width="0.0799%" height="15" fill="rgb(226,21,48)" fg:x="534" fg:w="1"/><text x="42.9018%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.6518%" y="421" width="0.0799%" height="15" fill="rgb(215,178,47)" fg:x="534" fg:w="1"/><text x="42.9018%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.6518%" y="405" width="0.0799%" height="15" fill="rgb(206,212,19)" fg:x="534" fg:w="1"/><text x="42.9018%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.6518%" y="389" width="0.0799%" height="15" fill="rgb(230,104,34)" fg:x="534" fg:w="1"/><text x="42.9018%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.6518%" y="373" width="0.0799%" height="15" fill="rgb(210,96,51)" fg:x="534" fg:w="1"/><text x="42.9018%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="42.4121%" y="597" width="0.3994%" height="15" fill="rgb(229,111,47)" fg:x="531" fg:w="5"/><text x="42.6621%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="42.4121%" y="581" width="0.3994%" height="15" fill="rgb(218,174,45)" fg:x="531" fg:w="5"/><text x="42.6621%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="42.6518%" y="565" width="0.1597%" height="15" fill="rgb(215,21,32)" fg:x="534" fg:w="2"/><text x="42.9018%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="42.7316%" y="549" width="0.0799%" height="15" fill="rgb(235,72,21)" fg:x="535" fg:w="1"/><text x="42.9816%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="42.7316%" y="533" width="0.0799%" height="15" fill="rgb(250,113,30)" fg:x="535" fg:w="1"/><text x="42.9816%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7316%" y="517" width="0.0799%" height="15" fill="rgb(244,136,34)" fg:x="535" fg:w="1"/><text x="42.9816%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7316%" y="501" width="0.0799%" height="15" fill="rgb(213,226,47)" fg:x="535" fg:w="1"/><text x="42.9816%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7316%" y="485" width="0.0799%" height="15" fill="rgb(224,136,40)" fg:x="535" fg:w="1"/><text x="42.9816%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.7316%" y="469" width="0.0799%" height="15" fill="rgb(253,124,12)" fg:x="535" fg:w="1"/><text x="42.9816%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7316%" y="453" width="0.0799%" height="15" fill="rgb(210,67,8)" fg:x="535" fg:w="1"/><text x="42.9816%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7316%" y="437" width="0.0799%" height="15" fill="rgb(210,204,0)" fg:x="535" fg:w="1"/><text x="42.9816%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.7316%" y="421" width="0.0799%" height="15" fill="rgb(217,179,22)" fg:x="535" fg:w="1"/><text x="42.9816%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.7316%" y="405" width="0.0799%" height="15" fill="rgb(237,192,33)" fg:x="535" fg:w="1"/><text x="42.9816%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.7316%" y="389" width="0.0799%" height="15" fill="rgb(211,104,28)" fg:x="535" fg:w="1"/><text x="42.9816%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.7316%" y="373" width="0.0799%" height="15" fill="rgb(214,75,30)" fg:x="535" fg:w="1"/><text x="42.9816%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.7316%" y="357" width="0.0799%" height="15" fill="rgb(220,227,12)" fg:x="535" fg:w="1"/><text x="42.9816%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="42.8115%" y="597" width="0.0799%" height="15" fill="rgb(233,134,28)" fg:x="536" fg:w="1"/><text x="43.0615%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.8914%" y="581" width="0.0799%" height="15" fill="rgb(215,146,24)" fg:x="537" fg:w="1"/><text x="43.1414%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="42.8914%" y="565" width="0.0799%" height="15" fill="rgb(248,227,20)" fg:x="537" fg:w="1"/><text x="43.1414%" y="575.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="42.9712%" y="581" width="0.0799%" height="15" fill="rgb(250,44,42)" fg:x="538" fg:w="1"/><text x="43.2212%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.9712%" y="565" width="0.0799%" height="15" fill="rgb(219,5,35)" fg:x="538" fg:w="1"/><text x="43.2212%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.9712%" y="549" width="0.0799%" height="15" fill="rgb(241,132,32)" fg:x="538" fg:w="1"/><text x="43.2212%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="42.9712%" y="533" width="0.0799%" height="15" fill="rgb(234,212,51)" fg:x="538" fg:w="1"/><text x="43.2212%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.9712%" y="517" width="0.0799%" height="15" fill="rgb(242,173,29)" fg:x="538" fg:w="1"/><text x="43.2212%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9712%" y="501" width="0.0799%" height="15" fill="rgb(212,159,2)" fg:x="538" fg:w="1"/><text x="43.2212%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="42.8914%" y="597" width="0.3195%" height="15" fill="rgb(238,165,31)" fg:x="537" fg:w="4"/><text x="43.1414%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="43.0511%" y="581" width="0.1597%" height="15" fill="rgb(241,57,36)" fg:x="539" fg:w="2"/><text x="43.3011%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.0511%" y="565" width="0.1597%" height="15" fill="rgb(249,7,4)" fg:x="539" fg:w="2"/><text x="43.3011%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="43.1310%" y="549" width="0.0799%" height="15" fill="rgb(250,137,44)" fg:x="540" fg:w="1"/><text x="43.3810%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.1310%" y="533" width="0.0799%" height="15" fill="rgb(244,185,1)" fg:x="540" fg:w="1"/><text x="43.3810%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.2109%" y="501" width="0.0799%" height="15" fill="rgb(216,5,53)" fg:x="541" fg:w="1"/><text x="43.4609%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.2109%" y="485" width="0.0799%" height="15" fill="rgb(234,89,21)" fg:x="541" fg:w="1"/><text x="43.4609%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="43.2109%" y="549" width="0.1597%" height="15" fill="rgb(250,81,43)" fg:x="541" fg:w="2"/><text x="43.4609%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="43.2109%" y="533" width="0.1597%" height="15" fill="rgb(243,132,11)" fg:x="541" fg:w="2"/><text x="43.4609%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.2109%" y="517" width="0.1597%" height="15" fill="rgb(253,159,28)" fg:x="541" fg:w="2"/><text x="43.4609%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2907%" y="501" width="0.0799%" height="15" fill="rgb(237,167,34)" fg:x="542" fg:w="1"/><text x="43.5407%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2907%" y="485" width="0.0799%" height="15" fill="rgb(237,16,50)" fg:x="542" fg:w="1"/><text x="43.5407%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.3706%" y="437" width="0.0799%" height="15" fill="rgb(247,125,2)" fg:x="543" fg:w="1"/><text x="43.6206%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3706%" y="421" width="0.0799%" height="15" fill="rgb(254,35,3)" fg:x="543" fg:w="1"/><text x="43.6206%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3706%" y="405" width="0.0799%" height="15" fill="rgb(237,209,21)" fg:x="543" fg:w="1"/><text x="43.6206%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.3706%" y="389" width="0.0799%" height="15" fill="rgb(224,122,20)" fg:x="543" fg:w="1"/><text x="43.6206%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.3706%" y="373" width="0.0799%" height="15" fill="rgb(224,11,46)" fg:x="543" fg:w="1"/><text x="43.6206%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.3706%" y="357" width="0.0799%" height="15" fill="rgb(248,21,33)" fg:x="543" fg:w="1"/><text x="43.6206%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.3706%" y="341" width="0.0799%" height="15" fill="rgb(222,144,7)" fg:x="543" fg:w="1"/><text x="43.6206%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.3706%" y="325" width="0.0799%" height="15" fill="rgb(205,141,37)" fg:x="543" fg:w="1"/><text x="43.6206%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.3706%" y="453" width="0.1597%" height="15" fill="rgb(237,130,8)" fg:x="543" fg:w="2"/><text x="43.6206%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4505%" y="437" width="0.0799%" height="15" fill="rgb(209,179,39)" fg:x="544" fg:w="1"/><text x="43.7005%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.4505%" y="421" width="0.0799%" height="15" fill="rgb(207,52,17)" fg:x="544" fg:w="1"/><text x="43.7005%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.4505%" y="405" width="0.0799%" height="15" fill="rgb(253,158,17)" fg:x="544" fg:w="1"/><text x="43.7005%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.4505%" y="389" width="0.0799%" height="15" fill="rgb(208,19,53)" fg:x="544" fg:w="1"/><text x="43.7005%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.4505%" y="373" width="0.0799%" height="15" fill="rgb(233,152,13)" fg:x="544" fg:w="1"/><text x="43.7005%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.4505%" y="357" width="0.0799%" height="15" fill="rgb(231,84,1)" fg:x="544" fg:w="1"/><text x="43.7005%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.4505%" y="341" width="0.0799%" height="15" fill="rgb(229,142,48)" fg:x="544" fg:w="1"/><text x="43.7005%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.4505%" y="325" width="0.0799%" height="15" fill="rgb(248,70,29)" fg:x="544" fg:w="1"/><text x="43.7005%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.4505%" y="309" width="0.0799%" height="15" fill="rgb(250,85,7)" fg:x="544" fg:w="1"/><text x="43.7005%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.4505%" y="293" width="0.0799%" height="15" fill="rgb(235,140,43)" fg:x="544" fg:w="1"/><text x="43.7005%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.4505%" y="277" width="0.0799%" height="15" fill="rgb(216,0,5)" fg:x="544" fg:w="1"/><text x="43.7005%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4505%" y="261" width="0.0799%" height="15" fill="rgb(223,167,29)" fg:x="544" fg:w="1"/><text x="43.7005%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.3706%" y="501" width="0.2396%" height="15" fill="rgb(229,150,33)" fg:x="543" fg:w="3"/><text x="43.6206%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.3706%" y="485" width="0.2396%" height="15" fill="rgb(227,26,52)" fg:x="543" fg:w="3"/><text x="43.6206%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.3706%" y="469" width="0.2396%" height="15" fill="rgb(250,60,52)" fg:x="543" fg:w="3"/><text x="43.6206%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5304%" y="453" width="0.0799%" height="15" fill="rgb(228,81,46)" fg:x="545" fg:w="1"/><text x="43.7804%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5304%" y="437" width="0.0799%" height="15" fill="rgb(225,218,31)" fg:x="545" fg:w="1"/><text x="43.7804%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.5304%" y="421" width="0.0799%" height="15" fill="rgb(230,35,16)" fg:x="545" fg:w="1"/><text x="43.7804%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.5304%" y="405" width="0.0799%" height="15" fill="rgb(247,100,0)" fg:x="545" fg:w="1"/><text x="43.7804%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.5304%" y="389" width="0.0799%" height="15" fill="rgb(223,135,11)" fg:x="545" fg:w="1"/><text x="43.7804%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.5304%" y="373" width="0.0799%" height="15" fill="rgb(207,136,0)" fg:x="545" fg:w="1"/><text x="43.7804%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.5304%" y="357" width="0.0799%" height="15" fill="rgb(246,131,25)" fg:x="545" fg:w="1"/><text x="43.7804%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.5304%" y="341" width="0.0799%" height="15" fill="rgb(209,47,12)" fg:x="545" fg:w="1"/><text x="43.7804%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.5304%" y="325" width="0.0799%" height="15" fill="rgb(221,25,16)" fg:x="545" fg:w="1"/><text x="43.7804%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.5304%" y="309" width="0.0799%" height="15" fill="rgb(223,164,33)" fg:x="545" fg:w="1"/><text x="43.7804%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.5304%" y="293" width="0.0799%" height="15" fill="rgb(220,26,23)" fg:x="545" fg:w="1"/><text x="43.7804%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.5304%" y="277" width="0.0799%" height="15" fill="rgb(231,224,1)" fg:x="545" fg:w="1"/><text x="43.7804%" y="287.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (281 samples, 22.44%)</title><rect x="21.2460%" y="645" width="22.4441%" height="15" fill="rgb(229,221,24)" fg:x="266" fg:w="281"/><text x="21.4960%" y="655.50">plugins_core::build::BuildSurroundin..</text></g><g><title>plugins_core::build::Build::occupying (28 samples, 2.24%)</title><rect x="41.4537%" y="629" width="2.2364%" height="15" fill="rgb(213,34,10)" fg:x="519" fg:w="28"/><text x="41.7037%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_occupying (18 samples, 1.44%)</title><rect x="42.2524%" y="613" width="1.4377%" height="15" fill="rgb(215,33,11)" fg:x="529" fg:w="18"/><text x="42.5024%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (6 samples, 0.48%)</title><rect x="43.2109%" y="597" width="0.4792%" height="15" fill="rgb(216,20,41)" fg:x="541" fg:w="6"/><text x="43.4609%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="43.2109%" y="581" width="0.4792%" height="15" fill="rgb(228,43,31)" fg:x="541" fg:w="6"/><text x="43.4609%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="43.2109%" y="565" width="0.4792%" height="15" fill="rgb(227,83,26)" fg:x="541" fg:w="6"/><text x="43.4609%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="43.3706%" y="549" width="0.3195%" height="15" fill="rgb(217,168,19)" fg:x="543" fg:w="4"/><text x="43.6206%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="43.3706%" y="533" width="0.3195%" height="15" fill="rgb(231,34,33)" fg:x="543" fg:w="4"/><text x="43.6206%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="43.3706%" y="517" width="0.3195%" height="15" fill="rgb(230,120,51)" fg:x="543" fg:w="4"/><text x="43.6206%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.6102%" y="501" width="0.0799%" height="15" fill="rgb(215,138,27)" fg:x="546" fg:w="1"/><text x="43.8602%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.6102%" y="485" width="0.0799%" height="15" fill="rgb(246,80,47)" fg:x="546" fg:w="1"/><text x="43.8602%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.6102%" y="469" width="0.0799%" height="15" fill="rgb(215,57,53)" fg:x="546" fg:w="1"/><text x="43.8602%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="43.6901%" y="645" width="0.1597%" height="15" fill="rgb(229,137,5)" fg:x="547" fg:w="2"/><text x="43.9401%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="43.6901%" y="629" width="0.1597%" height="15" fill="rgb(210,86,2)" fg:x="547" fg:w="2"/><text x="43.9401%" y="639.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="43.7700%" y="613" width="0.0799%" height="15" fill="rgb(231,226,51)" fg:x="548" fg:w="1"/><text x="44.0200%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.7700%" y="597" width="0.0799%" height="15" fill="rgb(216,62,29)" fg:x="548" fg:w="1"/><text x="44.0200%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="43.9297%" y="597" width="0.0799%" height="15" fill="rgb(248,202,3)" fg:x="550" fg:w="1"/><text x="44.1797%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="43.9297%" y="581" width="0.0799%" height="15" fill="rgb(225,181,7)" fg:x="550" fg:w="1"/><text x="44.1797%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="43.9297%" y="565" width="0.0799%" height="15" fill="rgb(247,170,54)" fg:x="550" fg:w="1"/><text x="44.1797%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.9297%" y="549" width="0.0799%" height="15" fill="rgb(236,204,33)" fg:x="550" fg:w="1"/><text x="44.1797%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="43.9297%" y="533" width="0.0799%" height="15" fill="rgb(216,45,30)" fg:x="550" fg:w="1"/><text x="44.1797%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="44.0096%" y="597" width="0.0799%" height="15" fill="rgb(213,203,16)" fg:x="551" fg:w="1"/><text x="44.2596%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="44.0096%" y="581" width="0.0799%" height="15" fill="rgb(215,46,16)" fg:x="551" fg:w="1"/><text x="44.2596%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.0096%" y="565" width="0.0799%" height="15" fill="rgb(217,162,46)" fg:x="551" fg:w="1"/><text x="44.2596%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0096%" y="549" width="0.0799%" height="15" fill="rgb(224,189,20)" fg:x="551" fg:w="1"/><text x="44.2596%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0096%" y="533" width="0.0799%" height="15" fill="rgb(232,35,51)" fg:x="551" fg:w="1"/><text x="44.2596%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0096%" y="517" width="0.0799%" height="15" fill="rgb(243,221,46)" fg:x="551" fg:w="1"/><text x="44.2596%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0096%" y="501" width="0.0799%" height="15" fill="rgb(248,16,16)" fg:x="551" fg:w="1"/><text x="44.2596%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.0096%" y="485" width="0.0799%" height="15" fill="rgb(220,168,13)" fg:x="551" fg:w="1"/><text x="44.2596%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.0096%" y="469" width="0.0799%" height="15" fill="rgb(243,102,39)" fg:x="551" fg:w="1"/><text x="44.2596%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.0096%" y="453" width="0.0799%" height="15" fill="rgb(245,82,32)" fg:x="551" fg:w="1"/><text x="44.2596%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.0096%" y="437" width="0.0799%" height="15" fill="rgb(230,164,19)" fg:x="551" fg:w="1"/><text x="44.2596%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.0096%" y="421" width="0.0799%" height="15" fill="rgb(221,9,41)" fg:x="551" fg:w="1"/><text x="44.2596%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.0096%" y="405" width="0.0799%" height="15" fill="rgb(216,93,0)" fg:x="551" fg:w="1"/><text x="44.2596%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="44.0096%" y="389" width="0.0799%" height="15" fill="rgb(235,113,9)" fg:x="551" fg:w="1"/><text x="44.2596%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="44.0096%" y="373" width="0.0799%" height="15" fill="rgb(209,224,10)" fg:x="551" fg:w="1"/><text x="44.2596%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="44.0895%" y="597" width="0.0799%" height="15" fill="rgb(226,54,34)" fg:x="552" fg:w="1"/><text x="44.3395%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="44.0895%" y="581" width="0.0799%" height="15" fill="rgb(222,60,8)" fg:x="552" fg:w="1"/><text x="44.3395%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.0895%" y="565" width="0.0799%" height="15" fill="rgb(248,228,41)" fg:x="552" fg:w="1"/><text x="44.3395%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.1693%" y="581" width="0.0799%" height="15" fill="rgb(226,31,32)" fg:x="553" fg:w="1"/><text x="44.4193%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2492%" y="517" width="0.0799%" height="15" fill="rgb(242,132,49)" fg:x="554" fg:w="1"/><text x="44.4992%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2492%" y="501" width="0.0799%" height="15" fill="rgb(224,194,19)" fg:x="554" fg:w="1"/><text x="44.4992%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2492%" y="485" width="0.0799%" height="15" fill="rgb(232,200,51)" fg:x="554" fg:w="1"/><text x="44.4992%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.3291%" y="517" width="0.0799%" height="15" fill="rgb(235,60,46)" fg:x="555" fg:w="1"/><text x="44.5791%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.3291%" y="501" width="0.0799%" height="15" fill="rgb(240,109,52)" fg:x="555" fg:w="1"/><text x="44.5791%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.3291%" y="485" width="0.0799%" height="15" fill="rgb(215,78,37)" fg:x="555" fg:w="1"/><text x="44.5791%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.3291%" y="469" width="0.0799%" height="15" fill="rgb(225,141,7)" fg:x="555" fg:w="1"/><text x="44.5791%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.3291%" y="453" width="0.0799%" height="15" fill="rgb(216,102,54)" fg:x="555" fg:w="1"/><text x="44.5791%" y="463.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="44.2492%" y="549" width="0.3195%" height="15" fill="rgb(238,143,13)" fg:x="554" fg:w="4"/><text x="44.4992%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="44.2492%" y="533" width="0.3195%" height="15" fill="rgb(219,45,51)" fg:x="554" fg:w="4"/><text x="44.4992%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.4089%" y="517" width="0.1597%" height="15" fill="rgb(242,105,46)" fg:x="556" fg:w="2"/><text x="44.6589%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.4089%" y="501" width="0.1597%" height="15" fill="rgb(206,154,49)" fg:x="556" fg:w="2"/><text x="44.6589%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.4089%" y="485" width="0.1597%" height="15" fill="rgb(239,215,4)" fg:x="556" fg:w="2"/><text x="44.6589%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.4089%" y="469" width="0.1597%" height="15" fill="rgb(238,82,17)" fg:x="556" fg:w="2"/><text x="44.6589%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.4089%" y="453" width="0.1597%" height="15" fill="rgb(242,49,30)" fg:x="556" fg:w="2"/><text x="44.6589%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.4089%" y="437" width="0.1597%" height="15" fill="rgb(248,5,16)" fg:x="556" fg:w="2"/><text x="44.6589%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.4888%" y="421" width="0.0799%" height="15" fill="rgb(237,138,32)" fg:x="557" fg:w="1"/><text x="44.7388%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.4888%" y="405" width="0.0799%" height="15" fill="rgb(235,79,45)" fg:x="557" fg:w="1"/><text x="44.7388%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.5687%" y="501" width="0.0799%" height="15" fill="rgb(213,105,25)" fg:x="558" fg:w="1"/><text x="44.8187%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.5687%" y="485" width="0.0799%" height="15" fill="rgb(251,131,7)" fg:x="558" fg:w="1"/><text x="44.8187%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.5687%" y="469" width="0.0799%" height="15" fill="rgb(211,155,7)" fg:x="558" fg:w="1"/><text x="44.8187%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5687%" y="453" width="0.0799%" height="15" fill="rgb(243,70,15)" fg:x="558" fg:w="1"/><text x="44.8187%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5687%" y="437" width="0.0799%" height="15" fill="rgb(215,171,2)" fg:x="558" fg:w="1"/><text x="44.8187%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.5687%" y="421" width="0.0799%" height="15" fill="rgb(244,121,35)" fg:x="558" fg:w="1"/><text x="44.8187%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.5687%" y="405" width="0.0799%" height="15" fill="rgb(249,147,17)" fg:x="558" fg:w="1"/><text x="44.8187%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.5687%" y="389" width="0.0799%" height="15" fill="rgb(241,193,52)" fg:x="558" fg:w="1"/><text x="44.8187%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5687%" y="373" width="0.0799%" height="15" fill="rgb(217,159,39)" fg:x="558" fg:w="1"/><text x="44.8187%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5687%" y="357" width="0.0799%" height="15" fill="rgb(248,110,0)" fg:x="558" fg:w="1"/><text x="44.8187%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.5687%" y="341" width="0.0799%" height="15" fill="rgb(233,227,0)" fg:x="558" fg:w="1"/><text x="44.8187%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.5687%" y="325" width="0.0799%" height="15" fill="rgb(252,55,2)" fg:x="558" fg:w="1"/><text x="44.8187%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.5687%" y="309" width="0.0799%" height="15" fill="rgb(224,194,24)" fg:x="558" fg:w="1"/><text x="44.8187%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.5687%" y="293" width="0.0799%" height="15" fill="rgb(247,5,33)" fg:x="558" fg:w="1"/><text x="44.8187%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5687%" y="277" width="0.0799%" height="15" fill="rgb(242,66,47)" fg:x="558" fg:w="1"/><text x="44.8187%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.5687%" y="517" width="0.1597%" height="15" fill="rgb(213,107,12)" fg:x="558" fg:w="2"/><text x="44.8187%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6486%" y="501" width="0.0799%" height="15" fill="rgb(206,131,1)" fg:x="559" fg:w="1"/><text x="44.8986%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.7284%" y="485" width="0.0799%" height="15" fill="rgb(214,9,36)" fg:x="560" fg:w="1"/><text x="44.9784%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="44.7284%" y="517" width="0.1597%" height="15" fill="rgb(251,215,18)" fg:x="560" fg:w="2"/><text x="44.9784%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="44.7284%" y="501" width="0.1597%" height="15" fill="rgb(251,64,9)" fg:x="560" fg:w="2"/><text x="44.9784%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.8083%" y="485" width="0.0799%" height="15" fill="rgb(235,68,21)" fg:x="561" fg:w="1"/><text x="45.0583%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.8083%" y="469" width="0.0799%" height="15" fill="rgb(240,69,38)" fg:x="561" fg:w="1"/><text x="45.0583%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="44.2492%" y="581" width="0.7188%" height="15" fill="rgb(231,18,27)" fg:x="554" fg:w="9"/><text x="44.4992%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.72%)</title><rect x="44.2492%" y="565" width="0.7188%" height="15" fill="rgb(215,154,25)" fg:x="554" fg:w="9"/><text x="44.4992%" y="575.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="44.5687%" y="549" width="0.3994%" height="15" fill="rgb(224,33,46)" fg:x="558" fg:w="5"/><text x="44.8187%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="44.5687%" y="533" width="0.3994%" height="15" fill="rgb(248,191,53)" fg:x="558" fg:w="5"/><text x="44.8187%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="44.8882%" y="517" width="0.0799%" height="15" fill="rgb(231,3,37)" fg:x="562" fg:w="1"/><text x="45.1382%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.8882%" y="501" width="0.0799%" height="15" fill="rgb(209,152,2)" fg:x="562" fg:w="1"/><text x="45.1382%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="44.8882%" y="485" width="0.0799%" height="15" fill="rgb(212,208,43)" fg:x="562" fg:w="1"/><text x="45.1382%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.8882%" y="469" width="0.0799%" height="15" fill="rgb(208,60,49)" fg:x="562" fg:w="1"/><text x="45.1382%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="44.8882%" y="453" width="0.0799%" height="15" fill="rgb(245,135,6)" fg:x="562" fg:w="1"/><text x="45.1382%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8882%" y="437" width="0.0799%" height="15" fill="rgb(243,86,23)" fg:x="562" fg:w="1"/><text x="45.1382%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="43.8498%" y="613" width="1.1981%" height="15" fill="rgb(223,7,20)" fg:x="549" fg:w="15"/><text x="44.0998%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.88%)</title><rect x="44.1693%" y="597" width="0.8786%" height="15" fill="rgb(212,182,17)" fg:x="553" fg:w="11"/><text x="44.4193%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="44.9681%" y="581" width="0.0799%" height="15" fill="rgb(237,94,50)" fg:x="563" fg:w="1"/><text x="45.2181%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9681%" y="565" width="0.0799%" height="15" fill="rgb(232,185,44)" fg:x="563" fg:w="1"/><text x="45.2181%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9681%" y="549" width="0.0799%" height="15" fill="rgb(205,50,36)" fg:x="563" fg:w="1"/><text x="45.2181%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.9681%" y="533" width="0.0799%" height="15" fill="rgb(252,32,32)" fg:x="563" fg:w="1"/><text x="45.2181%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.9681%" y="517" width="0.0799%" height="15" fill="rgb(241,123,33)" fg:x="563" fg:w="1"/><text x="45.2181%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.9681%" y="501" width="0.0799%" height="15" fill="rgb(212,140,16)" fg:x="563" fg:w="1"/><text x="45.2181%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.9681%" y="485" width="0.0799%" height="15" fill="rgb(247,132,5)" fg:x="563" fg:w="1"/><text x="45.2181%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.9681%" y="469" width="0.0799%" height="15" fill="rgb(209,137,38)" fg:x="563" fg:w="1"/><text x="45.2181%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.9681%" y="453" width="0.0799%" height="15" fill="rgb(248,32,42)" fg:x="563" fg:w="1"/><text x="45.2181%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.9681%" y="437" width="0.0799%" height="15" fill="rgb(216,188,40)" fg:x="563" fg:w="1"/><text x="45.2181%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.9681%" y="421" width="0.0799%" height="15" fill="rgb(209,127,53)" fg:x="563" fg:w="1"/><text x="45.2181%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.9681%" y="405" width="0.0799%" height="15" fill="rgb(254,162,9)" fg:x="563" fg:w="1"/><text x="45.2181%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9681%" y="389" width="0.0799%" height="15" fill="rgb(219,183,10)" fg:x="563" fg:w="1"/><text x="45.2181%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="45.0479%" y="613" width="0.0799%" height="15" fill="rgb(217,192,21)" fg:x="564" fg:w="1"/><text x="45.2979%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0479%" y="597" width="0.0799%" height="15" fill="rgb(251,89,27)" fg:x="564" fg:w="1"/><text x="45.2979%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1278%" y="581" width="0.0799%" height="15" fill="rgb(253,55,28)" fg:x="565" fg:w="1"/><text x="45.3778%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.1278%" y="565" width="0.0799%" height="15" fill="rgb(216,159,8)" fg:x="565" fg:w="1"/><text x="45.3778%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.1278%" y="549" width="0.0799%" height="15" fill="rgb(231,228,44)" fg:x="565" fg:w="1"/><text x="45.3778%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.1278%" y="533" width="0.0799%" height="15" fill="rgb(247,34,48)" fg:x="565" fg:w="1"/><text x="45.3778%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.1278%" y="517" width="0.0799%" height="15" fill="rgb(247,222,18)" fg:x="565" fg:w="1"/><text x="45.3778%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.1278%" y="501" width="0.0799%" height="15" fill="rgb(227,49,4)" fg:x="565" fg:w="1"/><text x="45.3778%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.1278%" y="485" width="0.0799%" height="15" fill="rgb(219,189,53)" fg:x="565" fg:w="1"/><text x="45.3778%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.1278%" y="469" width="0.0799%" height="15" fill="rgb(241,160,53)" fg:x="565" fg:w="1"/><text x="45.3778%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.1278%" y="453" width="0.0799%" height="15" fill="rgb(227,115,4)" fg:x="565" fg:w="1"/><text x="45.3778%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.1278%" y="437" width="0.0799%" height="15" fill="rgb(215,28,28)" fg:x="565" fg:w="1"/><text x="45.3778%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.1278%" y="421" width="0.0799%" height="15" fill="rgb(237,143,40)" fg:x="565" fg:w="1"/><text x="45.3778%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.1278%" y="405" width="0.0799%" height="15" fill="rgb(205,107,24)" fg:x="565" fg:w="1"/><text x="45.3778%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.2077%" y="533" width="0.0799%" height="15" fill="rgb(209,112,35)" fg:x="566" fg:w="1"/><text x="45.4577%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="45.1278%" y="613" width="0.2396%" height="15" fill="rgb(206,135,5)" fg:x="565" fg:w="3"/><text x="45.3778%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="45.1278%" y="597" width="0.2396%" height="15" fill="rgb(227,217,38)" fg:x="565" fg:w="3"/><text x="45.3778%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="45.2077%" y="581" width="0.1597%" height="15" fill="rgb(205,0,41)" fg:x="566" fg:w="2"/><text x="45.4577%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="45.2077%" y="565" width="0.1597%" height="15" fill="rgb(220,20,40)" fg:x="566" fg:w="2"/><text x="45.4577%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="45.2077%" y="549" width="0.1597%" height="15" fill="rgb(216,145,3)" fg:x="566" fg:w="2"/><text x="45.4577%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.2875%" y="533" width="0.0799%" height="15" fill="rgb(207,130,51)" fg:x="567" fg:w="1"/><text x="45.5375%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2875%" y="517" width="0.0799%" height="15" fill="rgb(252,93,13)" fg:x="567" fg:w="1"/><text x="45.5375%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.2875%" y="501" width="0.0799%" height="15" fill="rgb(210,105,15)" fg:x="567" fg:w="1"/><text x="45.5375%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2875%" y="485" width="0.0799%" height="15" fill="rgb(212,126,31)" fg:x="567" fg:w="1"/><text x="45.5375%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.2875%" y="469" width="0.0799%" height="15" fill="rgb(241,167,46)" fg:x="567" fg:w="1"/><text x="45.5375%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.3674%" y="549" width="0.0799%" height="15" fill="rgb(217,143,19)" fg:x="568" fg:w="1"/><text x="45.6174%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.3674%" y="533" width="0.0799%" height="15" fill="rgb(235,117,33)" fg:x="568" fg:w="1"/><text x="45.6174%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.3674%" y="517" width="0.0799%" height="15" fill="rgb(247,95,6)" fg:x="568" fg:w="1"/><text x="45.6174%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.3674%" y="501" width="0.0799%" height="15" fill="rgb(243,206,43)" fg:x="568" fg:w="1"/><text x="45.6174%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (21 samples, 1.68%)</title><rect x="43.8498%" y="645" width="1.6773%" height="15" fill="rgb(229,65,54)" fg:x="549" fg:w="21"/><text x="44.0998%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (21 samples, 1.68%)</title><rect x="43.8498%" y="629" width="1.6773%" height="15" fill="rgb(247,137,34)" fg:x="549" fg:w="21"/><text x="44.0998%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="45.3674%" y="613" width="0.1597%" height="15" fill="rgb(245,174,44)" fg:x="568" fg:w="2"/><text x="45.6174%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="45.3674%" y="597" width="0.1597%" height="15" fill="rgb(223,64,15)" fg:x="568" fg:w="2"/><text x="45.6174%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="45.3674%" y="581" width="0.1597%" height="15" fill="rgb(243,153,36)" fg:x="568" fg:w="2"/><text x="45.6174%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="45.3674%" y="565" width="0.1597%" height="15" fill="rgb(252,23,4)" fg:x="568" fg:w="2"/><text x="45.6174%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4473%" y="549" width="0.0799%" height="15" fill="rgb(209,132,13)" fg:x="569" fg:w="1"/><text x="45.6973%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.4473%" y="533" width="0.0799%" height="15" fill="rgb(209,196,21)" fg:x="569" fg:w="1"/><text x="45.6973%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4473%" y="517" width="0.0799%" height="15" fill="rgb(252,197,1)" fg:x="569" fg:w="1"/><text x="45.6973%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.4473%" y="501" width="0.0799%" height="15" fill="rgb(229,42,46)" fg:x="569" fg:w="1"/><text x="45.6973%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="45.4473%" y="485" width="0.0799%" height="15" fill="rgb(219,85,8)" fg:x="569" fg:w="1"/><text x="45.6973%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4473%" y="469" width="0.0799%" height="15" fill="rgb(223,185,14)" fg:x="569" fg:w="1"/><text x="45.6973%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.4473%" y="453" width="0.0799%" height="15" fill="rgb(217,196,18)" fg:x="569" fg:w="1"/><text x="45.6973%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.7668%" y="469" width="0.0799%" height="15" fill="rgb(220,122,37)" fg:x="573" fg:w="1"/><text x="46.0168%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.7668%" y="453" width="0.0799%" height="15" fill="rgb(236,135,33)" fg:x="573" fg:w="1"/><text x="46.0168%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="45.7668%" y="613" width="0.3195%" height="15" fill="rgb(222,86,54)" fg:x="573" fg:w="4"/><text x="46.0168%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="45.7668%" y="597" width="0.3195%" height="15" fill="rgb(227,42,22)" fg:x="573" fg:w="4"/><text x="46.0168%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="45.7668%" y="581" width="0.3195%" height="15" fill="rgb(243,101,27)" fg:x="573" fg:w="4"/><text x="46.0168%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="45.7668%" y="565" width="0.3195%" height="15" fill="rgb(229,100,8)" fg:x="573" fg:w="4"/><text x="46.0168%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.7668%" y="549" width="0.3195%" height="15" fill="rgb(252,68,10)" fg:x="573" fg:w="4"/><text x="46.0168%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="45.7668%" y="533" width="0.3195%" height="15" fill="rgb(219,19,31)" fg:x="573" fg:w="4"/><text x="46.0168%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.7668%" y="517" width="0.3195%" height="15" fill="rgb(246,150,44)" fg:x="573" fg:w="4"/><text x="46.0168%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="45.7668%" y="501" width="0.3195%" height="15" fill="rgb(211,14,39)" fg:x="573" fg:w="4"/><text x="46.0168%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.7668%" y="485" width="0.3195%" height="15" fill="rgb(221,98,29)" fg:x="573" fg:w="4"/><text x="46.0168%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="45.8466%" y="469" width="0.2396%" height="15" fill="rgb(221,70,26)" fg:x="574" fg:w="3"/><text x="46.0966%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.8466%" y="453" width="0.2396%" height="15" fill="rgb(236,146,30)" fg:x="574" fg:w="3"/><text x="46.0966%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="45.8466%" y="437" width="0.2396%" height="15" fill="rgb(226,94,34)" fg:x="574" fg:w="3"/><text x="46.0966%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.8466%" y="421" width="0.2396%" height="15" fill="rgb(248,132,21)" fg:x="574" fg:w="3"/><text x="46.0966%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="46.0064%" y="405" width="0.0799%" height="15" fill="rgb(245,43,50)" fg:x="576" fg:w="1"/><text x="46.2564%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="46.0064%" y="389" width="0.0799%" height="15" fill="rgb(245,132,31)" fg:x="576" fg:w="1"/><text x="46.2564%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="46.2460%" y="565" width="0.1597%" height="15" fill="rgb(230,171,4)" fg:x="579" fg:w="2"/><text x="46.4960%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="46.2460%" y="549" width="0.1597%" height="15" fill="rgb(235,6,45)" fg:x="579" fg:w="2"/><text x="46.4960%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.2460%" y="533" width="0.1597%" height="15" fill="rgb(220,80,28)" fg:x="579" fg:w="2"/><text x="46.4960%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.2460%" y="517" width="0.1597%" height="15" fill="rgb(242,171,9)" fg:x="579" fg:w="2"/><text x="46.4960%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.3259%" y="501" width="0.0799%" height="15" fill="rgb(214,135,29)" fg:x="580" fg:w="1"/><text x="46.5759%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.3259%" y="485" width="0.0799%" height="15" fill="rgb(221,229,16)" fg:x="580" fg:w="1"/><text x="46.5759%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="45.6869%" y="629" width="0.8786%" height="15" fill="rgb(253,59,46)" fg:x="572" fg:w="11"/><text x="45.9369%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="46.0863%" y="613" width="0.4792%" height="15" fill="rgb(250,147,20)" fg:x="577" fg:w="6"/><text x="46.3363%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="46.1661%" y="597" width="0.3994%" height="15" fill="rgb(236,64,48)" fg:x="578" fg:w="5"/><text x="46.4161%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="46.2460%" y="581" width="0.3195%" height="15" fill="rgb(240,37,42)" fg:x="579" fg:w="4"/><text x="46.4960%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="46.4058%" y="565" width="0.1597%" height="15" fill="rgb(220,41,50)" fg:x="581" fg:w="2"/><text x="46.6558%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="46.4058%" y="549" width="0.1597%" height="15" fill="rgb(216,51,14)" fg:x="581" fg:w="2"/><text x="46.6558%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="46.4058%" y="533" width="0.1597%" height="15" fill="rgb(215,83,10)" fg:x="581" fg:w="2"/><text x="46.6558%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.4058%" y="517" width="0.1597%" height="15" fill="rgb(206,144,17)" fg:x="581" fg:w="2"/><text x="46.6558%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="46.4058%" y="501" width="0.1597%" height="15" fill="rgb(219,196,37)" fg:x="581" fg:w="2"/><text x="46.6558%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.4058%" y="485" width="0.1597%" height="15" fill="rgb(226,135,26)" fg:x="581" fg:w="2"/><text x="46.6558%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="46.4058%" y="469" width="0.1597%" height="15" fill="rgb(237,195,40)" fg:x="581" fg:w="2"/><text x="46.6558%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="46.4856%" y="453" width="0.0799%" height="15" fill="rgb(228,182,42)" fg:x="582" fg:w="1"/><text x="46.7356%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="46.4856%" y="437" width="0.0799%" height="15" fill="rgb(224,135,50)" fg:x="582" fg:w="1"/><text x="46.7356%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4856%" y="421" width="0.0799%" height="15" fill="rgb(236,215,34)" fg:x="582" fg:w="1"/><text x="46.7356%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6454%" y="565" width="0.0799%" height="15" fill="rgb(244,213,27)" fg:x="584" fg:w="1"/><text x="46.8954%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6454%" y="549" width="0.0799%" height="15" fill="rgb(233,37,53)" fg:x="584" fg:w="1"/><text x="46.8954%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7252%" y="453" width="0.0799%" height="15" fill="rgb(222,132,14)" fg:x="585" fg:w="1"/><text x="46.9752%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="46.5655%" y="629" width="0.3195%" height="15" fill="rgb(219,202,29)" fg:x="583" fg:w="4"/><text x="46.8155%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="46.5655%" y="613" width="0.3195%" height="15" fill="rgb(226,157,39)" fg:x="583" fg:w="4"/><text x="46.8155%" y="623.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="46.5655%" y="597" width="0.3195%" height="15" fill="rgb(235,213,2)" fg:x="583" fg:w="4"/><text x="46.8155%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="46.6454%" y="581" width="0.2396%" height="15" fill="rgb(250,121,2)" fg:x="584" fg:w="3"/><text x="46.8954%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="46.7252%" y="565" width="0.1597%" height="15" fill="rgb(206,192,33)" fg:x="585" fg:w="2"/><text x="46.9752%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.7252%" y="549" width="0.1597%" height="15" fill="rgb(240,161,6)" fg:x="585" fg:w="2"/><text x="46.9752%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="46.7252%" y="533" width="0.1597%" height="15" fill="rgb(246,53,30)" fg:x="585" fg:w="2"/><text x="46.9752%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.7252%" y="517" width="0.1597%" height="15" fill="rgb(219,123,43)" fg:x="585" fg:w="2"/><text x="46.9752%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="46.7252%" y="501" width="0.1597%" height="15" fill="rgb(236,53,49)" fg:x="585" fg:w="2"/><text x="46.9752%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="46.7252%" y="485" width="0.1597%" height="15" fill="rgb(241,156,1)" fg:x="585" fg:w="2"/><text x="46.9752%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.7252%" y="469" width="0.1597%" height="15" fill="rgb(209,73,26)" fg:x="585" fg:w="2"/><text x="46.9752%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="46.8051%" y="453" width="0.0799%" height="15" fill="rgb(206,114,3)" fg:x="586" fg:w="1"/><text x="47.0551%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.8051%" y="437" width="0.0799%" height="15" fill="rgb(230,214,9)" fg:x="586" fg:w="1"/><text x="47.0551%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8051%" y="421" width="0.0799%" height="15" fill="rgb(240,184,46)" fg:x="586" fg:w="1"/><text x="47.0551%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.8850%" y="565" width="0.0799%" height="15" fill="rgb(242,169,54)" fg:x="587" fg:w="1"/><text x="47.1350%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="46.8850%" y="597" width="0.1597%" height="15" fill="rgb(207,168,50)" fg:x="587" fg:w="2"/><text x="47.1350%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.8850%" y="581" width="0.1597%" height="15" fill="rgb(240,114,2)" fg:x="587" fg:w="2"/><text x="47.1350%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9649%" y="565" width="0.0799%" height="15" fill="rgb(211,17,40)" fg:x="588" fg:w="1"/><text x="47.2149%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="46.8850%" y="613" width="0.2396%" height="15" fill="rgb(235,97,36)" fg:x="587" fg:w="3"/><text x="47.1350%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="47.0447%" y="597" width="0.0799%" height="15" fill="rgb(208,164,11)" fg:x="589" fg:w="1"/><text x="47.2947%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="47.0447%" y="581" width="0.0799%" height="15" fill="rgb(242,11,17)" fg:x="589" fg:w="1"/><text x="47.2947%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.0447%" y="565" width="0.0799%" height="15" fill="rgb(215,86,33)" fg:x="589" fg:w="1"/><text x="47.2947%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="47.0447%" y="549" width="0.0799%" height="15" fill="rgb(245,185,28)" fg:x="589" fg:w="1"/><text x="47.2947%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.1246%" y="565" width="0.0799%" height="15" fill="rgb(231,89,42)" fg:x="590" fg:w="1"/><text x="47.3746%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (22 samples, 1.76%)</title><rect x="45.5272%" y="645" width="1.7572%" height="15" fill="rgb(210,18,47)" fg:x="570" fg:w="22"/><text x="45.7772%" y="655.50"></text></g><g><title>plugins_core::build::Build::new_world (5 samples, 0.40%)</title><rect x="46.8850%" y="629" width="0.3994%" height="15" fill="rgb(214,84,8)" fg:x="587" fg:w="5"/><text x="47.1350%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="47.1246%" y="613" width="0.1597%" height="15" fill="rgb(214,222,23)" fg:x="590" fg:w="2"/><text x="47.3746%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="47.1246%" y="597" width="0.1597%" height="15" fill="rgb(213,104,21)" fg:x="590" fg:w="2"/><text x="47.3746%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="47.1246%" y="581" width="0.1597%" height="15" fill="rgb(238,138,6)" fg:x="590" fg:w="2"/><text x="47.3746%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="47.2045%" y="565" width="0.0799%" height="15" fill="rgb(205,167,50)" fg:x="591" fg:w="1"/><text x="47.4545%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.2045%" y="549" width="0.0799%" height="15" fill="rgb(230,105,27)" fg:x="591" fg:w="1"/><text x="47.4545%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.2045%" y="533" width="0.0799%" height="15" fill="rgb(222,97,48)" fg:x="591" fg:w="1"/><text x="47.4545%" y="543.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (517 samples, 41.29%)</title><rect x="6.0703%" y="661" width="41.2939%" height="15" fill="rgb(222,197,14)" fg:x="76" fg:w="517"/><text x="6.3203%" y="671.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="47.2843%" y="645" width="0.0799%" height="15" fill="rgb(210,105,47)" fg:x="592" fg:w="1"/><text x="47.5343%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.2843%" y="629" width="0.0799%" height="15" fill="rgb(238,158,19)" fg:x="592" fg:w="1"/><text x="47.5343%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.2843%" y="613" width="0.0799%" height="15" fill="rgb(226,176,23)" fg:x="592" fg:w="1"/><text x="47.5343%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="47.4441%" y="645" width="0.1597%" height="15" fill="rgb(208,79,31)" fg:x="594" fg:w="2"/><text x="47.6941%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5240%" y="629" width="0.0799%" height="15" fill="rgb(221,154,21)" fg:x="595" fg:w="1"/><text x="47.7740%" y="639.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="47.6038%" y="645" width="0.1597%" height="15" fill="rgb(213,61,41)" fg:x="596" fg:w="2"/><text x="47.8538%" y="655.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="47.6038%" y="629" width="0.1597%" height="15" fill="rgb(215,28,33)" fg:x="596" fg:w="2"/><text x="47.8538%" y="639.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="47.6038%" y="613" width="0.1597%" height="15" fill="rgb(231,139,26)" fg:x="596" fg:w="2"/><text x="47.8538%" y="623.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="47.6038%" y="597" width="0.1597%" height="15" fill="rgb(232,159,16)" fg:x="596" fg:w="2"/><text x="47.8538%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="47.6038%" y="581" width="0.1597%" height="15" fill="rgb(233,80,10)" fg:x="596" fg:w="2"/><text x="47.8538%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="47.6038%" y="565" width="0.1597%" height="15" fill="rgb(208,147,29)" fg:x="596" fg:w="2"/><text x="47.8538%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="47.6038%" y="549" width="0.1597%" height="15" fill="rgb(213,10,12)" fg:x="596" fg:w="2"/><text x="47.8538%" y="559.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="47.6038%" y="533" width="0.1597%" height="15" fill="rgb(231,218,13)" fg:x="596" fg:w="2"/><text x="47.8538%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="47.7636%" y="581" width="0.0799%" height="15" fill="rgb(244,199,44)" fg:x="598" fg:w="1"/><text x="48.0136%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="47.7636%" y="613" width="0.2396%" height="15" fill="rgb(240,144,53)" fg:x="598" fg:w="3"/><text x="48.0136%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="47.7636%" y="597" width="0.2396%" height="15" fill="rgb(223,57,28)" fg:x="598" fg:w="3"/><text x="48.0136%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.8435%" y="581" width="0.1597%" height="15" fill="rgb(213,134,38)" fg:x="599" fg:w="2"/><text x="48.0935%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="48.0032%" y="597" width="0.0799%" height="15" fill="rgb(251,182,42)" fg:x="601" fg:w="1"/><text x="48.2532%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.0032%" y="581" width="0.0799%" height="15" fill="rgb(229,93,13)" fg:x="601" fg:w="1"/><text x="48.2532%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="48.0032%" y="565" width="0.0799%" height="15" fill="rgb(234,171,3)" fg:x="601" fg:w="1"/><text x="48.2532%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="48.0831%" y="581" width="0.0799%" height="15" fill="rgb(241,105,32)" fg:x="602" fg:w="1"/><text x="48.3331%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="48.0831%" y="565" width="0.0799%" height="15" fill="rgb(221,66,3)" fg:x="602" fg:w="1"/><text x="48.3331%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.0831%" y="549" width="0.0799%" height="15" fill="rgb(248,155,29)" fg:x="602" fg:w="1"/><text x="48.3331%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.0831%" y="533" width="0.0799%" height="15" fill="rgb(231,31,5)" fg:x="602" fg:w="1"/><text x="48.3331%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.0831%" y="517" width="0.0799%" height="15" fill="rgb(213,188,31)" fg:x="602" fg:w="1"/><text x="48.3331%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.0831%" y="501" width="0.0799%" height="15" fill="rgb(212,104,33)" fg:x="602" fg:w="1"/><text x="48.3331%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.0831%" y="485" width="0.0799%" height="15" fill="rgb(254,77,51)" fg:x="602" fg:w="1"/><text x="48.3331%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="48.0831%" y="469" width="0.0799%" height="15" fill="rgb(234,39,26)" fg:x="602" fg:w="1"/><text x="48.3331%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="48.0831%" y="453" width="0.0799%" height="15" fill="rgb(208,88,36)" fg:x="602" fg:w="1"/><text x="48.3331%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.1629%" y="565" width="0.0799%" height="15" fill="rgb(243,222,10)" fg:x="603" fg:w="1"/><text x="48.4129%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.3227%" y="501" width="0.1597%" height="15" fill="rgb(218,133,52)" fg:x="605" fg:w="2"/><text x="48.5727%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="48.2428%" y="549" width="0.3195%" height="15" fill="rgb(222,25,26)" fg:x="604" fg:w="4"/><text x="48.4928%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="48.2428%" y="533" width="0.3195%" height="15" fill="rgb(243,174,24)" fg:x="604" fg:w="4"/><text x="48.4928%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="48.2428%" y="517" width="0.3195%" height="15" fill="rgb(233,188,52)" fg:x="604" fg:w="4"/><text x="48.4928%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="48.4824%" y="501" width="0.0799%" height="15" fill="rgb(208,89,14)" fg:x="607" fg:w="1"/><text x="48.7324%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="48.2428%" y="565" width="0.4792%" height="15" fill="rgb(205,204,21)" fg:x="604" fg:w="6"/><text x="48.4928%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="48.5623%" y="549" width="0.1597%" height="15" fill="rgb(246,39,28)" fg:x="608" fg:w="2"/><text x="48.8123%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="48.6422%" y="533" width="0.0799%" height="15" fill="rgb(235,71,19)" fg:x="609" fg:w="1"/><text x="48.8922%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="48.8818%" y="549" width="0.1597%" height="15" fill="rgb(211,62,39)" fg:x="612" fg:w="2"/><text x="49.1318%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="49.0415%" y="549" width="0.4792%" height="15" fill="rgb(246,118,20)" fg:x="614" fg:w="6"/><text x="49.2915%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="49.2013%" y="533" width="0.3195%" height="15" fill="rgb(230,82,12)" fg:x="616" fg:w="4"/><text x="49.4513%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="49.2013%" y="517" width="0.3195%" height="15" fill="rgb(205,212,34)" fg:x="616" fg:w="4"/><text x="49.4513%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="49.2812%" y="501" width="0.2396%" height="15" fill="rgb(239,90,1)" fg:x="617" fg:w="3"/><text x="49.5312%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.4409%" y="485" width="0.0799%" height="15" fill="rgb(225,198,50)" fg:x="619" fg:w="1"/><text x="49.6909%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.4409%" y="469" width="0.0799%" height="15" fill="rgb(227,208,48)" fg:x="619" fg:w="1"/><text x="49.6909%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.4409%" y="453" width="0.0799%" height="15" fill="rgb(238,134,41)" fg:x="619" fg:w="1"/><text x="49.6909%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="49.5208%" y="517" width="0.0799%" height="15" fill="rgb(241,58,39)" fg:x="620" fg:w="1"/><text x="49.7708%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.5208%" y="501" width="0.0799%" height="15" fill="rgb(214,126,4)" fg:x="620" fg:w="1"/><text x="49.7708%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="49.5208%" y="533" width="0.1597%" height="15" fill="rgb(235,149,4)" fg:x="620" fg:w="2"/><text x="49.7708%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="49.6006%" y="517" width="0.0799%" height="15" fill="rgb(236,59,29)" fg:x="621" fg:w="1"/><text x="49.8506%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="49.6805%" y="533" width="0.1597%" height="15" fill="rgb(246,11,33)" fg:x="622" fg:w="2"/><text x="49.9305%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="49.9201%" y="517" width="0.3994%" height="15" fill="rgb(232,180,35)" fg:x="625" fg:w="5"/><text x="50.1701%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="50.0000%" y="501" width="0.3195%" height="15" fill="rgb(220,35,37)" fg:x="626" fg:w="4"/><text x="50.2500%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="50.0000%" y="485" width="0.3195%" height="15" fill="rgb(238,107,48)" fg:x="626" fg:w="4"/><text x="50.2500%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="50.0799%" y="469" width="0.2396%" height="15" fill="rgb(205,65,21)" fg:x="627" fg:w="3"/><text x="50.3299%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.3994%" y="485" width="0.0799%" height="15" fill="rgb(246,138,48)" fg:x="631" fg:w="1"/><text x="50.6494%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="50.4792%" y="485" width="0.0799%" height="15" fill="rgb(209,220,47)" fg:x="632" fg:w="1"/><text x="50.7292%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="50.4792%" y="469" width="0.0799%" height="15" fill="rgb(222,162,49)" fg:x="632" fg:w="1"/><text x="50.7292%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="50.4792%" y="453" width="0.0799%" height="15" fill="rgb(243,123,11)" fg:x="632" fg:w="1"/><text x="50.7292%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="50.4792%" y="437" width="0.0799%" height="15" fill="rgb(221,229,41)" fg:x="632" fg:w="1"/><text x="50.7292%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="50.5591%" y="469" width="0.0799%" height="15" fill="rgb(216,68,4)" fg:x="633" fg:w="1"/><text x="50.8091%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="50.6390%" y="469" width="0.3195%" height="15" fill="rgb(207,88,35)" fg:x="634" fg:w="4"/><text x="50.8890%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="50.6390%" y="453" width="0.3195%" height="15" fill="rgb(252,2,5)" fg:x="634" fg:w="4"/><text x="50.8890%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="50.6390%" y="437" width="0.3195%" height="15" fill="rgb(209,173,7)" fg:x="634" fg:w="4"/><text x="50.8890%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="50.6390%" y="421" width="0.3195%" height="15" fill="rgb(210,198,52)" fg:x="634" fg:w="4"/><text x="50.8890%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="50.6390%" y="405" width="0.3195%" height="15" fill="rgb(228,152,32)" fg:x="634" fg:w="4"/><text x="50.8890%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="50.6390%" y="389" width="0.3195%" height="15" fill="rgb(249,98,29)" fg:x="634" fg:w="4"/><text x="50.8890%" y="399.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="50.6390%" y="373" width="0.3195%" height="15" fill="rgb(205,148,48)" fg:x="634" fg:w="4"/><text x="50.8890%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="49.8403%" y="533" width="1.3578%" height="15" fill="rgb(236,69,34)" fg:x="624" fg:w="17"/><text x="50.0903%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="50.3195%" y="517" width="0.8786%" height="15" fill="rgb(220,151,41)" fg:x="630" fg:w="11"/><text x="50.5695%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="50.3195%" y="501" width="0.8786%" height="15" fill="rgb(254,106,24)" fg:x="630" fg:w="11"/><text x="50.5695%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="50.5591%" y="485" width="0.6390%" height="15" fill="rgb(210,37,48)" fg:x="633" fg:w="8"/><text x="50.8091%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="50.9585%" y="469" width="0.2396%" height="15" fill="rgb(254,131,5)" fg:x="638" fg:w="3"/><text x="51.2085%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="51.0383%" y="453" width="0.1597%" height="15" fill="rgb(216,55,41)" fg:x="639" fg:w="2"/><text x="51.2883%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.1182%" y="437" width="0.0799%" height="15" fill="rgb(250,35,31)" fg:x="640" fg:w="1"/><text x="51.3682%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="49.5208%" y="549" width="1.8371%" height="15" fill="rgb(207,124,33)" fg:x="620" fg:w="23"/><text x="49.7708%" y="559.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="51.1981%" y="533" width="0.1597%" height="15" fill="rgb(249,175,17)" fg:x="641" fg:w="2"/><text x="51.4481%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (45 samples, 3.59%)</title><rect x="48.1629%" y="581" width="3.5942%" height="15" fill="rgb(224,175,39)" fg:x="603" fg:w="45"/><text x="48.4129%" y="591.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.04%)</title><rect x="48.7220%" y="565" width="3.0351%" height="15" fill="rgb(208,67,49)" fg:x="610" fg:w="38"/><text x="48.9720%" y="575.50">ser..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="51.3578%" y="549" width="0.3994%" height="15" fill="rgb(222,188,41)" fg:x="643" fg:w="5"/><text x="51.6078%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="51.3578%" y="533" width="0.3994%" height="15" fill="rgb(243,213,30)" fg:x="643" fg:w="5"/><text x="51.6078%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="51.3578%" y="517" width="0.3994%" height="15" fill="rgb(253,100,45)" fg:x="643" fg:w="5"/><text x="51.6078%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="51.5974%" y="501" width="0.1597%" height="15" fill="rgb(226,24,44)" fg:x="646" fg:w="2"/><text x="51.8474%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="51.5974%" y="485" width="0.1597%" height="15" fill="rgb(215,41,24)" fg:x="646" fg:w="2"/><text x="51.8474%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="51.5974%" y="469" width="0.1597%" height="15" fill="rgb(254,53,33)" fg:x="646" fg:w="2"/><text x="51.8474%" y="479.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="51.9968%" y="549" width="0.2396%" height="15" fill="rgb(242,103,10)" fg:x="651" fg:w="3"/><text x="52.2468%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.2364%" y="549" width="0.0799%" height="15" fill="rgb(246,29,21)" fg:x="654" fg:w="1"/><text x="52.4864%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2364%" y="533" width="0.0799%" height="15" fill="rgb(251,154,1)" fg:x="654" fg:w="1"/><text x="52.4864%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="52.4760%" y="517" width="0.1597%" height="15" fill="rgb(254,212,26)" fg:x="657" fg:w="2"/><text x="52.7260%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.4760%" y="501" width="0.1597%" height="15" fill="rgb(251,187,46)" fg:x="657" fg:w="2"/><text x="52.7260%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.7955%" y="501" width="0.0799%" height="15" fill="rgb(224,208,14)" fg:x="661" fg:w="1"/><text x="53.0455%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.8754%" y="501" width="0.0799%" height="15" fill="rgb(222,176,26)" fg:x="662" fg:w="1"/><text x="53.1254%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="52.9553%" y="501" width="0.0799%" height="15" fill="rgb(241,219,52)" fg:x="663" fg:w="1"/><text x="53.2053%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.9553%" y="485" width="0.0799%" height="15" fill="rgb(252,198,21)" fg:x="663" fg:w="1"/><text x="53.2053%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9553%" y="469" width="0.0799%" height="15" fill="rgb(244,196,23)" fg:x="663" fg:w="1"/><text x="53.2053%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.0351%" y="469" width="0.0799%" height="15" fill="rgb(239,121,44)" fg:x="664" fg:w="1"/><text x="53.2851%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.1150%" y="469" width="0.0799%" height="15" fill="rgb(249,203,23)" fg:x="665" fg:w="1"/><text x="53.3650%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="51.7572%" y="581" width="1.5176%" height="15" fill="rgb(238,219,10)" fg:x="648" fg:w="19"/><text x="52.0072%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="51.7572%" y="565" width="1.5176%" height="15" fill="rgb(241,35,46)" fg:x="648" fg:w="19"/><text x="52.0072%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="52.3163%" y="549" width="0.9585%" height="15" fill="rgb(218,28,6)" fg:x="655" fg:w="12"/><text x="52.5663%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="52.4760%" y="533" width="0.7987%" height="15" fill="rgb(233,151,50)" fg:x="657" fg:w="10"/><text x="52.7260%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="52.6358%" y="517" width="0.6390%" height="15" fill="rgb(208,57,8)" fg:x="659" fg:w="8"/><text x="52.8858%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="53.0351%" y="501" width="0.2396%" height="15" fill="rgb(253,99,10)" fg:x="664" fg:w="3"/><text x="53.2851%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="53.0351%" y="485" width="0.2396%" height="15" fill="rgb(237,196,49)" fg:x="664" fg:w="3"/><text x="53.2851%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.1949%" y="469" width="0.0799%" height="15" fill="rgb(209,51,3)" fg:x="666" fg:w="1"/><text x="53.4449%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.1949%" y="453" width="0.0799%" height="15" fill="rgb(238,129,10)" fg:x="666" fg:w="1"/><text x="53.4449%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="53.4345%" y="517" width="0.1597%" height="15" fill="rgb(246,201,16)" fg:x="669" fg:w="2"/><text x="53.6845%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.6741%" y="501" width="0.1597%" height="15" fill="rgb(250,160,20)" fg:x="672" fg:w="2"/><text x="53.9241%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.8339%" y="501" width="0.0799%" height="15" fill="rgb(251,107,25)" fg:x="674" fg:w="1"/><text x="54.0839%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.8339%" y="485" width="0.0799%" height="15" fill="rgb(212,103,39)" fg:x="674" fg:w="1"/><text x="54.0839%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0735%" y="469" width="0.0799%" height="15" fill="rgb(207,9,29)" fg:x="677" fg:w="1"/><text x="54.3235%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.1534%" y="469" width="0.0799%" height="15" fill="rgb(227,84,3)" fg:x="678" fg:w="1"/><text x="54.4034%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.1534%" y="453" width="0.0799%" height="15" fill="rgb(242,194,7)" fg:x="678" fg:w="1"/><text x="54.4034%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="53.4345%" y="549" width="0.8786%" height="15" fill="rgb(230,40,4)" fg:x="669" fg:w="11"/><text x="53.6845%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="53.4345%" y="533" width="0.8786%" height="15" fill="rgb(243,229,33)" fg:x="669" fg:w="11"/><text x="53.6845%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="53.5942%" y="517" width="0.7188%" height="15" fill="rgb(240,65,24)" fg:x="671" fg:w="9"/><text x="53.8442%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="53.9137%" y="501" width="0.3994%" height="15" fill="rgb(212,28,20)" fg:x="675" fg:w="5"/><text x="54.1637%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="53.9936%" y="485" width="0.3195%" height="15" fill="rgb(209,72,3)" fg:x="676" fg:w="4"/><text x="54.2436%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.2332%" y="469" width="0.0799%" height="15" fill="rgb(238,170,36)" fg:x="679" fg:w="1"/><text x="54.4832%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.2332%" y="453" width="0.0799%" height="15" fill="rgb(236,19,38)" fg:x="679" fg:w="1"/><text x="54.4832%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.2332%" y="437" width="0.0799%" height="15" fill="rgb(230,67,43)" fg:x="679" fg:w="1"/><text x="54.4832%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2332%" y="421" width="0.0799%" height="15" fill="rgb(227,14,36)" fg:x="679" fg:w="1"/><text x="54.4832%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="54.4728%" y="437" width="0.0799%" height="15" fill="rgb(247,171,49)" fg:x="682" fg:w="1"/><text x="54.7228%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="54.4728%" y="485" width="0.1597%" height="15" fill="rgb(235,164,51)" fg:x="682" fg:w="2"/><text x="54.7228%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="54.4728%" y="469" width="0.1597%" height="15" fill="rgb(246,107,20)" fg:x="682" fg:w="2"/><text x="54.7228%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="54.4728%" y="453" width="0.1597%" height="15" fill="rgb(226,88,18)" fg:x="682" fg:w="2"/><text x="54.7228%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.5527%" y="437" width="0.0799%" height="15" fill="rgb(235,136,9)" fg:x="683" fg:w="1"/><text x="54.8027%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="54.3131%" y="533" width="0.3994%" height="15" fill="rgb(209,3,34)" fg:x="680" fg:w="5"/><text x="54.5631%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="54.3930%" y="517" width="0.3195%" height="15" fill="rgb(213,38,19)" fg:x="681" fg:w="4"/><text x="54.6430%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="54.4728%" y="501" width="0.2396%" height="15" fill="rgb(254,24,24)" fg:x="682" fg:w="3"/><text x="54.7228%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.6326%" y="485" width="0.0799%" height="15" fill="rgb(219,122,42)" fg:x="684" fg:w="1"/><text x="54.8826%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (17 samples, 1.36%)</title><rect x="53.4345%" y="565" width="1.3578%" height="15" fill="rgb(205,128,31)" fg:x="669" fg:w="17"/><text x="53.6845%" y="575.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="54.3131%" y="549" width="0.4792%" height="15" fill="rgb(212,142,0)" fg:x="680" fg:w="6"/><text x="54.5631%" y="559.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="54.7125%" y="533" width="0.0799%" height="15" fill="rgb(211,25,35)" fg:x="685" fg:w="1"/><text x="54.9625%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.7923%" y="533" width="0.1597%" height="15" fill="rgb(220,150,53)" fg:x="686" fg:w="2"/><text x="55.0423%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="54.9521%" y="533" width="0.3195%" height="15" fill="rgb(220,30,24)" fg:x="688" fg:w="4"/><text x="55.2021%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.1917%" y="517" width="0.0799%" height="15" fill="rgb(218,86,23)" fg:x="691" fg:w="1"/><text x="55.4417%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="55.2716%" y="533" width="0.1597%" height="15" fill="rgb(206,62,27)" fg:x="692" fg:w="2"/><text x="55.5216%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="55.3514%" y="517" width="0.0799%" height="15" fill="rgb(249,174,0)" fg:x="693" fg:w="1"/><text x="55.6014%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="55.4313%" y="533" width="0.0799%" height="15" fill="rgb(246,67,27)" fg:x="694" fg:w="1"/><text x="55.6813%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="55.4313%" y="517" width="0.0799%" height="15" fill="rgb(250,195,30)" fg:x="694" fg:w="1"/><text x="55.6813%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4313%" y="501" width="0.0799%" height="15" fill="rgb(251,171,50)" fg:x="694" fg:w="1"/><text x="55.6813%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4313%" y="485" width="0.0799%" height="15" fill="rgb(236,196,10)" fg:x="694" fg:w="1"/><text x="55.6813%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="55.4313%" y="469" width="0.0799%" height="15" fill="rgb(249,228,52)" fg:x="694" fg:w="1"/><text x="55.6813%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="55.4313%" y="453" width="0.0799%" height="15" fill="rgb(219,60,51)" fg:x="694" fg:w="1"/><text x="55.6813%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.5112%" y="501" width="0.1597%" height="15" fill="rgb(240,198,24)" fg:x="695" fg:w="2"/><text x="55.7612%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="55.5112%" y="533" width="0.3195%" height="15" fill="rgb(240,192,40)" fg:x="695" fg:w="4"/><text x="55.7612%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="55.5112%" y="517" width="0.3195%" height="15" fill="rgb(219,118,5)" fg:x="695" fg:w="4"/><text x="55.7612%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.6709%" y="501" width="0.1597%" height="15" fill="rgb(205,202,34)" fg:x="697" fg:w="2"/><text x="55.9209%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7508%" y="485" width="0.0799%" height="15" fill="rgb(234,153,26)" fg:x="698" fg:w="1"/><text x="56.0008%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="55.9904%" y="485" width="0.2396%" height="15" fill="rgb(229,26,29)" fg:x="701" fg:w="3"/><text x="56.2404%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.0703%" y="469" width="0.1597%" height="15" fill="rgb(237,115,21)" fg:x="702" fg:w="2"/><text x="56.3203%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.0703%" y="453" width="0.1597%" height="15" fill="rgb(252,144,15)" fg:x="702" fg:w="2"/><text x="56.3203%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="56.2300%" y="469" width="0.0799%" height="15" fill="rgb(232,26,13)" fg:x="704" fg:w="1"/><text x="56.4800%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="56.3099%" y="453" width="0.0799%" height="15" fill="rgb(206,44,19)" fg:x="705" fg:w="1"/><text x="56.5599%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="56.2300%" y="485" width="0.3994%" height="15" fill="rgb(249,159,2)" fg:x="704" fg:w="5"/><text x="56.4800%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="56.3099%" y="469" width="0.3195%" height="15" fill="rgb(231,5,32)" fg:x="705" fg:w="4"/><text x="56.5599%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="56.3898%" y="453" width="0.2396%" height="15" fill="rgb(249,210,18)" fg:x="706" fg:w="3"/><text x="56.6398%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.4696%" y="437" width="0.1597%" height="15" fill="rgb(215,223,36)" fg:x="707" fg:w="2"/><text x="56.7196%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5495%" y="421" width="0.0799%" height="15" fill="rgb(245,185,20)" fg:x="708" fg:w="1"/><text x="56.7995%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5495%" y="405" width="0.0799%" height="15" fill="rgb(206,224,11)" fg:x="708" fg:w="1"/><text x="56.7995%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="56.7093%" y="469" width="0.1597%" height="15" fill="rgb(248,73,42)" fg:x="710" fg:w="2"/><text x="56.9593%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8690%" y="453" width="0.0799%" height="15" fill="rgb(219,149,31)" fg:x="712" fg:w="1"/><text x="57.1190%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.8690%" y="437" width="0.0799%" height="15" fill="rgb(243,104,17)" fg:x="712" fg:w="1"/><text x="57.1190%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.1086%" y="421" width="0.0799%" height="15" fill="rgb(244,117,33)" fg:x="715" fg:w="1"/><text x="57.3586%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.5080%" y="389" width="0.1597%" height="15" fill="rgb(251,25,47)" fg:x="720" fg:w="2"/><text x="57.7580%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.5879%" y="373" width="0.0799%" height="15" fill="rgb(249,70,13)" fg:x="721" fg:w="1"/><text x="57.8379%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5879%" y="357" width="0.0799%" height="15" fill="rgb(217,133,18)" fg:x="721" fg:w="1"/><text x="57.8379%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="57.1086%" y="437" width="0.7987%" height="15" fill="rgb(248,97,28)" fg:x="715" fg:w="10"/><text x="57.3586%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="57.1885%" y="421" width="0.7188%" height="15" fill="rgb(237,193,4)" fg:x="716" fg:w="9"/><text x="57.4385%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="57.2684%" y="405" width="0.6390%" height="15" fill="rgb(247,198,45)" fg:x="717" fg:w="8"/><text x="57.5184%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="57.6677%" y="389" width="0.2396%" height="15" fill="rgb(245,2,20)" fg:x="722" fg:w="3"/><text x="57.9177%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="57.7476%" y="373" width="0.1597%" height="15" fill="rgb(210,71,36)" fg:x="723" fg:w="2"/><text x="57.9976%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.7476%" y="357" width="0.1597%" height="15" fill="rgb(238,114,30)" fg:x="723" fg:w="2"/><text x="57.9976%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.7476%" y="341" width="0.1597%" height="15" fill="rgb(241,200,2)" fg:x="723" fg:w="2"/><text x="57.9976%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.7476%" y="325" width="0.1597%" height="15" fill="rgb(232,106,18)" fg:x="723" fg:w="2"/><text x="57.9976%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9073%" y="437" width="0.0799%" height="15" fill="rgb(211,141,18)" fg:x="725" fg:w="1"/><text x="58.1573%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="56.8690%" y="469" width="1.1981%" height="15" fill="rgb(224,9,9)" fg:x="712" fg:w="15"/><text x="57.1190%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.12%)</title><rect x="56.9489%" y="453" width="1.1182%" height="15" fill="rgb(249,137,46)" fg:x="713" fg:w="14"/><text x="57.1989%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="57.9872%" y="437" width="0.0799%" height="15" fill="rgb(236,44,45)" fg:x="726" fg:w="1"/><text x="58.2372%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="57.9872%" y="421" width="0.0799%" height="15" fill="rgb(205,68,40)" fg:x="726" fg:w="1"/><text x="58.2372%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.16%)</title><rect x="55.9904%" y="501" width="2.1565%" height="15" fill="rgb(214,198,49)" fg:x="701" fg:w="27"/><text x="56.2404%" y="511.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.52%)</title><rect x="56.6294%" y="485" width="1.5176%" height="15" fill="rgb(226,140,45)" fg:x="709" fg:w="19"/><text x="56.8794%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0671%" y="469" width="0.0799%" height="15" fill="rgb(209,109,20)" fg:x="727" fg:w="1"/><text x="58.3171%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 2.32%)</title><rect x="55.9105%" y="517" width="2.3163%" height="15" fill="rgb(217,33,46)" fg:x="700" fg:w="29"/><text x="56.1605%" y="527.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="58.1470%" y="501" width="0.0799%" height="15" fill="rgb(232,150,33)" fg:x="728" fg:w="1"/><text x="58.3970%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2268%" y="517" width="0.0799%" height="15" fill="rgb(233,76,25)" fg:x="729" fg:w="1"/><text x="58.4768%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (49 samples, 3.91%)</title><rect x="54.7923%" y="565" width="3.9137%" height="15" fill="rgb(254,219,23)" fg:x="686" fg:w="49"/><text x="55.0423%" y="575.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (49 samples, 3.91%)</title><rect x="54.7923%" y="549" width="3.9137%" height="15" fill="rgb(233,108,4)" fg:x="686" fg:w="49"/><text x="55.0423%" y="559.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.88%)</title><rect x="55.8307%" y="533" width="2.8754%" height="15" fill="rgb(229,98,6)" fg:x="699" fg:w="36"/><text x="56.0807%" y="543.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="58.3067%" y="517" width="0.3994%" height="15" fill="rgb(217,40,27)" fg:x="730" fg:w="5"/><text x="58.5567%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="58.3866%" y="501" width="0.3195%" height="15" fill="rgb(221,35,43)" fg:x="731" fg:w="4"/><text x="58.6366%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="58.4665%" y="485" width="0.2396%" height="15" fill="rgb(212,107,11)" fg:x="732" fg:w="3"/><text x="58.7165%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.9457%" y="453" width="0.0799%" height="15" fill="rgb(245,42,44)" fg:x="738" fg:w="1"/><text x="59.1957%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.2652%" y="373" width="0.0799%" height="15" fill="rgb(209,31,12)" fg:x="742" fg:w="1"/><text x="59.5152%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="59.1853%" y="389" width="0.2396%" height="15" fill="rgb(210,228,54)" fg:x="741" fg:w="3"/><text x="59.4353%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3450%" y="373" width="0.0799%" height="15" fill="rgb(241,19,33)" fg:x="743" fg:w="1"/><text x="59.5950%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.4249%" y="389" width="0.0799%" height="15" fill="rgb(229,51,27)" fg:x="744" fg:w="1"/><text x="59.6749%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="59.1054%" y="421" width="0.4792%" height="15" fill="rgb(214,167,49)" fg:x="740" fg:w="6"/><text x="59.3554%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="59.1054%" y="405" width="0.4792%" height="15" fill="rgb(248,140,47)" fg:x="740" fg:w="6"/><text x="59.3554%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5048%" y="389" width="0.0799%" height="15" fill="rgb(228,6,51)" fg:x="745" fg:w="1"/><text x="59.7548%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.6645%" y="341" width="0.0799%" height="15" fill="rgb(242,44,53)" fg:x="747" fg:w="1"/><text x="59.9145%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.6645%" y="325" width="0.0799%" height="15" fill="rgb(249,90,50)" fg:x="747" fg:w="1"/><text x="59.9145%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.6645%" y="309" width="0.0799%" height="15" fill="rgb(222,84,19)" fg:x="747" fg:w="1"/><text x="59.9145%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="59.7444%" y="341" width="0.2396%" height="15" fill="rgb(214,140,12)" fg:x="748" fg:w="3"/><text x="59.9944%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.9042%" y="325" width="0.0799%" height="15" fill="rgb(210,20,43)" fg:x="750" fg:w="1"/><text x="60.1542%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="59.5847%" y="405" width="0.4792%" height="15" fill="rgb(243,1,40)" fg:x="746" fg:w="6"/><text x="59.8347%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="59.6645%" y="389" width="0.3994%" height="15" fill="rgb(224,102,26)" fg:x="747" fg:w="5"/><text x="59.9145%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="59.6645%" y="373" width="0.3994%" height="15" fill="rgb(221,179,1)" fg:x="747" fg:w="5"/><text x="59.9145%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="59.6645%" y="357" width="0.3994%" height="15" fill="rgb(216,209,47)" fg:x="747" fg:w="5"/><text x="59.9145%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9840%" y="341" width="0.0799%" height="15" fill="rgb(251,135,9)" fg:x="751" fg:w="1"/><text x="60.2340%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9840%" y="325" width="0.0799%" height="15" fill="rgb(242,9,36)" fg:x="751" fg:w="1"/><text x="60.2340%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.9840%" y="309" width="0.0799%" height="15" fill="rgb(249,60,37)" fg:x="751" fg:w="1"/><text x="60.2340%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.28%)</title><rect x="58.8658%" y="469" width="1.2780%" height="15" fill="rgb(230,66,45)" fg:x="737" fg:w="16"/><text x="59.1158%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="59.0256%" y="453" width="1.1182%" height="15" fill="rgb(216,1,47)" fg:x="739" fg:w="14"/><text x="59.2756%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="59.1054%" y="437" width="1.0383%" height="15" fill="rgb(235,8,23)" fg:x="740" fg:w="13"/><text x="59.3554%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="59.5847%" y="421" width="0.5591%" height="15" fill="rgb(225,136,11)" fg:x="746" fg:w="7"/><text x="59.8347%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.0639%" y="405" width="0.0799%" height="15" fill="rgb(228,63,44)" fg:x="752" fg:w="1"/><text x="60.3139%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.0639%" y="389" width="0.0799%" height="15" fill="rgb(240,43,52)" fg:x="752" fg:w="1"/><text x="60.3139%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0639%" y="373" width="0.0799%" height="15" fill="rgb(217,167,36)" fg:x="752" fg:w="1"/><text x="60.3139%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="58.7859%" y="501" width="1.4377%" height="15" fill="rgb(250,19,6)" fg:x="736" fg:w="18"/><text x="59.0359%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="58.8658%" y="485" width="1.3578%" height="15" fill="rgb(236,60,51)" fg:x="737" fg:w="17"/><text x="59.1158%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.1438%" y="469" width="0.0799%" height="15" fill="rgb(222,217,20)" fg:x="753" fg:w="1"/><text x="60.3938%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.1438%" y="453" width="0.0799%" height="15" fill="rgb(242,65,52)" fg:x="753" fg:w="1"/><text x="60.3938%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1438%" y="437" width="0.0799%" height="15" fill="rgb(217,5,41)" fg:x="753" fg:w="1"/><text x="60.3938%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.2236%" y="501" width="0.0799%" height="15" fill="rgb(223,208,53)" fg:x="754" fg:w="1"/><text x="60.4736%" y="511.50"></text></g><g><title>engine::session::Session::close (163 samples, 13.02%)</title><rect x="47.3642%" y="661" width="13.0192%" height="15" fill="rgb(221,104,30)" fg:x="593" fg:w="163"/><text x="47.6142%" y="671.50">engine::session::Ses..</text></g><g><title>engine::session::state::State::close (158 samples, 12.62%)</title><rect x="47.7636%" y="645" width="12.6198%" height="15" fill="rgb(230,210,42)" fg:x="598" fg:w="158"/><text x="48.0136%" y="655.50">engine::session::st..</text></g><g><title>engine::session::state::State::flush_entities (158 samples, 12.62%)</title><rect x="47.7636%" y="629" width="12.6198%" height="15" fill="rgb(206,205,27)" fg:x="598" fg:w="158"/><text x="48.0136%" y="639.50">engine::session::st..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (155 samples, 12.38%)</title><rect x="48.0032%" y="613" width="12.3802%" height="15" fill="rgb(233,114,38)" fg:x="601" fg:w="155"/><text x="48.2532%" y="623.50">engine::session::i..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (154 samples, 12.30%)</title><rect x="48.0831%" y="597" width="12.3003%" height="15" fill="rgb(216,174,36)" fg:x="602" fg:w="154"/><text x="48.3331%" y="607.50">engine::session::s..</text></g><g><title>kernel::model::any_entity_changes (89 samples, 7.11%)</title><rect x="53.2748%" y="581" width="7.1086%" height="15" fill="rgb(211,30,9)" fg:x="667" fg:w="89"/><text x="53.5248%" y="591.50">kernel::mo..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (21 samples, 1.68%)</title><rect x="58.7061%" y="565" width="1.6773%" height="15" fill="rgb(216,8,21)" fg:x="735" fg:w="21"/><text x="58.9561%" y="575.50"></text></g><g><title>serde_json::de::from_trait (21 samples, 1.68%)</title><rect x="58.7061%" y="549" width="1.6773%" height="15" fill="rgb(237,209,39)" fg:x="735" fg:w="21"/><text x="58.9561%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 1.68%)</title><rect x="58.7061%" y="533" width="1.6773%" height="15" fill="rgb(235,111,47)" fg:x="735" fg:w="21"/><text x="58.9561%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.68%)</title><rect x="58.7061%" y="517" width="1.6773%" height="15" fill="rgb(216,139,9)" fg:x="735" fg:w="21"/><text x="58.9561%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3035%" y="501" width="0.0799%" height="15" fill="rgb(248,185,4)" fg:x="755" fg:w="1"/><text x="60.5535%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3035%" y="485" width="0.0799%" height="15" fill="rgb(239,185,25)" fg:x="755" fg:w="1"/><text x="60.5535%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3035%" y="469" width="0.0799%" height="15" fill="rgb(233,207,8)" fg:x="755" fg:w="1"/><text x="60.5535%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="60.3834%" y="533" width="0.0799%" height="15" fill="rgb(249,220,24)" fg:x="756" fg:w="1"/><text x="60.6334%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="60.3834%" y="517" width="0.0799%" height="15" fill="rgb(221,50,14)" fg:x="756" fg:w="1"/><text x="60.6334%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="60.3834%" y="501" width="0.0799%" height="15" fill="rgb(227,79,42)" fg:x="756" fg:w="1"/><text x="60.6334%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="60.3834%" y="485" width="0.0799%" height="15" fill="rgb(228,218,49)" fg:x="756" fg:w="1"/><text x="60.6334%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.3834%" y="469" width="0.0799%" height="15" fill="rgb(249,18,15)" fg:x="756" fg:w="1"/><text x="60.6334%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="60.6230%" y="421" width="0.0799%" height="15" fill="rgb(212,84,27)" fg:x="759" fg:w="1"/><text x="60.8730%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="60.6230%" y="405" width="0.0799%" height="15" fill="rgb(207,83,24)" fg:x="759" fg:w="1"/><text x="60.8730%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.6230%" y="389" width="0.0799%" height="15" fill="rgb(219,61,7)" fg:x="759" fg:w="1"/><text x="60.8730%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.6230%" y="373" width="0.0799%" height="15" fill="rgb(211,43,29)" fg:x="759" fg:w="1"/><text x="60.8730%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6230%" y="357" width="0.0799%" height="15" fill="rgb(243,15,23)" fg:x="759" fg:w="1"/><text x="60.8730%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.6230%" y="341" width="0.0799%" height="15" fill="rgb(217,52,28)" fg:x="759" fg:w="1"/><text x="60.8730%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6230%" y="325" width="0.0799%" height="15" fill="rgb(210,35,6)" fg:x="759" fg:w="1"/><text x="60.8730%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.6230%" y="309" width="0.0799%" height="15" fill="rgb(237,187,28)" fg:x="759" fg:w="1"/><text x="60.8730%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.6230%" y="293" width="0.0799%" height="15" fill="rgb(231,136,24)" fg:x="759" fg:w="1"/><text x="60.8730%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.6230%" y="277" width="0.0799%" height="15" fill="rgb(205,176,52)" fg:x="759" fg:w="1"/><text x="60.8730%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7029%" y="373" width="0.0799%" height="15" fill="rgb(218,65,12)" fg:x="760" fg:w="1"/><text x="60.9529%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7029%" y="357" width="0.0799%" height="15" fill="rgb(234,101,21)" fg:x="760" fg:w="1"/><text x="60.9529%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7029%" y="341" width="0.0799%" height="15" fill="rgb(206,13,20)" fg:x="760" fg:w="1"/><text x="60.9529%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7029%" y="325" width="0.0799%" height="15" fill="rgb(236,89,44)" fg:x="760" fg:w="1"/><text x="60.9529%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7029%" y="309" width="0.0799%" height="15" fill="rgb(225,52,17)" fg:x="760" fg:w="1"/><text x="60.9529%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7029%" y="293" width="0.0799%" height="15" fill="rgb(214,27,25)" fg:x="760" fg:w="1"/><text x="60.9529%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7029%" y="277" width="0.0799%" height="15" fill="rgb(240,141,35)" fg:x="760" fg:w="1"/><text x="60.9529%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.7029%" y="261" width="0.0799%" height="15" fill="rgb(216,126,3)" fg:x="760" fg:w="1"/><text x="60.9529%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.7029%" y="245" width="0.0799%" height="15" fill="rgb(249,196,23)" fg:x="760" fg:w="1"/><text x="60.9529%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.7029%" y="229" width="0.0799%" height="15" fill="rgb(215,185,43)" fg:x="760" fg:w="1"/><text x="60.9529%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7029%" y="213" width="0.0799%" height="15" fill="rgb(208,194,36)" fg:x="760" fg:w="1"/><text x="60.9529%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7029%" y="197" width="0.0799%" height="15" fill="rgb(245,182,12)" fg:x="760" fg:w="1"/><text x="60.9529%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.7029%" y="181" width="0.0799%" height="15" fill="rgb(244,222,52)" fg:x="760" fg:w="1"/><text x="60.9529%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.7029%" y="165" width="0.0799%" height="15" fill="rgb(236,222,51)" fg:x="760" fg:w="1"/><text x="60.9529%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.7029%" y="149" width="0.0799%" height="15" fill="rgb(254,71,22)" fg:x="760" fg:w="1"/><text x="60.9529%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.7029%" y="133" width="0.0799%" height="15" fill="rgb(250,104,15)" fg:x="760" fg:w="1"/><text x="60.9529%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7029%" y="117" width="0.0799%" height="15" fill="rgb(229,223,46)" fg:x="760" fg:w="1"/><text x="60.9529%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.7827%" y="277" width="0.0799%" height="15" fill="rgb(209,129,18)" fg:x="761" fg:w="1"/><text x="61.0327%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="60.6230%" y="453" width="0.3195%" height="15" fill="rgb(224,160,1)" fg:x="759" fg:w="4"/><text x="60.8730%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="60.6230%" y="437" width="0.3195%" height="15" fill="rgb(237,112,21)" fg:x="759" fg:w="4"/><text x="60.8730%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="60.7029%" y="421" width="0.2396%" height="15" fill="rgb(215,198,53)" fg:x="760" fg:w="3"/><text x="60.9529%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="60.7029%" y="405" width="0.2396%" height="15" fill="rgb(218,227,35)" fg:x="760" fg:w="3"/><text x="60.9529%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="60.7029%" y="389" width="0.2396%" height="15" fill="rgb(232,121,22)" fg:x="760" fg:w="3"/><text x="60.9529%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.7827%" y="373" width="0.1597%" height="15" fill="rgb(235,52,54)" fg:x="761" fg:w="2"/><text x="61.0327%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.7827%" y="357" width="0.1597%" height="15" fill="rgb(219,21,44)" fg:x="761" fg:w="2"/><text x="61.0327%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.7827%" y="341" width="0.1597%" height="15" fill="rgb(221,51,43)" fg:x="761" fg:w="2"/><text x="61.0327%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.7827%" y="325" width="0.1597%" height="15" fill="rgb(225,77,42)" fg:x="761" fg:w="2"/><text x="61.0327%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.7827%" y="309" width="0.1597%" height="15" fill="rgb(214,117,53)" fg:x="761" fg:w="2"/><text x="61.0327%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.7827%" y="293" width="0.1597%" height="15" fill="rgb(218,227,27)" fg:x="761" fg:w="2"/><text x="61.0327%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8626%" y="277" width="0.0799%" height="15" fill="rgb(223,214,36)" fg:x="762" fg:w="1"/><text x="61.1126%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8626%" y="261" width="0.0799%" height="15" fill="rgb(235,21,7)" fg:x="762" fg:w="1"/><text x="61.1126%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8626%" y="245" width="0.0799%" height="15" fill="rgb(244,216,4)" fg:x="762" fg:w="1"/><text x="61.1126%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8626%" y="229" width="0.0799%" height="15" fill="rgb(249,197,24)" fg:x="762" fg:w="1"/><text x="61.1126%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0224%" y="357" width="0.0799%" height="15" fill="rgb(222,169,49)" fg:x="764" fg:w="1"/><text x="61.2724%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0224%" y="341" width="0.0799%" height="15" fill="rgb(207,137,33)" fg:x="764" fg:w="1"/><text x="61.2724%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0224%" y="325" width="0.0799%" height="15" fill="rgb(219,180,40)" fg:x="764" fg:w="1"/><text x="61.2724%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.1821%" y="325" width="0.0799%" height="15" fill="rgb(250,163,42)" fg:x="766" fg:w="1"/><text x="61.4321%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1821%" y="309" width="0.0799%" height="15" fill="rgb(239,163,0)" fg:x="766" fg:w="1"/><text x="61.4321%" y="319.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="60.9425%" y="437" width="0.4792%" height="15" fill="rgb(252,38,28)" fg:x="763" fg:w="6"/><text x="61.1925%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="60.9425%" y="421" width="0.4792%" height="15" fill="rgb(254,203,26)" fg:x="763" fg:w="6"/><text x="61.1925%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="60.9425%" y="405" width="0.4792%" height="15" fill="rgb(209,129,32)" fg:x="763" fg:w="6"/><text x="61.1925%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="60.9425%" y="389" width="0.4792%" height="15" fill="rgb(207,177,52)" fg:x="763" fg:w="6"/><text x="61.1925%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="60.9425%" y="373" width="0.4792%" height="15" fill="rgb(230,209,36)" fg:x="763" fg:w="6"/><text x="61.1925%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="61.1022%" y="357" width="0.3195%" height="15" fill="rgb(238,131,0)" fg:x="765" fg:w="4"/><text x="61.3522%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.1022%" y="341" width="0.3195%" height="15" fill="rgb(218,61,31)" fg:x="765" fg:w="4"/><text x="61.3522%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.2620%" y="325" width="0.1597%" height="15" fill="rgb(232,6,53)" fg:x="767" fg:w="2"/><text x="61.5120%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.2620%" y="309" width="0.1597%" height="15" fill="rgb(254,100,32)" fg:x="767" fg:w="2"/><text x="61.5120%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.3419%" y="293" width="0.0799%" height="15" fill="rgb(229,194,49)" fg:x="768" fg:w="1"/><text x="61.5919%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.3419%" y="277" width="0.0799%" height="15" fill="rgb(206,208,39)" fg:x="768" fg:w="1"/><text x="61.5919%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.3419%" y="261" width="0.0799%" height="15" fill="rgb(246,226,14)" fg:x="768" fg:w="1"/><text x="61.5919%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5016%" y="405" width="0.0799%" height="15" fill="rgb(226,48,32)" fg:x="770" fg:w="1"/><text x="61.7516%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.5815%" y="373" width="0.1597%" height="15" fill="rgb(252,43,54)" fg:x="771" fg:w="2"/><text x="61.8315%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.6613%" y="357" width="0.0799%" height="15" fill="rgb(207,124,0)" fg:x="772" fg:w="1"/><text x="61.9113%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.7412%" y="357" width="0.1597%" height="15" fill="rgb(248,188,30)" fg:x="773" fg:w="2"/><text x="61.9912%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.7412%" y="341" width="0.1597%" height="15" fill="rgb(232,14,43)" fg:x="773" fg:w="2"/><text x="61.9912%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.8211%" y="325" width="0.0799%" height="15" fill="rgb(218,52,29)" fg:x="774" fg:w="1"/><text x="62.0711%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.8211%" y="309" width="0.0799%" height="15" fill="rgb(218,176,50)" fg:x="774" fg:w="1"/><text x="62.0711%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.8211%" y="293" width="0.0799%" height="15" fill="rgb(213,112,0)" fg:x="774" fg:w="1"/><text x="62.0711%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.8211%" y="277" width="0.0799%" height="15" fill="rgb(244,216,8)" fg:x="774" fg:w="1"/><text x="62.0711%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8211%" y="261" width="0.0799%" height="15" fill="rgb(224,148,53)" fg:x="774" fg:w="1"/><text x="62.0711%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8211%" y="245" width="0.0799%" height="15" fill="rgb(241,133,40)" fg:x="774" fg:w="1"/><text x="62.0711%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.9010%" y="341" width="0.0799%" height="15" fill="rgb(232,17,44)" fg:x="775" fg:w="1"/><text x="62.1510%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.9010%" y="325" width="0.0799%" height="15" fill="rgb(213,32,25)" fg:x="775" fg:w="1"/><text x="62.1510%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="62.0607%" y="309" width="0.0799%" height="15" fill="rgb(249,115,27)" fg:x="777" fg:w="1"/><text x="62.3107%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="62.0607%" y="293" width="0.0799%" height="15" fill="rgb(241,50,1)" fg:x="777" fg:w="1"/><text x="62.3107%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0607%" y="277" width="0.0799%" height="15" fill="rgb(244,175,40)" fg:x="777" fg:w="1"/><text x="62.3107%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.0607%" y="261" width="0.0799%" height="15" fill="rgb(230,94,34)" fg:x="777" fg:w="1"/><text x="62.3107%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="61.5815%" y="405" width="0.6390%" height="15" fill="rgb(223,185,29)" fg:x="771" fg:w="8"/><text x="61.8315%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="61.5815%" y="389" width="0.6390%" height="15" fill="rgb(225,193,15)" fg:x="771" fg:w="8"/><text x="61.8315%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="61.7412%" y="373" width="0.4792%" height="15" fill="rgb(252,121,38)" fg:x="773" fg:w="6"/><text x="61.9912%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="61.9010%" y="357" width="0.3195%" height="15" fill="rgb(232,44,12)" fg:x="775" fg:w="4"/><text x="62.1510%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.9808%" y="341" width="0.2396%" height="15" fill="rgb(226,45,54)" fg:x="776" fg:w="3"/><text x="62.2308%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="62.0607%" y="325" width="0.1597%" height="15" fill="rgb(209,67,17)" fg:x="777" fg:w="2"/><text x="62.3107%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1406%" y="309" width="0.0799%" height="15" fill="rgb(219,108,52)" fg:x="778" fg:w="1"/><text x="62.3906%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.1406%" y="293" width="0.0799%" height="15" fill="rgb(216,118,19)" fg:x="778" fg:w="1"/><text x="62.3906%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="62.1406%" y="277" width="0.0799%" height="15" fill="rgb(228,120,40)" fg:x="778" fg:w="1"/><text x="62.3906%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1406%" y="261" width="0.0799%" height="15" fill="rgb(221,218,34)" fg:x="778" fg:w="1"/><text x="62.3906%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.1406%" y="245" width="0.0799%" height="15" fill="rgb(235,89,14)" fg:x="778" fg:w="1"/><text x="62.3906%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.1406%" y="229" width="0.0799%" height="15" fill="rgb(248,89,7)" fg:x="778" fg:w="1"/><text x="62.3906%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (17 samples, 1.36%)</title><rect x="60.9425%" y="453" width="1.3578%" height="15" fill="rgb(212,114,34)" fg:x="763" fg:w="17"/><text x="61.1925%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="61.4217%" y="437" width="0.8786%" height="15" fill="rgb(246,88,32)" fg:x="769" fg:w="11"/><text x="61.6717%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="61.4217%" y="421" width="0.8786%" height="15" fill="rgb(237,135,0)" fg:x="769" fg:w="11"/><text x="61.6717%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2204%" y="405" width="0.0799%" height="15" fill="rgb(220,201,54)" fg:x="779" fg:w="1"/><text x="62.4704%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2204%" y="389" width="0.0799%" height="15" fill="rgb(210,142,36)" fg:x="779" fg:w="1"/><text x="62.4704%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2204%" y="373" width="0.0799%" height="15" fill="rgb(247,189,26)" fg:x="779" fg:w="1"/><text x="62.4704%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="62.3003%" y="437" width="0.0799%" height="15" fill="rgb(223,89,24)" fg:x="780" fg:w="1"/><text x="62.5503%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.3003%" y="421" width="0.0799%" height="15" fill="rgb(205,90,19)" fg:x="780" fg:w="1"/><text x="62.5503%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3802%" y="341" width="0.0799%" height="15" fill="rgb(234,57,40)" fg:x="781" fg:w="1"/><text x="62.6302%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3802%" y="325" width="0.0799%" height="15" fill="rgb(213,109,10)" fg:x="781" fg:w="1"/><text x="62.6302%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3802%" y="309" width="0.0799%" height="15" fill="rgb(214,189,23)" fg:x="781" fg:w="1"/><text x="62.6302%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3802%" y="293" width="0.0799%" height="15" fill="rgb(234,200,10)" fg:x="781" fg:w="1"/><text x="62.6302%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3802%" y="277" width="0.0799%" height="15" fill="rgb(221,148,16)" fg:x="781" fg:w="1"/><text x="62.6302%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3802%" y="261" width="0.0799%" height="15" fill="rgb(230,115,10)" fg:x="781" fg:w="1"/><text x="62.6302%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.3802%" y="245" width="0.0799%" height="15" fill="rgb(220,106,42)" fg:x="781" fg:w="1"/><text x="62.6302%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.3802%" y="229" width="0.0799%" height="15" fill="rgb(225,105,39)" fg:x="781" fg:w="1"/><text x="62.6302%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.3802%" y="213" width="0.0799%" height="15" fill="rgb(211,161,38)" fg:x="781" fg:w="1"/><text x="62.6302%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.3802%" y="197" width="0.0799%" height="15" fill="rgb(213,23,19)" fg:x="781" fg:w="1"/><text x="62.6302%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.3802%" y="181" width="0.0799%" height="15" fill="rgb(240,2,33)" fg:x="781" fg:w="1"/><text x="62.6302%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3802%" y="405" width="0.1597%" height="15" fill="rgb(221,29,45)" fg:x="781" fg:w="2"/><text x="62.6302%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3802%" y="389" width="0.1597%" height="15" fill="rgb(242,10,19)" fg:x="781" fg:w="2"/><text x="62.6302%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3802%" y="373" width="0.1597%" height="15" fill="rgb(250,84,37)" fg:x="781" fg:w="2"/><text x="62.6302%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3802%" y="357" width="0.1597%" height="15" fill="rgb(214,136,7)" fg:x="781" fg:w="2"/><text x="62.6302%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.4601%" y="341" width="0.0799%" height="15" fill="rgb(231,189,12)" fg:x="782" fg:w="1"/><text x="62.7101%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.6198%" y="309" width="0.0799%" height="15" fill="rgb(244,40,16)" fg:x="784" fg:w="1"/><text x="62.8698%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.32%)</title><rect x="60.6230%" y="469" width="2.3163%" height="15" fill="rgb(217,29,15)" fg:x="759" fg:w="29"/><text x="60.8730%" y="479.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="62.3003%" y="453" width="0.6390%" height="15" fill="rgb(235,172,33)" fg:x="780" fg:w="8"/><text x="62.5503%" y="463.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="62.3802%" y="437" width="0.5591%" height="15" fill="rgb(206,148,28)" fg:x="781" fg:w="7"/><text x="62.6302%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="62.3802%" y="421" width="0.5591%" height="15" fill="rgb(251,167,37)" fg:x="781" fg:w="7"/><text x="62.6302%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.5399%" y="405" width="0.3994%" height="15" fill="rgb(229,94,52)" fg:x="783" fg:w="5"/><text x="62.7899%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.5399%" y="389" width="0.3994%" height="15" fill="rgb(216,132,9)" fg:x="783" fg:w="5"/><text x="62.7899%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.5399%" y="373" width="0.3994%" height="15" fill="rgb(208,110,29)" fg:x="783" fg:w="5"/><text x="62.7899%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.5399%" y="357" width="0.3994%" height="15" fill="rgb(241,23,8)" fg:x="783" fg:w="5"/><text x="62.7899%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="62.6198%" y="341" width="0.3195%" height="15" fill="rgb(208,26,35)" fg:x="784" fg:w="4"/><text x="62.8698%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.6198%" y="325" width="0.3195%" height="15" fill="rgb(242,165,34)" fg:x="784" fg:w="4"/><text x="62.8698%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.6997%" y="309" width="0.2396%" height="15" fill="rgb(222,222,33)" fg:x="785" fg:w="3"/><text x="62.9497%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.6997%" y="293" width="0.2396%" height="15" fill="rgb(227,16,52)" fg:x="785" fg:w="3"/><text x="62.9497%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.6997%" y="277" width="0.2396%" height="15" fill="rgb(213,93,12)" fg:x="785" fg:w="3"/><text x="62.9497%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.6997%" y="261" width="0.2396%" height="15" fill="rgb(238,41,5)" fg:x="785" fg:w="3"/><text x="62.9497%" y="271.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="62.8594%" y="245" width="0.0799%" height="15" fill="rgb(211,60,15)" fg:x="787" fg:w="1"/><text x="63.1094%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (30 samples, 2.40%)</title><rect x="60.6230%" y="485" width="2.3962%" height="15" fill="rgb(209,11,34)" fg:x="759" fg:w="30"/><text x="60.8730%" y="495.50">&lt;e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="62.9393%" y="469" width="0.0799%" height="15" fill="rgb(254,155,53)" fg:x="788" fg:w="1"/><text x="63.1893%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.9393%" y="453" width="0.0799%" height="15" fill="rgb(236,174,8)" fg:x="788" fg:w="1"/><text x="63.1893%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.9393%" y="437" width="0.0799%" height="15" fill="rgb(229,31,27)" fg:x="788" fg:w="1"/><text x="63.1893%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0192%" y="485" width="0.0799%" height="15" fill="rgb(242,226,26)" fg:x="789" fg:w="1"/><text x="63.2692%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (34 samples, 2.72%)</title><rect x="60.6230%" y="501" width="2.7157%" height="15" fill="rgb(234,32,40)" fg:x="759" fg:w="34"/><text x="60.8730%" y="511.50">&lt;e..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (3 samples, 0.24%)</title><rect x="63.0990%" y="485" width="0.2396%" height="15" fill="rgb(249,226,47)" fg:x="790" fg:w="3"/><text x="63.3490%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.1789%" y="469" width="0.1597%" height="15" fill="rgb(212,6,26)" fg:x="791" fg:w="2"/><text x="63.4289%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2588%" y="453" width="0.0799%" height="15" fill="rgb(249,202,29)" fg:x="792" fg:w="1"/><text x="63.5088%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.2588%" y="437" width="0.0799%" height="15" fill="rgb(226,106,4)" fg:x="792" fg:w="1"/><text x="63.5088%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.2588%" y="421" width="0.0799%" height="15" fill="rgb(251,2,27)" fg:x="792" fg:w="1"/><text x="63.5088%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.2588%" y="405" width="0.0799%" height="15" fill="rgb(236,208,0)" fg:x="792" fg:w="1"/><text x="63.5088%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2588%" y="389" width="0.0799%" height="15" fill="rgb(211,66,17)" fg:x="792" fg:w="1"/><text x="63.5088%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2588%" y="373" width="0.0799%" height="15" fill="rgb(216,129,9)" fg:x="792" fg:w="1"/><text x="63.5088%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.2588%" y="357" width="0.0799%" height="15" fill="rgb(215,130,23)" fg:x="792" fg:w="1"/><text x="63.5088%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.2588%" y="341" width="0.0799%" height="15" fill="rgb(253,157,11)" fg:x="792" fg:w="1"/><text x="63.5088%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.2588%" y="325" width="0.0799%" height="15" fill="rgb(224,25,14)" fg:x="792" fg:w="1"/><text x="63.5088%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.2588%" y="309" width="0.0799%" height="15" fill="rgb(238,16,7)" fg:x="792" fg:w="1"/><text x="63.5088%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.2588%" y="293" width="0.0799%" height="15" fill="rgb(228,74,11)" fg:x="792" fg:w="1"/><text x="63.5088%" y="303.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (38 samples, 3.04%)</title><rect x="60.3834%" y="549" width="3.0351%" height="15" fill="rgb(239,221,27)" fg:x="756" fg:w="38"/><text x="60.6334%" y="559.50">&lt;pl..</text></g><g><title>kernel::model::entry::Entry::scope (37 samples, 2.96%)</title><rect x="60.4633%" y="533" width="2.9553%" height="15" fill="rgb(229,166,18)" fg:x="757" fg:w="37"/><text x="60.7133%" y="543.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (37 samples, 2.96%)</title><rect x="60.4633%" y="517" width="2.9553%" height="15" fill="rgb(254,94,46)" fg:x="757" fg:w="37"/><text x="60.7133%" y="527.50">ker..</text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3387%" y="501" width="0.0799%" height="15" fill="rgb(241,79,19)" fg:x="793" fg:w="1"/><text x="63.5887%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.3387%" y="485" width="0.0799%" height="15" fill="rgb(228,99,51)" fg:x="793" fg:w="1"/><text x="63.5887%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.3387%" y="469" width="0.0799%" height="15" fill="rgb(211,15,6)" fg:x="793" fg:w="1"/><text x="63.5887%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3387%" y="453" width="0.0799%" height="15" fill="rgb(245,107,54)" fg:x="793" fg:w="1"/><text x="63.5887%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3387%" y="437" width="0.0799%" height="15" fill="rgb(243,3,2)" fg:x="793" fg:w="1"/><text x="63.5887%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.3387%" y="421" width="0.0799%" height="15" fill="rgb(206,122,10)" fg:x="793" fg:w="1"/><text x="63.5887%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.3387%" y="405" width="0.0799%" height="15" fill="rgb(224,88,4)" fg:x="793" fg:w="1"/><text x="63.5887%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.3387%" y="389" width="0.0799%" height="15" fill="rgb(230,1,41)" fg:x="793" fg:w="1"/><text x="63.5887%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.3387%" y="373" width="0.0799%" height="15" fill="rgb(230,1,31)" fg:x="793" fg:w="1"/><text x="63.5887%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.3387%" y="357" width="0.0799%" height="15" fill="rgb(232,67,19)" fg:x="793" fg:w="1"/><text x="63.5887%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.3387%" y="341" width="0.0799%" height="15" fill="rgb(222,206,20)" fg:x="793" fg:w="1"/><text x="63.5887%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.3387%" y="325" width="0.0799%" height="15" fill="rgb(217,225,19)" fg:x="793" fg:w="1"/><text x="63.5887%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.3387%" y="309" width="0.0799%" height="15" fill="rgb(234,13,33)" fg:x="793" fg:w="1"/><text x="63.5887%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.3387%" y="293" width="0.0799%" height="15" fill="rgb(254,5,1)" fg:x="793" fg:w="1"/><text x="63.5887%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.3387%" y="277" width="0.0799%" height="15" fill="rgb(211,121,41)" fg:x="793" fg:w="1"/><text x="63.5887%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="63.4185%" y="501" width="0.1597%" height="15" fill="rgb(213,199,35)" fg:x="794" fg:w="2"/><text x="63.6685%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="63.4185%" y="485" width="0.1597%" height="15" fill="rgb(240,118,22)" fg:x="794" fg:w="2"/><text x="63.6685%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.4185%" y="469" width="0.1597%" height="15" fill="rgb(238,184,25)" fg:x="794" fg:w="2"/><text x="63.6685%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.4185%" y="453" width="0.1597%" height="15" fill="rgb(210,165,6)" fg:x="794" fg:w="2"/><text x="63.6685%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.4185%" y="437" width="0.1597%" height="15" fill="rgb(235,149,5)" fg:x="794" fg:w="2"/><text x="63.6685%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.4185%" y="421" width="0.1597%" height="15" fill="rgb(221,63,5)" fg:x="794" fg:w="2"/><text x="63.6685%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.4185%" y="405" width="0.1597%" height="15" fill="rgb(250,44,41)" fg:x="794" fg:w="2"/><text x="63.6685%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.4185%" y="389" width="0.1597%" height="15" fill="rgb(235,112,47)" fg:x="794" fg:w="2"/><text x="63.6685%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="63.4185%" y="373" width="0.1597%" height="15" fill="rgb(252,176,34)" fg:x="794" fg:w="2"/><text x="63.6685%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="63.4185%" y="357" width="0.1597%" height="15" fill="rgb(234,50,19)" fg:x="794" fg:w="2"/><text x="63.6685%" y="367.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (41 samples, 3.27%)</title><rect x="60.3834%" y="565" width="3.2748%" height="15" fill="rgb(241,195,31)" fg:x="756" fg:w="41"/><text x="60.6334%" y="575.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="63.4185%" y="549" width="0.2396%" height="15" fill="rgb(212,93,11)" fg:x="794" fg:w="3"/><text x="63.6685%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="63.4185%" y="533" width="0.2396%" height="15" fill="rgb(254,98,51)" fg:x="794" fg:w="3"/><text x="63.6685%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="63.4185%" y="517" width="0.2396%" height="15" fill="rgb(246,18,45)" fg:x="794" fg:w="3"/><text x="63.6685%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="63.5783%" y="501" width="0.0799%" height="15" fill="rgb(215,148,23)" fg:x="796" fg:w="1"/><text x="63.8283%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6581%" y="565" width="0.0799%" height="15" fill="rgb(227,22,7)" fg:x="797" fg:w="1"/><text x="63.9081%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="63.7380%" y="565" width="0.0799%" height="15" fill="rgb(207,210,37)" fg:x="798" fg:w="1"/><text x="63.9880%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="63.8179%" y="549" width="0.0799%" height="15" fill="rgb(247,147,42)" fg:x="799" fg:w="1"/><text x="64.0679%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="63.8978%" y="421" width="0.0799%" height="15" fill="rgb(226,213,14)" fg:x="800" fg:w="1"/><text x="64.1478%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="63.8978%" y="405" width="0.0799%" height="15" fill="rgb(223,18,10)" fg:x="800" fg:w="1"/><text x="64.1478%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.9776%" y="309" width="0.1597%" height="15" fill="rgb(253,34,22)" fg:x="801" fg:w="2"/><text x="64.2276%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.9776%" y="293" width="0.1597%" height="15" fill="rgb(222,90,31)" fg:x="801" fg:w="2"/><text x="64.2276%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="63.9776%" y="277" width="0.1597%" height="15" fill="rgb(220,182,30)" fg:x="801" fg:w="2"/><text x="64.2276%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="63.9776%" y="261" width="0.1597%" height="15" fill="rgb(229,170,12)" fg:x="801" fg:w="2"/><text x="64.2276%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="63.9776%" y="245" width="0.1597%" height="15" fill="rgb(210,101,21)" fg:x="801" fg:w="2"/><text x="64.2276%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="63.9776%" y="229" width="0.1597%" height="15" fill="rgb(237,177,31)" fg:x="801" fg:w="2"/><text x="64.2276%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.9776%" y="213" width="0.1597%" height="15" fill="rgb(215,91,34)" fg:x="801" fg:w="2"/><text x="64.2276%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (49 samples, 3.91%)</title><rect x="60.3834%" y="629" width="3.9137%" height="15" fill="rgb(229,206,16)" fg:x="756" fg:w="49"/><text x="60.6334%" y="639.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::apply_middleware (49 samples, 3.91%)</title><rect x="60.3834%" y="613" width="3.9137%" height="15" fill="rgb(235,207,10)" fg:x="756" fg:w="49"/><text x="60.6334%" y="623.50">kern..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (49 samples, 3.91%)</title><rect x="60.3834%" y="597" width="3.9137%" height="15" fill="rgb(247,18,10)" fg:x="756" fg:w="49"/><text x="60.6334%" y="607.50">kern..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (49 samples, 3.91%)</title><rect x="60.3834%" y="581" width="3.9137%" height="15" fill="rgb(232,4,6)" fg:x="756" fg:w="49"/><text x="60.6334%" y="591.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (6 samples, 0.48%)</title><rect x="63.8179%" y="565" width="0.4792%" height="15" fill="rgb(247,93,45)" fg:x="799" fg:w="6"/><text x="64.0679%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (5 samples, 0.40%)</title><rect x="63.8978%" y="549" width="0.3994%" height="15" fill="rgb(240,181,18)" fg:x="800" fg:w="5"/><text x="64.1478%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="63.8978%" y="533" width="0.3994%" height="15" fill="rgb(208,224,0)" fg:x="800" fg:w="5"/><text x="64.1478%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.40%)</title><rect x="63.8978%" y="517" width="0.3994%" height="15" fill="rgb(224,207,54)" fg:x="800" fg:w="5"/><text x="64.1478%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (5 samples, 0.40%)</title><rect x="63.8978%" y="501" width="0.3994%" height="15" fill="rgb(217,152,29)" fg:x="800" fg:w="5"/><text x="64.1478%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.40%)</title><rect x="63.8978%" y="485" width="0.3994%" height="15" fill="rgb(243,78,27)" fg:x="800" fg:w="5"/><text x="64.1478%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.40%)</title><rect x="63.8978%" y="469" width="0.3994%" height="15" fill="rgb(228,111,9)" fg:x="800" fg:w="5"/><text x="64.1478%" y="479.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (5 samples, 0.40%)</title><rect x="63.8978%" y="453" width="0.3994%" height="15" fill="rgb(230,213,21)" fg:x="800" fg:w="5"/><text x="64.1478%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (5 samples, 0.40%)</title><rect x="63.8978%" y="437" width="0.3994%" height="15" fill="rgb(248,50,36)" fg:x="800" fg:w="5"/><text x="64.1478%" y="447.50"></text></g><g><title>kernel::surround::Surroundings::unpack (4 samples, 0.32%)</title><rect x="63.9776%" y="421" width="0.3195%" height="15" fill="rgb(226,19,31)" fg:x="801" fg:w="4"/><text x="64.2276%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.9776%" y="405" width="0.3195%" height="15" fill="rgb(205,132,21)" fg:x="801" fg:w="4"/><text x="64.2276%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.9776%" y="389" width="0.3195%" height="15" fill="rgb(207,42,19)" fg:x="801" fg:w="4"/><text x="64.2276%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.9776%" y="373" width="0.3195%" height="15" fill="rgb(229,69,35)" fg:x="801" fg:w="4"/><text x="64.2276%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="63.9776%" y="357" width="0.3195%" height="15" fill="rgb(226,96,11)" fg:x="801" fg:w="4"/><text x="64.2276%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="63.9776%" y="341" width="0.3195%" height="15" fill="rgb(236,133,54)" fg:x="801" fg:w="4"/><text x="64.2276%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="63.9776%" y="325" width="0.3195%" height="15" fill="rgb(247,166,21)" fg:x="801" fg:w="4"/><text x="64.2276%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="64.1374%" y="309" width="0.1597%" height="15" fill="rgb(220,132,12)" fg:x="803" fg:w="2"/><text x="64.3874%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="64.1374%" y="293" width="0.1597%" height="15" fill="rgb(233,27,30)" fg:x="803" fg:w="2"/><text x="64.3874%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="64.4569%" y="597" width="0.0799%" height="15" fill="rgb(246,161,27)" fg:x="807" fg:w="1"/><text x="64.7069%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4569%" y="581" width="0.0799%" height="15" fill="rgb(240,56,3)" fg:x="807" fg:w="1"/><text x="64.7069%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4569%" y="565" width="0.0799%" height="15" fill="rgb(242,190,9)" fg:x="807" fg:w="1"/><text x="64.7069%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.4569%" y="549" width="0.0799%" height="15" fill="rgb(234,3,52)" fg:x="807" fg:w="1"/><text x="64.7069%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.4569%" y="533" width="0.0799%" height="15" fill="rgb(220,221,19)" fg:x="807" fg:w="1"/><text x="64.7069%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.4569%" y="517" width="0.0799%" height="15" fill="rgb(247,178,30)" fg:x="807" fg:w="1"/><text x="64.7069%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4569%" y="501" width="0.0799%" height="15" fill="rgb(234,212,27)" fg:x="807" fg:w="1"/><text x="64.7069%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4569%" y="485" width="0.0799%" height="15" fill="rgb(226,199,38)" fg:x="807" fg:w="1"/><text x="64.7069%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.4569%" y="469" width="0.0799%" height="15" fill="rgb(248,114,22)" fg:x="807" fg:w="1"/><text x="64.7069%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.4569%" y="453" width="0.0799%" height="15" fill="rgb(221,180,4)" fg:x="807" fg:w="1"/><text x="64.7069%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.4569%" y="437" width="0.0799%" height="15" fill="rgb(220,229,24)" fg:x="807" fg:w="1"/><text x="64.7069%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.4569%" y="421" width="0.0799%" height="15" fill="rgb(226,184,27)" fg:x="807" fg:w="1"/><text x="64.7069%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4569%" y="405" width="0.0799%" height="15" fill="rgb(232,99,15)" fg:x="807" fg:w="1"/><text x="64.7069%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.5367%" y="581" width="0.0799%" height="15" fill="rgb(250,167,16)" fg:x="808" fg:w="1"/><text x="64.7867%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.5367%" y="565" width="0.0799%" height="15" fill="rgb(243,113,6)" fg:x="808" fg:w="1"/><text x="64.7867%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.5367%" y="549" width="0.0799%" height="15" fill="rgb(244,147,52)" fg:x="808" fg:w="1"/><text x="64.7867%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.5367%" y="533" width="0.0799%" height="15" fill="rgb(235,59,50)" fg:x="808" fg:w="1"/><text x="64.7867%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.5367%" y="517" width="0.0799%" height="15" fill="rgb(250,188,6)" fg:x="808" fg:w="1"/><text x="64.7867%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.5367%" y="501" width="0.0799%" height="15" fill="rgb(236,173,11)" fg:x="808" fg:w="1"/><text x="64.7867%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.5367%" y="485" width="0.0799%" height="15" fill="rgb(233,64,3)" fg:x="808" fg:w="1"/><text x="64.7867%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.5367%" y="469" width="0.0799%" height="15" fill="rgb(207,92,7)" fg:x="808" fg:w="1"/><text x="64.7867%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.5367%" y="453" width="0.0799%" height="15" fill="rgb(221,30,19)" fg:x="808" fg:w="1"/><text x="64.7867%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.5367%" y="437" width="0.0799%" height="15" fill="rgb(245,22,49)" fg:x="808" fg:w="1"/><text x="64.7867%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.5367%" y="421" width="0.0799%" height="15" fill="rgb(218,39,20)" fg:x="808" fg:w="1"/><text x="64.7867%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.5367%" y="405" width="0.0799%" height="15" fill="rgb(222,144,21)" fg:x="808" fg:w="1"/><text x="64.7867%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.5367%" y="389" width="0.0799%" height="15" fill="rgb(222,78,51)" fg:x="808" fg:w="1"/><text x="64.7867%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.6166%" y="549" width="0.0799%" height="15" fill="rgb(248,213,53)" fg:x="809" fg:w="1"/><text x="64.8666%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.6166%" y="533" width="0.0799%" height="15" fill="rgb(245,28,34)" fg:x="809" fg:w="1"/><text x="64.8666%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.6166%" y="517" width="0.0799%" height="15" fill="rgb(229,186,26)" fg:x="809" fg:w="1"/><text x="64.8666%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.6166%" y="501" width="0.0799%" height="15" fill="rgb(224,0,41)" fg:x="809" fg:w="1"/><text x="64.8666%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.6166%" y="485" width="0.0799%" height="15" fill="rgb(223,136,51)" fg:x="809" fg:w="1"/><text x="64.8666%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.6166%" y="469" width="0.0799%" height="15" fill="rgb(234,50,9)" fg:x="809" fg:w="1"/><text x="64.8666%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.6166%" y="453" width="0.0799%" height="15" fill="rgb(242,164,20)" fg:x="809" fg:w="1"/><text x="64.8666%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6965%" y="501" width="0.0799%" height="15" fill="rgb(230,169,22)" fg:x="810" fg:w="1"/><text x="64.9465%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6965%" y="485" width="0.0799%" height="15" fill="rgb(228,82,26)" fg:x="810" fg:w="1"/><text x="64.9465%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6965%" y="469" width="0.0799%" height="15" fill="rgb(244,220,31)" fg:x="810" fg:w="1"/><text x="64.9465%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.6965%" y="453" width="0.0799%" height="15" fill="rgb(214,35,25)" fg:x="810" fg:w="1"/><text x="64.9465%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7764%" y="437" width="0.0799%" height="15" fill="rgb(245,162,54)" fg:x="811" fg:w="1"/><text x="65.0264%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.9361%" y="373" width="0.0799%" height="15" fill="rgb(210,43,24)" fg:x="813" fg:w="1"/><text x="65.1861%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.9361%" y="357" width="0.0799%" height="15" fill="rgb(226,145,51)" fg:x="813" fg:w="1"/><text x="65.1861%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="64.6965%" y="549" width="0.3994%" height="15" fill="rgb(237,52,53)" fg:x="810" fg:w="5"/><text x="64.9465%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="64.6965%" y="533" width="0.3994%" height="15" fill="rgb(216,226,7)" fg:x="810" fg:w="5"/><text x="64.9465%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="64.6965%" y="517" width="0.3994%" height="15" fill="rgb(206,223,18)" fg:x="810" fg:w="5"/><text x="64.9465%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="64.7764%" y="501" width="0.3195%" height="15" fill="rgb(221,1,10)" fg:x="811" fg:w="4"/><text x="65.0264%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="64.7764%" y="485" width="0.3195%" height="15" fill="rgb(221,151,42)" fg:x="811" fg:w="4"/><text x="65.0264%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="64.7764%" y="469" width="0.3195%" height="15" fill="rgb(205,183,46)" fg:x="811" fg:w="4"/><text x="65.0264%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="64.7764%" y="453" width="0.3195%" height="15" fill="rgb(239,229,1)" fg:x="811" fg:w="4"/><text x="65.0264%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="64.8562%" y="437" width="0.2396%" height="15" fill="rgb(236,192,23)" fg:x="812" fg:w="3"/><text x="65.1062%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.8562%" y="421" width="0.2396%" height="15" fill="rgb(215,146,3)" fg:x="812" fg:w="3"/><text x="65.1062%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="64.8562%" y="405" width="0.2396%" height="15" fill="rgb(235,52,27)" fg:x="812" fg:w="3"/><text x="65.1062%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.8562%" y="389" width="0.2396%" height="15" fill="rgb(236,45,20)" fg:x="812" fg:w="3"/><text x="65.1062%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.0160%" y="373" width="0.0799%" height="15" fill="rgb(235,86,41)" fg:x="814" fg:w="1"/><text x="65.2660%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.0160%" y="357" width="0.0799%" height="15" fill="rgb(235,27,27)" fg:x="814" fg:w="1"/><text x="65.2660%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.1757%" y="501" width="0.1597%" height="15" fill="rgb(232,4,34)" fg:x="816" fg:w="2"/><text x="65.4257%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.1757%" y="485" width="0.1597%" height="15" fill="rgb(215,22,10)" fg:x="816" fg:w="2"/><text x="65.4257%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.2556%" y="469" width="0.0799%" height="15" fill="rgb(230,228,27)" fg:x="817" fg:w="1"/><text x="65.5056%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.4153%" y="373" width="0.0799%" height="15" fill="rgb(216,26,51)" fg:x="819" fg:w="1"/><text x="65.6653%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.4153%" y="357" width="0.0799%" height="15" fill="rgb(225,180,50)" fg:x="819" fg:w="1"/><text x="65.6653%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.4952%" y="373" width="0.0799%" height="15" fill="rgb(236,211,2)" fg:x="820" fg:w="1"/><text x="65.7452%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (13 samples, 1.04%)</title><rect x="64.6166%" y="581" width="1.0383%" height="15" fill="rgb(250,51,20)" fg:x="809" fg:w="13"/><text x="64.8666%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.04%)</title><rect x="64.6166%" y="565" width="1.0383%" height="15" fill="rgb(232,70,37)" fg:x="809" fg:w="13"/><text x="64.8666%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="65.0958%" y="549" width="0.5591%" height="15" fill="rgb(226,183,39)" fg:x="815" fg:w="7"/><text x="65.3458%" y="559.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="65.1757%" y="533" width="0.4792%" height="15" fill="rgb(232,228,21)" fg:x="816" fg:w="6"/><text x="65.4257%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="65.1757%" y="517" width="0.4792%" height="15" fill="rgb(251,118,32)" fg:x="816" fg:w="6"/><text x="65.4257%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="65.3355%" y="501" width="0.3195%" height="15" fill="rgb(235,172,38)" fg:x="818" fg:w="4"/><text x="65.5855%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.3355%" y="485" width="0.3195%" height="15" fill="rgb(235,63,18)" fg:x="818" fg:w="4"/><text x="65.5855%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="65.3355%" y="469" width="0.3195%" height="15" fill="rgb(225,4,7)" fg:x="818" fg:w="4"/><text x="65.5855%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.3355%" y="453" width="0.3195%" height="15" fill="rgb(231,61,1)" fg:x="818" fg:w="4"/><text x="65.5855%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="65.3355%" y="437" width="0.3195%" height="15" fill="rgb(241,155,22)" fg:x="818" fg:w="4"/><text x="65.5855%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.3355%" y="421" width="0.3195%" height="15" fill="rgb(209,100,26)" fg:x="818" fg:w="4"/><text x="65.5855%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="65.3355%" y="405" width="0.3195%" height="15" fill="rgb(248,181,15)" fg:x="818" fg:w="4"/><text x="65.5855%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.3355%" y="389" width="0.3195%" height="15" fill="rgb(214,94,31)" fg:x="818" fg:w="4"/><text x="65.5855%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.5751%" y="373" width="0.0799%" height="15" fill="rgb(207,16,42)" fg:x="821" fg:w="1"/><text x="65.8251%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5751%" y="357" width="0.0799%" height="15" fill="rgb(208,127,13)" fg:x="821" fg:w="1"/><text x="65.8251%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.7348%" y="517" width="0.0799%" height="15" fill="rgb(220,211,18)" fg:x="823" fg:w="1"/><text x="65.9848%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.8147%" y="517" width="0.0799%" height="15" fill="rgb(221,55,38)" fg:x="824" fg:w="1"/><text x="66.0647%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9744%" y="453" width="0.0799%" height="15" fill="rgb(252,219,45)" fg:x="826" fg:w="1"/><text x="66.2244%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9744%" y="437" width="0.0799%" height="15" fill="rgb(248,53,35)" fg:x="826" fg:w="1"/><text x="66.2244%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.9744%" y="421" width="0.0799%" height="15" fill="rgb(210,87,2)" fg:x="826" fg:w="1"/><text x="66.2244%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="66.1342%" y="421" width="0.3195%" height="15" fill="rgb(239,133,9)" fg:x="828" fg:w="4"/><text x="66.3842%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="66.1342%" y="405" width="0.3195%" height="15" fill="rgb(214,114,5)" fg:x="828" fg:w="4"/><text x="66.3842%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="66.2141%" y="389" width="0.2396%" height="15" fill="rgb(206,124,24)" fg:x="829" fg:w="3"/><text x="66.4641%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.4537%" y="405" width="0.1597%" height="15" fill="rgb(212,57,33)" fg:x="832" fg:w="2"/><text x="66.7037%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.5335%" y="389" width="0.0799%" height="15" fill="rgb(246,21,20)" fg:x="833" fg:w="1"/><text x="66.7835%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="66.0543%" y="437" width="0.6390%" height="15" fill="rgb(253,210,39)" fg:x="827" fg:w="8"/><text x="66.3043%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="66.4537%" y="421" width="0.2396%" height="15" fill="rgb(209,187,24)" fg:x="832" fg:w="3"/><text x="66.7037%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6134%" y="405" width="0.0799%" height="15" fill="rgb(246,136,17)" fg:x="834" fg:w="1"/><text x="66.8634%" y="415.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.12%)</title><rect x="65.6550%" y="565" width="1.1182%" height="15" fill="rgb(211,0,30)" fg:x="822" fg:w="14"/><text x="65.9050%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.12%)</title><rect x="65.6550%" y="549" width="1.1182%" height="15" fill="rgb(216,199,7)" fg:x="822" fg:w="14"/><text x="65.9050%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="65.6550%" y="533" width="1.1182%" height="15" fill="rgb(207,210,19)" fg:x="822" fg:w="14"/><text x="65.9050%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="65.8946%" y="517" width="0.8786%" height="15" fill="rgb(237,187,39)" fg:x="825" fg:w="11"/><text x="66.1446%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="65.8946%" y="501" width="0.8786%" height="15" fill="rgb(243,194,42)" fg:x="825" fg:w="11"/><text x="66.1446%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="65.8946%" y="485" width="0.8786%" height="15" fill="rgb(225,194,19)" fg:x="825" fg:w="11"/><text x="66.1446%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="65.9744%" y="469" width="0.7987%" height="15" fill="rgb(224,192,14)" fg:x="826" fg:w="10"/><text x="66.2244%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="66.0543%" y="453" width="0.7188%" height="15" fill="rgb(252,21,18)" fg:x="827" fg:w="9"/><text x="66.3043%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.6933%" y="437" width="0.0799%" height="15" fill="rgb(229,69,19)" fg:x="835" fg:w="1"/><text x="66.9433%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.6933%" y="421" width="0.0799%" height="15" fill="rgb(251,31,53)" fg:x="835" fg:w="1"/><text x="66.9433%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.6933%" y="405" width="0.0799%" height="15" fill="rgb(218,39,50)" fg:x="835" fg:w="1"/><text x="66.9433%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.6933%" y="389" width="0.0799%" height="15" fill="rgb(231,50,17)" fg:x="835" fg:w="1"/><text x="66.9433%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6933%" y="373" width="0.0799%" height="15" fill="rgb(223,217,31)" fg:x="835" fg:w="1"/><text x="66.9433%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="66.8530%" y="533" width="0.0799%" height="15" fill="rgb(225,91,12)" fg:x="837" fg:w="1"/><text x="67.1030%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9329%" y="501" width="0.0799%" height="15" fill="rgb(242,58,43)" fg:x="838" fg:w="1"/><text x="67.1829%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.0927%" y="453" width="0.0799%" height="15" fill="rgb(242,32,21)" fg:x="840" fg:w="1"/><text x="67.3427%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.0927%" y="437" width="0.0799%" height="15" fill="rgb(211,127,1)" fg:x="840" fg:w="1"/><text x="67.3427%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.0927%" y="421" width="0.0799%" height="15" fill="rgb(231,93,13)" fg:x="840" fg:w="1"/><text x="67.3427%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="67.0128%" y="485" width="0.2396%" height="15" fill="rgb(218,83,4)" fg:x="839" fg:w="3"/><text x="67.2628%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="67.0128%" y="469" width="0.2396%" height="15" fill="rgb(230,218,10)" fg:x="839" fg:w="3"/><text x="67.2628%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1725%" y="453" width="0.0799%" height="15" fill="rgb(235,127,18)" fg:x="841" fg:w="1"/><text x="67.4225%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.2524%" y="485" width="0.1597%" height="15" fill="rgb(213,137,46)" fg:x="842" fg:w="2"/><text x="67.5024%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="67.4121%" y="485" width="0.1597%" height="15" fill="rgb(235,179,24)" fg:x="844" fg:w="2"/><text x="67.6621%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="67.4121%" y="469" width="0.1597%" height="15" fill="rgb(247,58,49)" fg:x="844" fg:w="2"/><text x="67.6621%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="67.4121%" y="453" width="0.1597%" height="15" fill="rgb(242,222,5)" fg:x="844" fg:w="2"/><text x="67.6621%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.4920%" y="437" width="0.0799%" height="15" fill="rgb(230,16,48)" fg:x="845" fg:w="1"/><text x="67.7420%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.4920%" y="421" width="0.0799%" height="15" fill="rgb(241,192,16)" fg:x="845" fg:w="1"/><text x="67.7420%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4920%" y="405" width="0.0799%" height="15" fill="rgb(209,25,37)" fg:x="845" fg:w="1"/><text x="67.7420%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.6518%" y="453" width="0.0799%" height="15" fill="rgb(229,215,13)" fg:x="847" fg:w="1"/><text x="67.9018%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.7316%" y="437" width="0.0799%" height="15" fill="rgb(213,199,8)" fg:x="848" fg:w="1"/><text x="67.9816%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="67.7316%" y="421" width="0.0799%" height="15" fill="rgb(226,151,19)" fg:x="848" fg:w="1"/><text x="67.9816%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7316%" y="405" width="0.0799%" height="15" fill="rgb(254,183,12)" fg:x="848" fg:w="1"/><text x="67.9816%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.7316%" y="389" width="0.0799%" height="15" fill="rgb(245,8,3)" fg:x="848" fg:w="1"/><text x="67.9816%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.7316%" y="373" width="0.0799%" height="15" fill="rgb(229,159,35)" fg:x="848" fg:w="1"/><text x="67.9816%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.8115%" y="373" width="0.0799%" height="15" fill="rgb(209,145,1)" fg:x="849" fg:w="1"/><text x="68.0615%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="67.8115%" y="357" width="0.0799%" height="15" fill="rgb(228,183,16)" fg:x="849" fg:w="1"/><text x="68.0615%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.8115%" y="341" width="0.0799%" height="15" fill="rgb(222,68,0)" fg:x="849" fg:w="1"/><text x="68.0615%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.8115%" y="325" width="0.0799%" height="15" fill="rgb(209,130,50)" fg:x="849" fg:w="1"/><text x="68.0615%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.8115%" y="309" width="0.0799%" height="15" fill="rgb(228,176,44)" fg:x="849" fg:w="1"/><text x="68.0615%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.8115%" y="293" width="0.0799%" height="15" fill="rgb(221,164,2)" fg:x="849" fg:w="1"/><text x="68.0615%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.8115%" y="277" width="0.0799%" height="15" fill="rgb(249,199,49)" fg:x="849" fg:w="1"/><text x="68.0615%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="67.8115%" y="405" width="0.1597%" height="15" fill="rgb(228,205,53)" fg:x="849" fg:w="2"/><text x="68.0615%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.8115%" y="389" width="0.1597%" height="15" fill="rgb(235,77,20)" fg:x="849" fg:w="2"/><text x="68.0615%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="67.8914%" y="373" width="0.0799%" height="15" fill="rgb(227,147,34)" fg:x="850" fg:w="1"/><text x="68.1414%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.04%)</title><rect x="67.0128%" y="501" width="1.0383%" height="15" fill="rgb(226,203,52)" fg:x="839" fg:w="13"/><text x="67.2628%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="67.5719%" y="485" width="0.4792%" height="15" fill="rgb(226,186,23)" fg:x="846" fg:w="6"/><text x="67.8219%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="67.5719%" y="469" width="0.4792%" height="15" fill="rgb(236,13,30)" fg:x="846" fg:w="6"/><text x="67.8219%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="67.7316%" y="453" width="0.3195%" height="15" fill="rgb(228,121,22)" fg:x="848" fg:w="4"/><text x="67.9816%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.8115%" y="437" width="0.2396%" height="15" fill="rgb(248,222,26)" fg:x="849" fg:w="3"/><text x="68.0615%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="67.8115%" y="421" width="0.2396%" height="15" fill="rgb(251,72,25)" fg:x="849" fg:w="3"/><text x="68.0615%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9712%" y="405" width="0.0799%" height="15" fill="rgb(223,114,24)" fg:x="851" fg:w="1"/><text x="68.2212%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (15 samples, 1.20%)</title><rect x="66.9329%" y="533" width="1.1981%" height="15" fill="rgb(232,190,43)" fg:x="838" fg:w="15"/><text x="67.1829%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="66.9329%" y="517" width="1.1981%" height="15" fill="rgb(208,90,0)" fg:x="838" fg:w="15"/><text x="67.1829%" y="527.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="68.0511%" y="501" width="0.0799%" height="15" fill="rgb(234,149,31)" fg:x="852" fg:w="1"/><text x="68.3011%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (34 samples, 2.72%)</title><rect x="65.6550%" y="581" width="2.7157%" height="15" fill="rgb(235,188,36)" fg:x="822" fg:w="34"/><text x="65.9050%" y="591.50">&lt;k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (20 samples, 1.60%)</title><rect x="66.7732%" y="565" width="1.5974%" height="15" fill="rgb(219,59,51)" fg:x="836" fg:w="20"/><text x="67.0232%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (20 samples, 1.60%)</title><rect x="66.7732%" y="549" width="1.5974%" height="15" fill="rgb(236,101,40)" fg:x="836" fg:w="20"/><text x="67.0232%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.1310%" y="533" width="0.2396%" height="15" fill="rgb(235,33,7)" fg:x="853" fg:w="3"/><text x="68.3810%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.1310%" y="517" width="0.2396%" height="15" fill="rgb(213,169,26)" fg:x="853" fg:w="3"/><text x="68.3810%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="68.2907%" y="501" width="0.0799%" height="15" fill="rgb(218,99,34)" fg:x="855" fg:w="1"/><text x="68.5407%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="68.2907%" y="485" width="0.0799%" height="15" fill="rgb(210,57,24)" fg:x="855" fg:w="1"/><text x="68.5407%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="68.2907%" y="469" width="0.0799%" height="15" fill="rgb(231,181,54)" fg:x="855" fg:w="1"/><text x="68.5407%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.3706%" y="565" width="0.0799%" height="15" fill="rgb(251,188,48)" fg:x="856" fg:w="1"/><text x="68.6206%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.6102%" y="485" width="0.0799%" height="15" fill="rgb(243,12,45)" fg:x="859" fg:w="1"/><text x="68.8602%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.6102%" y="469" width="0.0799%" height="15" fill="rgb(250,197,9)" fg:x="859" fg:w="1"/><text x="68.8602%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.6102%" y="533" width="0.1597%" height="15" fill="rgb(235,149,35)" fg:x="859" fg:w="2"/><text x="68.8602%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.6102%" y="517" width="0.1597%" height="15" fill="rgb(219,27,19)" fg:x="859" fg:w="2"/><text x="68.8602%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.6102%" y="501" width="0.1597%" height="15" fill="rgb(244,78,31)" fg:x="859" fg:w="2"/><text x="68.8602%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6901%" y="485" width="0.0799%" height="15" fill="rgb(241,13,4)" fg:x="860" fg:w="1"/><text x="68.9401%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.7700%" y="437" width="0.0799%" height="15" fill="rgb(212,194,26)" fg:x="861" fg:w="1"/><text x="69.0200%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="68.3706%" y="581" width="0.5591%" height="15" fill="rgb(236,80,11)" fg:x="856" fg:w="7"/><text x="68.6206%" y="591.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="68.4505%" y="565" width="0.4792%" height="15" fill="rgb(206,1,24)" fg:x="857" fg:w="6"/><text x="68.7005%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="68.5304%" y="549" width="0.3994%" height="15" fill="rgb(238,215,50)" fg:x="858" fg:w="5"/><text x="68.7804%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.7700%" y="533" width="0.1597%" height="15" fill="rgb(254,126,32)" fg:x="861" fg:w="2"/><text x="69.0200%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7700%" y="517" width="0.1597%" height="15" fill="rgb(206,111,53)" fg:x="861" fg:w="2"/><text x="69.0200%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.7700%" y="501" width="0.1597%" height="15" fill="rgb(218,72,44)" fg:x="861" fg:w="2"/><text x="69.0200%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7700%" y="485" width="0.1597%" height="15" fill="rgb(238,25,3)" fg:x="861" fg:w="2"/><text x="69.0200%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.7700%" y="469" width="0.1597%" height="15" fill="rgb(250,191,7)" fg:x="861" fg:w="2"/><text x="69.0200%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7700%" y="453" width="0.1597%" height="15" fill="rgb(238,56,30)" fg:x="861" fg:w="2"/><text x="69.0200%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8498%" y="437" width="0.0799%" height="15" fill="rgb(210,27,45)" fg:x="862" fg:w="1"/><text x="69.0998%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.8498%" y="421" width="0.0799%" height="15" fill="rgb(207,10,50)" fg:x="862" fg:w="1"/><text x="69.0998%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (57 samples, 4.55%)</title><rect x="64.4569%" y="613" width="4.5527%" height="15" fill="rgb(249,30,23)" fg:x="807" fg:w="57"/><text x="64.7069%" y="623.50">&lt;engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (56 samples, 4.47%)</title><rect x="64.5367%" y="597" width="4.4728%" height="15" fill="rgb(250,80,12)" fg:x="808" fg:w="56"/><text x="64.7867%" y="607.50">engin..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="68.9297%" y="581" width="0.0799%" height="15" fill="rgb(210,221,37)" fg:x="863" fg:w="1"/><text x="69.1797%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="69.0096%" y="613" width="0.0799%" height="15" fill="rgb(205,96,24)" fg:x="864" fg:w="1"/><text x="69.2596%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0096%" y="597" width="0.0799%" height="15" fill="rgb(247,104,22)" fg:x="864" fg:w="1"/><text x="69.2596%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0096%" y="581" width="0.0799%" height="15" fill="rgb(222,61,53)" fg:x="864" fg:w="1"/><text x="69.2596%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.0096%" y="565" width="0.0799%" height="15" fill="rgb(241,11,53)" fg:x="864" fg:w="1"/><text x="69.2596%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.0096%" y="549" width="0.0799%" height="15" fill="rgb(230,111,47)" fg:x="864" fg:w="1"/><text x="69.2596%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.0096%" y="533" width="0.0799%" height="15" fill="rgb(218,187,29)" fg:x="864" fg:w="1"/><text x="69.2596%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.0096%" y="517" width="0.0799%" height="15" fill="rgb(210,121,46)" fg:x="864" fg:w="1"/><text x="69.2596%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.0096%" y="501" width="0.0799%" height="15" fill="rgb(250,43,19)" fg:x="864" fg:w="1"/><text x="69.2596%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.0096%" y="485" width="0.0799%" height="15" fill="rgb(238,61,12)" fg:x="864" fg:w="1"/><text x="69.2596%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.0096%" y="469" width="0.0799%" height="15" fill="rgb(251,198,9)" fg:x="864" fg:w="1"/><text x="69.2596%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.0096%" y="453" width="0.0799%" height="15" fill="rgb(214,192,38)" fg:x="864" fg:w="1"/><text x="69.2596%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.0096%" y="437" width="0.0799%" height="15" fill="rgb(214,73,19)" fg:x="864" fg:w="1"/><text x="69.2596%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0096%" y="421" width="0.0799%" height="15" fill="rgb(249,222,49)" fg:x="864" fg:w="1"/><text x="69.2596%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="69.0895%" y="405" width="0.0799%" height="15" fill="rgb(231,181,54)" fg:x="865" fg:w="1"/><text x="69.3395%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.0895%" y="389" width="0.0799%" height="15" fill="rgb(240,1,13)" fg:x="865" fg:w="1"/><text x="69.3395%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (62 samples, 4.95%)</title><rect x="64.2971%" y="629" width="4.9521%" height="15" fill="rgb(225,21,16)" fg:x="805" fg:w="62"/><text x="64.5471%" y="639.50">&lt;engin..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="69.0895%" y="613" width="0.1597%" height="15" fill="rgb(246,176,50)" fg:x="865" fg:w="2"/><text x="69.3395%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="69.0895%" y="597" width="0.1597%" height="15" fill="rgb(208,96,50)" fg:x="865" fg:w="2"/><text x="69.3395%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="69.0895%" y="581" width="0.1597%" height="15" fill="rgb(240,219,19)" fg:x="865" fg:w="2"/><text x="69.3395%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="69.0895%" y="565" width="0.1597%" height="15" fill="rgb(234,73,5)" fg:x="865" fg:w="2"/><text x="69.3395%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="69.0895%" y="549" width="0.1597%" height="15" fill="rgb(225,52,53)" fg:x="865" fg:w="2"/><text x="69.3395%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="69.0895%" y="533" width="0.1597%" height="15" fill="rgb(250,12,14)" fg:x="865" fg:w="2"/><text x="69.3395%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="69.0895%" y="517" width="0.1597%" height="15" fill="rgb(242,185,54)" fg:x="865" fg:w="2"/><text x="69.3395%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="69.0895%" y="501" width="0.1597%" height="15" fill="rgb(211,206,31)" fg:x="865" fg:w="2"/><text x="69.3395%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="69.0895%" y="485" width="0.1597%" height="15" fill="rgb(252,10,33)" fg:x="865" fg:w="2"/><text x="69.3395%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="69.0895%" y="469" width="0.1597%" height="15" fill="rgb(216,26,7)" fg:x="865" fg:w="2"/><text x="69.3395%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="69.0895%" y="453" width="0.1597%" height="15" fill="rgb(228,112,40)" fg:x="865" fg:w="2"/><text x="69.3395%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="69.0895%" y="437" width="0.1597%" height="15" fill="rgb(212,21,16)" fg:x="865" fg:w="2"/><text x="69.3395%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="69.0895%" y="421" width="0.1597%" height="15" fill="rgb(249,3,29)" fg:x="865" fg:w="2"/><text x="69.3395%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.1693%" y="405" width="0.0799%" height="15" fill="rgb(221,42,51)" fg:x="866" fg:w="1"/><text x="69.4193%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.1693%" y="389" width="0.0799%" height="15" fill="rgb(225,90,21)" fg:x="866" fg:w="1"/><text x="69.4193%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="69.1693%" y="373" width="0.0799%" height="15" fill="rgb(242,131,5)" fg:x="866" fg:w="1"/><text x="69.4193%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="69.1693%" y="357" width="0.0799%" height="15" fill="rgb(220,187,28)" fg:x="866" fg:w="1"/><text x="69.4193%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="69.1693%" y="341" width="0.0799%" height="15" fill="rgb(210,75,48)" fg:x="866" fg:w="1"/><text x="69.4193%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="69.1693%" y="325" width="0.0799%" height="15" fill="rgb(211,91,40)" fg:x="866" fg:w="1"/><text x="69.4193%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.1693%" y="309" width="0.0799%" height="15" fill="rgb(205,43,18)" fg:x="866" fg:w="1"/><text x="69.4193%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.1693%" y="293" width="0.0799%" height="15" fill="rgb(207,123,11)" fg:x="866" fg:w="1"/><text x="69.4193%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.1693%" y="277" width="0.0799%" height="15" fill="rgb(235,89,39)" fg:x="866" fg:w="1"/><text x="69.4193%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="69.1693%" y="261" width="0.0799%" height="15" fill="rgb(245,217,27)" fg:x="866" fg:w="1"/><text x="69.4193%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.1693%" y="245" width="0.0799%" height="15" fill="rgb(216,55,17)" fg:x="866" fg:w="1"/><text x="69.4193%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="69.1693%" y="229" width="0.0799%" height="15" fill="rgb(252,116,44)" fg:x="866" fg:w="1"/><text x="69.4193%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="69.1693%" y="213" width="0.0799%" height="15" fill="rgb(229,153,4)" fg:x="866" fg:w="1"/><text x="69.4193%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="69.1693%" y="197" width="0.0799%" height="15" fill="rgb(222,24,35)" fg:x="866" fg:w="1"/><text x="69.4193%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="69.1693%" y="181" width="0.0799%" height="15" fill="rgb(214,26,20)" fg:x="866" fg:w="1"/><text x="69.4193%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="69.3291%" y="565" width="0.0799%" height="15" fill="rgb(215,14,45)" fg:x="868" fg:w="1"/><text x="69.5791%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="69.4089%" y="565" width="0.2396%" height="15" fill="rgb(217,212,50)" fg:x="869" fg:w="3"/><text x="69.6589%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.4888%" y="549" width="0.1597%" height="15" fill="rgb(230,172,52)" fg:x="870" fg:w="2"/><text x="69.7388%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.5687%" y="533" width="0.0799%" height="15" fill="rgb(210,48,36)" fg:x="871" fg:w="1"/><text x="69.8187%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6486%" y="501" width="0.0799%" height="15" fill="rgb(216,213,32)" fg:x="872" fg:w="1"/><text x="69.8986%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.6486%" y="485" width="0.0799%" height="15" fill="rgb(237,202,41)" fg:x="872" fg:w="1"/><text x="69.8986%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (7 samples, 0.56%)</title><rect x="69.2492%" y="629" width="0.5591%" height="15" fill="rgb(209,14,29)" fg:x="867" fg:w="7"/><text x="69.4992%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (7 samples, 0.56%)</title><rect x="69.2492%" y="613" width="0.5591%" height="15" fill="rgb(219,29,3)" fg:x="867" fg:w="7"/><text x="69.4992%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="69.3291%" y="597" width="0.4792%" height="15" fill="rgb(229,13,49)" fg:x="868" fg:w="6"/><text x="69.5791%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="69.3291%" y="581" width="0.4792%" height="15" fill="rgb(210,206,2)" fg:x="868" fg:w="6"/><text x="69.5791%" y="591.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.6486%" y="565" width="0.1597%" height="15" fill="rgb(216,154,46)" fg:x="872" fg:w="2"/><text x="69.8986%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6486%" y="549" width="0.1597%" height="15" fill="rgb(211,170,52)" fg:x="872" fg:w="2"/><text x="69.8986%" y="559.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.6486%" y="533" width="0.1597%" height="15" fill="rgb(233,109,47)" fg:x="872" fg:w="2"/><text x="69.8986%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6486%" y="517" width="0.1597%" height="15" fill="rgb(208,212,30)" fg:x="872" fg:w="2"/><text x="69.8986%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7284%" y="501" width="0.0799%" height="15" fill="rgb(215,190,19)" fg:x="873" fg:w="1"/><text x="69.9784%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7284%" y="485" width="0.0799%" height="15" fill="rgb(207,164,53)" fg:x="873" fg:w="1"/><text x="69.9784%" y="495.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="69.9681%" y="597" width="0.0799%" height="15" fill="rgb(213,87,49)" fg:x="876" fg:w="1"/><text x="70.2181%" y="607.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="69.8083%" y="629" width="0.3195%" height="15" fill="rgb(241,216,24)" fg:x="874" fg:w="4"/><text x="70.0583%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="69.8083%" y="613" width="0.3195%" height="15" fill="rgb(241,123,45)" fg:x="874" fg:w="4"/><text x="70.0583%" y="623.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="70.0479%" y="597" width="0.0799%" height="15" fill="rgb(220,36,15)" fg:x="877" fg:w="1"/><text x="70.2979%" y="607.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="70.0479%" y="581" width="0.0799%" height="15" fill="rgb(215,202,9)" fg:x="877" fg:w="1"/><text x="70.2979%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="70.0479%" y="565" width="0.0799%" height="15" fill="rgb(252,71,26)" fg:x="877" fg:w="1"/><text x="70.2979%" y="575.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (123 samples, 9.82%)</title><rect x="60.3834%" y="661" width="9.8243%" height="15" fill="rgb(243,195,19)" fg:x="756" fg:w="123"/><text x="60.6334%" y="671.50">engine::sessio..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (123 samples, 9.82%)</title><rect x="60.3834%" y="645" width="9.8243%" height="15" fill="rgb(207,167,27)" fg:x="756" fg:w="123"/><text x="60.6334%" y="655.50">engine::sessio..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1278%" y="629" width="0.0799%" height="15" fill="rgb(250,146,54)" fg:x="878" fg:w="1"/><text x="70.3778%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (881 samples, 70.37%)</title><rect x="0.0000%" y="709" width="70.3674%" height="15" fill="rgb(245,79,9)" fg:x="0" fg:w="881"/><text x="0.2500%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (881 samples, 70.37%)</title><rect x="0.0000%" y="693" width="70.3674%" height="15" fill="rgb(234,197,22)" fg:x="0" fg:w="881"/><text x="0.2500%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (881 samples, 70.37%)</title><rect x="0.0000%" y="677" width="70.3674%" height="15" fill="rgb(221,52,48)" fg:x="0" fg:w="881"/><text x="0.2500%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="70.2077%" y="661" width="0.1597%" height="15" fill="rgb(235,80,0)" fg:x="879" fg:w="2"/><text x="70.4577%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="70.2077%" y="645" width="0.1597%" height="15" fill="rgb(221,117,53)" fg:x="879" fg:w="2"/><text x="70.4577%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="70.2077%" y="629" width="0.1597%" height="15" fill="rgb(239,48,47)" fg:x="879" fg:w="2"/><text x="70.4577%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="70.2077%" y="613" width="0.1597%" height="15" fill="rgb(227,191,52)" fg:x="879" fg:w="2"/><text x="70.4577%" y="623.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="70.3674%" y="677" width="0.0799%" height="15" fill="rgb(241,118,1)" fg:x="881" fg:w="1"/><text x="70.6174%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8466%" y="549" width="0.0799%" height="15" fill="rgb(240,85,3)" fg:x="887" fg:w="1"/><text x="71.0966%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9265%" y="533" width="0.0799%" height="15" fill="rgb(237,68,37)" fg:x="888" fg:w="1"/><text x="71.1765%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.0064%" y="533" width="0.0799%" height="15" fill="rgb(212,9,20)" fg:x="889" fg:w="1"/><text x="71.2564%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.0863%" y="501" width="0.0799%" height="15" fill="rgb(218,84,17)" fg:x="890" fg:w="1"/><text x="71.3363%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="70.6070%" y="597" width="0.6390%" height="15" fill="rgb(235,147,20)" fg:x="884" fg:w="8"/><text x="70.8570%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="70.6070%" y="581" width="0.6390%" height="15" fill="rgb(208,224,1)" fg:x="884" fg:w="8"/><text x="70.8570%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="70.6869%" y="565" width="0.5591%" height="15" fill="rgb(232,97,50)" fg:x="885" fg:w="7"/><text x="70.9369%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="70.9265%" y="549" width="0.3195%" height="15" fill="rgb(238,15,45)" fg:x="888" fg:w="4"/><text x="71.1765%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.0863%" y="533" width="0.1597%" height="15" fill="rgb(231,46,18)" fg:x="890" fg:w="2"/><text x="71.3363%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.0863%" y="517" width="0.1597%" height="15" fill="rgb(254,169,10)" fg:x="890" fg:w="2"/><text x="71.3363%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.1661%" y="501" width="0.0799%" height="15" fill="rgb(243,169,30)" fg:x="891" fg:w="1"/><text x="71.4161%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="70.5272%" y="661" width="0.7987%" height="15" fill="rgb(236,90,49)" fg:x="883" fg:w="10"/><text x="70.7772%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (10 samples, 0.80%)</title><rect x="70.5272%" y="645" width="0.7987%" height="15" fill="rgb(218,80,15)" fg:x="883" fg:w="10"/><text x="70.7772%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="70.5272%" y="629" width="0.7987%" height="15" fill="rgb(222,115,37)" fg:x="883" fg:w="10"/><text x="70.7772%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (9 samples, 0.72%)</title><rect x="70.6070%" y="613" width="0.7188%" height="15" fill="rgb(227,0,6)" fg:x="884" fg:w="9"/><text x="70.8570%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2460%" y="597" width="0.0799%" height="15" fill="rgb(217,189,13)" fg:x="892" fg:w="1"/><text x="71.4960%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.2460%" y="581" width="0.0799%" height="15" fill="rgb(220,74,19)" fg:x="892" fg:w="1"/><text x="71.4960%" y="591.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="71.4058%" y="613" width="0.0799%" height="15" fill="rgb(224,81,18)" fg:x="894" fg:w="1"/><text x="71.6558%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4058%" y="597" width="0.0799%" height="15" fill="rgb(245,178,48)" fg:x="894" fg:w="1"/><text x="71.6558%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.4856%" y="597" width="0.0799%" height="15" fill="rgb(207,78,24)" fg:x="895" fg:w="1"/><text x="71.7356%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.4856%" y="581" width="0.0799%" height="15" fill="rgb(223,222,30)" fg:x="895" fg:w="1"/><text x="71.7356%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.4856%" y="565" width="0.0799%" height="15" fill="rgb(234,101,12)" fg:x="895" fg:w="1"/><text x="71.7356%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;libloading::error::Error&gt; (1 samples, 0.08%)</title><rect x="71.6454%" y="549" width="0.0799%" height="15" fill="rgb(209,80,46)" fg:x="897" fg:w="1"/><text x="71.8954%" y="559.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="71.7252%" y="549" width="0.0799%" height="15" fill="rgb(228,79,14)" fg:x="898" fg:w="1"/><text x="71.9752%" y="559.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="71.7252%" y="533" width="0.0799%" height="15" fill="rgb(220,219,34)" fg:x="898" fg:w="1"/><text x="71.9752%" y="543.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="71.7252%" y="517" width="0.0799%" height="15" fill="rgb(207,80,21)" fg:x="898" fg:w="1"/><text x="71.9752%" y="527.50"></text></g><g><title>dlopen (5 samples, 0.40%)</title><rect x="71.8051%" y="549" width="0.3994%" height="15" fill="rgb(210,154,44)" fg:x="899" fg:w="5"/><text x="72.0551%" y="559.50"></text></g><g><title>_dl_catch_error (5 samples, 0.40%)</title><rect x="71.8051%" y="533" width="0.3994%" height="15" fill="rgb(246,44,39)" fg:x="899" fg:w="5"/><text x="72.0551%" y="543.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="71.8051%" y="517" width="0.3994%" height="15" fill="rgb(252,175,13)" fg:x="899" fg:w="5"/><text x="72.0551%" y="527.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="71.8051%" y="501" width="0.3994%" height="15" fill="rgb(211,50,39)" fg:x="899" fg:w="5"/><text x="72.0551%" y="511.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="71.8051%" y="485" width="0.3994%" height="15" fill="rgb(231,204,27)" fg:x="899" fg:w="5"/><text x="72.0551%" y="495.50"></text></g><g><title>libloading::safe::Library::new (9 samples, 0.72%)</title><rect x="71.5655%" y="565" width="0.7188%" height="15" fill="rgb(253,26,34)" fg:x="896" fg:w="9"/><text x="71.8155%" y="575.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="72.2045%" y="549" width="0.0799%" height="15" fill="rgb(207,139,38)" fg:x="904" fg:w="1"/><text x="72.4545%" y="559.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="72.2045%" y="533" width="0.0799%" height="15" fill="rgb(248,54,27)" fg:x="904" fg:w="1"/><text x="72.4545%" y="543.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="72.2045%" y="517" width="0.0799%" height="15" fill="rgb(234,25,33)" fg:x="904" fg:w="1"/><text x="72.4545%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="72.2045%" y="501" width="0.0799%" height="15" fill="rgb(249,107,47)" fg:x="904" fg:w="1"/><text x="72.4545%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.2045%" y="485" width="0.0799%" height="15" fill="rgb(230,190,31)" fg:x="904" fg:w="1"/><text x="72.4545%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.2045%" y="469" width="0.0799%" height="15" fill="rgb(238,173,45)" fg:x="904" fg:w="1"/><text x="72.4545%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.2045%" y="453" width="0.0799%" height="15" fill="rgb(222,16,50)" fg:x="904" fg:w="1"/><text x="72.4545%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.2045%" y="437" width="0.0799%" height="15" fill="rgb(251,204,47)" fg:x="904" fg:w="1"/><text x="72.4545%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.2045%" y="421" width="0.0799%" height="15" fill="rgb(225,12,3)" fg:x="904" fg:w="1"/><text x="72.4545%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.2045%" y="405" width="0.0799%" height="15" fill="rgb(214,208,22)" fg:x="904" fg:w="1"/><text x="72.4545%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.2045%" y="389" width="0.0799%" height="15" fill="rgb(240,57,32)" fg:x="904" fg:w="1"/><text x="72.4545%" y="399.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (14 samples, 1.12%)</title><rect x="71.3259%" y="661" width="1.1182%" height="15" fill="rgb(243,113,48)" fg:x="893" fg:w="14"/><text x="71.5759%" y="671.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (14 samples, 1.12%)</title><rect x="71.3259%" y="645" width="1.1182%" height="15" fill="rgb(225,135,30)" fg:x="893" fg:w="14"/><text x="71.5759%" y="655.50"></text></g><g><title>engine::session::Session::new (13 samples, 1.04%)</title><rect x="71.4058%" y="629" width="1.0383%" height="15" fill="rgb(222,3,53)" fg:x="894" fg:w="13"/><text x="71.6558%" y="639.50"></text></g><g><title>engine::session::Session::initialize (12 samples, 0.96%)</title><rect x="71.4856%" y="613" width="0.9585%" height="15" fill="rgb(243,142,2)" fg:x="895" fg:w="12"/><text x="71.7356%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (11 samples, 0.88%)</title><rect x="71.5655%" y="597" width="0.8786%" height="15" fill="rgb(233,67,14)" fg:x="896" fg:w="11"/><text x="71.8155%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.88%)</title><rect x="71.5655%" y="581" width="0.8786%" height="15" fill="rgb(245,125,36)" fg:x="896" fg:w="11"/><text x="71.8155%" y="591.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (2 samples, 0.16%)</title><rect x="72.2843%" y="565" width="0.1597%" height="15" fill="rgb(225,199,6)" fg:x="905" fg:w="2"/><text x="72.5343%" y="575.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="72.2843%" y="549" width="0.1597%" height="15" fill="rgb(244,71,6)" fg:x="905" fg:w="2"/><text x="72.5343%" y="559.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.3642%" y="533" width="0.0799%" height="15" fill="rgb(225,62,9)" fg:x="906" fg:w="1"/><text x="72.6142%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.4441%" y="645" width="0.0799%" height="15" fill="rgb(246,139,53)" fg:x="907" fg:w="1"/><text x="72.6941%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="72.5240%" y="645" width="0.0799%" height="15" fill="rgb(243,161,46)" fg:x="908" fg:w="1"/><text x="72.7740%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6837%" y="613" width="0.0799%" height="15" fill="rgb(236,153,7)" fg:x="910" fg:w="1"/><text x="72.9337%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6837%" y="597" width="0.0799%" height="15" fill="rgb(248,42,35)" fg:x="910" fg:w="1"/><text x="72.9337%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.6837%" y="581" width="0.0799%" height="15" fill="rgb(250,17,31)" fg:x="910" fg:w="1"/><text x="72.9337%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.6837%" y="565" width="0.0799%" height="15" fill="rgb(248,138,14)" fg:x="910" fg:w="1"/><text x="72.9337%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.6837%" y="549" width="0.0799%" height="15" fill="rgb(228,161,3)" fg:x="910" fg:w="1"/><text x="72.9337%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6837%" y="533" width="0.0799%" height="15" fill="rgb(248,116,17)" fg:x="910" fg:w="1"/><text x="72.9337%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6837%" y="517" width="0.0799%" height="15" fill="rgb(207,78,24)" fg:x="910" fg:w="1"/><text x="72.9337%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.6837%" y="501" width="0.0799%" height="15" fill="rgb(234,99,48)" fg:x="910" fg:w="1"/><text x="72.9337%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.6837%" y="485" width="0.0799%" height="15" fill="rgb(242,22,26)" fg:x="910" fg:w="1"/><text x="72.9337%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.6837%" y="469" width="0.0799%" height="15" fill="rgb(227,78,32)" fg:x="910" fg:w="1"/><text x="72.9337%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.6837%" y="453" width="0.0799%" height="15" fill="rgb(226,189,43)" fg:x="910" fg:w="1"/><text x="72.9337%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6837%" y="437" width="0.0799%" height="15" fill="rgb(227,218,35)" fg:x="910" fg:w="1"/><text x="72.9337%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="72.6038%" y="629" width="0.2396%" height="15" fill="rgb(206,111,40)" fg:x="909" fg:w="3"/><text x="72.8538%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.7636%" y="613" width="0.0799%" height="15" fill="rgb(208,217,22)" fg:x="911" fg:w="1"/><text x="73.0136%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;()&gt;&gt; (1 samples, 0.08%)</title><rect x="72.8435%" y="517" width="0.0799%" height="15" fill="rgb(248,20,20)" fg:x="912" fg:w="1"/><text x="73.0935%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.8435%" y="501" width="0.0799%" height="15" fill="rgb(239,155,16)" fg:x="912" fg:w="1"/><text x="73.0935%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.08%)</title><rect x="72.8435%" y="485" width="0.0799%" height="15" fill="rgb(238,171,46)" fg:x="912" fg:w="1"/><text x="73.0935%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.08%)</title><rect x="72.8435%" y="469" width="0.0799%" height="15" fill="rgb(248,11,36)" fg:x="912" fg:w="1"/><text x="73.0935%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.08%)</title><rect x="72.8435%" y="453" width="0.0799%" height="15" fill="rgb(220,148,37)" fg:x="912" fg:w="1"/><text x="73.0935%" y="463.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="72.8435%" y="629" width="0.1597%" height="15" fill="rgb(218,144,42)" fg:x="912" fg:w="2"/><text x="73.0935%" y="639.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="72.8435%" y="613" width="0.1597%" height="15" fill="rgb(245,20,20)" fg:x="912" fg:w="2"/><text x="73.0935%" y="623.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="72.8435%" y="597" width="0.1597%" height="15" fill="rgb(240,111,48)" fg:x="912" fg:w="2"/><text x="73.0935%" y="607.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="72.8435%" y="581" width="0.1597%" height="15" fill="rgb(237,225,32)" fg:x="912" fg:w="2"/><text x="73.0935%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="72.8435%" y="565" width="0.1597%" height="15" fill="rgb(228,161,46)" fg:x="912" fg:w="2"/><text x="73.0935%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="72.8435%" y="549" width="0.1597%" height="15" fill="rgb(235,196,21)" fg:x="912" fg:w="2"/><text x="73.0935%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="72.8435%" y="533" width="0.1597%" height="15" fill="rgb(250,133,21)" fg:x="912" fg:w="2"/><text x="73.0935%" y="543.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="72.9233%" y="517" width="0.0799%" height="15" fill="rgb(236,94,32)" fg:x="913" fg:w="1"/><text x="73.1733%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.0032%" y="597" width="0.0799%" height="15" fill="rgb(219,176,25)" fg:x="914" fg:w="1"/><text x="73.2532%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="73.0032%" y="581" width="0.0799%" height="15" fill="rgb(211,17,43)" fg:x="914" fg:w="1"/><text x="73.2532%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="73.0032%" y="565" width="0.0799%" height="15" fill="rgb(220,75,23)" fg:x="914" fg:w="1"/><text x="73.2532%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="73.1629%" y="549" width="0.0799%" height="15" fill="rgb(215,122,32)" fg:x="916" fg:w="1"/><text x="73.4129%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.4824%" y="517" width="0.0799%" height="15" fill="rgb(218,57,38)" fg:x="920" fg:w="1"/><text x="73.7324%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4824%" y="501" width="0.0799%" height="15" fill="rgb(233,208,46)" fg:x="920" fg:w="1"/><text x="73.7324%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4824%" y="485" width="0.0799%" height="15" fill="rgb(221,35,50)" fg:x="920" fg:w="1"/><text x="73.7324%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.4824%" y="469" width="0.0799%" height="15" fill="rgb(229,213,29)" fg:x="920" fg:w="1"/><text x="73.7324%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.4824%" y="453" width="0.0799%" height="15" fill="rgb(229,110,40)" fg:x="920" fg:w="1"/><text x="73.7324%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.4824%" y="437" width="0.0799%" height="15" fill="rgb(247,206,19)" fg:x="920" fg:w="1"/><text x="73.7324%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.5623%" y="517" width="0.1597%" height="15" fill="rgb(216,229,45)" fg:x="921" fg:w="2"/><text x="73.8123%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6422%" y="501" width="0.0799%" height="15" fill="rgb(205,184,31)" fg:x="922" fg:w="1"/><text x="73.8922%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6422%" y="485" width="0.0799%" height="15" fill="rgb(213,91,10)" fg:x="922" fg:w="1"/><text x="73.8922%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.6422%" y="469" width="0.0799%" height="15" fill="rgb(250,49,8)" fg:x="922" fg:w="1"/><text x="73.8922%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.6422%" y="453" width="0.0799%" height="15" fill="rgb(207,26,8)" fg:x="922" fg:w="1"/><text x="73.8922%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.6422%" y="437" width="0.0799%" height="15" fill="rgb(224,2,13)" fg:x="922" fg:w="1"/><text x="73.8922%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.6422%" y="421" width="0.0799%" height="15" fill="rgb(219,108,27)" fg:x="922" fg:w="1"/><text x="73.8922%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="73.7220%" y="485" width="0.2396%" height="15" fill="rgb(240,89,32)" fg:x="923" fg:w="3"/><text x="73.9720%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.8019%" y="469" width="0.1597%" height="15" fill="rgb(248,205,3)" fg:x="924" fg:w="2"/><text x="74.0519%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="73.8019%" y="453" width="0.1597%" height="15" fill="rgb(236,197,47)" fg:x="924" fg:w="2"/><text x="74.0519%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="73.9617%" y="469" width="0.1597%" height="15" fill="rgb(244,185,52)" fg:x="926" fg:w="2"/><text x="74.2117%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="73.9617%" y="453" width="0.1597%" height="15" fill="rgb(210,206,23)" fg:x="926" fg:w="2"/><text x="74.2117%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.0415%" y="437" width="0.0799%" height="15" fill="rgb(251,177,30)" fg:x="927" fg:w="1"/><text x="74.2915%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.0415%" y="421" width="0.0799%" height="15" fill="rgb(243,27,45)" fg:x="927" fg:w="1"/><text x="74.2915%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="74.1214%" y="469" width="0.2396%" height="15" fill="rgb(248,141,51)" fg:x="928" fg:w="3"/><text x="74.3714%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="74.1214%" y="453" width="0.2396%" height="15" fill="rgb(235,102,15)" fg:x="928" fg:w="3"/><text x="74.3714%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.2013%" y="437" width="0.1597%" height="15" fill="rgb(214,164,53)" fg:x="929" fg:w="2"/><text x="74.4513%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.2812%" y="421" width="0.0799%" height="15" fill="rgb(228,18,51)" fg:x="930" fg:w="1"/><text x="74.5312%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.2812%" y="405" width="0.0799%" height="15" fill="rgb(205,211,11)" fg:x="930" fg:w="1"/><text x="74.5312%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.2812%" y="389" width="0.0799%" height="15" fill="rgb(208,63,6)" fg:x="930" fg:w="1"/><text x="74.5312%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.2812%" y="373" width="0.0799%" height="15" fill="rgb(245,76,14)" fg:x="930" fg:w="1"/><text x="74.5312%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.2812%" y="357" width="0.0799%" height="15" fill="rgb(234,176,34)" fg:x="930" fg:w="1"/><text x="74.5312%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="73.4026%" y="533" width="1.0383%" height="15" fill="rgb(243,156,42)" fg:x="919" fg:w="13"/><text x="73.6526%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="73.7220%" y="517" width="0.7188%" height="15" fill="rgb(237,182,10)" fg:x="923" fg:w="9"/><text x="73.9720%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="73.7220%" y="501" width="0.7188%" height="15" fill="rgb(244,117,0)" fg:x="923" fg:w="9"/><text x="73.9720%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="73.9617%" y="485" width="0.4792%" height="15" fill="rgb(239,91,50)" fg:x="926" fg:w="6"/><text x="74.2117%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.3610%" y="469" width="0.0799%" height="15" fill="rgb(206,38,9)" fg:x="931" fg:w="1"/><text x="74.6110%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.3610%" y="453" width="0.0799%" height="15" fill="rgb(205,25,10)" fg:x="931" fg:w="1"/><text x="74.6110%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.3610%" y="437" width="0.0799%" height="15" fill="rgb(206,224,7)" fg:x="931" fg:w="1"/><text x="74.6110%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.44%)</title><rect x="73.1629%" y="565" width="1.4377%" height="15" fill="rgb(227,157,10)" fg:x="916" fg:w="18"/><text x="73.4129%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="73.2428%" y="549" width="1.3578%" height="15" fill="rgb(214,157,37)" fg:x="917" fg:w="17"/><text x="73.4928%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.4409%" y="533" width="0.1597%" height="15" fill="rgb(209,180,35)" fg:x="932" fg:w="2"/><text x="74.6909%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.5208%" y="517" width="0.0799%" height="15" fill="rgb(216,174,49)" fg:x="933" fg:w="1"/><text x="74.7708%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.5208%" y="501" width="0.0799%" height="15" fill="rgb(205,96,20)" fg:x="933" fg:w="1"/><text x="74.7708%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.5208%" y="485" width="0.0799%" height="15" fill="rgb(214,220,39)" fg:x="933" fg:w="1"/><text x="74.7708%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.5208%" y="469" width="0.0799%" height="15" fill="rgb(245,126,30)" fg:x="933" fg:w="1"/><text x="74.7708%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.5208%" y="453" width="0.0799%" height="15" fill="rgb(215,88,33)" fg:x="933" fg:w="1"/><text x="74.7708%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6006%" y="533" width="0.0799%" height="15" fill="rgb(210,1,49)" fg:x="934" fg:w="1"/><text x="74.8506%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.7604%" y="501" width="0.0799%" height="15" fill="rgb(207,133,3)" fg:x="936" fg:w="1"/><text x="75.0104%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="74.6006%" y="565" width="0.3195%" height="15" fill="rgb(231,47,43)" fg:x="934" fg:w="4"/><text x="74.8506%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="74.6006%" y="549" width="0.3195%" height="15" fill="rgb(245,64,1)" fg:x="934" fg:w="4"/><text x="74.8506%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.6805%" y="533" width="0.2396%" height="15" fill="rgb(253,145,20)" fg:x="935" fg:w="3"/><text x="74.9305%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="74.6805%" y="517" width="0.2396%" height="15" fill="rgb(211,39,18)" fg:x="935" fg:w="3"/><text x="74.9305%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.8403%" y="501" width="0.0799%" height="15" fill="rgb(223,225,18)" fg:x="937" fg:w="1"/><text x="75.0903%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.8403%" y="485" width="0.0799%" height="15" fill="rgb(210,202,44)" fg:x="937" fg:w="1"/><text x="75.0903%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.8403%" y="469" width="0.0799%" height="15" fill="rgb(231,138,36)" fg:x="937" fg:w="1"/><text x="75.0903%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.8403%" y="453" width="0.0799%" height="15" fill="rgb(237,115,25)" fg:x="937" fg:w="1"/><text x="75.0903%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0000%" y="517" width="0.0799%" height="15" fill="rgb(215,53,48)" fg:x="939" fg:w="1"/><text x="75.2500%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0799%" y="517" width="0.0799%" height="15" fill="rgb(243,193,24)" fg:x="940" fg:w="1"/><text x="75.3299%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0799%" y="501" width="0.0799%" height="15" fill="rgb(210,106,28)" fg:x="940" fg:w="1"/><text x="75.3299%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.0799%" y="485" width="0.0799%" height="15" fill="rgb(249,192,0)" fg:x="940" fg:w="1"/><text x="75.3299%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1597%" y="517" width="0.0799%" height="15" fill="rgb(224,96,21)" fg:x="941" fg:w="1"/><text x="75.4097%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="75.2396%" y="517" width="0.0799%" height="15" fill="rgb(243,160,19)" fg:x="942" fg:w="1"/><text x="75.4896%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3994%" y="469" width="0.0799%" height="15" fill="rgb(219,205,50)" fg:x="944" fg:w="1"/><text x="75.6494%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3994%" y="453" width="0.0799%" height="15" fill="rgb(218,175,44)" fg:x="944" fg:w="1"/><text x="75.6494%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3994%" y="437" width="0.0799%" height="15" fill="rgb(251,84,47)" fg:x="944" fg:w="1"/><text x="75.6494%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.4792%" y="437" width="0.1597%" height="15" fill="rgb(241,14,16)" fg:x="945" fg:w="2"/><text x="75.7292%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5591%" y="421" width="0.0799%" height="15" fill="rgb(207,142,28)" fg:x="946" fg:w="1"/><text x="75.8091%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5591%" y="405" width="0.0799%" height="15" fill="rgb(208,116,22)" fg:x="946" fg:w="1"/><text x="75.8091%" y="415.50"></text></g><g><title>engine::session::Session::flush (40 samples, 3.19%)</title><rect x="72.6038%" y="645" width="3.1949%" height="15" fill="rgb(210,0,43)" fg:x="909" fg:w="40"/><text x="72.8538%" y="655.50">eng..</text></g><g><title>engine::session::state::State::close (35 samples, 2.80%)</title><rect x="73.0032%" y="629" width="2.7955%" height="15" fill="rgb(246,33,21)" fg:x="914" fg:w="35"/><text x="73.2532%" y="639.50">en..</text></g><g><title>engine::session::state::State::flush_entities (35 samples, 2.80%)</title><rect x="73.0032%" y="613" width="2.7955%" height="15" fill="rgb(208,158,54)" fg:x="914" fg:w="35"/><text x="73.2532%" y="623.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (34 samples, 2.72%)</title><rect x="73.0831%" y="597" width="2.7157%" height="15" fill="rgb(218,99,29)" fg:x="915" fg:w="34"/><text x="73.3331%" y="607.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (34 samples, 2.72%)</title><rect x="73.0831%" y="581" width="2.7157%" height="15" fill="rgb(226,29,7)" fg:x="915" fg:w="34"/><text x="73.3331%" y="591.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.88%)</title><rect x="74.9201%" y="565" width="0.8786%" height="15" fill="rgb(206,178,46)" fg:x="938" fg:w="11"/><text x="75.1701%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="74.9201%" y="549" width="0.8786%" height="15" fill="rgb(205,169,32)" fg:x="938" fg:w="11"/><text x="75.1701%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="74.9201%" y="533" width="0.8786%" height="15" fill="rgb(217,4,13)" fg:x="938" fg:w="11"/><text x="75.1701%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="75.3195%" y="517" width="0.4792%" height="15" fill="rgb(210,140,37)" fg:x="943" fg:w="6"/><text x="75.5695%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="75.3195%" y="501" width="0.4792%" height="15" fill="rgb(229,80,10)" fg:x="943" fg:w="6"/><text x="75.5695%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="75.3994%" y="485" width="0.3994%" height="15" fill="rgb(212,175,34)" fg:x="944" fg:w="5"/><text x="75.6494%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="75.4792%" y="469" width="0.3195%" height="15" fill="rgb(216,207,24)" fg:x="945" fg:w="4"/><text x="75.7292%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="75.4792%" y="453" width="0.3195%" height="15" fill="rgb(234,163,3)" fg:x="945" fg:w="4"/><text x="75.7292%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.6390%" y="437" width="0.1597%" height="15" fill="rgb(248,101,16)" fg:x="947" fg:w="2"/><text x="75.8890%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.7188%" y="421" width="0.0799%" height="15" fill="rgb(209,152,54)" fg:x="948" fg:w="1"/><text x="75.9688%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.7188%" y="405" width="0.0799%" height="15" fill="rgb(229,124,51)" fg:x="948" fg:w="1"/><text x="75.9688%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.7188%" y="389" width="0.0799%" height="15" fill="rgb(219,83,18)" fg:x="948" fg:w="1"/><text x="75.9688%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7188%" y="373" width="0.0799%" height="15" fill="rgb(206,29,38)" fg:x="948" fg:w="1"/><text x="75.9688%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7188%" y="357" width="0.0799%" height="15" fill="rgb(245,123,23)" fg:x="948" fg:w="1"/><text x="75.9688%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7188%" y="341" width="0.0799%" height="15" fill="rgb(238,50,33)" fg:x="948" fg:w="1"/><text x="75.9688%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.7987%" y="613" width="0.1597%" height="15" fill="rgb(234,165,23)" fg:x="949" fg:w="2"/><text x="76.0487%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.7987%" y="597" width="0.1597%" height="15" fill="rgb(211,82,31)" fg:x="949" fg:w="2"/><text x="76.0487%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.7987%" y="581" width="0.1597%" height="15" fill="rgb(224,166,46)" fg:x="949" fg:w="2"/><text x="76.0487%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.7987%" y="565" width="0.1597%" height="15" fill="rgb(211,13,8)" fg:x="949" fg:w="2"/><text x="76.0487%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7987%" y="549" width="0.1597%" height="15" fill="rgb(212,7,42)" fg:x="949" fg:w="2"/><text x="76.0487%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.7987%" y="533" width="0.1597%" height="15" fill="rgb(249,102,19)" fg:x="949" fg:w="2"/><text x="76.0487%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7987%" y="517" width="0.1597%" height="15" fill="rgb(225,41,13)" fg:x="949" fg:w="2"/><text x="76.0487%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.7987%" y="501" width="0.1597%" height="15" fill="rgb(220,65,27)" fg:x="949" fg:w="2"/><text x="76.0487%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7987%" y="485" width="0.1597%" height="15" fill="rgb(206,4,41)" fg:x="949" fg:w="2"/><text x="76.0487%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8786%" y="469" width="0.0799%" height="15" fill="rgb(219,60,39)" fg:x="950" fg:w="1"/><text x="76.1286%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8786%" y="453" width="0.0799%" height="15" fill="rgb(226,4,38)" fg:x="950" fg:w="1"/><text x="76.1286%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8786%" y="437" width="0.0799%" height="15" fill="rgb(250,52,3)" fg:x="950" fg:w="1"/><text x="76.1286%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8786%" y="421" width="0.0799%" height="15" fill="rgb(234,93,0)" fg:x="950" fg:w="1"/><text x="76.1286%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.8786%" y="405" width="0.0799%" height="15" fill="rgb(251,47,47)" fg:x="950" fg:w="1"/><text x="76.1286%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="75.9585%" y="613" width="0.0799%" height="15" fill="rgb(205,166,47)" fg:x="951" fg:w="1"/><text x="76.2085%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="75.9585%" y="597" width="0.0799%" height="15" fill="rgb(231,148,8)" fg:x="951" fg:w="1"/><text x="76.2085%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.9585%" y="581" width="0.0799%" height="15" fill="rgb(244,185,19)" fg:x="951" fg:w="1"/><text x="76.2085%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.0383%" y="533" width="0.0799%" height="15" fill="rgb(224,201,45)" fg:x="952" fg:w="1"/><text x="76.2883%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.0383%" y="517" width="0.0799%" height="15" fill="rgb(240,77,39)" fg:x="952" fg:w="1"/><text x="76.2883%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.0383%" y="501" width="0.0799%" height="15" fill="rgb(248,211,29)" fg:x="952" fg:w="1"/><text x="76.2883%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.0383%" y="485" width="0.0799%" height="15" fill="rgb(232,214,46)" fg:x="952" fg:w="1"/><text x="76.2883%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0383%" y="469" width="0.0799%" height="15" fill="rgb(213,99,54)" fg:x="952" fg:w="1"/><text x="76.2883%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0383%" y="453" width="0.0799%" height="15" fill="rgb(240,19,46)" fg:x="952" fg:w="1"/><text x="76.2883%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.0383%" y="437" width="0.0799%" height="15" fill="rgb(243,89,10)" fg:x="952" fg:w="1"/><text x="76.2883%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.0383%" y="421" width="0.0799%" height="15" fill="rgb(249,28,32)" fg:x="952" fg:w="1"/><text x="76.2883%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.0383%" y="405" width="0.0799%" height="15" fill="rgb(253,30,9)" fg:x="952" fg:w="1"/><text x="76.2883%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.0383%" y="389" width="0.0799%" height="15" fill="rgb(217,2,26)" fg:x="952" fg:w="1"/><text x="76.2883%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.0383%" y="373" width="0.0799%" height="15" fill="rgb(220,28,10)" fg:x="952" fg:w="1"/><text x="76.2883%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.0383%" y="357" width="0.0799%" height="15" fill="rgb(228,167,49)" fg:x="952" fg:w="1"/><text x="76.2883%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.0383%" y="341" width="0.0799%" height="15" fill="rgb(238,212,3)" fg:x="952" fg:w="1"/><text x="76.2883%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.0383%" y="325" width="0.0799%" height="15" fill="rgb(229,134,44)" fg:x="952" fg:w="1"/><text x="76.2883%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.0383%" y="309" width="0.0799%" height="15" fill="rgb(208,71,4)" fg:x="952" fg:w="1"/><text x="76.2883%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0383%" y="293" width="0.0799%" height="15" fill="rgb(221,205,45)" fg:x="952" fg:w="1"/><text x="76.2883%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.1182%" y="437" width="0.0799%" height="15" fill="rgb(215,132,38)" fg:x="953" fg:w="1"/><text x="76.3682%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="76.0383%" y="597" width="0.2396%" height="15" fill="rgb(227,158,6)" fg:x="952" fg:w="3"/><text x="76.2883%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="76.0383%" y="581" width="0.2396%" height="15" fill="rgb(250,10,38)" fg:x="952" fg:w="3"/><text x="76.2883%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="76.0383%" y="565" width="0.2396%" height="15" fill="rgb(225,171,40)" fg:x="952" fg:w="3"/><text x="76.2883%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="76.0383%" y="549" width="0.2396%" height="15" fill="rgb(238,17,43)" fg:x="952" fg:w="3"/><text x="76.2883%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="76.1182%" y="533" width="0.1597%" height="15" fill="rgb(208,145,4)" fg:x="953" fg:w="2"/><text x="76.3682%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.1182%" y="517" width="0.1597%" height="15" fill="rgb(232,82,7)" fg:x="953" fg:w="2"/><text x="76.3682%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="76.1182%" y="501" width="0.1597%" height="15" fill="rgb(205,166,38)" fg:x="953" fg:w="2"/><text x="76.3682%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.1182%" y="485" width="0.1597%" height="15" fill="rgb(240,228,4)" fg:x="953" fg:w="2"/><text x="76.3682%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="76.1182%" y="469" width="0.1597%" height="15" fill="rgb(233,121,40)" fg:x="953" fg:w="2"/><text x="76.3682%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="76.1182%" y="453" width="0.1597%" height="15" fill="rgb(243,84,30)" fg:x="953" fg:w="2"/><text x="76.3682%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.1981%" y="437" width="0.0799%" height="15" fill="rgb(235,81,48)" fg:x="954" fg:w="1"/><text x="76.4481%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.1981%" y="421" width="0.0799%" height="15" fill="rgb(218,137,0)" fg:x="954" fg:w="1"/><text x="76.4481%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.96%)</title><rect x="76.0383%" y="613" width="0.9585%" height="15" fill="rgb(223,151,48)" fg:x="952" fg:w="12"/><text x="76.2883%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (9 samples, 0.72%)</title><rect x="76.2780%" y="597" width="0.7188%" height="15" fill="rgb(247,30,19)" fg:x="955" fg:w="9"/><text x="76.5280%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.72%)</title><rect x="76.2780%" y="581" width="0.7188%" height="15" fill="rgb(205,129,29)" fg:x="955" fg:w="9"/><text x="76.5280%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (9 samples, 0.72%)</title><rect x="76.2780%" y="565" width="0.7188%" height="15" fill="rgb(222,29,2)" fg:x="955" fg:w="9"/><text x="76.5280%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.72%)</title><rect x="76.2780%" y="549" width="0.7188%" height="15" fill="rgb(232,145,33)" fg:x="955" fg:w="9"/><text x="76.5280%" y="559.50"></text></g><g><title>__libc_malloc (9 samples, 0.72%)</title><rect x="76.2780%" y="533" width="0.7188%" height="15" fill="rgb(217,30,31)" fg:x="955" fg:w="9"/><text x="76.5280%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="75.7987%" y="629" width="1.2780%" height="15" fill="rgb(243,22,52)" fg:x="949" fg:w="16"/><text x="76.0487%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="76.9968%" y="613" width="0.0799%" height="15" fill="rgb(254,228,14)" fg:x="964" fg:w="1"/><text x="77.2468%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3163%" y="485" width="0.0799%" height="15" fill="rgb(231,45,50)" fg:x="968" fg:w="1"/><text x="77.5663%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3163%" y="469" width="0.0799%" height="15" fill="rgb(248,125,3)" fg:x="968" fg:w="1"/><text x="77.5663%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3163%" y="453" width="0.0799%" height="15" fill="rgb(213,76,9)" fg:x="968" fg:w="1"/><text x="77.5663%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.3163%" y="437" width="0.0799%" height="15" fill="rgb(238,108,21)" fg:x="968" fg:w="1"/><text x="77.5663%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.3163%" y="421" width="0.0799%" height="15" fill="rgb(229,214,19)" fg:x="968" fg:w="1"/><text x="77.5663%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.3163%" y="405" width="0.0799%" height="15" fill="rgb(252,201,5)" fg:x="968" fg:w="1"/><text x="77.5663%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3163%" y="389" width="0.0799%" height="15" fill="rgb(233,165,49)" fg:x="968" fg:w="1"/><text x="77.5663%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3163%" y="373" width="0.0799%" height="15" fill="rgb(208,165,19)" fg:x="968" fg:w="1"/><text x="77.5663%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.3163%" y="357" width="0.0799%" height="15" fill="rgb(216,220,31)" fg:x="968" fg:w="1"/><text x="77.5663%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.3163%" y="341" width="0.0799%" height="15" fill="rgb(214,8,31)" fg:x="968" fg:w="1"/><text x="77.5663%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.3163%" y="325" width="0.0799%" height="15" fill="rgb(220,32,32)" fg:x="968" fg:w="1"/><text x="77.5663%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.3163%" y="309" width="0.0799%" height="15" fill="rgb(237,172,34)" fg:x="968" fg:w="1"/><text x="77.5663%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3163%" y="293" width="0.0799%" height="15" fill="rgb(240,209,5)" fg:x="968" fg:w="1"/><text x="77.5663%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="77.1565%" y="613" width="0.3195%" height="15" fill="rgb(221,219,1)" fg:x="966" fg:w="4"/><text x="77.4065%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="77.1565%" y="597" width="0.3195%" height="15" fill="rgb(237,90,36)" fg:x="966" fg:w="4"/><text x="77.4065%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="77.1565%" y="581" width="0.3195%" height="15" fill="rgb(245,14,51)" fg:x="966" fg:w="4"/><text x="77.4065%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="77.1565%" y="565" width="0.3195%" height="15" fill="rgb(211,71,49)" fg:x="966" fg:w="4"/><text x="77.4065%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="77.1565%" y="549" width="0.3195%" height="15" fill="rgb(230,223,9)" fg:x="966" fg:w="4"/><text x="77.4065%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="77.2364%" y="533" width="0.2396%" height="15" fill="rgb(212,33,31)" fg:x="967" fg:w="3"/><text x="77.4864%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="77.2364%" y="517" width="0.2396%" height="15" fill="rgb(218,141,5)" fg:x="967" fg:w="3"/><text x="77.4864%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.3163%" y="501" width="0.1597%" height="15" fill="rgb(239,194,8)" fg:x="968" fg:w="2"/><text x="77.5663%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3962%" y="485" width="0.0799%" height="15" fill="rgb(225,119,29)" fg:x="969" fg:w="1"/><text x="77.6462%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3962%" y="469" width="0.0799%" height="15" fill="rgb(233,32,3)" fg:x="969" fg:w="1"/><text x="77.6462%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.3962%" y="453" width="0.0799%" height="15" fill="rgb(248,126,40)" fg:x="969" fg:w="1"/><text x="77.6462%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.3962%" y="437" width="0.0799%" height="15" fill="rgb(213,102,53)" fg:x="969" fg:w="1"/><text x="77.6462%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.3962%" y="421" width="0.0799%" height="15" fill="rgb(212,69,15)" fg:x="969" fg:w="1"/><text x="77.6462%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3962%" y="405" width="0.0799%" height="15" fill="rgb(253,39,34)" fg:x="969" fg:w="1"/><text x="77.6462%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3962%" y="389" width="0.0799%" height="15" fill="rgb(205,189,54)" fg:x="969" fg:w="1"/><text x="77.6462%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.3962%" y="373" width="0.0799%" height="15" fill="rgb(234,229,45)" fg:x="969" fg:w="1"/><text x="77.6462%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.3962%" y="357" width="0.0799%" height="15" fill="rgb(243,79,48)" fg:x="969" fg:w="1"/><text x="77.6462%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.3962%" y="341" width="0.0799%" height="15" fill="rgb(206,71,50)" fg:x="969" fg:w="1"/><text x="77.6462%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.3962%" y="325" width="0.0799%" height="15" fill="rgb(209,32,17)" fg:x="969" fg:w="1"/><text x="77.6462%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3962%" y="309" width="0.0799%" height="15" fill="rgb(219,229,6)" fg:x="969" fg:w="1"/><text x="77.6462%" y="319.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="77.4760%" y="613" width="0.2396%" height="15" fill="rgb(226,25,27)" fg:x="970" fg:w="3"/><text x="77.7260%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="77.5559%" y="597" width="0.1597%" height="15" fill="rgb(218,185,23)" fg:x="971" fg:w="2"/><text x="77.8059%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.5559%" y="581" width="0.1597%" height="15" fill="rgb(242,123,5)" fg:x="971" fg:w="2"/><text x="77.8059%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6358%" y="565" width="0.0799%" height="15" fill="rgb(215,53,19)" fg:x="972" fg:w="1"/><text x="77.8858%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7955%" y="517" width="0.0799%" height="15" fill="rgb(233,20,30)" fg:x="974" fg:w="1"/><text x="78.0455%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7955%" y="501" width="0.0799%" height="15" fill="rgb(209,67,20)" fg:x="974" fg:w="1"/><text x="78.0455%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7955%" y="485" width="0.0799%" height="15" fill="rgb(227,181,50)" fg:x="974" fg:w="1"/><text x="78.0455%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7955%" y="469" width="0.0799%" height="15" fill="rgb(252,75,38)" fg:x="974" fg:w="1"/><text x="78.0455%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.7955%" y="453" width="0.0799%" height="15" fill="rgb(235,9,33)" fg:x="974" fg:w="1"/><text x="78.0455%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7955%" y="437" width="0.0799%" height="15" fill="rgb(208,87,30)" fg:x="974" fg:w="1"/><text x="78.0455%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="77.7157%" y="565" width="0.2396%" height="15" fill="rgb(215,199,39)" fg:x="973" fg:w="3"/><text x="77.9657%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="77.7157%" y="549" width="0.2396%" height="15" fill="rgb(246,208,12)" fg:x="973" fg:w="3"/><text x="77.9657%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="77.7157%" y="533" width="0.2396%" height="15" fill="rgb(206,195,10)" fg:x="973" fg:w="3"/><text x="77.9657%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8754%" y="517" width="0.0799%" height="15" fill="rgb(244,1,30)" fg:x="975" fg:w="1"/><text x="78.1254%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.8754%" y="501" width="0.0799%" height="15" fill="rgb(230,83,5)" fg:x="975" fg:w="1"/><text x="78.1254%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8754%" y="485" width="0.0799%" height="15" fill="rgb(239,62,17)" fg:x="975" fg:w="1"/><text x="78.1254%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8754%" y="469" width="0.0799%" height="15" fill="rgb(252,193,41)" fg:x="975" fg:w="1"/><text x="78.1254%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8754%" y="453" width="0.0799%" height="15" fill="rgb(216,142,19)" fg:x="975" fg:w="1"/><text x="78.1254%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="77.7157%" y="613" width="0.3195%" height="15" fill="rgb(240,81,38)" fg:x="973" fg:w="4"/><text x="77.9657%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="77.7157%" y="597" width="0.3195%" height="15" fill="rgb(240,109,40)" fg:x="973" fg:w="4"/><text x="77.9657%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="77.7157%" y="581" width="0.3195%" height="15" fill="rgb(230,123,10)" fg:x="973" fg:w="4"/><text x="77.9657%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.9553%" y="565" width="0.0799%" height="15" fill="rgb(253,42,32)" fg:x="976" fg:w="1"/><text x="78.2053%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.9553%" y="549" width="0.0799%" height="15" fill="rgb(218,154,8)" fg:x="976" fg:w="1"/><text x="78.2053%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.9553%" y="533" width="0.0799%" height="15" fill="rgb(216,197,10)" fg:x="976" fg:w="1"/><text x="78.2053%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9553%" y="517" width="0.0799%" height="15" fill="rgb(223,107,12)" fg:x="976" fg:w="1"/><text x="78.2053%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9553%" y="501" width="0.0799%" height="15" fill="rgb(241,174,42)" fg:x="976" fg:w="1"/><text x="78.2053%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9553%" y="485" width="0.0799%" height="15" fill="rgb(231,78,20)" fg:x="976" fg:w="1"/><text x="78.2053%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9553%" y="469" width="0.0799%" height="15" fill="rgb(230,208,49)" fg:x="976" fg:w="1"/><text x="78.2053%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.9553%" y="453" width="0.0799%" height="15" fill="rgb(238,11,34)" fg:x="976" fg:w="1"/><text x="78.2053%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9553%" y="437" width="0.0799%" height="15" fill="rgb(210,130,26)" fg:x="976" fg:w="1"/><text x="78.2053%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9553%" y="421" width="0.0799%" height="15" fill="rgb(242,131,11)" fg:x="976" fg:w="1"/><text x="78.2053%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9553%" y="405" width="0.0799%" height="15" fill="rgb(237,38,28)" fg:x="976" fg:w="1"/><text x="78.2053%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.9553%" y="389" width="0.0799%" height="15" fill="rgb(244,180,43)" fg:x="976" fg:w="1"/><text x="78.2053%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9553%" y="373" width="0.0799%" height="15" fill="rgb(214,171,19)" fg:x="976" fg:w="1"/><text x="78.2053%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (29 samples, 2.32%)</title><rect x="75.7987%" y="645" width="2.3163%" height="15" fill="rgb(252,101,45)" fg:x="949" fg:w="29"/><text x="76.0487%" y="655.50">p..</text></g><g><title>plugins_core::tools::set_container (13 samples, 1.04%)</title><rect x="77.0767%" y="629" width="1.0383%" height="15" fill="rgb(211,96,33)" fg:x="965" fg:w="13"/><text x="77.3267%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="78.0351%" y="613" width="0.0799%" height="15" fill="rgb(207,80,25)" fg:x="977" fg:w="1"/><text x="78.2851%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.0351%" y="597" width="0.0799%" height="15" fill="rgb(225,15,35)" fg:x="977" fg:w="1"/><text x="78.2851%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0351%" y="581" width="0.0799%" height="15" fill="rgb(214,93,43)" fg:x="977" fg:w="1"/><text x="78.2851%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.0351%" y="565" width="0.0799%" height="15" fill="rgb(248,42,37)" fg:x="977" fg:w="1"/><text x="78.2851%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0351%" y="549" width="0.0799%" height="15" fill="rgb(217,135,32)" fg:x="977" fg:w="1"/><text x="78.2851%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.0351%" y="533" width="0.0799%" height="15" fill="rgb(216,74,28)" fg:x="977" fg:w="1"/><text x="78.2851%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.0351%" y="517" width="0.0799%" height="15" fill="rgb(247,108,16)" fg:x="977" fg:w="1"/><text x="78.2851%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.0351%" y="501" width="0.0799%" height="15" fill="rgb(205,219,30)" fg:x="977" fg:w="1"/><text x="78.2851%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="78.0351%" y="485" width="0.0799%" height="15" fill="rgb(241,122,9)" fg:x="977" fg:w="1"/><text x="78.2851%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="78.1150%" y="597" width="0.0799%" height="15" fill="rgb(216,148,50)" fg:x="978" fg:w="1"/><text x="78.3650%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="78.1150%" y="581" width="0.0799%" height="15" fill="rgb(226,154,2)" fg:x="978" fg:w="1"/><text x="78.3650%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.1150%" y="565" width="0.0799%" height="15" fill="rgb(220,128,1)" fg:x="978" fg:w="1"/><text x="78.3650%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="78.1150%" y="549" width="0.0799%" height="15" fill="rgb(245,185,29)" fg:x="978" fg:w="1"/><text x="78.3650%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="78.1150%" y="613" width="0.1597%" height="15" fill="rgb(243,161,2)" fg:x="978" fg:w="2"/><text x="78.3650%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.1949%" y="597" width="0.0799%" height="15" fill="rgb(249,215,17)" fg:x="979" fg:w="1"/><text x="78.4449%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.1949%" y="581" width="0.0799%" height="15" fill="rgb(237,67,11)" fg:x="979" fg:w="1"/><text x="78.4449%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="565" width="0.0799%" height="15" fill="rgb(239,17,24)" fg:x="979" fg:w="1"/><text x="78.4449%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.1949%" y="549" width="0.0799%" height="15" fill="rgb(215,97,29)" fg:x="979" fg:w="1"/><text x="78.4449%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="533" width="0.0799%" height="15" fill="rgb(253,228,42)" fg:x="979" fg:w="1"/><text x="78.4449%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="517" width="0.0799%" height="15" fill="rgb(240,85,2)" fg:x="979" fg:w="1"/><text x="78.4449%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="501" width="0.0799%" height="15" fill="rgb(214,155,4)" fg:x="979" fg:w="1"/><text x="78.4449%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.1949%" y="485" width="0.0799%" height="15" fill="rgb(247,120,22)" fg:x="979" fg:w="1"/><text x="78.4449%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="469" width="0.0799%" height="15" fill="rgb(211,208,6)" fg:x="979" fg:w="1"/><text x="78.4449%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="453" width="0.0799%" height="15" fill="rgb(235,99,41)" fg:x="979" fg:w="1"/><text x="78.4449%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="437" width="0.0799%" height="15" fill="rgb(223,28,8)" fg:x="979" fg:w="1"/><text x="78.4449%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.1949%" y="421" width="0.0799%" height="15" fill="rgb(212,71,20)" fg:x="979" fg:w="1"/><text x="78.4449%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="405" width="0.0799%" height="15" fill="rgb(206,85,3)" fg:x="979" fg:w="1"/><text x="78.4449%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="389" width="0.0799%" height="15" fill="rgb(244,180,11)" fg:x="979" fg:w="1"/><text x="78.4449%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="373" width="0.0799%" height="15" fill="rgb(223,16,21)" fg:x="979" fg:w="1"/><text x="78.4449%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.1949%" y="357" width="0.0799%" height="15" fill="rgb(238,85,42)" fg:x="979" fg:w="1"/><text x="78.4449%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.1949%" y="341" width="0.0799%" height="15" fill="rgb(205,85,8)" fg:x="979" fg:w="1"/><text x="78.4449%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1949%" y="325" width="0.0799%" height="15" fill="rgb(217,190,15)" fg:x="979" fg:w="1"/><text x="78.4449%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1949%" y="309" width="0.0799%" height="15" fill="rgb(243,192,23)" fg:x="979" fg:w="1"/><text x="78.4449%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.1949%" y="293" width="0.0799%" height="15" fill="rgb(223,220,37)" fg:x="979" fg:w="1"/><text x="78.4449%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.1949%" y="277" width="0.0799%" height="15" fill="rgb(208,41,17)" fg:x="979" fg:w="1"/><text x="78.4449%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.1949%" y="261" width="0.0799%" height="15" fill="rgb(224,188,7)" fg:x="979" fg:w="1"/><text x="78.4449%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.1949%" y="245" width="0.0799%" height="15" fill="rgb(236,16,50)" fg:x="979" fg:w="1"/><text x="78.4449%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.1949%" y="229" width="0.0799%" height="15" fill="rgb(238,6,24)" fg:x="979" fg:w="1"/><text x="78.4449%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.1949%" y="213" width="0.0799%" height="15" fill="rgb(253,67,45)" fg:x="979" fg:w="1"/><text x="78.4449%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.1949%" y="197" width="0.0799%" height="15" fill="rgb(210,89,32)" fg:x="979" fg:w="1"/><text x="78.4449%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.1949%" y="181" width="0.0799%" height="15" fill="rgb(208,89,9)" fg:x="979" fg:w="1"/><text x="78.4449%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.1949%" y="165" width="0.0799%" height="15" fill="rgb(222,180,44)" fg:x="979" fg:w="1"/><text x="78.4449%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="78.1949%" y="149" width="0.0799%" height="15" fill="rgb(250,181,46)" fg:x="979" fg:w="1"/><text x="78.4449%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="78.1949%" y="133" width="0.0799%" height="15" fill="rgb(210,190,26)" fg:x="979" fg:w="1"/><text x="78.4449%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="78.1949%" y="117" width="0.0799%" height="15" fill="rgb(253,49,13)" fg:x="979" fg:w="1"/><text x="78.4449%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.1949%" y="101" width="0.0799%" height="15" fill="rgb(240,184,42)" fg:x="979" fg:w="1"/><text x="78.4449%" y="111.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="78.2748%" y="597" width="0.0799%" height="15" fill="rgb(246,59,37)" fg:x="980" fg:w="1"/><text x="78.5248%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3546%" y="533" width="0.0799%" height="15" fill="rgb(207,134,54)" fg:x="981" fg:w="1"/><text x="78.6046%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3546%" y="517" width="0.0799%" height="15" fill="rgb(250,122,24)" fg:x="981" fg:w="1"/><text x="78.6046%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3546%" y="501" width="0.0799%" height="15" fill="rgb(239,206,3)" fg:x="981" fg:w="1"/><text x="78.6046%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.3546%" y="565" width="0.1597%" height="15" fill="rgb(253,220,32)" fg:x="981" fg:w="2"/><text x="78.6046%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.3546%" y="549" width="0.1597%" height="15" fill="rgb(209,217,48)" fg:x="981" fg:w="2"/><text x="78.6046%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4345%" y="533" width="0.0799%" height="15" fill="rgb(242,91,39)" fg:x="982" fg:w="1"/><text x="78.6845%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="78.2748%" y="613" width="0.3195%" height="15" fill="rgb(228,4,13)" fg:x="980" fg:w="4"/><text x="78.5248%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="78.3546%" y="597" width="0.2396%" height="15" fill="rgb(223,133,4)" fg:x="981" fg:w="3"/><text x="78.6046%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="78.3546%" y="581" width="0.2396%" height="15" fill="rgb(215,105,30)" fg:x="981" fg:w="3"/><text x="78.6046%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5144%" y="565" width="0.0799%" height="15" fill="rgb(230,9,4)" fg:x="983" fg:w="1"/><text x="78.7644%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5144%" y="549" width="0.0799%" height="15" fill="rgb(248,15,2)" fg:x="983" fg:w="1"/><text x="78.7644%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5144%" y="533" width="0.0799%" height="15" fill="rgb(208,210,22)" fg:x="983" fg:w="1"/><text x="78.7644%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5144%" y="517" width="0.0799%" height="15" fill="rgb(208,112,41)" fg:x="983" fg:w="1"/><text x="78.7644%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.5144%" y="501" width="0.0799%" height="15" fill="rgb(232,83,14)" fg:x="983" fg:w="1"/><text x="78.7644%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5144%" y="485" width="0.0799%" height="15" fill="rgb(229,65,11)" fg:x="983" fg:w="1"/><text x="78.7644%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5144%" y="469" width="0.0799%" height="15" fill="rgb(228,126,24)" fg:x="983" fg:w="1"/><text x="78.7644%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5144%" y="453" width="0.0799%" height="15" fill="rgb(218,66,33)" fg:x="983" fg:w="1"/><text x="78.7644%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5144%" y="437" width="0.0799%" height="15" fill="rgb(251,49,52)" fg:x="983" fg:w="1"/><text x="78.7644%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5144%" y="421" width="0.0799%" height="15" fill="rgb(219,46,37)" fg:x="983" fg:w="1"/><text x="78.7644%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="78.5144%" y="405" width="0.0799%" height="15" fill="rgb(213,53,49)" fg:x="983" fg:w="1"/><text x="78.7644%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.6741%" y="565" width="0.0799%" height="15" fill="rgb(214,134,1)" fg:x="985" fg:w="1"/><text x="78.9241%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.6741%" y="549" width="0.0799%" height="15" fill="rgb(208,139,43)" fg:x="985" fg:w="1"/><text x="78.9241%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6741%" y="533" width="0.0799%" height="15" fill="rgb(231,105,35)" fg:x="985" fg:w="1"/><text x="78.9241%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6741%" y="517" width="0.0799%" height="15" fill="rgb(247,189,9)" fg:x="985" fg:w="1"/><text x="78.9241%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="78.1150%" y="645" width="0.7188%" height="15" fill="rgb(252,48,51)" fg:x="978" fg:w="9"/><text x="78.3650%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="78.1150%" y="629" width="0.7188%" height="15" fill="rgb(209,121,1)" fg:x="978" fg:w="9"/><text x="78.3650%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="78.5942%" y="613" width="0.2396%" height="15" fill="rgb(231,40,26)" fg:x="984" fg:w="3"/><text x="78.8442%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="78.6741%" y="597" width="0.1597%" height="15" fill="rgb(251,8,13)" fg:x="985" fg:w="2"/><text x="78.9241%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="78.6741%" y="581" width="0.1597%" height="15" fill="rgb(231,110,2)" fg:x="985" fg:w="2"/><text x="78.9241%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.7540%" y="565" width="0.0799%" height="15" fill="rgb(216,153,22)" fg:x="986" fg:w="1"/><text x="79.0040%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.7540%" y="549" width="0.0799%" height="15" fill="rgb(249,116,49)" fg:x="986" fg:w="1"/><text x="79.0040%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.7540%" y="533" width="0.0799%" height="15" fill="rgb(230,89,2)" fg:x="986" fg:w="1"/><text x="79.0040%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7540%" y="517" width="0.0799%" height="15" fill="rgb(231,125,23)" fg:x="986" fg:w="1"/><text x="79.0040%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7540%" y="501" width="0.0799%" height="15" fill="rgb(212,217,18)" fg:x="986" fg:w="1"/><text x="79.0040%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.7540%" y="485" width="0.0799%" height="15" fill="rgb(210,21,33)" fg:x="986" fg:w="1"/><text x="79.0040%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.7540%" y="469" width="0.0799%" height="15" fill="rgb(241,97,9)" fg:x="986" fg:w="1"/><text x="79.0040%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.7540%" y="453" width="0.0799%" height="15" fill="rgb(221,35,31)" fg:x="986" fg:w="1"/><text x="79.0040%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.7540%" y="437" width="0.0799%" height="15" fill="rgb(251,23,23)" fg:x="986" fg:w="1"/><text x="79.0040%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.7540%" y="421" width="0.0799%" height="15" fill="rgb(227,165,2)" fg:x="986" fg:w="1"/><text x="79.0040%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.7540%" y="405" width="0.0799%" height="15" fill="rgb(242,24,2)" fg:x="986" fg:w="1"/><text x="79.0040%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.7540%" y="389" width="0.0799%" height="15" fill="rgb(242,138,51)" fg:x="986" fg:w="1"/><text x="79.0040%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.7540%" y="373" width="0.0799%" height="15" fill="rgb(220,219,5)" fg:x="986" fg:w="1"/><text x="79.0040%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.7540%" y="357" width="0.0799%" height="15" fill="rgb(247,53,29)" fg:x="986" fg:w="1"/><text x="79.0040%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7540%" y="341" width="0.0799%" height="15" fill="rgb(233,43,39)" fg:x="986" fg:w="1"/><text x="79.0040%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9936%" y="565" width="0.0799%" height="15" fill="rgb(230,128,54)" fg:x="989" fg:w="1"/><text x="79.2436%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.9936%" y="549" width="0.0799%" height="15" fill="rgb(218,20,12)" fg:x="989" fg:w="1"/><text x="79.2436%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.9936%" y="533" width="0.0799%" height="15" fill="rgb(206,51,14)" fg:x="989" fg:w="1"/><text x="79.2436%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.0735%" y="533" width="0.0799%" height="15" fill="rgb(223,16,35)" fg:x="990" fg:w="1"/><text x="79.3235%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="78.9936%" y="629" width="0.3195%" height="15" fill="rgb(226,165,37)" fg:x="989" fg:w="4"/><text x="79.2436%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="78.9936%" y="613" width="0.3195%" height="15" fill="rgb(240,26,21)" fg:x="989" fg:w="4"/><text x="79.2436%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="78.9936%" y="597" width="0.3195%" height="15" fill="rgb(240,72,46)" fg:x="989" fg:w="4"/><text x="79.2436%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="78.9936%" y="581" width="0.3195%" height="15" fill="rgb(211,33,41)" fg:x="989" fg:w="4"/><text x="79.2436%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="79.0735%" y="565" width="0.2396%" height="15" fill="rgb(224,157,46)" fg:x="990" fg:w="3"/><text x="79.3235%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="79.0735%" y="549" width="0.2396%" height="15" fill="rgb(223,59,19)" fg:x="990" fg:w="3"/><text x="79.3235%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.1534%" y="533" width="0.1597%" height="15" fill="rgb(239,187,1)" fg:x="991" fg:w="2"/><text x="79.4034%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.1534%" y="517" width="0.1597%" height="15" fill="rgb(226,95,9)" fg:x="991" fg:w="2"/><text x="79.4034%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="79.1534%" y="501" width="0.1597%" height="15" fill="rgb(234,61,54)" fg:x="991" fg:w="2"/><text x="79.4034%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.1534%" y="485" width="0.1597%" height="15" fill="rgb(205,209,47)" fg:x="991" fg:w="2"/><text x="79.4034%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.1534%" y="469" width="0.1597%" height="15" fill="rgb(228,7,43)" fg:x="991" fg:w="2"/><text x="79.4034%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.1534%" y="453" width="0.1597%" height="15" fill="rgb(240,217,52)" fg:x="991" fg:w="2"/><text x="79.4034%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.2332%" y="437" width="0.0799%" height="15" fill="rgb(211,178,21)" fg:x="992" fg:w="1"/><text x="79.4832%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.2332%" y="421" width="0.0799%" height="15" fill="rgb(205,25,34)" fg:x="992" fg:w="1"/><text x="79.4832%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="79.2332%" y="405" width="0.0799%" height="15" fill="rgb(209,57,11)" fg:x="992" fg:w="1"/><text x="79.4832%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="79.2332%" y="389" width="0.0799%" height="15" fill="rgb(221,99,2)" fg:x="992" fg:w="1"/><text x="79.4832%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="79.3131%" y="597" width="0.0799%" height="15" fill="rgb(232,79,22)" fg:x="993" fg:w="1"/><text x="79.5631%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="79.3131%" y="581" width="0.0799%" height="15" fill="rgb(221,145,32)" fg:x="993" fg:w="1"/><text x="79.5631%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="79.3131%" y="629" width="0.1597%" height="15" fill="rgb(236,133,36)" fg:x="993" fg:w="2"/><text x="79.5631%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="79.3131%" y="613" width="0.1597%" height="15" fill="rgb(208,224,44)" fg:x="993" fg:w="2"/><text x="79.5631%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.3930%" y="597" width="0.0799%" height="15" fill="rgb(235,143,15)" fg:x="994" fg:w="1"/><text x="79.6430%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3930%" y="581" width="0.0799%" height="15" fill="rgb(249,83,27)" fg:x="994" fg:w="1"/><text x="79.6430%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="79.4728%" y="581" width="0.0799%" height="15" fill="rgb(238,226,19)" fg:x="995" fg:w="1"/><text x="79.7228%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="79.4728%" y="565" width="0.0799%" height="15" fill="rgb(226,206,27)" fg:x="995" fg:w="1"/><text x="79.7228%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.4728%" y="549" width="0.0799%" height="15" fill="rgb(251,182,9)" fg:x="995" fg:w="1"/><text x="79.7228%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.4728%" y="533" width="0.0799%" height="15" fill="rgb(212,140,41)" fg:x="995" fg:w="1"/><text x="79.7228%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.4728%" y="517" width="0.0799%" height="15" fill="rgb(220,106,18)" fg:x="995" fg:w="1"/><text x="79.7228%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.4728%" y="501" width="0.0799%" height="15" fill="rgb(252,46,41)" fg:x="995" fg:w="1"/><text x="79.7228%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.4728%" y="485" width="0.0799%" height="15" fill="rgb(209,222,15)" fg:x="995" fg:w="1"/><text x="79.7228%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.4728%" y="469" width="0.0799%" height="15" fill="rgb(233,83,50)" fg:x="995" fg:w="1"/><text x="79.7228%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.4728%" y="453" width="0.0799%" height="15" fill="rgb(205,212,0)" fg:x="995" fg:w="1"/><text x="79.7228%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.4728%" y="437" width="0.0799%" height="15" fill="rgb(235,117,51)" fg:x="995" fg:w="1"/><text x="79.7228%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.6326%" y="549" width="0.0799%" height="15" fill="rgb(233,133,48)" fg:x="997" fg:w="1"/><text x="79.8826%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.6326%" y="533" width="0.0799%" height="15" fill="rgb(219,3,2)" fg:x="997" fg:w="1"/><text x="79.8826%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.6326%" y="517" width="0.0799%" height="15" fill="rgb(225,80,52)" fg:x="997" fg:w="1"/><text x="79.8826%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6326%" y="501" width="0.0799%" height="15" fill="rgb(235,195,42)" fg:x="997" fg:w="1"/><text x="79.8826%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6326%" y="485" width="0.0799%" height="15" fill="rgb(240,207,46)" fg:x="997" fg:w="1"/><text x="79.8826%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6326%" y="469" width="0.0799%" height="15" fill="rgb(236,112,50)" fg:x="997" fg:w="1"/><text x="79.8826%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6326%" y="453" width="0.0799%" height="15" fill="rgb(249,151,27)" fg:x="997" fg:w="1"/><text x="79.8826%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.6326%" y="437" width="0.0799%" height="15" fill="rgb(253,223,52)" fg:x="997" fg:w="1"/><text x="79.8826%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6326%" y="421" width="0.0799%" height="15" fill="rgb(215,55,33)" fg:x="997" fg:w="1"/><text x="79.8826%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="79.7125%" y="533" width="0.0799%" height="15" fill="rgb(207,24,17)" fg:x="998" fg:w="1"/><text x="79.9625%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.7125%" y="517" width="0.0799%" height="15" fill="rgb(218,169,32)" fg:x="998" fg:w="1"/><text x="79.9625%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="79.7923%" y="533" width="0.0799%" height="15" fill="rgb(209,210,6)" fg:x="999" fg:w="1"/><text x="80.0423%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.7923%" y="517" width="0.0799%" height="15" fill="rgb(225,208,8)" fg:x="999" fg:w="1"/><text x="80.0423%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.7923%" y="501" width="0.0799%" height="15" fill="rgb(238,14,32)" fg:x="999" fg:w="1"/><text x="80.0423%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.7923%" y="485" width="0.0799%" height="15" fill="rgb(211,137,3)" fg:x="999" fg:w="1"/><text x="80.0423%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="79.7125%" y="549" width="0.2396%" height="15" fill="rgb(207,171,19)" fg:x="998" fg:w="3"/><text x="79.9625%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.8722%" y="533" width="0.0799%" height="15" fill="rgb(250,80,8)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.8722%" y="517" width="0.0799%" height="15" fill="rgb(209,103,53)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.8722%" y="501" width="0.0799%" height="15" fill="rgb(233,198,10)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.8722%" y="485" width="0.0799%" height="15" fill="rgb(236,125,25)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.8722%" y="469" width="0.0799%" height="15" fill="rgb(254,182,48)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.8722%" y="453" width="0.0799%" height="15" fill="rgb(216,108,44)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.8722%" y="437" width="0.0799%" height="15" fill="rgb(222,72,39)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.8722%" y="421" width="0.0799%" height="15" fill="rgb(252,70,39)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.8722%" y="405" width="0.0799%" height="15" fill="rgb(243,99,34)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.8722%" y="389" width="0.0799%" height="15" fill="rgb(252,109,12)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.8722%" y="373" width="0.0799%" height="15" fill="rgb(211,186,10)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.8722%" y="357" width="0.0799%" height="15" fill="rgb(246,90,8)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.8722%" y="341" width="0.0799%" height="15" fill="rgb(226,91,24)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8722%" y="325" width="0.0799%" height="15" fill="rgb(216,28,44)" fg:x="1000" fg:w="1"/><text x="80.1222%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.9521%" y="453" width="0.0799%" height="15" fill="rgb(229,36,0)" fg:x="1001" fg:w="1"/><text x="80.2021%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.9521%" y="437" width="0.0799%" height="15" fill="rgb(245,97,18)" fg:x="1001" fg:w="1"/><text x="80.2021%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.9521%" y="421" width="0.0799%" height="15" fill="rgb(241,97,54)" fg:x="1001" fg:w="1"/><text x="80.2021%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.9521%" y="405" width="0.0799%" height="15" fill="rgb(234,125,17)" fg:x="1001" fg:w="1"/><text x="80.2021%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="79.9521%" y="469" width="0.1597%" height="15" fill="rgb(228,172,39)" fg:x="1001" fg:w="2"/><text x="80.2021%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0319%" y="453" width="0.0799%" height="15" fill="rgb(227,169,1)" fg:x="1002" fg:w="1"/><text x="80.2819%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="79.5527%" y="565" width="0.6390%" height="15" fill="rgb(206,13,35)" fg:x="996" fg:w="8"/><text x="79.8027%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="79.9521%" y="549" width="0.2396%" height="15" fill="rgb(211,117,30)" fg:x="1001" fg:w="3"/><text x="80.2021%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="79.9521%" y="533" width="0.2396%" height="15" fill="rgb(230,198,4)" fg:x="1001" fg:w="3"/><text x="80.2021%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="79.9521%" y="517" width="0.2396%" height="15" fill="rgb(213,87,54)" fg:x="1001" fg:w="3"/><text x="80.2021%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="79.9521%" y="501" width="0.2396%" height="15" fill="rgb(248,43,22)" fg:x="1001" fg:w="3"/><text x="80.2021%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="79.9521%" y="485" width="0.2396%" height="15" fill="rgb(213,175,48)" fg:x="1001" fg:w="3"/><text x="80.2021%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1118%" y="469" width="0.0799%" height="15" fill="rgb(252,55,9)" fg:x="1003" fg:w="1"/><text x="80.3618%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.1118%" y="453" width="0.0799%" height="15" fill="rgb(231,72,33)" fg:x="1003" fg:w="1"/><text x="80.3618%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1118%" y="437" width="0.0799%" height="15" fill="rgb(213,2,54)" fg:x="1003" fg:w="1"/><text x="80.3618%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1118%" y="421" width="0.0799%" height="15" fill="rgb(208,88,25)" fg:x="1003" fg:w="1"/><text x="80.3618%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.1118%" y="405" width="0.0799%" height="15" fill="rgb(215,117,13)" fg:x="1003" fg:w="1"/><text x="80.3618%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1118%" y="389" width="0.0799%" height="15" fill="rgb(243,147,21)" fg:x="1003" fg:w="1"/><text x="80.3618%" y="399.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.72%)</title><rect x="79.5527%" y="581" width="0.7188%" height="15" fill="rgb(208,215,36)" fg:x="996" fg:w="9"/><text x="79.8027%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="80.1917%" y="565" width="0.0799%" height="15" fill="rgb(238,187,24)" fg:x="1004" fg:w="1"/><text x="80.4417%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="80.1917%" y="549" width="0.0799%" height="15" fill="rgb(214,173,11)" fg:x="1004" fg:w="1"/><text x="80.4417%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.1917%" y="533" width="0.0799%" height="15" fill="rgb(222,71,20)" fg:x="1004" fg:w="1"/><text x="80.4417%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.88%)</title><rect x="79.4728%" y="629" width="0.8786%" height="15" fill="rgb(242,125,4)" fg:x="995" fg:w="11"/><text x="79.7228%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="79.4728%" y="613" width="0.8786%" height="15" fill="rgb(217,101,52)" fg:x="995" fg:w="11"/><text x="79.7228%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.88%)</title><rect x="79.4728%" y="597" width="0.8786%" height="15" fill="rgb(223,2,50)" fg:x="995" fg:w="11"/><text x="79.7228%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="80.2716%" y="581" width="0.0799%" height="15" fill="rgb(225,197,9)" fg:x="1005" fg:w="1"/><text x="80.5216%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="80.2716%" y="565" width="0.0799%" height="15" fill="rgb(234,76,27)" fg:x="1005" fg:w="1"/><text x="80.5216%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.2716%" y="549" width="0.0799%" height="15" fill="rgb(213,161,26)" fg:x="1005" fg:w="1"/><text x="80.5216%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.2716%" y="533" width="0.0799%" height="15" fill="rgb(210,228,2)" fg:x="1005" fg:w="1"/><text x="80.5216%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.2716%" y="517" width="0.0799%" height="15" fill="rgb(235,4,16)" fg:x="1005" fg:w="1"/><text x="80.5216%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2716%" y="501" width="0.0799%" height="15" fill="rgb(235,83,42)" fg:x="1005" fg:w="1"/><text x="80.5216%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="80.3514%" y="629" width="0.0799%" height="15" fill="rgb(207,116,39)" fg:x="1006" fg:w="1"/><text x="80.6014%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="80.3514%" y="613" width="0.0799%" height="15" fill="rgb(253,206,9)" fg:x="1006" fg:w="1"/><text x="80.6014%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3514%" y="597" width="0.0799%" height="15" fill="rgb(234,32,47)" fg:x="1006" fg:w="1"/><text x="80.6014%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="80.4313%" y="613" width="0.0799%" height="15" fill="rgb(247,40,39)" fg:x="1007" fg:w="1"/><text x="80.6813%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.8307%" y="517" width="0.0799%" height="15" fill="rgb(236,199,13)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.8307%" y="501" width="0.0799%" height="15" fill="rgb(240,127,44)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.8307%" y="485" width="0.0799%" height="15" fill="rgb(248,220,47)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.8307%" y="469" width="0.0799%" height="15" fill="rgb(240,78,9)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.8307%" y="453" width="0.0799%" height="15" fill="rgb(245,119,5)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.8307%" y="437" width="0.0799%" height="15" fill="rgb(238,175,31)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.8307%" y="421" width="0.0799%" height="15" fill="rgb(232,140,42)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.8307%" y="405" width="0.0799%" height="15" fill="rgb(218,179,7)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.8307%" y="389" width="0.0799%" height="15" fill="rgb(232,79,27)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.8307%" y="373" width="0.0799%" height="15" fill="rgb(247,11,19)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.8307%" y="357" width="0.0799%" height="15" fill="rgb(216,171,54)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8307%" y="341" width="0.0799%" height="15" fill="rgb(233,158,36)" fg:x="1012" fg:w="1"/><text x="81.0807%" y="351.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (5 samples, 0.40%)</title><rect x="80.5911%" y="533" width="0.3994%" height="15" fill="rgb(215,48,47)" fg:x="1009" fg:w="5"/><text x="80.8411%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="80.9105%" y="517" width="0.0799%" height="15" fill="rgb(230,223,15)" fg:x="1013" fg:w="1"/><text x="81.1605%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.9105%" y="501" width="0.0799%" height="15" fill="rgb(234,49,19)" fg:x="1013" fg:w="1"/><text x="81.1605%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9105%" y="485" width="0.0799%" height="15" fill="rgb(232,89,25)" fg:x="1013" fg:w="1"/><text x="81.1605%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="80.5911%" y="565" width="0.4792%" height="15" fill="rgb(237,206,28)" fg:x="1009" fg:w="6"/><text x="80.8411%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.48%)</title><rect x="80.5911%" y="549" width="0.4792%" height="15" fill="rgb(249,68,37)" fg:x="1009" fg:w="6"/><text x="80.8411%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9904%" y="533" width="0.0799%" height="15" fill="rgb(226,99,43)" fg:x="1014" fg:w="1"/><text x="81.2404%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="81.0703%" y="517" width="0.1597%" height="15" fill="rgb(216,46,28)" fg:x="1015" fg:w="2"/><text x="81.3203%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.0703%" y="501" width="0.1597%" height="15" fill="rgb(216,33,9)" fg:x="1015" fg:w="2"/><text x="81.3203%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.0703%" y="485" width="0.1597%" height="15" fill="rgb(216,129,4)" fg:x="1015" fg:w="2"/><text x="81.3203%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.1502%" y="469" width="0.0799%" height="15" fill="rgb(216,106,3)" fg:x="1016" fg:w="1"/><text x="81.4002%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1502%" y="453" width="0.0799%" height="15" fill="rgb(217,79,45)" fg:x="1016" fg:w="1"/><text x="81.4002%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.2300%" y="501" width="0.0799%" height="15" fill="rgb(239,98,13)" fg:x="1017" fg:w="1"/><text x="81.4800%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="81.3099%" y="501" width="0.4792%" height="15" fill="rgb(221,115,4)" fg:x="1018" fg:w="6"/><text x="81.5599%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.6294%" y="485" width="0.1597%" height="15" fill="rgb(215,85,0)" fg:x="1022" fg:w="2"/><text x="81.8794%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.7093%" y="469" width="0.0799%" height="15" fill="rgb(230,62,15)" fg:x="1023" fg:w="1"/><text x="81.9593%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.7093%" y="453" width="0.0799%" height="15" fill="rgb(247,162,2)" fg:x="1023" fg:w="1"/><text x="81.9593%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.9489%" y="437" width="0.0799%" height="15" fill="rgb(212,112,32)" fg:x="1026" fg:w="1"/><text x="82.1989%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="81.8690%" y="485" width="0.2396%" height="15" fill="rgb(216,137,9)" fg:x="1025" fg:w="3"/><text x="82.1190%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.9489%" y="469" width="0.1597%" height="15" fill="rgb(250,149,33)" fg:x="1026" fg:w="2"/><text x="82.1989%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.9489%" y="453" width="0.1597%" height="15" fill="rgb(246,124,31)" fg:x="1026" fg:w="2"/><text x="82.1989%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.0288%" y="437" width="0.0799%" height="15" fill="rgb(216,210,22)" fg:x="1027" fg:w="1"/><text x="82.2788%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.1086%" y="453" width="0.1597%" height="15" fill="rgb(228,128,36)" fg:x="1028" fg:w="2"/><text x="82.3586%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.1086%" y="437" width="0.1597%" height="15" fill="rgb(231,41,0)" fg:x="1028" fg:w="2"/><text x="82.3586%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.1885%" y="421" width="0.0799%" height="15" fill="rgb(232,61,26)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.1885%" y="405" width="0.0799%" height="15" fill="rgb(217,60,9)" fg:x="1029" fg:w="1"/><text x="82.4385%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2684%" y="453" width="0.0799%" height="15" fill="rgb(233,41,35)" fg:x="1030" fg:w="1"/><text x="82.5184%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2684%" y="437" width="0.0799%" height="15" fill="rgb(253,139,43)" fg:x="1030" fg:w="1"/><text x="82.5184%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="81.7891%" y="501" width="0.6390%" height="15" fill="rgb(245,100,51)" fg:x="1024" fg:w="8"/><text x="82.0391%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.1086%" y="485" width="0.3195%" height="15" fill="rgb(250,208,18)" fg:x="1028" fg:w="4"/><text x="82.3586%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.1086%" y="469" width="0.3195%" height="15" fill="rgb(245,33,2)" fg:x="1028" fg:w="4"/><text x="82.3586%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.3482%" y="453" width="0.0799%" height="15" fill="rgb(244,171,31)" fg:x="1031" fg:w="1"/><text x="82.5982%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.52%)</title><rect x="81.0703%" y="533" width="1.5176%" height="15" fill="rgb(229,1,43)" fg:x="1015" fg:w="19"/><text x="81.3203%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="81.2300%" y="517" width="1.3578%" height="15" fill="rgb(223,153,28)" fg:x="1017" fg:w="17"/><text x="81.4800%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.4281%" y="501" width="0.1597%" height="15" fill="rgb(241,4,46)" fg:x="1032" fg:w="2"/><text x="82.6781%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.5080%" y="485" width="0.0799%" height="15" fill="rgb(230,81,11)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5080%" y="469" width="0.0799%" height="15" fill="rgb(253,204,39)" fg:x="1033" fg:w="1"/><text x="82.7580%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5879%" y="501" width="0.0799%" height="15" fill="rgb(250,96,8)" fg:x="1034" fg:w="1"/><text x="82.8379%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6677%" y="469" width="0.0799%" height="15" fill="rgb(219,89,54)" fg:x="1035" fg:w="1"/><text x="82.9177%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6677%" y="453" width="0.0799%" height="15" fill="rgb(235,136,39)" fg:x="1035" fg:w="1"/><text x="82.9177%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.8275%" y="453" width="0.0799%" height="15" fill="rgb(230,155,37)" fg:x="1037" fg:w="1"/><text x="83.0775%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.9073%" y="453" width="0.0799%" height="15" fill="rgb(235,199,50)" fg:x="1038" fg:w="1"/><text x="83.1573%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="82.9872%" y="453" width="0.0799%" height="15" fill="rgb(227,81,32)" fg:x="1039" fg:w="1"/><text x="83.2372%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.9872%" y="437" width="0.0799%" height="15" fill="rgb(225,6,28)" fg:x="1039" fg:w="1"/><text x="83.2372%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="82.5879%" y="533" width="0.7188%" height="15" fill="rgb(207,211,17)" fg:x="1034" fg:w="9"/><text x="82.8379%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="82.5879%" y="517" width="0.7188%" height="15" fill="rgb(228,31,49)" fg:x="1034" fg:w="9"/><text x="82.8379%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="82.6677%" y="501" width="0.6390%" height="15" fill="rgb(230,185,3)" fg:x="1035" fg:w="8"/><text x="82.9177%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="82.6677%" y="485" width="0.6390%" height="15" fill="rgb(206,167,15)" fg:x="1035" fg:w="8"/><text x="82.9177%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="82.7476%" y="469" width="0.5591%" height="15" fill="rgb(234,2,36)" fg:x="1036" fg:w="7"/><text x="82.9976%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="83.0671%" y="453" width="0.2396%" height="15" fill="rgb(239,160,29)" fg:x="1040" fg:w="3"/><text x="83.3171%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="83.1470%" y="437" width="0.1597%" height="15" fill="rgb(236,117,2)" fg:x="1041" fg:w="2"/><text x="83.3970%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.2268%" y="421" width="0.0799%" height="15" fill="rgb(215,117,37)" fg:x="1042" fg:w="1"/><text x="83.4768%" y="431.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="83.3067%" y="517" width="0.0799%" height="15" fill="rgb(244,48,36)" fg:x="1043" fg:w="1"/><text x="83.5567%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3067%" y="501" width="0.0799%" height="15" fill="rgb(223,101,37)" fg:x="1043" fg:w="1"/><text x="83.5567%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.3866%" y="485" width="0.1597%" height="15" fill="rgb(205,200,1)" fg:x="1044" fg:w="2"/><text x="83.6366%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5463%" y="389" width="0.0799%" height="15" fill="rgb(209,193,20)" fg:x="1046" fg:w="1"/><text x="83.7963%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5463%" y="373" width="0.0799%" height="15" fill="rgb(214,63,13)" fg:x="1046" fg:w="1"/><text x="83.7963%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.5463%" y="357" width="0.0799%" height="15" fill="rgb(253,113,46)" fg:x="1046" fg:w="1"/><text x="83.7963%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="83.5463%" y="437" width="0.1597%" height="15" fill="rgb(237,103,34)" fg:x="1046" fg:w="2"/><text x="83.7963%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="83.5463%" y="421" width="0.1597%" height="15" fill="rgb(223,38,25)" fg:x="1046" fg:w="2"/><text x="83.7963%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.5463%" y="405" width="0.1597%" height="15" fill="rgb(251,32,32)" fg:x="1046" fg:w="2"/><text x="83.7963%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6262%" y="389" width="0.0799%" height="15" fill="rgb(228,65,22)" fg:x="1047" fg:w="1"/><text x="83.8762%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6262%" y="373" width="0.0799%" height="15" fill="rgb(205,11,46)" fg:x="1047" fg:w="1"/><text x="83.8762%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0256%" y="341" width="0.0799%" height="15" fill="rgb(220,35,2)" fg:x="1052" fg:w="1"/><text x="84.2756%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0256%" y="325" width="0.0799%" height="15" fill="rgb(217,151,17)" fg:x="1052" fg:w="1"/><text x="84.2756%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.0256%" y="357" width="0.1597%" height="15" fill="rgb(243,227,35)" fg:x="1052" fg:w="2"/><text x="84.2756%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1054%" y="341" width="0.0799%" height="15" fill="rgb(214,0,34)" fg:x="1053" fg:w="1"/><text x="84.3554%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.1054%" y="325" width="0.0799%" height="15" fill="rgb(209,42,37)" fg:x="1053" fg:w="1"/><text x="84.3554%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.1054%" y="309" width="0.0799%" height="15" fill="rgb(251,176,30)" fg:x="1053" fg:w="1"/><text x="84.3554%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="84.1054%" y="293" width="0.0799%" height="15" fill="rgb(223,64,40)" fg:x="1053" fg:w="1"/><text x="84.3554%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="83.5463%" y="453" width="0.7987%" height="15" fill="rgb(227,180,23)" fg:x="1046" fg:w="10"/><text x="83.7963%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="83.7061%" y="437" width="0.6390%" height="15" fill="rgb(220,137,31)" fg:x="1048" fg:w="8"/><text x="83.9561%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="83.9457%" y="421" width="0.3994%" height="15" fill="rgb(245,124,25)" fg:x="1051" fg:w="5"/><text x="84.1957%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="83.9457%" y="405" width="0.3994%" height="15" fill="rgb(217,157,5)" fg:x="1051" fg:w="5"/><text x="84.1957%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="84.0256%" y="389" width="0.3195%" height="15" fill="rgb(225,59,2)" fg:x="1052" fg:w="4"/><text x="84.2756%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="84.0256%" y="373" width="0.3195%" height="15" fill="rgb(220,182,9)" fg:x="1052" fg:w="4"/><text x="84.2756%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="84.1853%" y="357" width="0.1597%" height="15" fill="rgb(249,54,24)" fg:x="1054" fg:w="2"/><text x="84.4353%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3450%" y="437" width="0.0799%" height="15" fill="rgb(216,89,17)" fg:x="1056" fg:w="1"/><text x="84.5950%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.96%)</title><rect x="83.5463%" y="469" width="0.9585%" height="15" fill="rgb(245,20,45)" fg:x="1046" fg:w="12"/><text x="83.7963%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="84.3450%" y="453" width="0.1597%" height="15" fill="rgb(230,83,14)" fg:x="1056" fg:w="2"/><text x="84.5950%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="84.4249%" y="437" width="0.0799%" height="15" fill="rgb(246,109,11)" fg:x="1057" fg:w="1"/><text x="84.6749%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.4249%" y="421" width="0.0799%" height="15" fill="rgb(235,85,23)" fg:x="1057" fg:w="1"/><text x="84.6749%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5048%" y="469" width="0.0799%" height="15" fill="rgb(215,101,36)" fg:x="1058" fg:w="1"/><text x="84.7548%" y="479.50"></text></g><g><title>engine::session::Session::flush (53 samples, 4.23%)</title><rect x="80.4313%" y="629" width="4.2332%" height="15" fill="rgb(228,140,31)" fg:x="1007" fg:w="53"/><text x="80.6813%" y="639.50">engin..</text></g><g><title>engine::session::Session::save_changes (52 samples, 4.15%)</title><rect x="80.5112%" y="613" width="4.1534%" height="15" fill="rgb(234,162,37)" fg:x="1008" fg:w="52"/><text x="80.7612%" y="623.50">engin..</text></g><g><title>engine::session::state::State::close (52 samples, 4.15%)</title><rect x="80.5112%" y="597" width="4.1534%" height="15" fill="rgb(221,0,24)" fg:x="1008" fg:w="52"/><text x="80.7612%" y="607.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (52 samples, 4.15%)</title><rect x="80.5112%" y="581" width="4.1534%" height="15" fill="rgb(230,161,41)" fg:x="1008" fg:w="52"/><text x="80.7612%" y="591.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (45 samples, 3.59%)</title><rect x="81.0703%" y="565" width="3.5942%" height="15" fill="rgb(224,46,24)" fg:x="1015" fg:w="45"/><text x="81.3203%" y="575.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (45 samples, 3.59%)</title><rect x="81.0703%" y="549" width="3.5942%" height="15" fill="rgb(205,59,32)" fg:x="1015" fg:w="45"/><text x="81.3203%" y="559.50">engi..</text></g><g><title>kernel::model::any_entity_changes (17 samples, 1.36%)</title><rect x="83.3067%" y="533" width="1.3578%" height="15" fill="rgb(239,31,20)" fg:x="1043" fg:w="17"/><text x="83.5567%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="83.3866%" y="517" width="1.2780%" height="15" fill="rgb(233,149,44)" fg:x="1044" fg:w="16"/><text x="83.6366%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="83.3866%" y="501" width="1.2780%" height="15" fill="rgb(243,47,26)" fg:x="1044" fg:w="16"/><text x="83.6366%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.12%)</title><rect x="83.5463%" y="485" width="1.1182%" height="15" fill="rgb(233,107,5)" fg:x="1046" fg:w="14"/><text x="83.7963%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5847%" y="469" width="0.0799%" height="15" fill="rgb(248,140,33)" fg:x="1059" fg:w="1"/><text x="84.8347%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="84.6645%" y="629" width="0.0799%" height="15" fill="rgb(228,178,19)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.6645%" y="613" width="0.0799%" height="15" fill="rgb(224,39,49)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.6645%" y="597" width="0.0799%" height="15" fill="rgb(246,56,47)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.6645%" y="581" width="0.0799%" height="15" fill="rgb(220,73,27)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6645%" y="565" width="0.0799%" height="15" fill="rgb(239,112,21)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6645%" y="549" width="0.0799%" height="15" fill="rgb(253,14,51)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6645%" y="533" width="0.0799%" height="15" fill="rgb(215,58,12)" fg:x="1060" fg:w="1"/><text x="84.9145%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8243%" y="581" width="0.0799%" height="15" fill="rgb(207,181,19)" fg:x="1062" fg:w="1"/><text x="85.0743%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9042%" y="549" width="0.0799%" height="15" fill="rgb(211,214,34)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9042%" y="533" width="0.0799%" height="15" fill="rgb(243,124,39)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9042%" y="517" width="0.0799%" height="15" fill="rgb(248,135,21)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9042%" y="501" width="0.0799%" height="15" fill="rgb(245,218,3)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9042%" y="485" width="0.0799%" height="15" fill="rgb(225,144,22)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9042%" y="469" width="0.0799%" height="15" fill="rgb(250,90,15)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.9042%" y="453" width="0.0799%" height="15" fill="rgb(224,64,29)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.9042%" y="437" width="0.0799%" height="15" fill="rgb(217,50,47)" fg:x="1063" fg:w="1"/><text x="85.1542%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9840%" y="549" width="0.0799%" height="15" fill="rgb(231,159,47)" fg:x="1064" fg:w="1"/><text x="85.2340%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.9840%" y="533" width="0.0799%" height="15" fill="rgb(213,89,29)" fg:x="1064" fg:w="1"/><text x="85.2340%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="84.8243%" y="597" width="0.3994%" height="15" fill="rgb(243,90,23)" fg:x="1062" fg:w="5"/><text x="85.0743%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="84.9042%" y="581" width="0.3195%" height="15" fill="rgb(213,21,6)" fg:x="1063" fg:w="4"/><text x="85.1542%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="84.9042%" y="565" width="0.3195%" height="15" fill="rgb(237,139,17)" fg:x="1063" fg:w="4"/><text x="85.1542%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.0639%" y="549" width="0.1597%" height="15" fill="rgb(250,147,17)" fg:x="1065" fg:w="2"/><text x="85.3139%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.0639%" y="533" width="0.1597%" height="15" fill="rgb(212,208,42)" fg:x="1065" fg:w="2"/><text x="85.3139%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1438%" y="517" width="0.0799%" height="15" fill="rgb(215,229,40)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1438%" y="501" width="0.0799%" height="15" fill="rgb(206,204,1)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.1438%" y="485" width="0.0799%" height="15" fill="rgb(230,62,32)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1438%" y="469" width="0.0799%" height="15" fill="rgb(223,22,42)" fg:x="1066" fg:w="1"/><text x="85.3938%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="85.2236%" y="597" width="0.2396%" height="15" fill="rgb(244,6,23)" fg:x="1067" fg:w="3"/><text x="85.4736%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="85.2236%" y="581" width="0.2396%" height="15" fill="rgb(240,221,42)" fg:x="1067" fg:w="3"/><text x="85.4736%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.2236%" y="565" width="0.2396%" height="15" fill="rgb(222,74,7)" fg:x="1067" fg:w="3"/><text x="85.4736%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="85.2236%" y="549" width="0.2396%" height="15" fill="rgb(227,191,38)" fg:x="1067" fg:w="3"/><text x="85.4736%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="85.2236%" y="533" width="0.2396%" height="15" fill="rgb(227,89,34)" fg:x="1067" fg:w="3"/><text x="85.4736%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.3035%" y="517" width="0.1597%" height="15" fill="rgb(215,153,25)" fg:x="1068" fg:w="2"/><text x="85.5535%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.3035%" y="501" width="0.1597%" height="15" fill="rgb(215,153,46)" fg:x="1068" fg:w="2"/><text x="85.5535%" y="511.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="85.3834%" y="485" width="0.0799%" height="15" fill="rgb(242,38,52)" fg:x="1069" fg:w="1"/><text x="85.6334%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4633%" y="485" width="0.0799%" height="15" fill="rgb(218,112,4)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4633%" y="469" width="0.0799%" height="15" fill="rgb(231,210,31)" fg:x="1070" fg:w="1"/><text x="85.7133%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="84.7444%" y="613" width="0.8786%" height="15" fill="rgb(245,223,36)" fg:x="1061" fg:w="11"/><text x="84.9944%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.4633%" y="597" width="0.1597%" height="15" fill="rgb(246,41,2)" fg:x="1070" fg:w="2"/><text x="85.7133%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.4633%" y="581" width="0.1597%" height="15" fill="rgb(227,51,31)" fg:x="1070" fg:w="2"/><text x="85.7133%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="85.4633%" y="565" width="0.1597%" height="15" fill="rgb(222,95,26)" fg:x="1070" fg:w="2"/><text x="85.7133%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="85.4633%" y="549" width="0.1597%" height="15" fill="rgb(224,190,1)" fg:x="1070" fg:w="2"/><text x="85.7133%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.4633%" y="533" width="0.1597%" height="15" fill="rgb(209,90,42)" fg:x="1070" fg:w="2"/><text x="85.7133%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.4633%" y="517" width="0.1597%" height="15" fill="rgb(232,225,50)" fg:x="1070" fg:w="2"/><text x="85.7133%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.4633%" y="501" width="0.1597%" height="15" fill="rgb(239,89,47)" fg:x="1070" fg:w="2"/><text x="85.7133%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5431%" y="485" width="0.0799%" height="15" fill="rgb(230,212,50)" fg:x="1071" fg:w="1"/><text x="85.7931%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.6230%" y="565" width="0.0799%" height="15" fill="rgb(252,1,27)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.6230%" y="549" width="0.0799%" height="15" fill="rgb(237,179,41)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.6230%" y="533" width="0.0799%" height="15" fill="rgb(214,151,37)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6230%" y="517" width="0.0799%" height="15" fill="rgb(211,74,11)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6230%" y="501" width="0.0799%" height="15" fill="rgb(242,21,21)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6230%" y="485" width="0.0799%" height="15" fill="rgb(226,106,43)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6230%" y="469" width="0.0799%" height="15" fill="rgb(229,162,39)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6230%" y="453" width="0.0799%" height="15" fill="rgb(228,159,25)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6230%" y="437" width="0.0799%" height="15" fill="rgb(237,32,23)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.6230%" y="421" width="0.0799%" height="15" fill="rgb(212,35,32)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.6230%" y="405" width="0.0799%" height="15" fill="rgb(215,199,1)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.6230%" y="389" width="0.0799%" height="15" fill="rgb(215,67,13)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6230%" y="373" width="0.0799%" height="15" fill="rgb(216,20,47)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6230%" y="357" width="0.0799%" height="15" fill="rgb(249,183,48)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.6230%" y="341" width="0.0799%" height="15" fill="rgb(208,86,37)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="85.6230%" y="325" width="0.0799%" height="15" fill="rgb(251,192,7)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="85.6230%" y="309" width="0.0799%" height="15" fill="rgb(234,196,3)" fg:x="1072" fg:w="1"/><text x="85.8730%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="85.7029%" y="549" width="0.0799%" height="15" fill="rgb(229,150,39)" fg:x="1073" fg:w="1"/><text x="85.9529%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.7029%" y="533" width="0.0799%" height="15" fill="rgb(226,19,29)" fg:x="1073" fg:w="1"/><text x="85.9529%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8626%" y="517" width="0.0799%" height="15" fill="rgb(226,222,2)" fg:x="1075" fg:w="1"/><text x="86.1126%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8626%" y="501" width="0.0799%" height="15" fill="rgb(235,85,29)" fg:x="1075" fg:w="1"/><text x="86.1126%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.9425%" y="517" width="0.0799%" height="15" fill="rgb(237,194,43)" fg:x="1076" fg:w="1"/><text x="86.1925%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="85.6230%" y="597" width="0.4792%" height="15" fill="rgb(211,4,42)" fg:x="1072" fg:w="6"/><text x="85.8730%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="85.6230%" y="581" width="0.4792%" height="15" fill="rgb(221,80,37)" fg:x="1072" fg:w="6"/><text x="85.8730%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="85.7029%" y="565" width="0.3994%" height="15" fill="rgb(222,47,31)" fg:x="1073" fg:w="5"/><text x="85.9529%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="85.7827%" y="549" width="0.3195%" height="15" fill="rgb(249,82,52)" fg:x="1074" fg:w="4"/><text x="86.0327%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="85.7827%" y="533" width="0.3195%" height="15" fill="rgb(218,203,2)" fg:x="1074" fg:w="4"/><text x="86.0327%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0224%" y="517" width="0.0799%" height="15" fill="rgb(210,175,14)" fg:x="1077" fg:w="1"/><text x="86.2724%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.0224%" y="501" width="0.0799%" height="15" fill="rgb(216,210,12)" fg:x="1077" fg:w="1"/><text x="86.2724%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0224%" y="485" width="0.0799%" height="15" fill="rgb(229,120,18)" fg:x="1077" fg:w="1"/><text x="86.2724%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.0224%" y="469" width="0.0799%" height="15" fill="rgb(231,174,12)" fg:x="1077" fg:w="1"/><text x="86.2724%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1022%" y="501" width="0.0799%" height="15" fill="rgb(214,101,53)" fg:x="1078" fg:w="1"/><text x="86.3522%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.1022%" y="597" width="0.1597%" height="15" fill="rgb(246,89,43)" fg:x="1078" fg:w="2"/><text x="86.3522%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="86.1022%" y="581" width="0.1597%" height="15" fill="rgb(222,9,51)" fg:x="1078" fg:w="2"/><text x="86.3522%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.1022%" y="565" width="0.1597%" height="15" fill="rgb(252,221,9)" fg:x="1078" fg:w="2"/><text x="86.3522%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="86.1022%" y="549" width="0.1597%" height="15" fill="rgb(248,28,15)" fg:x="1078" fg:w="2"/><text x="86.3522%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="86.1022%" y="533" width="0.1597%" height="15" fill="rgb(213,54,52)" fg:x="1078" fg:w="2"/><text x="86.3522%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.1022%" y="517" width="0.1597%" height="15" fill="rgb(240,3,45)" fg:x="1078" fg:w="2"/><text x="86.3522%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1821%" y="501" width="0.0799%" height="15" fill="rgb(239,138,24)" fg:x="1079" fg:w="1"/><text x="86.4321%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1821%" y="485" width="0.0799%" height="15" fill="rgb(233,45,54)" fg:x="1079" fg:w="1"/><text x="86.4321%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.3419%" y="533" width="0.0799%" height="15" fill="rgb(220,131,2)" fg:x="1081" fg:w="1"/><text x="86.5919%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4217%" y="533" width="0.0799%" height="15" fill="rgb(240,154,36)" fg:x="1082" fg:w="1"/><text x="86.6717%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5016%" y="501" width="0.0799%" height="15" fill="rgb(251,221,1)" fg:x="1083" fg:w="1"/><text x="86.7516%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5016%" y="485" width="0.0799%" height="15" fill="rgb(225,217,1)" fg:x="1083" fg:w="1"/><text x="86.7516%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5016%" y="469" width="0.0799%" height="15" fill="rgb(241,105,49)" fg:x="1083" fg:w="1"/><text x="86.7516%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.5815%" y="469" width="0.0799%" height="15" fill="rgb(215,44,32)" fg:x="1084" fg:w="1"/><text x="86.8315%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="86.2620%" y="581" width="0.4792%" height="15" fill="rgb(213,222,14)" fg:x="1080" fg:w="6"/><text x="86.5120%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="86.3419%" y="565" width="0.3994%" height="15" fill="rgb(207,99,52)" fg:x="1081" fg:w="5"/><text x="86.5919%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="86.3419%" y="549" width="0.3994%" height="15" fill="rgb(214,208,52)" fg:x="1081" fg:w="5"/><text x="86.5919%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="86.5016%" y="533" width="0.2396%" height="15" fill="rgb(244,169,0)" fg:x="1083" fg:w="3"/><text x="86.7516%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="86.5016%" y="517" width="0.2396%" height="15" fill="rgb(216,193,37)" fg:x="1083" fg:w="3"/><text x="86.7516%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.5815%" y="501" width="0.1597%" height="15" fill="rgb(212,158,10)" fg:x="1084" fg:w="2"/><text x="86.8315%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.5815%" y="485" width="0.1597%" height="15" fill="rgb(213,110,20)" fg:x="1084" fg:w="2"/><text x="86.8315%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.6613%" y="469" width="0.0799%" height="15" fill="rgb(226,5,42)" fg:x="1085" fg:w="1"/><text x="86.9113%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6613%" y="453" width="0.0799%" height="15" fill="rgb(211,93,8)" fg:x="1085" fg:w="1"/><text x="86.9113%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.6613%" y="437" width="0.0799%" height="15" fill="rgb(240,208,12)" fg:x="1085" fg:w="1"/><text x="86.9113%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6613%" y="421" width="0.0799%" height="15" fill="rgb(233,127,50)" fg:x="1085" fg:w="1"/><text x="86.9113%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.6613%" y="405" width="0.0799%" height="15" fill="rgb(227,199,53)" fg:x="1085" fg:w="1"/><text x="86.9113%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.6613%" y="389" width="0.0799%" height="15" fill="rgb(235,199,10)" fg:x="1085" fg:w="1"/><text x="86.9113%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="86.2620%" y="597" width="0.5591%" height="15" fill="rgb(228,148,35)" fg:x="1080" fg:w="7"/><text x="86.5120%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="86.7412%" y="581" width="0.0799%" height="15" fill="rgb(217,87,19)" fg:x="1086" fg:w="1"/><text x="86.9912%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.7412%" y="565" width="0.0799%" height="15" fill="rgb(239,9,32)" fg:x="1086" fg:w="1"/><text x="86.9912%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.7412%" y="549" width="0.0799%" height="15" fill="rgb(229,101,29)" fg:x="1086" fg:w="1"/><text x="86.9912%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8211%" y="565" width="0.0799%" height="15" fill="rgb(208,143,26)" fg:x="1087" fg:w="1"/><text x="87.0711%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (29 samples, 2.32%)</title><rect x="84.7444%" y="629" width="2.3163%" height="15" fill="rgb(214,10,2)" fg:x="1061" fg:w="29"/><text x="84.9944%" y="639.50">p..</text></g><g><title>plugins_core::tools::set_container (18 samples, 1.44%)</title><rect x="85.6230%" y="613" width="1.4377%" height="15" fill="rgb(254,203,30)" fg:x="1072" fg:w="18"/><text x="85.8730%" y="623.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="86.8211%" y="597" width="0.2396%" height="15" fill="rgb(242,45,3)" fg:x="1087" fg:w="3"/><text x="87.0711%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="86.8211%" y="581" width="0.2396%" height="15" fill="rgb(209,146,51)" fg:x="1087" fg:w="3"/><text x="87.0711%" y="591.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="86.9010%" y="565" width="0.1597%" height="15" fill="rgb(222,80,5)" fg:x="1088" fg:w="2"/><text x="87.1510%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.9010%" y="549" width="0.1597%" height="15" fill="rgb(252,80,35)" fg:x="1088" fg:w="2"/><text x="87.1510%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9808%" y="533" width="0.0799%" height="15" fill="rgb(246,125,28)" fg:x="1089" fg:w="1"/><text x="87.2308%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9808%" y="517" width="0.0799%" height="15" fill="rgb(224,143,51)" fg:x="1089" fg:w="1"/><text x="87.2308%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9808%" y="501" width="0.0799%" height="15" fill="rgb(205,24,17)" fg:x="1089" fg:w="1"/><text x="87.2308%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0607%" y="549" width="0.0799%" height="15" fill="rgb(253,128,30)" fg:x="1090" fg:w="1"/><text x="87.3107%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0607%" y="533" width="0.0799%" height="15" fill="rgb(214,153,25)" fg:x="1090" fg:w="1"/><text x="87.3107%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0607%" y="517" width="0.0799%" height="15" fill="rgb(214,4,28)" fg:x="1090" fg:w="1"/><text x="87.3107%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0607%" y="501" width="0.0799%" height="15" fill="rgb(235,179,52)" fg:x="1090" fg:w="1"/><text x="87.3107%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0607%" y="485" width="0.0799%" height="15" fill="rgb(233,27,42)" fg:x="1090" fg:w="1"/><text x="87.3107%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="87.0607%" y="629" width="0.1597%" height="15" fill="rgb(238,35,25)" fg:x="1090" fg:w="2"/><text x="87.3107%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="87.0607%" y="613" width="0.1597%" height="15" fill="rgb(227,44,31)" fg:x="1090" fg:w="2"/><text x="87.3107%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="87.0607%" y="597" width="0.1597%" height="15" fill="rgb(232,201,13)" fg:x="1090" fg:w="2"/><text x="87.3107%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.0607%" y="581" width="0.1597%" height="15" fill="rgb(224,172,52)" fg:x="1090" fg:w="2"/><text x="87.3107%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.0607%" y="565" width="0.1597%" height="15" fill="rgb(214,27,26)" fg:x="1090" fg:w="2"/><text x="87.3107%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1406%" y="549" width="0.0799%" height="15" fill="rgb(210,185,52)" fg:x="1091" fg:w="1"/><text x="87.3906%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1406%" y="533" width="0.0799%" height="15" fill="rgb(249,59,32)" fg:x="1091" fg:w="1"/><text x="87.3906%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1406%" y="517" width="0.0799%" height="15" fill="rgb(242,209,18)" fg:x="1091" fg:w="1"/><text x="87.3906%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1406%" y="501" width="0.0799%" height="15" fill="rgb(229,0,18)" fg:x="1091" fg:w="1"/><text x="87.3906%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.1406%" y="485" width="0.0799%" height="15" fill="rgb(217,138,29)" fg:x="1091" fg:w="1"/><text x="87.3906%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1406%" y="469" width="0.0799%" height="15" fill="rgb(215,72,42)" fg:x="1091" fg:w="1"/><text x="87.3906%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.1406%" y="453" width="0.0799%" height="15" fill="rgb(254,115,11)" fg:x="1091" fg:w="1"/><text x="87.3906%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.2204%" y="597" width="0.1597%" height="15" fill="rgb(205,133,39)" fg:x="1092" fg:w="2"/><text x="87.4704%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.2204%" y="581" width="0.1597%" height="15" fill="rgb(211,36,27)" fg:x="1092" fg:w="2"/><text x="87.4704%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.2204%" y="565" width="0.1597%" height="15" fill="rgb(221,48,10)" fg:x="1092" fg:w="2"/><text x="87.4704%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.2204%" y="549" width="0.1597%" height="15" fill="rgb(230,172,50)" fg:x="1092" fg:w="2"/><text x="87.4704%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3003%" y="533" width="0.0799%" height="15" fill="rgb(249,72,18)" fg:x="1093" fg:w="1"/><text x="87.5503%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3003%" y="517" width="0.0799%" height="15" fill="rgb(237,58,48)" fg:x="1093" fg:w="1"/><text x="87.5503%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.3003%" y="501" width="0.0799%" height="15" fill="rgb(242,123,3)" fg:x="1093" fg:w="1"/><text x="87.5503%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3003%" y="485" width="0.0799%" height="15" fill="rgb(232,111,32)" fg:x="1093" fg:w="1"/><text x="87.5503%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.3003%" y="469" width="0.0799%" height="15" fill="rgb(229,108,3)" fg:x="1093" fg:w="1"/><text x="87.5503%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="87.2204%" y="629" width="0.2396%" height="15" fill="rgb(222,158,10)" fg:x="1092" fg:w="3"/><text x="87.4704%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="87.2204%" y="613" width="0.2396%" height="15" fill="rgb(205,34,49)" fg:x="1092" fg:w="3"/><text x="87.4704%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.3802%" y="597" width="0.0799%" height="15" fill="rgb(232,21,14)" fg:x="1094" fg:w="1"/><text x="87.6302%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.3802%" y="581" width="0.0799%" height="15" fill="rgb(229,127,44)" fg:x="1094" fg:w="1"/><text x="87.6302%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.3802%" y="565" width="0.0799%" height="15" fill="rgb(232,171,4)" fg:x="1094" fg:w="1"/><text x="87.6302%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.3802%" y="549" width="0.0799%" height="15" fill="rgb(250,92,16)" fg:x="1094" fg:w="1"/><text x="87.6302%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.4601%" y="597" width="0.0799%" height="15" fill="rgb(230,103,38)" fg:x="1095" fg:w="1"/><text x="87.7101%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.4601%" y="581" width="0.0799%" height="15" fill="rgb(253,167,9)" fg:x="1095" fg:w="1"/><text x="87.7101%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.4601%" y="565" width="0.0799%" height="15" fill="rgb(222,118,11)" fg:x="1095" fg:w="1"/><text x="87.7101%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.4601%" y="549" width="0.0799%" height="15" fill="rgb(240,202,0)" fg:x="1095" fg:w="1"/><text x="87.7101%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4601%" y="533" width="0.0799%" height="15" fill="rgb(236,124,4)" fg:x="1095" fg:w="1"/><text x="87.7101%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="87.5399%" y="597" width="0.0799%" height="15" fill="rgb(244,128,18)" fg:x="1096" fg:w="1"/><text x="87.7899%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.5399%" y="581" width="0.0799%" height="15" fill="rgb(231,206,5)" fg:x="1096" fg:w="1"/><text x="87.7899%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.5399%" y="565" width="0.0799%" height="15" fill="rgb(237,111,8)" fg:x="1096" fg:w="1"/><text x="87.7899%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.5399%" y="549" width="0.0799%" height="15" fill="rgb(225,127,3)" fg:x="1096" fg:w="1"/><text x="87.7899%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.5399%" y="533" width="0.0799%" height="15" fill="rgb(222,85,48)" fg:x="1096" fg:w="1"/><text x="87.7899%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.6198%" y="421" width="0.0799%" height="15" fill="rgb(221,108,37)" fg:x="1097" fg:w="1"/><text x="87.8698%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="87.4601%" y="613" width="0.3195%" height="15" fill="rgb(226,169,36)" fg:x="1095" fg:w="4"/><text x="87.7101%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="87.6198%" y="597" width="0.1597%" height="15" fill="rgb(237,76,12)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="87.6198%" y="581" width="0.1597%" height="15" fill="rgb(210,227,32)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="87.6198%" y="565" width="0.1597%" height="15" fill="rgb(214,117,20)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="87.6198%" y="549" width="0.1597%" height="15" fill="rgb(234,119,41)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="87.6198%" y="533" width="0.1597%" height="15" fill="rgb(230,130,47)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="87.6198%" y="517" width="0.1597%" height="15" fill="rgb(215,21,41)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.6198%" y="501" width="0.1597%" height="15" fill="rgb(226,26,53)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="87.6198%" y="485" width="0.1597%" height="15" fill="rgb(221,92,23)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.6198%" y="469" width="0.1597%" height="15" fill="rgb(213,156,21)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="87.6198%" y="453" width="0.1597%" height="15" fill="rgb(254,166,29)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="87.6198%" y="437" width="0.1597%" height="15" fill="rgb(213,71,1)" fg:x="1097" fg:w="2"/><text x="87.8698%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.6997%" y="421" width="0.0799%" height="15" fill="rgb(245,8,13)" fg:x="1098" fg:w="1"/><text x="87.9497%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.6997%" y="405" width="0.0799%" height="15" fill="rgb(213,32,32)" fg:x="1098" fg:w="1"/><text x="87.9497%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="87.7796%" y="597" width="0.0799%" height="15" fill="rgb(251,86,50)" fg:x="1099" fg:w="1"/><text x="88.0296%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="87.7796%" y="581" width="0.0799%" height="15" fill="rgb(252,92,41)" fg:x="1099" fg:w="1"/><text x="88.0296%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7796%" y="565" width="0.0799%" height="15" fill="rgb(234,70,35)" fg:x="1099" fg:w="1"/><text x="88.0296%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.8594%" y="517" width="0.0799%" height="15" fill="rgb(210,157,19)" fg:x="1100" fg:w="1"/><text x="88.1094%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="87.8594%" y="565" width="0.1597%" height="15" fill="rgb(206,20,45)" fg:x="1100" fg:w="2"/><text x="88.1094%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.8594%" y="549" width="0.1597%" height="15" fill="rgb(207,34,7)" fg:x="1100" fg:w="2"/><text x="88.1094%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.8594%" y="533" width="0.1597%" height="15" fill="rgb(253,151,14)" fg:x="1100" fg:w="2"/><text x="88.1094%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.9393%" y="517" width="0.0799%" height="15" fill="rgb(252,1,18)" fg:x="1101" fg:w="1"/><text x="88.1893%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.9393%" y="501" width="0.0799%" height="15" fill="rgb(214,77,52)" fg:x="1101" fg:w="1"/><text x="88.1893%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.9393%" y="485" width="0.0799%" height="15" fill="rgb(254,106,35)" fg:x="1101" fg:w="1"/><text x="88.1893%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.9393%" y="469" width="0.0799%" height="15" fill="rgb(212,67,40)" fg:x="1101" fg:w="1"/><text x="88.1893%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.9393%" y="453" width="0.0799%" height="15" fill="rgb(228,76,23)" fg:x="1101" fg:w="1"/><text x="88.1893%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.9393%" y="437" width="0.0799%" height="15" fill="rgb(250,198,5)" fg:x="1101" fg:w="1"/><text x="88.1893%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9393%" y="421" width="0.0799%" height="15" fill="rgb(209,20,25)" fg:x="1101" fg:w="1"/><text x="88.1893%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="87.8594%" y="597" width="0.2396%" height="15" fill="rgb(236,32,4)" fg:x="1100" fg:w="3"/><text x="88.1094%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="87.8594%" y="581" width="0.2396%" height="15" fill="rgb(215,31,6)" fg:x="1100" fg:w="3"/><text x="88.1094%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.0192%" y="565" width="0.0799%" height="15" fill="rgb(207,186,49)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.0192%" y="549" width="0.0799%" height="15" fill="rgb(211,212,49)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.0192%" y="533" width="0.0799%" height="15" fill="rgb(229,51,41)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0192%" y="517" width="0.0799%" height="15" fill="rgb(205,225,36)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0192%" y="501" width="0.0799%" height="15" fill="rgb(209,213,45)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0192%" y="485" width="0.0799%" height="15" fill="rgb(219,35,49)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0192%" y="469" width="0.0799%" height="15" fill="rgb(215,205,22)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.0192%" y="453" width="0.0799%" height="15" fill="rgb(248,204,34)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0192%" y="437" width="0.0799%" height="15" fill="rgb(219,223,31)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.0192%" y="421" width="0.0799%" height="15" fill="rgb(236,14,8)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.0192%" y="405" width="0.0799%" height="15" fill="rgb(243,129,23)" fg:x="1102" fg:w="1"/><text x="88.2692%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="88.0990%" y="597" width="0.0799%" height="15" fill="rgb(205,204,5)" fg:x="1103" fg:w="1"/><text x="88.3490%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2588%" y="581" width="0.0799%" height="15" fill="rgb(244,115,32)" fg:x="1105" fg:w="1"/><text x="88.5088%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2588%" y="565" width="0.0799%" height="15" fill="rgb(229,123,14)" fg:x="1105" fg:w="1"/><text x="88.5088%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="88.1789%" y="597" width="0.2396%" height="15" fill="rgb(250,85,1)" fg:x="1104" fg:w="3"/><text x="88.4289%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3387%" y="581" width="0.0799%" height="15" fill="rgb(209,141,54)" fg:x="1106" fg:w="1"/><text x="88.5887%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.3387%" y="565" width="0.0799%" height="15" fill="rgb(244,107,39)" fg:x="1106" fg:w="1"/><text x="88.5887%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3387%" y="549" width="0.0799%" height="15" fill="rgb(230,68,26)" fg:x="1106" fg:w="1"/><text x="88.5887%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.3387%" y="533" width="0.0799%" height="15" fill="rgb(220,178,33)" fg:x="1106" fg:w="1"/><text x="88.5887%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3387%" y="517" width="0.0799%" height="15" fill="rgb(220,77,53)" fg:x="1106" fg:w="1"/><text x="88.5887%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3387%" y="501" width="0.0799%" height="15" fill="rgb(224,108,19)" fg:x="1106" fg:w="1"/><text x="88.5887%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.4185%" y="549" width="0.0799%" height="15" fill="rgb(223,203,27)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.4185%" y="533" width="0.0799%" height="15" fill="rgb(211,32,46)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.4185%" y="517" width="0.0799%" height="15" fill="rgb(240,101,27)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4185%" y="501" width="0.0799%" height="15" fill="rgb(217,210,11)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4185%" y="485" width="0.0799%" height="15" fill="rgb(236,130,21)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4185%" y="469" width="0.0799%" height="15" fill="rgb(250,136,8)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4185%" y="453" width="0.0799%" height="15" fill="rgb(243,223,36)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4185%" y="437" width="0.0799%" height="15" fill="rgb(246,184,8)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4185%" y="421" width="0.0799%" height="15" fill="rgb(222,158,36)" fg:x="1107" fg:w="1"/><text x="88.6685%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4984%" y="501" width="0.0799%" height="15" fill="rgb(210,220,19)" fg:x="1108" fg:w="1"/><text x="88.7484%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4984%" y="485" width="0.0799%" height="15" fill="rgb(246,44,38)" fg:x="1108" fg:w="1"/><text x="88.7484%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4984%" y="469" width="0.0799%" height="15" fill="rgb(246,186,14)" fg:x="1108" fg:w="1"/><text x="88.7484%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4984%" y="453" width="0.0799%" height="15" fill="rgb(233,193,20)" fg:x="1108" fg:w="1"/><text x="88.7484%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4984%" y="437" width="0.0799%" height="15" fill="rgb(215,60,5)" fg:x="1108" fg:w="1"/><text x="88.7484%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.4984%" y="421" width="0.0799%" height="15" fill="rgb(207,128,10)" fg:x="1108" fg:w="1"/><text x="88.7484%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.4984%" y="405" width="0.0799%" height="15" fill="rgb(238,84,54)" fg:x="1108" fg:w="1"/><text x="88.7484%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.4984%" y="389" width="0.0799%" height="15" fill="rgb(213,130,11)" fg:x="1108" fg:w="1"/><text x="88.7484%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (124 samples, 9.90%)</title><rect x="78.8339%" y="645" width="9.9042%" height="15" fill="rgb(235,62,9)" fg:x="987" fg:w="124"/><text x="79.0839%" y="655.50">plugins_core::..</text></g><g><title>plugins_core::build::Build::occupying (16 samples, 1.28%)</title><rect x="87.4601%" y="629" width="1.2780%" height="15" fill="rgb(222,64,24)" fg:x="1095" fg:w="16"/><text x="87.7101%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (12 samples, 0.96%)</title><rect x="87.7796%" y="613" width="0.9585%" height="15" fill="rgb(238,193,42)" fg:x="1099" fg:w="12"/><text x="88.0296%" y="623.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="88.4185%" y="597" width="0.3195%" height="15" fill="rgb(243,204,46)" fg:x="1107" fg:w="4"/><text x="88.6685%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="88.4185%" y="581" width="0.3195%" height="15" fill="rgb(243,196,11)" fg:x="1107" fg:w="4"/><text x="88.6685%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="88.4185%" y="565" width="0.3195%" height="15" fill="rgb(232,77,22)" fg:x="1107" fg:w="4"/><text x="88.6685%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="88.4984%" y="549" width="0.2396%" height="15" fill="rgb(215,80,25)" fg:x="1108" fg:w="3"/><text x="88.7484%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="88.4984%" y="533" width="0.2396%" height="15" fill="rgb(210,173,7)" fg:x="1108" fg:w="3"/><text x="88.7484%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="88.4984%" y="517" width="0.2396%" height="15" fill="rgb(207,101,10)" fg:x="1108" fg:w="3"/><text x="88.7484%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.5783%" y="501" width="0.1597%" height="15" fill="rgb(246,57,48)" fg:x="1109" fg:w="2"/><text x="88.8283%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.5783%" y="485" width="0.1597%" height="15" fill="rgb(236,184,40)" fg:x="1109" fg:w="2"/><text x="88.8283%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.5783%" y="469" width="0.1597%" height="15" fill="rgb(210,205,13)" fg:x="1109" fg:w="2"/><text x="88.8283%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.5783%" y="453" width="0.1597%" height="15" fill="rgb(231,129,42)" fg:x="1109" fg:w="2"/><text x="88.8283%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="88.5783%" y="437" width="0.1597%" height="15" fill="rgb(220,229,54)" fg:x="1109" fg:w="2"/><text x="88.8283%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.5783%" y="421" width="0.1597%" height="15" fill="rgb(230,192,26)" fg:x="1109" fg:w="2"/><text x="88.8283%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.5783%" y="405" width="0.1597%" height="15" fill="rgb(253,18,30)" fg:x="1109" fg:w="2"/><text x="88.8283%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6581%" y="389" width="0.0799%" height="15" fill="rgb(216,62,53)" fg:x="1110" fg:w="1"/><text x="88.9081%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6581%" y="373" width="0.0799%" height="15" fill="rgb(230,79,29)" fg:x="1110" fg:w="1"/><text x="88.9081%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="88.7380%" y="645" width="0.0799%" height="15" fill="rgb(242,26,26)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="88.7380%" y="629" width="0.0799%" height="15" fill="rgb(227,125,21)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="88.7380%" y="613" width="0.0799%" height="15" fill="rgb(229,93,26)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="88.7380%" y="597" width="0.0799%" height="15" fill="rgb(227,228,8)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.7380%" y="581" width="0.0799%" height="15" fill="rgb(233,56,0)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.7380%" y="565" width="0.0799%" height="15" fill="rgb(225,185,17)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.7380%" y="549" width="0.0799%" height="15" fill="rgb(238,202,30)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7380%" y="533" width="0.0799%" height="15" fill="rgb(236,60,13)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.7380%" y="517" width="0.0799%" height="15" fill="rgb(244,92,0)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7380%" y="501" width="0.0799%" height="15" fill="rgb(225,57,15)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.7380%" y="485" width="0.0799%" height="15" fill="rgb(228,5,28)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7380%" y="469" width="0.0799%" height="15" fill="rgb(252,34,51)" fg:x="1111" fg:w="1"/><text x="88.9880%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="88.8978%" y="581" width="0.0799%" height="15" fill="rgb(235,58,7)" fg:x="1113" fg:w="1"/><text x="89.1478%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="88.8179%" y="597" width="0.2396%" height="15" fill="rgb(250,132,20)" fg:x="1112" fg:w="3"/><text x="89.0679%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.9776%" y="581" width="0.0799%" height="15" fill="rgb(217,164,0)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.9776%" y="565" width="0.0799%" height="15" fill="rgb(208,220,35)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.9776%" y="549" width="0.0799%" height="15" fill="rgb(227,42,51)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.9776%" y="533" width="0.0799%" height="15" fill="rgb(225,146,38)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.9776%" y="517" width="0.0799%" height="15" fill="rgb(252,108,37)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.9776%" y="501" width="0.0799%" height="15" fill="rgb(244,101,24)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.9776%" y="485" width="0.0799%" height="15" fill="rgb(213,161,50)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.9776%" y="469" width="0.0799%" height="15" fill="rgb(248,159,19)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.9776%" y="453" width="0.0799%" height="15" fill="rgb(233,179,15)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.9776%" y="437" width="0.0799%" height="15" fill="rgb(248,178,3)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9776%" y="421" width="0.0799%" height="15" fill="rgb(245,190,41)" fg:x="1114" fg:w="1"/><text x="89.2276%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0575%" y="597" width="0.0799%" height="15" fill="rgb(218,151,19)" fg:x="1115" fg:w="1"/><text x="89.3075%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="89.1374%" y="581" width="0.0799%" height="15" fill="rgb(245,25,44)" fg:x="1116" fg:w="1"/><text x="89.3874%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="89.2173%" y="565" width="0.0799%" height="15" fill="rgb(235,172,47)" fg:x="1117" fg:w="1"/><text x="89.4673%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.2173%" y="549" width="0.0799%" height="15" fill="rgb(246,33,12)" fg:x="1117" fg:w="1"/><text x="89.4673%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2173%" y="533" width="0.0799%" height="15" fill="rgb(214,124,7)" fg:x="1117" fg:w="1"/><text x="89.4673%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2173%" y="517" width="0.0799%" height="15" fill="rgb(246,186,18)" fg:x="1117" fg:w="1"/><text x="89.4673%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.2173%" y="501" width="0.0799%" height="15" fill="rgb(231,94,1)" fg:x="1117" fg:w="1"/><text x="89.4673%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="89.1374%" y="597" width="0.2396%" height="15" fill="rgb(208,33,48)" fg:x="1116" fg:w="3"/><text x="89.3874%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="89.2173%" y="581" width="0.1597%" height="15" fill="rgb(208,195,44)" fg:x="1117" fg:w="2"/><text x="89.4673%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2971%" y="565" width="0.0799%" height="15" fill="rgb(226,13,52)" fg:x="1118" fg:w="1"/><text x="89.5471%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="88.8179%" y="613" width="0.7188%" height="15" fill="rgb(217,219,45)" fg:x="1112" fg:w="9"/><text x="89.0679%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="89.3770%" y="597" width="0.1597%" height="15" fill="rgb(223,45,25)" fg:x="1119" fg:w="2"/><text x="89.6270%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="89.3770%" y="581" width="0.1597%" height="15" fill="rgb(241,163,0)" fg:x="1119" fg:w="2"/><text x="89.6270%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="89.3770%" y="565" width="0.1597%" height="15" fill="rgb(216,68,47)" fg:x="1119" fg:w="2"/><text x="89.6270%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="89.3770%" y="549" width="0.1597%" height="15" fill="rgb(236,119,45)" fg:x="1119" fg:w="2"/><text x="89.6270%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="89.3770%" y="533" width="0.1597%" height="15" fill="rgb(209,188,24)" fg:x="1119" fg:w="2"/><text x="89.6270%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="89.3770%" y="517" width="0.1597%" height="15" fill="rgb(221,118,7)" fg:x="1119" fg:w="2"/><text x="89.6270%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.3770%" y="501" width="0.1597%" height="15" fill="rgb(213,148,43)" fg:x="1119" fg:w="2"/><text x="89.6270%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="89.3770%" y="485" width="0.1597%" height="15" fill="rgb(231,21,43)" fg:x="1119" fg:w="2"/><text x="89.6270%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.4569%" y="469" width="0.0799%" height="15" fill="rgb(232,213,43)" fg:x="1120" fg:w="1"/><text x="89.7069%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="89.4569%" y="453" width="0.0799%" height="15" fill="rgb(239,145,50)" fg:x="1120" fg:w="1"/><text x="89.7069%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4569%" y="437" width="0.0799%" height="15" fill="rgb(222,131,18)" fg:x="1120" fg:w="1"/><text x="89.7069%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.4569%" y="421" width="0.0799%" height="15" fill="rgb(243,181,13)" fg:x="1120" fg:w="1"/><text x="89.7069%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="89.4569%" y="405" width="0.0799%" height="15" fill="rgb(212,74,41)" fg:x="1120" fg:w="1"/><text x="89.7069%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.4569%" y="389" width="0.0799%" height="15" fill="rgb(237,143,34)" fg:x="1120" fg:w="1"/><text x="89.7069%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (10 samples, 0.80%)</title><rect x="88.8179%" y="645" width="0.7987%" height="15" fill="rgb(228,139,0)" fg:x="1112" fg:w="10"/><text x="89.0679%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="88.8179%" y="629" width="0.7987%" height="15" fill="rgb(227,214,11)" fg:x="1112" fg:w="10"/><text x="89.0679%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="89.5367%" y="613" width="0.0799%" height="15" fill="rgb(228,118,39)" fg:x="1121" fg:w="1"/><text x="89.7867%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="89.5367%" y="597" width="0.0799%" height="15" fill="rgb(207,117,22)" fg:x="1121" fg:w="1"/><text x="89.7867%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="89.5367%" y="581" width="0.0799%" height="15" fill="rgb(225,91,8)" fg:x="1121" fg:w="1"/><text x="89.7867%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.5367%" y="565" width="0.0799%" height="15" fill="rgb(230,219,48)" fg:x="1121" fg:w="1"/><text x="89.7867%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5367%" y="549" width="0.0799%" height="15" fill="rgb(244,0,23)" fg:x="1121" fg:w="1"/><text x="89.7867%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5367%" y="533" width="0.0799%" height="15" fill="rgb(206,212,23)" fg:x="1121" fg:w="1"/><text x="89.7867%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="89.6166%" y="613" width="0.1597%" height="15" fill="rgb(254,62,10)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="89.6166%" y="597" width="0.1597%" height="15" fill="rgb(236,58,8)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.6166%" y="581" width="0.1597%" height="15" fill="rgb(232,212,17)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.6166%" y="565" width="0.1597%" height="15" fill="rgb(206,132,9)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.6166%" y="549" width="0.1597%" height="15" fill="rgb(234,97,28)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.6166%" y="533" width="0.1597%" height="15" fill="rgb(254,144,9)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.6166%" y="517" width="0.1597%" height="15" fill="rgb(244,204,43)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.6166%" y="501" width="0.1597%" height="15" fill="rgb(248,177,16)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.6166%" y="485" width="0.1597%" height="15" fill="rgb(219,110,15)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.6166%" y="469" width="0.1597%" height="15" fill="rgb(212,203,25)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.6166%" y="453" width="0.1597%" height="15" fill="rgb(205,50,1)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.6166%" y="437" width="0.1597%" height="15" fill="rgb(222,152,41)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.6166%" y="421" width="0.1597%" height="15" fill="rgb(236,83,3)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.6166%" y="405" width="0.1597%" height="15" fill="rgb(214,30,54)" fg:x="1122" fg:w="2"/><text x="89.8666%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="89.7764%" y="565" width="0.0799%" height="15" fill="rgb(250,117,31)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.7764%" y="549" width="0.0799%" height="15" fill="rgb(228,77,14)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7764%" y="533" width="0.0799%" height="15" fill="rgb(241,3,28)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7764%" y="517" width="0.0799%" height="15" fill="rgb(221,175,52)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7764%" y="501" width="0.0799%" height="15" fill="rgb(237,91,6)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.7764%" y="485" width="0.0799%" height="15" fill="rgb(246,46,42)" fg:x="1124" fg:w="1"/><text x="90.0264%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8562%" y="549" width="0.0799%" height="15" fill="rgb(235,199,0)" fg:x="1125" fg:w="1"/><text x="90.1062%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9361%" y="533" width="0.0799%" height="15" fill="rgb(224,44,40)" fg:x="1126" fg:w="1"/><text x="90.1861%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9361%" y="517" width="0.0799%" height="15" fill="rgb(209,24,35)" fg:x="1126" fg:w="1"/><text x="90.1861%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0160%" y="533" width="0.0799%" height="15" fill="rgb(244,46,22)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.0160%" y="517" width="0.0799%" height="15" fill="rgb(235,99,8)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0160%" y="501" width="0.0799%" height="15" fill="rgb(218,127,36)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.0160%" y="485" width="0.0799%" height="15" fill="rgb(238,47,46)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0160%" y="469" width="0.0799%" height="15" fill="rgb(233,65,17)" fg:x="1127" fg:w="1"/><text x="90.2660%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="89.7764%" y="597" width="0.3994%" height="15" fill="rgb(239,22,33)" fg:x="1124" fg:w="5"/><text x="90.0264%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="89.7764%" y="581" width="0.3994%" height="15" fill="rgb(243,66,43)" fg:x="1124" fg:w="5"/><text x="90.0264%" y="591.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="89.8562%" y="565" width="0.3195%" height="15" fill="rgb(235,210,28)" fg:x="1125" fg:w="4"/><text x="90.1062%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="89.9361%" y="549" width="0.2396%" height="15" fill="rgb(205,191,50)" fg:x="1126" fg:w="3"/><text x="90.1861%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="90.0958%" y="533" width="0.0799%" height="15" fill="rgb(251,217,19)" fg:x="1128" fg:w="1"/><text x="90.3458%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.0958%" y="517" width="0.0799%" height="15" fill="rgb(205,174,37)" fg:x="1128" fg:w="1"/><text x="90.3458%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="89.7764%" y="613" width="0.4792%" height="15" fill="rgb(212,158,42)" fg:x="1124" fg:w="6"/><text x="90.0264%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="90.1757%" y="597" width="0.0799%" height="15" fill="rgb(212,208,51)" fg:x="1129" fg:w="1"/><text x="90.4257%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1757%" y="581" width="0.0799%" height="15" fill="rgb(225,198,20)" fg:x="1129" fg:w="1"/><text x="90.4257%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.1757%" y="565" width="0.0799%" height="15" fill="rgb(247,41,44)" fg:x="1129" fg:w="1"/><text x="90.4257%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="89.6166%" y="629" width="0.7188%" height="15" fill="rgb(228,33,41)" fg:x="1122" fg:w="9"/><text x="89.8666%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="90.2556%" y="613" width="0.0799%" height="15" fill="rgb(215,47,52)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2556%" y="597" width="0.0799%" height="15" fill="rgb(248,106,37)" fg:x="1130" fg:w="1"/><text x="90.5056%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="90.3355%" y="629" width="0.1597%" height="15" fill="rgb(238,91,29)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="90.3355%" y="613" width="0.1597%" height="15" fill="rgb(226,111,40)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="90.3355%" y="597" width="0.1597%" height="15" fill="rgb(229,159,36)" fg:x="1131" fg:w="2"/><text x="90.5855%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="90.4153%" y="581" width="0.0799%" height="15" fill="rgb(221,109,4)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="90.4153%" y="565" width="0.0799%" height="15" fill="rgb(236,56,25)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.4153%" y="549" width="0.0799%" height="15" fill="rgb(244,113,23)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="90.4153%" y="533" width="0.0799%" height="15" fill="rgb(249,132,2)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.4153%" y="517" width="0.0799%" height="15" fill="rgb(205,185,21)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="90.4153%" y="501" width="0.0799%" height="15" fill="rgb(245,130,2)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="90.4153%" y="485" width="0.0799%" height="15" fill="rgb(246,71,26)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4153%" y="469" width="0.0799%" height="15" fill="rgb(234,194,6)" fg:x="1132" fg:w="1"/><text x="90.6653%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.4952%" y="581" width="0.0799%" height="15" fill="rgb(206,24,32)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.4952%" y="565" width="0.0799%" height="15" fill="rgb(233,7,54)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.4952%" y="549" width="0.0799%" height="15" fill="rgb(252,46,1)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4952%" y="533" width="0.0799%" height="15" fill="rgb(216,113,53)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4952%" y="517" width="0.0799%" height="15" fill="rgb(215,40,24)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4952%" y="501" width="0.0799%" height="15" fill="rgb(233,222,8)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4952%" y="485" width="0.0799%" height="15" fill="rgb(248,73,28)" fg:x="1133" fg:w="1"/><text x="90.7452%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6550%" y="533" width="0.0799%" height="15" fill="rgb(247,126,28)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6550%" y="517" width="0.0799%" height="15" fill="rgb(242,173,54)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6550%" y="501" width="0.0799%" height="15" fill="rgb(244,186,22)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.6550%" y="485" width="0.0799%" height="15" fill="rgb(231,187,4)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.6550%" y="469" width="0.0799%" height="15" fill="rgb(252,66,47)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.6550%" y="453" width="0.0799%" height="15" fill="rgb(240,228,28)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6550%" y="437" width="0.0799%" height="15" fill="rgb(237,63,43)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6550%" y="421" width="0.0799%" height="15" fill="rgb(214,1,44)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.6550%" y="405" width="0.0799%" height="15" fill="rgb(212,2,46)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.6550%" y="389" width="0.0799%" height="15" fill="rgb(213,142,5)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.6550%" y="373" width="0.0799%" height="15" fill="rgb(229,135,1)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.6550%" y="357" width="0.0799%" height="15" fill="rgb(252,98,38)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6550%" y="341" width="0.0799%" height="15" fill="rgb(206,89,40)" fg:x="1135" fg:w="1"/><text x="90.9050%" y="351.50"></text></g><g><title>kernel::model::EntityPtr::new (4 samples, 0.32%)</title><rect x="90.4952%" y="613" width="0.3195%" height="15" fill="rgb(219,73,36)" fg:x="1133" fg:w="4"/><text x="90.7452%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="90.4952%" y="597" width="0.3195%" height="15" fill="rgb(207,168,32)" fg:x="1133" fg:w="4"/><text x="90.7452%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="90.5751%" y="581" width="0.2396%" height="15" fill="rgb(215,113,21)" fg:x="1134" fg:w="3"/><text x="90.8251%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="90.5751%" y="565" width="0.2396%" height="15" fill="rgb(217,144,43)" fg:x="1134" fg:w="3"/><text x="90.8251%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.5751%" y="549" width="0.2396%" height="15" fill="rgb(249,48,50)" fg:x="1134" fg:w="3"/><text x="90.8251%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.7348%" y="533" width="0.0799%" height="15" fill="rgb(242,1,26)" fg:x="1136" fg:w="1"/><text x="90.9848%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7348%" y="517" width="0.0799%" height="15" fill="rgb(231,167,42)" fg:x="1136" fg:w="1"/><text x="90.9848%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.7348%" y="501" width="0.0799%" height="15" fill="rgb(242,177,45)" fg:x="1136" fg:w="1"/><text x="90.9848%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7348%" y="485" width="0.0799%" height="15" fill="rgb(232,121,42)" fg:x="1136" fg:w="1"/><text x="90.9848%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.7348%" y="469" width="0.0799%" height="15" fill="rgb(205,8,42)" fg:x="1136" fg:w="1"/><text x="90.9848%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7348%" y="453" width="0.0799%" height="15" fill="rgb(238,199,24)" fg:x="1136" fg:w="1"/><text x="90.9848%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.7348%" y="437" width="0.0799%" height="15" fill="rgb(228,112,2)" fg:x="1136" fg:w="1"/><text x="90.9848%" y="447.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (231 samples, 18.45%)</title><rect x="72.4441%" y="661" width="18.4505%" height="15" fill="rgb(215,115,33)" fg:x="907" fg:w="231"/><text x="72.6941%" y="671.50">&lt;tests::HoldingKeyInVessel as..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (16 samples, 1.28%)</title><rect x="89.6166%" y="645" width="1.2780%" height="15" fill="rgb(230,209,34)" fg:x="1122" fg:w="16"/><text x="89.8666%" y="655.50"></text></g><g><title>plugins_core::build::Build::new_world (5 samples, 0.40%)</title><rect x="90.4952%" y="629" width="0.3994%" height="15" fill="rgb(246,76,12)" fg:x="1133" fg:w="5"/><text x="90.7452%" y="639.50"></text></g><g><title>kernel::model::entity::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="90.8147%" y="613" width="0.0799%" height="15" fill="rgb(240,110,9)" fg:x="1137" fg:w="1"/><text x="91.0647%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="90.8946%" y="661" width="0.0799%" height="15" fill="rgb(224,94,46)" fg:x="1138" fg:w="1"/><text x="91.1446%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8946%" y="645" width="0.0799%" height="15" fill="rgb(247,150,22)" fg:x="1138" fg:w="1"/><text x="91.1446%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.9744%" y="629" width="0.0799%" height="15" fill="rgb(249,85,13)" fg:x="1139" fg:w="1"/><text x="91.2244%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="90.9744%" y="645" width="0.1597%" height="15" fill="rgb(208,77,41)" fg:x="1139" fg:w="2"/><text x="91.2244%" y="655.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="91.0543%" y="629" width="0.0799%" height="15" fill="rgb(240,42,44)" fg:x="1140" fg:w="1"/><text x="91.3043%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0543%" y="613" width="0.0799%" height="15" fill="rgb(222,10,51)" fg:x="1140" fg:w="1"/><text x="91.3043%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="91.2141%" y="565" width="0.3195%" height="15" fill="rgb(208,146,53)" fg:x="1142" fg:w="4"/><text x="91.4641%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="91.2141%" y="549" width="0.3195%" height="15" fill="rgb(236,162,23)" fg:x="1142" fg:w="4"/><text x="91.4641%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="91.2141%" y="533" width="0.3195%" height="15" fill="rgb(218,66,21)" fg:x="1142" fg:w="4"/><text x="91.4641%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="91.2939%" y="517" width="0.2396%" height="15" fill="rgb(233,6,47)" fg:x="1143" fg:w="3"/><text x="91.5439%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="91.3738%" y="501" width="0.1597%" height="15" fill="rgb(236,59,51)" fg:x="1144" fg:w="2"/><text x="91.6238%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.5335%" y="549" width="0.0799%" height="15" fill="rgb(242,12,46)" fg:x="1146" fg:w="1"/><text x="91.7835%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="91.6134%" y="549" width="0.2396%" height="15" fill="rgb(243,142,19)" fg:x="1147" fg:w="3"/><text x="91.8634%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="91.7732%" y="533" width="0.0799%" height="15" fill="rgb(217,28,17)" fg:x="1149" fg:w="1"/><text x="92.0232%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="91.9329%" y="533" width="0.2396%" height="15" fill="rgb(228,2,27)" fg:x="1151" fg:w="3"/><text x="92.1829%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="91.9329%" y="517" width="0.2396%" height="15" fill="rgb(214,221,4)" fg:x="1151" fg:w="3"/><text x="92.1829%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.0128%" y="501" width="0.1597%" height="15" fill="rgb(224,69,26)" fg:x="1152" fg:w="2"/><text x="92.2628%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.0927%" y="485" width="0.0799%" height="15" fill="rgb(219,70,4)" fg:x="1153" fg:w="1"/><text x="92.3427%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="92.1725%" y="485" width="0.1597%" height="15" fill="rgb(218,157,39)" fg:x="1154" fg:w="2"/><text x="92.4225%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="92.1725%" y="469" width="0.1597%" height="15" fill="rgb(238,36,28)" fg:x="1154" fg:w="2"/><text x="92.4225%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="92.1725%" y="453" width="0.1597%" height="15" fill="rgb(232,29,0)" fg:x="1154" fg:w="2"/><text x="92.4225%" y="463.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="92.1725%" y="437" width="0.1597%" height="15" fill="rgb(243,138,46)" fg:x="1154" fg:w="2"/><text x="92.4225%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="92.1725%" y="533" width="0.2396%" height="15" fill="rgb(232,186,41)" fg:x="1154" fg:w="3"/><text x="92.4225%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="92.1725%" y="517" width="0.2396%" height="15" fill="rgb(252,166,17)" fg:x="1154" fg:w="3"/><text x="92.4225%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="92.1725%" y="501" width="0.2396%" height="15" fill="rgb(228,179,12)" fg:x="1154" fg:w="3"/><text x="92.4225%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="92.3323%" y="485" width="0.0799%" height="15" fill="rgb(254,205,53)" fg:x="1156" fg:w="1"/><text x="92.5823%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="92.4121%" y="517" width="0.0799%" height="15" fill="rgb(224,163,47)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.4121%" y="501" width="0.0799%" height="15" fill="rgb(208,43,47)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.4121%" y="485" width="0.0799%" height="15" fill="rgb(224,198,38)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.4121%" y="469" width="0.0799%" height="15" fill="rgb(234,12,40)" fg:x="1157" fg:w="1"/><text x="92.6621%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="92.5719%" y="485" width="0.1597%" height="15" fill="rgb(237,212,39)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="92.5719%" y="469" width="0.1597%" height="15" fill="rgb(253,2,33)" fg:x="1159" fg:w="2"/><text x="92.8219%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="92.6518%" y="453" width="0.0799%" height="15" fill="rgb(251,29,16)" fg:x="1160" fg:w="1"/><text x="92.9018%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="92.6518%" y="437" width="0.0799%" height="15" fill="rgb(214,38,29)" fg:x="1160" fg:w="1"/><text x="92.9018%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.6518%" y="421" width="0.0799%" height="15" fill="rgb(226,226,29)" fg:x="1160" fg:w="1"/><text x="92.9018%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="92.4920%" y="517" width="0.3994%" height="15" fill="rgb(236,79,42)" fg:x="1158" fg:w="5"/><text x="92.7420%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="92.4920%" y="501" width="0.3994%" height="15" fill="rgb(222,12,36)" fg:x="1158" fg:w="5"/><text x="92.7420%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="92.7316%" y="485" width="0.1597%" height="15" fill="rgb(232,123,44)" fg:x="1161" fg:w="2"/><text x="92.9816%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="92.7316%" y="469" width="0.1597%" height="15" fill="rgb(234,93,50)" fg:x="1161" fg:w="2"/><text x="92.9816%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.8115%" y="453" width="0.0799%" height="15" fill="rgb(210,86,49)" fg:x="1162" fg:w="1"/><text x="93.0615%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="92.4121%" y="533" width="0.7188%" height="15" fill="rgb(224,91,54)" fg:x="1157" fg:w="9"/><text x="92.6621%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="92.8914%" y="517" width="0.2396%" height="15" fill="rgb(239,169,9)" fg:x="1163" fg:w="3"/><text x="93.1414%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="92.9712%" y="501" width="0.1597%" height="15" fill="rgb(238,29,17)" fg:x="1164" fg:w="2"/><text x="93.2212%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="91.8530%" y="549" width="1.3578%" height="15" fill="rgb(227,160,22)" fg:x="1150" fg:w="17"/><text x="92.1030%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.1310%" y="533" width="0.0799%" height="15" fill="rgb(231,129,52)" fg:x="1166" fg:w="1"/><text x="93.3810%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="93.1310%" y="517" width="0.0799%" height="15" fill="rgb(241,184,9)" fg:x="1166" fg:w="1"/><text x="93.3810%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1310%" y="501" width="0.0799%" height="15" fill="rgb(217,43,48)" fg:x="1166" fg:w="1"/><text x="93.3810%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (26 samples, 2.08%)</title><rect x="91.2141%" y="581" width="2.0767%" height="15" fill="rgb(213,49,1)" fg:x="1142" fg:w="26"/><text x="91.4641%" y="591.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="91.5335%" y="565" width="1.7572%" height="15" fill="rgb(223,79,39)" fg:x="1146" fg:w="22"/><text x="91.7835%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="93.2109%" y="549" width="0.0799%" height="15" fill="rgb(228,227,46)" fg:x="1167" fg:w="1"/><text x="93.4609%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.3706%" y="517" width="0.0799%" height="15" fill="rgb(245,89,41)" fg:x="1169" fg:w="1"/><text x="93.6206%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="93.4505%" y="501" width="0.1597%" height="15" fill="rgb(253,83,21)" fg:x="1170" fg:w="2"/><text x="93.7005%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="93.3706%" y="549" width="0.3195%" height="15" fill="rgb(229,116,51)" fg:x="1169" fg:w="4"/><text x="93.6206%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="93.3706%" y="533" width="0.3195%" height="15" fill="rgb(246,67,26)" fg:x="1169" fg:w="4"/><text x="93.6206%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="93.4505%" y="517" width="0.2396%" height="15" fill="rgb(250,117,20)" fg:x="1170" fg:w="3"/><text x="93.7005%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.6102%" y="501" width="0.0799%" height="15" fill="rgb(207,88,17)" fg:x="1172" fg:w="1"/><text x="93.8602%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.6102%" y="485" width="0.0799%" height="15" fill="rgb(212,98,36)" fg:x="1172" fg:w="1"/><text x="93.8602%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.7700%" y="501" width="0.0799%" height="15" fill="rgb(221,72,6)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="93.7700%" y="485" width="0.0799%" height="15" fill="rgb(235,129,19)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="93.7700%" y="469" width="0.0799%" height="15" fill="rgb(237,200,6)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.7700%" y="453" width="0.0799%" height="15" fill="rgb(239,69,54)" fg:x="1174" fg:w="1"/><text x="94.0200%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.64%)</title><rect x="93.2907%" y="565" width="0.6390%" height="15" fill="rgb(214,68,45)" fg:x="1168" fg:w="8"/><text x="93.5407%" y="575.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="93.6901%" y="549" width="0.2396%" height="15" fill="rgb(254,160,8)" fg:x="1173" fg:w="3"/><text x="93.9401%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="93.6901%" y="533" width="0.2396%" height="15" fill="rgb(215,226,31)" fg:x="1173" fg:w="3"/><text x="93.9401%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="93.6901%" y="517" width="0.2396%" height="15" fill="rgb(253,6,35)" fg:x="1173" fg:w="3"/><text x="93.9401%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.8498%" y="501" width="0.0799%" height="15" fill="rgb(219,96,42)" fg:x="1175" fg:w="1"/><text x="94.0998%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.0096%" y="501" width="0.0799%" height="15" fill="rgb(207,170,13)" fg:x="1177" fg:w="1"/><text x="94.2596%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.0096%" y="485" width="0.0799%" height="15" fill="rgb(239,101,5)" fg:x="1177" fg:w="1"/><text x="94.2596%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0096%" y="469" width="0.0799%" height="15" fill="rgb(228,183,34)" fg:x="1177" fg:w="1"/><text x="94.2596%" y="479.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="94.0096%" y="533" width="0.1597%" height="15" fill="rgb(205,28,31)" fg:x="1177" fg:w="2"/><text x="94.2596%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="94.0096%" y="517" width="0.1597%" height="15" fill="rgb(214,118,50)" fg:x="1177" fg:w="2"/><text x="94.2596%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="94.0895%" y="501" width="0.0799%" height="15" fill="rgb(213,108,51)" fg:x="1178" fg:w="1"/><text x="94.3395%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="94.0895%" y="485" width="0.0799%" height="15" fill="rgb(238,56,37)" fg:x="1178" fg:w="1"/><text x="94.3395%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="94.1693%" y="533" width="0.0799%" height="15" fill="rgb(214,136,28)" fg:x="1179" fg:w="1"/><text x="94.4193%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="94.1693%" y="517" width="0.0799%" height="15" fill="rgb(221,201,54)" fg:x="1179" fg:w="1"/><text x="94.4193%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="94.2492%" y="533" width="0.1597%" height="15" fill="rgb(228,216,39)" fg:x="1180" fg:w="2"/><text x="94.4992%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="94.3291%" y="517" width="0.0799%" height="15" fill="rgb(207,229,49)" fg:x="1181" fg:w="1"/><text x="94.5791%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3291%" y="501" width="0.0799%" height="15" fill="rgb(224,23,43)" fg:x="1181" fg:w="1"/><text x="94.5791%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.3291%" y="485" width="0.0799%" height="15" fill="rgb(247,97,18)" fg:x="1181" fg:w="1"/><text x="94.5791%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="94.3291%" y="469" width="0.0799%" height="15" fill="rgb(232,53,32)" fg:x="1181" fg:w="1"/><text x="94.5791%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.6486%" y="501" width="0.0799%" height="15" fill="rgb(247,38,23)" fg:x="1185" fg:w="1"/><text x="94.8986%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7284%" y="485" width="0.0799%" height="15" fill="rgb(228,101,52)" fg:x="1186" fg:w="1"/><text x="94.9784%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7284%" y="469" width="0.0799%" height="15" fill="rgb(231,45,36)" fg:x="1186" fg:w="1"/><text x="94.9784%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7284%" y="453" width="0.0799%" height="15" fill="rgb(221,183,50)" fg:x="1186" fg:w="1"/><text x="94.9784%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9681%" y="437" width="0.0799%" height="15" fill="rgb(251,132,12)" fg:x="1189" fg:w="1"/><text x="95.2181%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="94.8083%" y="485" width="0.3195%" height="15" fill="rgb(252,50,16)" fg:x="1187" fg:w="4"/><text x="95.0583%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="94.8083%" y="469" width="0.3195%" height="15" fill="rgb(224,60,15)" fg:x="1187" fg:w="4"/><text x="95.0583%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="94.8882%" y="453" width="0.2396%" height="15" fill="rgb(254,2,34)" fg:x="1188" fg:w="3"/><text x="95.1382%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.0479%" y="437" width="0.0799%" height="15" fill="rgb(232,154,8)" fg:x="1190" fg:w="1"/><text x="95.2979%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0479%" y="421" width="0.0799%" height="15" fill="rgb(235,190,52)" fg:x="1190" fg:w="1"/><text x="95.2979%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="95.1278%" y="469" width="0.0799%" height="15" fill="rgb(213,218,38)" fg:x="1191" fg:w="1"/><text x="95.3778%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2077%" y="453" width="0.0799%" height="15" fill="rgb(237,50,37)" fg:x="1192" fg:w="1"/><text x="95.4577%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.2077%" y="437" width="0.0799%" height="15" fill="rgb(235,51,35)" fg:x="1192" fg:w="1"/><text x="95.4577%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2077%" y="421" width="0.0799%" height="15" fill="rgb(244,40,52)" fg:x="1192" fg:w="1"/><text x="95.4577%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.2875%" y="437" width="0.0799%" height="15" fill="rgb(217,225,45)" fg:x="1193" fg:w="1"/><text x="95.5375%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="94.7284%" y="501" width="0.7188%" height="15" fill="rgb(247,191,36)" fg:x="1186" fg:w="9"/><text x="94.9784%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="95.1278%" y="485" width="0.3195%" height="15" fill="rgb(251,144,31)" fg:x="1191" fg:w="4"/><text x="95.3778%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="95.2077%" y="469" width="0.2396%" height="15" fill="rgb(227,155,41)" fg:x="1192" fg:w="3"/><text x="95.4577%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="95.2875%" y="453" width="0.1597%" height="15" fill="rgb(236,121,36)" fg:x="1193" fg:w="2"/><text x="95.5375%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.3674%" y="437" width="0.0799%" height="15" fill="rgb(221,128,28)" fg:x="1194" fg:w="1"/><text x="95.6174%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.3674%" y="421" width="0.0799%" height="15" fill="rgb(249,67,50)" fg:x="1194" fg:w="1"/><text x="95.6174%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="95.3674%" y="405" width="0.0799%" height="15" fill="rgb(241,126,38)" fg:x="1194" fg:w="1"/><text x="95.6174%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="95.3674%" y="389" width="0.0799%" height="15" fill="rgb(239,33,14)" fg:x="1194" fg:w="1"/><text x="95.6174%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.3674%" y="373" width="0.0799%" height="15" fill="rgb(207,221,54)" fg:x="1194" fg:w="1"/><text x="95.6174%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="94.6486%" y="517" width="0.8786%" height="15" fill="rgb(242,138,43)" fg:x="1185" fg:w="11"/><text x="94.8986%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="95.4473%" y="501" width="0.0799%" height="15" fill="rgb(231,118,19)" fg:x="1195" fg:w="1"/><text x="95.6973%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.68%)</title><rect x="93.9297%" y="565" width="1.6773%" height="15" fill="rgb(214,128,54)" fg:x="1176" fg:w="21"/><text x="94.1797%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.68%)</title><rect x="93.9297%" y="549" width="1.6773%" height="15" fill="rgb(236,136,6)" fg:x="1176" fg:w="21"/><text x="94.1797%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="94.4089%" y="533" width="1.1981%" height="15" fill="rgb(247,30,38)" fg:x="1182" fg:w="15"/><text x="94.6589%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.5272%" y="517" width="0.0799%" height="15" fill="rgb(249,189,40)" fg:x="1196" fg:w="1"/><text x="95.7772%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.6869%" y="453" width="0.0799%" height="15" fill="rgb(247,179,7)" fg:x="1198" fg:w="1"/><text x="95.9369%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.7668%" y="389" width="0.0799%" height="15" fill="rgb(239,46,52)" fg:x="1199" fg:w="1"/><text x="96.0168%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7668%" y="373" width="0.0799%" height="15" fill="rgb(225,28,52)" fg:x="1199" fg:w="1"/><text x="96.0168%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.7668%" y="421" width="0.1597%" height="15" fill="rgb(217,208,44)" fg:x="1199" fg:w="2"/><text x="96.0168%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.7668%" y="405" width="0.1597%" height="15" fill="rgb(224,11,34)" fg:x="1199" fg:w="2"/><text x="96.0168%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8466%" y="389" width="0.0799%" height="15" fill="rgb(205,134,17)" fg:x="1200" fg:w="1"/><text x="96.0966%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9265%" y="405" width="0.0799%" height="15" fill="rgb(237,125,9)" fg:x="1201" fg:w="1"/><text x="96.1765%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9265%" y="389" width="0.0799%" height="15" fill="rgb(208,139,47)" fg:x="1201" fg:w="1"/><text x="96.1765%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9265%" y="373" width="0.0799%" height="15" fill="rgb(242,5,5)" fg:x="1201" fg:w="1"/><text x="96.1765%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.9265%" y="357" width="0.0799%" height="15" fill="rgb(218,78,2)" fg:x="1201" fg:w="1"/><text x="96.1765%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.9265%" y="341" width="0.0799%" height="15" fill="rgb(217,75,16)" fg:x="1201" fg:w="1"/><text x="96.1765%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.9265%" y="421" width="0.1597%" height="15" fill="rgb(212,56,17)" fg:x="1201" fg:w="2"/><text x="96.1765%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0064%" y="405" width="0.0799%" height="15" fill="rgb(228,61,29)" fg:x="1202" fg:w="1"/><text x="96.2564%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0064%" y="389" width="0.0799%" height="15" fill="rgb(247,202,38)" fg:x="1202" fg:w="1"/><text x="96.2564%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0064%" y="373" width="0.0799%" height="15" fill="rgb(211,216,43)" fg:x="1202" fg:w="1"/><text x="96.2564%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="95.7668%" y="453" width="0.3994%" height="15" fill="rgb(220,7,49)" fg:x="1199" fg:w="5"/><text x="96.0168%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="95.7668%" y="437" width="0.3994%" height="15" fill="rgb(219,158,7)" fg:x="1199" fg:w="5"/><text x="96.0168%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="96.0863%" y="421" width="0.0799%" height="15" fill="rgb(206,127,9)" fg:x="1203" fg:w="1"/><text x="96.3363%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="95.6070%" y="469" width="0.6390%" height="15" fill="rgb(206,103,43)" fg:x="1197" fg:w="8"/><text x="95.8570%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1661%" y="453" width="0.0799%" height="15" fill="rgb(240,108,41)" fg:x="1204" fg:w="1"/><text x="96.4161%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.2460%" y="469" width="0.0799%" height="15" fill="rgb(252,212,6)" fg:x="1205" fg:w="1"/><text x="96.4960%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.2460%" y="453" width="0.0799%" height="15" fill="rgb(248,105,31)" fg:x="1205" fg:w="1"/><text x="96.4960%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="95.6070%" y="501" width="0.7987%" height="15" fill="rgb(241,123,4)" fg:x="1197" fg:w="10"/><text x="95.8570%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="95.6070%" y="485" width="0.7987%" height="15" fill="rgb(223,74,37)" fg:x="1197" fg:w="10"/><text x="95.8570%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3259%" y="469" width="0.0799%" height="15" fill="rgb(251,219,28)" fg:x="1206" fg:w="1"/><text x="96.5759%" y="479.50"></text></g><g><title>engine::session::Session::close (69 samples, 5.51%)</title><rect x="90.9744%" y="661" width="5.5112%" height="15" fill="rgb(218,36,31)" fg:x="1139" fg:w="69"/><text x="91.2244%" y="671.50">engine:..</text></g><g><title>engine::session::state::State::close (67 samples, 5.35%)</title><rect x="91.1342%" y="645" width="5.3514%" height="15" fill="rgb(229,40,15)" fg:x="1141" fg:w="67"/><text x="91.3842%" y="655.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (67 samples, 5.35%)</title><rect x="91.1342%" y="629" width="5.3514%" height="15" fill="rgb(208,138,37)" fg:x="1141" fg:w="67"/><text x="91.3842%" y="639.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (67 samples, 5.35%)</title><rect x="91.1342%" y="613" width="5.3514%" height="15" fill="rgb(208,40,52)" fg:x="1141" fg:w="67"/><text x="91.3842%" y="623.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (66 samples, 5.27%)</title><rect x="91.2141%" y="597" width="5.2716%" height="15" fill="rgb(246,181,48)" fg:x="1142" fg:w="66"/><text x="91.4641%" y="607.50">engine..</text></g><g><title>kernel::model::any_entity_changes (40 samples, 3.19%)</title><rect x="93.2907%" y="581" width="3.1949%" height="15" fill="rgb(253,178,36)" fg:x="1168" fg:w="40"/><text x="93.5407%" y="591.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.88%)</title><rect x="95.6070%" y="565" width="0.8786%" height="15" fill="rgb(210,170,6)" fg:x="1197" fg:w="11"/><text x="95.8570%" y="575.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="95.6070%" y="549" width="0.8786%" height="15" fill="rgb(243,62,22)" fg:x="1197" fg:w="11"/><text x="95.8570%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="95.6070%" y="533" width="0.8786%" height="15" fill="rgb(213,145,26)" fg:x="1197" fg:w="11"/><text x="95.8570%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="95.6070%" y="517" width="0.8786%" height="15" fill="rgb(237,177,23)" fg:x="1197" fg:w="11"/><text x="95.8570%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4058%" y="501" width="0.0799%" height="15" fill="rgb(252,5,24)" fg:x="1207" fg:w="1"/><text x="96.6558%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.4058%" y="485" width="0.0799%" height="15" fill="rgb(230,108,54)" fg:x="1207" fg:w="1"/><text x="96.6558%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="96.5655%" y="533" width="0.0799%" height="15" fill="rgb(252,192,41)" fg:x="1209" fg:w="1"/><text x="96.8155%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="96.5655%" y="517" width="0.0799%" height="15" fill="rgb(218,125,20)" fg:x="1209" fg:w="1"/><text x="96.8155%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="96.5655%" y="501" width="0.0799%" height="15" fill="rgb(230,223,15)" fg:x="1209" fg:w="1"/><text x="96.8155%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="96.5655%" y="485" width="0.0799%" height="15" fill="rgb(239,99,47)" fg:x="1209" fg:w="1"/><text x="96.8155%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.5655%" y="469" width="0.0799%" height="15" fill="rgb(222,214,23)" fg:x="1209" fg:w="1"/><text x="96.8155%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="96.7252%" y="469" width="0.0799%" height="15" fill="rgb(250,98,43)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7252%" y="453" width="0.0799%" height="15" fill="rgb(226,140,11)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7252%" y="437" width="0.0799%" height="15" fill="rgb(239,2,22)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.7252%" y="421" width="0.0799%" height="15" fill="rgb(209,106,26)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.7252%" y="405" width="0.0799%" height="15" fill="rgb(209,135,11)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.7252%" y="389" width="0.0799%" height="15" fill="rgb(241,58,6)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7252%" y="373" width="0.0799%" height="15" fill="rgb(214,78,1)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7252%" y="357" width="0.0799%" height="15" fill="rgb(229,135,33)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.7252%" y="341" width="0.0799%" height="15" fill="rgb(245,87,50)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.7252%" y="325" width="0.0799%" height="15" fill="rgb(222,222,8)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.7252%" y="309" width="0.0799%" height="15" fill="rgb(214,97,50)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.7252%" y="293" width="0.0799%" height="15" fill="rgb(244,161,51)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7252%" y="277" width="0.0799%" height="15" fill="rgb(225,17,4)" fg:x="1211" fg:w="1"/><text x="96.9752%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="96.8051%" y="453" width="0.0799%" height="15" fill="rgb(238,10,13)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="463.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="96.8051%" y="437" width="0.0799%" height="15" fill="rgb(239,169,14)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.8051%" y="421" width="0.0799%" height="15" fill="rgb(213,105,25)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.8051%" y="405" width="0.0799%" height="15" fill="rgb(233,4,17)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.8051%" y="389" width="0.0799%" height="15" fill="rgb(212,5,35)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8051%" y="373" width="0.0799%" height="15" fill="rgb(216,3,14)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8051%" y="357" width="0.0799%" height="15" fill="rgb(240,105,33)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8051%" y="341" width="0.0799%" height="15" fill="rgb(216,73,0)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8051%" y="325" width="0.0799%" height="15" fill="rgb(217,153,48)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.8051%" y="309" width="0.0799%" height="15" fill="rgb(218,180,8)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8051%" y="293" width="0.0799%" height="15" fill="rgb(252,168,2)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8051%" y="277" width="0.0799%" height="15" fill="rgb(224,116,33)" fg:x="1212" fg:w="1"/><text x="97.0551%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8850%" y="277" width="0.0799%" height="15" fill="rgb(229,205,17)" fg:x="1213" fg:w="1"/><text x="97.1350%" y="287.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="96.8850%" y="261" width="0.0799%" height="15" fill="rgb(234,1,41)" fg:x="1213" fg:w="1"/><text x="97.1350%" y="271.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.8850%" y="245" width="0.0799%" height="15" fill="rgb(244,185,8)" fg:x="1213" fg:w="1"/><text x="97.1350%" y="255.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="96.8850%" y="437" width="0.1597%" height="15" fill="rgb(248,51,21)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.8850%" y="421" width="0.1597%" height="15" fill="rgb(248,157,31)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.8850%" y="405" width="0.1597%" height="15" fill="rgb(210,34,47)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.8850%" y="389" width="0.1597%" height="15" fill="rgb(227,139,53)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.8850%" y="373" width="0.1597%" height="15" fill="rgb(232,211,37)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.8850%" y="357" width="0.1597%" height="15" fill="rgb(236,133,10)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.8850%" y="341" width="0.1597%" height="15" fill="rgb(243,202,25)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.8850%" y="325" width="0.1597%" height="15" fill="rgb(224,59,9)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="96.8850%" y="309" width="0.1597%" height="15" fill="rgb(206,146,16)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.8850%" y="293" width="0.1597%" height="15" fill="rgb(220,47,2)" fg:x="1213" fg:w="2"/><text x="97.1350%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9649%" y="277" width="0.0799%" height="15" fill="rgb(225,124,51)" fg:x="1214" fg:w="1"/><text x="97.2149%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0447%" y="373" width="0.0799%" height="15" fill="rgb(241,220,50)" fg:x="1215" fg:w="1"/><text x="97.2947%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.1246%" y="261" width="0.0799%" height="15" fill="rgb(232,168,5)" fg:x="1216" fg:w="1"/><text x="97.3746%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.1246%" y="293" width="0.1597%" height="15" fill="rgb(243,90,22)" fg:x="1216" fg:w="2"/><text x="97.3746%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.1246%" y="277" width="0.1597%" height="15" fill="rgb(223,153,32)" fg:x="1216" fg:w="2"/><text x="97.3746%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2045%" y="261" width="0.0799%" height="15" fill="rgb(243,124,20)" fg:x="1217" fg:w="1"/><text x="97.4545%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2045%" y="245" width="0.0799%" height="15" fill="rgb(246,168,39)" fg:x="1217" fg:w="1"/><text x="97.4545%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.2045%" y="229" width="0.0799%" height="15" fill="rgb(222,165,54)" fg:x="1217" fg:w="1"/><text x="97.4545%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.2045%" y="213" width="0.0799%" height="15" fill="rgb(251,142,27)" fg:x="1217" fg:w="1"/><text x="97.4545%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.1246%" y="357" width="0.2396%" height="15" fill="rgb(207,168,50)" fg:x="1216" fg:w="3"/><text x="97.3746%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.1246%" y="341" width="0.2396%" height="15" fill="rgb(250,139,25)" fg:x="1216" fg:w="3"/><text x="97.3746%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="97.1246%" y="325" width="0.2396%" height="15" fill="rgb(214,194,48)" fg:x="1216" fg:w="3"/><text x="97.3746%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.1246%" y="309" width="0.2396%" height="15" fill="rgb(227,138,47)" fg:x="1216" fg:w="3"/><text x="97.3746%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="97.2843%" y="293" width="0.0799%" height="15" fill="rgb(250,162,5)" fg:x="1218" fg:w="1"/><text x="97.5343%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="96.8850%" y="453" width="0.5591%" height="15" fill="rgb(229,74,25)" fg:x="1213" fg:w="7"/><text x="97.1350%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="97.0447%" y="437" width="0.3994%" height="15" fill="rgb(221,124,34)" fg:x="1215" fg:w="5"/><text x="97.2947%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="97.0447%" y="421" width="0.3994%" height="15" fill="rgb(225,94,25)" fg:x="1215" fg:w="5"/><text x="97.2947%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="97.0447%" y="405" width="0.3994%" height="15" fill="rgb(210,100,12)" fg:x="1215" fg:w="5"/><text x="97.2947%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="97.0447%" y="389" width="0.3994%" height="15" fill="rgb(206,62,48)" fg:x="1215" fg:w="5"/><text x="97.2947%" y="399.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="97.1246%" y="373" width="0.3195%" height="15" fill="rgb(222,181,9)" fg:x="1216" fg:w="4"/><text x="97.3746%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3642%" y="357" width="0.0799%" height="15" fill="rgb(248,42,38)" fg:x="1219" fg:w="1"/><text x="97.6142%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.3642%" y="341" width="0.0799%" height="15" fill="rgb(213,40,6)" fg:x="1219" fg:w="1"/><text x="97.6142%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.3642%" y="325" width="0.0799%" height="15" fill="rgb(211,108,15)" fg:x="1219" fg:w="1"/><text x="97.6142%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3642%" y="309" width="0.0799%" height="15" fill="rgb(249,62,9)" fg:x="1219" fg:w="1"/><text x="97.6142%" y="319.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (12 samples, 0.96%)</title><rect x="96.5655%" y="549" width="0.9585%" height="15" fill="rgb(233,26,54)" fg:x="1209" fg:w="12"/><text x="96.8155%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.88%)</title><rect x="96.6454%" y="533" width="0.8786%" height="15" fill="rgb(210,175,26)" fg:x="1210" fg:w="11"/><text x="96.8954%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="96.6454%" y="517" width="0.8786%" height="15" fill="rgb(210,43,33)" fg:x="1210" fg:w="11"/><text x="96.8954%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.88%)</title><rect x="96.6454%" y="501" width="0.8786%" height="15" fill="rgb(224,46,17)" fg:x="1210" fg:w="11"/><text x="96.8954%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.80%)</title><rect x="96.7252%" y="485" width="0.7987%" height="15" fill="rgb(254,24,38)" fg:x="1211" fg:w="10"/><text x="96.9752%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="96.8051%" y="469" width="0.7188%" height="15" fill="rgb(248,32,0)" fg:x="1212" fg:w="9"/><text x="97.0551%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.4441%" y="453" width="0.0799%" height="15" fill="rgb(224,37,41)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.4441%" y="437" width="0.0799%" height="15" fill="rgb(252,70,22)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.4441%" y="421" width="0.0799%" height="15" fill="rgb(241,123,50)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4441%" y="405" width="0.0799%" height="15" fill="rgb(246,138,33)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4441%" y="389" width="0.0799%" height="15" fill="rgb(218,39,32)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4441%" y="373" width="0.0799%" height="15" fill="rgb(241,229,10)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4441%" y="357" width="0.0799%" height="15" fill="rgb(212,160,10)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.4441%" y="341" width="0.0799%" height="15" fill="rgb(227,48,51)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4441%" y="325" width="0.0799%" height="15" fill="rgb(238,159,21)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4441%" y="309" width="0.0799%" height="15" fill="rgb(216,1,10)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4441%" y="293" width="0.0799%" height="15" fill="rgb(209,228,25)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4441%" y="277" width="0.0799%" height="15" fill="rgb(234,160,10)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4441%" y="261" width="0.0799%" height="15" fill="rgb(212,66,25)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.4441%" y="245" width="0.0799%" height="15" fill="rgb(254,121,18)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.4441%" y="229" width="0.0799%" height="15" fill="rgb(219,127,1)" fg:x="1220" fg:w="1"/><text x="97.6941%" y="239.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (15 samples, 1.20%)</title><rect x="96.4856%" y="565" width="1.1981%" height="15" fill="rgb(219,224,42)" fg:x="1208" fg:w="15"/><text x="96.7356%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="97.5240%" y="549" width="0.1597%" height="15" fill="rgb(253,130,22)" fg:x="1221" fg:w="2"/><text x="97.7740%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="97.5240%" y="533" width="0.1597%" height="15" fill="rgb(253,39,28)" fg:x="1221" fg:w="2"/><text x="97.7740%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="97.6038%" y="517" width="0.0799%" height="15" fill="rgb(231,126,37)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="97.6038%" y="501" width="0.0799%" height="15" fill="rgb(251,145,14)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="97.6038%" y="485" width="0.0799%" height="15" fill="rgb(229,164,30)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6038%" y="469" width="0.0799%" height="15" fill="rgb(233,227,54)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6038%" y="453" width="0.0799%" height="15" fill="rgb(240,94,22)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6038%" y="437" width="0.0799%" height="15" fill="rgb(217,56,16)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6038%" y="421" width="0.0799%" height="15" fill="rgb(229,133,38)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6038%" y="405" width="0.0799%" height="15" fill="rgb(225,139,35)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6038%" y="389" width="0.0799%" height="15" fill="rgb(223,100,16)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6038%" y="373" width="0.0799%" height="15" fill="rgb(207,43,50)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6038%" y="357" width="0.0799%" height="15" fill="rgb(237,221,9)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.6038%" y="341" width="0.0799%" height="15" fill="rgb(236,134,24)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.6038%" y="325" width="0.0799%" height="15" fill="rgb(222,173,4)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.6038%" y="309" width="0.0799%" height="15" fill="rgb(234,144,52)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.6038%" y="293" width="0.0799%" height="15" fill="rgb(223,41,7)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6038%" y="277" width="0.0799%" height="15" fill="rgb(226,143,9)" fg:x="1222" fg:w="1"/><text x="97.8538%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (1 samples, 0.08%)</title><rect x="97.7636%" y="437" width="0.0799%" height="15" fill="rgb(234,43,37)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="447.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="97.7636%" y="421" width="0.0799%" height="15" fill="rgb(224,188,11)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="431.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7636%" y="405" width="0.0799%" height="15" fill="rgb(233,113,28)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7636%" y="389" width="0.0799%" height="15" fill="rgb(215,16,1)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7636%" y="373" width="0.0799%" height="15" fill="rgb(238,74,38)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.7636%" y="357" width="0.0799%" height="15" fill="rgb(221,66,35)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.7636%" y="341" width="0.0799%" height="15" fill="rgb(251,225,2)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.7636%" y="325" width="0.0799%" height="15" fill="rgb(240,169,18)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.7636%" y="309" width="0.0799%" height="15" fill="rgb(243,130,50)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.7636%" y="293" width="0.0799%" height="15" fill="rgb(228,75,13)" fg:x="1224" fg:w="1"/><text x="98.0136%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (18 samples, 1.44%)</title><rect x="96.4856%" y="629" width="1.4377%" height="15" fill="rgb(252,95,35)" fg:x="1208" fg:w="18"/><text x="96.7356%" y="639.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (18 samples, 1.44%)</title><rect x="96.4856%" y="613" width="1.4377%" height="15" fill="rgb(222,180,54)" fg:x="1208" fg:w="18"/><text x="96.7356%" y="623.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (18 samples, 1.44%)</title><rect x="96.4856%" y="597" width="1.4377%" height="15" fill="rgb(250,110,34)" fg:x="1208" fg:w="18"/><text x="96.7356%" y="607.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (18 samples, 1.44%)</title><rect x="96.4856%" y="581" width="1.4377%" height="15" fill="rgb(208,100,21)" fg:x="1208" fg:w="18"/><text x="96.7356%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="97.6837%" y="565" width="0.2396%" height="15" fill="rgb(209,123,47)" fg:x="1223" fg:w="3"/><text x="97.9337%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="97.6837%" y="549" width="0.2396%" height="15" fill="rgb(237,147,9)" fg:x="1223" fg:w="3"/><text x="97.9337%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="97.7636%" y="533" width="0.1597%" height="15" fill="rgb(228,206,23)" fg:x="1224" fg:w="2"/><text x="98.0136%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="97.7636%" y="517" width="0.1597%" height="15" fill="rgb(217,174,46)" fg:x="1224" fg:w="2"/><text x="98.0136%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="97.7636%" y="501" width="0.1597%" height="15" fill="rgb(231,126,21)" fg:x="1224" fg:w="2"/><text x="98.0136%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="97.7636%" y="485" width="0.1597%" height="15" fill="rgb(245,26,1)" fg:x="1224" fg:w="2"/><text x="98.0136%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.16%)</title><rect x="97.7636%" y="469" width="0.1597%" height="15" fill="rgb(224,138,39)" fg:x="1224" fg:w="2"/><text x="98.0136%" y="479.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="97.7636%" y="453" width="0.1597%" height="15" fill="rgb(208,97,3)" fg:x="1224" fg:w="2"/><text x="98.0136%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="97.8435%" y="437" width="0.0799%" height="15" fill="rgb(222,77,29)" fg:x="1225" fg:w="1"/><text x="98.0935%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.0831%" y="597" width="0.0799%" height="15" fill="rgb(243,188,36)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0831%" y="581" width="0.0799%" height="15" fill="rgb(218,214,3)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.0831%" y="565" width="0.0799%" height="15" fill="rgb(211,183,45)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.0831%" y="549" width="0.0799%" height="15" fill="rgb(230,218,25)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.0831%" y="533" width="0.0799%" height="15" fill="rgb(233,86,6)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.0831%" y="517" width="0.0799%" height="15" fill="rgb(220,59,24)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0831%" y="501" width="0.0799%" height="15" fill="rgb(227,60,1)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.0831%" y="485" width="0.0799%" height="15" fill="rgb(216,212,54)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.0831%" y="469" width="0.0799%" height="15" fill="rgb(227,81,54)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.0831%" y="453" width="0.0799%" height="15" fill="rgb(206,204,43)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.0831%" y="437" width="0.0799%" height="15" fill="rgb(219,29,26)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.0831%" y="421" width="0.0799%" height="15" fill="rgb(252,40,36)" fg:x="1228" fg:w="1"/><text x="98.3331%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.3227%" y="549" width="0.0799%" height="15" fill="rgb(224,205,39)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.3227%" y="533" width="0.0799%" height="15" fill="rgb(222,13,21)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3227%" y="517" width="0.0799%" height="15" fill="rgb(243,139,6)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3227%" y="501" width="0.0799%" height="15" fill="rgb(237,101,11)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3227%" y="485" width="0.0799%" height="15" fill="rgb(254,49,28)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3227%" y="469" width="0.0799%" height="15" fill="rgb(223,41,21)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3227%" y="453" width="0.0799%" height="15" fill="rgb(225,103,29)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.3227%" y="437" width="0.0799%" height="15" fill="rgb(244,82,43)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3227%" y="421" width="0.0799%" height="15" fill="rgb(217,39,3)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="98.3227%" y="405" width="0.0799%" height="15" fill="rgb(239,128,25)" fg:x="1231" fg:w="1"/><text x="98.5727%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4026%" y="533" width="0.0799%" height="15" fill="rgb(210,192,37)" fg:x="1232" fg:w="1"/><text x="98.6526%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="98.3227%" y="581" width="0.2396%" height="15" fill="rgb(219,98,18)" fg:x="1231" fg:w="3"/><text x="98.5727%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="98.3227%" y="565" width="0.2396%" height="15" fill="rgb(224,228,38)" fg:x="1231" fg:w="3"/><text x="98.5727%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.4026%" y="549" width="0.1597%" height="15" fill="rgb(241,129,43)" fg:x="1232" fg:w="2"/><text x="98.6526%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.4824%" y="533" width="0.0799%" height="15" fill="rgb(223,8,51)" fg:x="1233" fg:w="1"/><text x="98.7324%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.4824%" y="517" width="0.0799%" height="15" fill="rgb(233,76,24)" fg:x="1233" fg:w="1"/><text x="98.7324%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5623%" y="517" width="0.0799%" height="15" fill="rgb(219,115,10)" fg:x="1234" fg:w="1"/><text x="98.8123%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6422%" y="421" width="0.0799%" height="15" fill="rgb(222,137,12)" fg:x="1235" fg:w="1"/><text x="98.8922%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6422%" y="405" width="0.0799%" height="15" fill="rgb(216,192,16)" fg:x="1235" fg:w="1"/><text x="98.8922%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6422%" y="389" width="0.0799%" height="15" fill="rgb(247,6,27)" fg:x="1235" fg:w="1"/><text x="98.8922%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7220%" y="357" width="0.0799%" height="15" fill="rgb(254,39,44)" fg:x="1236" fg:w="1"/><text x="98.9720%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7220%" y="341" width="0.0799%" height="15" fill="rgb(251,116,35)" fg:x="1236" fg:w="1"/><text x="98.9720%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7220%" y="325" width="0.0799%" height="15" fill="rgb(208,61,44)" fg:x="1236" fg:w="1"/><text x="98.9720%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7220%" y="405" width="0.1597%" height="15" fill="rgb(250,34,5)" fg:x="1236" fg:w="2"/><text x="98.9720%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.7220%" y="389" width="0.1597%" height="15" fill="rgb(241,40,15)" fg:x="1236" fg:w="2"/><text x="98.9720%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.7220%" y="373" width="0.1597%" height="15" fill="rgb(229,182,2)" fg:x="1236" fg:w="2"/><text x="98.9720%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8019%" y="357" width="0.0799%" height="15" fill="rgb(244,148,52)" fg:x="1237" fg:w="1"/><text x="99.0519%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8019%" y="341" width="0.0799%" height="15" fill="rgb(225,211,4)" fg:x="1237" fg:w="1"/><text x="99.0519%" y="351.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="98.5623%" y="565" width="0.3994%" height="15" fill="rgb(208,222,47)" fg:x="1234" fg:w="5"/><text x="98.8123%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.5623%" y="549" width="0.3994%" height="15" fill="rgb(233,162,0)" fg:x="1234" fg:w="5"/><text x="98.8123%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="98.5623%" y="533" width="0.3994%" height="15" fill="rgb(241,54,13)" fg:x="1234" fg:w="5"/><text x="98.8123%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.6422%" y="517" width="0.3195%" height="15" fill="rgb(213,89,18)" fg:x="1235" fg:w="4"/><text x="98.8922%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.6422%" y="501" width="0.3195%" height="15" fill="rgb(215,170,37)" fg:x="1235" fg:w="4"/><text x="98.8922%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.6422%" y="485" width="0.3195%" height="15" fill="rgb(216,133,15)" fg:x="1235" fg:w="4"/><text x="98.8922%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.6422%" y="469" width="0.3195%" height="15" fill="rgb(230,42,19)" fg:x="1235" fg:w="4"/><text x="98.8922%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.6422%" y="453" width="0.3195%" height="15" fill="rgb(221,103,41)" fg:x="1235" fg:w="4"/><text x="98.8922%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.6422%" y="437" width="0.3195%" height="15" fill="rgb(220,142,31)" fg:x="1235" fg:w="4"/><text x="98.8922%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.7220%" y="421" width="0.2396%" height="15" fill="rgb(239,218,4)" fg:x="1236" fg:w="3"/><text x="98.9720%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8818%" y="405" width="0.0799%" height="15" fill="rgb(232,16,4)" fg:x="1238" fg:w="1"/><text x="99.1318%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9617%" y="453" width="0.0799%" height="15" fill="rgb(226,213,25)" fg:x="1239" fg:w="1"/><text x="99.2117%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.9617%" y="485" width="0.1597%" height="15" fill="rgb(235,135,19)" fg:x="1239" fg:w="2"/><text x="99.2117%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.9617%" y="469" width="0.1597%" height="15" fill="rgb(240,107,29)" fg:x="1239" fg:w="2"/><text x="99.2117%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.0415%" y="453" width="0.0799%" height="15" fill="rgb(206,164,44)" fg:x="1240" fg:w="1"/><text x="99.2915%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0415%" y="437" width="0.0799%" height="15" fill="rgb(210,23,48)" fg:x="1240" fg:w="1"/><text x="99.2915%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0415%" y="421" width="0.0799%" height="15" fill="rgb(212,138,25)" fg:x="1240" fg:w="1"/><text x="99.2915%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0415%" y="405" width="0.0799%" height="15" fill="rgb(224,152,3)" fg:x="1240" fg:w="1"/><text x="99.2915%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0415%" y="389" width="0.0799%" height="15" fill="rgb(214,38,23)" fg:x="1240" fg:w="1"/><text x="99.2915%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2013%" y="453" width="0.0799%" height="15" fill="rgb(215,161,10)" fg:x="1242" fg:w="1"/><text x="99.4513%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.2013%" y="437" width="0.0799%" height="15" fill="rgb(240,185,7)" fg:x="1242" fg:w="1"/><text x="99.4513%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.2013%" y="421" width="0.0799%" height="15" fill="rgb(244,104,25)" fg:x="1242" fg:w="1"/><text x="99.4513%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.2812%" y="437" width="0.0799%" height="15" fill="rgb(242,140,44)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.2812%" y="421" width="0.0799%" height="15" fill="rgb(245,30,19)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2812%" y="405" width="0.0799%" height="15" fill="rgb(219,208,35)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2812%" y="389" width="0.0799%" height="15" fill="rgb(235,200,7)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2812%" y="373" width="0.0799%" height="15" fill="rgb(220,193,10)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="383.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="99.2812%" y="357" width="0.0799%" height="15" fill="rgb(212,216,39)" fg:x="1243" fg:w="1"/><text x="99.5312%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="98.9617%" y="533" width="0.4792%" height="15" fill="rgb(212,134,19)" fg:x="1239" fg:w="6"/><text x="99.2117%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="98.9617%" y="517" width="0.4792%" height="15" fill="rgb(230,57,24)" fg:x="1239" fg:w="6"/><text x="99.2117%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="98.9617%" y="501" width="0.4792%" height="15" fill="rgb(238,209,37)" fg:x="1239" fg:w="6"/><text x="99.2117%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.1214%" y="485" width="0.3195%" height="15" fill="rgb(247,11,45)" fg:x="1241" fg:w="4"/><text x="99.3714%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.2013%" y="469" width="0.2396%" height="15" fill="rgb(222,126,6)" fg:x="1242" fg:w="3"/><text x="99.4513%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.2812%" y="453" width="0.1597%" height="15" fill="rgb(245,77,24)" fg:x="1243" fg:w="2"/><text x="99.5312%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3610%" y="437" width="0.0799%" height="15" fill="rgb(227,14,24)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3610%" y="421" width="0.0799%" height="15" fill="rgb(211,112,42)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.3610%" y="405" width="0.0799%" height="15" fill="rgb(230,103,42)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3610%" y="389" width="0.0799%" height="15" fill="rgb(228,125,42)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3610%" y="373" width="0.0799%" height="15" fill="rgb(243,33,6)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.3610%" y="357" width="0.0799%" height="15" fill="rgb(231,2,40)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3610%" y="341" width="0.0799%" height="15" fill="rgb(224,200,53)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3610%" y="325" width="0.0799%" height="15" fill="rgb(215,116,36)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.3610%" y="309" width="0.0799%" height="15" fill="rgb(240,23,51)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3610%" y="293" width="0.0799%" height="15" fill="rgb(221,72,5)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3610%" y="277" width="0.0799%" height="15" fill="rgb(245,142,9)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.3610%" y="261" width="0.0799%" height="15" fill="rgb(207,34,16)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.3610%" y="245" width="0.0799%" height="15" fill="rgb(252,101,12)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.3610%" y="229" width="0.0799%" height="15" fill="rgb(239,89,37)" fg:x="1244" fg:w="1"/><text x="99.6110%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.5208%" y="501" width="0.0799%" height="15" fill="rgb(252,227,37)" fg:x="1246" fg:w="1"/><text x="99.7708%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.12%)</title><rect x="98.5623%" y="581" width="1.1182%" height="15" fill="rgb(212,164,17)" fg:x="1234" fg:w="14"/><text x="98.8123%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="98.9617%" y="565" width="0.7188%" height="15" fill="rgb(240,86,13)" fg:x="1239" fg:w="9"/><text x="99.2117%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="98.9617%" y="549" width="0.7188%" height="15" fill="rgb(233,183,32)" fg:x="1239" fg:w="9"/><text x="99.2117%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.4409%" y="533" width="0.2396%" height="15" fill="rgb(205,201,38)" fg:x="1245" fg:w="3"/><text x="99.6909%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.4409%" y="517" width="0.2396%" height="15" fill="rgb(210,122,38)" fg:x="1245" fg:w="3"/><text x="99.6909%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="99.6006%" y="501" width="0.0799%" height="15" fill="rgb(241,174,26)" fg:x="1247" fg:w="1"/><text x="99.8506%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.6006%" y="485" width="0.0799%" height="15" fill="rgb(219,89,7)" fg:x="1247" fg:w="1"/><text x="99.8506%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (24 samples, 1.92%)</title><rect x="97.9233%" y="629" width="1.9169%" height="15" fill="rgb(246,9,24)" fg:x="1226" fg:w="24"/><text x="98.1733%" y="639.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (23 samples, 1.84%)</title><rect x="98.0032%" y="613" width="1.8371%" height="15" fill="rgb(205,132,21)" fg:x="1227" fg:w="23"/><text x="98.2532%" y="623.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.68%)</title><rect x="98.1629%" y="597" width="1.6773%" height="15" fill="rgb(210,11,17)" fg:x="1229" fg:w="21"/><text x="98.4129%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.6805%" y="581" width="0.1597%" height="15" fill="rgb(226,138,14)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.6805%" y="565" width="0.1597%" height="15" fill="rgb(224,108,44)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.6805%" y="549" width="0.1597%" height="15" fill="rgb(247,114,36)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6805%" y="533" width="0.1597%" height="15" fill="rgb(231,183,14)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6805%" y="517" width="0.1597%" height="15" fill="rgb(218,168,4)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6805%" y="501" width="0.1597%" height="15" fill="rgb(210,8,3)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.6805%" y="485" width="0.1597%" height="15" fill="rgb(216,165,0)" fg:x="1248" fg:w="2"/><text x="99.9305%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="99.8403%" y="629" width="0.0799%" height="15" fill="rgb(245,120,5)" fg:x="1250" fg:w="1"/><text x="100.0903%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.8403%" y="613" width="0.0799%" height="15" fill="rgb(249,121,32)" fg:x="1250" fg:w="1"/><text x="100.0903%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.8403%" y="597" width="0.0799%" height="15" fill="rgb(211,55,33)" fg:x="1250" fg:w="1"/><text x="100.0903%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.8403%" y="581" width="0.0799%" height="15" fill="rgb(254,46,35)" fg:x="1250" fg:w="1"/><text x="100.0903%" y="591.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.8403%" y="565" width="0.0799%" height="15" fill="rgb(213,213,19)" fg:x="1250" fg:w="1"/><text x="100.0903%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8403%" y="549" width="0.0799%" height="15" fill="rgb(207,152,44)" fg:x="1250" fg:w="1"/><text x="100.0903%" y="559.50"></text></g><g><title>all (1,252 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(227,195,36)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="1023.50"></text></g><g><title>simple-c4c21c4a (1,252 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(210,137,36)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="1007.50">simple-c4c21c4a</text></g><g><title>_start (1,252 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(253,47,47)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="991.50">_start</text></g><g><title>__libc_start_main (1,252 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(230,147,18)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="975.50">__libc_start_main</text></g><g><title>main (1,252 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(247,33,49)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start_internal (1,252 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(239,26,29)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,252 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(245,145,52)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,252 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(224,139,32)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,252 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(238,202,19)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,252 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(249,211,53)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,252 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(237,229,33)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,252 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(208,97,40)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,252 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(254,36,16)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,252 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(221,7,12)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,252 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(205,11,12)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,252 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(227,72,28)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,252 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(228,7,34)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="767.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,252 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(230,52,42)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="751.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,252 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(219,177,53)" fg:x="0" fg:w="1252"/><text x="0.2500%" y="735.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (371 samples, 29.63%)</title><rect x="70.3674%" y="709" width="29.6326%" height="15" fill="rgb(243,196,34)" fg:x="881" fg:w="371"/><text x="70.6174%" y="719.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterio..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (371 samples, 29.63%)</title><rect x="70.3674%" y="693" width="29.6326%" height="15" fill="rgb(213,66,49)" fg:x="881" fg:w="371"/><text x="70.6174%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (370 samples, 29.55%)</title><rect x="70.4473%" y="677" width="29.5527%" height="15" fill="rgb(233,11,50)" fg:x="882" fg:w="370"/><text x="70.6973%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (44 samples, 3.51%)</title><rect x="96.4856%" y="661" width="3.5144%" height="15" fill="rgb(235,190,6)" fg:x="1208" fg:w="44"/><text x="96.7356%" y="671.50">eng..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (44 samples, 3.51%)</title><rect x="96.4856%" y="645" width="3.5144%" height="15" fill="rgb(212,64,44)" fg:x="1208" fg:w="44"/><text x="96.7356%" y="655.50">eng..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9201%" y="629" width="0.0799%" height="15" fill="rgb(206,95,44)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.9201%" y="613" width="0.0799%" height="15" fill="rgb(227,136,25)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9201%" y="597" width="0.0799%" height="15" fill="rgb(206,178,17)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9201%" y="581" width="0.0799%" height="15" fill="rgb(208,168,35)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="591.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.9201%" y="565" width="0.0799%" height="15" fill="rgb(213,210,40)" fg:x="1251" fg:w="1"/><text x="100.1701%" y="575.50"></text></g></svg></svg>