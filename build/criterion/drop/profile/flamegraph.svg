<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1238" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1221.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1221.00"> </text><svg id="frames" x="10" width="1180" total_samples="1221"><g><title>&lt;engine::session::Session as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1638%" y="821" width="0.0819%" height="15" fill="rgb(225,129,33)" fg:x="2" fg:w="1"/><text x="0.4138%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.2457%" y="821" width="0.1638%" height="15" fill="rgb(237,49,13)" fg:x="3" fg:w="2"/><text x="0.4957%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.2457%" y="805" width="0.1638%" height="15" fill="rgb(211,3,31)" fg:x="3" fg:w="2"/><text x="0.4957%" y="815.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4095%" y="789" width="0.1638%" height="15" fill="rgb(216,152,19)" fg:x="5" fg:w="2"/><text x="0.6595%" y="799.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7371%" y="709" width="0.0819%" height="15" fill="rgb(251,121,35)" fg:x="9" fg:w="1"/><text x="0.9871%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7371%" y="693" width="0.0819%" height="15" fill="rgb(210,217,47)" fg:x="9" fg:w="1"/><text x="0.9871%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8190%" y="693" width="0.0819%" height="15" fill="rgb(244,116,22)" fg:x="10" fg:w="1"/><text x="1.0690%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.41%)</title><rect x="0.5733%" y="757" width="0.4095%" height="15" fill="rgb(228,17,21)" fg:x="7" fg:w="5"/><text x="0.8233%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="0.7371%" y="741" width="0.2457%" height="15" fill="rgb(240,149,34)" fg:x="9" fg:w="3"/><text x="0.9871%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="0.7371%" y="725" width="0.2457%" height="15" fill="rgb(208,125,47)" fg:x="9" fg:w="3"/><text x="0.9871%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.8190%" y="709" width="0.1638%" height="15" fill="rgb(249,186,39)" fg:x="10" fg:w="2"/><text x="1.0690%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.9009%" y="693" width="0.0819%" height="15" fill="rgb(240,220,33)" fg:x="11" fg:w="1"/><text x="1.1509%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="0.5733%" y="773" width="0.4914%" height="15" fill="rgb(243,110,23)" fg:x="7" fg:w="6"/><text x="0.8233%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9828%" y="757" width="0.0819%" height="15" fill="rgb(219,163,46)" fg:x="12" fg:w="1"/><text x="1.2328%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.98%)</title><rect x="0.1638%" y="837" width="0.9828%" height="15" fill="rgb(216,126,30)" fg:x="2" fg:w="12"/><text x="0.4138%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (9 samples, 0.74%)</title><rect x="0.4095%" y="821" width="0.7371%" height="15" fill="rgb(208,139,11)" fg:x="5" fg:w="9"/><text x="0.6595%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.74%)</title><rect x="0.4095%" y="805" width="0.7371%" height="15" fill="rgb(213,118,36)" fg:x="5" fg:w="9"/><text x="0.6595%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (7 samples, 0.57%)</title><rect x="0.5733%" y="789" width="0.5733%" height="15" fill="rgb(226,43,17)" fg:x="7" fg:w="7"/><text x="0.8233%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0647%" y="773" width="0.0819%" height="15" fill="rgb(254,217,4)" fg:x="13" fg:w="1"/><text x="1.3147%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="1.1466%" y="821" width="0.0819%" height="15" fill="rgb(210,134,47)" fg:x="14" fg:w="1"/><text x="1.3966%" y="831.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="1.3104%" y="773" width="0.1638%" height="15" fill="rgb(237,24,49)" fg:x="16" fg:w="2"/><text x="1.5604%" y="783.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="1.4742%" y="773" width="0.0819%" height="15" fill="rgb(251,39,46)" fg:x="18" fg:w="1"/><text x="1.7242%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.4742%" y="757" width="0.0819%" height="15" fill="rgb(251,220,3)" fg:x="18" fg:w="1"/><text x="1.7242%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.4742%" y="741" width="0.0819%" height="15" fill="rgb(228,105,12)" fg:x="18" fg:w="1"/><text x="1.7242%" y="751.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.6380%" y="645" width="0.0819%" height="15" fill="rgb(215,196,1)" fg:x="20" fg:w="1"/><text x="1.8880%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6380%" y="629" width="0.0819%" height="15" fill="rgb(214,33,39)" fg:x="20" fg:w="1"/><text x="1.8880%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="1.6380%" y="613" width="0.0819%" height="15" fill="rgb(220,19,52)" fg:x="20" fg:w="1"/><text x="1.8880%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="1.6380%" y="693" width="0.1638%" height="15" fill="rgb(221,78,38)" fg:x="20" fg:w="2"/><text x="1.8880%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.6380%" y="677" width="0.1638%" height="15" fill="rgb(253,30,16)" fg:x="20" fg:w="2"/><text x="1.8880%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="1.6380%" y="661" width="0.1638%" height="15" fill="rgb(242,65,0)" fg:x="20" fg:w="2"/><text x="1.8880%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.7199%" y="645" width="0.0819%" height="15" fill="rgb(235,201,12)" fg:x="21" fg:w="1"/><text x="1.9699%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.7199%" y="629" width="0.0819%" height="15" fill="rgb(233,161,9)" fg:x="21" fg:w="1"/><text x="1.9699%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.7199%" y="613" width="0.0819%" height="15" fill="rgb(241,207,41)" fg:x="21" fg:w="1"/><text x="1.9699%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.7199%" y="597" width="0.0819%" height="15" fill="rgb(212,69,46)" fg:x="21" fg:w="1"/><text x="1.9699%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.33%)</title><rect x="1.5561%" y="757" width="0.3276%" height="15" fill="rgb(239,69,45)" fg:x="19" fg:w="4"/><text x="1.8061%" y="767.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.33%)</title><rect x="1.5561%" y="741" width="0.3276%" height="15" fill="rgb(242,117,48)" fg:x="19" fg:w="4"/><text x="1.8061%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="1.5561%" y="725" width="0.3276%" height="15" fill="rgb(228,41,36)" fg:x="19" fg:w="4"/><text x="1.8061%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="1.5561%" y="709" width="0.3276%" height="15" fill="rgb(212,3,32)" fg:x="19" fg:w="4"/><text x="1.8061%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.8018%" y="693" width="0.0819%" height="15" fill="rgb(233,41,49)" fg:x="22" fg:w="1"/><text x="2.0518%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.8018%" y="677" width="0.0819%" height="15" fill="rgb(252,170,49)" fg:x="22" fg:w="1"/><text x="2.0518%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="1.8018%" y="661" width="0.0819%" height="15" fill="rgb(229,53,26)" fg:x="22" fg:w="1"/><text x="2.0518%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="1.8018%" y="645" width="0.0819%" height="15" fill="rgb(217,157,12)" fg:x="22" fg:w="1"/><text x="2.0518%" y="655.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="1.8018%" y="629" width="0.0819%" height="15" fill="rgb(227,17,9)" fg:x="22" fg:w="1"/><text x="2.0518%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.9656%" y="709" width="0.0819%" height="15" fill="rgb(218,84,12)" fg:x="24" fg:w="1"/><text x="2.2156%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.9656%" y="693" width="0.0819%" height="15" fill="rgb(212,79,24)" fg:x="24" fg:w="1"/><text x="2.2156%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.0475%" y="709" width="0.0819%" height="15" fill="rgb(217,222,37)" fg:x="25" fg:w="1"/><text x="2.2975%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.2932%" y="677" width="0.0819%" height="15" fill="rgb(246,208,8)" fg:x="28" fg:w="1"/><text x="2.5432%" y="687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="2.2932%" y="661" width="0.0819%" height="15" fill="rgb(244,133,10)" fg:x="28" fg:w="1"/><text x="2.5432%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (15 samples, 1.23%)</title><rect x="1.2285%" y="805" width="1.2285%" height="15" fill="rgb(209,219,41)" fg:x="15" fg:w="15"/><text x="1.4785%" y="815.50"></text></g><g><title>engine::internal::Entities::prepare_entity (15 samples, 1.23%)</title><rect x="1.2285%" y="789" width="1.2285%" height="15" fill="rgb(253,175,45)" fg:x="15" fg:w="15"/><text x="1.4785%" y="799.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.90%)</title><rect x="1.5561%" y="773" width="0.9009%" height="15" fill="rgb(235,100,37)" fg:x="19" fg:w="11"/><text x="1.8061%" y="783.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="1.8837%" y="757" width="0.5733%" height="15" fill="rgb(225,87,19)" fg:x="23" fg:w="7"/><text x="2.1337%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="1.9656%" y="741" width="0.4914%" height="15" fill="rgb(217,152,17)" fg:x="24" fg:w="6"/><text x="2.2156%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="1.9656%" y="725" width="0.4914%" height="15" fill="rgb(235,72,13)" fg:x="24" fg:w="6"/><text x="2.2156%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="2.1294%" y="709" width="0.3276%" height="15" fill="rgb(233,140,18)" fg:x="26" fg:w="4"/><text x="2.3794%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="2.2113%" y="693" width="0.2457%" height="15" fill="rgb(207,212,28)" fg:x="27" fg:w="3"/><text x="2.4613%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.3751%" y="677" width="0.0819%" height="15" fill="rgb(220,130,25)" fg:x="29" fg:w="1"/><text x="2.6251%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.3751%" y="661" width="0.0819%" height="15" fill="rgb(205,55,34)" fg:x="29" fg:w="1"/><text x="2.6251%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.3751%" y="645" width="0.0819%" height="15" fill="rgb(237,54,35)" fg:x="29" fg:w="1"/><text x="2.6251%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.3751%" y="629" width="0.0819%" height="15" fill="rgb(208,67,23)" fg:x="29" fg:w="1"/><text x="2.6251%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.3751%" y="613" width="0.0819%" height="15" fill="rgb(206,207,50)" fg:x="29" fg:w="1"/><text x="2.6251%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.3751%" y="597" width="0.0819%" height="15" fill="rgb(213,211,42)" fg:x="29" fg:w="1"/><text x="2.6251%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="2.3751%" y="581" width="0.0819%" height="15" fill="rgb(252,197,50)" fg:x="29" fg:w="1"/><text x="2.6251%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.4570%" y="805" width="0.0819%" height="15" fill="rgb(251,211,41)" fg:x="30" fg:w="1"/><text x="2.7070%" y="815.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="2.5389%" y="805" width="0.0819%" height="15" fill="rgb(229,211,5)" fg:x="31" fg:w="1"/><text x="2.7889%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="2.5389%" y="789" width="0.0819%" height="15" fill="rgb(239,36,31)" fg:x="31" fg:w="1"/><text x="2.7889%" y="799.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="2.5389%" y="773" width="0.0819%" height="15" fill="rgb(248,67,31)" fg:x="31" fg:w="1"/><text x="2.7889%" y="783.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="2.6208%" y="757" width="0.0819%" height="15" fill="rgb(249,55,44)" fg:x="32" fg:w="1"/><text x="2.8708%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.6208%" y="741" width="0.0819%" height="15" fill="rgb(216,82,12)" fg:x="32" fg:w="1"/><text x="2.8708%" y="751.50"></text></g><g><title>libloading::library_filename (2 samples, 0.16%)</title><rect x="2.7027%" y="757" width="0.1638%" height="15" fill="rgb(242,174,1)" fg:x="33" fg:w="2"/><text x="2.9527%" y="767.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (2 samples, 0.16%)</title><rect x="2.8665%" y="741" width="0.1638%" height="15" fill="rgb(208,120,29)" fg:x="35" fg:w="2"/><text x="3.1165%" y="751.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (2 samples, 0.16%)</title><rect x="2.8665%" y="725" width="0.1638%" height="15" fill="rgb(221,105,43)" fg:x="35" fg:w="2"/><text x="3.1165%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="2.8665%" y="709" width="0.1638%" height="15" fill="rgb(234,124,22)" fg:x="35" fg:w="2"/><text x="3.1165%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (2 samples, 0.16%)</title><rect x="2.8665%" y="693" width="0.1638%" height="15" fill="rgb(212,23,30)" fg:x="35" fg:w="2"/><text x="3.1165%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (2 samples, 0.16%)</title><rect x="2.8665%" y="677" width="0.1638%" height="15" fill="rgb(219,122,53)" fg:x="35" fg:w="2"/><text x="3.1165%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="2.8665%" y="661" width="0.1638%" height="15" fill="rgb(248,84,24)" fg:x="35" fg:w="2"/><text x="3.1165%" y="671.50"></text></g><g><title>dlerror (5 samples, 0.41%)</title><rect x="3.0303%" y="741" width="0.4095%" height="15" fill="rgb(245,115,18)" fg:x="37" fg:w="5"/><text x="3.2803%" y="751.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="3.2760%" y="725" width="0.1638%" height="15" fill="rgb(227,176,51)" fg:x="40" fg:w="2"/><text x="3.5260%" y="735.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.3579%" y="709" width="0.0819%" height="15" fill="rgb(229,63,42)" fg:x="41" fg:w="1"/><text x="3.6079%" y="719.50"></text></g><g><title>dlopen (19 samples, 1.56%)</title><rect x="3.4398%" y="741" width="1.5561%" height="15" fill="rgb(247,202,24)" fg:x="42" fg:w="19"/><text x="3.6898%" y="751.50"></text></g><g><title>_dl_catch_error (18 samples, 1.47%)</title><rect x="3.5217%" y="725" width="1.4742%" height="15" fill="rgb(244,173,20)" fg:x="43" fg:w="18"/><text x="3.7717%" y="735.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.47%)</title><rect x="3.5217%" y="709" width="1.4742%" height="15" fill="rgb(242,81,47)" fg:x="43" fg:w="18"/><text x="3.7717%" y="719.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.47%)</title><rect x="3.5217%" y="693" width="1.4742%" height="15" fill="rgb(231,185,54)" fg:x="43" fg:w="18"/><text x="3.7717%" y="703.50"></text></g><g><title>_dl_catch_exception (18 samples, 1.47%)</title><rect x="3.5217%" y="677" width="1.4742%" height="15" fill="rgb(243,55,32)" fg:x="43" fg:w="18"/><text x="3.7717%" y="687.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="4.9140%" y="661" width="0.0819%" height="15" fill="rgb(208,167,19)" fg:x="60" fg:w="1"/><text x="5.1640%" y="671.50"></text></g><g><title>libloading::os::unix::Library::open (28 samples, 2.29%)</title><rect x="2.8665%" y="757" width="2.2932%" height="15" fill="rgb(231,72,35)" fg:x="35" fg:w="28"/><text x="3.1165%" y="767.50">l..</text></g><g><title>libloading::util::cstr_cow_from_bytes (2 samples, 0.16%)</title><rect x="4.9959%" y="741" width="0.1638%" height="15" fill="rgb(250,173,51)" fg:x="61" fg:w="2"/><text x="5.2459%" y="751.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.16%)</title><rect x="4.9959%" y="725" width="0.1638%" height="15" fill="rgb(209,5,22)" fg:x="61" fg:w="2"/><text x="5.2459%" y="735.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (2 samples, 0.16%)</title><rect x="4.9959%" y="709" width="0.1638%" height="15" fill="rgb(250,174,19)" fg:x="61" fg:w="2"/><text x="5.2459%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="4.9959%" y="693" width="0.1638%" height="15" fill="rgb(217,3,49)" fg:x="61" fg:w="2"/><text x="5.2459%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="4.9959%" y="677" width="0.1638%" height="15" fill="rgb(218,225,5)" fg:x="61" fg:w="2"/><text x="5.2459%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="4.9959%" y="661" width="0.1638%" height="15" fill="rgb(236,89,11)" fg:x="61" fg:w="2"/><text x="5.2459%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="4.9959%" y="645" width="0.1638%" height="15" fill="rgb(206,33,28)" fg:x="61" fg:w="2"/><text x="5.2459%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="4.9959%" y="629" width="0.1638%" height="15" fill="rgb(241,56,42)" fg:x="61" fg:w="2"/><text x="5.2459%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="4.9959%" y="613" width="0.1638%" height="15" fill="rgb(222,44,11)" fg:x="61" fg:w="2"/><text x="5.2459%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="4.9959%" y="597" width="0.1638%" height="15" fill="rgb(234,111,20)" fg:x="61" fg:w="2"/><text x="5.2459%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0778%" y="581" width="0.0819%" height="15" fill="rgb(237,77,6)" fg:x="62" fg:w="1"/><text x="5.3278%" y="591.50"></text></g><g><title>engine::session::Session::initialize (32 samples, 2.62%)</title><rect x="2.6208%" y="805" width="2.6208%" height="15" fill="rgb(235,111,23)" fg:x="32" fg:w="32"/><text x="2.8708%" y="815.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (32 samples, 2.62%)</title><rect x="2.6208%" y="789" width="2.6208%" height="15" fill="rgb(251,135,29)" fg:x="32" fg:w="32"/><text x="2.8708%" y="799.50">ke..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (32 samples, 2.62%)</title><rect x="2.6208%" y="773" width="2.6208%" height="15" fill="rgb(217,57,1)" fg:x="32" fg:w="32"/><text x="2.8708%" y="783.50">&lt;p..</text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="5.1597%" y="757" width="0.0819%" height="15" fill="rgb(249,119,31)" fg:x="63" fg:w="1"/><text x="5.4097%" y="767.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="5.2416%" y="805" width="0.0819%" height="15" fill="rgb(233,164,33)" fg:x="64" fg:w="1"/><text x="5.4916%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="5.2416%" y="789" width="0.0819%" height="15" fill="rgb(250,217,43)" fg:x="64" fg:w="1"/><text x="5.4916%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2416%" y="773" width="0.0819%" height="15" fill="rgb(232,154,50)" fg:x="64" fg:w="1"/><text x="5.4916%" y="783.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (52 samples, 4.26%)</title><rect x="1.1466%" y="837" width="4.2588%" height="15" fill="rgb(227,190,8)" fg:x="14" fg:w="52"/><text x="1.3966%" y="847.50">&lt;engi..</text></g><g><title>engine::session::Session::new (51 samples, 4.18%)</title><rect x="1.2285%" y="821" width="4.1769%" height="15" fill="rgb(209,217,32)" fg:x="15" fg:w="51"/><text x="1.4785%" y="831.50">engin..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.3235%" y="805" width="0.0819%" height="15" fill="rgb(243,203,50)" fg:x="65" fg:w="1"/><text x="5.5735%" y="815.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="5.3235%" y="789" width="0.0819%" height="15" fill="rgb(232,152,27)" fg:x="65" fg:w="1"/><text x="5.5735%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="5.4054%" y="821" width="0.0819%" height="15" fill="rgb(240,34,29)" fg:x="66" fg:w="1"/><text x="5.6554%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.4054%" y="805" width="0.0819%" height="15" fill="rgb(215,185,52)" fg:x="66" fg:w="1"/><text x="5.6554%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.4054%" y="789" width="0.0819%" height="15" fill="rgb(240,89,49)" fg:x="66" fg:w="1"/><text x="5.6554%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.4873%" y="789" width="0.0819%" height="15" fill="rgb(225,12,52)" fg:x="67" fg:w="1"/><text x="5.7373%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.4873%" y="773" width="0.0819%" height="15" fill="rgb(239,128,45)" fg:x="67" fg:w="1"/><text x="5.7373%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.4873%" y="757" width="0.0819%" height="15" fill="rgb(211,78,47)" fg:x="67" fg:w="1"/><text x="5.7373%" y="767.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.4873%" y="741" width="0.0819%" height="15" fill="rgb(232,31,21)" fg:x="67" fg:w="1"/><text x="5.7373%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="5.5692%" y="789" width="0.1638%" height="15" fill="rgb(222,168,14)" fg:x="68" fg:w="2"/><text x="5.8192%" y="799.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.7330%" y="789" width="0.0819%" height="15" fill="rgb(209,128,24)" fg:x="70" fg:w="1"/><text x="5.9830%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="5.7330%" y="773" width="0.0819%" height="15" fill="rgb(249,35,13)" fg:x="70" fg:w="1"/><text x="5.9830%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.7330%" y="757" width="0.0819%" height="15" fill="rgb(218,7,2)" fg:x="70" fg:w="1"/><text x="5.9830%" y="767.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="5.8149%" y="789" width="0.0819%" height="15" fill="rgb(238,107,27)" fg:x="71" fg:w="1"/><text x="6.0649%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="5.8149%" y="773" width="0.0819%" height="15" fill="rgb(217,88,38)" fg:x="71" fg:w="1"/><text x="6.0649%" y="783.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="5.8149%" y="757" width="0.0819%" height="15" fill="rgb(230,207,0)" fg:x="71" fg:w="1"/><text x="6.0649%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="5.8149%" y="741" width="0.0819%" height="15" fill="rgb(249,64,54)" fg:x="71" fg:w="1"/><text x="6.0649%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.8149%" y="725" width="0.0819%" height="15" fill="rgb(231,7,11)" fg:x="71" fg:w="1"/><text x="6.0649%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="5.9787%" y="725" width="0.4914%" height="15" fill="rgb(205,149,21)" fg:x="73" fg:w="6"/><text x="6.2287%" y="735.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="5.9787%" y="709" width="0.4914%" height="15" fill="rgb(215,126,34)" fg:x="73" fg:w="6"/><text x="6.2287%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="6.1425%" y="693" width="0.3276%" height="15" fill="rgb(241,132,45)" fg:x="75" fg:w="4"/><text x="6.3925%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.3882%" y="677" width="0.0819%" height="15" fill="rgb(252,69,32)" fg:x="78" fg:w="1"/><text x="6.6382%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="5.9787%" y="741" width="0.5733%" height="15" fill="rgb(232,204,19)" fg:x="73" fg:w="7"/><text x="6.2287%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.4701%" y="725" width="0.0819%" height="15" fill="rgb(249,15,47)" fg:x="79" fg:w="1"/><text x="6.7201%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.4701%" y="709" width="0.0819%" height="15" fill="rgb(209,227,23)" fg:x="79" fg:w="1"/><text x="6.7201%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.4701%" y="693" width="0.0819%" height="15" fill="rgb(248,92,24)" fg:x="79" fg:w="1"/><text x="6.7201%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.5520%" y="725" width="0.0819%" height="15" fill="rgb(247,59,2)" fg:x="80" fg:w="1"/><text x="6.8020%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.6339%" y="725" width="0.1638%" height="15" fill="rgb(221,30,5)" fg:x="81" fg:w="2"/><text x="6.8839%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.6339%" y="709" width="0.1638%" height="15" fill="rgb(208,108,53)" fg:x="81" fg:w="2"/><text x="6.8839%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.7158%" y="693" width="0.0819%" height="15" fill="rgb(211,183,26)" fg:x="82" fg:w="1"/><text x="6.9658%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.7158%" y="677" width="0.0819%" height="15" fill="rgb(232,132,4)" fg:x="82" fg:w="1"/><text x="6.9658%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.8796%" y="709" width="0.0819%" height="15" fill="rgb(253,128,37)" fg:x="84" fg:w="1"/><text x="7.1296%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.9615%" y="709" width="0.0819%" height="15" fill="rgb(221,58,24)" fg:x="85" fg:w="1"/><text x="7.2115%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.9615%" y="693" width="0.0819%" height="15" fill="rgb(230,54,45)" fg:x="85" fg:w="1"/><text x="7.2115%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.9615%" y="677" width="0.0819%" height="15" fill="rgb(254,21,18)" fg:x="85" fg:w="1"/><text x="7.2115%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.9615%" y="661" width="0.0819%" height="15" fill="rgb(221,108,0)" fg:x="85" fg:w="1"/><text x="7.2115%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.9615%" y="645" width="0.0819%" height="15" fill="rgb(206,95,1)" fg:x="85" fg:w="1"/><text x="7.2115%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9615%" y="629" width="0.0819%" height="15" fill="rgb(237,52,5)" fg:x="85" fg:w="1"/><text x="7.2115%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.9615%" y="613" width="0.0819%" height="15" fill="rgb(218,150,34)" fg:x="85" fg:w="1"/><text x="7.2115%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="7.0434%" y="709" width="0.4095%" height="15" fill="rgb(235,194,28)" fg:x="86" fg:w="5"/><text x="7.2934%" y="719.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="7.1253%" y="693" width="0.3276%" height="15" fill="rgb(245,92,18)" fg:x="87" fg:w="4"/><text x="7.3753%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="7.2072%" y="677" width="0.2457%" height="15" fill="rgb(253,203,53)" fg:x="88" fg:w="3"/><text x="7.4572%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3710%" y="661" width="0.0819%" height="15" fill="rgb(249,185,47)" fg:x="90" fg:w="1"/><text x="7.6210%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="7.6167%" y="693" width="0.4914%" height="15" fill="rgb(252,194,52)" fg:x="93" fg:w="6"/><text x="7.8667%" y="703.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="7.6986%" y="677" width="0.4095%" height="15" fill="rgb(210,53,36)" fg:x="94" fg:w="5"/><text x="7.9486%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.9443%" y="661" width="0.1638%" height="15" fill="rgb(237,37,25)" fg:x="97" fg:w="2"/><text x="8.1943%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.0262%" y="645" width="0.0819%" height="15" fill="rgb(242,116,27)" fg:x="98" fg:w="1"/><text x="8.2762%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="8.1081%" y="677" width="0.1638%" height="15" fill="rgb(213,185,26)" fg:x="99" fg:w="2"/><text x="8.3581%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.1081%" y="661" width="0.1638%" height="15" fill="rgb(225,204,8)" fg:x="99" fg:w="2"/><text x="8.3581%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.1900%" y="645" width="0.0819%" height="15" fill="rgb(254,111,37)" fg:x="100" fg:w="1"/><text x="8.4400%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="8.1081%" y="693" width="0.2457%" height="15" fill="rgb(242,35,9)" fg:x="99" fg:w="3"/><text x="8.3581%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.2719%" y="677" width="0.0819%" height="15" fill="rgb(232,138,49)" fg:x="101" fg:w="1"/><text x="8.5219%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.2719%" y="661" width="0.0819%" height="15" fill="rgb(247,56,4)" fg:x="101" fg:w="1"/><text x="8.5219%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.4357%" y="661" width="0.0819%" height="15" fill="rgb(226,179,17)" fg:x="103" fg:w="1"/><text x="8.6857%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.80%)</title><rect x="6.7977%" y="725" width="1.8018%" height="15" fill="rgb(216,163,45)" fg:x="83" fg:w="22"/><text x="7.0477%" y="735.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.15%)</title><rect x="7.4529%" y="709" width="1.1466%" height="15" fill="rgb(211,157,3)" fg:x="91" fg:w="14"/><text x="7.7029%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="8.3538%" y="693" width="0.2457%" height="15" fill="rgb(234,44,20)" fg:x="102" fg:w="3"/><text x="8.6038%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.4357%" y="677" width="0.1638%" height="15" fill="rgb(254,138,23)" fg:x="103" fg:w="2"/><text x="8.6857%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="8.5176%" y="661" width="0.0819%" height="15" fill="rgb(206,119,39)" fg:x="104" fg:w="1"/><text x="8.7676%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 3.03%)</title><rect x="5.9787%" y="757" width="3.0303%" height="15" fill="rgb(231,105,52)" fg:x="73" fg:w="37"/><text x="6.2287%" y="767.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.46%)</title><rect x="6.5520%" y="741" width="2.4570%" height="15" fill="rgb(250,20,5)" fg:x="80" fg:w="30"/><text x="6.8020%" y="751.50">se..</text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="8.5995%" y="725" width="0.4095%" height="15" fill="rgb(215,198,30)" fg:x="105" fg:w="5"/><text x="8.8495%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.41%)</title><rect x="8.5995%" y="709" width="0.4095%" height="15" fill="rgb(246,142,8)" fg:x="105" fg:w="5"/><text x="8.8495%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.8452%" y="693" width="0.1638%" height="15" fill="rgb(243,26,38)" fg:x="108" fg:w="2"/><text x="9.0952%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.8452%" y="677" width="0.1638%" height="15" fill="rgb(205,133,28)" fg:x="108" fg:w="2"/><text x="9.0952%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="8.8452%" y="661" width="0.1638%" height="15" fill="rgb(212,34,0)" fg:x="108" fg:w="2"/><text x="9.0952%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.9271%" y="645" width="0.0819%" height="15" fill="rgb(251,226,22)" fg:x="109" fg:w="1"/><text x="9.1771%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.0909%" y="725" width="0.1638%" height="15" fill="rgb(252,119,9)" fg:x="111" fg:w="2"/><text x="9.3409%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2547%" y="709" width="0.0819%" height="15" fill="rgb(213,150,50)" fg:x="113" fg:w="1"/><text x="9.5047%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.3366%" y="693" width="0.0819%" height="15" fill="rgb(212,24,39)" fg:x="114" fg:w="1"/><text x="9.5866%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.5004%" y="677" width="0.1638%" height="15" fill="rgb(213,46,39)" fg:x="116" fg:w="2"/><text x="9.7504%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.6642%" y="677" width="0.0819%" height="15" fill="rgb(239,106,12)" fg:x="118" fg:w="1"/><text x="9.9142%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="9.7461%" y="677" width="0.0819%" height="15" fill="rgb(249,229,21)" fg:x="119" fg:w="1"/><text x="9.9961%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.7461%" y="661" width="0.0819%" height="15" fill="rgb(212,158,3)" fg:x="119" fg:w="1"/><text x="9.9961%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7461%" y="645" width="0.0819%" height="15" fill="rgb(253,26,48)" fg:x="119" fg:w="1"/><text x="9.9961%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.9099%" y="661" width="0.0819%" height="15" fill="rgb(238,178,20)" fg:x="121" fg:w="1"/><text x="10.1599%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.06%)</title><rect x="9.0090%" y="757" width="1.0647%" height="15" fill="rgb(208,86,15)" fg:x="110" fg:w="13"/><text x="9.2590%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.06%)</title><rect x="9.0090%" y="741" width="1.0647%" height="15" fill="rgb(239,42,53)" fg:x="110" fg:w="13"/><text x="9.2590%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.82%)</title><rect x="9.2547%" y="725" width="0.8190%" height="15" fill="rgb(245,226,8)" fg:x="113" fg:w="10"/><text x="9.5047%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.74%)</title><rect x="9.3366%" y="709" width="0.7371%" height="15" fill="rgb(216,176,32)" fg:x="114" fg:w="9"/><text x="9.5866%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="9.4185%" y="693" width="0.6552%" height="15" fill="rgb(231,186,21)" fg:x="115" fg:w="8"/><text x="9.6685%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="9.8280%" y="677" width="0.2457%" height="15" fill="rgb(205,95,49)" fg:x="120" fg:w="3"/><text x="10.0780%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.9918%" y="661" width="0.0819%" height="15" fill="rgb(217,145,8)" fg:x="122" fg:w="1"/><text x="10.2418%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="10.1556%" y="709" width="0.4095%" height="15" fill="rgb(239,144,48)" fg:x="124" fg:w="5"/><text x="10.4056%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.4832%" y="693" width="0.0819%" height="15" fill="rgb(214,189,23)" fg:x="128" fg:w="1"/><text x="10.7332%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.4832%" y="677" width="0.0819%" height="15" fill="rgb(229,157,17)" fg:x="128" fg:w="1"/><text x="10.7332%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="10.5651%" y="709" width="0.0819%" height="15" fill="rgb(230,5,48)" fg:x="129" fg:w="1"/><text x="10.8151%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.5651%" y="693" width="0.0819%" height="15" fill="rgb(224,156,48)" fg:x="129" fg:w="1"/><text x="10.8151%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5651%" y="677" width="0.0819%" height="15" fill="rgb(223,14,29)" fg:x="129" fg:w="1"/><text x="10.8151%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5651%" y="661" width="0.0819%" height="15" fill="rgb(229,96,36)" fg:x="129" fg:w="1"/><text x="10.8151%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5651%" y="645" width="0.0819%" height="15" fill="rgb(231,102,53)" fg:x="129" fg:w="1"/><text x="10.8151%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="10.6470%" y="645" width="0.1638%" height="15" fill="rgb(210,77,38)" fg:x="130" fg:w="2"/><text x="10.8970%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.7289%" y="629" width="0.0819%" height="15" fill="rgb(235,131,6)" fg:x="131" fg:w="1"/><text x="10.9789%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8108%" y="629" width="0.0819%" height="15" fill="rgb(252,55,38)" fg:x="132" fg:w="1"/><text x="11.0608%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8108%" y="613" width="0.0819%" height="15" fill="rgb(246,38,14)" fg:x="132" fg:w="1"/><text x="11.0608%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.33%)</title><rect x="10.6470%" y="709" width="0.3276%" height="15" fill="rgb(242,27,5)" fg:x="130" fg:w="4"/><text x="10.8970%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="10.6470%" y="693" width="0.3276%" height="15" fill="rgb(228,65,35)" fg:x="130" fg:w="4"/><text x="10.8970%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.33%)</title><rect x="10.6470%" y="677" width="0.3276%" height="15" fill="rgb(245,93,11)" fg:x="130" fg:w="4"/><text x="10.8970%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.33%)</title><rect x="10.6470%" y="661" width="0.3276%" height="15" fill="rgb(213,1,31)" fg:x="130" fg:w="4"/><text x="10.8970%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="10.8108%" y="645" width="0.1638%" height="15" fill="rgb(237,205,14)" fg:x="132" fg:w="2"/><text x="11.0608%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8927%" y="629" width="0.0819%" height="15" fill="rgb(232,118,45)" fg:x="133" fg:w="1"/><text x="11.1427%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="10.8927%" y="613" width="0.0819%" height="15" fill="rgb(218,5,6)" fg:x="133" fg:w="1"/><text x="11.1427%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9746%" y="709" width="0.0819%" height="15" fill="rgb(251,87,51)" fg:x="134" fg:w="1"/><text x="11.2246%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9746%" y="693" width="0.0819%" height="15" fill="rgb(207,225,20)" fg:x="134" fg:w="1"/><text x="11.2246%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9746%" y="677" width="0.0819%" height="15" fill="rgb(222,78,54)" fg:x="134" fg:w="1"/><text x="11.2246%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9746%" y="661" width="0.0819%" height="15" fill="rgb(232,85,16)" fg:x="134" fg:w="1"/><text x="11.2246%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.9746%" y="645" width="0.0819%" height="15" fill="rgb(244,25,33)" fg:x="134" fg:w="1"/><text x="11.2246%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.2203%" y="661" width="0.0819%" height="15" fill="rgb(233,24,36)" fg:x="137" fg:w="1"/><text x="11.4703%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.2203%" y="645" width="0.0819%" height="15" fill="rgb(253,49,54)" fg:x="137" fg:w="1"/><text x="11.4703%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="11.3022%" y="645" width="0.0819%" height="15" fill="rgb(245,12,22)" fg:x="138" fg:w="1"/><text x="11.5522%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="11.3022%" y="661" width="0.2457%" height="15" fill="rgb(253,141,28)" fg:x="138" fg:w="3"/><text x="11.5522%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="11.3841%" y="645" width="0.1638%" height="15" fill="rgb(225,207,27)" fg:x="139" fg:w="2"/><text x="11.6341%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.4660%" y="629" width="0.0819%" height="15" fill="rgb(220,84,2)" fg:x="140" fg:w="1"/><text x="11.7160%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4660%" y="613" width="0.0819%" height="15" fill="rgb(224,37,37)" fg:x="140" fg:w="1"/><text x="11.7160%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.4660%" y="597" width="0.0819%" height="15" fill="rgb(220,143,18)" fg:x="140" fg:w="1"/><text x="11.7160%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4660%" y="581" width="0.0819%" height="15" fill="rgb(210,88,33)" fg:x="140" fg:w="1"/><text x="11.7160%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.6298%" y="645" width="0.0819%" height="15" fill="rgb(219,87,51)" fg:x="142" fg:w="1"/><text x="11.8798%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.74%)</title><rect x="11.0565%" y="677" width="0.7371%" height="15" fill="rgb(211,7,35)" fg:x="135" fg:w="9"/><text x="11.3065%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="11.5479%" y="661" width="0.2457%" height="15" fill="rgb(232,77,2)" fg:x="141" fg:w="3"/><text x="11.7979%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.7117%" y="645" width="0.0819%" height="15" fill="rgb(249,94,25)" fg:x="143" fg:w="1"/><text x="11.9617%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.7117%" y="629" width="0.0819%" height="15" fill="rgb(215,112,2)" fg:x="143" fg:w="1"/><text x="11.9617%" y="639.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (74 samples, 6.06%)</title><rect x="5.8968%" y="789" width="6.0606%" height="15" fill="rgb(226,115,48)" fg:x="72" fg:w="74"/><text x="6.1468%" y="799.50">engine::..</text></g><g><title>engine::session::Session::check_for_changes (73 samples, 5.98%)</title><rect x="5.9787%" y="773" width="5.9787%" height="15" fill="rgb(249,196,10)" fg:x="73" fg:w="73"/><text x="6.2287%" y="783.50">engine::..</text></g><g><title>kernel::compare::any_entity_changes (23 samples, 1.88%)</title><rect x="10.0737%" y="757" width="1.8837%" height="15" fill="rgb(237,109,14)" fg:x="123" fg:w="23"/><text x="10.3237%" y="767.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (23 samples, 1.88%)</title><rect x="10.0737%" y="741" width="1.8837%" height="15" fill="rgb(217,103,53)" fg:x="123" fg:w="23"/><text x="10.3237%" y="751.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 1.88%)</title><rect x="10.0737%" y="725" width="1.8837%" height="15" fill="rgb(244,137,9)" fg:x="123" fg:w="23"/><text x="10.3237%" y="735.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.90%)</title><rect x="11.0565%" y="709" width="0.9009%" height="15" fill="rgb(227,201,3)" fg:x="135" fg:w="11"/><text x="11.3065%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (11 samples, 0.90%)</title><rect x="11.0565%" y="693" width="0.9009%" height="15" fill="rgb(243,94,6)" fg:x="135" fg:w="11"/><text x="11.3065%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="11.7936%" y="677" width="0.1638%" height="15" fill="rgb(235,118,5)" fg:x="144" fg:w="2"/><text x="12.0436%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8755%" y="661" width="0.0819%" height="15" fill="rgb(247,10,30)" fg:x="145" fg:w="1"/><text x="12.1255%" y="671.50"></text></g><g><title>engine::session::Session::flush (80 samples, 6.55%)</title><rect x="5.4873%" y="821" width="6.5520%" height="15" fill="rgb(205,26,28)" fg:x="67" fg:w="80"/><text x="5.7373%" y="831.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (80 samples, 6.55%)</title><rect x="5.4873%" y="805" width="6.5520%" height="15" fill="rgb(206,99,35)" fg:x="67" fg:w="80"/><text x="5.7373%" y="815.50">engine::s..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="11.9574%" y="789" width="0.0819%" height="15" fill="rgb(238,130,40)" fg:x="146" fg:w="1"/><text x="12.2074%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="11.9574%" y="773" width="0.0819%" height="15" fill="rgb(224,126,31)" fg:x="146" fg:w="1"/><text x="12.2074%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="11.9574%" y="757" width="0.0819%" height="15" fill="rgb(254,105,17)" fg:x="146" fg:w="1"/><text x="12.2074%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.9574%" y="741" width="0.0819%" height="15" fill="rgb(216,87,36)" fg:x="146" fg:w="1"/><text x="12.2074%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.9574%" y="725" width="0.0819%" height="15" fill="rgb(240,21,12)" fg:x="146" fg:w="1"/><text x="12.2074%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.9574%" y="709" width="0.0819%" height="15" fill="rgb(245,192,34)" fg:x="146" fg:w="1"/><text x="12.2074%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.9574%" y="693" width="0.0819%" height="15" fill="rgb(226,100,49)" fg:x="146" fg:w="1"/><text x="12.2074%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="11.9574%" y="677" width="0.0819%" height="15" fill="rgb(245,188,27)" fg:x="146" fg:w="1"/><text x="12.2074%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.9574%" y="661" width="0.0819%" height="15" fill="rgb(212,170,8)" fg:x="146" fg:w="1"/><text x="12.2074%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.9574%" y="645" width="0.0819%" height="15" fill="rgb(217,113,29)" fg:x="146" fg:w="1"/><text x="12.2074%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.9574%" y="629" width="0.0819%" height="15" fill="rgb(237,30,3)" fg:x="146" fg:w="1"/><text x="12.2074%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.9574%" y="613" width="0.0819%" height="15" fill="rgb(227,19,28)" fg:x="146" fg:w="1"/><text x="12.2074%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="11.9574%" y="597" width="0.0819%" height="15" fill="rgb(239,172,45)" fg:x="146" fg:w="1"/><text x="12.2074%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="11.9574%" y="581" width="0.0819%" height="15" fill="rgb(254,55,39)" fg:x="146" fg:w="1"/><text x="12.2074%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="11.9574%" y="565" width="0.0819%" height="15" fill="rgb(249,208,12)" fg:x="146" fg:w="1"/><text x="12.2074%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="11.9574%" y="549" width="0.0819%" height="15" fill="rgb(240,52,13)" fg:x="146" fg:w="1"/><text x="12.2074%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.9574%" y="533" width="0.0819%" height="15" fill="rgb(252,149,13)" fg:x="146" fg:w="1"/><text x="12.2074%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.9574%" y="517" width="0.0819%" height="15" fill="rgb(232,81,48)" fg:x="146" fg:w="1"/><text x="12.2074%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.9574%" y="501" width="0.0819%" height="15" fill="rgb(222,144,2)" fg:x="146" fg:w="1"/><text x="12.2074%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="11.9574%" y="485" width="0.0819%" height="15" fill="rgb(216,81,32)" fg:x="146" fg:w="1"/><text x="12.2074%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.9574%" y="469" width="0.0819%" height="15" fill="rgb(244,78,51)" fg:x="146" fg:w="1"/><text x="12.2074%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0393%" y="805" width="0.0819%" height="15" fill="rgb(217,66,21)" fg:x="147" fg:w="1"/><text x="12.2893%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1212%" y="757" width="0.0819%" height="15" fill="rgb(247,101,42)" fg:x="148" fg:w="1"/><text x="12.3712%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1212%" y="741" width="0.0819%" height="15" fill="rgb(227,81,39)" fg:x="148" fg:w="1"/><text x="12.3712%" y="751.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="12.1212%" y="789" width="0.1638%" height="15" fill="rgb(220,223,44)" fg:x="148" fg:w="2"/><text x="12.3712%" y="799.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="12.1212%" y="773" width="0.1638%" height="15" fill="rgb(205,218,2)" fg:x="148" fg:w="2"/><text x="12.3712%" y="783.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="12.2031%" y="757" width="0.0819%" height="15" fill="rgb(212,207,28)" fg:x="149" fg:w="1"/><text x="12.4531%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.2031%" y="741" width="0.0819%" height="15" fill="rgb(224,12,41)" fg:x="149" fg:w="1"/><text x="12.4531%" y="751.50"></text></g><g><title>plugins_core::build::Build::holding (4 samples, 0.33%)</title><rect x="12.0393%" y="821" width="0.3276%" height="15" fill="rgb(216,118,12)" fg:x="147" fg:w="4"/><text x="12.2893%" y="831.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.25%)</title><rect x="12.1212%" y="805" width="0.2457%" height="15" fill="rgb(252,97,46)" fg:x="148" fg:w="3"/><text x="12.3712%" y="815.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="12.2850%" y="789" width="0.0819%" height="15" fill="rgb(244,206,19)" fg:x="150" fg:w="1"/><text x="12.5350%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="12.2850%" y="773" width="0.0819%" height="15" fill="rgb(231,84,31)" fg:x="150" fg:w="1"/><text x="12.5350%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.4488%" y="773" width="0.0819%" height="15" fill="rgb(244,133,0)" fg:x="152" fg:w="1"/><text x="12.6988%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="12.5307%" y="757" width="0.0819%" height="15" fill="rgb(223,15,50)" fg:x="153" fg:w="1"/><text x="12.7807%" y="767.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.33%)</title><rect x="12.3669%" y="821" width="0.3276%" height="15" fill="rgb(250,118,49)" fg:x="151" fg:w="4"/><text x="12.6169%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.25%)</title><rect x="12.4488%" y="805" width="0.2457%" height="15" fill="rgb(248,25,38)" fg:x="152" fg:w="3"/><text x="12.6988%" y="815.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.25%)</title><rect x="12.4488%" y="789" width="0.2457%" height="15" fill="rgb(215,70,14)" fg:x="152" fg:w="3"/><text x="12.6988%" y="799.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="12.5307%" y="773" width="0.1638%" height="15" fill="rgb(215,28,15)" fg:x="153" fg:w="2"/><text x="12.7807%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6126%" y="757" width="0.0819%" height="15" fill="rgb(243,6,28)" fg:x="154" fg:w="1"/><text x="12.8626%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6126%" y="741" width="0.0819%" height="15" fill="rgb(222,130,1)" fg:x="154" fg:w="1"/><text x="12.8626%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.6945%" y="645" width="0.0819%" height="15" fill="rgb(236,166,44)" fg:x="155" fg:w="1"/><text x="12.9445%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.6945%" y="629" width="0.0819%" height="15" fill="rgb(221,108,14)" fg:x="155" fg:w="1"/><text x="12.9445%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="12.6945%" y="613" width="0.0819%" height="15" fill="rgb(252,3,45)" fg:x="155" fg:w="1"/><text x="12.9445%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="12.6945%" y="597" width="0.0819%" height="15" fill="rgb(237,68,30)" fg:x="155" fg:w="1"/><text x="12.9445%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="12.6945%" y="581" width="0.0819%" height="15" fill="rgb(211,79,22)" fg:x="155" fg:w="1"/><text x="12.9445%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="12.6945%" y="565" width="0.0819%" height="15" fill="rgb(252,185,21)" fg:x="155" fg:w="1"/><text x="12.9445%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="12.6945%" y="549" width="0.0819%" height="15" fill="rgb(225,189,26)" fg:x="155" fg:w="1"/><text x="12.9445%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="12.6945%" y="533" width="0.0819%" height="15" fill="rgb(241,30,40)" fg:x="155" fg:w="1"/><text x="12.9445%" y="543.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="12.7764%" y="341" width="0.0819%" height="15" fill="rgb(235,215,44)" fg:x="156" fg:w="1"/><text x="13.0264%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="12.7764%" y="325" width="0.0819%" height="15" fill="rgb(205,8,29)" fg:x="156" fg:w="1"/><text x="13.0264%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.25%)</title><rect x="12.6945%" y="805" width="0.2457%" height="15" fill="rgb(241,137,42)" fg:x="155" fg:w="3"/><text x="12.9445%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.25%)</title><rect x="12.6945%" y="789" width="0.2457%" height="15" fill="rgb(237,155,2)" fg:x="155" fg:w="3"/><text x="12.9445%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.25%)</title><rect x="12.6945%" y="773" width="0.2457%" height="15" fill="rgb(245,29,42)" fg:x="155" fg:w="3"/><text x="12.9445%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.25%)</title><rect x="12.6945%" y="757" width="0.2457%" height="15" fill="rgb(234,101,35)" fg:x="155" fg:w="3"/><text x="12.9445%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.25%)</title><rect x="12.6945%" y="741" width="0.2457%" height="15" fill="rgb(228,64,37)" fg:x="155" fg:w="3"/><text x="12.9445%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="12.6945%" y="725" width="0.2457%" height="15" fill="rgb(217,214,36)" fg:x="155" fg:w="3"/><text x="12.9445%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="12.6945%" y="709" width="0.2457%" height="15" fill="rgb(243,70,3)" fg:x="155" fg:w="3"/><text x="12.9445%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="12.6945%" y="693" width="0.2457%" height="15" fill="rgb(253,158,52)" fg:x="155" fg:w="3"/><text x="12.9445%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="12.6945%" y="677" width="0.2457%" height="15" fill="rgb(234,111,54)" fg:x="155" fg:w="3"/><text x="12.9445%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="12.6945%" y="661" width="0.2457%" height="15" fill="rgb(217,70,32)" fg:x="155" fg:w="3"/><text x="12.9445%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.7764%" y="645" width="0.1638%" height="15" fill="rgb(234,18,33)" fg:x="156" fg:w="2"/><text x="13.0264%" y="655.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="12.7764%" y="629" width="0.1638%" height="15" fill="rgb(234,12,49)" fg:x="156" fg:w="2"/><text x="13.0264%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="12.7764%" y="613" width="0.1638%" height="15" fill="rgb(236,10,21)" fg:x="156" fg:w="2"/><text x="13.0264%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="12.7764%" y="597" width="0.1638%" height="15" fill="rgb(248,182,45)" fg:x="156" fg:w="2"/><text x="13.0264%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.7764%" y="581" width="0.1638%" height="15" fill="rgb(217,95,36)" fg:x="156" fg:w="2"/><text x="13.0264%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.7764%" y="565" width="0.1638%" height="15" fill="rgb(212,110,31)" fg:x="156" fg:w="2"/><text x="13.0264%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.7764%" y="549" width="0.1638%" height="15" fill="rgb(206,32,53)" fg:x="156" fg:w="2"/><text x="13.0264%" y="559.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="12.7764%" y="533" width="0.1638%" height="15" fill="rgb(246,141,37)" fg:x="156" fg:w="2"/><text x="13.0264%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="12.7764%" y="517" width="0.1638%" height="15" fill="rgb(219,16,7)" fg:x="156" fg:w="2"/><text x="13.0264%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="12.7764%" y="501" width="0.1638%" height="15" fill="rgb(230,205,45)" fg:x="156" fg:w="2"/><text x="13.0264%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="12.7764%" y="485" width="0.1638%" height="15" fill="rgb(231,43,49)" fg:x="156" fg:w="2"/><text x="13.0264%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="12.7764%" y="469" width="0.1638%" height="15" fill="rgb(212,106,34)" fg:x="156" fg:w="2"/><text x="13.0264%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="12.7764%" y="453" width="0.1638%" height="15" fill="rgb(206,83,17)" fg:x="156" fg:w="2"/><text x="13.0264%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="12.7764%" y="437" width="0.1638%" height="15" fill="rgb(244,154,49)" fg:x="156" fg:w="2"/><text x="13.0264%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="12.7764%" y="421" width="0.1638%" height="15" fill="rgb(244,149,49)" fg:x="156" fg:w="2"/><text x="13.0264%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="12.7764%" y="405" width="0.1638%" height="15" fill="rgb(227,134,18)" fg:x="156" fg:w="2"/><text x="13.0264%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="12.7764%" y="389" width="0.1638%" height="15" fill="rgb(237,116,36)" fg:x="156" fg:w="2"/><text x="13.0264%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="12.7764%" y="373" width="0.1638%" height="15" fill="rgb(205,129,40)" fg:x="156" fg:w="2"/><text x="13.0264%" y="383.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="12.7764%" y="357" width="0.1638%" height="15" fill="rgb(236,178,4)" fg:x="156" fg:w="2"/><text x="13.0264%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="12.8583%" y="341" width="0.0819%" height="15" fill="rgb(251,76,53)" fg:x="157" fg:w="1"/><text x="13.1083%" y="351.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9402%" y="805" width="0.0819%" height="15" fill="rgb(242,92,40)" fg:x="158" fg:w="1"/><text x="13.1902%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9402%" y="789" width="0.0819%" height="15" fill="rgb(209,45,30)" fg:x="158" fg:w="1"/><text x="13.1902%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="13.1040%" y="757" width="0.0819%" height="15" fill="rgb(218,157,36)" fg:x="160" fg:w="1"/><text x="13.3540%" y="767.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="13.1040%" y="741" width="0.0819%" height="15" fill="rgb(222,186,16)" fg:x="160" fg:w="1"/><text x="13.3540%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1040%" y="725" width="0.0819%" height="15" fill="rgb(254,72,35)" fg:x="160" fg:w="1"/><text x="13.3540%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="13.1859%" y="725" width="0.1638%" height="15" fill="rgb(224,25,35)" fg:x="161" fg:w="2"/><text x="13.4359%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="13.1859%" y="709" width="0.1638%" height="15" fill="rgb(206,135,52)" fg:x="161" fg:w="2"/><text x="13.4359%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="13.1859%" y="693" width="0.1638%" height="15" fill="rgb(229,174,47)" fg:x="161" fg:w="2"/><text x="13.4359%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="13.1859%" y="677" width="0.1638%" height="15" fill="rgb(242,184,21)" fg:x="161" fg:w="2"/><text x="13.4359%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="13.1859%" y="661" width="0.1638%" height="15" fill="rgb(213,22,45)" fg:x="161" fg:w="2"/><text x="13.4359%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.1859%" y="645" width="0.1638%" height="15" fill="rgb(237,81,54)" fg:x="161" fg:w="2"/><text x="13.4359%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="13.1859%" y="629" width="0.1638%" height="15" fill="rgb(248,177,18)" fg:x="161" fg:w="2"/><text x="13.4359%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="13.1859%" y="613" width="0.1638%" height="15" fill="rgb(254,31,16)" fg:x="161" fg:w="2"/><text x="13.4359%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="13.1859%" y="597" width="0.1638%" height="15" fill="rgb(235,20,31)" fg:x="161" fg:w="2"/><text x="13.4359%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.1859%" y="581" width="0.1638%" height="15" fill="rgb(240,56,43)" fg:x="161" fg:w="2"/><text x="13.4359%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.1859%" y="565" width="0.1638%" height="15" fill="rgb(237,197,51)" fg:x="161" fg:w="2"/><text x="13.4359%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.1859%" y="549" width="0.1638%" height="15" fill="rgb(241,162,44)" fg:x="161" fg:w="2"/><text x="13.4359%" y="559.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="13.1859%" y="533" width="0.1638%" height="15" fill="rgb(224,23,20)" fg:x="161" fg:w="2"/><text x="13.4359%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="13.1859%" y="517" width="0.1638%" height="15" fill="rgb(250,109,34)" fg:x="161" fg:w="2"/><text x="13.4359%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="13.1859%" y="501" width="0.1638%" height="15" fill="rgb(214,175,50)" fg:x="161" fg:w="2"/><text x="13.4359%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="13.1859%" y="485" width="0.1638%" height="15" fill="rgb(213,182,5)" fg:x="161" fg:w="2"/><text x="13.4359%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="13.1859%" y="469" width="0.1638%" height="15" fill="rgb(209,199,19)" fg:x="161" fg:w="2"/><text x="13.4359%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="13.1859%" y="453" width="0.1638%" height="15" fill="rgb(236,224,42)" fg:x="161" fg:w="2"/><text x="13.4359%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.1859%" y="437" width="0.1638%" height="15" fill="rgb(246,226,29)" fg:x="161" fg:w="2"/><text x="13.4359%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="13.1859%" y="421" width="0.1638%" height="15" fill="rgb(227,223,11)" fg:x="161" fg:w="2"/><text x="13.4359%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.1859%" y="405" width="0.1638%" height="15" fill="rgb(219,7,51)" fg:x="161" fg:w="2"/><text x="13.4359%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="13.1859%" y="389" width="0.1638%" height="15" fill="rgb(245,167,10)" fg:x="161" fg:w="2"/><text x="13.4359%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="13.1859%" y="373" width="0.1638%" height="15" fill="rgb(237,224,16)" fg:x="161" fg:w="2"/><text x="13.4359%" y="383.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="13.1859%" y="357" width="0.1638%" height="15" fill="rgb(226,132,13)" fg:x="161" fg:w="2"/><text x="13.4359%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.3497%" y="693" width="0.0819%" height="15" fill="rgb(214,140,3)" fg:x="163" fg:w="1"/><text x="13.5997%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="13.1859%" y="741" width="0.3276%" height="15" fill="rgb(221,177,4)" fg:x="161" fg:w="4"/><text x="13.4359%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="13.3497%" y="725" width="0.1638%" height="15" fill="rgb(238,139,3)" fg:x="163" fg:w="2"/><text x="13.5997%" y="735.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="13.3497%" y="709" width="0.1638%" height="15" fill="rgb(216,17,39)" fg:x="163" fg:w="2"/><text x="13.5997%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.4316%" y="693" width="0.0819%" height="15" fill="rgb(238,120,9)" fg:x="164" fg:w="1"/><text x="13.6816%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.4316%" y="677" width="0.0819%" height="15" fill="rgb(244,92,53)" fg:x="164" fg:w="1"/><text x="13.6816%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.57%)</title><rect x="13.0221%" y="805" width="0.5733%" height="15" fill="rgb(224,148,33)" fg:x="159" fg:w="7"/><text x="13.2721%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="13.0221%" y="789" width="0.5733%" height="15" fill="rgb(243,6,36)" fg:x="159" fg:w="7"/><text x="13.2721%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.57%)</title><rect x="13.0221%" y="773" width="0.5733%" height="15" fill="rgb(230,102,11)" fg:x="159" fg:w="7"/><text x="13.2721%" y="783.50"></text></g><g><title>plugins_core::build::Build::leads_to (5 samples, 0.41%)</title><rect x="13.1859%" y="757" width="0.4095%" height="15" fill="rgb(234,148,36)" fg:x="161" fg:w="5"/><text x="13.4359%" y="767.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="13.5135%" y="741" width="0.0819%" height="15" fill="rgb(251,153,25)" fg:x="165" fg:w="1"/><text x="13.7635%" y="751.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="13.5135%" y="725" width="0.0819%" height="15" fill="rgb(215,129,8)" fg:x="165" fg:w="1"/><text x="13.7635%" y="735.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="13.5135%" y="709" width="0.0819%" height="15" fill="rgb(224,128,35)" fg:x="165" fg:w="1"/><text x="13.7635%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="13.5135%" y="693" width="0.0819%" height="15" fill="rgb(237,56,52)" fg:x="165" fg:w="1"/><text x="13.7635%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.5135%" y="677" width="0.0819%" height="15" fill="rgb(234,213,19)" fg:x="165" fg:w="1"/><text x="13.7635%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.5135%" y="661" width="0.0819%" height="15" fill="rgb(252,82,23)" fg:x="165" fg:w="1"/><text x="13.7635%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.5135%" y="645" width="0.0819%" height="15" fill="rgb(254,201,21)" fg:x="165" fg:w="1"/><text x="13.7635%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5135%" y="629" width="0.0819%" height="15" fill="rgb(250,186,11)" fg:x="165" fg:w="1"/><text x="13.7635%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="13.5954%" y="773" width="0.0819%" height="15" fill="rgb(211,174,5)" fg:x="166" fg:w="1"/><text x="13.8454%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="13.6773%" y="773" width="0.0819%" height="15" fill="rgb(214,121,10)" fg:x="167" fg:w="1"/><text x="13.9273%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6773%" y="757" width="0.0819%" height="15" fill="rgb(241,66,2)" fg:x="167" fg:w="1"/><text x="13.9273%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6773%" y="741" width="0.0819%" height="15" fill="rgb(220,167,19)" fg:x="167" fg:w="1"/><text x="13.9273%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7592%" y="725" width="0.0819%" height="15" fill="rgb(231,54,50)" fg:x="168" fg:w="1"/><text x="14.0092%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7592%" y="709" width="0.0819%" height="15" fill="rgb(239,217,53)" fg:x="168" fg:w="1"/><text x="14.0092%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.7592%" y="693" width="0.0819%" height="15" fill="rgb(248,8,0)" fg:x="168" fg:w="1"/><text x="14.0092%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.7592%" y="677" width="0.0819%" height="15" fill="rgb(229,118,37)" fg:x="168" fg:w="1"/><text x="14.0092%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.7592%" y="661" width="0.0819%" height="15" fill="rgb(253,223,43)" fg:x="168" fg:w="1"/><text x="14.0092%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7592%" y="645" width="0.0819%" height="15" fill="rgb(211,77,36)" fg:x="168" fg:w="1"/><text x="14.0092%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7592%" y="629" width="0.0819%" height="15" fill="rgb(219,3,53)" fg:x="168" fg:w="1"/><text x="14.0092%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.7592%" y="613" width="0.0819%" height="15" fill="rgb(244,45,42)" fg:x="168" fg:w="1"/><text x="14.0092%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.7592%" y="597" width="0.0819%" height="15" fill="rgb(225,95,27)" fg:x="168" fg:w="1"/><text x="14.0092%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.7592%" y="581" width="0.0819%" height="15" fill="rgb(207,74,8)" fg:x="168" fg:w="1"/><text x="14.0092%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.7592%" y="565" width="0.0819%" height="15" fill="rgb(243,63,36)" fg:x="168" fg:w="1"/><text x="14.0092%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7592%" y="549" width="0.0819%" height="15" fill="rgb(211,180,12)" fg:x="168" fg:w="1"/><text x="14.0092%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="13.7592%" y="741" width="0.1638%" height="15" fill="rgb(254,166,49)" fg:x="168" fg:w="2"/><text x="14.0092%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="13.8411%" y="725" width="0.0819%" height="15" fill="rgb(205,19,0)" fg:x="169" fg:w="1"/><text x="14.0911%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="13.7592%" y="773" width="0.3276%" height="15" fill="rgb(224,172,32)" fg:x="168" fg:w="4"/><text x="14.0092%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.33%)</title><rect x="13.7592%" y="757" width="0.3276%" height="15" fill="rgb(254,136,30)" fg:x="168" fg:w="4"/><text x="14.0092%" y="767.50"></text></g><g><title>engine::session::Session::save_entity (2 samples, 0.16%)</title><rect x="13.9230%" y="741" width="0.1638%" height="15" fill="rgb(246,19,35)" fg:x="170" fg:w="2"/><text x="14.1730%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0049%" y="725" width="0.0819%" height="15" fill="rgb(219,24,36)" fg:x="171" fg:w="1"/><text x="14.2549%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0868%" y="693" width="0.0819%" height="15" fill="rgb(251,55,1)" fg:x="172" fg:w="1"/><text x="14.3368%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.0868%" y="709" width="0.1638%" height="15" fill="rgb(218,117,39)" fg:x="172" fg:w="2"/><text x="14.3368%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="14.1687%" y="693" width="0.0819%" height="15" fill="rgb(248,169,11)" fg:x="173" fg:w="1"/><text x="14.4187%" y="703.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.25%)</title><rect x="14.0868%" y="773" width="0.2457%" height="15" fill="rgb(244,40,44)" fg:x="172" fg:w="3"/><text x="14.3368%" y="783.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.25%)</title><rect x="14.0868%" y="757" width="0.2457%" height="15" fill="rgb(234,62,37)" fg:x="172" fg:w="3"/><text x="14.3368%" y="767.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.25%)</title><rect x="14.0868%" y="741" width="0.2457%" height="15" fill="rgb(207,117,42)" fg:x="172" fg:w="3"/><text x="14.3368%" y="751.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (3 samples, 0.25%)</title><rect x="14.0868%" y="725" width="0.2457%" height="15" fill="rgb(213,43,2)" fg:x="172" fg:w="3"/><text x="14.3368%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="14.2506%" y="709" width="0.0819%" height="15" fill="rgb(244,202,51)" fg:x="174" fg:w="1"/><text x="14.5006%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="14.3325%" y="741" width="0.0819%" height="15" fill="rgb(253,174,46)" fg:x="175" fg:w="1"/><text x="14.5825%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.3325%" y="725" width="0.0819%" height="15" fill="rgb(251,23,1)" fg:x="175" fg:w="1"/><text x="14.5825%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.3325%" y="709" width="0.0819%" height="15" fill="rgb(253,26,1)" fg:x="175" fg:w="1"/><text x="14.5825%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.3325%" y="693" width="0.0819%" height="15" fill="rgb(216,89,31)" fg:x="175" fg:w="1"/><text x="14.5825%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.3325%" y="677" width="0.0819%" height="15" fill="rgb(209,109,5)" fg:x="175" fg:w="1"/><text x="14.5825%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.4963%" y="725" width="0.0819%" height="15" fill="rgb(229,63,13)" fg:x="177" fg:w="1"/><text x="14.7463%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="14.6601%" y="709" width="0.2457%" height="15" fill="rgb(238,137,54)" fg:x="179" fg:w="3"/><text x="14.9101%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.8239%" y="693" width="0.0819%" height="15" fill="rgb(228,1,9)" fg:x="181" fg:w="1"/><text x="15.0739%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.8239%" y="677" width="0.0819%" height="15" fill="rgb(249,120,48)" fg:x="181" fg:w="1"/><text x="15.0739%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.8239%" y="661" width="0.0819%" height="15" fill="rgb(209,72,36)" fg:x="181" fg:w="1"/><text x="15.0739%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.41%)</title><rect x="14.5782%" y="725" width="0.4095%" height="15" fill="rgb(247,98,49)" fg:x="178" fg:w="5"/><text x="14.8282%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.9058%" y="709" width="0.0819%" height="15" fill="rgb(233,75,36)" fg:x="182" fg:w="1"/><text x="15.1558%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.9877%" y="709" width="0.0819%" height="15" fill="rgb(225,14,24)" fg:x="183" fg:w="1"/><text x="15.2377%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.9877%" y="693" width="0.0819%" height="15" fill="rgb(237,193,20)" fg:x="183" fg:w="1"/><text x="15.2377%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.9877%" y="677" width="0.0819%" height="15" fill="rgb(239,122,19)" fg:x="183" fg:w="1"/><text x="15.2377%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.9877%" y="661" width="0.0819%" height="15" fill="rgb(231,220,10)" fg:x="183" fg:w="1"/><text x="15.2377%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.0696%" y="661" width="0.1638%" height="15" fill="rgb(220,66,15)" fg:x="184" fg:w="2"/><text x="15.3196%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.0696%" y="645" width="0.1638%" height="15" fill="rgb(215,171,52)" fg:x="184" fg:w="2"/><text x="15.3196%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.1515%" y="629" width="0.0819%" height="15" fill="rgb(241,169,50)" fg:x="185" fg:w="1"/><text x="15.4015%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.1515%" y="613" width="0.0819%" height="15" fill="rgb(236,189,0)" fg:x="185" fg:w="1"/><text x="15.4015%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2334%" y="661" width="0.0819%" height="15" fill="rgb(217,147,20)" fg:x="186" fg:w="1"/><text x="15.4834%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="15.0696%" y="677" width="0.4095%" height="15" fill="rgb(206,188,39)" fg:x="184" fg:w="5"/><text x="15.3196%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.3153%" y="661" width="0.1638%" height="15" fill="rgb(227,118,25)" fg:x="187" fg:w="2"/><text x="15.5653%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.3972%" y="645" width="0.0819%" height="15" fill="rgb(248,171,40)" fg:x="188" fg:w="1"/><text x="15.6472%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3972%" y="629" width="0.0819%" height="15" fill="rgb(251,90,54)" fg:x="188" fg:w="1"/><text x="15.6472%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.57%)</title><rect x="15.0696%" y="693" width="0.5733%" height="15" fill="rgb(234,11,46)" fg:x="184" fg:w="7"/><text x="15.3196%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.4791%" y="677" width="0.1638%" height="15" fill="rgb(229,134,13)" fg:x="189" fg:w="2"/><text x="15.7291%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.4791%" y="661" width="0.1638%" height="15" fill="rgb(223,129,3)" fg:x="189" fg:w="2"/><text x="15.7291%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="15.4791%" y="645" width="0.1638%" height="15" fill="rgb(221,124,13)" fg:x="189" fg:w="2"/><text x="15.7291%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.6429%" y="693" width="0.1638%" height="15" fill="rgb(234,3,18)" fg:x="191" fg:w="2"/><text x="15.8929%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.8886%" y="677" width="0.1638%" height="15" fill="rgb(249,199,20)" fg:x="194" fg:w="2"/><text x="16.1386%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.8886%" y="661" width="0.1638%" height="15" fill="rgb(224,134,6)" fg:x="194" fg:w="2"/><text x="16.1386%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="16.0524%" y="677" width="0.1638%" height="15" fill="rgb(254,83,26)" fg:x="196" fg:w="2"/><text x="16.3024%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="16.0524%" y="661" width="0.1638%" height="15" fill="rgb(217,88,9)" fg:x="196" fg:w="2"/><text x="16.3024%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.0524%" y="645" width="0.1638%" height="15" fill="rgb(225,73,2)" fg:x="196" fg:w="2"/><text x="16.3024%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.1343%" y="629" width="0.0819%" height="15" fill="rgb(226,44,39)" fg:x="197" fg:w="1"/><text x="16.3843%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.1343%" y="613" width="0.0819%" height="15" fill="rgb(228,53,17)" fg:x="197" fg:w="1"/><text x="16.3843%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.31%)</title><rect x="15.0696%" y="709" width="1.3104%" height="15" fill="rgb(212,27,27)" fg:x="184" fg:w="16"/><text x="15.3196%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="15.8067%" y="693" width="0.5733%" height="15" fill="rgb(241,50,6)" fg:x="193" fg:w="7"/><text x="16.0567%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.2162%" y="677" width="0.1638%" height="15" fill="rgb(225,28,51)" fg:x="198" fg:w="2"/><text x="16.4662%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.2162%" y="661" width="0.1638%" height="15" fill="rgb(215,33,16)" fg:x="198" fg:w="2"/><text x="16.4662%" y="671.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="16.9533%" y="629" width="0.0819%" height="15" fill="rgb(243,40,39)" fg:x="207" fg:w="1"/><text x="17.2033%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="16.9533%" y="613" width="0.0819%" height="15" fill="rgb(225,11,42)" fg:x="207" fg:w="1"/><text x="17.2033%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.21%)</title><rect x="14.9877%" y="725" width="2.2113%" height="15" fill="rgb(241,220,38)" fg:x="183" fg:w="27"/><text x="15.2377%" y="735.50">s..</text></g><g><title>std::io::Write::write_all (10 samples, 0.82%)</title><rect x="16.3800%" y="709" width="0.8190%" height="15" fill="rgb(244,52,35)" fg:x="200" fg:w="10"/><text x="16.6300%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.66%)</title><rect x="16.5438%" y="693" width="0.6552%" height="15" fill="rgb(246,42,46)" fg:x="202" fg:w="8"/><text x="16.7938%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.49%)</title><rect x="16.7076%" y="677" width="0.4914%" height="15" fill="rgb(205,184,13)" fg:x="204" fg:w="6"/><text x="16.9576%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.41%)</title><rect x="16.7895%" y="661" width="0.4095%" height="15" fill="rgb(209,48,36)" fg:x="205" fg:w="5"/><text x="17.0395%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.41%)</title><rect x="16.7895%" y="645" width="0.4095%" height="15" fill="rgb(244,34,51)" fg:x="205" fg:w="5"/><text x="17.0395%" y="655.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="17.0352%" y="629" width="0.1638%" height="15" fill="rgb(221,107,33)" fg:x="208" fg:w="2"/><text x="17.2852%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (35 samples, 2.87%)</title><rect x="14.4144%" y="741" width="2.8665%" height="15" fill="rgb(224,203,12)" fg:x="176" fg:w="35"/><text x="14.6644%" y="751.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.1990%" y="725" width="0.0819%" height="15" fill="rgb(230,215,18)" fg:x="210" fg:w="1"/><text x="17.4490%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.1990%" y="709" width="0.0819%" height="15" fill="rgb(206,185,35)" fg:x="210" fg:w="1"/><text x="17.4490%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.1990%" y="693" width="0.0819%" height="15" fill="rgb(228,140,34)" fg:x="210" fg:w="1"/><text x="17.4490%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.1990%" y="677" width="0.0819%" height="15" fill="rgb(208,93,13)" fg:x="210" fg:w="1"/><text x="17.4490%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.1990%" y="661" width="0.0819%" height="15" fill="rgb(221,193,39)" fg:x="210" fg:w="1"/><text x="17.4490%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="17.1990%" y="645" width="0.0819%" height="15" fill="rgb(241,132,34)" fg:x="210" fg:w="1"/><text x="17.4490%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="17.1990%" y="629" width="0.0819%" height="15" fill="rgb(221,141,10)" fg:x="210" fg:w="1"/><text x="17.4490%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2809%" y="709" width="0.0819%" height="15" fill="rgb(226,90,31)" fg:x="211" fg:w="1"/><text x="17.5309%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="17.3628%" y="709" width="0.1638%" height="15" fill="rgb(243,75,5)" fg:x="212" fg:w="2"/><text x="17.6128%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.3628%" y="693" width="0.1638%" height="15" fill="rgb(227,156,21)" fg:x="212" fg:w="2"/><text x="17.6128%" y="703.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="17.5266%" y="693" width="0.2457%" height="15" fill="rgb(250,195,8)" fg:x="214" fg:w="3"/><text x="17.7766%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.25%)</title><rect x="17.7723%" y="693" width="0.2457%" height="15" fill="rgb(220,134,5)" fg:x="217" fg:w="3"/><text x="18.0223%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="17.2809%" y="741" width="0.9009%" height="15" fill="rgb(246,106,34)" fg:x="211" fg:w="11"/><text x="17.5309%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.90%)</title><rect x="17.2809%" y="725" width="0.9009%" height="15" fill="rgb(205,1,4)" fg:x="211" fg:w="11"/><text x="17.5309%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.66%)</title><rect x="17.5266%" y="709" width="0.6552%" height="15" fill="rgb(224,151,29)" fg:x="214" fg:w="8"/><text x="17.7766%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.0180%" y="693" width="0.1638%" height="15" fill="rgb(251,196,0)" fg:x="220" fg:w="2"/><text x="18.2680%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.0180%" y="677" width="0.1638%" height="15" fill="rgb(212,127,0)" fg:x="220" fg:w="2"/><text x="18.2680%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="18.0180%" y="661" width="0.1638%" height="15" fill="rgb(236,71,53)" fg:x="220" fg:w="2"/><text x="18.2680%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.0999%" y="645" width="0.0819%" height="15" fill="rgb(227,99,0)" fg:x="221" fg:w="1"/><text x="18.3499%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1818%" y="725" width="0.0819%" height="15" fill="rgb(239,89,21)" fg:x="222" fg:w="1"/><text x="18.4318%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4275%" y="693" width="0.0819%" height="15" fill="rgb(243,122,19)" fg:x="225" fg:w="1"/><text x="18.6775%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.57%)</title><rect x="18.5094%" y="693" width="0.5733%" height="15" fill="rgb(229,192,45)" fg:x="226" fg:w="7"/><text x="18.7594%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="18.6732%" y="677" width="0.4095%" height="15" fill="rgb(235,165,35)" fg:x="228" fg:w="5"/><text x="18.9232%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.25%)</title><rect x="18.8370%" y="661" width="0.2457%" height="15" fill="rgb(253,202,0)" fg:x="230" fg:w="3"/><text x="19.0870%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="19.0827%" y="677" width="0.0819%" height="15" fill="rgb(235,51,20)" fg:x="233" fg:w="1"/><text x="19.3327%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.25%)</title><rect x="19.0827%" y="693" width="0.2457%" height="15" fill="rgb(218,95,46)" fg:x="233" fg:w="3"/><text x="19.3327%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.1646%" y="677" width="0.1638%" height="15" fill="rgb(212,81,10)" fg:x="234" fg:w="2"/><text x="19.4146%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2465%" y="661" width="0.0819%" height="15" fill="rgb(240,59,0)" fg:x="235" fg:w="1"/><text x="19.4965%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.3284%" y="661" width="0.0819%" height="15" fill="rgb(212,191,42)" fg:x="236" fg:w="1"/><text x="19.5784%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.3284%" y="645" width="0.0819%" height="15" fill="rgb(233,140,3)" fg:x="236" fg:w="1"/><text x="19.5784%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3284%" y="629" width="0.0819%" height="15" fill="rgb(215,69,23)" fg:x="236" fg:w="1"/><text x="19.5784%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="19.4103%" y="645" width="0.0819%" height="15" fill="rgb(240,202,20)" fg:x="237" fg:w="1"/><text x="19.6603%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="19.4103%" y="629" width="0.0819%" height="15" fill="rgb(209,146,50)" fg:x="237" fg:w="1"/><text x="19.6603%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4922%" y="645" width="0.0819%" height="15" fill="rgb(253,102,54)" fg:x="238" fg:w="1"/><text x="19.7422%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4922%" y="629" width="0.0819%" height="15" fill="rgb(250,173,47)" fg:x="238" fg:w="1"/><text x="19.7422%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.4922%" y="613" width="0.0819%" height="15" fill="rgb(232,142,7)" fg:x="238" fg:w="1"/><text x="19.7422%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.5741%" y="629" width="0.0819%" height="15" fill="rgb(230,157,47)" fg:x="239" fg:w="1"/><text x="19.8241%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5741%" y="613" width="0.0819%" height="15" fill="rgb(214,177,35)" fg:x="239" fg:w="1"/><text x="19.8241%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5741%" y="597" width="0.0819%" height="15" fill="rgb(234,119,46)" fg:x="239" fg:w="1"/><text x="19.8241%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.5741%" y="581" width="0.0819%" height="15" fill="rgb(241,180,50)" fg:x="239" fg:w="1"/><text x="19.8241%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6560%" y="613" width="0.0819%" height="15" fill="rgb(221,54,25)" fg:x="240" fg:w="1"/><text x="19.9060%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6560%" y="597" width="0.0819%" height="15" fill="rgb(209,157,44)" fg:x="240" fg:w="1"/><text x="19.9060%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6560%" y="581" width="0.0819%" height="15" fill="rgb(246,115,41)" fg:x="240" fg:w="1"/><text x="19.9060%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.49%)</title><rect x="19.3284%" y="693" width="0.4914%" height="15" fill="rgb(229,86,1)" fg:x="236" fg:w="6"/><text x="19.5784%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="19.3284%" y="677" width="0.4914%" height="15" fill="rgb(240,108,53)" fg:x="236" fg:w="6"/><text x="19.5784%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.41%)</title><rect x="19.4103%" y="661" width="0.4095%" height="15" fill="rgb(227,134,2)" fg:x="237" fg:w="5"/><text x="19.6603%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.25%)</title><rect x="19.5741%" y="645" width="0.2457%" height="15" fill="rgb(213,129,25)" fg:x="239" fg:w="3"/><text x="19.8241%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.6560%" y="629" width="0.1638%" height="15" fill="rgb(226,35,21)" fg:x="240" fg:w="2"/><text x="19.9060%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="19.7379%" y="613" width="0.0819%" height="15" fill="rgb(208,129,26)" fg:x="241" fg:w="1"/><text x="19.9879%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.7379%" y="597" width="0.0819%" height="15" fill="rgb(224,83,6)" fg:x="241" fg:w="1"/><text x="19.9879%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.7379%" y="581" width="0.0819%" height="15" fill="rgb(227,52,39)" fg:x="241" fg:w="1"/><text x="19.9879%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="19.8198%" y="693" width="0.0819%" height="15" fill="rgb(241,30,17)" fg:x="242" fg:w="1"/><text x="20.0698%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.8198%" y="677" width="0.0819%" height="15" fill="rgb(246,186,42)" fg:x="242" fg:w="1"/><text x="20.0698%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9017%" y="677" width="0.0819%" height="15" fill="rgb(221,169,15)" fg:x="243" fg:w="1"/><text x="20.1517%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="20.0655%" y="661" width="0.1638%" height="15" fill="rgb(235,108,21)" fg:x="245" fg:w="2"/><text x="20.3155%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.3112%" y="613" width="0.0819%" height="15" fill="rgb(219,148,30)" fg:x="248" fg:w="1"/><text x="20.5612%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.3112%" y="597" width="0.0819%" height="15" fill="rgb(220,109,5)" fg:x="248" fg:w="1"/><text x="20.5612%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.3112%" y="581" width="0.0819%" height="15" fill="rgb(213,203,48)" fg:x="248" fg:w="1"/><text x="20.5612%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.3931%" y="613" width="0.0819%" height="15" fill="rgb(244,71,33)" fg:x="249" fg:w="1"/><text x="20.6431%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="20.2293%" y="645" width="0.4095%" height="15" fill="rgb(209,23,2)" fg:x="247" fg:w="5"/><text x="20.4793%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="20.2293%" y="629" width="0.4095%" height="15" fill="rgb(219,97,7)" fg:x="247" fg:w="5"/><text x="20.4793%" y="639.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (2 samples, 0.16%)</title><rect x="20.4750%" y="613" width="0.1638%" height="15" fill="rgb(216,161,23)" fg:x="250" fg:w="2"/><text x="20.7250%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.25%)</title><rect x="20.6388%" y="629" width="0.2457%" height="15" fill="rgb(207,45,42)" fg:x="252" fg:w="3"/><text x="20.8888%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.7207%" y="613" width="0.1638%" height="15" fill="rgb(241,61,4)" fg:x="253" fg:w="2"/><text x="20.9707%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.7207%" y="597" width="0.1638%" height="15" fill="rgb(236,170,1)" fg:x="253" fg:w="2"/><text x="20.9707%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.7207%" y="581" width="0.1638%" height="15" fill="rgb(239,72,5)" fg:x="253" fg:w="2"/><text x="20.9707%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.74%)</title><rect x="20.2293%" y="661" width="0.7371%" height="15" fill="rgb(214,13,50)" fg:x="247" fg:w="9"/><text x="20.4793%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="20.6388%" y="645" width="0.3276%" height="15" fill="rgb(224,88,9)" fg:x="252" fg:w="4"/><text x="20.8888%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="20.8845%" y="629" width="0.0819%" height="15" fill="rgb(238,192,34)" fg:x="255" fg:w="1"/><text x="21.1345%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (37 samples, 3.03%)</title><rect x="18.2637%" y="725" width="3.0303%" height="15" fill="rgb(217,203,50)" fg:x="223" fg:w="37"/><text x="18.5137%" y="735.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (37 samples, 3.03%)</title><rect x="18.2637%" y="709" width="3.0303%" height="15" fill="rgb(241,123,32)" fg:x="223" fg:w="37"/><text x="18.5137%" y="719.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.39%)</title><rect x="19.9017%" y="693" width="1.3923%" height="15" fill="rgb(248,151,39)" fg:x="243" fg:w="17"/><text x="20.1517%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (16 samples, 1.31%)</title><rect x="19.9836%" y="677" width="1.3104%" height="15" fill="rgb(208,89,6)" fg:x="244" fg:w="16"/><text x="20.2336%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="20.9664%" y="661" width="0.3276%" height="15" fill="rgb(254,43,26)" fg:x="256" fg:w="4"/><text x="21.2164%" y="671.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="21.0483%" y="645" width="0.2457%" height="15" fill="rgb(216,158,13)" fg:x="257" fg:w="3"/><text x="21.2983%" y="655.50"></text></g><g><title>kernel::compare::any_entity_changes (39 samples, 3.19%)</title><rect x="18.1818%" y="741" width="3.1941%" height="15" fill="rgb(212,47,37)" fg:x="222" fg:w="39"/><text x="18.4318%" y="751.50">ker..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="21.2940%" y="725" width="0.0819%" height="15" fill="rgb(254,16,10)" fg:x="260" fg:w="1"/><text x="21.5440%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="21.2940%" y="709" width="0.0819%" height="15" fill="rgb(223,228,16)" fg:x="260" fg:w="1"/><text x="21.5440%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.2940%" y="693" width="0.0819%" height="15" fill="rgb(249,108,50)" fg:x="260" fg:w="1"/><text x="21.5440%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.2940%" y="677" width="0.0819%" height="15" fill="rgb(208,220,5)" fg:x="260" fg:w="1"/><text x="21.5440%" y="687.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (87 samples, 7.13%)</title><rect x="14.3325%" y="773" width="7.1253%" height="15" fill="rgb(217,89,48)" fg:x="175" fg:w="87"/><text x="14.5825%" y="783.50">engine::in..</text></g><g><title>engine::session::Session::check_for_changes (87 samples, 7.13%)</title><rect x="14.3325%" y="757" width="7.1253%" height="15" fill="rgb(212,113,41)" fg:x="175" fg:w="87"/><text x="14.5825%" y="767.50">engine::se..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="21.3759%" y="741" width="0.0819%" height="15" fill="rgb(231,127,5)" fg:x="261" fg:w="1"/><text x="21.6259%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.3759%" y="725" width="0.0819%" height="15" fill="rgb(217,141,17)" fg:x="261" fg:w="1"/><text x="21.6259%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.4578%" y="533" width="0.0819%" height="15" fill="rgb(245,125,54)" fg:x="262" fg:w="1"/><text x="21.7078%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.4578%" y="517" width="0.0819%" height="15" fill="rgb(248,125,3)" fg:x="262" fg:w="1"/><text x="21.7078%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="21.4578%" y="501" width="0.0819%" height="15" fill="rgb(236,119,51)" fg:x="262" fg:w="1"/><text x="21.7078%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="21.4578%" y="485" width="0.0819%" height="15" fill="rgb(239,99,8)" fg:x="262" fg:w="1"/><text x="21.7078%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="21.4578%" y="469" width="0.0819%" height="15" fill="rgb(224,228,4)" fg:x="262" fg:w="1"/><text x="21.7078%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="21.4578%" y="453" width="0.0819%" height="15" fill="rgb(220,131,45)" fg:x="262" fg:w="1"/><text x="21.7078%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.4578%" y="437" width="0.0819%" height="15" fill="rgb(215,62,5)" fg:x="262" fg:w="1"/><text x="21.7078%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="21.4578%" y="421" width="0.0819%" height="15" fill="rgb(253,12,24)" fg:x="262" fg:w="1"/><text x="21.7078%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.4578%" y="405" width="0.0819%" height="15" fill="rgb(248,120,50)" fg:x="262" fg:w="1"/><text x="21.7078%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="21.4578%" y="389" width="0.0819%" height="15" fill="rgb(245,194,10)" fg:x="262" fg:w="1"/><text x="21.7078%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.4578%" y="373" width="0.0819%" height="15" fill="rgb(241,149,38)" fg:x="262" fg:w="1"/><text x="21.7078%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="21.4578%" y="357" width="0.0819%" height="15" fill="rgb(219,215,7)" fg:x="262" fg:w="1"/><text x="21.7078%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="21.4578%" y="341" width="0.0819%" height="15" fill="rgb(208,120,31)" fg:x="262" fg:w="1"/><text x="21.7078%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="21.4578%" y="325" width="0.0819%" height="15" fill="rgb(244,30,8)" fg:x="262" fg:w="1"/><text x="21.7078%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.4578%" y="309" width="0.0819%" height="15" fill="rgb(238,35,44)" fg:x="262" fg:w="1"/><text x="21.7078%" y="319.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="21.4578%" y="773" width="0.1638%" height="15" fill="rgb(243,218,37)" fg:x="262" fg:w="2"/><text x="21.7078%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="21.4578%" y="757" width="0.1638%" height="15" fill="rgb(218,169,10)" fg:x="262" fg:w="2"/><text x="21.7078%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="21.4578%" y="741" width="0.1638%" height="15" fill="rgb(221,144,10)" fg:x="262" fg:w="2"/><text x="21.7078%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="21.4578%" y="725" width="0.1638%" height="15" fill="rgb(226,41,38)" fg:x="262" fg:w="2"/><text x="21.7078%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="21.4578%" y="709" width="0.1638%" height="15" fill="rgb(228,3,1)" fg:x="262" fg:w="2"/><text x="21.7078%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.4578%" y="693" width="0.1638%" height="15" fill="rgb(209,129,12)" fg:x="262" fg:w="2"/><text x="21.7078%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="21.4578%" y="677" width="0.1638%" height="15" fill="rgb(213,136,33)" fg:x="262" fg:w="2"/><text x="21.7078%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="21.4578%" y="661" width="0.1638%" height="15" fill="rgb(209,181,29)" fg:x="262" fg:w="2"/><text x="21.7078%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="21.4578%" y="645" width="0.1638%" height="15" fill="rgb(234,173,18)" fg:x="262" fg:w="2"/><text x="21.7078%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.4578%" y="629" width="0.1638%" height="15" fill="rgb(227,73,47)" fg:x="262" fg:w="2"/><text x="21.7078%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="21.4578%" y="613" width="0.1638%" height="15" fill="rgb(234,9,34)" fg:x="262" fg:w="2"/><text x="21.7078%" y="623.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="21.4578%" y="597" width="0.1638%" height="15" fill="rgb(235,172,15)" fg:x="262" fg:w="2"/><text x="21.7078%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="21.4578%" y="581" width="0.1638%" height="15" fill="rgb(245,61,2)" fg:x="262" fg:w="2"/><text x="21.7078%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.4578%" y="565" width="0.1638%" height="15" fill="rgb(238,39,47)" fg:x="262" fg:w="2"/><text x="21.7078%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="21.4578%" y="549" width="0.1638%" height="15" fill="rgb(234,37,24)" fg:x="262" fg:w="2"/><text x="21.7078%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="21.5397%" y="533" width="0.0819%" height="15" fill="rgb(248,223,24)" fg:x="263" fg:w="1"/><text x="21.7897%" y="543.50"></text></g><g><title>engine::session::Session::flush (99 samples, 8.11%)</title><rect x="13.5954%" y="805" width="8.1081%" height="15" fill="rgb(223,12,15)" fg:x="166" fg:w="99"/><text x="13.8454%" y="815.50">engine::ses..</text></g><g><title>engine::session::Session::save_entity_changes (99 samples, 8.11%)</title><rect x="13.5954%" y="789" width="8.1081%" height="15" fill="rgb(249,6,3)" fg:x="166" fg:w="99"/><text x="13.8454%" y="799.50">engine::ses..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="21.6216%" y="773" width="0.0819%" height="15" fill="rgb(237,105,33)" fg:x="264" fg:w="1"/><text x="21.8716%" y="783.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="21.6216%" y="757" width="0.0819%" height="15" fill="rgb(252,208,35)" fg:x="264" fg:w="1"/><text x="21.8716%" y="767.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="21.6216%" y="741" width="0.0819%" height="15" fill="rgb(215,181,35)" fg:x="264" fg:w="1"/><text x="21.8716%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="21.6216%" y="725" width="0.0819%" height="15" fill="rgb(246,212,3)" fg:x="264" fg:w="1"/><text x="21.8716%" y="735.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="21.6216%" y="709" width="0.0819%" height="15" fill="rgb(247,156,24)" fg:x="264" fg:w="1"/><text x="21.8716%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="21.6216%" y="693" width="0.0819%" height="15" fill="rgb(248,9,31)" fg:x="264" fg:w="1"/><text x="21.8716%" y="703.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="21.6216%" y="677" width="0.0819%" height="15" fill="rgb(234,26,45)" fg:x="264" fg:w="1"/><text x="21.8716%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="21.7035%" y="805" width="0.0819%" height="15" fill="rgb(249,11,32)" fg:x="265" fg:w="1"/><text x="21.9535%" y="815.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="21.7035%" y="789" width="0.0819%" height="15" fill="rgb(249,162,33)" fg:x="265" fg:w="1"/><text x="21.9535%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="21.7035%" y="773" width="0.0819%" height="15" fill="rgb(232,4,32)" fg:x="265" fg:w="1"/><text x="21.9535%" y="783.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="21.7035%" y="757" width="0.0819%" height="15" fill="rgb(212,5,45)" fg:x="265" fg:w="1"/><text x="21.9535%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::set_key (1 samples, 0.08%)</title><rect x="21.7854%" y="805" width="0.0819%" height="15" fill="rgb(227,95,13)" fg:x="266" fg:w="1"/><text x="22.0354%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="21.7854%" y="789" width="0.0819%" height="15" fill="rgb(223,205,10)" fg:x="266" fg:w="1"/><text x="22.0354%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7854%" y="773" width="0.0819%" height="15" fill="rgb(222,178,8)" fg:x="266" fg:w="1"/><text x="22.0354%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.7854%" y="757" width="0.0819%" height="15" fill="rgb(216,13,22)" fg:x="266" fg:w="1"/><text x="22.0354%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.7854%" y="741" width="0.0819%" height="15" fill="rgb(240,167,12)" fg:x="266" fg:w="1"/><text x="22.0354%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.7854%" y="725" width="0.0819%" height="15" fill="rgb(235,68,35)" fg:x="266" fg:w="1"/><text x="22.0354%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.7854%" y="709" width="0.0819%" height="15" fill="rgb(253,40,27)" fg:x="266" fg:w="1"/><text x="22.0354%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.7854%" y="693" width="0.0819%" height="15" fill="rgb(214,19,28)" fg:x="266" fg:w="1"/><text x="22.0354%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.7854%" y="677" width="0.0819%" height="15" fill="rgb(210,167,45)" fg:x="266" fg:w="1"/><text x="22.0354%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.7854%" y="661" width="0.0819%" height="15" fill="rgb(232,97,40)" fg:x="266" fg:w="1"/><text x="22.0354%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.7854%" y="645" width="0.0819%" height="15" fill="rgb(250,35,23)" fg:x="266" fg:w="1"/><text x="22.0354%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.7854%" y="629" width="0.0819%" height="15" fill="rgb(248,47,53)" fg:x="266" fg:w="1"/><text x="22.0354%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.7854%" y="613" width="0.0819%" height="15" fill="rgb(226,58,50)" fg:x="266" fg:w="1"/><text x="22.0354%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7854%" y="597" width="0.0819%" height="15" fill="rgb(217,105,26)" fg:x="266" fg:w="1"/><text x="22.0354%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.23%)</title><rect x="21.8673%" y="789" width="1.2285%" height="15" fill="rgb(208,64,1)" fg:x="267" fg:w="15"/><text x="22.1173%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (15 samples, 1.23%)</title><rect x="21.8673%" y="773" width="1.2285%" height="15" fill="rgb(214,80,1)" fg:x="267" fg:w="15"/><text x="22.1173%" y="783.50"></text></g><g><title>engine::internal::EntityMap::add_entity (15 samples, 1.23%)</title><rect x="21.8673%" y="757" width="1.2285%" height="15" fill="rgb(206,175,26)" fg:x="267" fg:w="15"/><text x="22.1173%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 1.23%)</title><rect x="21.8673%" y="741" width="1.2285%" height="15" fill="rgb(235,156,37)" fg:x="267" fg:w="15"/><text x="22.1173%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 1.15%)</title><rect x="21.9492%" y="725" width="1.1466%" height="15" fill="rgb(213,100,9)" fg:x="268" fg:w="14"/><text x="22.1992%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 1.15%)</title><rect x="21.9492%" y="709" width="1.1466%" height="15" fill="rgb(241,15,13)" fg:x="268" fg:w="14"/><text x="22.1992%" y="719.50"></text></g><g><title>__libc_malloc (14 samples, 1.15%)</title><rect x="21.9492%" y="693" width="1.1466%" height="15" fill="rgb(205,97,43)" fg:x="268" fg:w="14"/><text x="22.1992%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="23.0958%" y="773" width="0.1638%" height="15" fill="rgb(216,106,32)" fg:x="282" fg:w="2"/><text x="23.3458%" y="783.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="23.0958%" y="757" width="0.1638%" height="15" fill="rgb(226,200,8)" fg:x="282" fg:w="2"/><text x="23.3458%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1777%" y="741" width="0.0819%" height="15" fill="rgb(244,54,29)" fg:x="283" fg:w="1"/><text x="23.4277%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1777%" y="725" width="0.0819%" height="15" fill="rgb(252,169,12)" fg:x="283" fg:w="1"/><text x="23.4277%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.1777%" y="709" width="0.0819%" height="15" fill="rgb(231,199,11)" fg:x="283" fg:w="1"/><text x="23.4277%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.1777%" y="693" width="0.0819%" height="15" fill="rgb(233,191,18)" fg:x="283" fg:w="1"/><text x="23.4277%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.1777%" y="677" width="0.0819%" height="15" fill="rgb(215,83,47)" fg:x="283" fg:w="1"/><text x="23.4277%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1777%" y="661" width="0.0819%" height="15" fill="rgb(251,67,19)" fg:x="283" fg:w="1"/><text x="23.4277%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1777%" y="645" width="0.0819%" height="15" fill="rgb(240,7,20)" fg:x="283" fg:w="1"/><text x="23.4277%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.1777%" y="629" width="0.0819%" height="15" fill="rgb(210,150,26)" fg:x="283" fg:w="1"/><text x="23.4277%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.1777%" y="613" width="0.0819%" height="15" fill="rgb(228,75,42)" fg:x="283" fg:w="1"/><text x="23.4277%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.1777%" y="597" width="0.0819%" height="15" fill="rgb(237,134,48)" fg:x="283" fg:w="1"/><text x="23.4277%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.1777%" y="581" width="0.0819%" height="15" fill="rgb(205,80,50)" fg:x="283" fg:w="1"/><text x="23.4277%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1777%" y="565" width="0.0819%" height="15" fill="rgb(217,74,48)" fg:x="283" fg:w="1"/><text x="23.4277%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.2596%" y="773" width="0.0819%" height="15" fill="rgb(205,82,50)" fg:x="284" fg:w="1"/><text x="23.5096%" y="783.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="23.2596%" y="757" width="0.0819%" height="15" fill="rgb(228,1,33)" fg:x="284" fg:w="1"/><text x="23.5096%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5053%" y="709" width="0.0819%" height="15" fill="rgb(214,50,23)" fg:x="287" fg:w="1"/><text x="23.7553%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5053%" y="693" width="0.0819%" height="15" fill="rgb(210,62,9)" fg:x="287" fg:w="1"/><text x="23.7553%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5053%" y="677" width="0.0819%" height="15" fill="rgb(210,104,37)" fg:x="287" fg:w="1"/><text x="23.7553%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="23.5053%" y="741" width="0.1638%" height="15" fill="rgb(232,104,43)" fg:x="287" fg:w="2"/><text x="23.7553%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.5053%" y="725" width="0.1638%" height="15" fill="rgb(244,52,6)" fg:x="287" fg:w="2"/><text x="23.7553%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.5872%" y="709" width="0.0819%" height="15" fill="rgb(211,174,52)" fg:x="288" fg:w="1"/><text x="23.8372%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="23.5872%" y="693" width="0.0819%" height="15" fill="rgb(229,48,4)" fg:x="288" fg:w="1"/><text x="23.8372%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5872%" y="677" width="0.0819%" height="15" fill="rgb(205,155,16)" fg:x="288" fg:w="1"/><text x="23.8372%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5872%" y="661" width="0.0819%" height="15" fill="rgb(211,141,53)" fg:x="288" fg:w="1"/><text x="23.8372%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.5872%" y="645" width="0.0819%" height="15" fill="rgb(240,148,11)" fg:x="288" fg:w="1"/><text x="23.8372%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5872%" y="629" width="0.0819%" height="15" fill="rgb(214,45,23)" fg:x="288" fg:w="1"/><text x="23.8372%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.49%)</title><rect x="23.3415%" y="773" width="0.4914%" height="15" fill="rgb(248,74,26)" fg:x="285" fg:w="6"/><text x="23.5915%" y="783.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.41%)</title><rect x="23.4234%" y="757" width="0.4095%" height="15" fill="rgb(218,121,16)" fg:x="286" fg:w="5"/><text x="23.6734%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="23.6691%" y="741" width="0.1638%" height="15" fill="rgb(218,10,47)" fg:x="289" fg:w="2"/><text x="23.9191%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.7510%" y="725" width="0.0819%" height="15" fill="rgb(227,99,14)" fg:x="290" fg:w="1"/><text x="24.0010%" y="735.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="23.7510%" y="709" width="0.0819%" height="15" fill="rgb(229,83,46)" fg:x="290" fg:w="1"/><text x="24.0010%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.7510%" y="693" width="0.0819%" height="15" fill="rgb(228,25,1)" fg:x="290" fg:w="1"/><text x="24.0010%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7510%" y="677" width="0.0819%" height="15" fill="rgb(252,190,15)" fg:x="290" fg:w="1"/><text x="24.0010%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7510%" y="661" width="0.0819%" height="15" fill="rgb(213,103,51)" fg:x="290" fg:w="1"/><text x="24.0010%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7510%" y="645" width="0.0819%" height="15" fill="rgb(220,38,44)" fg:x="290" fg:w="1"/><text x="24.0010%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (25 samples, 2.05%)</title><rect x="21.8673%" y="805" width="2.0475%" height="15" fill="rgb(210,45,26)" fg:x="267" fg:w="25"/><text x="22.1173%" y="815.50">p..</text></g><g><title>plugins_core::tools::set_container (10 samples, 0.82%)</title><rect x="23.0958%" y="789" width="0.8190%" height="15" fill="rgb(205,95,48)" fg:x="282" fg:w="10"/><text x="23.3458%" y="799.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="23.8329%" y="773" width="0.0819%" height="15" fill="rgb(225,179,37)" fg:x="291" fg:w="1"/><text x="24.0829%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="23.8329%" y="757" width="0.0819%" height="15" fill="rgb(230,209,3)" fg:x="291" fg:w="1"/><text x="24.0829%" y="767.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="23.8329%" y="741" width="0.0819%" height="15" fill="rgb(248,12,46)" fg:x="291" fg:w="1"/><text x="24.0829%" y="751.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="23.8329%" y="725" width="0.0819%" height="15" fill="rgb(234,18,0)" fg:x="291" fg:w="1"/><text x="24.0829%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.8329%" y="709" width="0.0819%" height="15" fill="rgb(238,197,14)" fg:x="291" fg:w="1"/><text x="24.0829%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="23.8329%" y="693" width="0.0819%" height="15" fill="rgb(251,162,48)" fg:x="291" fg:w="1"/><text x="24.0829%" y="703.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="23.9967%" y="757" width="0.0819%" height="15" fill="rgb(237,73,42)" fg:x="293" fg:w="1"/><text x="24.2467%" y="767.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="23.9967%" y="741" width="0.0819%" height="15" fill="rgb(211,108,8)" fg:x="293" fg:w="1"/><text x="24.2467%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.9967%" y="725" width="0.0819%" height="15" fill="rgb(213,45,22)" fg:x="293" fg:w="1"/><text x="24.2467%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="23.9967%" y="709" width="0.0819%" height="15" fill="rgb(252,154,5)" fg:x="293" fg:w="1"/><text x="24.2467%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.25%)</title><rect x="23.9148%" y="773" width="0.2457%" height="15" fill="rgb(221,79,52)" fg:x="292" fg:w="3"/><text x="24.1648%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="24.0786%" y="757" width="0.0819%" height="15" fill="rgb(229,220,36)" fg:x="294" fg:w="1"/><text x="24.3286%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0786%" y="741" width="0.0819%" height="15" fill="rgb(211,17,16)" fg:x="294" fg:w="1"/><text x="24.3286%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0786%" y="725" width="0.0819%" height="15" fill="rgb(222,55,31)" fg:x="294" fg:w="1"/><text x="24.3286%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.0786%" y="709" width="0.0819%" height="15" fill="rgb(221,221,31)" fg:x="294" fg:w="1"/><text x="24.3286%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.0786%" y="693" width="0.0819%" height="15" fill="rgb(227,168,26)" fg:x="294" fg:w="1"/><text x="24.3286%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.0786%" y="677" width="0.0819%" height="15" fill="rgb(224,139,9)" fg:x="294" fg:w="1"/><text x="24.3286%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.0786%" y="661" width="0.0819%" height="15" fill="rgb(254,172,0)" fg:x="294" fg:w="1"/><text x="24.3286%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.0786%" y="645" width="0.0819%" height="15" fill="rgb(235,203,1)" fg:x="294" fg:w="1"/><text x="24.3286%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.0786%" y="629" width="0.0819%" height="15" fill="rgb(216,205,24)" fg:x="294" fg:w="1"/><text x="24.3286%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.0786%" y="613" width="0.0819%" height="15" fill="rgb(233,24,6)" fg:x="294" fg:w="1"/><text x="24.3286%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.0786%" y="597" width="0.0819%" height="15" fill="rgb(244,110,9)" fg:x="294" fg:w="1"/><text x="24.3286%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.0786%" y="581" width="0.0819%" height="15" fill="rgb(239,222,42)" fg:x="294" fg:w="1"/><text x="24.3286%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0786%" y="565" width="0.0819%" height="15" fill="rgb(218,145,13)" fg:x="294" fg:w="1"/><text x="24.3286%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.33%)</title><rect x="23.9148%" y="805" width="0.3276%" height="15" fill="rgb(207,69,11)" fg:x="292" fg:w="4"/><text x="24.1648%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="23.9148%" y="789" width="0.3276%" height="15" fill="rgb(220,223,22)" fg:x="292" fg:w="4"/><text x="24.1648%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="24.1605%" y="773" width="0.0819%" height="15" fill="rgb(245,102,5)" fg:x="295" fg:w="1"/><text x="24.4105%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="24.3243%" y="773" width="0.0819%" height="15" fill="rgb(211,148,2)" fg:x="297" fg:w="1"/><text x="24.5743%" y="783.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="24.3243%" y="757" width="0.0819%" height="15" fill="rgb(241,13,44)" fg:x="297" fg:w="1"/><text x="24.5743%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.3243%" y="741" width="0.0819%" height="15" fill="rgb(219,137,21)" fg:x="297" fg:w="1"/><text x="24.5743%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.4062%" y="741" width="0.0819%" height="15" fill="rgb(242,206,5)" fg:x="298" fg:w="1"/><text x="24.6562%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.4062%" y="725" width="0.0819%" height="15" fill="rgb(217,114,22)" fg:x="298" fg:w="1"/><text x="24.6562%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.4062%" y="709" width="0.0819%" height="15" fill="rgb(253,206,42)" fg:x="298" fg:w="1"/><text x="24.6562%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="24.4881%" y="741" width="0.0819%" height="15" fill="rgb(236,102,18)" fg:x="299" fg:w="1"/><text x="24.7381%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.4881%" y="725" width="0.0819%" height="15" fill="rgb(208,59,49)" fg:x="299" fg:w="1"/><text x="24.7381%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.4881%" y="709" width="0.0819%" height="15" fill="rgb(215,194,28)" fg:x="299" fg:w="1"/><text x="24.7381%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="24.4881%" y="693" width="0.0819%" height="15" fill="rgb(243,207,11)" fg:x="299" fg:w="1"/><text x="24.7381%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.4881%" y="677" width="0.0819%" height="15" fill="rgb(254,179,35)" fg:x="299" fg:w="1"/><text x="24.7381%" y="687.50"></text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.41%)</title><rect x="24.2424%" y="805" width="0.4095%" height="15" fill="rgb(235,97,3)" fg:x="296" fg:w="5"/><text x="24.4924%" y="815.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.41%)</title><rect x="24.2424%" y="789" width="0.4095%" height="15" fill="rgb(215,155,33)" fg:x="296" fg:w="5"/><text x="24.4924%" y="799.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.25%)</title><rect x="24.4062%" y="773" width="0.2457%" height="15" fill="rgb(223,128,12)" fg:x="298" fg:w="3"/><text x="24.6562%" y="783.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.25%)</title><rect x="24.4062%" y="757" width="0.2457%" height="15" fill="rgb(208,157,18)" fg:x="298" fg:w="3"/><text x="24.6562%" y="767.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="24.5700%" y="741" width="0.0819%" height="15" fill="rgb(249,70,54)" fg:x="300" fg:w="1"/><text x="24.8200%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.5700%" y="725" width="0.0819%" height="15" fill="rgb(244,118,24)" fg:x="300" fg:w="1"/><text x="24.8200%" y="735.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="24.5700%" y="709" width="0.0819%" height="15" fill="rgb(211,54,0)" fg:x="300" fg:w="1"/><text x="24.8200%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.5700%" y="693" width="0.0819%" height="15" fill="rgb(245,137,45)" fg:x="300" fg:w="1"/><text x="24.8200%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="24.6519%" y="789" width="0.0819%" height="15" fill="rgb(232,154,31)" fg:x="301" fg:w="1"/><text x="24.9019%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="24.6519%" y="773" width="0.0819%" height="15" fill="rgb(253,6,39)" fg:x="301" fg:w="1"/><text x="24.9019%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6519%" y="757" width="0.0819%" height="15" fill="rgb(234,183,24)" fg:x="301" fg:w="1"/><text x="24.9019%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6519%" y="741" width="0.0819%" height="15" fill="rgb(252,84,40)" fg:x="301" fg:w="1"/><text x="24.9019%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6519%" y="725" width="0.0819%" height="15" fill="rgb(224,65,2)" fg:x="301" fg:w="1"/><text x="24.9019%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6519%" y="709" width="0.0819%" height="15" fill="rgb(229,38,24)" fg:x="301" fg:w="1"/><text x="24.9019%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6519%" y="693" width="0.0819%" height="15" fill="rgb(218,131,50)" fg:x="301" fg:w="1"/><text x="24.9019%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6519%" y="677" width="0.0819%" height="15" fill="rgb(233,106,18)" fg:x="301" fg:w="1"/><text x="24.9019%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6519%" y="661" width="0.0819%" height="15" fill="rgb(220,216,11)" fg:x="301" fg:w="1"/><text x="24.9019%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6519%" y="645" width="0.0819%" height="15" fill="rgb(251,100,45)" fg:x="301" fg:w="1"/><text x="24.9019%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.6519%" y="629" width="0.0819%" height="15" fill="rgb(235,143,32)" fg:x="301" fg:w="1"/><text x="24.9019%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.6519%" y="613" width="0.0819%" height="15" fill="rgb(248,124,34)" fg:x="301" fg:w="1"/><text x="24.9019%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.6519%" y="597" width="0.0819%" height="15" fill="rgb(225,221,4)" fg:x="301" fg:w="1"/><text x="24.9019%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.6519%" y="581" width="0.0819%" height="15" fill="rgb(242,27,43)" fg:x="301" fg:w="1"/><text x="24.9019%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6519%" y="565" width="0.0819%" height="15" fill="rgb(227,54,8)" fg:x="301" fg:w="1"/><text x="24.9019%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="24.7338%" y="789" width="0.0819%" height="15" fill="rgb(253,139,49)" fg:x="302" fg:w="1"/><text x="24.9838%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="24.7338%" y="773" width="0.0819%" height="15" fill="rgb(231,26,43)" fg:x="302" fg:w="1"/><text x="24.9838%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.7338%" y="757" width="0.0819%" height="15" fill="rgb(207,121,39)" fg:x="302" fg:w="1"/><text x="24.9838%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.8157%" y="741" width="0.0819%" height="15" fill="rgb(223,101,35)" fg:x="303" fg:w="1"/><text x="25.0657%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (2 samples, 0.16%)</title><rect x="24.8157%" y="773" width="0.1638%" height="15" fill="rgb(232,87,23)" fg:x="303" fg:w="2"/><text x="25.0657%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="24.8157%" y="757" width="0.1638%" height="15" fill="rgb(225,180,29)" fg:x="303" fg:w="2"/><text x="25.0657%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="24.8976%" y="741" width="0.0819%" height="15" fill="rgb(225,25,17)" fg:x="304" fg:w="1"/><text x="25.1476%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.8976%" y="725" width="0.0819%" height="15" fill="rgb(223,8,52)" fg:x="304" fg:w="1"/><text x="25.1476%" y="735.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (152 samples, 12.45%)</title><rect x="12.6945%" y="821" width="12.4488%" height="15" fill="rgb(246,42,21)" fg:x="155" fg:w="152"/><text x="12.9445%" y="831.50">plugins_core::build..</text></g><g><title>plugins_core::build::Build::with_username (6 samples, 0.49%)</title><rect x="24.6519%" y="805" width="0.4914%" height="15" fill="rgb(205,64,43)" fg:x="301" fg:w="6"/><text x="24.9019%" y="815.50"></text></g><g><title>engine::users::model::add_username_to_key (4 samples, 0.33%)</title><rect x="24.8157%" y="789" width="0.3276%" height="15" fill="rgb(221,160,13)" fg:x="303" fg:w="4"/><text x="25.0657%" y="799.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="24.9795%" y="773" width="0.1638%" height="15" fill="rgb(239,58,35)" fg:x="305" fg:w="2"/><text x="25.2295%" y="783.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="25.0614%" y="757" width="0.0819%" height="15" fill="rgb(251,26,40)" fg:x="306" fg:w="1"/><text x="25.3114%" y="767.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="25.0614%" y="741" width="0.0819%" height="15" fill="rgb(247,0,4)" fg:x="306" fg:w="1"/><text x="25.3114%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.0614%" y="725" width="0.0819%" height="15" fill="rgb(218,130,10)" fg:x="306" fg:w="1"/><text x="25.3114%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0614%" y="709" width="0.0819%" height="15" fill="rgb(239,32,7)" fg:x="306" fg:w="1"/><text x="25.3114%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0614%" y="693" width="0.0819%" height="15" fill="rgb(210,192,24)" fg:x="306" fg:w="1"/><text x="25.3114%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="25.1433%" y="805" width="0.0819%" height="15" fill="rgb(226,212,17)" fg:x="307" fg:w="1"/><text x="25.3933%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.25%)</title><rect x="25.2252%" y="773" width="0.2457%" height="15" fill="rgb(219,201,28)" fg:x="308" fg:w="3"/><text x="25.4752%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="25.3071%" y="757" width="0.1638%" height="15" fill="rgb(235,207,41)" fg:x="309" fg:w="2"/><text x="25.5571%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="25.3071%" y="741" width="0.1638%" height="15" fill="rgb(241,95,54)" fg:x="309" fg:w="2"/><text x="25.5571%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="25.3071%" y="725" width="0.1638%" height="15" fill="rgb(248,12,23)" fg:x="309" fg:w="2"/><text x="25.5571%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.3071%" y="709" width="0.1638%" height="15" fill="rgb(228,173,4)" fg:x="309" fg:w="2"/><text x="25.5571%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="25.3071%" y="693" width="0.1638%" height="15" fill="rgb(254,99,5)" fg:x="309" fg:w="2"/><text x="25.5571%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="25.3071%" y="677" width="0.1638%" height="15" fill="rgb(212,184,17)" fg:x="309" fg:w="2"/><text x="25.5571%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="25.3071%" y="661" width="0.1638%" height="15" fill="rgb(252,174,1)" fg:x="309" fg:w="2"/><text x="25.5571%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.3071%" y="645" width="0.1638%" height="15" fill="rgb(241,118,51)" fg:x="309" fg:w="2"/><text x="25.5571%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.3071%" y="629" width="0.1638%" height="15" fill="rgb(227,94,47)" fg:x="309" fg:w="2"/><text x="25.5571%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.3071%" y="613" width="0.1638%" height="15" fill="rgb(229,104,2)" fg:x="309" fg:w="2"/><text x="25.5571%" y="623.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="25.3071%" y="597" width="0.1638%" height="15" fill="rgb(219,28,31)" fg:x="309" fg:w="2"/><text x="25.5571%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="25.3071%" y="581" width="0.1638%" height="15" fill="rgb(233,109,36)" fg:x="309" fg:w="2"/><text x="25.5571%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="25.3071%" y="565" width="0.1638%" height="15" fill="rgb(246,88,11)" fg:x="309" fg:w="2"/><text x="25.5571%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="25.3071%" y="549" width="0.1638%" height="15" fill="rgb(209,212,17)" fg:x="309" fg:w="2"/><text x="25.5571%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="25.3071%" y="533" width="0.1638%" height="15" fill="rgb(243,59,29)" fg:x="309" fg:w="2"/><text x="25.5571%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="25.3071%" y="517" width="0.1638%" height="15" fill="rgb(244,205,48)" fg:x="309" fg:w="2"/><text x="25.5571%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="25.3071%" y="501" width="0.1638%" height="15" fill="rgb(227,30,6)" fg:x="309" fg:w="2"/><text x="25.5571%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="25.3071%" y="485" width="0.1638%" height="15" fill="rgb(220,205,48)" fg:x="309" fg:w="2"/><text x="25.5571%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="25.3071%" y="469" width="0.1638%" height="15" fill="rgb(250,94,14)" fg:x="309" fg:w="2"/><text x="25.5571%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="25.3071%" y="453" width="0.1638%" height="15" fill="rgb(216,119,42)" fg:x="309" fg:w="2"/><text x="25.5571%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="25.3071%" y="437" width="0.1638%" height="15" fill="rgb(232,155,0)" fg:x="309" fg:w="2"/><text x="25.5571%" y="447.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="25.3071%" y="421" width="0.1638%" height="15" fill="rgb(212,24,32)" fg:x="309" fg:w="2"/><text x="25.5571%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="25.3071%" y="405" width="0.1638%" height="15" fill="rgb(216,69,20)" fg:x="309" fg:w="2"/><text x="25.5571%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="25.2252%" y="789" width="0.3276%" height="15" fill="rgb(229,73,31)" fg:x="308" fg:w="4"/><text x="25.4752%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="25.4709%" y="773" width="0.0819%" height="15" fill="rgb(224,219,20)" fg:x="311" fg:w="1"/><text x="25.7209%" y="783.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="25.4709%" y="757" width="0.0819%" height="15" fill="rgb(215,146,41)" fg:x="311" fg:w="1"/><text x="25.7209%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4709%" y="741" width="0.0819%" height="15" fill="rgb(244,71,31)" fg:x="311" fg:w="1"/><text x="25.7209%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4709%" y="725" width="0.0819%" height="15" fill="rgb(224,24,11)" fg:x="311" fg:w="1"/><text x="25.7209%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="25.4709%" y="709" width="0.0819%" height="15" fill="rgb(229,76,15)" fg:x="311" fg:w="1"/><text x="25.7209%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.5528%" y="773" width="0.0819%" height="15" fill="rgb(209,93,2)" fg:x="312" fg:w="1"/><text x="25.8028%" y="783.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.57%)</title><rect x="25.1433%" y="821" width="0.5733%" height="15" fill="rgb(216,200,50)" fg:x="307" fg:w="7"/><text x="25.3933%" y="831.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.49%)</title><rect x="25.2252%" y="805" width="0.4914%" height="15" fill="rgb(211,67,34)" fg:x="308" fg:w="6"/><text x="25.4752%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="25.5528%" y="789" width="0.1638%" height="15" fill="rgb(225,87,47)" fg:x="312" fg:w="2"/><text x="25.8028%" y="799.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="25.6347%" y="773" width="0.0819%" height="15" fill="rgb(217,185,16)" fg:x="313" fg:w="1"/><text x="25.8847%" y="783.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (249 samples, 20.39%)</title><rect x="5.4054%" y="837" width="20.3931%" height="15" fill="rgb(205,0,0)" fg:x="66" fg:w="249"/><text x="5.6554%" y="847.50">&lt;tests::HoldingKeyInVessel as te..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="25.7166%" y="821" width="0.0819%" height="15" fill="rgb(207,116,45)" fg:x="314" fg:w="1"/><text x="25.9666%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.7166%" y="805" width="0.0819%" height="15" fill="rgb(221,156,26)" fg:x="314" fg:w="1"/><text x="25.9666%" y="815.50"></text></g><g><title>engine::internal::Entities::size (1 samples, 0.08%)</title><rect x="25.7985%" y="821" width="0.0819%" height="15" fill="rgb(213,140,4)" fg:x="315" fg:w="1"/><text x="26.0485%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="25.8804%" y="805" width="0.0819%" height="15" fill="rgb(231,224,15)" fg:x="316" fg:w="1"/><text x="26.1304%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="25.9623%" y="805" width="0.0819%" height="15" fill="rgb(244,76,20)" fg:x="317" fg:w="1"/><text x="26.2123%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="26.0442%" y="773" width="0.1638%" height="15" fill="rgb(238,117,7)" fg:x="318" fg:w="2"/><text x="26.2942%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="26.0442%" y="789" width="0.2457%" height="15" fill="rgb(235,1,10)" fg:x="318" fg:w="3"/><text x="26.2942%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2080%" y="773" width="0.0819%" height="15" fill="rgb(216,165,6)" fg:x="320" fg:w="1"/><text x="26.4580%" y="783.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="26.0442%" y="805" width="0.3276%" height="15" fill="rgb(246,91,35)" fg:x="318" fg:w="4"/><text x="26.2942%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2899%" y="789" width="0.0819%" height="15" fill="rgb(228,96,24)" fg:x="321" fg:w="1"/><text x="26.5399%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="26.3718%" y="805" width="0.0819%" height="15" fill="rgb(254,217,53)" fg:x="322" fg:w="1"/><text x="26.6218%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.4537%" y="741" width="0.0819%" height="15" fill="rgb(209,60,0)" fg:x="323" fg:w="1"/><text x="26.7037%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.4537%" y="725" width="0.0819%" height="15" fill="rgb(250,93,26)" fg:x="323" fg:w="1"/><text x="26.7037%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.5356%" y="741" width="0.0819%" height="15" fill="rgb(211,9,40)" fg:x="324" fg:w="1"/><text x="26.7856%" y="751.50"></text></g><g><title>engine::identifiers::model::get_gid (4 samples, 0.33%)</title><rect x="26.4537%" y="805" width="0.3276%" height="15" fill="rgb(242,57,20)" fg:x="323" fg:w="4"/><text x="26.7037%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.33%)</title><rect x="26.4537%" y="789" width="0.3276%" height="15" fill="rgb(248,85,48)" fg:x="323" fg:w="4"/><text x="26.7037%" y="799.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.33%)</title><rect x="26.4537%" y="773" width="0.3276%" height="15" fill="rgb(212,117,2)" fg:x="323" fg:w="4"/><text x="26.7037%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="26.4537%" y="757" width="0.3276%" height="15" fill="rgb(243,19,3)" fg:x="323" fg:w="4"/><text x="26.7037%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.6175%" y="741" width="0.1638%" height="15" fill="rgb(232,217,24)" fg:x="325" fg:w="2"/><text x="26.8675%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="26.6175%" y="725" width="0.1638%" height="15" fill="rgb(224,175,40)" fg:x="325" fg:w="2"/><text x="26.8675%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="26.7813%" y="741" width="0.4095%" height="15" fill="rgb(212,162,32)" fg:x="327" fg:w="5"/><text x="27.0313%" y="751.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="26.8632%" y="725" width="0.3276%" height="15" fill="rgb(215,9,4)" fg:x="328" fg:w="4"/><text x="27.1132%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="26.8632%" y="709" width="0.3276%" height="15" fill="rgb(242,42,7)" fg:x="328" fg:w="4"/><text x="27.1132%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.0270%" y="693" width="0.1638%" height="15" fill="rgb(242,184,45)" fg:x="330" fg:w="2"/><text x="27.2770%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.1089%" y="677" width="0.0819%" height="15" fill="rgb(228,111,51)" fg:x="331" fg:w="1"/><text x="27.3589%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.1089%" y="661" width="0.0819%" height="15" fill="rgb(236,147,17)" fg:x="331" fg:w="1"/><text x="27.3589%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.1089%" y="645" width="0.0819%" height="15" fill="rgb(210,75,22)" fg:x="331" fg:w="1"/><text x="27.3589%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.74%)</title><rect x="26.7813%" y="757" width="0.7371%" height="15" fill="rgb(217,159,45)" fg:x="327" fg:w="9"/><text x="27.0313%" y="767.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="27.1908%" y="741" width="0.3276%" height="15" fill="rgb(245,165,53)" fg:x="332" fg:w="4"/><text x="27.4408%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="27.2727%" y="725" width="0.2457%" height="15" fill="rgb(251,190,50)" fg:x="333" fg:w="3"/><text x="27.5227%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.3546%" y="709" width="0.1638%" height="15" fill="rgb(208,203,29)" fg:x="334" fg:w="2"/><text x="27.6046%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.4365%" y="693" width="0.0819%" height="15" fill="rgb(207,209,35)" fg:x="335" fg:w="1"/><text x="27.6865%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.4365%" y="677" width="0.0819%" height="15" fill="rgb(230,144,49)" fg:x="335" fg:w="1"/><text x="27.6865%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.4365%" y="661" width="0.0819%" height="15" fill="rgb(229,31,6)" fg:x="335" fg:w="1"/><text x="27.6865%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="27.6003%" y="741" width="0.2457%" height="15" fill="rgb(251,129,24)" fg:x="337" fg:w="3"/><text x="27.8503%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.6822%" y="725" width="0.1638%" height="15" fill="rgb(235,105,15)" fg:x="338" fg:w="2"/><text x="27.9322%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="27.7641%" y="709" width="0.0819%" height="15" fill="rgb(216,52,43)" fg:x="339" fg:w="1"/><text x="28.0141%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.7641%" y="693" width="0.0819%" height="15" fill="rgb(238,144,41)" fg:x="339" fg:w="1"/><text x="28.0141%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.7641%" y="677" width="0.0819%" height="15" fill="rgb(243,63,9)" fg:x="339" fg:w="1"/><text x="28.0141%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.7641%" y="661" width="0.0819%" height="15" fill="rgb(246,208,1)" fg:x="339" fg:w="1"/><text x="28.0141%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.7641%" y="645" width="0.0819%" height="15" fill="rgb(233,182,18)" fg:x="339" fg:w="1"/><text x="28.0141%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.0098%" y="693" width="0.1638%" height="15" fill="rgb(242,224,8)" fg:x="342" fg:w="2"/><text x="28.2598%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.0917%" y="677" width="0.0819%" height="15" fill="rgb(243,54,37)" fg:x="343" fg:w="1"/><text x="28.3417%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.0917%" y="661" width="0.0819%" height="15" fill="rgb(233,192,12)" fg:x="343" fg:w="1"/><text x="28.3417%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.0917%" y="645" width="0.0819%" height="15" fill="rgb(251,192,53)" fg:x="343" fg:w="1"/><text x="28.3417%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="28.1736%" y="693" width="0.1638%" height="15" fill="rgb(246,141,26)" fg:x="344" fg:w="2"/><text x="28.4236%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.1736%" y="677" width="0.1638%" height="15" fill="rgb(239,195,19)" fg:x="344" fg:w="2"/><text x="28.4236%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.1736%" y="661" width="0.1638%" height="15" fill="rgb(241,16,39)" fg:x="344" fg:w="2"/><text x="28.4236%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.2555%" y="645" width="0.0819%" height="15" fill="rgb(223,13,53)" fg:x="345" fg:w="1"/><text x="28.5055%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.2555%" y="629" width="0.0819%" height="15" fill="rgb(214,227,0)" fg:x="345" fg:w="1"/><text x="28.5055%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="28.0098%" y="725" width="0.4095%" height="15" fill="rgb(228,103,26)" fg:x="342" fg:w="5"/><text x="28.2598%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="28.0098%" y="709" width="0.4095%" height="15" fill="rgb(254,177,53)" fg:x="342" fg:w="5"/><text x="28.2598%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.3374%" y="693" width="0.0819%" height="15" fill="rgb(208,201,34)" fg:x="346" fg:w="1"/><text x="28.5874%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="28.4193%" y="725" width="0.3276%" height="15" fill="rgb(212,39,5)" fg:x="347" fg:w="4"/><text x="28.6693%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="28.5012%" y="709" width="0.2457%" height="15" fill="rgb(246,117,3)" fg:x="348" fg:w="3"/><text x="28.7512%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.5831%" y="693" width="0.1638%" height="15" fill="rgb(244,118,39)" fg:x="349" fg:w="2"/><text x="28.8331%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.5831%" y="677" width="0.1638%" height="15" fill="rgb(241,64,10)" fg:x="349" fg:w="2"/><text x="28.8331%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.8288%" y="709" width="0.1638%" height="15" fill="rgb(229,39,44)" fg:x="352" fg:w="2"/><text x="29.0788%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="28.9926%" y="693" width="0.1638%" height="15" fill="rgb(230,226,3)" fg:x="354" fg:w="2"/><text x="29.2426%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.9926%" y="677" width="0.1638%" height="15" fill="rgb(222,13,42)" fg:x="354" fg:w="2"/><text x="29.2426%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="29.1564%" y="693" width="0.2457%" height="15" fill="rgb(247,180,54)" fg:x="356" fg:w="3"/><text x="29.4064%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="29.1564%" y="677" width="0.2457%" height="15" fill="rgb(205,96,16)" fg:x="356" fg:w="3"/><text x="29.4064%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.2383%" y="661" width="0.1638%" height="15" fill="rgb(205,100,21)" fg:x="357" fg:w="2"/><text x="29.4883%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.2383%" y="645" width="0.1638%" height="15" fill="rgb(248,51,4)" fg:x="357" fg:w="2"/><text x="29.4883%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.64%)</title><rect x="27.8460%" y="741" width="1.6380%" height="15" fill="rgb(217,197,30)" fg:x="340" fg:w="20"/><text x="28.0960%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.74%)</title><rect x="28.7469%" y="725" width="0.7371%" height="15" fill="rgb(240,179,40)" fg:x="351" fg:w="9"/><text x="28.9969%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="28.9926%" y="709" width="0.4914%" height="15" fill="rgb(212,185,35)" fg:x="354" fg:w="6"/><text x="29.2426%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.4021%" y="693" width="0.0819%" height="15" fill="rgb(251,222,31)" fg:x="359" fg:w="1"/><text x="29.6521%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (39 samples, 3.19%)</title><rect x="26.7813%" y="773" width="3.1941%" height="15" fill="rgb(208,140,36)" fg:x="327" fg:w="39"/><text x="27.0313%" y="783.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.46%)</title><rect x="27.5184%" y="757" width="2.4570%" height="15" fill="rgb(220,148,1)" fg:x="336" fg:w="30"/><text x="27.7684%" y="767.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="29.4840%" y="741" width="0.4914%" height="15" fill="rgb(254,4,28)" fg:x="360" fg:w="6"/><text x="29.7340%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.41%)</title><rect x="29.5659%" y="725" width="0.4095%" height="15" fill="rgb(222,185,44)" fg:x="361" fg:w="5"/><text x="29.8159%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="29.7297%" y="709" width="0.2457%" height="15" fill="rgb(215,74,39)" fg:x="363" fg:w="3"/><text x="29.9797%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="29.8116%" y="693" width="0.1638%" height="15" fill="rgb(247,86,4)" fg:x="364" fg:w="2"/><text x="30.0616%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="29.8116%" y="677" width="0.1638%" height="15" fill="rgb(231,105,32)" fg:x="364" fg:w="2"/><text x="30.0616%" y="687.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="29.8116%" y="661" width="0.1638%" height="15" fill="rgb(222,65,35)" fg:x="364" fg:w="2"/><text x="30.0616%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.0573%" y="741" width="0.0819%" height="15" fill="rgb(218,145,35)" fg:x="367" fg:w="1"/><text x="30.3073%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.2211%" y="725" width="0.1638%" height="15" fill="rgb(208,7,15)" fg:x="369" fg:w="2"/><text x="30.4711%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.25%)</title><rect x="30.3849%" y="725" width="0.2457%" height="15" fill="rgb(209,83,13)" fg:x="371" fg:w="3"/><text x="30.6349%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.4668%" y="709" width="0.1638%" height="15" fill="rgb(218,3,10)" fg:x="372" fg:w="2"/><text x="30.7168%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7944%" y="693" width="0.0819%" height="15" fill="rgb(211,219,4)" fg:x="376" fg:w="1"/><text x="31.0444%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.8763%" y="693" width="0.0819%" height="15" fill="rgb(228,194,12)" fg:x="377" fg:w="1"/><text x="31.1263%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="30.9582%" y="693" width="0.0819%" height="15" fill="rgb(210,175,7)" fg:x="378" fg:w="1"/><text x="31.2082%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.15%)</title><rect x="29.9754%" y="773" width="1.1466%" height="15" fill="rgb(243,132,6)" fg:x="366" fg:w="14"/><text x="30.2254%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.15%)</title><rect x="29.9754%" y="757" width="1.1466%" height="15" fill="rgb(207,72,18)" fg:x="366" fg:w="14"/><text x="30.2254%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.98%)</title><rect x="30.1392%" y="741" width="0.9828%" height="15" fill="rgb(236,1,18)" fg:x="368" fg:w="12"/><text x="30.3892%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="30.6306%" y="725" width="0.4914%" height="15" fill="rgb(227,0,18)" fg:x="374" fg:w="6"/><text x="30.8806%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="30.7125%" y="709" width="0.4095%" height="15" fill="rgb(247,37,5)" fg:x="375" fg:w="5"/><text x="30.9625%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.0401%" y="693" width="0.0819%" height="15" fill="rgb(237,179,24)" fg:x="379" fg:w="1"/><text x="31.2901%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.0401%" y="677" width="0.0819%" height="15" fill="rgb(226,53,20)" fg:x="379" fg:w="1"/><text x="31.2901%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.0401%" y="661" width="0.0819%" height="15" fill="rgb(247,75,7)" fg:x="379" fg:w="1"/><text x="31.2901%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1220%" y="757" width="0.0819%" height="15" fill="rgb(233,96,12)" fg:x="380" fg:w="1"/><text x="31.3720%" y="767.50"></text></g><g><title>__libc_free (7 samples, 0.57%)</title><rect x="31.2039%" y="725" width="0.5733%" height="15" fill="rgb(224,125,0)" fg:x="381" fg:w="7"/><text x="31.4539%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.7772%" y="725" width="0.0819%" height="15" fill="rgb(224,92,25)" fg:x="388" fg:w="1"/><text x="32.0272%" y="735.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="32.0229%" y="709" width="0.2457%" height="15" fill="rgb(224,42,24)" fg:x="391" fg:w="3"/><text x="32.2729%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.33%)</title><rect x="32.2686%" y="709" width="0.3276%" height="15" fill="rgb(234,132,49)" fg:x="394" fg:w="4"/><text x="32.5186%" y="719.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="32.3505%" y="693" width="0.2457%" height="15" fill="rgb(248,100,35)" fg:x="395" fg:w="3"/><text x="32.6005%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6781%" y="693" width="0.0819%" height="15" fill="rgb(239,94,40)" fg:x="399" fg:w="1"/><text x="32.9281%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.41%)</title><rect x="32.7600%" y="693" width="0.4095%" height="15" fill="rgb(235,139,28)" fg:x="400" fg:w="5"/><text x="33.0100%" y="703.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="32.9238%" y="677" width="0.2457%" height="15" fill="rgb(217,144,7)" fg:x="402" fg:w="3"/><text x="33.1738%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1695%" y="677" width="0.0819%" height="15" fill="rgb(227,55,4)" fg:x="405" fg:w="1"/><text x="33.4195%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (28 samples, 2.29%)</title><rect x="31.2039%" y="757" width="2.2932%" height="15" fill="rgb(252,82,54)" fg:x="381" fg:w="28"/><text x="31.4539%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (28 samples, 2.29%)</title><rect x="31.2039%" y="741" width="2.2932%" height="15" fill="rgb(245,172,4)" fg:x="381" fg:w="28"/><text x="31.4539%" y="751.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.64%)</title><rect x="31.8591%" y="725" width="1.6380%" height="15" fill="rgb(207,26,27)" fg:x="389" fg:w="20"/><text x="32.1091%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="32.5962%" y="709" width="0.9009%" height="15" fill="rgb(252,98,18)" fg:x="398" fg:w="11"/><text x="32.8462%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="33.1695%" y="693" width="0.3276%" height="15" fill="rgb(244,8,26)" fg:x="405" fg:w="4"/><text x="33.4195%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.25%)</title><rect x="33.2514%" y="677" width="0.2457%" height="15" fill="rgb(237,173,45)" fg:x="406" fg:w="3"/><text x="33.5014%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.3333%" y="661" width="0.1638%" height="15" fill="rgb(208,213,49)" fg:x="407" fg:w="2"/><text x="33.5833%" y="671.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="33.9066%" y="725" width="0.2457%" height="15" fill="rgb(212,122,37)" fg:x="414" fg:w="3"/><text x="34.1566%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.57%)</title><rect x="34.1523%" y="725" width="0.5733%" height="15" fill="rgb(213,80,17)" fg:x="417" fg:w="7"/><text x="34.4023%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="34.3980%" y="709" width="0.3276%" height="15" fill="rgb(206,210,43)" fg:x="420" fg:w="4"/><text x="34.6480%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="34.5618%" y="693" width="0.1638%" height="15" fill="rgb(229,214,3)" fg:x="422" fg:w="2"/><text x="34.8118%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="34.7256%" y="725" width="0.0819%" height="15" fill="rgb(235,213,29)" fg:x="424" fg:w="1"/><text x="34.9756%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="34.8894%" y="709" width="0.0819%" height="15" fill="rgb(248,135,26)" fg:x="426" fg:w="1"/><text x="35.1394%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.33%)</title><rect x="34.8075%" y="725" width="0.3276%" height="15" fill="rgb(242,188,12)" fg:x="425" fg:w="4"/><text x="35.0575%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.9713%" y="709" width="0.1638%" height="15" fill="rgb(245,38,12)" fg:x="427" fg:w="2"/><text x="35.2213%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.1351%" y="693" width="0.0819%" height="15" fill="rgb(218,42,13)" fg:x="429" fg:w="1"/><text x="35.3851%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.1351%" y="677" width="0.0819%" height="15" fill="rgb(238,132,49)" fg:x="429" fg:w="1"/><text x="35.3851%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1351%" y="661" width="0.0819%" height="15" fill="rgb(209,196,19)" fg:x="429" fg:w="1"/><text x="35.3851%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="35.4627%" y="677" width="0.2457%" height="15" fill="rgb(244,131,22)" fg:x="433" fg:w="3"/><text x="35.7127%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="35.4627%" y="661" width="0.2457%" height="15" fill="rgb(223,18,34)" fg:x="433" fg:w="3"/><text x="35.7127%" y="671.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="35.4627%" y="645" width="0.2457%" height="15" fill="rgb(252,124,54)" fg:x="433" fg:w="3"/><text x="35.7127%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.7084%" y="645" width="0.0819%" height="15" fill="rgb(229,106,42)" fg:x="436" fg:w="1"/><text x="35.9584%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.7084%" y="629" width="0.0819%" height="15" fill="rgb(221,129,1)" fg:x="436" fg:w="1"/><text x="35.9584%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="35.7084%" y="613" width="0.0819%" height="15" fill="rgb(229,74,15)" fg:x="436" fg:w="1"/><text x="35.9584%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="35.7084%" y="661" width="0.1638%" height="15" fill="rgb(210,206,50)" fg:x="436" fg:w="2"/><text x="35.9584%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.7903%" y="645" width="0.0819%" height="15" fill="rgb(251,114,31)" fg:x="437" fg:w="1"/><text x="36.0403%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.8722%" y="645" width="0.1638%" height="15" fill="rgb(215,225,28)" fg:x="438" fg:w="2"/><text x="36.1222%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.9541%" y="629" width="0.0819%" height="15" fill="rgb(237,109,14)" fg:x="439" fg:w="1"/><text x="36.2041%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9541%" y="613" width="0.0819%" height="15" fill="rgb(230,13,37)" fg:x="439" fg:w="1"/><text x="36.2041%" y="623.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="36.0360%" y="645" width="0.0819%" height="15" fill="rgb(231,40,28)" fg:x="440" fg:w="1"/><text x="36.2860%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2817%" y="613" width="0.0819%" height="15" fill="rgb(231,202,18)" fg:x="443" fg:w="1"/><text x="36.5317%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2817%" y="597" width="0.0819%" height="15" fill="rgb(225,33,18)" fg:x="443" fg:w="1"/><text x="36.5317%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.2817%" y="581" width="0.0819%" height="15" fill="rgb(223,64,47)" fg:x="443" fg:w="1"/><text x="36.5317%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (17 samples, 1.39%)</title><rect x="35.1351%" y="725" width="1.3923%" height="15" fill="rgb(234,114,13)" fg:x="429" fg:w="17"/><text x="35.3851%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.39%)</title><rect x="35.1351%" y="709" width="1.3923%" height="15" fill="rgb(248,56,40)" fg:x="429" fg:w="17"/><text x="35.3851%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.31%)</title><rect x="35.2170%" y="693" width="1.3104%" height="15" fill="rgb(221,194,21)" fg:x="430" fg:w="16"/><text x="35.4670%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (10 samples, 0.82%)</title><rect x="35.7084%" y="677" width="0.8190%" height="15" fill="rgb(242,108,46)" fg:x="436" fg:w="10"/><text x="35.9584%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.66%)</title><rect x="35.8722%" y="661" width="0.6552%" height="15" fill="rgb(220,106,10)" fg:x="438" fg:w="8"/><text x="36.1222%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (5 samples, 0.41%)</title><rect x="36.1179%" y="645" width="0.4095%" height="15" fill="rgb(211,88,4)" fg:x="441" fg:w="5"/><text x="36.3679%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="36.1998%" y="629" width="0.3276%" height="15" fill="rgb(214,95,34)" fg:x="442" fg:w="4"/><text x="36.4498%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="36.3636%" y="613" width="0.1638%" height="15" fill="rgb(250,160,33)" fg:x="444" fg:w="2"/><text x="36.6136%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="36.4455%" y="597" width="0.0819%" height="15" fill="rgb(225,29,10)" fg:x="445" fg:w="1"/><text x="36.6955%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (2 samples, 0.16%)</title><rect x="36.5274%" y="725" width="0.1638%" height="15" fill="rgb(224,28,30)" fg:x="446" fg:w="2"/><text x="36.7774%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.6093%" y="709" width="0.0819%" height="15" fill="rgb(231,77,4)" fg:x="447" fg:w="1"/><text x="36.8593%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="37.1007%" y="709" width="0.0819%" height="15" fill="rgb(209,63,21)" fg:x="453" fg:w="1"/><text x="37.3507%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1826%" y="709" width="0.0819%" height="15" fill="rgb(226,22,11)" fg:x="454" fg:w="1"/><text x="37.4326%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2645%" y="709" width="0.0819%" height="15" fill="rgb(216,82,30)" fg:x="455" fg:w="1"/><text x="37.5145%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2645%" y="693" width="0.0819%" height="15" fill="rgb(246,227,38)" fg:x="455" fg:w="1"/><text x="37.5145%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.2645%" y="677" width="0.0819%" height="15" fill="rgb(251,203,53)" fg:x="455" fg:w="1"/><text x="37.5145%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="37.3464%" y="693" width="0.0819%" height="15" fill="rgb(254,101,1)" fg:x="456" fg:w="1"/><text x="37.5964%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="37.4283%" y="661" width="0.0819%" height="15" fill="rgb(241,180,5)" fg:x="457" fg:w="1"/><text x="37.6783%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.6740%" y="629" width="0.1638%" height="15" fill="rgb(218,168,4)" fg:x="460" fg:w="2"/><text x="37.9240%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7559%" y="613" width="0.0819%" height="15" fill="rgb(224,223,32)" fg:x="461" fg:w="1"/><text x="38.0059%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7559%" y="597" width="0.0819%" height="15" fill="rgb(236,106,22)" fg:x="461" fg:w="1"/><text x="38.0059%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.57%)</title><rect x="37.4283%" y="677" width="0.5733%" height="15" fill="rgb(206,121,5)" fg:x="457" fg:w="7"/><text x="37.6783%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="37.5102%" y="661" width="0.4914%" height="15" fill="rgb(233,87,28)" fg:x="458" fg:w="6"/><text x="37.7602%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="37.5921%" y="645" width="0.4095%" height="15" fill="rgb(236,137,17)" fg:x="459" fg:w="5"/><text x="37.8421%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="37.8378%" y="629" width="0.1638%" height="15" fill="rgb(209,183,38)" fg:x="462" fg:w="2"/><text x="38.0878%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9197%" y="613" width="0.0819%" height="15" fill="rgb(206,162,44)" fg:x="463" fg:w="1"/><text x="38.1697%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="38.2473%" y="661" width="0.0819%" height="15" fill="rgb(237,70,39)" fg:x="467" fg:w="1"/><text x="38.4973%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4930%" y="613" width="0.0819%" height="15" fill="rgb(212,176,5)" fg:x="470" fg:w="1"/><text x="38.7430%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="38.4111%" y="645" width="0.2457%" height="15" fill="rgb(232,95,16)" fg:x="469" fg:w="3"/><text x="38.6611%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="38.4111%" y="629" width="0.2457%" height="15" fill="rgb(219,115,35)" fg:x="469" fg:w="3"/><text x="38.6611%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.5749%" y="613" width="0.0819%" height="15" fill="rgb(251,67,27)" fg:x="471" fg:w="1"/><text x="38.8249%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.47%)</title><rect x="37.4283%" y="693" width="1.4742%" height="15" fill="rgb(222,95,40)" fg:x="457" fg:w="18"/><text x="37.6783%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.90%)</title><rect x="38.0016%" y="677" width="0.9009%" height="15" fill="rgb(250,35,16)" fg:x="464" fg:w="11"/><text x="38.2516%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="38.3292%" y="661" width="0.5733%" height="15" fill="rgb(224,86,44)" fg:x="468" fg:w="7"/><text x="38.5792%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="38.6568%" y="645" width="0.2457%" height="15" fill="rgb(237,53,53)" fg:x="472" fg:w="3"/><text x="38.9068%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8206%" y="629" width="0.0819%" height="15" fill="rgb(208,171,33)" fg:x="474" fg:w="1"/><text x="39.0706%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (68 samples, 5.57%)</title><rect x="33.4971%" y="757" width="5.5692%" height="15" fill="rgb(222,64,27)" fg:x="409" fg:w="68"/><text x="33.7471%" y="767.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (68 samples, 5.57%)</title><rect x="33.4971%" y="741" width="5.5692%" height="15" fill="rgb(221,121,35)" fg:x="409" fg:w="68"/><text x="33.7471%" y="751.50">&lt;serde_..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.38%)</title><rect x="36.6912%" y="725" width="2.3751%" height="15" fill="rgb(228,137,42)" fg:x="448" fg:w="29"/><text x="36.9412%" y="735.50">se..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (21 samples, 1.72%)</title><rect x="37.3464%" y="709" width="1.7199%" height="15" fill="rgb(227,54,21)" fg:x="456" fg:w="21"/><text x="37.5964%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="38.9025%" y="693" width="0.1638%" height="15" fill="rgb(240,168,33)" fg:x="475" fg:w="2"/><text x="39.1525%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="38.9844%" y="677" width="0.0819%" height="15" fill="rgb(243,159,6)" fg:x="476" fg:w="1"/><text x="39.2344%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="39.9672%" y="581" width="0.0819%" height="15" fill="rgb(205,211,41)" fg:x="488" fg:w="1"/><text x="40.2172%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="39.9672%" y="613" width="0.1638%" height="15" fill="rgb(253,30,1)" fg:x="488" fg:w="2"/><text x="40.2172%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="39.9672%" y="597" width="0.1638%" height="15" fill="rgb(226,80,18)" fg:x="488" fg:w="2"/><text x="40.2172%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.0491%" y="581" width="0.0819%" height="15" fill="rgb(253,156,46)" fg:x="489" fg:w="1"/><text x="40.2991%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.2129%" y="581" width="0.1638%" height="15" fill="rgb(248,87,27)" fg:x="491" fg:w="2"/><text x="40.4629%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.2129%" y="565" width="0.1638%" height="15" fill="rgb(227,122,2)" fg:x="491" fg:w="2"/><text x="40.4629%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.2129%" y="549" width="0.1638%" height="15" fill="rgb(229,94,39)" fg:x="491" fg:w="2"/><text x="40.4629%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.2129%" y="533" width="0.1638%" height="15" fill="rgb(225,173,31)" fg:x="491" fg:w="2"/><text x="40.4629%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="40.2129%" y="597" width="0.2457%" height="15" fill="rgb(239,176,30)" fg:x="491" fg:w="3"/><text x="40.4629%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3767%" y="581" width="0.0819%" height="15" fill="rgb(212,104,21)" fg:x="493" fg:w="1"/><text x="40.6267%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="40.4586%" y="597" width="0.1638%" height="15" fill="rgb(240,209,40)" fg:x="494" fg:w="2"/><text x="40.7086%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="40.4586%" y="581" width="0.1638%" height="15" fill="rgb(234,195,5)" fg:x="494" fg:w="2"/><text x="40.7086%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.66%)</title><rect x="40.1310%" y="613" width="0.6552%" height="15" fill="rgb(238,213,1)" fg:x="490" fg:w="8"/><text x="40.3810%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.6224%" y="597" width="0.1638%" height="15" fill="rgb(235,182,54)" fg:x="496" fg:w="2"/><text x="40.8724%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.7043%" y="581" width="0.0819%" height="15" fill="rgb(229,50,46)" fg:x="497" fg:w="1"/><text x="40.9543%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.98%)</title><rect x="39.8853%" y="629" width="0.9828%" height="15" fill="rgb(219,145,13)" fg:x="487" fg:w="12"/><text x="40.1353%" y="639.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="40.7862%" y="613" width="0.0819%" height="15" fill="rgb(220,226,10)" fg:x="498" fg:w="1"/><text x="41.0362%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="40.8681%" y="629" width="0.1638%" height="15" fill="rgb(248,47,30)" fg:x="499" fg:w="2"/><text x="41.1181%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="40.8681%" y="613" width="0.1638%" height="15" fill="rgb(231,209,44)" fg:x="499" fg:w="2"/><text x="41.1181%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.64%)</title><rect x="39.5577%" y="661" width="1.6380%" height="15" fill="rgb(209,80,30)" fg:x="483" fg:w="20"/><text x="39.8077%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.39%)</title><rect x="39.8034%" y="645" width="1.3923%" height="15" fill="rgb(232,9,14)" fg:x="486" fg:w="17"/><text x="40.0534%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.0319%" y="629" width="0.1638%" height="15" fill="rgb(243,91,43)" fg:x="501" fg:w="2"/><text x="41.2819%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.0319%" y="613" width="0.1638%" height="15" fill="rgb(231,90,52)" fg:x="501" fg:w="2"/><text x="41.2819%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1138%" y="597" width="0.0819%" height="15" fill="rgb(253,192,44)" fg:x="502" fg:w="1"/><text x="41.3638%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.25%)</title><rect x="41.1957%" y="661" width="0.2457%" height="15" fill="rgb(241,66,31)" fg:x="503" fg:w="3"/><text x="41.4457%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3595%" y="645" width="0.0819%" height="15" fill="rgb(235,81,37)" fg:x="505" fg:w="1"/><text x="41.6095%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5233%" y="629" width="0.0819%" height="15" fill="rgb(223,221,9)" fg:x="507" fg:w="1"/><text x="41.7733%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.62%)</title><rect x="39.1482%" y="693" width="2.6208%" height="15" fill="rgb(242,180,7)" fg:x="478" fg:w="32"/><text x="39.3982%" y="703.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.38%)</title><rect x="39.3939%" y="677" width="2.3751%" height="15" fill="rgb(243,78,19)" fg:x="481" fg:w="29"/><text x="39.6439%" y="687.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="41.4414%" y="661" width="0.3276%" height="15" fill="rgb(233,23,17)" fg:x="506" fg:w="4"/><text x="41.6914%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="41.4414%" y="645" width="0.3276%" height="15" fill="rgb(252,122,45)" fg:x="506" fg:w="4"/><text x="41.6914%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="41.6052%" y="629" width="0.1638%" height="15" fill="rgb(247,108,20)" fg:x="508" fg:w="2"/><text x="41.8552%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="41.7690%" y="693" width="0.1638%" height="15" fill="rgb(235,84,21)" fg:x="510" fg:w="2"/><text x="42.0190%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="41.8509%" y="677" width="0.0819%" height="15" fill="rgb(247,129,10)" fg:x="511" fg:w="1"/><text x="42.1009%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (38 samples, 3.11%)</title><rect x="39.0663%" y="757" width="3.1122%" height="15" fill="rgb(208,173,14)" fg:x="477" fg:w="38"/><text x="39.3163%" y="767.50">ser..</text></g><g><title>serde_json::de::from_trait (38 samples, 3.11%)</title><rect x="39.0663%" y="741" width="3.1122%" height="15" fill="rgb(236,31,38)" fg:x="477" fg:w="38"/><text x="39.3163%" y="751.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (38 samples, 3.11%)</title><rect x="39.0663%" y="725" width="3.1122%" height="15" fill="rgb(232,65,17)" fg:x="477" fg:w="38"/><text x="39.3163%" y="735.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (38 samples, 3.11%)</title><rect x="39.0663%" y="709" width="3.1122%" height="15" fill="rgb(224,45,49)" fg:x="477" fg:w="38"/><text x="39.3163%" y="719.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="41.9328%" y="693" width="0.2457%" height="15" fill="rgb(225,2,53)" fg:x="512" fg:w="3"/><text x="42.1828%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.0966%" y="677" width="0.0819%" height="15" fill="rgb(248,210,53)" fg:x="514" fg:w="1"/><text x="42.3466%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.0966%" y="661" width="0.0819%" height="15" fill="rgb(211,1,30)" fg:x="514" fg:w="1"/><text x="42.3466%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.49%)</title><rect x="42.2604%" y="725" width="0.4914%" height="15" fill="rgb(224,96,15)" fg:x="516" fg:w="6"/><text x="42.5104%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="42.3423%" y="709" width="0.4095%" height="15" fill="rgb(252,45,11)" fg:x="517" fg:w="5"/><text x="42.5923%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="42.5061%" y="693" width="0.2457%" height="15" fill="rgb(220,125,38)" fg:x="519" fg:w="3"/><text x="42.7561%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="42.6699%" y="677" width="0.0819%" height="15" fill="rgb(243,161,33)" fg:x="521" fg:w="1"/><text x="42.9199%" y="687.50"></text></g><g><title>kernel::compare::any_entity_changes (143 samples, 11.71%)</title><rect x="31.1220%" y="773" width="11.7117%" height="15" fill="rgb(248,197,34)" fg:x="380" fg:w="143"/><text x="31.3720%" y="783.50">kernel::compare::..</text></g><g><title>treediff::diff::diff (8 samples, 0.66%)</title><rect x="42.1785%" y="757" width="0.6552%" height="15" fill="rgb(228,165,23)" fg:x="515" fg:w="8"/><text x="42.4285%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.66%)</title><rect x="42.1785%" y="741" width="0.6552%" height="15" fill="rgb(236,94,38)" fg:x="515" fg:w="8"/><text x="42.4285%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.7518%" y="725" width="0.0819%" height="15" fill="rgb(220,13,23)" fg:x="522" fg:w="1"/><text x="43.0018%" y="735.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (197 samples, 16.13%)</title><rect x="26.7813%" y="805" width="16.1343%" height="15" fill="rgb(234,26,39)" fg:x="327" fg:w="197"/><text x="27.0313%" y="815.50">engine::internal::Entitie..</text></g><g><title>engine::session::Session::check_for_changes (197 samples, 16.13%)</title><rect x="26.7813%" y="789" width="16.1343%" height="15" fill="rgb(205,117,44)" fg:x="327" fg:w="197"/><text x="27.0313%" y="799.50">engine::session::Session:..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="42.8337%" y="773" width="0.0819%" height="15" fill="rgb(250,42,2)" fg:x="523" fg:w="1"/><text x="43.0837%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.8337%" y="757" width="0.0819%" height="15" fill="rgb(223,83,14)" fg:x="523" fg:w="1"/><text x="43.0837%" y="767.50"></text></g><g><title>engine::session::Session::world (3 samples, 0.25%)</title><rect x="42.9156%" y="805" width="0.2457%" height="15" fill="rgb(241,147,50)" fg:x="524" fg:w="3"/><text x="43.1656%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.25%)</title><rect x="42.9156%" y="789" width="0.2457%" height="15" fill="rgb(218,90,6)" fg:x="524" fg:w="3"/><text x="43.1656%" y="799.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.25%)</title><rect x="42.9156%" y="773" width="0.2457%" height="15" fill="rgb(210,191,5)" fg:x="524" fg:w="3"/><text x="43.1656%" y="783.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.25%)</title><rect x="42.9156%" y="757" width="0.2457%" height="15" fill="rgb(225,139,19)" fg:x="524" fg:w="3"/><text x="43.1656%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0794%" y="741" width="0.0819%" height="15" fill="rgb(210,1,33)" fg:x="526" fg:w="1"/><text x="43.3294%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0794%" y="725" width="0.0819%" height="15" fill="rgb(213,50,3)" fg:x="526" fg:w="1"/><text x="43.3294%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0794%" y="709" width="0.0819%" height="15" fill="rgb(234,227,4)" fg:x="526" fg:w="1"/><text x="43.3294%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.0794%" y="693" width="0.0819%" height="15" fill="rgb(246,63,5)" fg:x="526" fg:w="1"/><text x="43.3294%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.0794%" y="677" width="0.0819%" height="15" fill="rgb(245,136,27)" fg:x="526" fg:w="1"/><text x="43.3294%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.0794%" y="661" width="0.0819%" height="15" fill="rgb(247,199,27)" fg:x="526" fg:w="1"/><text x="43.3294%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.0794%" y="645" width="0.0819%" height="15" fill="rgb(252,158,49)" fg:x="526" fg:w="1"/><text x="43.3294%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.0794%" y="629" width="0.0819%" height="15" fill="rgb(254,73,1)" fg:x="526" fg:w="1"/><text x="43.3294%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.0794%" y="613" width="0.0819%" height="15" fill="rgb(248,93,19)" fg:x="526" fg:w="1"/><text x="43.3294%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.0794%" y="597" width="0.0819%" height="15" fill="rgb(206,67,5)" fg:x="526" fg:w="1"/><text x="43.3294%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.0794%" y="581" width="0.0819%" height="15" fill="rgb(209,210,4)" fg:x="526" fg:w="1"/><text x="43.3294%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.0794%" y="565" width="0.0819%" height="15" fill="rgb(214,185,36)" fg:x="526" fg:w="1"/><text x="43.3294%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0794%" y="549" width="0.0819%" height="15" fill="rgb(233,191,26)" fg:x="526" fg:w="1"/><text x="43.3294%" y="559.50"></text></g><g><title>engine::session::Session::close (215 samples, 17.61%)</title><rect x="25.7985%" y="837" width="17.6085%" height="15" fill="rgb(248,94,17)" fg:x="315" fg:w="215"/><text x="26.0485%" y="847.50">engine::session::Session::c..</text></g><g><title>engine::session::Session::save_entity_changes (214 samples, 17.53%)</title><rect x="25.8804%" y="821" width="17.5266%" height="15" fill="rgb(250,64,4)" fg:x="316" fg:w="214"/><text x="26.1304%" y="831.50">engine::session::Session::s..</text></g><g><title>std::env::_var (3 samples, 0.25%)</title><rect x="43.1613%" y="805" width="0.2457%" height="15" fill="rgb(218,41,53)" fg:x="527" fg:w="3"/><text x="43.4113%" y="815.50"></text></g><g><title>std::env::var_os (3 samples, 0.25%)</title><rect x="43.1613%" y="789" width="0.2457%" height="15" fill="rgb(251,176,28)" fg:x="527" fg:w="3"/><text x="43.4113%" y="799.50"></text></g><g><title>std::env::_var_os (3 samples, 0.25%)</title><rect x="43.1613%" y="773" width="0.2457%" height="15" fill="rgb(247,22,9)" fg:x="527" fg:w="3"/><text x="43.4113%" y="783.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.25%)</title><rect x="43.1613%" y="757" width="0.2457%" height="15" fill="rgb(218,201,14)" fg:x="527" fg:w="3"/><text x="43.4113%" y="767.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (3 samples, 0.25%)</title><rect x="43.1613%" y="741" width="0.2457%" height="15" fill="rgb(218,94,10)" fg:x="527" fg:w="3"/><text x="43.4113%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (3 samples, 0.25%)</title><rect x="43.1613%" y="725" width="0.2457%" height="15" fill="rgb(222,183,52)" fg:x="527" fg:w="3"/><text x="43.4113%" y="735.50"></text></g><g><title>getenv (3 samples, 0.25%)</title><rect x="43.1613%" y="709" width="0.2457%" height="15" fill="rgb(242,140,25)" fg:x="527" fg:w="3"/><text x="43.4113%" y="719.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (3 samples, 0.25%)</title><rect x="43.4889%" y="757" width="0.2457%" height="15" fill="rgb(235,197,38)" fg:x="531" fg:w="3"/><text x="43.7389%" y="767.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.25%)</title><rect x="43.4889%" y="741" width="0.2457%" height="15" fill="rgb(237,136,15)" fg:x="531" fg:w="3"/><text x="43.7389%" y="751.50"></text></g><g><title>&lt;plugins_core::building::parser::MakeItemParser as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.25%)</title><rect x="43.4889%" y="725" width="0.2457%" height="15" fill="rgb(223,44,49)" fg:x="531" fg:w="3"/><text x="43.7389%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="43.8984%" y="581" width="0.2457%" height="15" fill="rgb(227,71,15)" fg:x="536" fg:w="3"/><text x="44.1484%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="43.8984%" y="565" width="0.2457%" height="15" fill="rgb(225,153,20)" fg:x="536" fg:w="3"/><text x="44.1484%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.25%)</title><rect x="43.8984%" y="549" width="0.2457%" height="15" fill="rgb(210,190,26)" fg:x="536" fg:w="3"/><text x="44.1484%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.25%)</title><rect x="43.8984%" y="533" width="0.2457%" height="15" fill="rgb(223,147,5)" fg:x="536" fg:w="3"/><text x="44.1484%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.25%)</title><rect x="43.8984%" y="517" width="0.2457%" height="15" fill="rgb(207,14,23)" fg:x="536" fg:w="3"/><text x="44.1484%" y="527.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.25%)</title><rect x="43.8984%" y="501" width="0.2457%" height="15" fill="rgb(211,195,53)" fg:x="536" fg:w="3"/><text x="44.1484%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="43.8984%" y="485" width="0.2457%" height="15" fill="rgb(237,75,46)" fg:x="536" fg:w="3"/><text x="44.1484%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (6 samples, 0.49%)</title><rect x="43.8165%" y="709" width="0.4914%" height="15" fill="rgb(254,55,14)" fg:x="535" fg:w="6"/><text x="44.0665%" y="719.50"></text></g><g><title>kernel::surround::Surroundings::unpack (5 samples, 0.41%)</title><rect x="43.8984%" y="693" width="0.4095%" height="15" fill="rgb(230,185,30)" fg:x="536" fg:w="5"/><text x="44.1484%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="43.8984%" y="677" width="0.4095%" height="15" fill="rgb(220,14,11)" fg:x="536" fg:w="5"/><text x="44.1484%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="43.8984%" y="661" width="0.4095%" height="15" fill="rgb(215,169,44)" fg:x="536" fg:w="5"/><text x="44.1484%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="43.8984%" y="645" width="0.4095%" height="15" fill="rgb(253,203,20)" fg:x="536" fg:w="5"/><text x="44.1484%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.41%)</title><rect x="43.8984%" y="629" width="0.4095%" height="15" fill="rgb(229,225,17)" fg:x="536" fg:w="5"/><text x="44.1484%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.41%)</title><rect x="43.8984%" y="613" width="0.4095%" height="15" fill="rgb(236,76,26)" fg:x="536" fg:w="5"/><text x="44.1484%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.41%)</title><rect x="43.8984%" y="597" width="0.4095%" height="15" fill="rgb(234,15,30)" fg:x="536" fg:w="5"/><text x="44.1484%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="44.1441%" y="581" width="0.1638%" height="15" fill="rgb(211,113,48)" fg:x="539" fg:w="2"/><text x="44.3941%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="44.1441%" y="565" width="0.1638%" height="15" fill="rgb(221,31,36)" fg:x="539" fg:w="2"/><text x="44.3941%" y="575.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="44.3079%" y="613" width="0.0819%" height="15" fill="rgb(215,118,52)" fg:x="541" fg:w="1"/><text x="44.5579%" y="623.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="44.3079%" y="597" width="0.0819%" height="15" fill="rgb(241,151,27)" fg:x="541" fg:w="1"/><text x="44.5579%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.3898%" y="485" width="0.0819%" height="15" fill="rgb(253,51,3)" fg:x="542" fg:w="1"/><text x="44.6398%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.3898%" y="469" width="0.0819%" height="15" fill="rgb(216,201,24)" fg:x="542" fg:w="1"/><text x="44.6398%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="44.3898%" y="453" width="0.0819%" height="15" fill="rgb(231,107,4)" fg:x="542" fg:w="1"/><text x="44.6398%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="44.3898%" y="437" width="0.0819%" height="15" fill="rgb(243,97,54)" fg:x="542" fg:w="1"/><text x="44.6398%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.3898%" y="533" width="0.1638%" height="15" fill="rgb(221,32,51)" fg:x="542" fg:w="2"/><text x="44.6398%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.3898%" y="517" width="0.1638%" height="15" fill="rgb(218,171,35)" fg:x="542" fg:w="2"/><text x="44.6398%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.3898%" y="501" width="0.1638%" height="15" fill="rgb(214,20,53)" fg:x="542" fg:w="2"/><text x="44.6398%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="44.4717%" y="485" width="0.0819%" height="15" fill="rgb(239,9,52)" fg:x="543" fg:w="1"/><text x="44.7217%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="44.4717%" y="469" width="0.0819%" height="15" fill="rgb(215,114,45)" fg:x="543" fg:w="1"/><text x="44.7217%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="44.4717%" y="453" width="0.0819%" height="15" fill="rgb(208,118,9)" fg:x="543" fg:w="1"/><text x="44.7217%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.41%)</title><rect x="44.3898%" y="597" width="0.4095%" height="15" fill="rgb(235,7,39)" fg:x="542" fg:w="5"/><text x="44.6398%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.41%)</title><rect x="44.3898%" y="581" width="0.4095%" height="15" fill="rgb(243,225,15)" fg:x="542" fg:w="5"/><text x="44.6398%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="44.3898%" y="565" width="0.4095%" height="15" fill="rgb(225,216,18)" fg:x="542" fg:w="5"/><text x="44.6398%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="44.3898%" y="549" width="0.4095%" height="15" fill="rgb(233,36,38)" fg:x="542" fg:w="5"/><text x="44.6398%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="44.5536%" y="533" width="0.2457%" height="15" fill="rgb(239,88,23)" fg:x="544" fg:w="3"/><text x="44.8036%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="44.5536%" y="517" width="0.2457%" height="15" fill="rgb(219,181,35)" fg:x="544" fg:w="3"/><text x="44.8036%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.6355%" y="501" width="0.1638%" height="15" fill="rgb(215,18,46)" fg:x="545" fg:w="2"/><text x="44.8855%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.6355%" y="485" width="0.1638%" height="15" fill="rgb(241,38,11)" fg:x="545" fg:w="2"/><text x="44.8855%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.7174%" y="469" width="0.0819%" height="15" fill="rgb(248,169,45)" fg:x="546" fg:w="1"/><text x="44.9674%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7174%" y="453" width="0.0819%" height="15" fill="rgb(239,50,49)" fg:x="546" fg:w="1"/><text x="44.9674%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="44.9631%" y="501" width="0.1638%" height="15" fill="rgb(231,96,31)" fg:x="549" fg:w="2"/><text x="45.2131%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.33%)</title><rect x="44.8812%" y="517" width="0.3276%" height="15" fill="rgb(224,193,37)" fg:x="548" fg:w="4"/><text x="45.1312%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.1269%" y="501" width="0.0819%" height="15" fill="rgb(227,153,50)" fg:x="551" fg:w="1"/><text x="45.3769%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.2088%" y="469" width="0.0819%" height="15" fill="rgb(249,228,3)" fg:x="552" fg:w="1"/><text x="45.4588%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.2088%" y="453" width="0.0819%" height="15" fill="rgb(219,164,43)" fg:x="552" fg:w="1"/><text x="45.4588%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.2088%" y="437" width="0.0819%" height="15" fill="rgb(216,45,41)" fg:x="552" fg:w="1"/><text x="45.4588%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.06%)</title><rect x="44.3079%" y="645" width="1.0647%" height="15" fill="rgb(210,226,51)" fg:x="541" fg:w="13"/><text x="44.5579%" y="655.50"></text></g><g><title>engine::internal::Entities::prepare_entity (13 samples, 1.06%)</title><rect x="44.3079%" y="629" width="1.0647%" height="15" fill="rgb(209,117,49)" fg:x="541" fg:w="13"/><text x="44.5579%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (12 samples, 0.98%)</title><rect x="44.3898%" y="613" width="0.9828%" height="15" fill="rgb(206,196,24)" fg:x="542" fg:w="12"/><text x="44.6398%" y="623.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="44.7993%" y="597" width="0.5733%" height="15" fill="rgb(253,218,3)" fg:x="547" fg:w="7"/><text x="45.0493%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="44.7993%" y="581" width="0.5733%" height="15" fill="rgb(252,166,2)" fg:x="547" fg:w="7"/><text x="45.0493%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="44.7993%" y="565" width="0.5733%" height="15" fill="rgb(236,218,26)" fg:x="547" fg:w="7"/><text x="45.0493%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="44.7993%" y="549" width="0.5733%" height="15" fill="rgb(254,84,19)" fg:x="547" fg:w="7"/><text x="45.0493%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="44.8812%" y="533" width="0.4914%" height="15" fill="rgb(219,137,29)" fg:x="548" fg:w="6"/><text x="45.1312%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.2088%" y="517" width="0.1638%" height="15" fill="rgb(227,47,52)" fg:x="552" fg:w="2"/><text x="45.4588%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.2088%" y="501" width="0.1638%" height="15" fill="rgb(229,167,24)" fg:x="552" fg:w="2"/><text x="45.4588%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.2088%" y="485" width="0.1638%" height="15" fill="rgb(233,164,1)" fg:x="552" fg:w="2"/><text x="45.4588%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.2907%" y="469" width="0.0819%" height="15" fill="rgb(218,88,48)" fg:x="553" fg:w="1"/><text x="45.5407%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.2907%" y="453" width="0.0819%" height="15" fill="rgb(226,214,24)" fg:x="553" fg:w="1"/><text x="45.5407%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.2907%" y="437" width="0.0819%" height="15" fill="rgb(233,29,12)" fg:x="553" fg:w="1"/><text x="45.5407%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.2907%" y="421" width="0.0819%" height="15" fill="rgb(219,120,34)" fg:x="553" fg:w="1"/><text x="45.5407%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (14 samples, 1.15%)</title><rect x="44.3079%" y="693" width="1.1466%" height="15" fill="rgb(226,78,44)" fg:x="541" fg:w="14"/><text x="44.5579%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.15%)</title><rect x="44.3079%" y="677" width="1.1466%" height="15" fill="rgb(240,15,48)" fg:x="541" fg:w="14"/><text x="44.5579%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (14 samples, 1.15%)</title><rect x="44.3079%" y="661" width="1.1466%" height="15" fill="rgb(253,176,7)" fg:x="541" fg:w="14"/><text x="44.5579%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.3726%" y="645" width="0.0819%" height="15" fill="rgb(206,166,28)" fg:x="554" fg:w="1"/><text x="45.6226%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.3726%" y="629" width="0.0819%" height="15" fill="rgb(241,53,51)" fg:x="554" fg:w="1"/><text x="45.6226%" y="639.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="45.4545%" y="661" width="0.0819%" height="15" fill="rgb(249,112,30)" fg:x="555" fg:w="1"/><text x="45.7045%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="45.4545%" y="645" width="0.0819%" height="15" fill="rgb(217,85,30)" fg:x="555" fg:w="1"/><text x="45.7045%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.4545%" y="629" width="0.0819%" height="15" fill="rgb(233,49,7)" fg:x="555" fg:w="1"/><text x="45.7045%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.4545%" y="613" width="0.0819%" height="15" fill="rgb(234,109,9)" fg:x="555" fg:w="1"/><text x="45.7045%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.4545%" y="597" width="0.0819%" height="15" fill="rgb(253,95,22)" fg:x="555" fg:w="1"/><text x="45.7045%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.4545%" y="581" width="0.0819%" height="15" fill="rgb(233,176,25)" fg:x="555" fg:w="1"/><text x="45.7045%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.4545%" y="565" width="0.0819%" height="15" fill="rgb(236,33,39)" fg:x="555" fg:w="1"/><text x="45.7045%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.4545%" y="549" width="0.0819%" height="15" fill="rgb(223,226,42)" fg:x="555" fg:w="1"/><text x="45.7045%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="45.4545%" y="533" width="0.0819%" height="15" fill="rgb(216,99,33)" fg:x="555" fg:w="1"/><text x="45.7045%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.4545%" y="517" width="0.0819%" height="15" fill="rgb(235,84,23)" fg:x="555" fg:w="1"/><text x="45.7045%" y="527.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (16 samples, 1.31%)</title><rect x="44.3079%" y="709" width="1.3104%" height="15" fill="rgb(232,2,27)" fg:x="541" fg:w="16"/><text x="44.5579%" y="719.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="45.4545%" y="693" width="0.1638%" height="15" fill="rgb(241,23,22)" fg:x="555" fg:w="2"/><text x="45.7045%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="45.4545%" y="677" width="0.1638%" height="15" fill="rgb(211,73,27)" fg:x="555" fg:w="2"/><text x="45.7045%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="45.5364%" y="661" width="0.0819%" height="15" fill="rgb(235,109,49)" fg:x="556" fg:w="1"/><text x="45.7864%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="45.5364%" y="645" width="0.0819%" height="15" fill="rgb(230,99,29)" fg:x="556" fg:w="1"/><text x="45.7864%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.5364%" y="629" width="0.0819%" height="15" fill="rgb(245,199,7)" fg:x="556" fg:w="1"/><text x="45.7864%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.5364%" y="613" width="0.0819%" height="15" fill="rgb(217,179,10)" fg:x="556" fg:w="1"/><text x="45.7864%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.5364%" y="597" width="0.0819%" height="15" fill="rgb(254,99,47)" fg:x="556" fg:w="1"/><text x="45.7864%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="45.5364%" y="581" width="0.0819%" height="15" fill="rgb(251,121,7)" fg:x="556" fg:w="1"/><text x="45.7864%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.5364%" y="565" width="0.0819%" height="15" fill="rgb(250,177,26)" fg:x="556" fg:w="1"/><text x="45.7864%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.5364%" y="549" width="0.0819%" height="15" fill="rgb(232,88,15)" fg:x="556" fg:w="1"/><text x="45.7864%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.5364%" y="533" width="0.0819%" height="15" fill="rgb(251,54,54)" fg:x="556" fg:w="1"/><text x="45.7864%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="45.5364%" y="517" width="0.0819%" height="15" fill="rgb(208,177,15)" fg:x="556" fg:w="1"/><text x="45.7864%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.25%)</title><rect x="46.0278%" y="597" width="0.2457%" height="15" fill="rgb(205,97,32)" fg:x="562" fg:w="3"/><text x="46.2778%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="46.1097%" y="581" width="0.1638%" height="15" fill="rgb(217,192,13)" fg:x="563" fg:w="2"/><text x="46.3597%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="45.8640%" y="613" width="0.4914%" height="15" fill="rgb(215,163,41)" fg:x="560" fg:w="6"/><text x="46.1140%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2735%" y="597" width="0.0819%" height="15" fill="rgb(246,83,29)" fg:x="565" fg:w="1"/><text x="46.5235%" y="607.50"></text></g><g><title>__libc_free (4 samples, 0.33%)</title><rect x="46.3554%" y="613" width="0.3276%" height="15" fill="rgb(219,2,45)" fg:x="566" fg:w="4"/><text x="46.6054%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.98%)</title><rect x="45.7821%" y="629" width="0.9828%" height="15" fill="rgb(242,215,33)" fg:x="559" fg:w="12"/><text x="46.0321%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="46.6830%" y="613" width="0.0819%" height="15" fill="rgb(217,1,6)" fg:x="570" fg:w="1"/><text x="46.9330%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.6830%" y="597" width="0.0819%" height="15" fill="rgb(207,85,52)" fg:x="570" fg:w="1"/><text x="46.9330%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.6830%" y="581" width="0.0819%" height="15" fill="rgb(231,171,19)" fg:x="570" fg:w="1"/><text x="46.9330%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.97%)</title><rect x="45.7002%" y="645" width="1.9656%" height="15" fill="rgb(207,128,4)" fg:x="558" fg:w="24"/><text x="45.9502%" y="655.50">&lt;..</text></g><g><title>__libc_free (11 samples, 0.90%)</title><rect x="46.7649%" y="629" width="0.9009%" height="15" fill="rgb(219,208,4)" fg:x="571" fg:w="11"/><text x="47.0149%" y="639.50"></text></g><g><title>__libc_free (8 samples, 0.66%)</title><rect x="47.6658%" y="645" width="0.6552%" height="15" fill="rgb(235,161,42)" fg:x="582" fg:w="8"/><text x="47.9158%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (33 samples, 2.70%)</title><rect x="45.7002%" y="677" width="2.7027%" height="15" fill="rgb(247,218,18)" fg:x="558" fg:w="33"/><text x="45.9502%" y="687.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 2.70%)</title><rect x="45.7002%" y="661" width="2.7027%" height="15" fill="rgb(232,114,51)" fg:x="558" fg:w="33"/><text x="45.9502%" y="671.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="48.3210%" y="645" width="0.0819%" height="15" fill="rgb(222,95,3)" fg:x="590" fg:w="1"/><text x="48.5710%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="48.4848%" y="629" width="0.0819%" height="15" fill="rgb(240,65,29)" fg:x="592" fg:w="1"/><text x="48.7348%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5667%" y="629" width="0.0819%" height="15" fill="rgb(249,209,20)" fg:x="593" fg:w="1"/><text x="48.8167%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="48.4848%" y="645" width="0.3276%" height="15" fill="rgb(241,48,37)" fg:x="592" fg:w="4"/><text x="48.7348%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.16%)</title><rect x="48.6486%" y="629" width="0.1638%" height="15" fill="rgb(230,140,42)" fg:x="594" fg:w="2"/><text x="48.8986%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="48.6486%" y="613" width="0.1638%" height="15" fill="rgb(230,176,45)" fg:x="594" fg:w="2"/><text x="48.8986%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="48.6486%" y="597" width="0.1638%" height="15" fill="rgb(245,112,21)" fg:x="594" fg:w="2"/><text x="48.8986%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="48.6486%" y="581" width="0.1638%" height="15" fill="rgb(207,183,35)" fg:x="594" fg:w="2"/><text x="48.8986%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="48.6486%" y="565" width="0.1638%" height="15" fill="rgb(227,44,33)" fg:x="594" fg:w="2"/><text x="48.8986%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.6486%" y="549" width="0.1638%" height="15" fill="rgb(246,120,21)" fg:x="594" fg:w="2"/><text x="48.8986%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="48.6486%" y="533" width="0.1638%" height="15" fill="rgb(235,57,52)" fg:x="594" fg:w="2"/><text x="48.8986%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="48.6486%" y="517" width="0.1638%" height="15" fill="rgb(238,84,10)" fg:x="594" fg:w="2"/><text x="48.8986%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7305%" y="501" width="0.0819%" height="15" fill="rgb(251,200,32)" fg:x="595" fg:w="1"/><text x="48.9805%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="48.8124%" y="645" width="0.1638%" height="15" fill="rgb(247,159,13)" fg:x="596" fg:w="2"/><text x="49.0624%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="48.8124%" y="629" width="0.1638%" height="15" fill="rgb(238,64,4)" fg:x="596" fg:w="2"/><text x="49.0624%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.8943%" y="613" width="0.0819%" height="15" fill="rgb(221,131,51)" fg:x="597" fg:w="1"/><text x="49.1443%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="48.9762%" y="645" width="0.1638%" height="15" fill="rgb(242,5,29)" fg:x="598" fg:w="2"/><text x="49.2262%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="48.9762%" y="629" width="0.1638%" height="15" fill="rgb(214,130,32)" fg:x="598" fg:w="2"/><text x="49.2262%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="49.0581%" y="613" width="0.0819%" height="15" fill="rgb(244,210,16)" fg:x="599" fg:w="1"/><text x="49.3081%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0581%" y="597" width="0.0819%" height="15" fill="rgb(234,48,26)" fg:x="599" fg:w="1"/><text x="49.3081%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="49.4676%" y="581" width="0.1638%" height="15" fill="rgb(231,82,38)" fg:x="604" fg:w="2"/><text x="49.7176%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.41%)</title><rect x="49.7133%" y="501" width="0.4095%" height="15" fill="rgb(254,128,41)" fg:x="607" fg:w="5"/><text x="49.9633%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.25%)</title><rect x="49.8771%" y="485" width="0.2457%" height="15" fill="rgb(212,73,49)" fg:x="609" fg:w="3"/><text x="50.1271%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0410%" y="469" width="0.0819%" height="15" fill="rgb(205,62,54)" fg:x="611" fg:w="1"/><text x="50.2910%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.2048%" y="373" width="0.0819%" height="15" fill="rgb(228,0,8)" fg:x="613" fg:w="1"/><text x="50.4548%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.2048%" y="357" width="0.0819%" height="15" fill="rgb(251,28,17)" fg:x="613" fg:w="1"/><text x="50.4548%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="50.2048%" y="341" width="0.0819%" height="15" fill="rgb(238,105,27)" fg:x="613" fg:w="1"/><text x="50.4548%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="50.2048%" y="325" width="0.0819%" height="15" fill="rgb(237,216,33)" fg:x="613" fg:w="1"/><text x="50.4548%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="50.2048%" y="309" width="0.0819%" height="15" fill="rgb(229,228,25)" fg:x="613" fg:w="1"/><text x="50.4548%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="50.2048%" y="293" width="0.0819%" height="15" fill="rgb(233,75,23)" fg:x="613" fg:w="1"/><text x="50.4548%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="50.2048%" y="277" width="0.0819%" height="15" fill="rgb(231,207,16)" fg:x="613" fg:w="1"/><text x="50.4548%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="50.2048%" y="261" width="0.0819%" height="15" fill="rgb(231,191,45)" fg:x="613" fg:w="1"/><text x="50.4548%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="50.2048%" y="245" width="0.0819%" height="15" fill="rgb(224,133,17)" fg:x="613" fg:w="1"/><text x="50.4548%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="50.2048%" y="229" width="0.0819%" height="15" fill="rgb(209,178,27)" fg:x="613" fg:w="1"/><text x="50.4548%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="50.2048%" y="213" width="0.0819%" height="15" fill="rgb(218,37,11)" fg:x="613" fg:w="1"/><text x="50.4548%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="50.2048%" y="197" width="0.0819%" height="15" fill="rgb(251,226,25)" fg:x="613" fg:w="1"/><text x="50.4548%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="50.2048%" y="181" width="0.0819%" height="15" fill="rgb(209,222,27)" fg:x="613" fg:w="1"/><text x="50.4548%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="50.2048%" y="165" width="0.0819%" height="15" fill="rgb(238,22,21)" fg:x="613" fg:w="1"/><text x="50.4548%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="50.2048%" y="149" width="0.0819%" height="15" fill="rgb(233,161,25)" fg:x="613" fg:w="1"/><text x="50.4548%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.74%)</title><rect x="49.6314%" y="565" width="0.7371%" height="15" fill="rgb(226,122,53)" fg:x="606" fg:w="9"/><text x="49.8814%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.74%)</title><rect x="49.6314%" y="549" width="0.7371%" height="15" fill="rgb(220,123,17)" fg:x="606" fg:w="9"/><text x="49.8814%" y="559.50"></text></g><g><title>kernel::model::EntityRef::into_entry (9 samples, 0.74%)</title><rect x="49.6314%" y="533" width="0.7371%" height="15" fill="rgb(230,224,35)" fg:x="606" fg:w="9"/><text x="49.8814%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.66%)</title><rect x="49.7133%" y="517" width="0.6552%" height="15" fill="rgb(246,83,8)" fg:x="607" fg:w="8"/><text x="49.9633%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.25%)</title><rect x="50.1229%" y="501" width="0.2457%" height="15" fill="rgb(230,214,17)" fg:x="612" fg:w="3"/><text x="50.3729%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.25%)</title><rect x="50.1229%" y="485" width="0.2457%" height="15" fill="rgb(222,97,18)" fg:x="612" fg:w="3"/><text x="50.3729%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.25%)</title><rect x="50.1229%" y="469" width="0.2457%" height="15" fill="rgb(206,79,1)" fg:x="612" fg:w="3"/><text x="50.3729%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="50.1229%" y="453" width="0.2457%" height="15" fill="rgb(214,121,34)" fg:x="612" fg:w="3"/><text x="50.3729%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="50.1229%" y="437" width="0.2457%" height="15" fill="rgb(249,199,46)" fg:x="612" fg:w="3"/><text x="50.3729%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="50.1229%" y="421" width="0.2457%" height="15" fill="rgb(214,222,46)" fg:x="612" fg:w="3"/><text x="50.3729%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.25%)</title><rect x="50.1229%" y="405" width="0.2457%" height="15" fill="rgb(248,168,30)" fg:x="612" fg:w="3"/><text x="50.3729%" y="415.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="50.1229%" y="389" width="0.2457%" height="15" fill="rgb(226,14,28)" fg:x="612" fg:w="3"/><text x="50.3729%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="50.2867%" y="373" width="0.0819%" height="15" fill="rgb(253,123,1)" fg:x="614" fg:w="1"/><text x="50.5367%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="50.2867%" y="357" width="0.0819%" height="15" fill="rgb(225,24,42)" fg:x="614" fg:w="1"/><text x="50.5367%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="50.2867%" y="341" width="0.0819%" height="15" fill="rgb(216,161,37)" fg:x="614" fg:w="1"/><text x="50.5367%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="50.2867%" y="325" width="0.0819%" height="15" fill="rgb(251,164,26)" fg:x="614" fg:w="1"/><text x="50.5367%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="50.2867%" y="309" width="0.0819%" height="15" fill="rgb(219,177,3)" fg:x="614" fg:w="1"/><text x="50.5367%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="50.2867%" y="293" width="0.0819%" height="15" fill="rgb(222,65,0)" fg:x="614" fg:w="1"/><text x="50.5367%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="50.2867%" y="277" width="0.0819%" height="15" fill="rgb(223,69,54)" fg:x="614" fg:w="1"/><text x="50.5367%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.2867%" y="261" width="0.0819%" height="15" fill="rgb(235,30,27)" fg:x="614" fg:w="1"/><text x="50.5367%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.2867%" y="245" width="0.0819%" height="15" fill="rgb(220,183,50)" fg:x="614" fg:w="1"/><text x="50.5367%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="50.2867%" y="229" width="0.0819%" height="15" fill="rgb(248,198,15)" fg:x="614" fg:w="1"/><text x="50.5367%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="50.2867%" y="213" width="0.0819%" height="15" fill="rgb(222,211,4)" fg:x="614" fg:w="1"/><text x="50.5367%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="50.2867%" y="197" width="0.0819%" height="15" fill="rgb(214,102,34)" fg:x="614" fg:w="1"/><text x="50.5367%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="50.2867%" y="181" width="0.0819%" height="15" fill="rgb(245,92,5)" fg:x="614" fg:w="1"/><text x="50.5367%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="50.2867%" y="165" width="0.0819%" height="15" fill="rgb(252,72,51)" fg:x="614" fg:w="1"/><text x="50.5367%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="50.2867%" y="149" width="0.0819%" height="15" fill="rgb(252,208,19)" fg:x="614" fg:w="1"/><text x="50.5367%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="50.2867%" y="133" width="0.0819%" height="15" fill="rgb(211,69,7)" fg:x="614" fg:w="1"/><text x="50.5367%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="50.2867%" y="117" width="0.0819%" height="15" fill="rgb(211,27,16)" fg:x="614" fg:w="1"/><text x="50.5367%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="50.2867%" y="101" width="0.0819%" height="15" fill="rgb(219,216,14)" fg:x="614" fg:w="1"/><text x="50.5367%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="50.2867%" y="85" width="0.0819%" height="15" fill="rgb(219,71,8)" fg:x="614" fg:w="1"/><text x="50.5367%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="50.2867%" y="69" width="0.0819%" height="15" fill="rgb(223,170,53)" fg:x="614" fg:w="1"/><text x="50.5367%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="50.2867%" y="53" width="0.0819%" height="15" fill="rgb(246,21,26)" fg:x="614" fg:w="1"/><text x="50.5367%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="50.2867%" y="37" width="0.0819%" height="15" fill="rgb(248,20,46)" fg:x="614" fg:w="1"/><text x="50.5367%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.3686%" y="549" width="0.0819%" height="15" fill="rgb(252,94,11)" fg:x="615" fg:w="1"/><text x="50.6186%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="50.4505%" y="549" width="0.0819%" height="15" fill="rgb(236,163,8)" fg:x="616" fg:w="1"/><text x="50.7005%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.4505%" y="533" width="0.0819%" height="15" fill="rgb(217,221,45)" fg:x="616" fg:w="1"/><text x="50.7005%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="50.6143%" y="405" width="0.1638%" height="15" fill="rgb(238,38,17)" fg:x="618" fg:w="2"/><text x="50.8643%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6962%" y="389" width="0.0819%" height="15" fill="rgb(242,210,23)" fg:x="619" fg:w="1"/><text x="50.9462%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.7781%" y="405" width="0.0819%" height="15" fill="rgb(250,86,53)" fg:x="620" fg:w="1"/><text x="51.0281%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="50.8600%" y="373" width="0.1638%" height="15" fill="rgb(223,168,25)" fg:x="621" fg:w="2"/><text x="51.1100%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.8600%" y="357" width="0.1638%" height="15" fill="rgb(251,189,4)" fg:x="621" fg:w="2"/><text x="51.1100%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.0238%" y="341" width="0.0819%" height="15" fill="rgb(245,19,28)" fg:x="623" fg:w="1"/><text x="51.2738%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.1057%" y="309" width="0.0819%" height="15" fill="rgb(207,10,34)" fg:x="624" fg:w="1"/><text x="51.3557%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1057%" y="293" width="0.0819%" height="15" fill="rgb(235,153,31)" fg:x="624" fg:w="1"/><text x="51.3557%" y="303.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.64%)</title><rect x="49.6314%" y="581" width="1.6380%" height="15" fill="rgb(228,72,37)" fg:x="606" fg:w="20"/><text x="49.8814%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11 samples, 0.90%)</title><rect x="50.3686%" y="565" width="0.9009%" height="15" fill="rgb(215,15,16)" fg:x="615" fg:w="11"/><text x="50.6186%" y="575.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (9 samples, 0.74%)</title><rect x="50.5324%" y="549" width="0.7371%" height="15" fill="rgb(250,119,29)" fg:x="617" fg:w="9"/><text x="50.7824%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (9 samples, 0.74%)</title><rect x="50.5324%" y="533" width="0.7371%" height="15" fill="rgb(214,59,1)" fg:x="617" fg:w="9"/><text x="50.7824%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.66%)</title><rect x="50.6143%" y="517" width="0.6552%" height="15" fill="rgb(223,109,25)" fg:x="618" fg:w="8"/><text x="50.8643%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.66%)</title><rect x="50.6143%" y="501" width="0.6552%" height="15" fill="rgb(230,198,22)" fg:x="618" fg:w="8"/><text x="50.8643%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.66%)</title><rect x="50.6143%" y="485" width="0.6552%" height="15" fill="rgb(245,184,46)" fg:x="618" fg:w="8"/><text x="50.8643%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.66%)</title><rect x="50.6143%" y="469" width="0.6552%" height="15" fill="rgb(253,73,16)" fg:x="618" fg:w="8"/><text x="50.8643%" y="479.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.66%)</title><rect x="50.6143%" y="453" width="0.6552%" height="15" fill="rgb(206,94,45)" fg:x="618" fg:w="8"/><text x="50.8643%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.66%)</title><rect x="50.6143%" y="437" width="0.6552%" height="15" fill="rgb(236,83,27)" fg:x="618" fg:w="8"/><text x="50.8643%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.66%)</title><rect x="50.6143%" y="421" width="0.6552%" height="15" fill="rgb(220,196,8)" fg:x="618" fg:w="8"/><text x="50.8643%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="50.8600%" y="405" width="0.4095%" height="15" fill="rgb(254,185,14)" fg:x="621" fg:w="5"/><text x="51.1100%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="50.8600%" y="389" width="0.4095%" height="15" fill="rgb(226,50,22)" fg:x="621" fg:w="5"/><text x="51.1100%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.25%)</title><rect x="51.0238%" y="373" width="0.2457%" height="15" fill="rgb(253,147,0)" fg:x="623" fg:w="3"/><text x="51.2738%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="51.0238%" y="357" width="0.2457%" height="15" fill="rgb(252,46,33)" fg:x="623" fg:w="3"/><text x="51.2738%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="51.1057%" y="341" width="0.1638%" height="15" fill="rgb(242,22,54)" fg:x="624" fg:w="2"/><text x="51.3557%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="51.1057%" y="325" width="0.1638%" height="15" fill="rgb(223,178,32)" fg:x="624" fg:w="2"/><text x="51.3557%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.1876%" y="309" width="0.0819%" height="15" fill="rgb(214,106,53)" fg:x="625" fg:w="1"/><text x="51.4376%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.1876%" y="293" width="0.0819%" height="15" fill="rgb(232,65,50)" fg:x="625" fg:w="1"/><text x="51.4376%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.1876%" y="277" width="0.0819%" height="15" fill="rgb(231,110,28)" fg:x="625" fg:w="1"/><text x="51.4376%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1876%" y="261" width="0.0819%" height="15" fill="rgb(216,71,40)" fg:x="625" fg:w="1"/><text x="51.4376%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.3514%" y="533" width="0.0819%" height="15" fill="rgb(229,89,53)" fg:x="627" fg:w="1"/><text x="51.6014%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.3514%" y="517" width="0.0819%" height="15" fill="rgb(210,124,14)" fg:x="627" fg:w="1"/><text x="51.6014%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.3514%" y="501" width="0.0819%" height="15" fill="rgb(236,213,6)" fg:x="627" fg:w="1"/><text x="51.6014%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.3514%" y="485" width="0.0819%" height="15" fill="rgb(228,41,5)" fg:x="627" fg:w="1"/><text x="51.6014%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.3514%" y="469" width="0.0819%" height="15" fill="rgb(221,167,25)" fg:x="627" fg:w="1"/><text x="51.6014%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.3514%" y="453" width="0.0819%" height="15" fill="rgb(228,144,37)" fg:x="627" fg:w="1"/><text x="51.6014%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.3514%" y="437" width="0.0819%" height="15" fill="rgb(227,189,38)" fg:x="627" fg:w="1"/><text x="51.6014%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.3514%" y="421" width="0.0819%" height="15" fill="rgb(218,8,2)" fg:x="627" fg:w="1"/><text x="51.6014%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.3514%" y="405" width="0.0819%" height="15" fill="rgb(209,61,28)" fg:x="627" fg:w="1"/><text x="51.6014%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.3514%" y="389" width="0.0819%" height="15" fill="rgb(233,140,39)" fg:x="627" fg:w="1"/><text x="51.6014%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.3514%" y="373" width="0.0819%" height="15" fill="rgb(251,66,48)" fg:x="627" fg:w="1"/><text x="51.6014%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5971%" y="421" width="0.0819%" height="15" fill="rgb(210,44,45)" fg:x="630" fg:w="1"/><text x="51.8471%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5971%" y="405" width="0.0819%" height="15" fill="rgb(214,136,46)" fg:x="630" fg:w="1"/><text x="51.8471%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.5971%" y="389" width="0.0819%" height="15" fill="rgb(207,130,50)" fg:x="630" fg:w="1"/><text x="51.8471%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.5971%" y="373" width="0.0819%" height="15" fill="rgb(228,102,49)" fg:x="630" fg:w="1"/><text x="51.8471%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.5971%" y="357" width="0.0819%" height="15" fill="rgb(253,55,1)" fg:x="630" fg:w="1"/><text x="51.8471%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.5971%" y="341" width="0.0819%" height="15" fill="rgb(238,222,9)" fg:x="630" fg:w="1"/><text x="51.8471%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5971%" y="325" width="0.0819%" height="15" fill="rgb(246,99,6)" fg:x="630" fg:w="1"/><text x="51.8471%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="51.3514%" y="549" width="0.4095%" height="15" fill="rgb(219,110,26)" fg:x="627" fg:w="5"/><text x="51.6014%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.33%)</title><rect x="51.4333%" y="533" width="0.3276%" height="15" fill="rgb(239,160,33)" fg:x="628" fg:w="4"/><text x="51.6833%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="51.4333%" y="517" width="0.3276%" height="15" fill="rgb(220,202,23)" fg:x="628" fg:w="4"/><text x="51.6833%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.5971%" y="501" width="0.1638%" height="15" fill="rgb(208,80,26)" fg:x="630" fg:w="2"/><text x="51.8471%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.5971%" y="485" width="0.1638%" height="15" fill="rgb(243,85,7)" fg:x="630" fg:w="2"/><text x="51.8471%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.5971%" y="469" width="0.1638%" height="15" fill="rgb(228,77,47)" fg:x="630" fg:w="2"/><text x="51.8471%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.5971%" y="453" width="0.1638%" height="15" fill="rgb(212,226,8)" fg:x="630" fg:w="2"/><text x="51.8471%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.5971%" y="437" width="0.1638%" height="15" fill="rgb(241,120,54)" fg:x="630" fg:w="2"/><text x="51.8471%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.6790%" y="421" width="0.0819%" height="15" fill="rgb(226,80,16)" fg:x="631" fg:w="1"/><text x="51.9290%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.6790%" y="405" width="0.0819%" height="15" fill="rgb(240,76,13)" fg:x="631" fg:w="1"/><text x="51.9290%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="51.7609%" y="469" width="0.0819%" height="15" fill="rgb(252,74,8)" fg:x="632" fg:w="1"/><text x="52.0109%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7609%" y="453" width="0.0819%" height="15" fill="rgb(244,155,2)" fg:x="632" fg:w="1"/><text x="52.0109%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7609%" y="437" width="0.0819%" height="15" fill="rgb(215,81,35)" fg:x="632" fg:w="1"/><text x="52.0109%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.7609%" y="421" width="0.0819%" height="15" fill="rgb(206,55,2)" fg:x="632" fg:w="1"/><text x="52.0109%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.7609%" y="405" width="0.0819%" height="15" fill="rgb(231,2,34)" fg:x="632" fg:w="1"/><text x="52.0109%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.7609%" y="389" width="0.0819%" height="15" fill="rgb(242,176,48)" fg:x="632" fg:w="1"/><text x="52.0109%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.7609%" y="373" width="0.0819%" height="15" fill="rgb(249,31,36)" fg:x="632" fg:w="1"/><text x="52.0109%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.7609%" y="357" width="0.0819%" height="15" fill="rgb(205,18,17)" fg:x="632" fg:w="1"/><text x="52.0109%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.7609%" y="341" width="0.0819%" height="15" fill="rgb(254,130,5)" fg:x="632" fg:w="1"/><text x="52.0109%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.7609%" y="325" width="0.0819%" height="15" fill="rgb(229,42,45)" fg:x="632" fg:w="1"/><text x="52.0109%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.7609%" y="309" width="0.0819%" height="15" fill="rgb(245,95,25)" fg:x="632" fg:w="1"/><text x="52.0109%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.7609%" y="293" width="0.0819%" height="15" fill="rgb(249,193,38)" fg:x="632" fg:w="1"/><text x="52.0109%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7609%" y="277" width="0.0819%" height="15" fill="rgb(241,140,43)" fg:x="632" fg:w="1"/><text x="52.0109%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.25%)</title><rect x="51.7609%" y="549" width="0.2457%" height="15" fill="rgb(245,78,48)" fg:x="632" fg:w="3"/><text x="52.0109%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.25%)</title><rect x="51.7609%" y="533" width="0.2457%" height="15" fill="rgb(214,92,39)" fg:x="632" fg:w="3"/><text x="52.0109%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="51.7609%" y="517" width="0.2457%" height="15" fill="rgb(211,189,14)" fg:x="632" fg:w="3"/><text x="52.0109%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.25%)</title><rect x="51.7609%" y="501" width="0.2457%" height="15" fill="rgb(218,7,24)" fg:x="632" fg:w="3"/><text x="52.0109%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.25%)</title><rect x="51.7609%" y="485" width="0.2457%" height="15" fill="rgb(224,200,49)" fg:x="632" fg:w="3"/><text x="52.0109%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="51.8428%" y="469" width="0.1638%" height="15" fill="rgb(218,210,14)" fg:x="633" fg:w="2"/><text x="52.0928%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="51.8428%" y="453" width="0.1638%" height="15" fill="rgb(234,142,31)" fg:x="633" fg:w="2"/><text x="52.0928%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.9247%" y="437" width="0.0819%" height="15" fill="rgb(227,165,2)" fg:x="634" fg:w="1"/><text x="52.1747%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.0066%" y="549" width="0.0819%" height="15" fill="rgb(232,44,46)" fg:x="635" fg:w="1"/><text x="52.2566%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0885%" y="517" width="0.0819%" height="15" fill="rgb(236,149,47)" fg:x="636" fg:w="1"/><text x="52.3385%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="52.1704%" y="517" width="0.1638%" height="15" fill="rgb(227,45,31)" fg:x="637" fg:w="2"/><text x="52.4204%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.2523%" y="501" width="0.0819%" height="15" fill="rgb(240,176,51)" fg:x="638" fg:w="1"/><text x="52.5023%" y="511.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="52.2523%" y="485" width="0.0819%" height="15" fill="rgb(249,146,41)" fg:x="638" fg:w="1"/><text x="52.5023%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.4161%" y="437" width="0.1638%" height="15" fill="rgb(213,208,4)" fg:x="640" fg:w="2"/><text x="52.6661%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="52.5799%" y="437" width="0.1638%" height="15" fill="rgb(245,84,36)" fg:x="642" fg:w="2"/><text x="52.8299%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.6618%" y="421" width="0.0819%" height="15" fill="rgb(254,84,18)" fg:x="643" fg:w="1"/><text x="52.9118%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (41 samples, 3.36%)</title><rect x="49.4676%" y="597" width="3.3579%" height="15" fill="rgb(225,38,54)" fg:x="604" fg:w="41"/><text x="49.7176%" y="607.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.56%)</title><rect x="51.2695%" y="581" width="1.5561%" height="15" fill="rgb(246,50,30)" fg:x="626" fg:w="19"/><text x="51.5195%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (19 samples, 1.56%)</title><rect x="51.2695%" y="565" width="1.5561%" height="15" fill="rgb(246,148,9)" fg:x="626" fg:w="19"/><text x="51.5195%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.74%)</title><rect x="52.0885%" y="549" width="0.7371%" height="15" fill="rgb(223,75,4)" fg:x="636" fg:w="9"/><text x="52.3385%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.74%)</title><rect x="52.0885%" y="533" width="0.7371%" height="15" fill="rgb(239,148,41)" fg:x="636" fg:w="9"/><text x="52.3385%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (6 samples, 0.49%)</title><rect x="52.3342%" y="517" width="0.4914%" height="15" fill="rgb(205,195,3)" fg:x="639" fg:w="6"/><text x="52.5842%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (6 samples, 0.49%)</title><rect x="52.3342%" y="501" width="0.4914%" height="15" fill="rgb(254,161,1)" fg:x="639" fg:w="6"/><text x="52.5842%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (6 samples, 0.49%)</title><rect x="52.3342%" y="485" width="0.4914%" height="15" fill="rgb(211,229,8)" fg:x="639" fg:w="6"/><text x="52.5842%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="52.3342%" y="469" width="0.4914%" height="15" fill="rgb(220,97,9)" fg:x="639" fg:w="6"/><text x="52.5842%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="52.3342%" y="453" width="0.4914%" height="15" fill="rgb(240,218,8)" fg:x="639" fg:w="6"/><text x="52.5842%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="52.7437%" y="437" width="0.0819%" height="15" fill="rgb(250,44,0)" fg:x="644" fg:w="1"/><text x="52.9937%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="52.9075%" y="581" width="0.0819%" height="15" fill="rgb(236,41,53)" fg:x="646" fg:w="1"/><text x="53.1575%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.9075%" y="565" width="0.0819%" height="15" fill="rgb(218,227,13)" fg:x="646" fg:w="1"/><text x="53.1575%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9075%" y="549" width="0.0819%" height="15" fill="rgb(217,94,32)" fg:x="646" fg:w="1"/><text x="53.1575%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="53.1532%" y="565" width="0.0819%" height="15" fill="rgb(213,217,12)" fg:x="649" fg:w="1"/><text x="53.4032%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.3989%" y="421" width="0.0819%" height="15" fill="rgb(229,13,46)" fg:x="652" fg:w="1"/><text x="53.6489%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.3989%" y="405" width="0.0819%" height="15" fill="rgb(243,139,5)" fg:x="652" fg:w="1"/><text x="53.6489%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.3989%" y="389" width="0.0819%" height="15" fill="rgb(249,38,45)" fg:x="652" fg:w="1"/><text x="53.6489%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.3989%" y="373" width="0.0819%" height="15" fill="rgb(216,70,11)" fg:x="652" fg:w="1"/><text x="53.6489%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.3989%" y="357" width="0.0819%" height="15" fill="rgb(253,101,25)" fg:x="652" fg:w="1"/><text x="53.6489%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.3989%" y="341" width="0.0819%" height="15" fill="rgb(207,197,30)" fg:x="652" fg:w="1"/><text x="53.6489%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.3989%" y="325" width="0.0819%" height="15" fill="rgb(238,87,13)" fg:x="652" fg:w="1"/><text x="53.6489%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="53.2351%" y="549" width="0.3276%" height="15" fill="rgb(215,155,8)" fg:x="650" fg:w="4"/><text x="53.4851%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.3989%" y="533" width="0.1638%" height="15" fill="rgb(239,166,38)" fg:x="652" fg:w="2"/><text x="53.6489%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.3989%" y="517" width="0.1638%" height="15" fill="rgb(240,194,35)" fg:x="652" fg:w="2"/><text x="53.6489%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.3989%" y="501" width="0.1638%" height="15" fill="rgb(219,10,44)" fg:x="652" fg:w="2"/><text x="53.6489%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.3989%" y="485" width="0.1638%" height="15" fill="rgb(251,220,35)" fg:x="652" fg:w="2"/><text x="53.6489%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="53.3989%" y="469" width="0.1638%" height="15" fill="rgb(218,117,13)" fg:x="652" fg:w="2"/><text x="53.6489%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="53.3989%" y="453" width="0.1638%" height="15" fill="rgb(221,213,40)" fg:x="652" fg:w="2"/><text x="53.6489%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="53.3989%" y="437" width="0.1638%" height="15" fill="rgb(251,224,35)" fg:x="652" fg:w="2"/><text x="53.6489%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="53.4808%" y="421" width="0.0819%" height="15" fill="rgb(241,33,39)" fg:x="653" fg:w="1"/><text x="53.7308%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.4808%" y="405" width="0.0819%" height="15" fill="rgb(222,74,17)" fg:x="653" fg:w="1"/><text x="53.7308%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8084%" y="357" width="0.0819%" height="15" fill="rgb(225,103,0)" fg:x="657" fg:w="1"/><text x="54.0584%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8084%" y="341" width="0.0819%" height="15" fill="rgb(240,0,12)" fg:x="657" fg:w="1"/><text x="54.0584%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.8084%" y="325" width="0.0819%" height="15" fill="rgb(233,213,37)" fg:x="657" fg:w="1"/><text x="54.0584%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.8084%" y="309" width="0.0819%" height="15" fill="rgb(225,84,52)" fg:x="657" fg:w="1"/><text x="54.0584%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.8084%" y="293" width="0.0819%" height="15" fill="rgb(247,160,51)" fg:x="657" fg:w="1"/><text x="54.0584%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.8084%" y="277" width="0.0819%" height="15" fill="rgb(244,60,51)" fg:x="657" fg:w="1"/><text x="54.0584%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8084%" y="261" width="0.0819%" height="15" fill="rgb(233,114,7)" fg:x="657" fg:w="1"/><text x="54.0584%" y="271.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (4 samples, 0.33%)</title><rect x="53.6446%" y="453" width="0.3276%" height="15" fill="rgb(246,136,16)" fg:x="655" fg:w="4"/><text x="53.8946%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.8084%" y="437" width="0.1638%" height="15" fill="rgb(243,114,45)" fg:x="657" fg:w="2"/><text x="54.0584%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.8084%" y="421" width="0.1638%" height="15" fill="rgb(247,183,43)" fg:x="657" fg:w="2"/><text x="54.0584%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="53.8084%" y="405" width="0.1638%" height="15" fill="rgb(251,210,42)" fg:x="657" fg:w="2"/><text x="54.0584%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="53.8084%" y="389" width="0.1638%" height="15" fill="rgb(221,88,35)" fg:x="657" fg:w="2"/><text x="54.0584%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="53.8084%" y="373" width="0.1638%" height="15" fill="rgb(242,21,20)" fg:x="657" fg:w="2"/><text x="54.0584%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="53.8903%" y="357" width="0.0819%" height="15" fill="rgb(233,226,36)" fg:x="658" fg:w="1"/><text x="54.1403%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.8903%" y="341" width="0.0819%" height="15" fill="rgb(243,189,34)" fg:x="658" fg:w="1"/><text x="54.1403%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9722%" y="453" width="0.0819%" height="15" fill="rgb(207,145,50)" fg:x="659" fg:w="1"/><text x="54.2222%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9722%" y="437" width="0.0819%" height="15" fill="rgb(242,1,50)" fg:x="659" fg:w="1"/><text x="54.2222%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9722%" y="421" width="0.0819%" height="15" fill="rgb(231,65,32)" fg:x="659" fg:w="1"/><text x="54.2222%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.9722%" y="405" width="0.0819%" height="15" fill="rgb(208,68,49)" fg:x="659" fg:w="1"/><text x="54.2222%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.9722%" y="389" width="0.0819%" height="15" fill="rgb(253,54,49)" fg:x="659" fg:w="1"/><text x="54.2222%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.9722%" y="373" width="0.0819%" height="15" fill="rgb(245,186,24)" fg:x="659" fg:w="1"/><text x="54.2222%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="53.9722%" y="357" width="0.0819%" height="15" fill="rgb(209,2,41)" fg:x="659" fg:w="1"/><text x="54.2222%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.9722%" y="341" width="0.0819%" height="15" fill="rgb(242,208,54)" fg:x="659" fg:w="1"/><text x="54.2222%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="54.0541%" y="453" width="0.0819%" height="15" fill="rgb(225,9,51)" fg:x="660" fg:w="1"/><text x="54.3041%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.1360%" y="389" width="0.0819%" height="15" fill="rgb(207,207,25)" fg:x="661" fg:w="1"/><text x="54.3860%" y="399.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.25%)</title><rect x="54.1360%" y="453" width="0.2457%" height="15" fill="rgb(253,96,18)" fg:x="661" fg:w="3"/><text x="54.3860%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.25%)</title><rect x="54.1360%" y="437" width="0.2457%" height="15" fill="rgb(252,215,20)" fg:x="661" fg:w="3"/><text x="54.3860%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.25%)</title><rect x="54.1360%" y="421" width="0.2457%" height="15" fill="rgb(245,227,26)" fg:x="661" fg:w="3"/><text x="54.3860%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.25%)</title><rect x="54.1360%" y="405" width="0.2457%" height="15" fill="rgb(241,208,0)" fg:x="661" fg:w="3"/><text x="54.3860%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.2179%" y="389" width="0.1638%" height="15" fill="rgb(224,130,10)" fg:x="662" fg:w="2"/><text x="54.4679%" y="399.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="54.6274%" y="373" width="0.2457%" height="15" fill="rgb(237,29,0)" fg:x="667" fg:w="3"/><text x="54.8774%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.9550%" y="341" width="0.0819%" height="15" fill="rgb(219,27,41)" fg:x="671" fg:w="1"/><text x="55.2050%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.9550%" y="325" width="0.0819%" height="15" fill="rgb(245,101,19)" fg:x="671" fg:w="1"/><text x="55.2050%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0369%" y="341" width="0.0819%" height="15" fill="rgb(243,44,37)" fg:x="672" fg:w="1"/><text x="55.2869%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.0369%" y="325" width="0.0819%" height="15" fill="rgb(228,213,43)" fg:x="672" fg:w="1"/><text x="55.2869%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="55.0369%" y="309" width="0.0819%" height="15" fill="rgb(219,163,21)" fg:x="672" fg:w="1"/><text x="55.2869%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.2007%" y="261" width="0.0819%" height="15" fill="rgb(234,86,24)" fg:x="674" fg:w="1"/><text x="55.4507%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.2007%" y="245" width="0.0819%" height="15" fill="rgb(225,10,24)" fg:x="674" fg:w="1"/><text x="55.4507%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.2007%" y="293" width="0.1638%" height="15" fill="rgb(218,109,7)" fg:x="674" fg:w="2"/><text x="55.4507%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.2007%" y="277" width="0.1638%" height="15" fill="rgb(210,20,26)" fg:x="674" fg:w="2"/><text x="55.4507%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2826%" y="261" width="0.0819%" height="15" fill="rgb(216,18,1)" fg:x="675" fg:w="1"/><text x="55.5326%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="55.1188%" y="325" width="0.3276%" height="15" fill="rgb(206,163,23)" fg:x="673" fg:w="4"/><text x="55.3688%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="55.2007%" y="309" width="0.2457%" height="15" fill="rgb(229,150,31)" fg:x="674" fg:w="3"/><text x="55.4507%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.3645%" y="293" width="0.0819%" height="15" fill="rgb(231,10,5)" fg:x="676" fg:w="1"/><text x="55.6145%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.3645%" y="277" width="0.0819%" height="15" fill="rgb(250,40,50)" fg:x="676" fg:w="1"/><text x="55.6145%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.3645%" y="261" width="0.0819%" height="15" fill="rgb(217,119,7)" fg:x="676" fg:w="1"/><text x="55.6145%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.3645%" y="245" width="0.0819%" height="15" fill="rgb(245,214,40)" fg:x="676" fg:w="1"/><text x="55.6145%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.3645%" y="229" width="0.0819%" height="15" fill="rgb(216,187,1)" fg:x="676" fg:w="1"/><text x="55.6145%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5283%" y="277" width="0.0819%" height="15" fill="rgb(237,146,21)" fg:x="678" fg:w="1"/><text x="55.7783%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.90%)</title><rect x="54.8731%" y="373" width="0.9009%" height="15" fill="rgb(210,174,47)" fg:x="670" fg:w="11"/><text x="55.1231%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.90%)</title><rect x="54.8731%" y="357" width="0.9009%" height="15" fill="rgb(218,111,39)" fg:x="670" fg:w="11"/><text x="55.1231%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (8 samples, 0.66%)</title><rect x="55.1188%" y="341" width="0.6552%" height="15" fill="rgb(224,95,19)" fg:x="673" fg:w="8"/><text x="55.3688%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.33%)</title><rect x="55.4464%" y="325" width="0.3276%" height="15" fill="rgb(234,15,38)" fg:x="677" fg:w="4"/><text x="55.6964%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.33%)</title><rect x="55.4464%" y="309" width="0.3276%" height="15" fill="rgb(246,56,12)" fg:x="677" fg:w="4"/><text x="55.6964%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.25%)</title><rect x="55.5283%" y="293" width="0.2457%" height="15" fill="rgb(247,16,17)" fg:x="678" fg:w="3"/><text x="55.7783%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.6102%" y="277" width="0.1638%" height="15" fill="rgb(215,151,11)" fg:x="679" fg:w="2"/><text x="55.8602%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.0197%" y="341" width="0.0819%" height="15" fill="rgb(225,16,24)" fg:x="684" fg:w="1"/><text x="56.2697%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.0197%" y="325" width="0.0819%" height="15" fill="rgb(217,117,5)" fg:x="684" fg:w="1"/><text x="56.2697%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.1016%" y="309" width="0.0819%" height="15" fill="rgb(246,187,53)" fg:x="685" fg:w="1"/><text x="56.3516%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.1016%" y="293" width="0.0819%" height="15" fill="rgb(241,71,40)" fg:x="685" fg:w="1"/><text x="56.3516%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.1835%" y="309" width="0.0819%" height="15" fill="rgb(231,67,39)" fg:x="686" fg:w="1"/><text x="56.4335%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.1835%" y="293" width="0.0819%" height="15" fill="rgb(222,120,24)" fg:x="686" fg:w="1"/><text x="56.4335%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.2654%" y="309" width="0.0819%" height="15" fill="rgb(248,3,3)" fg:x="687" fg:w="1"/><text x="56.5154%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.2654%" y="293" width="0.0819%" height="15" fill="rgb(228,218,5)" fg:x="687" fg:w="1"/><text x="56.5154%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (24 samples, 1.97%)</title><rect x="54.4636%" y="437" width="1.9656%" height="15" fill="rgb(212,202,43)" fg:x="665" fg:w="24"/><text x="54.7136%" y="447.50">k..</text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (24 samples, 1.97%)</title><rect x="54.4636%" y="421" width="1.9656%" height="15" fill="rgb(235,183,2)" fg:x="665" fg:w="24"/><text x="54.7136%" y="431.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (24 samples, 1.97%)</title><rect x="54.4636%" y="405" width="1.9656%" height="15" fill="rgb(230,165,10)" fg:x="665" fg:w="24"/><text x="54.7136%" y="415.50">s..</text></g><g><title>serde_json::value::de::visit_object (24 samples, 1.97%)</title><rect x="54.4636%" y="389" width="1.9656%" height="15" fill="rgb(219,54,40)" fg:x="665" fg:w="24"/><text x="54.7136%" y="399.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.66%)</title><rect x="55.7740%" y="373" width="0.6552%" height="15" fill="rgb(244,73,9)" fg:x="681" fg:w="8"/><text x="56.0240%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="55.8559%" y="357" width="0.5733%" height="15" fill="rgb(212,32,45)" fg:x="682" fg:w="7"/><text x="56.1059%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="56.1016%" y="341" width="0.3276%" height="15" fill="rgb(205,58,31)" fg:x="685" fg:w="4"/><text x="56.3516%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="56.1016%" y="325" width="0.3276%" height="15" fill="rgb(250,120,43)" fg:x="685" fg:w="4"/><text x="56.3516%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.3473%" y="309" width="0.0819%" height="15" fill="rgb(235,13,10)" fg:x="688" fg:w="1"/><text x="56.5973%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.3473%" y="293" width="0.0819%" height="15" fill="rgb(232,219,31)" fg:x="688" fg:w="1"/><text x="56.5973%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.25%)</title><rect x="56.5111%" y="389" width="0.2457%" height="15" fill="rgb(218,157,51)" fg:x="690" fg:w="3"/><text x="56.7611%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.5930%" y="373" width="0.1638%" height="15" fill="rgb(211,91,52)" fg:x="691" fg:w="2"/><text x="56.8430%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="56.7568%" y="389" width="0.3276%" height="15" fill="rgb(240,173,1)" fg:x="693" fg:w="4"/><text x="57.0068%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.0025%" y="373" width="0.0819%" height="15" fill="rgb(248,20,47)" fg:x="696" fg:w="1"/><text x="57.2525%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.0025%" y="357" width="0.0819%" height="15" fill="rgb(217,221,40)" fg:x="696" fg:w="1"/><text x="57.2525%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.4120%" y="357" width="0.0819%" height="15" fill="rgb(226,149,51)" fg:x="701" fg:w="1"/><text x="57.6620%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4120%" y="341" width="0.0819%" height="15" fill="rgb(252,193,7)" fg:x="701" fg:w="1"/><text x="57.6620%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.4939%" y="357" width="0.1638%" height="15" fill="rgb(205,123,0)" fg:x="702" fg:w="2"/><text x="57.7439%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.4939%" y="341" width="0.1638%" height="15" fill="rgb(233,173,25)" fg:x="702" fg:w="2"/><text x="57.7439%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5758%" y="325" width="0.0819%" height="15" fill="rgb(216,63,32)" fg:x="703" fg:w="1"/><text x="57.8258%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.7396%" y="325" width="0.0819%" height="15" fill="rgb(209,56,45)" fg:x="705" fg:w="1"/><text x="57.9896%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.7396%" y="309" width="0.0819%" height="15" fill="rgb(226,111,49)" fg:x="705" fg:w="1"/><text x="57.9896%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.7396%" y="293" width="0.0819%" height="15" fill="rgb(244,181,21)" fg:x="705" fg:w="1"/><text x="57.9896%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.8215%" y="293" width="0.0819%" height="15" fill="rgb(222,126,15)" fg:x="706" fg:w="1"/><text x="58.0715%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.8215%" y="277" width="0.0819%" height="15" fill="rgb(222,95,17)" fg:x="706" fg:w="1"/><text x="58.0715%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.9034%" y="293" width="0.0819%" height="15" fill="rgb(254,46,5)" fg:x="707" fg:w="1"/><text x="58.1534%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="57.8215%" y="309" width="0.3276%" height="15" fill="rgb(236,216,35)" fg:x="706" fg:w="4"/><text x="58.0715%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="57.9853%" y="293" width="0.1638%" height="15" fill="rgb(217,187,26)" fg:x="708" fg:w="2"/><text x="58.2353%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.0672%" y="277" width="0.0819%" height="15" fill="rgb(207,192,25)" fg:x="709" fg:w="1"/><text x="58.3172%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="58.0672%" y="261" width="0.0819%" height="15" fill="rgb(253,135,27)" fg:x="709" fg:w="1"/><text x="58.3172%" y="271.50"></text></g><g><title>core::iter::adapters::try_process (57 samples, 4.67%)</title><rect x="53.5627%" y="533" width="4.6683%" height="15" fill="rgb(211,122,29)" fg:x="654" fg:w="57"/><text x="53.8127%" y="543.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (57 samples, 4.67%)</title><rect x="53.5627%" y="517" width="4.6683%" height="15" fill="rgb(233,162,40)" fg:x="654" fg:w="57"/><text x="53.8127%" y="527.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (56 samples, 4.59%)</title><rect x="53.6446%" y="501" width="4.5864%" height="15" fill="rgb(222,184,47)" fg:x="655" fg:w="56"/><text x="53.8946%" y="511.50">&lt;core..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (56 samples, 4.59%)</title><rect x="53.6446%" y="485" width="4.5864%" height="15" fill="rgb(249,99,23)" fg:x="655" fg:w="56"/><text x="53.8946%" y="495.50">&lt;engi..</text></g><g><title>engine::internal::Entities::prepare_entity (56 samples, 4.59%)</title><rect x="53.6446%" y="469" width="4.5864%" height="15" fill="rgb(214,60,12)" fg:x="655" fg:w="56"/><text x="53.8946%" y="479.50">engin..</text></g><g><title>kernel::model::deserialize_entity (47 samples, 3.85%)</title><rect x="54.3817%" y="453" width="3.8493%" height="15" fill="rgb(250,229,36)" fg:x="664" fg:w="47"/><text x="54.6317%" y="463.50">kern..</text></g><g><title>serde_json::de::from_trait (22 samples, 1.80%)</title><rect x="56.4292%" y="437" width="1.8018%" height="15" fill="rgb(232,195,10)" fg:x="689" fg:w="22"/><text x="56.6792%" y="447.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22 samples, 1.80%)</title><rect x="56.4292%" y="421" width="1.8018%" height="15" fill="rgb(205,213,31)" fg:x="689" fg:w="22"/><text x="56.6792%" y="431.50">s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.72%)</title><rect x="56.5111%" y="405" width="1.7199%" height="15" fill="rgb(237,43,8)" fg:x="690" fg:w="21"/><text x="56.7611%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14 samples, 1.15%)</title><rect x="57.0844%" y="389" width="1.1466%" height="15" fill="rgb(216,208,3)" fg:x="697" fg:w="14"/><text x="57.3344%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.06%)</title><rect x="57.1663%" y="373" width="1.0647%" height="15" fill="rgb(228,179,44)" fg:x="698" fg:w="13"/><text x="57.4163%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="57.6577%" y="357" width="0.5733%" height="15" fill="rgb(230,192,27)" fg:x="704" fg:w="7"/><text x="57.9077%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="57.7396%" y="341" width="0.4914%" height="15" fill="rgb(251,30,38)" fg:x="705" fg:w="6"/><text x="57.9896%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="57.8215%" y="325" width="0.4095%" height="15" fill="rgb(246,55,52)" fg:x="706" fg:w="5"/><text x="58.0715%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="58.1491%" y="309" width="0.0819%" height="15" fill="rgb(249,79,26)" fg:x="710" fg:w="1"/><text x="58.3991%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.1491%" y="293" width="0.0819%" height="15" fill="rgb(220,202,16)" fg:x="710" fg:w="1"/><text x="58.3991%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (58 samples, 4.75%)</title><rect x="53.5627%" y="549" width="4.7502%" height="15" fill="rgb(250,170,23)" fg:x="654" fg:w="58"/><text x="53.8127%" y="559.50">&lt;plugi..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="58.2310%" y="533" width="0.0819%" height="15" fill="rgb(230,7,37)" fg:x="711" fg:w="1"/><text x="58.4810%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2310%" y="517" width="0.0819%" height="15" fill="rgb(213,71,1)" fg:x="711" fg:w="1"/><text x="58.4810%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.3129%" y="549" width="0.0819%" height="15" fill="rgb(227,87,39)" fg:x="712" fg:w="1"/><text x="58.5629%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.6405%" y="517" width="0.0819%" height="15" fill="rgb(210,41,29)" fg:x="716" fg:w="1"/><text x="58.8905%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.7224%" y="517" width="0.0819%" height="15" fill="rgb(206,191,31)" fg:x="717" fg:w="1"/><text x="58.9724%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="59.0500%" y="437" width="0.1638%" height="15" fill="rgb(247,75,54)" fg:x="721" fg:w="2"/><text x="59.3000%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.41%)</title><rect x="58.8862%" y="485" width="0.4095%" height="15" fill="rgb(208,54,50)" fg:x="719" fg:w="5"/><text x="59.1362%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="58.8862%" y="469" width="0.4095%" height="15" fill="rgb(214,90,37)" fg:x="719" fg:w="5"/><text x="59.1362%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="58.9681%" y="453" width="0.3276%" height="15" fill="rgb(220,132,6)" fg:x="720" fg:w="4"/><text x="59.2181%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="59.2138%" y="437" width="0.0819%" height="15" fill="rgb(213,167,7)" fg:x="723" fg:w="1"/><text x="59.4638%" y="447.50"></text></g><g><title>plugins_core::tools::get_contained_keys (80 samples, 6.55%)</title><rect x="52.8256%" y="597" width="6.5520%" height="15" fill="rgb(243,36,27)" fg:x="645" fg:w="80"/><text x="53.0756%" y="607.50">plugins_c..</text></g><g><title>kernel::model::entry::Entry::scope (78 samples, 6.39%)</title><rect x="52.9894%" y="581" width="6.3882%" height="15" fill="rgb(235,147,12)" fg:x="647" fg:w="78"/><text x="53.2394%" y="591.50">kernel::..</text></g><g><title>kernel::model::Entity::load_scope (75 samples, 6.14%)</title><rect x="53.2351%" y="565" width="6.1425%" height="15" fill="rgb(212,198,44)" fg:x="650" fg:w="75"/><text x="53.4851%" y="575.50">kernel::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.98%)</title><rect x="58.3948%" y="549" width="0.9828%" height="15" fill="rgb(218,68,50)" fg:x="713" fg:w="12"/><text x="58.6448%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.98%)</title><rect x="58.3948%" y="533" width="0.9828%" height="15" fill="rgb(224,79,48)" fg:x="713" fg:w="12"/><text x="58.6448%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (7 samples, 0.57%)</title><rect x="58.8043%" y="517" width="0.5733%" height="15" fill="rgb(213,191,50)" fg:x="718" fg:w="7"/><text x="59.0543%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (7 samples, 0.57%)</title><rect x="58.8043%" y="501" width="0.5733%" height="15" fill="rgb(254,146,10)" fg:x="718" fg:w="7"/><text x="59.0543%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2957%" y="485" width="0.0819%" height="15" fill="rgb(215,175,11)" fg:x="724" fg:w="1"/><text x="59.5457%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.3776%" y="581" width="0.0819%" height="15" fill="rgb(207,49,7)" fg:x="725" fg:w="1"/><text x="59.6276%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.5414%" y="549" width="0.1638%" height="15" fill="rgb(234,144,29)" fg:x="727" fg:w="2"/><text x="59.7914%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.5414%" y="533" width="0.1638%" height="15" fill="rgb(213,222,48)" fg:x="727" fg:w="2"/><text x="59.7914%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.6233%" y="517" width="0.0819%" height="15" fill="rgb(222,8,6)" fg:x="728" fg:w="1"/><text x="59.8733%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6233%" y="501" width="0.0819%" height="15" fill="rgb(221,114,49)" fg:x="728" fg:w="1"/><text x="59.8733%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6233%" y="485" width="0.0819%" height="15" fill="rgb(250,140,42)" fg:x="728" fg:w="1"/><text x="59.8733%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.6233%" y="469" width="0.0819%" height="15" fill="rgb(250,150,27)" fg:x="728" fg:w="1"/><text x="59.8733%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.6233%" y="453" width="0.0819%" height="15" fill="rgb(252,159,3)" fg:x="728" fg:w="1"/><text x="59.8733%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.6233%" y="437" width="0.0819%" height="15" fill="rgb(241,182,3)" fg:x="728" fg:w="1"/><text x="59.8733%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6233%" y="421" width="0.0819%" height="15" fill="rgb(236,3,9)" fg:x="728" fg:w="1"/><text x="59.8733%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6233%" y="405" width="0.0819%" height="15" fill="rgb(223,227,51)" fg:x="728" fg:w="1"/><text x="59.8733%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.6233%" y="389" width="0.0819%" height="15" fill="rgb(232,133,30)" fg:x="728" fg:w="1"/><text x="59.8733%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.6233%" y="373" width="0.0819%" height="15" fill="rgb(209,93,27)" fg:x="728" fg:w="1"/><text x="59.8733%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.6233%" y="357" width="0.0819%" height="15" fill="rgb(208,108,34)" fg:x="728" fg:w="1"/><text x="59.8733%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.6233%" y="341" width="0.0819%" height="15" fill="rgb(215,189,13)" fg:x="728" fg:w="1"/><text x="59.8733%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="59.6233%" y="325" width="0.0819%" height="15" fill="rgb(206,88,23)" fg:x="728" fg:w="1"/><text x="59.8733%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="59.6233%" y="309" width="0.0819%" height="15" fill="rgb(240,173,0)" fg:x="728" fg:w="1"/><text x="59.8733%" y="319.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="59.7052%" y="549" width="0.0819%" height="15" fill="rgb(223,106,52)" fg:x="729" fg:w="1"/><text x="59.9552%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="59.7052%" y="533" width="0.0819%" height="15" fill="rgb(206,130,16)" fg:x="729" fg:w="1"/><text x="59.9552%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7052%" y="517" width="0.0819%" height="15" fill="rgb(220,54,25)" fg:x="729" fg:w="1"/><text x="59.9552%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (130 samples, 10.65%)</title><rect x="49.2219%" y="629" width="10.6470%" height="15" fill="rgb(210,4,38)" fg:x="601" fg:w="130"/><text x="49.4719%" y="639.50">&lt;alloc::vec::Vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (130 samples, 10.65%)</title><rect x="49.2219%" y="613" width="10.6470%" height="15" fill="rgb(238,94,39)" fg:x="601" fg:w="130"/><text x="49.4719%" y="623.50">&lt;core::iter::ada..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.49%)</title><rect x="59.3776%" y="597" width="0.4914%" height="15" fill="rgb(234,124,34)" fg:x="725" fg:w="6"/><text x="59.6276%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.41%)</title><rect x="59.4595%" y="581" width="0.4095%" height="15" fill="rgb(221,91,40)" fg:x="726" fg:w="5"/><text x="59.7095%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.41%)</title><rect x="59.4595%" y="565" width="0.4095%" height="15" fill="rgb(246,53,28)" fg:x="726" fg:w="5"/><text x="59.7095%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.7871%" y="549" width="0.0819%" height="15" fill="rgb(229,109,7)" fg:x="730" fg:w="1"/><text x="60.0371%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.7871%" y="533" width="0.0819%" height="15" fill="rgb(249,117,8)" fg:x="730" fg:w="1"/><text x="60.0371%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.7871%" y="517" width="0.0819%" height="15" fill="rgb(210,181,1)" fg:x="730" fg:w="1"/><text x="60.0371%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.7871%" y="501" width="0.0819%" height="15" fill="rgb(211,66,1)" fg:x="730" fg:w="1"/><text x="60.0371%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="59.7871%" y="485" width="0.0819%" height="15" fill="rgb(221,90,14)" fg:x="730" fg:w="1"/><text x="60.0371%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.7871%" y="469" width="0.0819%" height="15" fill="rgb(219,222,44)" fg:x="730" fg:w="1"/><text x="60.0371%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.3604%" y="581" width="0.1638%" height="15" fill="rgb(246,34,33)" fg:x="737" fg:w="2"/><text x="60.6104%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.3604%" y="565" width="0.1638%" height="15" fill="rgb(227,135,41)" fg:x="737" fg:w="2"/><text x="60.6104%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="60.3604%" y="549" width="0.1638%" height="15" fill="rgb(226,15,14)" fg:x="737" fg:w="2"/><text x="60.6104%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="60.3604%" y="533" width="0.1638%" height="15" fill="rgb(236,148,47)" fg:x="737" fg:w="2"/><text x="60.6104%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="60.3604%" y="517" width="0.1638%" height="15" fill="rgb(233,162,52)" fg:x="737" fg:w="2"/><text x="60.6104%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.3604%" y="501" width="0.1638%" height="15" fill="rgb(244,35,28)" fg:x="737" fg:w="2"/><text x="60.6104%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.3604%" y="485" width="0.1638%" height="15" fill="rgb(205,121,10)" fg:x="737" fg:w="2"/><text x="60.6104%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="60.3604%" y="469" width="0.1638%" height="15" fill="rgb(250,58,18)" fg:x="737" fg:w="2"/><text x="60.6104%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="60.3604%" y="453" width="0.1638%" height="15" fill="rgb(216,37,13)" fg:x="737" fg:w="2"/><text x="60.6104%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="60.3604%" y="437" width="0.1638%" height="15" fill="rgb(221,215,42)" fg:x="737" fg:w="2"/><text x="60.6104%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="60.3604%" y="421" width="0.1638%" height="15" fill="rgb(217,214,19)" fg:x="737" fg:w="2"/><text x="60.6104%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.3604%" y="405" width="0.1638%" height="15" fill="rgb(233,139,13)" fg:x="737" fg:w="2"/><text x="60.6104%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="60.5242%" y="565" width="0.1638%" height="15" fill="rgb(247,168,23)" fg:x="739" fg:w="2"/><text x="60.7742%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="60.5242%" y="549" width="0.1638%" height="15" fill="rgb(207,202,1)" fg:x="739" fg:w="2"/><text x="60.7742%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6061%" y="533" width="0.0819%" height="15" fill="rgb(220,155,48)" fg:x="740" fg:w="1"/><text x="60.8561%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6061%" y="517" width="0.0819%" height="15" fill="rgb(250,43,26)" fg:x="740" fg:w="1"/><text x="60.8561%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6061%" y="501" width="0.0819%" height="15" fill="rgb(212,190,23)" fg:x="740" fg:w="1"/><text x="60.8561%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.6061%" y="485" width="0.0819%" height="15" fill="rgb(216,39,24)" fg:x="740" fg:w="1"/><text x="60.8561%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.6061%" y="469" width="0.0819%" height="15" fill="rgb(252,113,16)" fg:x="740" fg:w="1"/><text x="60.8561%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.6061%" y="453" width="0.0819%" height="15" fill="rgb(208,113,19)" fg:x="740" fg:w="1"/><text x="60.8561%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.6061%" y="437" width="0.0819%" height="15" fill="rgb(234,107,25)" fg:x="740" fg:w="1"/><text x="60.8561%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.6061%" y="421" width="0.0819%" height="15" fill="rgb(234,217,51)" fg:x="740" fg:w="1"/><text x="60.8561%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.6061%" y="405" width="0.0819%" height="15" fill="rgb(251,29,42)" fg:x="740" fg:w="1"/><text x="60.8561%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.6061%" y="389" width="0.0819%" height="15" fill="rgb(221,62,51)" fg:x="740" fg:w="1"/><text x="60.8561%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.6061%" y="373" width="0.0819%" height="15" fill="rgb(240,192,43)" fg:x="740" fg:w="1"/><text x="60.8561%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.6061%" y="357" width="0.0819%" height="15" fill="rgb(224,157,47)" fg:x="740" fg:w="1"/><text x="60.8561%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6061%" y="341" width="0.0819%" height="15" fill="rgb(226,84,45)" fg:x="740" fg:w="1"/><text x="60.8561%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="60.8518%" y="341" width="0.1638%" height="15" fill="rgb(208,207,23)" fg:x="743" fg:w="2"/><text x="61.1018%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="60.8518%" y="325" width="0.1638%" height="15" fill="rgb(253,34,51)" fg:x="743" fg:w="2"/><text x="61.1018%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="60.8518%" y="309" width="0.1638%" height="15" fill="rgb(227,26,34)" fg:x="743" fg:w="2"/><text x="61.1018%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="60.8518%" y="293" width="0.1638%" height="15" fill="rgb(245,75,19)" fg:x="743" fg:w="2"/><text x="61.1018%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="60.8518%" y="277" width="0.1638%" height="15" fill="rgb(250,191,31)" fg:x="743" fg:w="2"/><text x="61.1018%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9337%" y="261" width="0.0819%" height="15" fill="rgb(224,11,50)" fg:x="744" fg:w="1"/><text x="61.1837%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="60.8518%" y="437" width="0.2457%" height="15" fill="rgb(231,171,7)" fg:x="743" fg:w="3"/><text x="61.1018%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="60.8518%" y="421" width="0.2457%" height="15" fill="rgb(252,214,10)" fg:x="743" fg:w="3"/><text x="61.1018%" y="431.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.25%)</title><rect x="60.8518%" y="405" width="0.2457%" height="15" fill="rgb(249,45,46)" fg:x="743" fg:w="3"/><text x="61.1018%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.25%)</title><rect x="60.8518%" y="389" width="0.2457%" height="15" fill="rgb(240,173,7)" fg:x="743" fg:w="3"/><text x="61.1018%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.25%)</title><rect x="60.8518%" y="373" width="0.2457%" height="15" fill="rgb(235,214,13)" fg:x="743" fg:w="3"/><text x="61.1018%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.25%)</title><rect x="60.8518%" y="357" width="0.2457%" height="15" fill="rgb(245,156,8)" fg:x="743" fg:w="3"/><text x="61.1018%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.0156%" y="341" width="0.0819%" height="15" fill="rgb(235,46,12)" fg:x="745" fg:w="1"/><text x="61.2656%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="61.0975%" y="421" width="0.0819%" height="15" fill="rgb(221,81,14)" fg:x="746" fg:w="1"/><text x="61.3475%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.0975%" y="405" width="0.0819%" height="15" fill="rgb(238,207,9)" fg:x="746" fg:w="1"/><text x="61.3475%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.0975%" y="389" width="0.0819%" height="15" fill="rgb(224,129,35)" fg:x="746" fg:w="1"/><text x="61.3475%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.0975%" y="373" width="0.0819%" height="15" fill="rgb(243,218,34)" fg:x="746" fg:w="1"/><text x="61.3475%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="61.0975%" y="357" width="0.0819%" height="15" fill="rgb(220,166,13)" fg:x="746" fg:w="1"/><text x="61.3475%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="61.0975%" y="341" width="0.0819%" height="15" fill="rgb(227,167,49)" fg:x="746" fg:w="1"/><text x="61.3475%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.0975%" y="325" width="0.0819%" height="15" fill="rgb(234,142,12)" fg:x="746" fg:w="1"/><text x="61.3475%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.0975%" y="309" width="0.0819%" height="15" fill="rgb(207,100,48)" fg:x="746" fg:w="1"/><text x="61.3475%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="61.0975%" y="293" width="0.0819%" height="15" fill="rgb(210,25,14)" fg:x="746" fg:w="1"/><text x="61.3475%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="61.0975%" y="277" width="0.0819%" height="15" fill="rgb(246,116,27)" fg:x="746" fg:w="1"/><text x="61.3475%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="61.0975%" y="261" width="0.0819%" height="15" fill="rgb(214,193,42)" fg:x="746" fg:w="1"/><text x="61.3475%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="61.0975%" y="245" width="0.0819%" height="15" fill="rgb(214,122,8)" fg:x="746" fg:w="1"/><text x="61.3475%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.0975%" y="229" width="0.0819%" height="15" fill="rgb(244,173,18)" fg:x="746" fg:w="1"/><text x="61.3475%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="61.0975%" y="213" width="0.0819%" height="15" fill="rgb(232,68,19)" fg:x="746" fg:w="1"/><text x="61.3475%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="61.0975%" y="197" width="0.0819%" height="15" fill="rgb(236,224,1)" fg:x="746" fg:w="1"/><text x="61.3475%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="61.0975%" y="181" width="0.0819%" height="15" fill="rgb(240,11,8)" fg:x="746" fg:w="1"/><text x="61.3475%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="61.0975%" y="165" width="0.0819%" height="15" fill="rgb(244,159,20)" fg:x="746" fg:w="1"/><text x="61.3475%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="61.0975%" y="149" width="0.0819%" height="15" fill="rgb(240,223,54)" fg:x="746" fg:w="1"/><text x="61.3475%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="61.0975%" y="133" width="0.0819%" height="15" fill="rgb(237,146,5)" fg:x="746" fg:w="1"/><text x="61.3475%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="61.0975%" y="117" width="0.0819%" height="15" fill="rgb(218,221,32)" fg:x="746" fg:w="1"/><text x="61.3475%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="61.0975%" y="101" width="0.0819%" height="15" fill="rgb(244,96,26)" fg:x="746" fg:w="1"/><text x="61.3475%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="61.1794%" y="293" width="0.0819%" height="15" fill="rgb(245,184,37)" fg:x="747" fg:w="1"/><text x="61.4294%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.08%)</title><rect x="61.1794%" y="277" width="0.0819%" height="15" fill="rgb(248,91,47)" fg:x="747" fg:w="1"/><text x="61.4294%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.82%)</title><rect x="60.5242%" y="581" width="0.8190%" height="15" fill="rgb(243,199,8)" fg:x="739" fg:w="10"/><text x="60.7742%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.66%)</title><rect x="60.6880%" y="565" width="0.6552%" height="15" fill="rgb(249,12,15)" fg:x="741" fg:w="8"/><text x="60.9380%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (8 samples, 0.66%)</title><rect x="60.6880%" y="549" width="0.6552%" height="15" fill="rgb(245,97,12)" fg:x="741" fg:w="8"/><text x="60.9380%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.66%)</title><rect x="60.6880%" y="533" width="0.6552%" height="15" fill="rgb(244,61,1)" fg:x="741" fg:w="8"/><text x="60.9380%" y="543.50"></text></g><g><title>core::fmt::write (8 samples, 0.66%)</title><rect x="60.6880%" y="517" width="0.6552%" height="15" fill="rgb(222,194,10)" fg:x="741" fg:w="8"/><text x="60.9380%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (8 samples, 0.66%)</title><rect x="60.6880%" y="501" width="0.6552%" height="15" fill="rgb(226,178,8)" fg:x="741" fg:w="8"/><text x="60.9380%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (8 samples, 0.66%)</title><rect x="60.6880%" y="485" width="0.6552%" height="15" fill="rgb(241,32,34)" fg:x="741" fg:w="8"/><text x="60.9380%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (8 samples, 0.66%)</title><rect x="60.6880%" y="469" width="0.6552%" height="15" fill="rgb(254,26,6)" fg:x="741" fg:w="8"/><text x="60.9380%" y="479.50"></text></g><g><title>core::fmt::write (7 samples, 0.57%)</title><rect x="60.7699%" y="453" width="0.5733%" height="15" fill="rgb(249,71,11)" fg:x="742" fg:w="7"/><text x="61.0199%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="61.0975%" y="437" width="0.2457%" height="15" fill="rgb(232,170,27)" fg:x="746" fg:w="3"/><text x="61.3475%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="61.1794%" y="421" width="0.1638%" height="15" fill="rgb(214,223,17)" fg:x="747" fg:w="2"/><text x="61.4294%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="61.1794%" y="405" width="0.1638%" height="15" fill="rgb(250,18,15)" fg:x="747" fg:w="2"/><text x="61.4294%" y="415.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="61.1794%" y="389" width="0.1638%" height="15" fill="rgb(212,153,51)" fg:x="747" fg:w="2"/><text x="61.4294%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="61.1794%" y="373" width="0.1638%" height="15" fill="rgb(219,194,12)" fg:x="747" fg:w="2"/><text x="61.4294%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="61.1794%" y="357" width="0.1638%" height="15" fill="rgb(212,58,17)" fg:x="747" fg:w="2"/><text x="61.4294%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="61.1794%" y="341" width="0.1638%" height="15" fill="rgb(254,5,10)" fg:x="747" fg:w="2"/><text x="61.4294%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="61.1794%" y="325" width="0.1638%" height="15" fill="rgb(246,91,7)" fg:x="747" fg:w="2"/><text x="61.4294%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="61.1794%" y="309" width="0.1638%" height="15" fill="rgb(218,108,49)" fg:x="747" fg:w="2"/><text x="61.4294%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="61.2613%" y="293" width="0.0819%" height="15" fill="rgb(238,123,20)" fg:x="748" fg:w="1"/><text x="61.5113%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="61.2613%" y="277" width="0.0819%" height="15" fill="rgb(231,69,23)" fg:x="748" fg:w="1"/><text x="61.5113%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="61.2613%" y="261" width="0.0819%" height="15" fill="rgb(230,209,3)" fg:x="748" fg:w="1"/><text x="61.5113%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="61.2613%" y="245" width="0.0819%" height="15" fill="rgb(231,19,0)" fg:x="748" fg:w="1"/><text x="61.5113%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="61.2613%" y="229" width="0.0819%" height="15" fill="rgb(226,192,25)" fg:x="748" fg:w="1"/><text x="61.5113%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="61.2613%" y="213" width="0.0819%" height="15" fill="rgb(223,175,53)" fg:x="748" fg:w="1"/><text x="61.5113%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="61.2613%" y="197" width="0.0819%" height="15" fill="rgb(248,35,51)" fg:x="748" fg:w="1"/><text x="61.5113%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.3260%" y="469" width="0.0819%" height="15" fill="rgb(230,37,26)" fg:x="761" fg:w="1"/><text x="62.5760%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.3088%" y="373" width="0.0819%" height="15" fill="rgb(206,120,22)" fg:x="773" fg:w="1"/><text x="63.5588%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.3088%" y="357" width="0.0819%" height="15" fill="rgb(207,165,28)" fg:x="773" fg:w="1"/><text x="63.5588%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.6364%" y="325" width="0.0819%" height="15" fill="rgb(226,23,46)" fg:x="777" fg:w="1"/><text x="63.8864%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.6364%" y="309" width="0.0819%" height="15" fill="rgb(208,130,44)" fg:x="777" fg:w="1"/><text x="63.8864%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="63.7183%" y="325" width="0.0819%" height="15" fill="rgb(231,67,8)" fg:x="778" fg:w="1"/><text x="63.9683%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="63.7183%" y="309" width="0.0819%" height="15" fill="rgb(205,183,22)" fg:x="778" fg:w="1"/><text x="63.9683%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.33%)</title><rect x="63.5545%" y="341" width="0.3276%" height="15" fill="rgb(224,47,9)" fg:x="776" fg:w="4"/><text x="63.8045%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8002%" y="325" width="0.0819%" height="15" fill="rgb(250,183,49)" fg:x="779" fg:w="1"/><text x="64.0502%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.57%)</title><rect x="63.3907%" y="373" width="0.5733%" height="15" fill="rgb(220,151,39)" fg:x="774" fg:w="7"/><text x="63.6407%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="63.3907%" y="357" width="0.5733%" height="15" fill="rgb(220,118,20)" fg:x="774" fg:w="7"/><text x="63.6407%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="63.8821%" y="341" width="0.0819%" height="15" fill="rgb(231,65,51)" fg:x="780" fg:w="1"/><text x="64.1321%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8821%" y="325" width="0.0819%" height="15" fill="rgb(253,125,37)" fg:x="780" fg:w="1"/><text x="64.1321%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.9640%" y="373" width="0.0819%" height="15" fill="rgb(232,102,6)" fg:x="781" fg:w="1"/><text x="64.2140%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.0459%" y="357" width="0.0819%" height="15" fill="rgb(251,105,13)" fg:x="782" fg:w="1"/><text x="64.2959%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.31%)</title><rect x="62.8993%" y="389" width="1.3104%" height="15" fill="rgb(222,179,29)" fg:x="768" fg:w="16"/><text x="63.1493%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.0459%" y="373" width="0.1638%" height="15" fill="rgb(229,180,53)" fg:x="782" fg:w="2"/><text x="64.2959%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1278%" y="357" width="0.0819%" height="15" fill="rgb(238,104,13)" fg:x="783" fg:w="1"/><text x="64.3778%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (21 samples, 1.72%)</title><rect x="62.8993%" y="405" width="1.7199%" height="15" fill="rgb(210,130,5)" fg:x="768" fg:w="21"/><text x="63.1493%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="64.2097%" y="389" width="0.4095%" height="15" fill="rgb(233,87,49)" fg:x="784" fg:w="5"/><text x="64.4597%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="64.2916%" y="373" width="0.3276%" height="15" fill="rgb(243,34,9)" fg:x="785" fg:w="4"/><text x="64.5416%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="64.7830%" y="325" width="0.1638%" height="15" fill="rgb(235,225,10)" fg:x="791" fg:w="2"/><text x="65.0330%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.9468%" y="325" width="0.0819%" height="15" fill="rgb(212,0,30)" fg:x="793" fg:w="1"/><text x="65.1968%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.41%)</title><rect x="64.7011%" y="341" width="0.4095%" height="15" fill="rgb(211,177,0)" fg:x="790" fg:w="5"/><text x="64.9511%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.0287%" y="325" width="0.0819%" height="15" fill="rgb(225,220,11)" fg:x="794" fg:w="1"/><text x="65.2787%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.0287%" y="309" width="0.0819%" height="15" fill="rgb(215,10,13)" fg:x="794" fg:w="1"/><text x="65.2787%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.66%)</title><rect x="64.6192%" y="389" width="0.6552%" height="15" fill="rgb(240,177,14)" fg:x="789" fg:w="8"/><text x="64.8692%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.57%)</title><rect x="64.7011%" y="373" width="0.5733%" height="15" fill="rgb(243,7,39)" fg:x="790" fg:w="7"/><text x="64.9511%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="64.7011%" y="357" width="0.5733%" height="15" fill="rgb(212,99,0)" fg:x="790" fg:w="7"/><text x="64.9511%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="65.1106%" y="341" width="0.1638%" height="15" fill="rgb(225,162,48)" fg:x="795" fg:w="2"/><text x="65.3606%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1925%" y="325" width="0.0819%" height="15" fill="rgb(246,16,25)" fg:x="796" fg:w="1"/><text x="65.4425%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (33 samples, 2.70%)</title><rect x="62.7355%" y="421" width="2.7027%" height="15" fill="rgb(220,150,2)" fg:x="766" fg:w="33"/><text x="62.9855%" y="431.50">&lt;r..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10 samples, 0.82%)</title><rect x="64.6192%" y="405" width="0.8190%" height="15" fill="rgb(237,113,11)" fg:x="789" fg:w="10"/><text x="64.8692%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.2744%" y="389" width="0.1638%" height="15" fill="rgb(236,70,20)" fg:x="797" fg:w="2"/><text x="65.5244%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.4382%" y="421" width="0.0819%" height="15" fill="rgb(234,94,7)" fg:x="799" fg:w="1"/><text x="65.6882%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 3.19%)</title><rect x="62.5717%" y="437" width="3.1941%" height="15" fill="rgb(250,221,0)" fg:x="764" fg:w="39"/><text x="62.8217%" y="447.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.25%)</title><rect x="65.5201%" y="421" width="0.2457%" height="15" fill="rgb(245,149,46)" fg:x="800" fg:w="3"/><text x="65.7701%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.6020%" y="405" width="0.1638%" height="15" fill="rgb(215,37,27)" fg:x="801" fg:w="2"/><text x="65.8520%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (47 samples, 3.85%)</title><rect x="62.4079%" y="469" width="3.8493%" height="15" fill="rgb(232,65,3)" fg:x="762" fg:w="47"/><text x="62.6579%" y="479.50">&lt;rpc..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (46 samples, 3.77%)</title><rect x="62.4898%" y="453" width="3.7674%" height="15" fill="rgb(214,2,16)" fg:x="763" fg:w="46"/><text x="62.7398%" y="463.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.49%)</title><rect x="65.7658%" y="437" width="0.4914%" height="15" fill="rgb(227,131,50)" fg:x="803" fg:w="6"/><text x="66.0158%" y="447.50"></text></g><g><title>__libc_malloc (6 samples, 0.49%)</title><rect x="65.7658%" y="421" width="0.4914%" height="15" fill="rgb(247,131,45)" fg:x="803" fg:w="6"/><text x="66.0158%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.33%)</title><rect x="66.2572%" y="469" width="0.3276%" height="15" fill="rgb(215,97,47)" fg:x="809" fg:w="4"/><text x="66.5072%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.4210%" y="453" width="0.1638%" height="15" fill="rgb(233,143,12)" fg:x="811" fg:w="2"/><text x="66.6710%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 5.32%)</title><rect x="61.7527%" y="485" width="5.3235%" height="15" fill="rgb(222,57,17)" fg:x="754" fg:w="65"/><text x="62.0027%" y="495.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.49%)</title><rect x="66.5848%" y="469" width="0.4914%" height="15" fill="rgb(214,119,38)" fg:x="813" fg:w="6"/><text x="66.8348%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.33%)</title><rect x="66.7486%" y="453" width="0.3276%" height="15" fill="rgb(217,28,47)" fg:x="815" fg:w="4"/><text x="66.9986%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="66.9124%" y="437" width="0.1638%" height="15" fill="rgb(231,14,52)" fg:x="817" fg:w="2"/><text x="67.1624%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (75 samples, 6.14%)</title><rect x="61.4251%" y="517" width="6.1425%" height="15" fill="rgb(220,158,18)" fg:x="750" fg:w="75"/><text x="61.6751%" y="527.50">&lt;rpc_pro..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (73 samples, 5.98%)</title><rect x="61.5889%" y="501" width="5.9787%" height="15" fill="rgb(222,143,46)" fg:x="752" fg:w="73"/><text x="61.8389%" y="511.50">&lt;std::co..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.49%)</title><rect x="67.0762%" y="485" width="0.4914%" height="15" fill="rgb(227,165,5)" fg:x="819" fg:w="6"/><text x="67.3262%" y="495.50"></text></g><g><title>__libc_malloc (6 samples, 0.49%)</title><rect x="67.0762%" y="469" width="0.4914%" height="15" fill="rgb(216,222,49)" fg:x="819" fg:w="6"/><text x="67.3262%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.25%)</title><rect x="67.5676%" y="517" width="0.2457%" height="15" fill="rgb(238,73,39)" fg:x="825" fg:w="3"/><text x="67.8176%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.6495%" y="501" width="0.1638%" height="15" fill="rgb(252,115,9)" fg:x="826" fg:w="2"/><text x="67.8995%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (83 samples, 6.80%)</title><rect x="61.3432%" y="533" width="6.7977%" height="15" fill="rgb(238,202,4)" fg:x="749" fg:w="83"/><text x="61.5932%" y="543.50">&lt;core::it..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.33%)</title><rect x="67.8133%" y="517" width="0.3276%" height="15" fill="rgb(252,153,44)" fg:x="828" fg:w="4"/><text x="68.0633%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.25%)</title><rect x="67.8952%" y="501" width="0.2457%" height="15" fill="rgb(235,128,27)" fg:x="829" fg:w="3"/><text x="68.1452%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.0590%" y="485" width="0.0819%" height="15" fill="rgb(221,121,47)" fg:x="831" fg:w="1"/><text x="68.3090%" y="495.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (98 samples, 8.03%)</title><rect x="61.3432%" y="565" width="8.0262%" height="15" fill="rgb(247,211,47)" fg:x="749" fg:w="98"/><text x="61.5932%" y="575.50">&lt;rpc_proto:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (98 samples, 8.03%)</title><rect x="61.3432%" y="549" width="8.0262%" height="15" fill="rgb(252,47,49)" fg:x="749" fg:w="98"/><text x="61.5932%" y="559.50">&lt;std::colle..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 1.23%)</title><rect x="68.1409%" y="533" width="1.2285%" height="15" fill="rgb(219,119,53)" fg:x="832" fg:w="15"/><text x="68.3909%" y="543.50"></text></g><g><title>__libc_malloc (15 samples, 1.23%)</title><rect x="68.1409%" y="517" width="1.2285%" height="15" fill="rgb(243,165,53)" fg:x="832" fg:w="15"/><text x="68.3909%" y="527.50"></text></g><g><title>__libc_malloc (6 samples, 0.49%)</title><rect x="69.6151%" y="517" width="0.4914%" height="15" fill="rgb(230,12,35)" fg:x="850" fg:w="6"/><text x="69.8651%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.74%)</title><rect x="70.1065%" y="517" width="0.7371%" height="15" fill="rgb(239,57,49)" fg:x="856" fg:w="9"/><text x="70.3565%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="70.5979%" y="501" width="0.2457%" height="15" fill="rgb(231,154,7)" fg:x="862" fg:w="3"/><text x="70.8479%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="70.6798%" y="485" width="0.1638%" height="15" fill="rgb(248,81,34)" fg:x="863" fg:w="2"/><text x="70.9298%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="70.8436%" y="517" width="0.0819%" height="15" fill="rgb(247,9,5)" fg:x="865" fg:w="1"/><text x="71.0936%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.8436%" y="501" width="0.0819%" height="15" fill="rgb(228,172,27)" fg:x="865" fg:w="1"/><text x="71.0936%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8436%" y="485" width="0.0819%" height="15" fill="rgb(230,57,44)" fg:x="865" fg:w="1"/><text x="71.0936%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8436%" y="469" width="0.0819%" height="15" fill="rgb(249,35,22)" fg:x="865" fg:w="1"/><text x="71.0936%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="70.9255%" y="517" width="0.0819%" height="15" fill="rgb(250,137,27)" fg:x="866" fg:w="1"/><text x="71.1755%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.9255%" y="501" width="0.0819%" height="15" fill="rgb(251,57,31)" fg:x="866" fg:w="1"/><text x="71.1755%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9255%" y="485" width="0.0819%" height="15" fill="rgb(238,60,0)" fg:x="866" fg:w="1"/><text x="71.1755%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="71.0074%" y="517" width="0.0819%" height="15" fill="rgb(242,185,39)" fg:x="867" fg:w="1"/><text x="71.2574%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.0074%" y="501" width="0.0819%" height="15" fill="rgb(240,63,43)" fg:x="867" fg:w="1"/><text x="71.2574%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0074%" y="485" width="0.0819%" height="15" fill="rgb(236,155,6)" fg:x="867" fg:w="1"/><text x="71.2574%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.0893%" y="485" width="0.1638%" height="15" fill="rgb(215,11,29)" fg:x="868" fg:w="2"/><text x="71.3393%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.2531%" y="485" width="0.1638%" height="15" fill="rgb(228,180,48)" fg:x="870" fg:w="2"/><text x="71.5031%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.2531%" y="469" width="0.1638%" height="15" fill="rgb(241,102,12)" fg:x="870" fg:w="2"/><text x="71.5031%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.2531%" y="453" width="0.1638%" height="15" fill="rgb(246,213,4)" fg:x="870" fg:w="2"/><text x="71.5031%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4988%" y="469" width="0.0819%" height="15" fill="rgb(218,134,35)" fg:x="873" fg:w="1"/><text x="71.7488%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4988%" y="453" width="0.0819%" height="15" fill="rgb(251,117,35)" fg:x="873" fg:w="1"/><text x="71.7488%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="71.6626%" y="453" width="0.1638%" height="15" fill="rgb(206,156,45)" fg:x="875" fg:w="2"/><text x="71.9126%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="71.7445%" y="437" width="0.0819%" height="15" fill="rgb(218,52,27)" fg:x="876" fg:w="1"/><text x="71.9945%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.8264%" y="437" width="0.0819%" height="15" fill="rgb(238,83,36)" fg:x="877" fg:w="1"/><text x="72.0764%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.9083%" y="437" width="0.0819%" height="15" fill="rgb(218,53,43)" fg:x="878" fg:w="1"/><text x="72.1583%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="71.8264%" y="453" width="0.3276%" height="15" fill="rgb(239,54,39)" fg:x="877" fg:w="4"/><text x="72.0764%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="71.9902%" y="437" width="0.1638%" height="15" fill="rgb(212,198,13)" fg:x="879" fg:w="2"/><text x="72.2402%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (14 samples, 1.15%)</title><rect x="71.0893%" y="517" width="1.1466%" height="15" fill="rgb(234,54,46)" fg:x="868" fg:w="14"/><text x="71.3393%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.15%)</title><rect x="71.0893%" y="501" width="1.1466%" height="15" fill="rgb(217,120,7)" fg:x="868" fg:w="14"/><text x="71.3393%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.82%)</title><rect x="71.4169%" y="485" width="0.8190%" height="15" fill="rgb(246,39,15)" fg:x="872" fg:w="10"/><text x="71.6669%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (8 samples, 0.66%)</title><rect x="71.5807%" y="469" width="0.6552%" height="15" fill="rgb(242,143,31)" fg:x="874" fg:w="8"/><text x="71.8307%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1540%" y="453" width="0.0819%" height="15" fill="rgb(252,60,24)" fg:x="881" fg:w="1"/><text x="72.4040%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="72.2359%" y="517" width="0.0819%" height="15" fill="rgb(249,220,7)" fg:x="882" fg:w="1"/><text x="72.4859%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.2359%" y="501" width="0.0819%" height="15" fill="rgb(236,67,13)" fg:x="882" fg:w="1"/><text x="72.4859%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.2359%" y="485" width="0.0819%" height="15" fill="rgb(210,62,39)" fg:x="882" fg:w="1"/><text x="72.4859%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.2359%" y="469" width="0.0819%" height="15" fill="rgb(219,122,53)" fg:x="882" fg:w="1"/><text x="72.4859%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3178%" y="501" width="0.0819%" height="15" fill="rgb(218,87,25)" fg:x="883" fg:w="1"/><text x="72.5678%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.3997%" y="501" width="0.1638%" height="15" fill="rgb(234,179,48)" fg:x="884" fg:w="2"/><text x="72.6497%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.3997%" y="485" width="0.1638%" height="15" fill="rgb(248,90,0)" fg:x="884" fg:w="2"/><text x="72.6497%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.3997%" y="469" width="0.1638%" height="15" fill="rgb(207,228,37)" fg:x="884" fg:w="2"/><text x="72.6497%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.6454%" y="485" width="0.0819%" height="15" fill="rgb(235,214,15)" fg:x="887" fg:w="1"/><text x="72.8954%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="72.7273%" y="485" width="0.0819%" height="15" fill="rgb(210,144,39)" fg:x="888" fg:w="1"/><text x="72.9773%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.1368%" y="437" width="0.1638%" height="15" fill="rgb(222,67,41)" fg:x="893" fg:w="2"/><text x="73.3868%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="72.9730%" y="469" width="0.4095%" height="15" fill="rgb(205,35,37)" fg:x="891" fg:w="5"/><text x="73.2230%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="73.1368%" y="453" width="0.2457%" height="15" fill="rgb(216,125,40)" fg:x="893" fg:w="3"/><text x="73.3868%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="73.3006%" y="437" width="0.0819%" height="15" fill="rgb(228,227,20)" fg:x="895" fg:w="1"/><text x="73.5506%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="73.6282%" y="421" width="0.4095%" height="15" fill="rgb(242,173,45)" fg:x="899" fg:w="5"/><text x="73.8782%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="73.7101%" y="405" width="0.3276%" height="15" fill="rgb(215,79,24)" fg:x="900" fg:w="4"/><text x="73.9601%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.8739%" y="389" width="0.1638%" height="15" fill="rgb(238,164,38)" fg:x="902" fg:w="2"/><text x="74.1239%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="73.6282%" y="437" width="0.4914%" height="15" fill="rgb(245,196,38)" fg:x="899" fg:w="6"/><text x="73.8782%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="74.0377%" y="421" width="0.0819%" height="15" fill="rgb(231,217,29)" fg:x="904" fg:w="1"/><text x="74.2877%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (10 samples, 0.82%)</title><rect x="73.3825%" y="469" width="0.8190%" height="15" fill="rgb(245,6,4)" fg:x="896" fg:w="10"/><text x="73.6325%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.82%)</title><rect x="73.3825%" y="453" width="0.8190%" height="15" fill="rgb(214,76,49)" fg:x="896" fg:w="10"/><text x="73.6325%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1196%" y="437" width="0.0819%" height="15" fill="rgb(205,96,12)" fg:x="905" fg:w="1"/><text x="74.3696%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="74.4472%" y="437" width="0.4914%" height="15" fill="rgb(243,131,4)" fg:x="909" fg:w="6"/><text x="74.6972%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="74.6110%" y="421" width="0.3276%" height="15" fill="rgb(214,114,4)" fg:x="911" fg:w="4"/><text x="74.8610%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.7748%" y="405" width="0.1638%" height="15" fill="rgb(234,215,15)" fg:x="913" fg:w="2"/><text x="75.0248%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.9386%" y="437" width="0.0819%" height="15" fill="rgb(250,216,45)" fg:x="915" fg:w="1"/><text x="75.1886%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (31 samples, 2.54%)</title><rect x="72.8092%" y="485" width="2.5389%" height="15" fill="rgb(236,128,4)" fg:x="889" fg:w="31"/><text x="73.0592%" y="495.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.15%)</title><rect x="74.2015%" y="469" width="1.1466%" height="15" fill="rgb(234,50,33)" fg:x="906" fg:w="14"/><text x="74.4515%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.06%)</title><rect x="74.2834%" y="453" width="1.0647%" height="15" fill="rgb(253,131,37)" fg:x="907" fg:w="13"/><text x="74.5334%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="75.0205%" y="437" width="0.3276%" height="15" fill="rgb(218,55,27)" fg:x="916" fg:w="4"/><text x="75.2705%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="75.1024%" y="421" width="0.2457%" height="15" fill="rgb(241,220,28)" fg:x="917" fg:w="3"/><text x="75.3524%" y="431.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (330 samples, 27.03%)</title><rect x="48.4848%" y="661" width="27.0270%" height="15" fill="rgb(241,90,48)" fg:x="592" fg:w="330"/><text x="48.7348%" y="671.50">&lt;plugins_rpc::sessions::SessionServices as ..</text></g><g><title>core::iter::adapters::try_process (322 samples, 26.37%)</title><rect x="49.1400%" y="645" width="26.3718%" height="15" fill="rgb(216,43,37)" fg:x="600" fg:w="322"/><text x="49.3900%" y="655.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (191 samples, 15.64%)</title><rect x="59.8690%" y="629" width="15.6429%" height="15" fill="rgb(207,173,9)" fg:x="731" fg:w="191"/><text x="60.1190%" y="639.50">alloc::vec::in_place_col..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (189 samples, 15.48%)</title><rect x="60.0328%" y="613" width="15.4791%" height="15" fill="rgb(240,126,30)" fg:x="733" fg:w="189"/><text x="60.2828%" y="623.50">&lt;core::iter::adapters::m..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (188 samples, 15.40%)</title><rect x="60.1147%" y="597" width="15.3972%" height="15" fill="rgb(228,178,53)" fg:x="734" fg:w="188"/><text x="60.3647%" y="607.50">plugins_rpc::sessions::S..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (173 samples, 14.17%)</title><rect x="61.3432%" y="581" width="14.1687%" height="15" fill="rgb(217,33,4)" fg:x="749" fg:w="173"/><text x="61.5932%" y="591.50">&lt;rpc_proto::Json as co..</text></g><g><title>kernel::model::EntityPtr::to_json_value (75 samples, 6.14%)</title><rect x="69.3694%" y="565" width="6.1425%" height="15" fill="rgb(206,124,34)" fg:x="847" fg:w="75"/><text x="69.6194%" y="575.50">kernel::..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (75 samples, 6.14%)</title><rect x="69.3694%" y="549" width="6.1425%" height="15" fill="rgb(208,122,53)" fg:x="847" fg:w="75"/><text x="69.6194%" y="559.50">kernel::..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (74 samples, 6.06%)</title><rect x="69.4513%" y="533" width="6.0606%" height="15" fill="rgb(215,202,26)" fg:x="848" fg:w="74"/><text x="69.7013%" y="543.50">&lt;serde_j..</text></g><g><title>serde::ser::Serializer::collect_map (39 samples, 3.19%)</title><rect x="72.3178%" y="517" width="3.1941%" height="15" fill="rgb(232,198,31)" fg:x="883" fg:w="39"/><text x="72.5678%" y="527.50">ser..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (36 samples, 2.95%)</title><rect x="72.5635%" y="501" width="2.9484%" height="15" fill="rgb(222,23,35)" fg:x="886" fg:w="36"/><text x="72.8135%" y="511.50">ke..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="75.3481%" y="485" width="0.1638%" height="15" fill="rgb(242,27,53)" fg:x="920" fg:w="2"/><text x="75.5981%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4300%" y="469" width="0.0819%" height="15" fill="rgb(210,216,42)" fg:x="921" fg:w="1"/><text x="75.6800%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="75.5119%" y="661" width="0.0819%" height="15" fill="rgb(234,39,38)" fg:x="922" fg:w="1"/><text x="75.7619%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.5119%" y="645" width="0.0819%" height="15" fill="rgb(235,126,54)" fg:x="922" fg:w="1"/><text x="75.7619%" y="655.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (390 samples, 31.94%)</title><rect x="43.7346%" y="725" width="31.9410%" height="15" fill="rgb(235,150,33)" fg:x="534" fg:w="390"/><text x="43.9846%" y="735.50">&lt;engine::perform::StandardPerformer as kernel::scope..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (367 samples, 30.06%)</title><rect x="45.6183%" y="709" width="30.0573%" height="15" fill="rgb(249,49,53)" fg:x="557" fg:w="367"/><text x="45.8683%" y="719.50">kernel::plugins::SessionPlugins::have_surroundin..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (367 samples, 30.06%)</title><rect x="45.6183%" y="693" width="30.0573%" height="15" fill="rgb(238,60,50)" fg:x="557" fg:w="367"/><text x="45.8683%" y="703.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugin..</text></g><g><title>plugins_rpc::querying::have_surroundings (333 samples, 27.27%)</title><rect x="48.4029%" y="677" width="27.2727%" height="15" fill="rgb(210,5,2)" fg:x="591" fg:w="333"/><text x="48.6529%" y="687.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.5938%" y="661" width="0.0819%" height="15" fill="rgb(214,207,24)" fg:x="923" fg:w="1"/><text x="75.8438%" y="671.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="75.5938%" y="645" width="0.0819%" height="15" fill="rgb(228,173,2)" fg:x="923" fg:w="1"/><text x="75.8438%" y="655.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="75.5938%" y="629" width="0.0819%" height="15" fill="rgb(244,26,8)" fg:x="923" fg:w="1"/><text x="75.8438%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5938%" y="613" width="0.0819%" height="15" fill="rgb(249,153,35)" fg:x="923" fg:w="1"/><text x="75.8438%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="75.7576%" y="677" width="0.1638%" height="15" fill="rgb(221,215,40)" fg:x="925" fg:w="2"/><text x="76.0076%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8395%" y="661" width="0.0819%" height="15" fill="rgb(238,106,35)" fg:x="926" fg:w="1"/><text x="76.0895%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.8395%" y="645" width="0.0819%" height="15" fill="rgb(207,195,21)" fg:x="926" fg:w="1"/><text x="76.0895%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.8395%" y="629" width="0.0819%" height="15" fill="rgb(205,43,29)" fg:x="926" fg:w="1"/><text x="76.0895%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.8395%" y="613" width="0.0819%" height="15" fill="rgb(236,35,21)" fg:x="926" fg:w="1"/><text x="76.0895%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.8395%" y="597" width="0.0819%" height="15" fill="rgb(244,74,8)" fg:x="926" fg:w="1"/><text x="76.0895%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="75.8395%" y="581" width="0.0819%" height="15" fill="rgb(241,229,7)" fg:x="926" fg:w="1"/><text x="76.0895%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.8395%" y="565" width="0.0819%" height="15" fill="rgb(212,223,25)" fg:x="926" fg:w="1"/><text x="76.0895%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.9214%" y="597" width="0.0819%" height="15" fill="rgb(234,58,53)" fg:x="927" fg:w="1"/><text x="76.1714%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.0033%" y="517" width="0.0819%" height="15" fill="rgb(244,36,1)" fg:x="928" fg:w="1"/><text x="76.2533%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.0033%" y="501" width="0.0819%" height="15" fill="rgb(222,40,54)" fg:x="928" fg:w="1"/><text x="76.2533%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.0033%" y="485" width="0.0819%" height="15" fill="rgb(210,207,39)" fg:x="928" fg:w="1"/><text x="76.2533%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.0852%" y="453" width="0.0819%" height="15" fill="rgb(234,52,14)" fg:x="929" fg:w="1"/><text x="76.3352%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="76.1671%" y="453" width="0.0819%" height="15" fill="rgb(239,108,46)" fg:x="930" fg:w="1"/><text x="76.4171%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.1671%" y="437" width="0.0819%" height="15" fill="rgb(252,223,5)" fg:x="930" fg:w="1"/><text x="76.4171%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="76.0033%" y="549" width="0.3276%" height="15" fill="rgb(227,181,11)" fg:x="928" fg:w="4"/><text x="76.2533%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="76.0033%" y="533" width="0.3276%" height="15" fill="rgb(248,126,40)" fg:x="928" fg:w="4"/><text x="76.2533%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.25%)</title><rect x="76.0852%" y="517" width="0.2457%" height="15" fill="rgb(243,1,18)" fg:x="929" fg:w="3"/><text x="76.3352%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="76.0852%" y="501" width="0.2457%" height="15" fill="rgb(214,145,23)" fg:x="929" fg:w="3"/><text x="76.3352%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.25%)</title><rect x="76.0852%" y="485" width="0.2457%" height="15" fill="rgb(241,218,11)" fg:x="929" fg:w="3"/><text x="76.3352%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="76.0852%" y="469" width="0.2457%" height="15" fill="rgb(214,219,24)" fg:x="929" fg:w="3"/><text x="76.3352%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2490%" y="453" width="0.0819%" height="15" fill="rgb(235,32,7)" fg:x="931" fg:w="1"/><text x="76.4990%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="76.0033%" y="597" width="0.4095%" height="15" fill="rgb(227,121,28)" fg:x="928" fg:w="5"/><text x="76.2533%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="76.0033%" y="581" width="0.4095%" height="15" fill="rgb(216,129,49)" fg:x="928" fg:w="5"/><text x="76.2533%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="76.0033%" y="565" width="0.4095%" height="15" fill="rgb(207,194,50)" fg:x="928" fg:w="5"/><text x="76.2533%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3309%" y="549" width="0.0819%" height="15" fill="rgb(207,4,18)" fg:x="932" fg:w="1"/><text x="76.5809%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.3309%" y="533" width="0.0819%" height="15" fill="rgb(213,50,30)" fg:x="932" fg:w="1"/><text x="76.5809%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="76.3309%" y="517" width="0.0819%" height="15" fill="rgb(208,77,22)" fg:x="932" fg:w="1"/><text x="76.5809%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3309%" y="501" width="0.0819%" height="15" fill="rgb(244,204,34)" fg:x="932" fg:w="1"/><text x="76.5809%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.3309%" y="485" width="0.0819%" height="15" fill="rgb(230,20,17)" fg:x="932" fg:w="1"/><text x="76.5809%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.3309%" y="469" width="0.0819%" height="15" fill="rgb(237,83,15)" fg:x="932" fg:w="1"/><text x="76.5809%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.4128%" y="565" width="0.0819%" height="15" fill="rgb(221,109,25)" fg:x="933" fg:w="1"/><text x="76.6628%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.66%)</title><rect x="75.9214%" y="661" width="0.6552%" height="15" fill="rgb(205,194,52)" fg:x="927" fg:w="8"/><text x="76.1714%" y="671.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.66%)</title><rect x="75.9214%" y="645" width="0.6552%" height="15" fill="rgb(244,173,54)" fg:x="927" fg:w="8"/><text x="76.1714%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.66%)</title><rect x="75.9214%" y="629" width="0.6552%" height="15" fill="rgb(227,181,18)" fg:x="927" fg:w="8"/><text x="76.1714%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.66%)</title><rect x="75.9214%" y="613" width="0.6552%" height="15" fill="rgb(238,36,30)" fg:x="927" fg:w="8"/><text x="76.1714%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.4128%" y="597" width="0.1638%" height="15" fill="rgb(254,85,0)" fg:x="933" fg:w="2"/><text x="76.6628%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.4128%" y="581" width="0.1638%" height="15" fill="rgb(247,63,33)" fg:x="933" fg:w="2"/><text x="76.6628%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.4947%" y="565" width="0.0819%" height="15" fill="rgb(220,7,54)" fg:x="934" fg:w="1"/><text x="76.7447%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4947%" y="549" width="0.0819%" height="15" fill="rgb(238,227,21)" fg:x="934" fg:w="1"/><text x="76.7447%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.5766%" y="565" width="0.0819%" height="15" fill="rgb(237,29,31)" fg:x="935" fg:w="1"/><text x="76.8266%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="76.5766%" y="581" width="0.1638%" height="15" fill="rgb(211,21,50)" fg:x="935" fg:w="2"/><text x="76.8266%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6585%" y="565" width="0.0819%" height="15" fill="rgb(239,119,2)" fg:x="936" fg:w="1"/><text x="76.9085%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7404%" y="581" width="0.0819%" height="15" fill="rgb(250,2,39)" fg:x="937" fg:w="1"/><text x="76.9904%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7404%" y="565" width="0.0819%" height="15" fill="rgb(244,46,53)" fg:x="937" fg:w="1"/><text x="76.9904%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7404%" y="549" width="0.0819%" height="15" fill="rgb(209,21,19)" fg:x="937" fg:w="1"/><text x="76.9904%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.8223%" y="549" width="0.0819%" height="15" fill="rgb(236,145,4)" fg:x="938" fg:w="1"/><text x="77.0723%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8223%" y="533" width="0.0819%" height="15" fill="rgb(220,133,36)" fg:x="938" fg:w="1"/><text x="77.0723%" y="543.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="76.9042%" y="549" width="0.0819%" height="15" fill="rgb(244,18,3)" fg:x="939" fg:w="1"/><text x="77.1542%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="77.1499%" y="501" width="0.0819%" height="15" fill="rgb(232,171,48)" fg:x="942" fg:w="1"/><text x="77.3999%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (22 samples, 1.80%)</title><rect x="75.6757%" y="693" width="1.8018%" height="15" fill="rgb(223,223,53)" fg:x="924" fg:w="22"/><text x="75.9257%" y="703.50">e..</text></g><g><title>kernel::model::deserialize_entity (19 samples, 1.56%)</title><rect x="75.9214%" y="677" width="1.5561%" height="15" fill="rgb(246,92,13)" fg:x="927" fg:w="19"/><text x="76.1714%" y="687.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.90%)</title><rect x="76.5766%" y="661" width="0.9009%" height="15" fill="rgb(229,171,10)" fg:x="935" fg:w="11"/><text x="76.8266%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.90%)</title><rect x="76.5766%" y="645" width="0.9009%" height="15" fill="rgb(213,131,26)" fg:x="935" fg:w="11"/><text x="76.8266%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.90%)</title><rect x="76.5766%" y="629" width="0.9009%" height="15" fill="rgb(242,87,54)" fg:x="935" fg:w="11"/><text x="76.8266%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.90%)</title><rect x="76.5766%" y="613" width="0.9009%" height="15" fill="rgb(237,21,35)" fg:x="935" fg:w="11"/><text x="76.8266%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.90%)</title><rect x="76.5766%" y="597" width="0.9009%" height="15" fill="rgb(253,13,47)" fg:x="935" fg:w="11"/><text x="76.8266%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.66%)</title><rect x="76.8223%" y="581" width="0.6552%" height="15" fill="rgb(215,122,49)" fg:x="938" fg:w="8"/><text x="77.0723%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.66%)</title><rect x="76.8223%" y="565" width="0.6552%" height="15" fill="rgb(209,179,30)" fg:x="938" fg:w="8"/><text x="77.0723%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="76.9861%" y="549" width="0.4914%" height="15" fill="rgb(235,100,24)" fg:x="940" fg:w="6"/><text x="77.2361%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="76.9861%" y="533" width="0.4914%" height="15" fill="rgb(209,67,24)" fg:x="940" fg:w="6"/><text x="77.2361%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="77.1499%" y="517" width="0.3276%" height="15" fill="rgb(206,74,32)" fg:x="942" fg:w="4"/><text x="77.3999%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="77.2318%" y="501" width="0.2457%" height="15" fill="rgb(212,45,25)" fg:x="943" fg:w="3"/><text x="77.4818%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.3137%" y="485" width="0.1638%" height="15" fill="rgb(239,26,3)" fg:x="944" fg:w="2"/><text x="77.5637%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="77.3137%" y="469" width="0.1638%" height="15" fill="rgb(218,36,15)" fg:x="944" fg:w="2"/><text x="77.5637%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="77.3137%" y="453" width="0.1638%" height="15" fill="rgb(206,108,24)" fg:x="944" fg:w="2"/><text x="77.5637%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (23 samples, 1.88%)</title><rect x="75.6757%" y="709" width="1.8837%" height="15" fill="rgb(234,204,42)" fg:x="924" fg:w="23"/><text x="75.9257%" y="719.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.4775%" y="693" width="0.0819%" height="15" fill="rgb(229,2,11)" fg:x="946" fg:w="1"/><text x="77.7275%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.4775%" y="677" width="0.0819%" height="15" fill="rgb(221,20,48)" fg:x="946" fg:w="1"/><text x="77.7275%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.4775%" y="661" width="0.0819%" height="15" fill="rgb(244,164,10)" fg:x="946" fg:w="1"/><text x="77.7275%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.4775%" y="645" width="0.0819%" height="15" fill="rgb(243,229,2)" fg:x="946" fg:w="1"/><text x="77.7275%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.4775%" y="629" width="0.0819%" height="15" fill="rgb(232,131,37)" fg:x="946" fg:w="1"/><text x="77.7275%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="77.4775%" y="613" width="0.0819%" height="15" fill="rgb(217,156,11)" fg:x="946" fg:w="1"/><text x="77.7275%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.4775%" y="597" width="0.0819%" height="15" fill="rgb(239,99,48)" fg:x="946" fg:w="1"/><text x="77.7275%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.4775%" y="581" width="0.0819%" height="15" fill="rgb(231,209,9)" fg:x="946" fg:w="1"/><text x="77.7275%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.4775%" y="565" width="0.0819%" height="15" fill="rgb(254,97,27)" fg:x="946" fg:w="1"/><text x="77.7275%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.4775%" y="549" width="0.0819%" height="15" fill="rgb(223,151,38)" fg:x="946" fg:w="1"/><text x="77.7275%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.4775%" y="533" width="0.0819%" height="15" fill="rgb(219,206,35)" fg:x="946" fg:w="1"/><text x="77.7275%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.4775%" y="517" width="0.0819%" height="15" fill="rgb(216,130,31)" fg:x="946" fg:w="1"/><text x="77.7275%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="77.4775%" y="501" width="0.0819%" height="15" fill="rgb(251,97,34)" fg:x="946" fg:w="1"/><text x="77.7275%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="77.4775%" y="485" width="0.0819%" height="15" fill="rgb(246,159,47)" fg:x="946" fg:w="1"/><text x="77.7275%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5594%" y="549" width="0.0819%" height="15" fill="rgb(232,87,10)" fg:x="947" fg:w="1"/><text x="77.8094%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5594%" y="533" width="0.0819%" height="15" fill="rgb(249,1,37)" fg:x="947" fg:w="1"/><text x="77.8094%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.5594%" y="517" width="0.0819%" height="15" fill="rgb(239,135,14)" fg:x="947" fg:w="1"/><text x="77.8094%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.5594%" y="501" width="0.0819%" height="15" fill="rgb(253,116,46)" fg:x="947" fg:w="1"/><text x="77.8094%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.5594%" y="485" width="0.0819%" height="15" fill="rgb(222,217,37)" fg:x="947" fg:w="1"/><text x="77.8094%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.5594%" y="469" width="0.0819%" height="15" fill="rgb(252,96,8)" fg:x="947" fg:w="1"/><text x="77.8094%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.5594%" y="453" width="0.0819%" height="15" fill="rgb(254,103,41)" fg:x="947" fg:w="1"/><text x="77.8094%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.5594%" y="437" width="0.0819%" height="15" fill="rgb(218,213,19)" fg:x="947" fg:w="1"/><text x="77.8094%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.5594%" y="421" width="0.0819%" height="15" fill="rgb(253,95,21)" fg:x="947" fg:w="1"/><text x="77.8094%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.5594%" y="405" width="0.0819%" height="15" fill="rgb(229,26,28)" fg:x="947" fg:w="1"/><text x="77.8094%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.5594%" y="389" width="0.0819%" height="15" fill="rgb(230,129,16)" fg:x="947" fg:w="1"/><text x="77.8094%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5594%" y="373" width="0.0819%" height="15" fill="rgb(236,126,17)" fg:x="947" fg:w="1"/><text x="77.8094%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="77.5594%" y="693" width="0.1638%" height="15" fill="rgb(209,33,33)" fg:x="947" fg:w="2"/><text x="77.8094%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="77.5594%" y="677" width="0.1638%" height="15" fill="rgb(227,85,29)" fg:x="947" fg:w="2"/><text x="77.8094%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="77.5594%" y="661" width="0.1638%" height="15" fill="rgb(241,53,46)" fg:x="947" fg:w="2"/><text x="77.8094%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="77.5594%" y="645" width="0.1638%" height="15" fill="rgb(228,167,53)" fg:x="947" fg:w="2"/><text x="77.8094%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.5594%" y="629" width="0.1638%" height="15" fill="rgb(238,195,45)" fg:x="947" fg:w="2"/><text x="77.8094%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="77.5594%" y="613" width="0.1638%" height="15" fill="rgb(252,124,45)" fg:x="947" fg:w="2"/><text x="77.8094%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="77.5594%" y="597" width="0.1638%" height="15" fill="rgb(251,38,35)" fg:x="947" fg:w="2"/><text x="77.8094%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="77.5594%" y="581" width="0.1638%" height="15" fill="rgb(227,33,2)" fg:x="947" fg:w="2"/><text x="77.8094%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.5594%" y="565" width="0.1638%" height="15" fill="rgb(223,157,46)" fg:x="947" fg:w="2"/><text x="77.8094%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.6413%" y="549" width="0.0819%" height="15" fill="rgb(222,78,41)" fg:x="948" fg:w="1"/><text x="77.8913%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.6413%" y="533" width="0.0819%" height="15" fill="rgb(248,176,11)" fg:x="948" fg:w="1"/><text x="77.8913%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.6413%" y="517" width="0.0819%" height="15" fill="rgb(241,221,18)" fg:x="948" fg:w="1"/><text x="77.8913%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.6413%" y="501" width="0.0819%" height="15" fill="rgb(218,85,22)" fg:x="948" fg:w="1"/><text x="77.8913%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.6413%" y="485" width="0.0819%" height="15" fill="rgb(222,223,7)" fg:x="948" fg:w="1"/><text x="77.8913%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.6413%" y="469" width="0.0819%" height="15" fill="rgb(254,59,39)" fg:x="948" fg:w="1"/><text x="77.8913%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.6413%" y="453" width="0.0819%" height="15" fill="rgb(247,100,27)" fg:x="948" fg:w="1"/><text x="77.8913%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.6413%" y="437" width="0.0819%" height="15" fill="rgb(237,207,10)" fg:x="948" fg:w="1"/><text x="77.8913%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.6413%" y="421" width="0.0819%" height="15" fill="rgb(220,121,28)" fg:x="948" fg:w="1"/><text x="77.8913%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.6413%" y="405" width="0.0819%" height="15" fill="rgb(213,223,20)" fg:x="948" fg:w="1"/><text x="77.8913%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.6413%" y="389" width="0.0819%" height="15" fill="rgb(205,121,27)" fg:x="948" fg:w="1"/><text x="77.8913%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.6413%" y="373" width="0.0819%" height="15" fill="rgb(253,24,53)" fg:x="948" fg:w="1"/><text x="77.8913%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.6413%" y="357" width="0.0819%" height="15" fill="rgb(224,224,47)" fg:x="948" fg:w="1"/><text x="77.8913%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.6413%" y="341" width="0.0819%" height="15" fill="rgb(250,125,36)" fg:x="948" fg:w="1"/><text x="77.8913%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.6413%" y="325" width="0.0819%" height="15" fill="rgb(240,144,38)" fg:x="948" fg:w="1"/><text x="77.8913%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.6413%" y="309" width="0.0819%" height="15" fill="rgb(250,15,50)" fg:x="948" fg:w="1"/><text x="77.8913%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="77.6413%" y="293" width="0.0819%" height="15" fill="rgb(210,24,26)" fg:x="948" fg:w="1"/><text x="77.8913%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="77.6413%" y="277" width="0.0819%" height="15" fill="rgb(234,53,53)" fg:x="948" fg:w="1"/><text x="77.8913%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="77.6413%" y="261" width="0.0819%" height="15" fill="rgb(208,108,28)" fg:x="948" fg:w="1"/><text x="77.8913%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.6413%" y="245" width="0.0819%" height="15" fill="rgb(227,143,7)" fg:x="948" fg:w="1"/><text x="77.8913%" y="255.50"></text></g><g><title>engine::session::Session::world (3 samples, 0.25%)</title><rect x="77.5594%" y="709" width="0.2457%" height="15" fill="rgb(238,189,38)" fg:x="947" fg:w="3"/><text x="77.8094%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="77.7232%" y="693" width="0.0819%" height="15" fill="rgb(222,69,15)" fg:x="949" fg:w="1"/><text x="77.9732%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7232%" y="677" width="0.0819%" height="15" fill="rgb(213,169,7)" fg:x="949" fg:w="1"/><text x="77.9732%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8870%" y="661" width="0.0819%" height="15" fill="rgb(251,219,4)" fg:x="951" fg:w="1"/><text x="78.1370%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8870%" y="645" width="0.0819%" height="15" fill="rgb(241,55,40)" fg:x="951" fg:w="1"/><text x="78.1370%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8870%" y="629" width="0.0819%" height="15" fill="rgb(243,57,30)" fg:x="951" fg:w="1"/><text x="78.1370%" y="639.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (420 samples, 34.40%)</title><rect x="43.7346%" y="741" width="34.3980%" height="15" fill="rgb(234,50,30)" fg:x="534" fg:w="420"/><text x="43.9846%" y="751.50">&lt;engine::perform::StandardPerformer as kernel::scopes::P..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (30 samples, 2.46%)</title><rect x="75.6757%" y="725" width="2.4570%" height="15" fill="rgb(239,23,42)" fg:x="924" fg:w="30"/><text x="75.9257%" y="735.50">en..</text></g><g><title>engine::users::model::username_to_key (4 samples, 0.33%)</title><rect x="77.8051%" y="709" width="0.3276%" height="15" fill="rgb(217,38,19)" fg:x="950" fg:w="4"/><text x="78.0551%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.25%)</title><rect x="77.8870%" y="693" width="0.2457%" height="15" fill="rgb(215,179,16)" fg:x="951" fg:w="3"/><text x="78.1370%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.25%)</title><rect x="77.8870%" y="677" width="0.2457%" height="15" fill="rgb(254,21,37)" fg:x="951" fg:w="3"/><text x="78.1370%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.9689%" y="661" width="0.1638%" height="15" fill="rgb(219,207,48)" fg:x="952" fg:w="2"/><text x="78.2189%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.9689%" y="645" width="0.1638%" height="15" fill="rgb(227,225,41)" fg:x="952" fg:w="2"/><text x="78.2189%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.0508%" y="629" width="0.0819%" height="15" fill="rgb(223,130,1)" fg:x="953" fg:w="1"/><text x="78.3008%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (421 samples, 34.48%)</title><rect x="43.7346%" y="757" width="34.4799%" height="15" fill="rgb(249,54,42)" fg:x="534" fg:w="421"/><text x="43.9846%" y="767.50">&lt;plugins_core::carrying::CarryingPlugin as kernel::plugi..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.1327%" y="741" width="0.0819%" height="15" fill="rgb(248,69,25)" fg:x="954" fg:w="1"/><text x="78.3827%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.1327%" y="725" width="0.0819%" height="15" fill="rgb(234,21,32)" fg:x="954" fg:w="1"/><text x="78.3827%" y="735.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="78.1327%" y="709" width="0.0819%" height="15" fill="rgb(252,136,6)" fg:x="954" fg:w="1"/><text x="78.3827%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="78.1327%" y="693" width="0.0819%" height="15" fill="rgb(245,87,12)" fg:x="954" fg:w="1"/><text x="78.3827%" y="703.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="78.1327%" y="677" width="0.0819%" height="15" fill="rgb(208,12,15)" fg:x="954" fg:w="1"/><text x="78.3827%" y="687.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="78.2146%" y="757" width="0.0819%" height="15" fill="rgb(250,98,2)" fg:x="955" fg:w="1"/><text x="78.4646%" y="767.50"></text></g><g><title>&lt;plugins_core::looking::parser::LookActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.2146%" y="741" width="0.0819%" height="15" fill="rgb(205,213,15)" fg:x="955" fg:w="1"/><text x="78.4646%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="78.2146%" y="725" width="0.0819%" height="15" fill="rgb(248,192,44)" fg:x="955" fg:w="1"/><text x="78.4646%" y="735.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="78.2965%" y="757" width="0.0819%" height="15" fill="rgb(221,89,17)" fg:x="956" fg:w="1"/><text x="78.5465%" y="767.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.2965%" y="741" width="0.0819%" height="15" fill="rgb(209,55,3)" fg:x="956" fg:w="1"/><text x="78.5465%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="78.2965%" y="725" width="0.0819%" height="15" fill="rgb(247,23,45)" fg:x="956" fg:w="1"/><text x="78.5465%" y="735.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (428 samples, 35.05%)</title><rect x="43.4889%" y="805" width="35.0532%" height="15" fill="rgb(235,152,23)" fg:x="531" fg:w="428"/><text x="43.7389%" y="815.50">&lt;kernel::plugins::SessionPlugins as kernel::plugins::Eval..</text></g><g><title>core::iter::adapters::try_process (428 samples, 35.05%)</title><rect x="43.4889%" y="789" width="35.0532%" height="15" fill="rgb(244,63,13)" fg:x="531" fg:w="428"/><text x="43.7389%" y="799.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (428 samples, 35.05%)</title><rect x="43.4889%" y="773" width="35.0532%" height="15" fill="rgb(227,30,37)" fg:x="531" fg:w="428"/><text x="43.7389%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFr..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="78.3784%" y="757" width="0.1638%" height="15" fill="rgb(224,49,42)" fg:x="957" fg:w="2"/><text x="78.6284%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="78.3784%" y="741" width="0.1638%" height="15" fill="rgb(218,129,5)" fg:x="957" fg:w="2"/><text x="78.6284%" y="751.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="78.3784%" y="725" width="0.1638%" height="15" fill="rgb(240,199,54)" fg:x="957" fg:w="2"/><text x="78.6284%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.25%)</title><rect x="78.5422%" y="741" width="0.2457%" height="15" fill="rgb(234,31,13)" fg:x="959" fg:w="3"/><text x="78.7922%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.25%)</title><rect x="78.5422%" y="725" width="0.2457%" height="15" fill="rgb(219,73,54)" fg:x="959" fg:w="3"/><text x="78.7922%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="78.6241%" y="709" width="0.1638%" height="15" fill="rgb(251,162,10)" fg:x="960" fg:w="2"/><text x="78.8741%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.6241%" y="693" width="0.1638%" height="15" fill="rgb(240,138,47)" fg:x="960" fg:w="2"/><text x="78.8741%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.6241%" y="677" width="0.1638%" height="15" fill="rgb(216,138,26)" fg:x="960" fg:w="2"/><text x="78.8741%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="78.6241%" y="661" width="0.1638%" height="15" fill="rgb(243,17,35)" fg:x="960" fg:w="2"/><text x="78.8741%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="78.6241%" y="645" width="0.1638%" height="15" fill="rgb(241,60,18)" fg:x="960" fg:w="2"/><text x="78.8741%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.33%)</title><rect x="78.5422%" y="805" width="0.3276%" height="15" fill="rgb(234,2,44)" fg:x="959" fg:w="4"/><text x="78.7922%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.33%)</title><rect x="78.5422%" y="789" width="0.3276%" height="15" fill="rgb(225,225,33)" fg:x="959" fg:w="4"/><text x="78.7922%" y="799.50"></text></g><g><title>core::fmt::write (4 samples, 0.33%)</title><rect x="78.5422%" y="773" width="0.3276%" height="15" fill="rgb(234,50,31)" fg:x="959" fg:w="4"/><text x="78.7922%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.33%)</title><rect x="78.5422%" y="757" width="0.3276%" height="15" fill="rgb(249,6,25)" fg:x="959" fg:w="4"/><text x="78.7922%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.08%)</title><rect x="78.7879%" y="741" width="0.0819%" height="15" fill="rgb(241,5,17)" fg:x="962" fg:w="1"/><text x="79.0379%" y="751.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (434 samples, 35.54%)</title><rect x="43.4070%" y="837" width="35.5446%" height="15" fill="rgb(207,116,10)" fg:x="530" fg:w="434"/><text x="43.6570%" y="847.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (434 samples, 35.54%)</title><rect x="43.4070%" y="821" width="35.5446%" height="15" fill="rgb(222,128,18)" fg:x="530" fg:w="434"/><text x="43.6570%" y="831.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="78.8698%" y="805" width="0.0819%" height="15" fill="rgb(229,109,25)" fg:x="963" fg:w="1"/><text x="79.1198%" y="815.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="78.8698%" y="789" width="0.0819%" height="15" fill="rgb(222,102,25)" fg:x="963" fg:w="1"/><text x="79.1198%" y="799.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="78.8698%" y="773" width="0.0819%" height="15" fill="rgb(239,211,5)" fg:x="963" fg:w="1"/><text x="79.1198%" y="783.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="78.8698%" y="757" width="0.0819%" height="15" fill="rgb(223,136,26)" fg:x="963" fg:w="1"/><text x="79.1198%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="78.8698%" y="741" width="0.0819%" height="15" fill="rgb(227,30,15)" fg:x="963" fg:w="1"/><text x="79.1198%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="78.8698%" y="725" width="0.0819%" height="15" fill="rgb(247,76,4)" fg:x="963" fg:w="1"/><text x="79.1198%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.08%)</title><rect x="78.8698%" y="709" width="0.0819%" height="15" fill="rgb(245,38,48)" fg:x="963" fg:w="1"/><text x="79.1198%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.08%)</title><rect x="78.8698%" y="693" width="0.0819%" height="15" fill="rgb(210,220,14)" fg:x="963" fg:w="1"/><text x="79.1198%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.08%)</title><rect x="78.8698%" y="677" width="0.0819%" height="15" fill="rgb(224,60,51)" fg:x="963" fg:w="1"/><text x="79.1198%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1 samples, 0.08%)</title><rect x="78.8698%" y="661" width="0.0819%" height="15" fill="rgb(212,133,49)" fg:x="963" fg:w="1"/><text x="79.1198%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.08%)</title><rect x="78.8698%" y="645" width="0.0819%" height="15" fill="rgb(231,39,22)" fg:x="963" fg:w="1"/><text x="79.1198%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (966 samples, 79.12%)</title><rect x="0.0000%" y="885" width="79.1155%" height="15" fill="rgb(236,173,22)" fg:x="0" fg:w="966"/><text x="0.2500%" y="895.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (966 samples, 79.12%)</title><rect x="0.0000%" y="869" width="79.1155%" height="15" fill="rgb(210,70,0)" fg:x="0" fg:w="966"/><text x="0.2500%" y="879.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (966 samples, 79.12%)</title><rect x="0.0000%" y="853" width="79.1155%" height="15" fill="rgb(215,170,11)" fg:x="0" fg:w="966"/><text x="0.2500%" y="863.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="78.9517%" y="837" width="0.1638%" height="15" fill="rgb(220,154,28)" fg:x="964" fg:w="2"/><text x="79.2017%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="79.0336%" y="821" width="0.0819%" height="15" fill="rgb(240,160,41)" fg:x="965" fg:w="1"/><text x="79.2836%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.0336%" y="805" width="0.0819%" height="15" fill="rgb(243,215,41)" fg:x="965" fg:w="1"/><text x="79.2836%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1155%" y="821" width="0.0819%" height="15" fill="rgb(214,208,31)" fg:x="966" fg:w="1"/><text x="79.3655%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3612%" y="741" width="0.0819%" height="15" fill="rgb(247,57,22)" fg:x="969" fg:w="1"/><text x="79.6112%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4431%" y="709" width="0.0819%" height="15" fill="rgb(228,73,52)" fg:x="970" fg:w="1"/><text x="79.6931%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.5250%" y="709" width="0.1638%" height="15" fill="rgb(252,60,9)" fg:x="971" fg:w="2"/><text x="79.7750%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.74%)</title><rect x="79.1155%" y="837" width="0.7371%" height="15" fill="rgb(233,9,51)" fg:x="966" fg:w="9"/><text x="79.3655%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (8 samples, 0.66%)</title><rect x="79.1974%" y="821" width="0.6552%" height="15" fill="rgb(223,67,14)" fg:x="967" fg:w="8"/><text x="79.4474%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.66%)</title><rect x="79.1974%" y="805" width="0.6552%" height="15" fill="rgb(222,86,2)" fg:x="967" fg:w="8"/><text x="79.4474%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (8 samples, 0.66%)</title><rect x="79.1974%" y="789" width="0.6552%" height="15" fill="rgb(243,58,54)" fg:x="967" fg:w="8"/><text x="79.4474%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.66%)</title><rect x="79.1974%" y="773" width="0.6552%" height="15" fill="rgb(210,200,39)" fg:x="967" fg:w="8"/><text x="79.4474%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.66%)</title><rect x="79.1974%" y="757" width="0.6552%" height="15" fill="rgb(238,135,9)" fg:x="967" fg:w="8"/><text x="79.4474%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="79.4431%" y="741" width="0.4095%" height="15" fill="rgb(232,179,7)" fg:x="970" fg:w="5"/><text x="79.6931%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.41%)</title><rect x="79.4431%" y="725" width="0.4095%" height="15" fill="rgb(245,65,41)" fg:x="970" fg:w="5"/><text x="79.6931%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.6888%" y="709" width="0.1638%" height="15" fill="rgb(227,43,8)" fg:x="973" fg:w="2"/><text x="79.9388%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.7707%" y="693" width="0.0819%" height="15" fill="rgb(235,91,14)" fg:x="974" fg:w="1"/><text x="80.0207%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.7707%" y="677" width="0.0819%" height="15" fill="rgb(235,219,31)" fg:x="974" fg:w="1"/><text x="80.0207%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7707%" y="661" width="0.0819%" height="15" fill="rgb(227,121,25)" fg:x="974" fg:w="1"/><text x="80.0207%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="79.8526%" y="821" width="0.0819%" height="15" fill="rgb(254,129,24)" fg:x="975" fg:w="1"/><text x="80.1026%" y="831.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.0164%" y="693" width="0.0819%" height="15" fill="rgb(226,144,49)" fg:x="977" fg:w="1"/><text x="80.2664%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0164%" y="677" width="0.0819%" height="15" fill="rgb(214,187,32)" fg:x="977" fg:w="1"/><text x="80.2664%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.0164%" y="661" width="0.0819%" height="15" fill="rgb(243,129,46)" fg:x="977" fg:w="1"/><text x="80.2664%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0164%" y="645" width="0.0819%" height="15" fill="rgb(221,185,35)" fg:x="977" fg:w="1"/><text x="80.2664%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.0164%" y="629" width="0.0819%" height="15" fill="rgb(205,0,32)" fg:x="977" fg:w="1"/><text x="80.2664%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.0164%" y="613" width="0.0819%" height="15" fill="rgb(229,179,12)" fg:x="977" fg:w="1"/><text x="80.2664%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.0164%" y="597" width="0.0819%" height="15" fill="rgb(252,107,19)" fg:x="977" fg:w="1"/><text x="80.2664%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="80.0164%" y="757" width="0.1638%" height="15" fill="rgb(220,95,27)" fg:x="977" fg:w="2"/><text x="80.2664%" y="767.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="80.0164%" y="741" width="0.1638%" height="15" fill="rgb(240,113,40)" fg:x="977" fg:w="2"/><text x="80.2664%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.0164%" y="725" width="0.1638%" height="15" fill="rgb(208,4,43)" fg:x="977" fg:w="2"/><text x="80.2664%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.0164%" y="709" width="0.1638%" height="15" fill="rgb(247,189,30)" fg:x="977" fg:w="2"/><text x="80.2664%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.0983%" y="693" width="0.0819%" height="15" fill="rgb(231,157,17)" fg:x="978" fg:w="1"/><text x="80.3483%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.0983%" y="677" width="0.0819%" height="15" fill="rgb(224,139,6)" fg:x="978" fg:w="1"/><text x="80.3483%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.33%)</title><rect x="80.0164%" y="805" width="0.3276%" height="15" fill="rgb(223,83,16)" fg:x="977" fg:w="4"/><text x="80.2664%" y="815.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.33%)</title><rect x="80.0164%" y="789" width="0.3276%" height="15" fill="rgb(232,211,20)" fg:x="977" fg:w="4"/><text x="80.2664%" y="799.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.33%)</title><rect x="80.0164%" y="773" width="0.3276%" height="15" fill="rgb(225,203,35)" fg:x="977" fg:w="4"/><text x="80.2664%" y="783.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="80.1802%" y="757" width="0.1638%" height="15" fill="rgb(215,211,44)" fg:x="979" fg:w="2"/><text x="80.4302%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.1802%" y="741" width="0.1638%" height="15" fill="rgb(248,213,26)" fg:x="979" fg:w="2"/><text x="80.4302%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="80.1802%" y="725" width="0.1638%" height="15" fill="rgb(214,23,52)" fg:x="979" fg:w="2"/><text x="80.4302%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.2621%" y="709" width="0.0819%" height="15" fill="rgb(225,173,50)" fg:x="980" fg:w="1"/><text x="80.5121%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.2621%" y="693" width="0.0819%" height="15" fill="rgb(206,150,22)" fg:x="980" fg:w="1"/><text x="80.5121%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.2621%" y="677" width="0.0819%" height="15" fill="rgb(239,64,23)" fg:x="980" fg:w="1"/><text x="80.5121%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="80.2621%" y="661" width="0.0819%" height="15" fill="rgb(242,50,38)" fg:x="980" fg:w="1"/><text x="80.5121%" y="671.50"></text></g><g><title>libloading::os::unix::Library::open (2 samples, 0.16%)</title><rect x="80.3440%" y="757" width="0.1638%" height="15" fill="rgb(217,91,15)" fg:x="981" fg:w="2"/><text x="80.5940%" y="767.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="80.3440%" y="741" width="0.1638%" height="15" fill="rgb(230,172,6)" fg:x="981" fg:w="2"/><text x="80.5940%" y="751.50"></text></g><g><title>_dl_catch_error (2 samples, 0.16%)</title><rect x="80.3440%" y="725" width="0.1638%" height="15" fill="rgb(221,98,26)" fg:x="981" fg:w="2"/><text x="80.5940%" y="735.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="80.3440%" y="709" width="0.1638%" height="15" fill="rgb(227,210,45)" fg:x="981" fg:w="2"/><text x="80.5940%" y="719.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="80.3440%" y="693" width="0.1638%" height="15" fill="rgb(206,8,30)" fg:x="981" fg:w="2"/><text x="80.5940%" y="703.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="80.3440%" y="677" width="0.1638%" height="15" fill="rgb(241,219,17)" fg:x="981" fg:w="2"/><text x="80.5940%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.25%)</title><rect x="80.3440%" y="773" width="0.2457%" height="15" fill="rgb(247,121,29)" fg:x="981" fg:w="3"/><text x="80.5940%" y="783.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="80.5078%" y="757" width="0.0819%" height="15" fill="rgb(219,169,49)" fg:x="983" fg:w="1"/><text x="80.7578%" y="767.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="80.5078%" y="741" width="0.0819%" height="15" fill="rgb(253,49,49)" fg:x="983" fg:w="1"/><text x="80.7578%" y="751.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.82%)</title><rect x="79.8526%" y="837" width="0.8190%" height="15" fill="rgb(217,178,3)" fg:x="975" fg:w="10"/><text x="80.1026%" y="847.50"></text></g><g><title>engine::session::Session::new (9 samples, 0.74%)</title><rect x="79.9345%" y="821" width="0.7371%" height="15" fill="rgb(234,73,37)" fg:x="976" fg:w="9"/><text x="80.1845%" y="831.50"></text></g><g><title>engine::session::Session::initialize (4 samples, 0.33%)</title><rect x="80.3440%" y="805" width="0.3276%" height="15" fill="rgb(250,98,22)" fg:x="981" fg:w="4"/><text x="80.5940%" y="815.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (4 samples, 0.33%)</title><rect x="80.3440%" y="789" width="0.3276%" height="15" fill="rgb(220,108,37)" fg:x="981" fg:w="4"/><text x="80.5940%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="80.5897%" y="773" width="0.0819%" height="15" fill="rgb(225,168,10)" fg:x="984" fg:w="1"/><text x="80.8397%" y="783.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="80.5897%" y="757" width="0.0819%" height="15" fill="rgb(247,215,21)" fg:x="984" fg:w="1"/><text x="80.8397%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="80.7535%" y="789" width="0.0819%" height="15" fill="rgb(253,189,31)" fg:x="986" fg:w="1"/><text x="81.0035%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.7535%" y="773" width="0.0819%" height="15" fill="rgb(241,54,22)" fg:x="986" fg:w="1"/><text x="81.0035%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.7535%" y="757" width="0.0819%" height="15" fill="rgb(211,87,4)" fg:x="986" fg:w="1"/><text x="81.0035%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.7535%" y="741" width="0.0819%" height="15" fill="rgb(245,112,24)" fg:x="986" fg:w="1"/><text x="81.0035%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.7535%" y="725" width="0.0819%" height="15" fill="rgb(235,190,41)" fg:x="986" fg:w="1"/><text x="81.0035%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.7535%" y="709" width="0.0819%" height="15" fill="rgb(214,89,8)" fg:x="986" fg:w="1"/><text x="81.0035%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.7535%" y="693" width="0.0819%" height="15" fill="rgb(249,155,35)" fg:x="986" fg:w="1"/><text x="81.0035%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.7535%" y="677" width="0.0819%" height="15" fill="rgb(249,88,26)" fg:x="986" fg:w="1"/><text x="81.0035%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.7535%" y="661" width="0.0819%" height="15" fill="rgb(232,56,8)" fg:x="986" fg:w="1"/><text x="81.0035%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.7535%" y="645" width="0.0819%" height="15" fill="rgb(240,95,3)" fg:x="986" fg:w="1"/><text x="81.0035%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.7535%" y="629" width="0.0819%" height="15" fill="rgb(222,44,28)" fg:x="986" fg:w="1"/><text x="81.0035%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.7535%" y="613" width="0.0819%" height="15" fill="rgb(234,16,30)" fg:x="986" fg:w="1"/><text x="81.0035%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.7535%" y="597" width="0.0819%" height="15" fill="rgb(223,26,17)" fg:x="986" fg:w="1"/><text x="81.0035%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9173%" y="677" width="0.0819%" height="15" fill="rgb(239,187,47)" fg:x="988" fg:w="1"/><text x="81.1673%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="80.9173%" y="741" width="0.1638%" height="15" fill="rgb(247,102,50)" fg:x="988" fg:w="2"/><text x="81.1673%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.9173%" y="725" width="0.1638%" height="15" fill="rgb(231,216,22)" fg:x="988" fg:w="2"/><text x="81.1673%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.9173%" y="709" width="0.1638%" height="15" fill="rgb(216,201,26)" fg:x="988" fg:w="2"/><text x="81.1673%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.9173%" y="693" width="0.1638%" height="15" fill="rgb(214,186,23)" fg:x="988" fg:w="2"/><text x="81.1673%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.9992%" y="677" width="0.0819%" height="15" fill="rgb(235,184,4)" fg:x="989" fg:w="1"/><text x="81.2492%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0811%" y="725" width="0.0819%" height="15" fill="rgb(244,46,17)" fg:x="990" fg:w="1"/><text x="81.3311%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0811%" y="709" width="0.0819%" height="15" fill="rgb(248,74,46)" fg:x="990" fg:w="1"/><text x="81.3311%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0811%" y="693" width="0.0819%" height="15" fill="rgb(243,79,5)" fg:x="990" fg:w="1"/><text x="81.3311%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.0811%" y="677" width="0.0819%" height="15" fill="rgb(213,148,1)" fg:x="990" fg:w="1"/><text x="81.3311%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.0811%" y="661" width="0.0819%" height="15" fill="rgb(221,30,0)" fg:x="990" fg:w="1"/><text x="81.3311%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.0811%" y="645" width="0.0819%" height="15" fill="rgb(207,85,29)" fg:x="990" fg:w="1"/><text x="81.3311%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.0811%" y="629" width="0.0819%" height="15" fill="rgb(239,31,46)" fg:x="990" fg:w="1"/><text x="81.3311%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.1630%" y="709" width="0.1638%" height="15" fill="rgb(219,6,1)" fg:x="991" fg:w="2"/><text x="81.4130%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.1630%" y="693" width="0.1638%" height="15" fill="rgb(229,90,29)" fg:x="991" fg:w="2"/><text x="81.4130%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.1630%" y="677" width="0.1638%" height="15" fill="rgb(242,201,42)" fg:x="991" fg:w="2"/><text x="81.4130%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3268%" y="693" width="0.0819%" height="15" fill="rgb(243,80,54)" fg:x="993" fg:w="1"/><text x="81.5768%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.3268%" y="677" width="0.0819%" height="15" fill="rgb(223,166,15)" fg:x="993" fg:w="1"/><text x="81.5768%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3268%" y="661" width="0.0819%" height="15" fill="rgb(238,78,27)" fg:x="993" fg:w="1"/><text x="81.5768%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3268%" y="645" width="0.0819%" height="15" fill="rgb(235,28,43)" fg:x="993" fg:w="1"/><text x="81.5768%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.3268%" y="629" width="0.0819%" height="15" fill="rgb(240,210,28)" fg:x="993" fg:w="1"/><text x="81.5768%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.3268%" y="709" width="0.1638%" height="15" fill="rgb(253,6,46)" fg:x="993" fg:w="2"/><text x="81.5768%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4087%" y="693" width="0.0819%" height="15" fill="rgb(250,159,47)" fg:x="994" fg:w="1"/><text x="81.6587%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4087%" y="677" width="0.0819%" height="15" fill="rgb(216,139,2)" fg:x="994" fg:w="1"/><text x="81.6587%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.4087%" y="661" width="0.0819%" height="15" fill="rgb(221,124,44)" fg:x="994" fg:w="1"/><text x="81.6587%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.66%)</title><rect x="80.9173%" y="757" width="0.6552%" height="15" fill="rgb(205,37,22)" fg:x="988" fg:w="8"/><text x="81.1673%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="81.0811%" y="741" width="0.4914%" height="15" fill="rgb(250,55,8)" fg:x="990" fg:w="6"/><text x="81.3311%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="81.1630%" y="725" width="0.4095%" height="15" fill="rgb(215,83,48)" fg:x="991" fg:w="5"/><text x="81.4130%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4906%" y="709" width="0.0819%" height="15" fill="rgb(253,2,32)" fg:x="995" fg:w="1"/><text x="81.7406%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4906%" y="693" width="0.0819%" height="15" fill="rgb(236,67,28)" fg:x="995" fg:w="1"/><text x="81.7406%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.4906%" y="677" width="0.0819%" height="15" fill="rgb(252,55,15)" fg:x="995" fg:w="1"/><text x="81.7406%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5725%" y="693" width="0.0819%" height="15" fill="rgb(243,173,17)" fg:x="996" fg:w="1"/><text x="81.8225%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.5725%" y="757" width="0.1638%" height="15" fill="rgb(215,212,13)" fg:x="996" fg:w="2"/><text x="81.8225%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.5725%" y="741" width="0.1638%" height="15" fill="rgb(253,176,6)" fg:x="996" fg:w="2"/><text x="81.8225%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.5725%" y="725" width="0.1638%" height="15" fill="rgb(236,105,26)" fg:x="996" fg:w="2"/><text x="81.8225%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.5725%" y="709" width="0.1638%" height="15" fill="rgb(239,226,32)" fg:x="996" fg:w="2"/><text x="81.8225%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6544%" y="693" width="0.0819%" height="15" fill="rgb(236,104,51)" fg:x="997" fg:w="1"/><text x="81.9044%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7363%" y="709" width="0.0819%" height="15" fill="rgb(220,172,33)" fg:x="998" fg:w="1"/><text x="81.9863%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7363%" y="693" width="0.0819%" height="15" fill="rgb(224,182,25)" fg:x="998" fg:w="1"/><text x="81.9863%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.7363%" y="677" width="0.0819%" height="15" fill="rgb(236,184,24)" fg:x="998" fg:w="1"/><text x="81.9863%" y="687.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7363%" y="661" width="0.0819%" height="15" fill="rgb(241,221,14)" fg:x="998" fg:w="1"/><text x="81.9863%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7363%" y="645" width="0.0819%" height="15" fill="rgb(227,146,5)" fg:x="998" fg:w="1"/><text x="81.9863%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7363%" y="629" width="0.0819%" height="15" fill="rgb(214,15,23)" fg:x="998" fg:w="1"/><text x="81.9863%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7363%" y="613" width="0.0819%" height="15" fill="rgb(233,157,31)" fg:x="998" fg:w="1"/><text x="81.9863%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7363%" y="597" width="0.0819%" height="15" fill="rgb(211,27,52)" fg:x="998" fg:w="1"/><text x="81.9863%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8182%" y="709" width="0.0819%" height="15" fill="rgb(212,223,15)" fg:x="999" fg:w="1"/><text x="82.0682%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.8182%" y="693" width="0.0819%" height="15" fill="rgb(254,211,0)" fg:x="999" fg:w="1"/><text x="82.0682%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8182%" y="677" width="0.0819%" height="15" fill="rgb(205,43,38)" fg:x="999" fg:w="1"/><text x="82.0682%" y="687.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (14 samples, 1.15%)</title><rect x="80.8354%" y="789" width="1.1466%" height="15" fill="rgb(242,206,46)" fg:x="987" fg:w="14"/><text x="81.0854%" y="799.50"></text></g><g><title>engine::session::Session::check_for_changes (14 samples, 1.15%)</title><rect x="80.8354%" y="773" width="1.1466%" height="15" fill="rgb(220,221,12)" fg:x="987" fg:w="14"/><text x="81.0854%" y="783.50"></text></g><g><title>kernel::compare::any_entity_changes (3 samples, 0.25%)</title><rect x="81.7363%" y="757" width="0.2457%" height="15" fill="rgb(217,156,35)" fg:x="998" fg:w="3"/><text x="81.9863%" y="767.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (3 samples, 0.25%)</title><rect x="81.7363%" y="741" width="0.2457%" height="15" fill="rgb(207,181,49)" fg:x="998" fg:w="3"/><text x="81.9863%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="81.7363%" y="725" width="0.2457%" height="15" fill="rgb(235,103,47)" fg:x="998" fg:w="3"/><text x="81.9863%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.9001%" y="709" width="0.0819%" height="15" fill="rgb(222,63,28)" fg:x="1000" fg:w="1"/><text x="82.1501%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.08%)</title><rect x="81.9001%" y="693" width="0.0819%" height="15" fill="rgb(244,137,21)" fg:x="1000" fg:w="1"/><text x="82.1501%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.9001%" y="677" width="0.0819%" height="15" fill="rgb(228,35,27)" fg:x="1000" fg:w="1"/><text x="82.1501%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9001%" y="661" width="0.0819%" height="15" fill="rgb(226,191,41)" fg:x="1000" fg:w="1"/><text x="82.1501%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9001%" y="645" width="0.0819%" height="15" fill="rgb(210,154,3)" fg:x="1000" fg:w="1"/><text x="82.1501%" y="655.50"></text></g><g><title>engine::session::Session::flush (16 samples, 1.31%)</title><rect x="80.7535%" y="821" width="1.3104%" height="15" fill="rgb(216,60,49)" fg:x="986" fg:w="16"/><text x="81.0035%" y="831.50"></text></g><g><title>engine::session::Session::save_entity_changes (16 samples, 1.31%)</title><rect x="80.7535%" y="805" width="1.3104%" height="15" fill="rgb(226,17,20)" fg:x="986" fg:w="16"/><text x="81.0035%" y="815.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="81.9820%" y="789" width="0.0819%" height="15" fill="rgb(206,115,35)" fg:x="1001" fg:w="1"/><text x="82.2320%" y="799.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="81.9820%" y="773" width="0.0819%" height="15" fill="rgb(227,88,1)" fg:x="1001" fg:w="1"/><text x="82.2320%" y="783.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="81.9820%" y="757" width="0.0819%" height="15" fill="rgb(230,222,24)" fg:x="1001" fg:w="1"/><text x="82.2320%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="81.9820%" y="741" width="0.0819%" height="15" fill="rgb(214,124,32)" fg:x="1001" fg:w="1"/><text x="82.2320%" y="751.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="81.9820%" y="725" width="0.0819%" height="15" fill="rgb(240,41,36)" fg:x="1001" fg:w="1"/><text x="82.2320%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="81.9820%" y="709" width="0.0819%" height="15" fill="rgb(221,17,52)" fg:x="1001" fg:w="1"/><text x="82.2320%" y="719.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="81.9820%" y="693" width="0.0819%" height="15" fill="rgb(252,70,16)" fg:x="1001" fg:w="1"/><text x="82.2320%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="82.0639%" y="789" width="0.0819%" height="15" fill="rgb(250,177,4)" fg:x="1002" fg:w="1"/><text x="82.3139%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="82.0639%" y="773" width="0.0819%" height="15" fill="rgb(240,188,47)" fg:x="1002" fg:w="1"/><text x="82.3139%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.0639%" y="757" width="0.0819%" height="15" fill="rgb(215,92,12)" fg:x="1002" fg:w="1"/><text x="82.3139%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0639%" y="741" width="0.0819%" height="15" fill="rgb(242,110,29)" fg:x="1002" fg:w="1"/><text x="82.3139%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1458%" y="757" width="0.0819%" height="15" fill="rgb(208,211,26)" fg:x="1003" fg:w="1"/><text x="82.3958%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1458%" y="741" width="0.0819%" height="15" fill="rgb(244,147,6)" fg:x="1003" fg:w="1"/><text x="82.3958%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.1458%" y="725" width="0.0819%" height="15" fill="rgb(211,130,42)" fg:x="1003" fg:w="1"/><text x="82.3958%" y="735.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1458%" y="709" width="0.0819%" height="15" fill="rgb(220,63,1)" fg:x="1003" fg:w="1"/><text x="82.3958%" y="719.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="82.1458%" y="789" width="0.1638%" height="15" fill="rgb(241,212,30)" fg:x="1003" fg:w="2"/><text x="82.3958%" y="799.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="82.1458%" y="773" width="0.1638%" height="15" fill="rgb(233,153,17)" fg:x="1003" fg:w="2"/><text x="82.3958%" y="783.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2277%" y="757" width="0.0819%" height="15" fill="rgb(236,3,10)" fg:x="1004" fg:w="1"/><text x="82.4777%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2277%" y="741" width="0.0819%" height="15" fill="rgb(232,41,21)" fg:x="1004" fg:w="1"/><text x="82.4777%" y="751.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2277%" y="725" width="0.0819%" height="15" fill="rgb(206,63,51)" fg:x="1004" fg:w="1"/><text x="82.4777%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2277%" y="709" width="0.0819%" height="15" fill="rgb(250,214,3)" fg:x="1004" fg:w="1"/><text x="82.4777%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2277%" y="693" width="0.0819%" height="15" fill="rgb(254,89,27)" fg:x="1004" fg:w="1"/><text x="82.4777%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2277%" y="677" width="0.0819%" height="15" fill="rgb(249,41,14)" fg:x="1004" fg:w="1"/><text x="82.4777%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.2277%" y="661" width="0.0819%" height="15" fill="rgb(221,196,51)" fg:x="1004" fg:w="1"/><text x="82.4777%" y="671.50"></text></g><g><title>plugins_core::build::Build::holding (6 samples, 0.49%)</title><rect x="82.0639%" y="821" width="0.4914%" height="15" fill="rgb(214,116,26)" fg:x="1002" fg:w="6"/><text x="82.3139%" y="831.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.49%)</title><rect x="82.0639%" y="805" width="0.4914%" height="15" fill="rgb(236,67,7)" fg:x="1002" fg:w="6"/><text x="82.3139%" y="815.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.25%)</title><rect x="82.3096%" y="789" width="0.2457%" height="15" fill="rgb(253,179,32)" fg:x="1005" fg:w="3"/><text x="82.5596%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="82.4734%" y="773" width="0.0819%" height="15" fill="rgb(218,33,15)" fg:x="1007" fg:w="1"/><text x="82.7234%" y="783.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="82.4734%" y="757" width="0.0819%" height="15" fill="rgb(217,202,41)" fg:x="1007" fg:w="1"/><text x="82.7234%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="82.4734%" y="741" width="0.0819%" height="15" fill="rgb(234,133,5)" fg:x="1007" fg:w="1"/><text x="82.7234%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="82.4734%" y="725" width="0.0819%" height="15" fill="rgb(240,47,40)" fg:x="1007" fg:w="1"/><text x="82.7234%" y="735.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="82.4734%" y="709" width="0.0819%" height="15" fill="rgb(234,166,26)" fg:x="1007" fg:w="1"/><text x="82.7234%" y="719.50"></text></g><g><title>kernel::model::Identity::new (1 samples, 0.08%)</title><rect x="82.4734%" y="693" width="0.0819%" height="15" fill="rgb(244,125,51)" fg:x="1007" fg:w="1"/><text x="82.7234%" y="703.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="82.5553%" y="821" width="0.0819%" height="15" fill="rgb(229,171,11)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.5553%" y="805" width="0.0819%" height="15" fill="rgb(224,38,45)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="82.5553%" y="789" width="0.0819%" height="15" fill="rgb(237,27,7)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.5553%" y="773" width="0.0819%" height="15" fill="rgb(216,52,7)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.5553%" y="757" width="0.0819%" height="15" fill="rgb(243,11,11)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.5553%" y="741" width="0.0819%" height="15" fill="rgb(253,167,20)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5553%" y="725" width="0.0819%" height="15" fill="rgb(215,207,5)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.5553%" y="709" width="0.0819%" height="15" fill="rgb(252,127,31)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.5553%" y="693" width="0.0819%" height="15" fill="rgb(209,106,27)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.5553%" y="677" width="0.0819%" height="15" fill="rgb(214,220,18)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.5553%" y="661" width="0.0819%" height="15" fill="rgb(237,89,12)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.5553%" y="645" width="0.0819%" height="15" fill="rgb(209,167,36)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="82.5553%" y="629" width="0.0819%" height="15" fill="rgb(243,45,22)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.08%)</title><rect x="82.5553%" y="613" width="0.0819%" height="15" fill="rgb(239,2,46)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.08%)</title><rect x="82.5553%" y="597" width="0.0819%" height="15" fill="rgb(241,101,0)" fg:x="1008" fg:w="1"/><text x="82.8053%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="82.7191%" y="805" width="0.0819%" height="15" fill="rgb(244,34,31)" fg:x="1010" fg:w="1"/><text x="82.9691%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.7191%" y="789" width="0.0819%" height="15" fill="rgb(248,23,22)" fg:x="1010" fg:w="1"/><text x="82.9691%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="82.7191%" y="773" width="0.0819%" height="15" fill="rgb(218,27,48)" fg:x="1010" fg:w="1"/><text x="82.9691%" y="783.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="82.7191%" y="757" width="0.0819%" height="15" fill="rgb(232,78,1)" fg:x="1010" fg:w="1"/><text x="82.9691%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.7191%" y="741" width="0.0819%" height="15" fill="rgb(233,169,12)" fg:x="1010" fg:w="1"/><text x="82.9691%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="82.7191%" y="725" width="0.0819%" height="15" fill="rgb(225,222,54)" fg:x="1010" fg:w="1"/><text x="82.9691%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.8829%" y="709" width="0.0819%" height="15" fill="rgb(245,126,29)" fg:x="1012" fg:w="1"/><text x="83.1329%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8829%" y="693" width="0.0819%" height="15" fill="rgb(241,63,48)" fg:x="1012" fg:w="1"/><text x="83.1329%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.8829%" y="677" width="0.0819%" height="15" fill="rgb(235,126,38)" fg:x="1012" fg:w="1"/><text x="83.1329%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.8829%" y="661" width="0.0819%" height="15" fill="rgb(232,96,49)" fg:x="1012" fg:w="1"/><text x="83.1329%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.25%)</title><rect x="82.9648%" y="693" width="0.2457%" height="15" fill="rgb(211,146,40)" fg:x="1013" fg:w="3"/><text x="83.2148%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.0467%" y="677" width="0.1638%" height="15" fill="rgb(247,93,44)" fg:x="1014" fg:w="2"/><text x="83.2967%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.1286%" y="661" width="0.0819%" height="15" fill="rgb(251,41,49)" fg:x="1015" fg:w="1"/><text x="83.3786%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.1286%" y="645" width="0.0819%" height="15" fill="rgb(218,155,12)" fg:x="1015" fg:w="1"/><text x="83.3786%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.2105%" y="661" width="0.0819%" height="15" fill="rgb(221,161,30)" fg:x="1016" fg:w="1"/><text x="83.4605%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.2105%" y="645" width="0.0819%" height="15" fill="rgb(221,179,11)" fg:x="1016" fg:w="1"/><text x="83.4605%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.25%)</title><rect x="83.2105%" y="677" width="0.2457%" height="15" fill="rgb(224,170,48)" fg:x="1016" fg:w="3"/><text x="83.4605%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.2924%" y="661" width="0.1638%" height="15" fill="rgb(223,117,5)" fg:x="1017" fg:w="2"/><text x="83.5424%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.2924%" y="645" width="0.1638%" height="15" fill="rgb(209,52,20)" fg:x="1017" fg:w="2"/><text x="83.5424%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.74%)</title><rect x="82.9648%" y="709" width="0.7371%" height="15" fill="rgb(209,19,41)" fg:x="1013" fg:w="9"/><text x="83.2148%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="83.2105%" y="693" width="0.4914%" height="15" fill="rgb(210,177,12)" fg:x="1016" fg:w="6"/><text x="83.4605%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="83.4562%" y="677" width="0.2457%" height="15" fill="rgb(211,159,37)" fg:x="1019" fg:w="3"/><text x="83.7062%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.5381%" y="661" width="0.1638%" height="15" fill="rgb(209,20,2)" fg:x="1020" fg:w="2"/><text x="83.7881%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.6200%" y="645" width="0.0819%" height="15" fill="rgb(244,3,46)" fg:x="1021" fg:w="1"/><text x="83.8700%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.98%)</title><rect x="82.8829%" y="741" width="0.9828%" height="15" fill="rgb(220,94,38)" fg:x="1012" fg:w="12"/><text x="83.1329%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.98%)</title><rect x="82.8829%" y="725" width="0.9828%" height="15" fill="rgb(253,14,31)" fg:x="1012" fg:w="12"/><text x="83.1329%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.7019%" y="709" width="0.1638%" height="15" fill="rgb(234,176,13)" fg:x="1022" fg:w="2"/><text x="83.9519%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.7019%" y="693" width="0.1638%" height="15" fill="rgb(218,62,25)" fg:x="1022" fg:w="2"/><text x="83.9519%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="83.7019%" y="677" width="0.1638%" height="15" fill="rgb(216,124,40)" fg:x="1022" fg:w="2"/><text x="83.9519%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.7838%" y="661" width="0.0819%" height="15" fill="rgb(228,170,12)" fg:x="1023" fg:w="1"/><text x="84.0338%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.7838%" y="645" width="0.0819%" height="15" fill="rgb(231,226,5)" fg:x="1023" fg:w="1"/><text x="84.0338%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.7838%" y="629" width="0.0819%" height="15" fill="rgb(237,122,22)" fg:x="1023" fg:w="1"/><text x="84.0338%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="83.8657%" y="709" width="0.1638%" height="15" fill="rgb(209,185,25)" fg:x="1024" fg:w="2"/><text x="84.1157%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0295%" y="693" width="0.0819%" height="15" fill="rgb(228,200,32)" fg:x="1026" fg:w="1"/><text x="84.2795%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="83.8657%" y="741" width="0.3276%" height="15" fill="rgb(217,140,10)" fg:x="1024" fg:w="4"/><text x="84.1157%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.33%)</title><rect x="83.8657%" y="725" width="0.3276%" height="15" fill="rgb(253,17,24)" fg:x="1024" fg:w="4"/><text x="84.1157%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.0295%" y="709" width="0.1638%" height="15" fill="rgb(212,61,6)" fg:x="1026" fg:w="2"/><text x="84.2795%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1114%" y="693" width="0.0819%" height="15" fill="rgb(205,14,25)" fg:x="1027" fg:w="1"/><text x="84.3614%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1114%" y="677" width="0.0819%" height="15" fill="rgb(232,69,41)" fg:x="1027" fg:w="1"/><text x="84.3614%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1114%" y="661" width="0.0819%" height="15" fill="rgb(241,106,47)" fg:x="1027" fg:w="1"/><text x="84.3614%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1933%" y="693" width="0.0819%" height="15" fill="rgb(210,213,53)" fg:x="1028" fg:w="1"/><text x="84.4433%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.2752%" y="693" width="0.1638%" height="15" fill="rgb(253,175,27)" fg:x="1029" fg:w="2"/><text x="84.5252%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3571%" y="677" width="0.0819%" height="15" fill="rgb(211,171,24)" fg:x="1030" fg:w="1"/><text x="84.6071%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.3571%" y="661" width="0.0819%" height="15" fill="rgb(229,80,7)" fg:x="1030" fg:w="1"/><text x="84.6071%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4390%" y="693" width="0.0819%" height="15" fill="rgb(212,46,39)" fg:x="1031" fg:w="1"/><text x="84.6890%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4390%" y="677" width="0.0819%" height="15" fill="rgb(240,80,45)" fg:x="1031" fg:w="1"/><text x="84.6890%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.4390%" y="661" width="0.0819%" height="15" fill="rgb(253,177,40)" fg:x="1031" fg:w="1"/><text x="84.6890%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4390%" y="645" width="0.0819%" height="15" fill="rgb(249,200,15)" fg:x="1031" fg:w="1"/><text x="84.6890%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.5209%" y="645" width="0.1638%" height="15" fill="rgb(217,78,26)" fg:x="1032" fg:w="2"/><text x="84.7709%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.5209%" y="629" width="0.1638%" height="15" fill="rgb(254,151,32)" fg:x="1032" fg:w="2"/><text x="84.7709%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="84.5209%" y="613" width="0.1638%" height="15" fill="rgb(226,165,27)" fg:x="1032" fg:w="2"/><text x="84.7709%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.6847%" y="629" width="0.0819%" height="15" fill="rgb(250,206,4)" fg:x="1034" fg:w="1"/><text x="84.9347%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6847%" y="613" width="0.0819%" height="15" fill="rgb(231,229,27)" fg:x="1034" fg:w="1"/><text x="84.9347%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6847%" y="597" width="0.0819%" height="15" fill="rgb(239,217,8)" fg:x="1034" fg:w="1"/><text x="84.9347%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.6847%" y="581" width="0.0819%" height="15" fill="rgb(225,204,27)" fg:x="1034" fg:w="1"/><text x="84.9347%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="84.5209%" y="661" width="0.3276%" height="15" fill="rgb(230,56,32)" fg:x="1032" fg:w="4"/><text x="84.7709%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.6847%" y="645" width="0.1638%" height="15" fill="rgb(222,56,27)" fg:x="1034" fg:w="2"/><text x="84.9347%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7666%" y="629" width="0.0819%" height="15" fill="rgb(253,108,27)" fg:x="1035" fg:w="1"/><text x="85.0166%" y="639.50"></text></g><g><title>engine::session::Session::flush (26 samples, 2.13%)</title><rect x="82.8010%" y="805" width="2.1294%" height="15" fill="rgb(212,87,36)" fg:x="1011" fg:w="26"/><text x="83.0510%" y="815.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (26 samples, 2.13%)</title><rect x="82.8010%" y="789" width="2.1294%" height="15" fill="rgb(247,82,36)" fg:x="1011" fg:w="26"/><text x="83.0510%" y="799.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (26 samples, 2.13%)</title><rect x="82.8010%" y="773" width="2.1294%" height="15" fill="rgb(222,143,9)" fg:x="1011" fg:w="26"/><text x="83.0510%" y="783.50">e..</text></g><g><title>engine::session::Session::check_for_changes (25 samples, 2.05%)</title><rect x="82.8829%" y="757" width="2.0475%" height="15" fill="rgb(238,162,48)" fg:x="1012" fg:w="25"/><text x="83.1329%" y="767.50">e..</text></g><g><title>kernel::compare::any_entity_changes (9 samples, 0.74%)</title><rect x="84.1933%" y="741" width="0.7371%" height="15" fill="rgb(221,59,43)" fg:x="1028" fg:w="9"/><text x="84.4433%" y="751.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (9 samples, 0.74%)</title><rect x="84.1933%" y="725" width="0.7371%" height="15" fill="rgb(205,166,41)" fg:x="1028" fg:w="9"/><text x="84.4433%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.74%)</title><rect x="84.1933%" y="709" width="0.7371%" height="15" fill="rgb(241,186,40)" fg:x="1028" fg:w="9"/><text x="84.4433%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.41%)</title><rect x="84.5209%" y="693" width="0.4095%" height="15" fill="rgb(216,119,35)" fg:x="1032" fg:w="5"/><text x="84.7709%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (5 samples, 0.41%)</title><rect x="84.5209%" y="677" width="0.4095%" height="15" fill="rgb(208,68,38)" fg:x="1032" fg:w="5"/><text x="84.7709%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.8485%" y="661" width="0.0819%" height="15" fill="rgb(217,113,1)" fg:x="1036" fg:w="1"/><text x="85.0985%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.41%)</title><rect x="84.9304%" y="773" width="0.4095%" height="15" fill="rgb(242,153,3)" fg:x="1037" fg:w="5"/><text x="85.1804%" y="783.50"></text></g><g><title>engine::internal::EntityMap::add_entity (5 samples, 0.41%)</title><rect x="84.9304%" y="757" width="0.4095%" height="15" fill="rgb(229,76,35)" fg:x="1037" fg:w="5"/><text x="85.1804%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.41%)</title><rect x="84.9304%" y="741" width="0.4095%" height="15" fill="rgb(229,125,34)" fg:x="1037" fg:w="5"/><text x="85.1804%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.41%)</title><rect x="84.9304%" y="725" width="0.4095%" height="15" fill="rgb(238,179,36)" fg:x="1037" fg:w="5"/><text x="85.1804%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="84.9304%" y="709" width="0.4095%" height="15" fill="rgb(244,183,19)" fg:x="1037" fg:w="5"/><text x="85.1804%" y="719.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="84.9304%" y="693" width="0.4095%" height="15" fill="rgb(216,85,49)" fg:x="1037" fg:w="5"/><text x="85.1804%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="84.9304%" y="789" width="0.4914%" height="15" fill="rgb(208,161,47)" fg:x="1037" fg:w="6"/><text x="85.1804%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="85.3399%" y="773" width="0.0819%" height="15" fill="rgb(233,210,18)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3399%" y="757" width="0.0819%" height="15" fill="rgb(205,104,42)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3399%" y="741" width="0.0819%" height="15" fill="rgb(248,90,43)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.3399%" y="725" width="0.0819%" height="15" fill="rgb(206,198,11)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.3399%" y="709" width="0.0819%" height="15" fill="rgb(239,165,27)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.3399%" y="693" width="0.0819%" height="15" fill="rgb(246,44,32)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.3399%" y="677" width="0.0819%" height="15" fill="rgb(252,65,42)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.3399%" y="661" width="0.0819%" height="15" fill="rgb(246,197,18)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.3399%" y="645" width="0.0819%" height="15" fill="rgb(216,192,4)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.3399%" y="629" width="0.0819%" height="15" fill="rgb(208,117,10)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.3399%" y="613" width="0.0819%" height="15" fill="rgb(240,61,47)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.3399%" y="597" width="0.0819%" height="15" fill="rgb(228,178,21)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3399%" y="581" width="0.0819%" height="15" fill="rgb(219,96,54)" fg:x="1042" fg:w="1"/><text x="85.5899%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="85.5037%" y="773" width="0.0819%" height="15" fill="rgb(250,177,24)" fg:x="1044" fg:w="1"/><text x="85.7537%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="85.5037%" y="757" width="0.0819%" height="15" fill="rgb(242,154,46)" fg:x="1044" fg:w="1"/><text x="85.7537%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="85.5037%" y="741" width="0.0819%" height="15" fill="rgb(226,176,29)" fg:x="1044" fg:w="1"/><text x="85.7537%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5037%" y="725" width="0.0819%" height="15" fill="rgb(226,29,2)" fg:x="1044" fg:w="1"/><text x="85.7537%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.5856%" y="773" width="0.0819%" height="15" fill="rgb(237,104,14)" fg:x="1045" fg:w="1"/><text x="85.8356%" y="783.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.5856%" y="757" width="0.0819%" height="15" fill="rgb(245,207,31)" fg:x="1045" fg:w="1"/><text x="85.8356%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.5856%" y="741" width="0.0819%" height="15" fill="rgb(229,211,45)" fg:x="1045" fg:w="1"/><text x="85.8356%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.5856%" y="725" width="0.0819%" height="15" fill="rgb(229,113,15)" fg:x="1045" fg:w="1"/><text x="85.8356%" y="735.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.90%)</title><rect x="84.9304%" y="805" width="0.9009%" height="15" fill="rgb(237,147,15)" fg:x="1037" fg:w="11"/><text x="85.1804%" y="815.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.41%)</title><rect x="85.4218%" y="789" width="0.4095%" height="15" fill="rgb(244,120,12)" fg:x="1043" fg:w="5"/><text x="85.6718%" y="799.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="85.6675%" y="773" width="0.1638%" height="15" fill="rgb(205,120,12)" fg:x="1046" fg:w="2"/><text x="85.9175%" y="783.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="85.6675%" y="757" width="0.1638%" height="15" fill="rgb(231,26,45)" fg:x="1046" fg:w="2"/><text x="85.9175%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="85.6675%" y="741" width="0.1638%" height="15" fill="rgb(246,98,1)" fg:x="1046" fg:w="2"/><text x="85.9175%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.6675%" y="725" width="0.1638%" height="15" fill="rgb(207,68,45)" fg:x="1046" fg:w="2"/><text x="85.9175%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7494%" y="709" width="0.0819%" height="15" fill="rgb(231,27,38)" fg:x="1047" fg:w="1"/><text x="85.9994%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7494%" y="693" width="0.0819%" height="15" fill="rgb(214,223,3)" fg:x="1047" fg:w="1"/><text x="85.9994%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.7494%" y="677" width="0.0819%" height="15" fill="rgb(228,195,46)" fg:x="1047" fg:w="1"/><text x="85.9994%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="85.8313%" y="773" width="0.0819%" height="15" fill="rgb(231,100,42)" fg:x="1048" fg:w="1"/><text x="86.0813%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="85.8313%" y="757" width="0.0819%" height="15" fill="rgb(236,53,4)" fg:x="1048" fg:w="1"/><text x="86.0813%" y="767.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (41 samples, 3.36%)</title><rect x="82.6372%" y="821" width="3.3579%" height="15" fill="rgb(230,152,12)" fg:x="1009" fg:w="41"/><text x="82.8872%" y="831.50">plu..</text></g><g><title>plugins_core::build::Build::occupying (2 samples, 0.16%)</title><rect x="85.8313%" y="805" width="0.1638%" height="15" fill="rgb(226,101,19)" fg:x="1048" fg:w="2"/><text x="86.0813%" y="815.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="85.8313%" y="789" width="0.1638%" height="15" fill="rgb(250,149,32)" fg:x="1048" fg:w="2"/><text x="86.0813%" y="799.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="85.9132%" y="773" width="0.0819%" height="15" fill="rgb(232,178,12)" fg:x="1049" fg:w="1"/><text x="86.1632%" y="783.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="85.9132%" y="757" width="0.0819%" height="15" fill="rgb(246,151,17)" fg:x="1049" fg:w="1"/><text x="86.1632%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9132%" y="741" width="0.0819%" height="15" fill="rgb(252,17,51)" fg:x="1049" fg:w="1"/><text x="86.1632%" y="751.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (67 samples, 5.49%)</title><rect x="80.6716%" y="837" width="5.4873%" height="15" fill="rgb(250,207,23)" fg:x="985" fg:w="67"/><text x="80.9216%" y="847.50">&lt;tests:..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="85.9951%" y="821" width="0.1638%" height="15" fill="rgb(205,27,5)" fg:x="1050" fg:w="2"/><text x="86.2451%" y="831.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="85.9951%" y="805" width="0.1638%" height="15" fill="rgb(224,32,19)" fg:x="1050" fg:w="2"/><text x="86.2451%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.9951%" y="789" width="0.1638%" height="15" fill="rgb(247,214,40)" fg:x="1050" fg:w="2"/><text x="86.2451%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.9951%" y="773" width="0.1638%" height="15" fill="rgb(239,199,17)" fg:x="1050" fg:w="2"/><text x="86.2451%" y="783.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="85.9951%" y="757" width="0.1638%" height="15" fill="rgb(251,159,9)" fg:x="1050" fg:w="2"/><text x="86.2451%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0770%" y="741" width="0.0819%" height="15" fill="rgb(225,78,32)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0770%" y="725" width="0.0819%" height="15" fill="rgb(206,97,47)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0770%" y="709" width="0.0819%" height="15" fill="rgb(227,107,4)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0770%" y="693" width="0.0819%" height="15" fill="rgb(241,146,50)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0770%" y="677" width="0.0819%" height="15" fill="rgb(232,92,30)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0770%" y="661" width="0.0819%" height="15" fill="rgb(222,0,40)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0770%" y="645" width="0.0819%" height="15" fill="rgb(219,54,33)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0770%" y="629" width="0.0819%" height="15" fill="rgb(226,209,28)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0770%" y="613" width="0.0819%" height="15" fill="rgb(254,205,35)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0770%" y="597" width="0.0819%" height="15" fill="rgb(230,159,3)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0770%" y="581" width="0.0819%" height="15" fill="rgb(232,190,24)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0770%" y="565" width="0.0819%" height="15" fill="rgb(217,227,44)" fg:x="1051" fg:w="1"/><text x="86.3270%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="86.1589%" y="805" width="0.0819%" height="15" fill="rgb(236,211,1)" fg:x="1052" fg:w="1"/><text x="86.4089%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="86.1589%" y="789" width="0.0819%" height="15" fill="rgb(250,127,46)" fg:x="1052" fg:w="1"/><text x="86.4089%" y="799.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.1589%" y="773" width="0.0819%" height="15" fill="rgb(229,213,6)" fg:x="1052" fg:w="1"/><text x="86.4089%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.1589%" y="757" width="0.0819%" height="15" fill="rgb(237,15,36)" fg:x="1052" fg:w="1"/><text x="86.4089%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="86.2408%" y="789" width="0.0819%" height="15" fill="rgb(213,131,41)" fg:x="1053" fg:w="1"/><text x="86.4908%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.2408%" y="773" width="0.0819%" height="15" fill="rgb(225,82,44)" fg:x="1053" fg:w="1"/><text x="86.4908%" y="783.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.2408%" y="757" width="0.0819%" height="15" fill="rgb(249,42,11)" fg:x="1053" fg:w="1"/><text x="86.4908%" y="767.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="86.3227%" y="773" width="0.1638%" height="15" fill="rgb(253,11,29)" fg:x="1054" fg:w="2"/><text x="86.5727%" y="783.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="86.3227%" y="757" width="0.1638%" height="15" fill="rgb(206,8,54)" fg:x="1054" fg:w="2"/><text x="86.5727%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.4046%" y="741" width="0.0819%" height="15" fill="rgb(222,186,2)" fg:x="1055" fg:w="1"/><text x="86.6546%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.4046%" y="725" width="0.0819%" height="15" fill="rgb(221,206,53)" fg:x="1055" fg:w="1"/><text x="86.6546%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.4046%" y="709" width="0.0819%" height="15" fill="rgb(230,150,21)" fg:x="1055" fg:w="1"/><text x="86.6546%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.4865%" y="741" width="0.0819%" height="15" fill="rgb(253,202,10)" fg:x="1056" fg:w="1"/><text x="86.7365%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4865%" y="725" width="0.0819%" height="15" fill="rgb(238,109,40)" fg:x="1056" fg:w="1"/><text x="86.7365%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.5684%" y="709" width="0.0819%" height="15" fill="rgb(247,120,22)" fg:x="1057" fg:w="1"/><text x="86.8184%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5684%" y="693" width="0.0819%" height="15" fill="rgb(207,43,30)" fg:x="1057" fg:w="1"/><text x="86.8184%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="86.4865%" y="773" width="0.2457%" height="15" fill="rgb(213,211,24)" fg:x="1056" fg:w="3"/><text x="86.7365%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.25%)</title><rect x="86.4865%" y="757" width="0.2457%" height="15" fill="rgb(239,73,39)" fg:x="1056" fg:w="3"/><text x="86.7365%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.5684%" y="741" width="0.1638%" height="15" fill="rgb(245,182,19)" fg:x="1057" fg:w="2"/><text x="86.8184%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.5684%" y="725" width="0.1638%" height="15" fill="rgb(247,143,26)" fg:x="1057" fg:w="2"/><text x="86.8184%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6503%" y="709" width="0.0819%" height="15" fill="rgb(228,191,23)" fg:x="1058" fg:w="1"/><text x="86.9003%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6503%" y="693" width="0.0819%" height="15" fill="rgb(253,165,31)" fg:x="1058" fg:w="1"/><text x="86.9003%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.33%)</title><rect x="86.8141%" y="709" width="0.3276%" height="15" fill="rgb(234,138,20)" fg:x="1060" fg:w="4"/><text x="87.0641%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0598%" y="693" width="0.0819%" height="15" fill="rgb(218,191,29)" fg:x="1063" fg:w="1"/><text x="87.3098%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2236%" y="693" width="0.0819%" height="15" fill="rgb(221,157,19)" fg:x="1065" fg:w="1"/><text x="87.4736%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.3055%" y="693" width="0.0819%" height="15" fill="rgb(237,26,42)" fg:x="1066" fg:w="1"/><text x="87.5555%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3055%" y="677" width="0.0819%" height="15" fill="rgb(220,163,24)" fg:x="1066" fg:w="1"/><text x="87.5555%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.4693%" y="677" width="0.0819%" height="15" fill="rgb(242,115,20)" fg:x="1068" fg:w="1"/><text x="87.7193%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4693%" y="661" width="0.0819%" height="15" fill="rgb(210,206,9)" fg:x="1068" fg:w="1"/><text x="87.7193%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="86.7322%" y="757" width="0.9009%" height="15" fill="rgb(208,71,17)" fg:x="1059" fg:w="11"/><text x="86.9822%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.90%)</title><rect x="86.7322%" y="741" width="0.9009%" height="15" fill="rgb(233,7,5)" fg:x="1059" fg:w="11"/><text x="86.9822%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.82%)</title><rect x="86.8141%" y="725" width="0.8190%" height="15" fill="rgb(207,92,33)" fg:x="1060" fg:w="10"/><text x="87.0641%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="87.1417%" y="709" width="0.4914%" height="15" fill="rgb(218,87,9)" fg:x="1064" fg:w="6"/><text x="87.3917%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.25%)</title><rect x="87.3874%" y="693" width="0.2457%" height="15" fill="rgb(219,47,37)" fg:x="1067" fg:w="3"/><text x="87.6374%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="87.5512%" y="677" width="0.0819%" height="15" fill="rgb(221,152,34)" fg:x="1069" fg:w="1"/><text x="87.8012%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.5512%" y="661" width="0.0819%" height="15" fill="rgb(235,176,21)" fg:x="1069" fg:w="1"/><text x="87.8012%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.5512%" y="645" width="0.0819%" height="15" fill="rgb(232,212,21)" fg:x="1069" fg:w="1"/><text x="87.8012%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5512%" y="629" width="0.0819%" height="15" fill="rgb(245,82,39)" fg:x="1069" fg:w="1"/><text x="87.8012%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7150%" y="725" width="0.0819%" height="15" fill="rgb(241,52,51)" fg:x="1071" fg:w="1"/><text x="87.9650%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="87.7969%" y="725" width="0.1638%" height="15" fill="rgb(219,91,24)" fg:x="1072" fg:w="2"/><text x="88.0469%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.8788%" y="709" width="0.0819%" height="15" fill="rgb(241,142,12)" fg:x="1073" fg:w="1"/><text x="88.1288%" y="719.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="87.9607%" y="725" width="0.1638%" height="15" fill="rgb(230,27,9)" fg:x="1074" fg:w="2"/><text x="88.2107%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.9607%" y="709" width="0.1638%" height="15" fill="rgb(249,181,32)" fg:x="1074" fg:w="2"/><text x="88.2107%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.2064%" y="661" width="0.0819%" height="15" fill="rgb(230,107,3)" fg:x="1077" fg:w="1"/><text x="88.4564%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2064%" y="645" width="0.0819%" height="15" fill="rgb(246,204,14)" fg:x="1077" fg:w="1"/><text x="88.4564%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.25%)</title><rect x="88.1245%" y="725" width="0.2457%" height="15" fill="rgb(213,192,47)" fg:x="1076" fg:w="3"/><text x="88.3745%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="88.1245%" y="709" width="0.2457%" height="15" fill="rgb(240,44,36)" fg:x="1076" fg:w="3"/><text x="88.3745%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.25%)</title><rect x="88.1245%" y="693" width="0.2457%" height="15" fill="rgb(244,209,38)" fg:x="1076" fg:w="3"/><text x="88.3745%" y="703.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.25%)</title><rect x="88.1245%" y="677" width="0.2457%" height="15" fill="rgb(219,34,37)" fg:x="1076" fg:w="3"/><text x="88.3745%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2883%" y="661" width="0.0819%" height="15" fill="rgb(210,28,6)" fg:x="1078" fg:w="1"/><text x="88.5383%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2883%" y="645" width="0.0819%" height="15" fill="rgb(244,110,52)" fg:x="1078" fg:w="1"/><text x="88.5383%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2883%" y="629" width="0.0819%" height="15" fill="rgb(254,124,47)" fg:x="1078" fg:w="1"/><text x="88.5383%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.2883%" y="613" width="0.0819%" height="15" fill="rgb(254,110,13)" fg:x="1078" fg:w="1"/><text x="88.5383%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3702%" y="725" width="0.0819%" height="15" fill="rgb(252,57,21)" fg:x="1079" fg:w="1"/><text x="88.6202%" y="735.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (11 samples, 0.90%)</title><rect x="87.6331%" y="757" width="0.9009%" height="15" fill="rgb(242,60,45)" fg:x="1070" fg:w="11"/><text x="87.8831%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.90%)</title><rect x="87.6331%" y="741" width="0.9009%" height="15" fill="rgb(234,49,30)" fg:x="1070" fg:w="11"/><text x="87.8831%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="88.4521%" y="725" width="0.0819%" height="15" fill="rgb(218,98,6)" fg:x="1080" fg:w="1"/><text x="88.7021%" y="735.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.08%)</title><rect x="88.4521%" y="709" width="0.0819%" height="15" fill="rgb(220,174,29)" fg:x="1080" fg:w="1"/><text x="88.7021%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="88.4521%" y="693" width="0.0819%" height="15" fill="rgb(236,163,23)" fg:x="1080" fg:w="1"/><text x="88.7021%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="88.4521%" y="677" width="0.0819%" height="15" fill="rgb(242,114,45)" fg:x="1080" fg:w="1"/><text x="88.7021%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.7797%" y="581" width="0.0819%" height="15" fill="rgb(232,10,53)" fg:x="1084" fg:w="1"/><text x="89.0297%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="88.7797%" y="613" width="0.1638%" height="15" fill="rgb(245,108,29)" fg:x="1084" fg:w="2"/><text x="89.0297%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.7797%" y="597" width="0.1638%" height="15" fill="rgb(240,89,53)" fg:x="1084" fg:w="2"/><text x="89.0297%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8616%" y="581" width="0.0819%" height="15" fill="rgb(226,60,45)" fg:x="1085" fg:w="1"/><text x="89.1116%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.25%)</title><rect x="88.9435%" y="613" width="0.2457%" height="15" fill="rgb(230,41,44)" fg:x="1086" fg:w="3"/><text x="89.1935%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="89.0254%" y="597" width="0.1638%" height="15" fill="rgb(230,26,20)" fg:x="1087" fg:w="2"/><text x="89.2754%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.0254%" y="581" width="0.1638%" height="15" fill="rgb(237,170,32)" fg:x="1087" fg:w="2"/><text x="89.2754%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1073%" y="565" width="0.0819%" height="15" fill="rgb(212,35,42)" fg:x="1088" fg:w="1"/><text x="89.3573%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.1073%" y="549" width="0.0819%" height="15" fill="rgb(227,31,34)" fg:x="1088" fg:w="1"/><text x="89.3573%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1073%" y="533" width="0.0819%" height="15" fill="rgb(216,19,18)" fg:x="1088" fg:w="1"/><text x="89.3573%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="88.7797%" y="629" width="0.4914%" height="15" fill="rgb(211,133,42)" fg:x="1084" fg:w="6"/><text x="89.0297%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="89.1892%" y="613" width="0.0819%" height="15" fill="rgb(244,66,13)" fg:x="1089" fg:w="1"/><text x="89.4392%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.2711%" y="613" width="0.0819%" height="15" fill="rgb(218,185,50)" fg:x="1090" fg:w="1"/><text x="89.5211%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="89.2711%" y="629" width="0.1638%" height="15" fill="rgb(219,149,13)" fg:x="1090" fg:w="2"/><text x="89.5211%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3530%" y="613" width="0.0819%" height="15" fill="rgb(221,125,0)" fg:x="1091" fg:w="1"/><text x="89.6030%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.98%)</title><rect x="88.6159%" y="661" width="0.9828%" height="15" fill="rgb(247,126,27)" fg:x="1082" fg:w="12"/><text x="88.8659%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.98%)</title><rect x="88.6159%" y="645" width="0.9828%" height="15" fill="rgb(250,138,30)" fg:x="1082" fg:w="12"/><text x="88.8659%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.4349%" y="629" width="0.1638%" height="15" fill="rgb(230,151,9)" fg:x="1092" fg:w="2"/><text x="89.6849%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5168%" y="613" width="0.0819%" height="15" fill="rgb(233,80,38)" fg:x="1093" fg:w="1"/><text x="89.7668%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5168%" y="597" width="0.0819%" height="15" fill="rgb(232,68,43)" fg:x="1093" fg:w="1"/><text x="89.7668%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.5987%" y="661" width="0.0819%" height="15" fill="rgb(254,5,50)" fg:x="1094" fg:w="1"/><text x="89.8487%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (17 samples, 1.39%)</title><rect x="88.5340%" y="757" width="1.3923%" height="15" fill="rgb(225,45,5)" fg:x="1081" fg:w="17"/><text x="88.7840%" y="767.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.39%)</title><rect x="88.5340%" y="741" width="1.3923%" height="15" fill="rgb(239,22,3)" fg:x="1081" fg:w="17"/><text x="88.7840%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.39%)</title><rect x="88.5340%" y="725" width="1.3923%" height="15" fill="rgb(243,129,0)" fg:x="1081" fg:w="17"/><text x="88.7840%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.39%)</title><rect x="88.5340%" y="709" width="1.3923%" height="15" fill="rgb(223,164,0)" fg:x="1081" fg:w="17"/><text x="88.7840%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.39%)</title><rect x="88.5340%" y="693" width="1.3923%" height="15" fill="rgb(221,46,29)" fg:x="1081" fg:w="17"/><text x="88.7840%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.31%)</title><rect x="88.6159%" y="677" width="1.3104%" height="15" fill="rgb(205,97,47)" fg:x="1082" fg:w="16"/><text x="88.8659%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.25%)</title><rect x="89.6806%" y="661" width="0.2457%" height="15" fill="rgb(249,14,8)" fg:x="1095" fg:w="3"/><text x="89.9306%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8444%" y="645" width="0.0819%" height="15" fill="rgb(216,77,3)" fg:x="1097" fg:w="1"/><text x="90.0944%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8444%" y="629" width="0.0819%" height="15" fill="rgb(206,168,54)" fg:x="1097" fg:w="1"/><text x="90.0944%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.0082%" y="693" width="0.1638%" height="15" fill="rgb(236,3,41)" fg:x="1099" fg:w="2"/><text x="90.2582%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.0901%" y="677" width="0.0819%" height="15" fill="rgb(231,132,24)" fg:x="1100" fg:w="1"/><text x="90.3401%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="89.9263%" y="725" width="0.3276%" height="15" fill="rgb(227,221,40)" fg:x="1098" fg:w="4"/><text x="90.1763%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.25%)</title><rect x="90.0082%" y="709" width="0.2457%" height="15" fill="rgb(233,151,11)" fg:x="1099" fg:w="3"/><text x="90.2582%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.1720%" y="693" width="0.0819%" height="15" fill="rgb(247,81,35)" fg:x="1101" fg:w="1"/><text x="90.4220%" y="703.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (50 samples, 4.10%)</title><rect x="86.2408%" y="805" width="4.0950%" height="15" fill="rgb(243,128,48)" fg:x="1053" fg:w="50"/><text x="86.4908%" y="815.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (49 samples, 4.01%)</title><rect x="86.3227%" y="789" width="4.0131%" height="15" fill="rgb(253,16,10)" fg:x="1054" fg:w="49"/><text x="86.5727%" y="799.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (44 samples, 3.60%)</title><rect x="86.7322%" y="773" width="3.6036%" height="15" fill="rgb(228,67,27)" fg:x="1059" fg:w="44"/><text x="86.9822%" y="783.50">kern..</text></g><g><title>treediff::diff::diff (5 samples, 0.41%)</title><rect x="89.9263%" y="757" width="0.4095%" height="15" fill="rgb(231,105,25)" fg:x="1098" fg:w="5"/><text x="90.1763%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="89.9263%" y="741" width="0.4095%" height="15" fill="rgb(213,166,47)" fg:x="1098" fg:w="5"/><text x="90.1763%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.2539%" y="725" width="0.0819%" height="15" fill="rgb(209,27,10)" fg:x="1102" fg:w="1"/><text x="90.5039%" y="735.50"></text></g><g><title>engine::session::Session::close (52 samples, 4.26%)</title><rect x="86.1589%" y="837" width="4.2588%" height="15" fill="rgb(241,44,30)" fg:x="1052" fg:w="52"/><text x="86.4089%" y="847.50">engin..</text></g><g><title>engine::session::Session::save_entity_changes (52 samples, 4.26%)</title><rect x="86.1589%" y="821" width="4.2588%" height="15" fill="rgb(223,216,15)" fg:x="1052" fg:w="52"/><text x="86.4089%" y="831.50">engin..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="90.3358%" y="805" width="0.0819%" height="15" fill="rgb(227,14,7)" fg:x="1103" fg:w="1"/><text x="90.5858%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4177%" y="709" width="0.0819%" height="15" fill="rgb(237,14,5)" fg:x="1104" fg:w="1"/><text x="90.6677%" y="719.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="90.6634%" y="597" width="0.0819%" height="15" fill="rgb(232,14,36)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="90.6634%" y="581" width="0.0819%" height="15" fill="rgb(234,0,38)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6634%" y="565" width="0.0819%" height="15" fill="rgb(207,170,14)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6634%" y="549" width="0.0819%" height="15" fill="rgb(252,45,13)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.6634%" y="533" width="0.0819%" height="15" fill="rgb(213,142,7)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6634%" y="517" width="0.0819%" height="15" fill="rgb(216,157,23)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.6634%" y="501" width="0.0819%" height="15" fill="rgb(212,145,33)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.6634%" y="485" width="0.0819%" height="15" fill="rgb(233,26,13)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.6634%" y="469" width="0.0819%" height="15" fill="rgb(219,196,19)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.6634%" y="453" width="0.0819%" height="15" fill="rgb(246,56,21)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.6634%" y="437" width="0.0819%" height="15" fill="rgb(222,28,53)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="90.6634%" y="421" width="0.0819%" height="15" fill="rgb(224,5,27)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6634%" y="405" width="0.0819%" height="15" fill="rgb(220,153,33)" fg:x="1107" fg:w="1"/><text x="90.9134%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (3 samples, 0.25%)</title><rect x="90.5815%" y="693" width="0.2457%" height="15" fill="rgb(226,58,19)" fg:x="1106" fg:w="3"/><text x="90.8315%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.25%)</title><rect x="90.5815%" y="677" width="0.2457%" height="15" fill="rgb(239,112,23)" fg:x="1106" fg:w="3"/><text x="90.8315%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.25%)</title><rect x="90.5815%" y="661" width="0.2457%" height="15" fill="rgb(251,213,20)" fg:x="1106" fg:w="3"/><text x="90.8315%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.25%)</title><rect x="90.5815%" y="645" width="0.2457%" height="15" fill="rgb(215,181,21)" fg:x="1106" fg:w="3"/><text x="90.8315%" y="655.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="90.6634%" y="629" width="0.1638%" height="15" fill="rgb(240,8,35)" fg:x="1107" fg:w="2"/><text x="90.9134%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="90.6634%" y="613" width="0.1638%" height="15" fill="rgb(232,203,3)" fg:x="1107" fg:w="2"/><text x="90.9134%" y="623.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="90.7453%" y="597" width="0.0819%" height="15" fill="rgb(214,202,43)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7453%" y="581" width="0.0819%" height="15" fill="rgb(254,35,11)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7453%" y="565" width="0.0819%" height="15" fill="rgb(239,173,13)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7453%" y="549" width="0.0819%" height="15" fill="rgb(220,141,0)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7453%" y="533" width="0.0819%" height="15" fill="rgb(210,98,12)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7453%" y="517" width="0.0819%" height="15" fill="rgb(254,153,22)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7453%" y="501" width="0.0819%" height="15" fill="rgb(247,223,17)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7453%" y="485" width="0.0819%" height="15" fill="rgb(246,56,7)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7453%" y="469" width="0.0819%" height="15" fill="rgb(240,226,12)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7453%" y="453" width="0.0819%" height="15" fill="rgb(205,87,46)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.7453%" y="437" width="0.0819%" height="15" fill="rgb(245,214,51)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.7453%" y="421" width="0.0819%" height="15" fill="rgb(223,172,33)" fg:x="1108" fg:w="1"/><text x="90.9953%" y="431.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (5 samples, 0.41%)</title><rect x="90.4996%" y="709" width="0.4095%" height="15" fill="rgb(227,203,34)" fg:x="1105" fg:w="5"/><text x="90.7496%" y="719.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="90.8272%" y="693" width="0.0819%" height="15" fill="rgb(248,143,44)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="90.8272%" y="677" width="0.0819%" height="15" fill="rgb(226,162,5)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="90.8272%" y="661" width="0.0819%" height="15" fill="rgb(211,143,1)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="90.8272%" y="645" width="0.0819%" height="15" fill="rgb(224,96,15)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.8272%" y="629" width="0.0819%" height="15" fill="rgb(222,4,38)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.8272%" y="613" width="0.0819%" height="15" fill="rgb(253,228,15)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.8272%" y="597" width="0.0819%" height="15" fill="rgb(242,194,12)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="90.8272%" y="581" width="0.0819%" height="15" fill="rgb(214,177,31)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="90.8272%" y="565" width="0.0819%" height="15" fill="rgb(226,58,51)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.8272%" y="549" width="0.0819%" height="15" fill="rgb(250,119,16)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.8272%" y="533" width="0.0819%" height="15" fill="rgb(223,128,53)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="90.8272%" y="517" width="0.0819%" height="15" fill="rgb(251,199,15)" fg:x="1109" fg:w="1"/><text x="91.0772%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.2367%" y="597" width="0.0819%" height="15" fill="rgb(235,168,42)" fg:x="1114" fg:w="1"/><text x="91.4867%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.2367%" y="581" width="0.0819%" height="15" fill="rgb(250,210,17)" fg:x="1114" fg:w="1"/><text x="91.4867%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.33%)</title><rect x="91.2367%" y="613" width="0.3276%" height="15" fill="rgb(226,36,41)" fg:x="1114" fg:w="4"/><text x="91.4867%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.25%)</title><rect x="91.3186%" y="597" width="0.2457%" height="15" fill="rgb(225,87,10)" fg:x="1115" fg:w="3"/><text x="91.5686%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="91.0729%" y="629" width="0.5733%" height="15" fill="rgb(228,83,9)" fg:x="1112" fg:w="7"/><text x="91.3229%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="91.5643%" y="613" width="0.0819%" height="15" fill="rgb(225,16,36)" fg:x="1118" fg:w="1"/><text x="91.8143%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.5643%" y="597" width="0.0819%" height="15" fill="rgb(242,198,13)" fg:x="1118" fg:w="1"/><text x="91.8143%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5643%" y="581" width="0.0819%" height="15" fill="rgb(239,25,51)" fg:x="1118" fg:w="1"/><text x="91.8143%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.06%)</title><rect x="90.9091%" y="645" width="1.0647%" height="15" fill="rgb(239,28,37)" fg:x="1110" fg:w="13"/><text x="91.1591%" y="655.50"></text></g><g><title>__libc_free (4 samples, 0.33%)</title><rect x="91.6462%" y="629" width="0.3276%" height="15" fill="rgb(234,70,17)" fg:x="1119" fg:w="4"/><text x="91.8962%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (15 samples, 1.23%)</title><rect x="90.9091%" y="677" width="1.2285%" height="15" fill="rgb(231,215,53)" fg:x="1110" fg:w="15"/><text x="91.1591%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.23%)</title><rect x="90.9091%" y="661" width="1.2285%" height="15" fill="rgb(218,140,42)" fg:x="1110" fg:w="15"/><text x="91.1591%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.9738%" y="645" width="0.1638%" height="15" fill="rgb(233,227,45)" fg:x="1123" fg:w="2"/><text x="92.2238%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.1376%" y="645" width="0.0819%" height="15" fill="rgb(225,189,21)" fg:x="1125" fg:w="1"/><text x="92.3876%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="92.1376%" y="629" width="0.0819%" height="15" fill="rgb(237,176,54)" fg:x="1125" fg:w="1"/><text x="92.3876%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="92.1376%" y="613" width="0.0819%" height="15" fill="rgb(215,131,46)" fg:x="1125" fg:w="1"/><text x="92.3876%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.1376%" y="597" width="0.0819%" height="15" fill="rgb(218,95,20)" fg:x="1125" fg:w="1"/><text x="92.3876%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="92.2195%" y="645" width="0.0819%" height="15" fill="rgb(208,198,12)" fg:x="1126" fg:w="1"/><text x="92.4695%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="92.2195%" y="629" width="0.0819%" height="15" fill="rgb(239,107,50)" fg:x="1126" fg:w="1"/><text x="92.4695%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.3014%" y="645" width="0.0819%" height="15" fill="rgb(240,217,37)" fg:x="1127" fg:w="1"/><text x="92.5514%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="92.3014%" y="629" width="0.0819%" height="15" fill="rgb(242,197,49)" fg:x="1127" fg:w="1"/><text x="92.5514%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.5471%" y="565" width="0.0819%" height="15" fill="rgb(219,171,17)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="92.5471%" y="549" width="0.0819%" height="15" fill="rgb(209,81,40)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="559.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="92.5471%" y="533" width="0.0819%" height="15" fill="rgb(237,156,30)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="92.5471%" y="517" width="0.0819%" height="15" fill="rgb(212,127,16)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="92.5471%" y="501" width="0.0819%" height="15" fill="rgb(226,66,32)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="92.5471%" y="485" width="0.0819%" height="15" fill="rgb(245,22,46)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5471%" y="469" width="0.0819%" height="15" fill="rgb(210,112,21)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5471%" y="453" width="0.0819%" height="15" fill="rgb(207,118,39)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5471%" y="437" width="0.0819%" height="15" fill="rgb(205,206,35)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.5471%" y="421" width="0.0819%" height="15" fill="rgb(222,120,2)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.5471%" y="405" width="0.0819%" height="15" fill="rgb(205,38,18)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.5471%" y="389" width="0.0819%" height="15" fill="rgb(226,61,2)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5471%" y="373" width="0.0819%" height="15" fill="rgb(242,161,23)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5471%" y="357" width="0.0819%" height="15" fill="rgb(213,13,52)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.5471%" y="341" width="0.0819%" height="15" fill="rgb(246,209,47)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.5471%" y="325" width="0.0819%" height="15" fill="rgb(214,41,3)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.5471%" y="309" width="0.0819%" height="15" fill="rgb(236,119,38)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.5471%" y="293" width="0.0819%" height="15" fill="rgb(218,50,11)" fg:x="1130" fg:w="1"/><text x="92.7971%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.7109%" y="549" width="0.0819%" height="15" fill="rgb(228,38,11)" fg:x="1132" fg:w="1"/><text x="92.9609%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.7109%" y="533" width="0.0819%" height="15" fill="rgb(212,13,9)" fg:x="1132" fg:w="1"/><text x="92.9609%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7109%" y="517" width="0.0819%" height="15" fill="rgb(208,211,9)" fg:x="1132" fg:w="1"/><text x="92.9609%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7928%" y="469" width="0.0819%" height="15" fill="rgb(239,39,32)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7928%" y="453" width="0.0819%" height="15" fill="rgb(254,179,26)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7928%" y="437" width="0.0819%" height="15" fill="rgb(249,165,28)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.7928%" y="421" width="0.0819%" height="15" fill="rgb(225,59,50)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.7928%" y="405" width="0.0819%" height="15" fill="rgb(209,122,5)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.7928%" y="389" width="0.0819%" height="15" fill="rgb(214,65,34)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.7928%" y="373" width="0.0819%" height="15" fill="rgb(249,183,32)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.7928%" y="357" width="0.0819%" height="15" fill="rgb(218,122,24)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.7928%" y="341" width="0.0819%" height="15" fill="rgb(224,109,18)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.7928%" y="325" width="0.0819%" height="15" fill="rgb(210,68,50)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.7928%" y="309" width="0.0819%" height="15" fill="rgb(212,184,34)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.7928%" y="293" width="0.0819%" height="15" fill="rgb(238,105,48)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7928%" y="277" width="0.0819%" height="15" fill="rgb(222,134,54)" fg:x="1133" fg:w="1"/><text x="93.0428%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.49%)</title><rect x="92.5471%" y="581" width="0.4914%" height="15" fill="rgb(246,24,43)" fg:x="1130" fg:w="6"/><text x="92.7971%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="92.6290%" y="565" width="0.4095%" height="15" fill="rgb(227,169,22)" fg:x="1131" fg:w="5"/><text x="92.8790%" y="575.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (3 samples, 0.25%)</title><rect x="92.7928%" y="549" width="0.2457%" height="15" fill="rgb(253,152,4)" fg:x="1133" fg:w="3"/><text x="93.0428%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (3 samples, 0.25%)</title><rect x="92.7928%" y="533" width="0.2457%" height="15" fill="rgb(219,158,36)" fg:x="1133" fg:w="3"/><text x="93.0428%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.25%)</title><rect x="92.7928%" y="517" width="0.2457%" height="15" fill="rgb(251,128,40)" fg:x="1133" fg:w="3"/><text x="93.0428%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.25%)</title><rect x="92.7928%" y="501" width="0.2457%" height="15" fill="rgb(254,101,39)" fg:x="1133" fg:w="3"/><text x="93.0428%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.25%)</title><rect x="92.7928%" y="485" width="0.2457%" height="15" fill="rgb(221,168,40)" fg:x="1133" fg:w="3"/><text x="93.0428%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="92.8747%" y="469" width="0.1638%" height="15" fill="rgb(221,14,27)" fg:x="1134" fg:w="2"/><text x="93.1247%" y="479.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="92.8747%" y="453" width="0.1638%" height="15" fill="rgb(207,36,43)" fg:x="1134" fg:w="2"/><text x="93.1247%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.8747%" y="437" width="0.1638%" height="15" fill="rgb(240,172,53)" fg:x="1134" fg:w="2"/><text x="93.1247%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.8747%" y="421" width="0.1638%" height="15" fill="rgb(241,138,43)" fg:x="1134" fg:w="2"/><text x="93.1247%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.9566%" y="405" width="0.0819%" height="15" fill="rgb(227,78,19)" fg:x="1135" fg:w="1"/><text x="93.2066%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.9566%" y="389" width="0.0819%" height="15" fill="rgb(215,127,44)" fg:x="1135" fg:w="1"/><text x="93.2066%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9566%" y="373" width="0.0819%" height="15" fill="rgb(227,13,10)" fg:x="1135" fg:w="1"/><text x="93.2066%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9566%" y="357" width="0.0819%" height="15" fill="rgb(249,177,6)" fg:x="1135" fg:w="1"/><text x="93.2066%" y="367.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (8 samples, 0.66%)</title><rect x="92.4652%" y="597" width="0.6552%" height="15" fill="rgb(215,154,26)" fg:x="1129" fg:w="8"/><text x="92.7152%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="93.0385%" y="581" width="0.0819%" height="15" fill="rgb(250,168,20)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="93.0385%" y="565" width="0.0819%" height="15" fill="rgb(222,53,38)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="93.0385%" y="549" width="0.0819%" height="15" fill="rgb(245,154,5)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="93.0385%" y="533" width="0.0819%" height="15" fill="rgb(214,89,50)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.0385%" y="517" width="0.0819%" height="15" fill="rgb(232,73,14)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="93.0385%" y="501" width="0.0819%" height="15" fill="rgb(230,101,20)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="93.0385%" y="485" width="0.0819%" height="15" fill="rgb(208,56,28)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="93.0385%" y="469" width="0.0819%" height="15" fill="rgb(247,205,22)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.0385%" y="453" width="0.0819%" height="15" fill="rgb(252,109,51)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.0385%" y="437" width="0.0819%" height="15" fill="rgb(220,40,24)" fg:x="1136" fg:w="1"/><text x="93.2885%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.25%)</title><rect x="93.2023%" y="517" width="0.2457%" height="15" fill="rgb(251,108,7)" fg:x="1138" fg:w="3"/><text x="93.4523%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.2842%" y="501" width="0.1638%" height="15" fill="rgb(238,102,51)" fg:x="1139" fg:w="2"/><text x="93.5342%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3661%" y="485" width="0.0819%" height="15" fill="rgb(219,149,34)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.3661%" y="469" width="0.0819%" height="15" fill="rgb(239,70,0)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.3661%" y="453" width="0.0819%" height="15" fill="rgb(246,214,23)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.3661%" y="437" width="0.0819%" height="15" fill="rgb(239,221,51)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3661%" y="421" width="0.0819%" height="15" fill="rgb(254,62,14)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3661%" y="405" width="0.0819%" height="15" fill="rgb(253,57,33)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.3661%" y="389" width="0.0819%" height="15" fill="rgb(229,34,6)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.3661%" y="373" width="0.0819%" height="15" fill="rgb(235,191,23)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.3661%" y="357" width="0.0819%" height="15" fill="rgb(217,207,27)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.3661%" y="341" width="0.0819%" height="15" fill="rgb(232,41,44)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3661%" y="325" width="0.0819%" height="15" fill="rgb(221,188,19)" fg:x="1140" fg:w="1"/><text x="93.6161%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.33%)</title><rect x="93.2023%" y="533" width="0.3276%" height="15" fill="rgb(245,180,45)" fg:x="1138" fg:w="4"/><text x="93.4523%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="93.4480%" y="517" width="0.0819%" height="15" fill="rgb(250,220,42)" fg:x="1141" fg:w="1"/><text x="93.6980%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="93.4480%" y="501" width="0.0819%" height="15" fill="rgb(234,16,34)" fg:x="1141" fg:w="1"/><text x="93.6980%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="93.2023%" y="549" width="0.4095%" height="15" fill="rgb(233,217,23)" fg:x="1138" fg:w="5"/><text x="93.4523%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5299%" y="533" width="0.0819%" height="15" fill="rgb(209,22,46)" fg:x="1142" fg:w="1"/><text x="93.7799%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.6937%" y="469" width="0.0819%" height="15" fill="rgb(213,101,18)" fg:x="1144" fg:w="1"/><text x="93.9437%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.0213%" y="325" width="0.0819%" height="15" fill="rgb(215,179,52)" fg:x="1148" fg:w="1"/><text x="94.2713%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.0213%" y="309" width="0.0819%" height="15" fill="rgb(223,50,25)" fg:x="1148" fg:w="1"/><text x="94.2713%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.0213%" y="293" width="0.0819%" height="15" fill="rgb(224,51,44)" fg:x="1148" fg:w="1"/><text x="94.2713%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.0213%" y="277" width="0.0819%" height="15" fill="rgb(224,13,54)" fg:x="1148" fg:w="1"/><text x="94.2713%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.0213%" y="373" width="0.1638%" height="15" fill="rgb(219,58,47)" fg:x="1148" fg:w="2"/><text x="94.2713%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.0213%" y="357" width="0.1638%" height="15" fill="rgb(246,124,34)" fg:x="1148" fg:w="2"/><text x="94.2713%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.0213%" y="341" width="0.1638%" height="15" fill="rgb(245,109,25)" fg:x="1148" fg:w="2"/><text x="94.2713%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1032%" y="325" width="0.0819%" height="15" fill="rgb(235,48,23)" fg:x="1149" fg:w="1"/><text x="94.3532%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1032%" y="309" width="0.0819%" height="15" fill="rgb(229,203,36)" fg:x="1149" fg:w="1"/><text x="94.3532%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.1032%" y="293" width="0.0819%" height="15" fill="rgb(234,180,9)" fg:x="1149" fg:w="1"/><text x="94.3532%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (9 samples, 0.74%)</title><rect x="93.7756%" y="437" width="0.7371%" height="15" fill="rgb(228,98,45)" fg:x="1145" fg:w="9"/><text x="94.0256%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (9 samples, 0.74%)</title><rect x="93.7756%" y="421" width="0.7371%" height="15" fill="rgb(240,24,36)" fg:x="1145" fg:w="9"/><text x="94.0256%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.74%)</title><rect x="93.7756%" y="405" width="0.7371%" height="15" fill="rgb(227,154,19)" fg:x="1145" fg:w="9"/><text x="94.0256%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.74%)</title><rect x="93.7756%" y="389" width="0.7371%" height="15" fill="rgb(231,2,48)" fg:x="1145" fg:w="9"/><text x="94.0256%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="94.1851%" y="373" width="0.3276%" height="15" fill="rgb(219,216,0)" fg:x="1150" fg:w="4"/><text x="94.4351%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="94.1851%" y="357" width="0.3276%" height="15" fill="rgb(251,88,0)" fg:x="1150" fg:w="4"/><text x="94.4351%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="94.1851%" y="341" width="0.3276%" height="15" fill="rgb(242,45,45)" fg:x="1150" fg:w="4"/><text x="94.4351%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="94.1851%" y="325" width="0.3276%" height="15" fill="rgb(218,149,45)" fg:x="1150" fg:w="4"/><text x="94.4351%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4308%" y="309" width="0.0819%" height="15" fill="rgb(247,194,10)" fg:x="1153" fg:w="1"/><text x="94.6808%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4308%" y="293" width="0.0819%" height="15" fill="rgb(234,33,37)" fg:x="1153" fg:w="1"/><text x="94.6808%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.4308%" y="277" width="0.0819%" height="15" fill="rgb(218,61,13)" fg:x="1153" fg:w="1"/><text x="94.6808%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4308%" y="261" width="0.0819%" height="15" fill="rgb(210,80,52)" fg:x="1153" fg:w="1"/><text x="94.6808%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5127%" y="357" width="0.0819%" height="15" fill="rgb(218,203,27)" fg:x="1154" fg:w="1"/><text x="94.7627%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5127%" y="341" width="0.0819%" height="15" fill="rgb(209,126,33)" fg:x="1154" fg:w="1"/><text x="94.7627%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5127%" y="325" width="0.0819%" height="15" fill="rgb(234,173,41)" fg:x="1154" fg:w="1"/><text x="94.7627%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (13 samples, 1.06%)</title><rect x="93.6118%" y="549" width="1.0647%" height="15" fill="rgb(228,166,9)" fg:x="1143" fg:w="13"/><text x="93.8618%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.98%)</title><rect x="93.6937%" y="533" width="0.9828%" height="15" fill="rgb(208,124,43)" fg:x="1144" fg:w="12"/><text x="93.9437%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.98%)</title><rect x="93.6937%" y="517" width="0.9828%" height="15" fill="rgb(212,154,38)" fg:x="1144" fg:w="12"/><text x="93.9437%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.98%)</title><rect x="93.6937%" y="501" width="0.9828%" height="15" fill="rgb(246,179,35)" fg:x="1144" fg:w="12"/><text x="93.9437%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.98%)</title><rect x="93.6937%" y="485" width="0.9828%" height="15" fill="rgb(251,3,50)" fg:x="1144" fg:w="12"/><text x="93.9437%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.90%)</title><rect x="93.7756%" y="469" width="0.9009%" height="15" fill="rgb(219,96,8)" fg:x="1145" fg:w="11"/><text x="94.0256%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.90%)</title><rect x="93.7756%" y="453" width="0.9009%" height="15" fill="rgb(251,216,33)" fg:x="1145" fg:w="11"/><text x="94.0256%" y="463.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="94.5127%" y="437" width="0.1638%" height="15" fill="rgb(243,145,29)" fg:x="1154" fg:w="2"/><text x="94.7627%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.5127%" y="421" width="0.1638%" height="15" fill="rgb(210,75,20)" fg:x="1154" fg:w="2"/><text x="94.7627%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.5127%" y="405" width="0.1638%" height="15" fill="rgb(235,56,8)" fg:x="1154" fg:w="2"/><text x="94.7627%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.5127%" y="389" width="0.1638%" height="15" fill="rgb(226,175,49)" fg:x="1154" fg:w="2"/><text x="94.7627%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.5127%" y="373" width="0.1638%" height="15" fill="rgb(242,204,23)" fg:x="1154" fg:w="2"/><text x="94.7627%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.5946%" y="357" width="0.0819%" height="15" fill="rgb(225,104,24)" fg:x="1155" fg:w="1"/><text x="94.8446%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5946%" y="341" width="0.0819%" height="15" fill="rgb(253,34,1)" fg:x="1155" fg:w="1"/><text x="94.8446%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.5946%" y="325" width="0.0819%" height="15" fill="rgb(233,199,23)" fg:x="1155" fg:w="1"/><text x="94.8446%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.5946%" y="309" width="0.0819%" height="15" fill="rgb(247,7,51)" fg:x="1155" fg:w="1"/><text x="94.8446%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.5946%" y="293" width="0.0819%" height="15" fill="rgb(214,146,12)" fg:x="1155" fg:w="1"/><text x="94.8446%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="94.5946%" y="277" width="0.0819%" height="15" fill="rgb(234,181,43)" fg:x="1155" fg:w="1"/><text x="94.8446%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="94.6765%" y="485" width="0.1638%" height="15" fill="rgb(239,148,6)" fg:x="1156" fg:w="2"/><text x="94.9265%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.6765%" y="469" width="0.1638%" height="15" fill="rgb(206,151,17)" fg:x="1156" fg:w="2"/><text x="94.9265%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.6765%" y="453" width="0.1638%" height="15" fill="rgb(213,215,10)" fg:x="1156" fg:w="2"/><text x="94.9265%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.7584%" y="437" width="0.0819%" height="15" fill="rgb(215,220,44)" fg:x="1157" fg:w="1"/><text x="95.0084%" y="447.50"></text></g><g><title>plugins_core::tools::get_contained_keys (22 samples, 1.80%)</title><rect x="93.1204%" y="597" width="1.8018%" height="15" fill="rgb(245,205,37)" fg:x="1137" fg:w="22"/><text x="93.3704%" y="607.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (22 samples, 1.80%)</title><rect x="93.1204%" y="581" width="1.8018%" height="15" fill="rgb(245,130,43)" fg:x="1137" fg:w="22"/><text x="93.3704%" y="591.50">k..</text></g><g><title>kernel::model::Entity::load_scope (22 samples, 1.80%)</title><rect x="93.1204%" y="565" width="1.8018%" height="15" fill="rgb(231,227,38)" fg:x="1137" fg:w="22"/><text x="93.3704%" y="575.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.25%)</title><rect x="94.6765%" y="549" width="0.2457%" height="15" fill="rgb(233,185,4)" fg:x="1156" fg:w="3"/><text x="94.9265%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="94.6765%" y="533" width="0.2457%" height="15" fill="rgb(224,154,43)" fg:x="1156" fg:w="3"/><text x="94.9265%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.25%)</title><rect x="94.6765%" y="517" width="0.2457%" height="15" fill="rgb(235,156,15)" fg:x="1156" fg:w="3"/><text x="94.9265%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.25%)</title><rect x="94.6765%" y="501" width="0.2457%" height="15" fill="rgb(211,55,43)" fg:x="1156" fg:w="3"/><text x="94.9265%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.8403%" y="485" width="0.0819%" height="15" fill="rgb(247,149,40)" fg:x="1158" fg:w="1"/><text x="95.0903%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 2.70%)</title><rect x="92.3833%" y="629" width="2.7027%" height="15" fill="rgb(232,171,16)" fg:x="1128" fg:w="33"/><text x="92.6333%" y="639.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 2.70%)</title><rect x="92.3833%" y="613" width="2.7027%" height="15" fill="rgb(215,117,49)" fg:x="1128" fg:w="33"/><text x="92.6333%" y="623.50">&lt;c..</text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="94.9222%" y="597" width="0.1638%" height="15" fill="rgb(246,194,11)" fg:x="1159" fg:w="2"/><text x="95.1722%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="94.9222%" y="581" width="0.1638%" height="15" fill="rgb(242,101,44)" fg:x="1159" fg:w="2"/><text x="95.1722%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="94.9222%" y="565" width="0.1638%" height="15" fill="rgb(226,174,6)" fg:x="1159" fg:w="2"/><text x="95.1722%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0041%" y="549" width="0.0819%" height="15" fill="rgb(213,150,20)" fg:x="1160" fg:w="1"/><text x="95.2541%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0041%" y="533" width="0.0819%" height="15" fill="rgb(222,124,42)" fg:x="1160" fg:w="1"/><text x="95.2541%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.0041%" y="517" width="0.0819%" height="15" fill="rgb(250,19,47)" fg:x="1160" fg:w="1"/><text x="95.2541%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.0041%" y="501" width="0.0819%" height="15" fill="rgb(241,217,19)" fg:x="1160" fg:w="1"/><text x="95.2541%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.0041%" y="485" width="0.0819%" height="15" fill="rgb(207,210,34)" fg:x="1160" fg:w="1"/><text x="95.2541%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0041%" y="469" width="0.0819%" height="15" fill="rgb(244,45,4)" fg:x="1160" fg:w="1"/><text x="95.2541%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2498%" y="581" width="0.0819%" height="15" fill="rgb(252,134,50)" fg:x="1163" fg:w="1"/><text x="95.4998%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.2498%" y="565" width="0.0819%" height="15" fill="rgb(238,74,2)" fg:x="1163" fg:w="1"/><text x="95.4998%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.2498%" y="549" width="0.0819%" height="15" fill="rgb(226,58,46)" fg:x="1163" fg:w="1"/><text x="95.4998%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.2498%" y="533" width="0.0819%" height="15" fill="rgb(232,83,35)" fg:x="1163" fg:w="1"/><text x="95.4998%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.2498%" y="517" width="0.0819%" height="15" fill="rgb(212,148,47)" fg:x="1163" fg:w="1"/><text x="95.4998%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="95.3317%" y="581" width="0.0819%" height="15" fill="rgb(235,29,1)" fg:x="1164" fg:w="1"/><text x="95.5817%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="95.3317%" y="565" width="0.0819%" height="15" fill="rgb(247,55,37)" fg:x="1164" fg:w="1"/><text x="95.5817%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.3317%" y="549" width="0.0819%" height="15" fill="rgb(222,48,3)" fg:x="1164" fg:w="1"/><text x="95.5817%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.3317%" y="533" width="0.0819%" height="15" fill="rgb(234,21,33)" fg:x="1164" fg:w="1"/><text x="95.5817%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.3317%" y="517" width="0.0819%" height="15" fill="rgb(247,178,53)" fg:x="1164" fg:w="1"/><text x="95.5817%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.3317%" y="501" width="0.0819%" height="15" fill="rgb(225,75,7)" fg:x="1164" fg:w="1"/><text x="95.5817%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.3317%" y="485" width="0.0819%" height="15" fill="rgb(219,199,7)" fg:x="1164" fg:w="1"/><text x="95.5817%" y="495.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="95.9869%" y="373" width="0.1638%" height="15" fill="rgb(209,93,42)" fg:x="1172" fg:w="2"/><text x="96.2369%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.0688%" y="357" width="0.0819%" height="15" fill="rgb(240,175,17)" fg:x="1173" fg:w="1"/><text x="96.3188%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="96.0688%" y="341" width="0.0819%" height="15" fill="rgb(232,106,7)" fg:x="1173" fg:w="1"/><text x="96.3188%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0688%" y="325" width="0.0819%" height="15" fill="rgb(242,106,43)" fg:x="1173" fg:w="1"/><text x="96.3188%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="95.9050%" y="405" width="0.3276%" height="15" fill="rgb(242,61,37)" fg:x="1171" fg:w="4"/><text x="96.1550%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.33%)</title><rect x="95.9050%" y="389" width="0.3276%" height="15" fill="rgb(205,72,10)" fg:x="1171" fg:w="4"/><text x="96.1550%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.1507%" y="373" width="0.0819%" height="15" fill="rgb(214,184,36)" fg:x="1174" fg:w="1"/><text x="96.4007%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="96.3145%" y="325" width="0.0819%" height="15" fill="rgb(206,107,18)" fg:x="1176" fg:w="1"/><text x="96.5645%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (7 samples, 0.57%)</title><rect x="95.9050%" y="421" width="0.5733%" height="15" fill="rgb(210,75,5)" fg:x="1171" fg:w="7"/><text x="96.1550%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="96.2326%" y="405" width="0.2457%" height="15" fill="rgb(205,3,19)" fg:x="1175" fg:w="3"/><text x="96.4826%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.25%)</title><rect x="96.2326%" y="389" width="0.2457%" height="15" fill="rgb(207,181,42)" fg:x="1175" fg:w="3"/><text x="96.4826%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.25%)</title><rect x="96.2326%" y="373" width="0.2457%" height="15" fill="rgb(229,179,43)" fg:x="1175" fg:w="3"/><text x="96.4826%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="96.2326%" y="357" width="0.2457%" height="15" fill="rgb(246,95,30)" fg:x="1175" fg:w="3"/><text x="96.4826%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.25%)</title><rect x="96.2326%" y="341" width="0.2457%" height="15" fill="rgb(234,144,45)" fg:x="1175" fg:w="3"/><text x="96.4826%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.3964%" y="325" width="0.0819%" height="15" fill="rgb(250,54,25)" fg:x="1177" fg:w="1"/><text x="96.6464%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.3964%" y="309" width="0.0819%" height="15" fill="rgb(215,195,40)" fg:x="1177" fg:w="1"/><text x="96.6464%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.66%)</title><rect x="95.9050%" y="437" width="0.6552%" height="15" fill="rgb(233,188,42)" fg:x="1171" fg:w="8"/><text x="96.1550%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4783%" y="421" width="0.0819%" height="15" fill="rgb(247,227,35)" fg:x="1178" fg:w="1"/><text x="96.7283%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.4783%" y="405" width="0.0819%" height="15" fill="rgb(249,124,27)" fg:x="1178" fg:w="1"/><text x="96.7283%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.74%)</title><rect x="95.9050%" y="469" width="0.7371%" height="15" fill="rgb(219,207,25)" fg:x="1171" fg:w="9"/><text x="96.1550%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.74%)</title><rect x="95.9050%" y="453" width="0.7371%" height="15" fill="rgb(241,216,47)" fg:x="1171" fg:w="9"/><text x="96.1550%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.5602%" y="437" width="0.0819%" height="15" fill="rgb(233,82,50)" fg:x="1179" fg:w="1"/><text x="96.8102%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.98%)</title><rect x="95.7412%" y="485" width="0.9828%" height="15" fill="rgb(232,63,2)" fg:x="1169" fg:w="12"/><text x="95.9912%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.6421%" y="469" width="0.0819%" height="15" fill="rgb(236,184,28)" fg:x="1180" fg:w="1"/><text x="96.8921%" y="479.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (17 samples, 1.39%)</title><rect x="95.5774%" y="517" width="1.3923%" height="15" fill="rgb(254,63,27)" fg:x="1167" fg:w="17"/><text x="95.8274%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (16 samples, 1.31%)</title><rect x="95.6593%" y="501" width="1.3104%" height="15" fill="rgb(253,106,28)" fg:x="1168" fg:w="16"/><text x="95.9093%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.25%)</title><rect x="96.7240%" y="485" width="0.2457%" height="15" fill="rgb(225,141,39)" fg:x="1181" fg:w="3"/><text x="96.9740%" y="495.50"></text></g><g><title>__libc_malloc (3 samples, 0.25%)</title><rect x="96.7240%" y="469" width="0.2457%" height="15" fill="rgb(222,157,20)" fg:x="1181" fg:w="3"/><text x="96.9740%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.9697%" y="517" width="0.0819%" height="15" fill="rgb(210,190,9)" fg:x="1184" fg:w="1"/><text x="97.2197%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.0516%" y="501" width="0.0819%" height="15" fill="rgb(242,167,7)" fg:x="1185" fg:w="1"/><text x="97.3016%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 1.72%)</title><rect x="95.4955%" y="533" width="1.7199%" height="15" fill="rgb(227,82,41)" fg:x="1166" fg:w="21"/><text x="95.7455%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.0516%" y="517" width="0.1638%" height="15" fill="rgb(222,131,13)" fg:x="1185" fg:w="2"/><text x="97.3016%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1335%" y="501" width="0.0819%" height="15" fill="rgb(221,98,26)" fg:x="1186" fg:w="1"/><text x="97.3835%" y="511.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.29%)</title><rect x="95.4136%" y="565" width="2.2932%" height="15" fill="rgb(251,63,52)" fg:x="1165" fg:w="28"/><text x="95.6636%" y="575.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (27 samples, 2.21%)</title><rect x="95.4955%" y="549" width="2.2113%" height="15" fill="rgb(246,25,43)" fg:x="1166" fg:w="27"/><text x="95.7455%" y="559.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.49%)</title><rect x="97.2154%" y="533" width="0.4914%" height="15" fill="rgb(247,167,15)" fg:x="1187" fg:w="6"/><text x="97.4654%" y="543.50"></text></g><g><title>__libc_malloc (6 samples, 0.49%)</title><rect x="97.2154%" y="517" width="0.4914%" height="15" fill="rgb(240,104,42)" fg:x="1187" fg:w="6"/><text x="97.4654%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.7068%" y="517" width="0.1638%" height="15" fill="rgb(224,54,6)" fg:x="1193" fg:w="2"/><text x="97.9568%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="97.8706%" y="517" width="0.3276%" height="15" fill="rgb(244,108,35)" fg:x="1195" fg:w="4"/><text x="98.1206%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1163%" y="501" width="0.0819%" height="15" fill="rgb(216,154,2)" fg:x="1198" fg:w="1"/><text x="98.3663%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.1163%" y="485" width="0.0819%" height="15" fill="rgb(222,8,47)" fg:x="1198" fg:w="1"/><text x="98.3663%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="98.1982%" y="517" width="0.0819%" height="15" fill="rgb(252,93,1)" fg:x="1199" fg:w="1"/><text x="98.4482%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.1982%" y="501" width="0.0819%" height="15" fill="rgb(223,226,51)" fg:x="1199" fg:w="1"/><text x="98.4482%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2801%" y="485" width="0.0819%" height="15" fill="rgb(206,147,9)" fg:x="1200" fg:w="1"/><text x="98.5301%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2801%" y="469" width="0.0819%" height="15" fill="rgb(248,180,41)" fg:x="1200" fg:w="1"/><text x="98.5301%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3620%" y="469" width="0.0819%" height="15" fill="rgb(209,47,50)" fg:x="1201" fg:w="1"/><text x="98.6120%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.25%)</title><rect x="98.2801%" y="517" width="0.2457%" height="15" fill="rgb(243,65,31)" fg:x="1200" fg:w="3"/><text x="98.5301%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.25%)</title><rect x="98.2801%" y="501" width="0.2457%" height="15" fill="rgb(228,128,1)" fg:x="1200" fg:w="3"/><text x="98.5301%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="98.3620%" y="485" width="0.1638%" height="15" fill="rgb(231,192,16)" fg:x="1201" fg:w="2"/><text x="98.6120%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="98.4439%" y="469" width="0.0819%" height="15" fill="rgb(224,26,40)" fg:x="1202" fg:w="1"/><text x="98.6939%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="98.4439%" y="453" width="0.0819%" height="15" fill="rgb(214,192,17)" fg:x="1202" fg:w="1"/><text x="98.6939%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4439%" y="437" width="0.0819%" height="15" fill="rgb(225,147,18)" fg:x="1202" fg:w="1"/><text x="98.6939%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4439%" y="421" width="0.0819%" height="15" fill="rgb(205,35,11)" fg:x="1202" fg:w="1"/><text x="98.6939%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.4439%" y="405" width="0.0819%" height="15" fill="rgb(242,40,42)" fg:x="1202" fg:w="1"/><text x="98.6939%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6077%" y="421" width="0.0819%" height="15" fill="rgb(250,170,13)" fg:x="1204" fg:w="1"/><text x="98.8577%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6077%" y="405" width="0.0819%" height="15" fill="rgb(240,161,28)" fg:x="1204" fg:w="1"/><text x="98.8577%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6077%" y="389" width="0.0819%" height="15" fill="rgb(245,179,12)" fg:x="1204" fg:w="1"/><text x="98.8577%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.6077%" y="437" width="0.1638%" height="15" fill="rgb(250,92,32)" fg:x="1204" fg:w="2"/><text x="98.8577%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="98.6896%" y="421" width="0.0819%" height="15" fill="rgb(233,10,40)" fg:x="1205" fg:w="1"/><text x="98.9396%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6896%" y="405" width="0.0819%" height="15" fill="rgb(217,98,1)" fg:x="1205" fg:w="1"/><text x="98.9396%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.25%)</title><rect x="98.6077%" y="469" width="0.2457%" height="15" fill="rgb(238,202,7)" fg:x="1204" fg:w="3"/><text x="98.8577%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.25%)</title><rect x="98.6077%" y="453" width="0.2457%" height="15" fill="rgb(222,91,3)" fg:x="1204" fg:w="3"/><text x="98.8577%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7715%" y="437" width="0.0819%" height="15" fill="rgb(211,170,49)" fg:x="1206" fg:w="1"/><text x="99.0215%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="98.5258%" y="485" width="0.4095%" height="15" fill="rgb(253,139,18)" fg:x="1203" fg:w="5"/><text x="98.7758%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="98.8534%" y="469" width="0.0819%" height="15" fill="rgb(222,4,43)" fg:x="1207" fg:w="1"/><text x="99.1034%" y="479.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (84 samples, 6.88%)</title><rect x="92.1376%" y="661" width="6.8796%" height="15" fill="rgb(207,205,12)" fg:x="1125" fg:w="84"/><text x="92.3876%" y="671.50">&lt;plugins_..</text></g><g><title>core::iter::adapters::try_process (81 samples, 6.63%)</title><rect x="92.3833%" y="645" width="6.6339%" height="15" fill="rgb(216,159,46)" fg:x="1128" fg:w="81"/><text x="92.6333%" y="655.50">core::ite..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (48 samples, 3.93%)</title><rect x="95.0860%" y="629" width="3.9312%" height="15" fill="rgb(236,115,1)" fg:x="1161" fg:w="48"/><text x="95.3360%" y="639.50">allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 3.85%)</title><rect x="95.1679%" y="613" width="3.8493%" height="15" fill="rgb(251,35,33)" fg:x="1162" fg:w="47"/><text x="95.4179%" y="623.50">&lt;cor..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (47 samples, 3.85%)</title><rect x="95.1679%" y="597" width="3.8493%" height="15" fill="rgb(248,62,51)" fg:x="1162" fg:w="47"/><text x="95.4179%" y="607.50">plug..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (44 samples, 3.60%)</title><rect x="95.4136%" y="581" width="3.6036%" height="15" fill="rgb(254,180,19)" fg:x="1165" fg:w="44"/><text x="95.6636%" y="591.50">&lt;rpc..</text></g><g><title>kernel::model::EntityPtr::to_json_value (16 samples, 1.31%)</title><rect x="97.7068%" y="565" width="1.3104%" height="15" fill="rgb(217,100,32)" fg:x="1193" fg:w="16"/><text x="97.9568%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (16 samples, 1.31%)</title><rect x="97.7068%" y="549" width="1.3104%" height="15" fill="rgb(224,71,22)" fg:x="1193" fg:w="16"/><text x="97.9568%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.31%)</title><rect x="97.7068%" y="533" width="1.3104%" height="15" fill="rgb(251,185,33)" fg:x="1193" fg:w="16"/><text x="97.9568%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="98.5258%" y="517" width="0.4914%" height="15" fill="rgb(209,75,48)" fg:x="1203" fg:w="6"/><text x="98.7758%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.49%)</title><rect x="98.5258%" y="501" width="0.4914%" height="15" fill="rgb(253,190,16)" fg:x="1203" fg:w="6"/><text x="98.7758%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="98.9353%" y="485" width="0.0819%" height="15" fill="rgb(226,140,1)" fg:x="1208" fg:w="1"/><text x="99.1853%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9353%" y="469" width="0.0819%" height="15" fill="rgb(206,75,30)" fg:x="1208" fg:w="1"/><text x="99.1853%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.0172%" y="661" width="0.0819%" height="15" fill="rgb(231,208,37)" fg:x="1209" fg:w="1"/><text x="99.2672%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.0172%" y="645" width="0.0819%" height="15" fill="rgb(238,136,40)" fg:x="1209" fg:w="1"/><text x="99.2672%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.0172%" y="629" width="0.0819%" height="15" fill="rgb(247,137,17)" fg:x="1209" fg:w="1"/><text x="99.2672%" y="639.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (107 samples, 8.76%)</title><rect x="90.4177%" y="725" width="8.7633%" height="15" fill="rgb(240,60,40)" fg:x="1104" fg:w="107"/><text x="90.6677%" y="735.50">&lt;engine::per..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (101 samples, 8.27%)</title><rect x="90.9091%" y="709" width="8.2719%" height="15" fill="rgb(236,68,50)" fg:x="1110" fg:w="101"/><text x="91.1591%" y="719.50">kernel::plug..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (101 samples, 8.27%)</title><rect x="90.9091%" y="693" width="8.2719%" height="15" fill="rgb(230,42,12)" fg:x="1110" fg:w="101"/><text x="91.1591%" y="703.50">&lt;plugins_dyn..</text></g><g><title>plugins_rpc::querying::have_surroundings (86 samples, 7.04%)</title><rect x="92.1376%" y="677" width="7.0434%" height="15" fill="rgb(219,16,16)" fg:x="1125" fg:w="86"/><text x="92.3876%" y="687.50">plugins_r..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.0991%" y="661" width="0.0819%" height="15" fill="rgb(220,38,35)" fg:x="1210" fg:w="1"/><text x="99.3491%" y="671.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="99.1810%" y="677" width="0.0819%" height="15" fill="rgb(228,33,1)" fg:x="1211" fg:w="1"/><text x="99.4310%" y="687.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="99.1810%" y="661" width="0.0819%" height="15" fill="rgb(241,46,31)" fg:x="1211" fg:w="1"/><text x="99.4310%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.2629%" y="597" width="0.0819%" height="15" fill="rgb(232,58,20)" fg:x="1212" fg:w="1"/><text x="99.5129%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="99.3448%" y="565" width="0.1638%" height="15" fill="rgb(206,228,53)" fg:x="1213" fg:w="2"/><text x="99.5948%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.4267%" y="549" width="0.0819%" height="15" fill="rgb(206,88,33)" fg:x="1214" fg:w="1"/><text x="99.6767%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.33%)</title><rect x="99.2629%" y="661" width="0.3276%" height="15" fill="rgb(238,69,7)" fg:x="1212" fg:w="4"/><text x="99.5129%" y="671.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.33%)</title><rect x="99.2629%" y="645" width="0.3276%" height="15" fill="rgb(250,21,46)" fg:x="1212" fg:w="4"/><text x="99.5129%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="99.2629%" y="629" width="0.3276%" height="15" fill="rgb(215,212,21)" fg:x="1212" fg:w="4"/><text x="99.5129%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="99.2629%" y="613" width="0.3276%" height="15" fill="rgb(211,35,12)" fg:x="1212" fg:w="4"/><text x="99.5129%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.25%)</title><rect x="99.3448%" y="597" width="0.2457%" height="15" fill="rgb(231,184,16)" fg:x="1213" fg:w="3"/><text x="99.5948%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.25%)</title><rect x="99.3448%" y="581" width="0.2457%" height="15" fill="rgb(242,140,15)" fg:x="1213" fg:w="3"/><text x="99.5948%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5086%" y="565" width="0.0819%" height="15" fill="rgb(220,37,14)" fg:x="1215" fg:w="1"/><text x="99.7586%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5086%" y="549" width="0.0819%" height="15" fill="rgb(223,146,22)" fg:x="1215" fg:w="1"/><text x="99.7586%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5086%" y="533" width="0.0819%" height="15" fill="rgb(216,132,15)" fg:x="1215" fg:w="1"/><text x="99.7586%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5086%" y="517" width="0.0819%" height="15" fill="rgb(248,83,5)" fg:x="1215" fg:w="1"/><text x="99.7586%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5086%" y="501" width="0.0819%" height="15" fill="rgb(231,206,48)" fg:x="1215" fg:w="1"/><text x="99.7586%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.5086%" y="485" width="0.0819%" height="15" fill="rgb(253,185,37)" fg:x="1215" fg:w="1"/><text x="99.7586%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.5905%" y="613" width="0.0819%" height="15" fill="rgb(208,21,44)" fg:x="1216" fg:w="1"/><text x="99.8405%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.57%)</title><rect x="99.1810%" y="709" width="0.5733%" height="15" fill="rgb(236,125,4)" fg:x="1211" fg:w="7"/><text x="99.4310%" y="719.50"></text></g><g><title>engine::internal::Entities::prepare_entity (7 samples, 0.57%)</title><rect x="99.1810%" y="693" width="0.5733%" height="15" fill="rgb(226,134,25)" fg:x="1211" fg:w="7"/><text x="99.4310%" y="703.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.49%)</title><rect x="99.2629%" y="677" width="0.4914%" height="15" fill="rgb(250,201,12)" fg:x="1212" fg:w="6"/><text x="99.5129%" y="687.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.5905%" y="661" width="0.1638%" height="15" fill="rgb(225,92,18)" fg:x="1216" fg:w="2"/><text x="99.8405%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.5905%" y="645" width="0.1638%" height="15" fill="rgb(227,35,22)" fg:x="1216" fg:w="2"/><text x="99.8405%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.5905%" y="629" width="0.1638%" height="15" fill="rgb(214,180,52)" fg:x="1216" fg:w="2"/><text x="99.8405%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.6724%" y="613" width="0.0819%" height="15" fill="rgb(233,55,38)" fg:x="1217" fg:w="1"/><text x="99.9224%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6724%" y="597" width="0.0819%" height="15" fill="rgb(249,171,43)" fg:x="1217" fg:w="1"/><text x="99.9224%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.6724%" y="581" width="0.0819%" height="15" fill="rgb(239,87,2)" fg:x="1217" fg:w="1"/><text x="99.9224%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6724%" y="565" width="0.0819%" height="15" fill="rgb(248,141,5)" fg:x="1217" fg:w="1"/><text x="99.9224%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.6724%" y="549" width="0.0819%" height="15" fill="rgb(238,33,42)" fg:x="1217" fg:w="1"/><text x="99.9224%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6724%" y="533" width="0.0819%" height="15" fill="rgb(231,57,19)" fg:x="1217" fg:w="1"/><text x="99.9224%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (115 samples, 9.42%)</title><rect x="90.4177%" y="757" width="9.4185%" height="15" fill="rgb(214,78,53)" fg:x="1104" fg:w="115"/><text x="90.6677%" y="767.50">&lt;plugins_core..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (115 samples, 9.42%)</title><rect x="90.4177%" y="741" width="9.4185%" height="15" fill="rgb(206,132,29)" fg:x="1104" fg:w="115"/><text x="90.6677%" y="751.50">&lt;engine::perf..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (8 samples, 0.66%)</title><rect x="99.1810%" y="725" width="0.6552%" height="15" fill="rgb(248,174,31)" fg:x="1211" fg:w="8"/><text x="99.4310%" y="735.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="99.7543%" y="709" width="0.0819%" height="15" fill="rgb(221,87,13)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="99.7543%" y="693" width="0.0819%" height="15" fill="rgb(223,197,17)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.7543%" y="677" width="0.0819%" height="15" fill="rgb(220,144,50)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.7543%" y="661" width="0.0819%" height="15" fill="rgb(244,201,11)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.7543%" y="645" width="0.0819%" height="15" fill="rgb(249,81,34)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7543%" y="629" width="0.0819%" height="15" fill="rgb(205,161,12)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7543%" y="613" width="0.0819%" height="15" fill="rgb(252,139,50)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7543%" y="597" width="0.0819%" height="15" fill="rgb(205,169,14)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7543%" y="581" width="0.0819%" height="15" fill="rgb(248,198,33)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7543%" y="565" width="0.0819%" height="15" fill="rgb(236,23,21)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7543%" y="549" width="0.0819%" height="15" fill="rgb(231,13,38)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7543%" y="533" width="0.0819%" height="15" fill="rgb(239,139,21)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7543%" y="517" width="0.0819%" height="15" fill="rgb(222,164,45)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7543%" y="501" width="0.0819%" height="15" fill="rgb(230,52,27)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7543%" y="485" width="0.0819%" height="15" fill="rgb(227,143,42)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.7543%" y="469" width="0.0819%" height="15" fill="rgb(249,127,1)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.7543%" y="453" width="0.0819%" height="15" fill="rgb(243,107,26)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.7543%" y="437" width="0.0819%" height="15" fill="rgb(225,7,45)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.7543%" y="421" width="0.0819%" height="15" fill="rgb(241,88,38)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.7543%" y="405" width="0.0819%" height="15" fill="rgb(226,121,9)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.7543%" y="389" width="0.0819%" height="15" fill="rgb(253,60,29)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.7543%" y="373" width="0.0819%" height="15" fill="rgb(244,181,39)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.7543%" y="357" width="0.0819%" height="15" fill="rgb(252,203,31)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.7543%" y="341" width="0.0819%" height="15" fill="rgb(224,120,8)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.7543%" y="325" width="0.0819%" height="15" fill="rgb(205,171,54)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.7543%" y="309" width="0.0819%" height="15" fill="rgb(235,89,11)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="99.7543%" y="293" width="0.0819%" height="15" fill="rgb(212,180,28)" fg:x="1218" fg:w="1"/><text x="100.0043%" y="303.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="99.8362%" y="757" width="0.0819%" height="15" fill="rgb(247,84,49)" fg:x="1219" fg:w="1"/><text x="100.0862%" y="767.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8362%" y="741" width="0.0819%" height="15" fill="rgb(236,187,52)" fg:x="1219" fg:w="1"/><text x="100.0862%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.8362%" y="725" width="0.0819%" height="15" fill="rgb(227,24,15)" fg:x="1219" fg:w="1"/><text x="100.0862%" y="735.50"></text></g><g><title>all (1,221 samples, 100%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(227,211,13)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1199.50"></text></g><g><title>simple-bd24e590 (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(245,52,14)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1183.50">simple-bd24e590</text></g><g><title>_start (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(225,185,13)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1167.50">_start</text></g><g><title>__libc_start_main (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(217,160,29)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1151.50">__libc_start_main</text></g><g><title>main (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(216,115,53)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1135.50">main</text></g><g><title>std::rt::lang_start_internal (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(236,99,5)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1119.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(222,60,38)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1103.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(212,82,22)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1087.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(214,48,28)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1071.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(245,196,50)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1055.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(225,159,46)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,221 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(207,195,48)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,221 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(240,73,3)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="1007.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,221 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(245,57,23)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="991.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,221 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(240,75,18)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="975.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,221 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(238,168,12)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="959.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,221 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(226,20,40)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="943.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,221 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(224,130,35)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="927.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,221 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(225,63,41)" fg:x="0" fg:w="1221"/><text x="0.2500%" y="911.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (255 samples, 20.88%)</title><rect x="79.1155%" y="885" width="20.8845%" height="15" fill="rgb(219,3,3)" fg:x="966" fg:w="255"/><text x="79.3655%" y="895.50">&lt;criterion::routine::Function&lt;M,F..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (255 samples, 20.88%)</title><rect x="79.1155%" y="869" width="20.8845%" height="15" fill="rgb(218,157,4)" fg:x="966" fg:w="255"/><text x="79.3655%" y="879.50">criterion::bencher::Bencher&lt;M&gt;::i..</text></g><g><title>tests::evaluate_text_in_new_domain (255 samples, 20.88%)</title><rect x="79.1155%" y="853" width="20.8845%" height="15" fill="rgb(232,76,36)" fg:x="966" fg:w="255"/><text x="79.3655%" y="863.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (117 samples, 9.58%)</title><rect x="90.4177%" y="837" width="9.5823%" height="15" fill="rgb(247,36,0)" fg:x="1104" fg:w="117"/><text x="90.6677%" y="847.50">engine::sessio..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (117 samples, 9.58%)</title><rect x="90.4177%" y="821" width="9.5823%" height="15" fill="rgb(205,2,34)" fg:x="1104" fg:w="117"/><text x="90.6677%" y="831.50">engine::perfor..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (117 samples, 9.58%)</title><rect x="90.4177%" y="805" width="9.5823%" height="15" fill="rgb(239,136,13)" fg:x="1104" fg:w="117"/><text x="90.6677%" y="815.50">&lt;kernel::plugi..</text></g><g><title>core::iter::adapters::try_process (117 samples, 9.58%)</title><rect x="90.4177%" y="789" width="9.5823%" height="15" fill="rgb(253,122,12)" fg:x="1104" fg:w="117"/><text x="90.6677%" y="799.50">core::iter::ad..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (117 samples, 9.58%)</title><rect x="90.4177%" y="773" width="9.5823%" height="15" fill="rgb(222,174,7)" fg:x="1104" fg:w="117"/><text x="90.6677%" y="783.50">&lt;alloc::vec::V..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="99.9181%" y="757" width="0.0819%" height="15" fill="rgb(208,191,42)" fg:x="1220" fg:w="1"/><text x="100.1681%" y="767.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9181%" y="741" width="0.0819%" height="15" fill="rgb(237,212,15)" fg:x="1220" fg:w="1"/><text x="100.1681%" y="751.50"></text></g><g><title>plugins_dynlib::DynamicPlugin::push_messages_to_all (1 samples, 0.08%)</title><rect x="99.9181%" y="725" width="0.0819%" height="15" fill="rgb(215,65,20)" fg:x="1220" fg:w="1"/><text x="100.1681%" y="735.50"></text></g></svg></svg>